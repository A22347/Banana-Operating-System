
packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <bringBackToTextMode()>:
100004ee:	55                   	push   ebp
100004ef:	89 e5                	mov    ebp,esp
100004f1:	83 ec 18             	sub    esp,0x18
100004f4:	a1 00 00 00 00       	mov    eax,ds:0x0	100004f5: R_386_32	kernelProcess
100004f9:	8b 80 12 05 00 00    	mov    eax,DWORD PTR [eax+0x512]
100004ff:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000502:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000505:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000508:	0f 22 d8             	mov    cr3,eax
1000050b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000050c: R_386_32	kernelProcess
10000510:	8b 80 12 05 00 00    	mov    eax,DWORD PTR [eax+0x512]
10000516:	83 ec 0c             	sub    esp,0xc
10000519:	6a 07                	push   0x7
1000051b:	68 00 01 00 00       	push   0x100
10000520:	6a 00                	push   0x0
10000522:	6a 00                	push   0x0
10000524:	50                   	push   eax
10000525:	e8 fc ff ff ff       	call   10000526 <bringBackToTextMode()+0x38>	10000526: R_386_PC32	VAS::mapRange(unsigned long, unsigned long, int, int)
1000052a:	83 c4 20             	add    esp,0x20
1000052d:	83 ec 0c             	sub    esp,0xc
10000530:	68 e8 08 00 10       	push   0x100008e8	10000531: R_386_32	.text
10000535:	e8 fc ff ff ff       	call   10000536 <bringBackToTextMode()+0x48>	10000536: R_386_PC32	Dbg::kprintf(char const*, ...)
1000053a:	83 c4 10             	add    esp,0x10
1000053d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000053e: R_386_32	biosbsodLen
10000542:	83 ec 08             	sub    esp,0x8
10000545:	6a 00                	push   0x0
10000547:	6a 00                	push   0x0
10000549:	68 90 00 00 00       	push   0x90
1000054e:	6a 00                	push   0x0
10000550:	50                   	push   eax
10000551:	68 00 00 00 00       	push   0x0	10000552: R_386_32	biosbsod
10000556:	e8 fc ff ff ff       	call   10000557 <bringBackToTextMode()+0x69>	10000557: R_386_PC32	Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
1000055b:	83 c4 20             	add    esp,0x20
1000055e:	e8 fc ff ff ff       	call   1000055f <bringBackToTextMode()+0x71>	1000055f: R_386_PC32	Vm::finish8086()
10000563:	83 ec 0c             	sub    esp,0xc
10000566:	68 05 09 00 10       	push   0x10000905	10000567: R_386_32	.text
1000056b:	e8 fc ff ff ff       	call   1000056c <bringBackToTextMode()+0x7e>	1000056c: R_386_PC32	Dbg::kprintf(char const*, ...)
10000570:	83 c4 10             	add    esp,0x10
10000573:	90                   	nop
10000574:	c9                   	leave  
10000575:	c3                   	ret    

10000576 <setupTextMode()>:
10000576:	55                   	push   ebp
10000577:	89 e5                	mov    ebp,esp
10000579:	53                   	push   ebx
1000057a:	83 ec 24             	sub    esp,0x24
1000057d:	b8 10 04 00 00       	mov    eax,0x410
10000582:	66 8b 00             	mov    ax,WORD PTR [eax]
10000585:	0f b7 c0             	movzx  eax,ax
10000588:	83 e0 30             	and    eax,0x30
1000058b:	83 f8 30             	cmp    eax,0x30
1000058e:	75 16                	jne    100005a6 <setupTextMode()+0x30>
10000590:	a1 00 00 00 00       	mov    eax,ds:0x0	10000591: R_386_32	VGA_TEXT_MODE_ADDRESS
10000595:	2d 00 80 00 00       	sub    eax,0x8000
1000059a:	a3 00 00 00 00       	mov    ds:0x0,eax	1000059b: R_386_32	VGA_TEXT_MODE_ADDRESS
1000059f:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	100005a1: R_386_32	vgamono
100005a6:	c7 45 ec 14 01 00 00 	mov    DWORD PTR [ebp-0x14],0x114
100005ad:	83 ec 0c             	sub    esp,0xc
100005b0:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
100005b3:	e8 fc ff ff ff       	call   100005b4 <setupTextMode()+0x3e>	100005b4: R_386_PC32	malloc
100005b8:	83 c4 10             	add    esp,0x10
100005bb:	89 c3                	mov    ebx,eax
100005bd:	a1 00 00 00 00       	mov    eax,ds:0x0	100005be: R_386_32	kernelProcess
100005c2:	83 ec 04             	sub    esp,0x4
100005c5:	50                   	push   eax
100005c6:	68 1e 09 00 10       	push   0x1000091e	100005c7: R_386_32	.text
100005cb:	53                   	push   ebx
100005cc:	e8 fc ff ff ff       	call   100005cd <setupTextMode()+0x57>	100005cd: R_386_PC32	File::File(char const*, Process*)
100005d1:	83 c4 10             	add    esp,0x10
100005d4:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100005d7:	83 ec 08             	sub    esp,0x8
100005da:	6a 01                	push   0x1
100005dc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100005df:	e8 fc ff ff ff       	call   100005e0 <setupTextMode()+0x6a>	100005e0: R_386_PC32	File::open(FileOpenMode)
100005e4:	83 c4 10             	add    esp,0x10
100005e7:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100005ea:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
100005ee:	74 10                	je     10000600 <setupTextMode()+0x8a>
100005f0:	83 ec 0c             	sub    esp,0xc
100005f3:	68 3c 09 00 10       	push   0x1000093c	100005f4: R_386_32	.text
100005f8:	e8 fc ff ff ff       	call   100005f9 <setupTextMode()+0x83>	100005f9: R_386_PC32	Krnl::panic(char const*)
100005fd:	83 c4 10             	add    esp,0x10
10000600:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000603:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10000606:	a3 00 00 00 00       	mov    ds:0x0,eax	10000607: R_386_32	biosbsodLen
1000060b:	83 ec 04             	sub    esp,0x4
1000060e:	8d 45 df             	lea    eax,[ebp-0x21]
10000611:	50                   	push   eax
10000612:	8d 45 e0             	lea    eax,[ebp-0x20]
10000615:	50                   	push   eax
10000616:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000619:	e8 fc ff ff ff       	call   1000061a <setupTextMode()+0xa4>	1000061a: R_386_PC32	File::stat(unsigned long long*, bool*)
1000061e:	83 c4 10             	add    esp,0x10
10000621:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000624:	8b 00                	mov    eax,DWORD PTR [eax]
10000626:	83 c0 0c             	add    eax,0xc
10000629:	8b 08                	mov    ecx,DWORD PTR [eax]
1000062b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000062e:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10000631:	83 ec 0c             	sub    esp,0xc
10000634:	8d 5d e8             	lea    ebx,[ebp-0x18]
10000637:	53                   	push   ebx
10000638:	68 00 00 00 00       	push   0x0	10000639: R_386_32	biosbsod
1000063d:	52                   	push   edx
1000063e:	50                   	push   eax
1000063f:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000642:	ff d1                	call   ecx
10000644:	83 c4 20             	add    esp,0x20
10000647:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
1000064a:	83 ec 08             	sub    esp,0x8
1000064d:	50                   	push   eax
1000064e:	68 44 09 00 10       	push   0x10000944	1000064f: R_386_32	.text
10000653:	e8 fc ff ff ff       	call   10000654 <setupTextMode()+0xde>	10000654: R_386_PC32	Dbg::kprintf(char const*, ...)
10000658:	83 c4 10             	add    esp,0x10
1000065b:	83 ec 0c             	sub    esp,0xc
1000065e:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000661:	e8 fc ff ff ff       	call   10000662 <setupTextMode()+0xec>	10000662: R_386_PC32	File::close()
10000666:	83 c4 10             	add    esp,0x10
10000669:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000066b: R_386_32	Krnl::biosPanicHandler
	1000066f: R_386_32	bringBackToTextMode()
10000673:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000675: R_386_32	textModeImplementation
	10000679: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
1000067d:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000067f: R_386_32	textModeImplementation
	10000683: R_386_32	hwTextMode_loadInData(VgaText*)
10000687:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000689: R_386_32	textModeImplementation
	1000068d: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000691:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000693: R_386_32	textModeImplementation
	10000697: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000069b:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	1000069d: R_386_32	textModeImplementation
	100006a1: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100006a5:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100006a7: R_386_32	textModeImplementation
	100006ab: R_386_32	hwTextMode_update(VgaText*)
100006af:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100006b1: R_386_32	textModeImplementation
	100006b5: R_386_32	hwTextMode_updateCursor(VgaText*)
100006b9:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100006bb: R_386_32	textModeImplementation
	100006bf: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100006c3:	90                   	nop
100006c4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006c7:	c9                   	leave  
100006c8:	c3                   	ret    
100006c9:	90                   	nop

100006ca <BIOS::BIOS()>:
100006ca:	55                   	push   ebp
100006cb:	89 e5                	mov    ebp,esp
100006cd:	83 ec 08             	sub    esp,0x8
100006d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006d3:	83 ec 08             	sub    esp,0x8
100006d6:	68 4d 09 00 10       	push   0x1000094d	100006d7: R_386_32	.text
100006db:	50                   	push   eax
100006dc:	e8 fc ff ff ff       	call   100006dd <BIOS::BIOS()+0x13>	100006dd: R_386_PC32	Device::Device(char const*)
100006e1:	83 c4 10             	add    esp,0x10
100006e4:	ba 08 00 00 00       	mov    edx,0x8	100006e5: R_386_32	vtable for BIOS
100006e9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ec:	89 10                	mov    DWORD PTR [eax],edx
100006ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006f1:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006f7:	0f b6 d0             	movzx  edx,al
100006fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006fd:	83 c2 08             	add    edx,0x8
10000700:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000708:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
1000070c:	83 e1 00             	and    ecx,0x0
1000070f:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000713:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000716:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000071c:	8d 50 01             	lea    edx,[eax+0x1]
1000071f:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000722:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000728:	0f b6 d0             	movzx  edx,al
1000072b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000072e:	83 c2 08             	add    edx,0x8
10000731:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000735:	0f b6 c9             	movzx  ecx,cl
10000738:	81 c9 00 00 01 00    	or     ecx,0x10000
1000073e:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000742:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000745:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000074b:	0f b6 d0             	movzx  edx,al
1000074e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000751:	83 c2 08             	add    edx,0x8
10000754:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
1000075c:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000760:	83 e1 00             	and    ecx,0x0
10000763:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000767:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000076a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000770:	8d 50 01             	lea    edx,[eax+0x1]
10000773:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000776:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000077c:	0f b6 d0             	movzx  edx,al
1000077f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000782:	83 c2 08             	add    edx,0x8
10000785:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000789:	0f b6 c9             	movzx  ecx,cl
1000078c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000792:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000796:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000799:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000079f:	0f b6 d0             	movzx  edx,al
100007a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007a5:	83 c2 08             	add    edx,0x8
100007a8:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100007b0:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100007b4:	83 e1 00             	and    ecx,0x0
100007b7:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100007bb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007be:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100007c4:	8d 50 01             	lea    edx,[eax+0x1]
100007c7:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100007ca:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100007d0:	0f b6 d0             	movzx  edx,al
100007d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d6:	83 c2 08             	add    edx,0x8
100007d9:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100007dd:	0f b6 c9             	movzx  ecx,cl
100007e0:	81 c9 00 00 00 02    	or     ecx,0x2000000
100007e6:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100007ea:	90                   	nop
100007eb:	c9                   	leave  
100007ec:	c3                   	ret    

100007ed <start()>:
100007ed:	55                   	push   ebp
100007ee:	89 e5                	mov    ebp,esp
100007f0:	53                   	push   ebx
100007f1:	83 ec 14             	sub    esp,0x14
100007f4:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
100007fb:	83 ec 0c             	sub    esp,0xc
100007fe:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000801:	e8 fc ff ff ff       	call   10000802 <start()+0x15>	10000802: R_386_PC32	malloc
10000806:	83 c4 10             	add    esp,0x10
10000809:	89 c3                	mov    ebx,eax
1000080b:	83 ec 0c             	sub    esp,0xc
1000080e:	53                   	push   ebx
1000080f:	e8 fc ff ff ff       	call   10000810 <start()+0x23>	10000810: R_386_PC32	BIOS::BIOS()
10000814:	83 c4 10             	add    esp,0x10
10000817:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000081a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000081b: R_386_32	Krnl::computer
1000081f:	83 ec 08             	sub    esp,0x8
10000822:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000825:	50                   	push   eax
10000826:	e8 fc ff ff ff       	call   10000827 <start()+0x3a>	10000827: R_386_PC32	Device::addChild(Device*)
1000082b:	83 c4 10             	add    esp,0x10
1000082e:	e8 fc ff ff ff       	call   1000082f <start()+0x42>	1000082f: R_386_PC32	setupTextMode()
10000833:	90                   	nop
10000834:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000837:	c9                   	leave  
10000838:	c3                   	ret    
10000839:	90                   	nop

1000083a <BIOS::open(int, int, void*)>:
1000083a:	b8 00 00 00 00       	mov    eax,0x0
1000083f:	c3                   	ret    

10000840 <BIOS::close(int, int, void*)>:
10000840:	b8 00 00 00 00       	mov    eax,0x0
10000845:	c3                   	ret    
10000846:	66 90                	xchg   ax,ax
10000848:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000084e:	00 00                	add    BYTE PTR [eax],al
10000850:	00 06                	add    BYTE PTR [esi],al
10000852:	00 00                	add    BYTE PTR [eax],al
10000854:	00 00                	add    BYTE PTR [eax],al
10000856:	01 00                	add    DWORD PTR [eax],eax
10000858:	00 00                	add    BYTE PTR [eax],al
1000085a:	02 00                	add    al,BYTE PTR [eax]
1000085c:	00 00                	add    BYTE PTR [eax],al
1000085e:	04 00                	add    al,0x0
10000860:	00 00                	add    BYTE PTR [eax],al
10000862:	06                   	push   es
10000863:	00 00                	add    BYTE PTR [eax],al
10000865:	00 10                	add    BYTE PTR [eax],dl
10000867:	00 00                	add    BYTE PTR [eax],al
10000869:	10 00                	adc    BYTE PTR [eax],al
1000086b:	00 00                	add    BYTE PTR [eax],al
1000086d:	00 00                	add    BYTE PTR [eax],al
1000086f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000872:	00 c2                	add    dl,al
10000874:	00 00                	add    BYTE PTR [eax],al
10000876:	40                   	inc    eax
10000877:	c2 00 00             	ret    0x0
1000087a:	80 c2 00             	add    dl,0x0
1000087d:	00 c0                	add    al,al
1000087f:	c2 00 00             	ret    0x0
10000882:	01 c2                	add    edx,eax
10000884:	00 00                	add    BYTE PTR [eax],al
10000886:	01 00                	add    DWORD PTR [eax],eax
10000888:	00 00                	add    BYTE PTR [eax],al
1000088a:	06                   	push   es
1000088b:	c2 00 00             	ret    0x0
1000088e:	02 00                	add    al,BYTE PTR [eax]
10000890:	00 10                	add    BYTE PTR [eax],dl
10000892:	00 c2                	add    dl,al
10000894:	00 00                	add    BYTE PTR [eax],al
10000896:	02 c2                	add    al,dl
10000898:	00 00                	add    BYTE PTR [eax],al
1000089a:	02 00                	add    al,BYTE PTR [eax]
1000089c:	00 00                	add    BYTE PTR [eax],al
1000089e:	04 c2                	add    al,0xc2
100008a0:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
100008a6:	00 c2                	add    dl,al
100008a8:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
100008ae:	00 c2                	add    dl,al
100008b0:	00 00                	add    BYTE PTR [eax],al
100008b2:	18 00                	sbb    BYTE PTR [eax],al
100008b4:	00 00                	add    BYTE PTR [eax],al
100008b6:	08 00                	or     BYTE PTR [eax],al
100008b8:	00 00                	add    BYTE PTR [eax],al
100008ba:	20 00                	and    BYTE PTR [eax],al
100008bc:	00 00                	add    BYTE PTR [eax],al
100008be:	00 10                	add    BYTE PTR [eax],dl
100008c0:	00 00                	add    BYTE PTR [eax],al
100008c2:	00 02                	add    BYTE PTR [edx],al
100008c4:	00 00                	add    BYTE PTR [eax],al
100008c6:	e8 01 00 00 00       	call   100008cc <BIOS::close(int, int, void*)+0x8c>
100008cb:	c8 ff ff ff          	enter  0xffff,0xff
100008cf:	ef                   	out    dx,eax
100008d0:	00 00                	add    BYTE PTR [eax],al
100008d2:	00 f0                	add    al,dh
100008d4:	00 00                	add    BYTE PTR [eax],al
100008d6:	c0 ff 00             	sar    bh,0x0
100008d9:	00 10                	add    BYTE PTR [eax],dl
100008db:	c2 00 40             	ret    0x4000
100008de:	48                   	dec    eax
100008df:	c2 30 00             	ret    0x30
100008e2:	00 00                	add    BYTE PTR [eax],al
100008e4:	80 00 00             	add    BYTE PTR [eax],0x0
100008e7:	00 44 72 6f          	add    BYTE PTR [edx+esi*2+0x6f],al
100008eb:	70 70                	jo     1000095d <vtable for BIOS+0x1>
100008ed:	69 6e 67 20 62 61 63 	imul   ebp,DWORD PTR [esi+0x67],0x63616220
100008f4:	6b 20 74             	imul   esp,DWORD PTR [eax],0x74
100008f7:	6f                   	outs   dx,DWORD PTR ds:[esi]
100008f8:	20 74 65 78          	and    BYTE PTR [ebp+eiz*2+0x78],dh
100008fc:	74 20                	je     1000091e <BIOS::close(int, int, void*)+0xde>
100008fe:	6d                   	ins    DWORD PTR es:[edi],dx
100008ff:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000900:	64 65 21 0a          	fs and DWORD PTR gs:[edx],ecx
10000904:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10000907:	20 74 65 78          	and    BYTE PTR [ebp+eiz*2+0x78],dh
1000090b:	74 20                	je     1000092d <BIOS::close(int, int, void*)+0xed>
1000090d:	6d                   	ins    DWORD PTR es:[edi],dx
1000090e:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000090f:	64 65 20 68 6f       	fs and BYTE PTR gs:[eax+0x6f],ch
10000914:	70 65                	jo     1000097b <vtable for BIOS+0x1f>
10000916:	66 75 6c             	data16 jne 10000985 <vtable for BIOS+0x29>
10000919:	6c                   	ins    BYTE PTR es:[edi],dx
1000091a:	79 21                	jns    1000093d <BIOS::close(int, int, void*)+0xfd>
1000091c:	0a 00                	or     al,BYTE PTR [eax]
1000091e:	43                   	inc    ebx
1000091f:	3a 2f                	cmp    ch,BYTE PTR [edi]
10000921:	42                   	inc    edx
10000922:	61                   	popa   
10000923:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000924:	61                   	popa   
10000925:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000926:	61                   	popa   
10000927:	2f                   	das    
10000928:	53                   	push   ebx
10000929:	79 73                	jns    1000099e <BIOS::~BIOS()+0x16>
1000092b:	74 65                	je     10000992 <BIOS::~BIOS()+0xa>
1000092d:	6d                   	ins    DWORD PTR es:[edi],dx
1000092e:	2f                   	das    
1000092f:	42                   	inc    edx
10000930:	49                   	dec    ecx
10000931:	4f                   	dec    edi
10000932:	53                   	push   ebx
10000933:	42                   	inc    edx
10000934:	53                   	push   ebx
10000935:	4f                   	dec    edi
10000936:	44                   	inc    esp
10000937:	2e 43                	cs inc ebx
10000939:	4f                   	dec    edi
1000093a:	4d                   	dec    ebp
1000093b:	00 57 48             	add    BYTE PTR [edi+0x48],dl
1000093e:	4f                   	dec    edi
1000093f:	41                   	inc    ecx
10000940:	2e 2e 2e 00 62 72    	cs cs add BYTE PTR cs:[edx+0x72],ah
10000946:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
1000094c:	00 4c 65 67          	add    BYTE PTR [ebp+eiz*2+0x67],cl
10000950:	61                   	popa   
10000951:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
10000954:	42                   	inc    edx
10000955:	49                   	dec    ecx
10000956:	4f                   	dec    edi
10000957:	53                   	push   ebx
10000958:	00 66 90             	add    BYTE PTR [esi-0x70],ah
1000095b:	90                   	nop

1000095c <vtable for BIOS>:
	...
	10000964: R_386_32	BIOS::~BIOS()
	10000968: R_386_32	BIOS::~BIOS()
	1000096c: R_386_32	BIOS::open(int, int, void*)
	10000970: R_386_32	BIOS::close(int, int, void*)
	10000974: R_386_32	Device::hibernate()
	10000978: R_386_32	Device::wake()
	1000097c: R_386_32	Device::detect()
	10000980: R_386_32	Device::disableLegacy()
	10000984: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

10000988 <BIOS::~BIOS()>:
10000988:	55                   	push   ebp
10000989:	89 e5                	mov    ebp,esp
1000098b:	83 ec 08             	sub    esp,0x8
1000098e:	ba 08 00 00 00       	mov    edx,0x8	1000098f: R_386_32	vtable for BIOS
10000993:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000996:	89 10                	mov    DWORD PTR [eax],edx
10000998:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000099b:	83 ec 0c             	sub    esp,0xc
1000099e:	50                   	push   eax
1000099f:	e8 fc ff ff ff       	call   100009a0 <BIOS::~BIOS()+0x18>	100009a0: R_386_PC32	Device::~Device()
100009a4:	83 c4 10             	add    esp,0x10
100009a7:	90                   	nop
100009a8:	c9                   	leave  
100009a9:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100009aa <BIOS::~BIOS()>:
100009aa:	55                   	push   ebp
100009ab:	89 e5                	mov    ebp,esp
100009ad:	83 ec 08             	sub    esp,0x8
100009b0:	83 ec 0c             	sub    esp,0xc
100009b3:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100009b6:	e8 fc ff ff ff       	call   100009b7 <BIOS::~BIOS()+0xd>	100009b7: R_386_PC32	BIOS::~BIOS()
100009bb:	83 c4 10             	add    esp,0x10
100009be:	83 ec 08             	sub    esp,0x8
100009c1:	68 58 01 00 00       	push   0x158
100009c6:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100009c9:	e8 fc ff ff ff       	call   100009ca <BIOS::~BIOS()+0x20>	100009ca: R_386_PC32	operator delete(void*, unsigned long)
100009ce:	83 c4 10             	add    esp,0x10
100009d1:	c9                   	leave  
100009d2:	c3                   	ret    
