
packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000052:	8b 00                	mov    eax,DWORD PTR [eax]
10000054:	83 c0 24             	add    eax,0x24
10000057:	8b 00                	mov    eax,DWORD PTR [eax]
10000059:	83 ec 0c             	sub    esp,0xc
1000005c:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000005f:	ff d0                	call   eax
10000061:	83 c4 10             	add    esp,0x10
10000064:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000067:	8b 00                	mov    eax,DWORD PTR [eax]
10000069:	83 c0 28             	add    eax,0x28
1000006c:	8b 00                	mov    eax,DWORD PTR [eax]
1000006e:	6a 00                	push   0x0
10000070:	6a 00                	push   0x0
10000072:	6a 00                	push   0x0
10000074:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000077:	ff d0                	call   eax
10000079:	83 c4 10             	add    esp,0x10
1000007c:	90                   	nop
1000007d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000080:	c9                   	leave  
10000081:	c3                   	ret    

10000082 <hwTextMode_loadInData(VgaText*)>:
10000082:	55                   	push   ebp
10000083:	89 e5                	mov    ebp,esp
10000085:	83 ec 10             	sub    esp,0x10
10000088:	a1 00 00 00 00       	mov    eax,ds:0x0	10000089: R_386_32	VGA_TEXT_MODE_ADDRESS
1000008d:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000090:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000097:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000009a:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
1000009d:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
100000a0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
100000a7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000aa:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100000ad:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
100000b0:	7d 2f                	jge    100000e1 <hwTextMode_loadInData(VgaText*)+0x5f>
100000b2:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
100000b9:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000bd:	7f 1d                	jg     100000dc <hwTextMode_loadInData(VgaText*)+0x5a>
100000bf:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000c2:	8d 50 02             	lea    edx,[eax+0x2]
100000c5:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000c8:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000cb:	8d 4a 02             	lea    ecx,[edx+0x2]
100000ce:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000d1:	66 8b 00             	mov    ax,WORD PTR [eax]
100000d4:	66 89 02             	mov    WORD PTR [edx],ax
100000d7:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000da:	eb dd                	jmp    100000b9 <hwTextMode_loadInData(VgaText*)+0x37>
100000dc:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000df:	eb c6                	jmp    100000a7 <hwTextMode_loadInData(VgaText*)+0x25>
100000e1:	90                   	nop
100000e2:	c9                   	leave  
100000e3:	c3                   	ret    

100000e4 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000e4:	55                   	push   ebp
100000e5:	89 e5                	mov    ebp,esp
100000e7:	83 ec 10             	sub    esp,0x10
100000ea:	a0 00 00 00 00       	mov    al,ds:0x0	100000eb: R_386_32	vgamono
100000ef:	84 c0                	test   al,al
100000f1:	74 14                	je     10000107 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000f3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000f6:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000100:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000107:	a1 00 00 00 00       	mov    eax,ds:0x0	10000108: R_386_32	VGA_TEXT_MODE_ADDRESS
1000010c:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000010f:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
10000116:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
1000011a:	7f 3f                	jg     1000015b <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
1000011c:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
1000011f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000122:	01 d0                	add    eax,edx
10000124:	8a 00                	mov    al,BYTE PTR [eax]
10000126:	0f b6 c0             	movzx  eax,al
10000129:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000012c:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
1000012f:	0f b7 d2             	movzx  edx,dx
10000132:	89 d1                	mov    ecx,edx
10000134:	83 e1 0f             	and    ecx,0xf
10000137:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000013a:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
1000013d:	c1 e2 04             	shl    edx,0x4
10000140:	0f b6 d2             	movzx  edx,dl
10000143:	09 ca                	or     edx,ecx
10000145:	c1 e2 08             	shl    edx,0x8
10000148:	09 c2                	or     edx,eax
1000014a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000014d:	8d 48 02             	lea    ecx,[eax+0x2]
10000150:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000153:	66 89 10             	mov    WORD PTR [eax],dx
10000156:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
10000159:	eb bb                	jmp    10000116 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000015b:	90                   	nop
1000015c:	c9                   	leave  
1000015d:	c3                   	ret    

1000015e <hwTextMode_scrollScreen(VgaText*)>:
1000015e:	55                   	push   ebp
1000015f:	89 e5                	mov    ebp,esp
10000161:	53                   	push   ebx
10000162:	83 ec 14             	sub    esp,0x14
10000165:	a0 00 00 00 00       	mov    al,ds:0x0	10000166: R_386_32	vgamono
1000016a:	84 c0                	test   al,al
1000016c:	74 14                	je     10000182 <hwTextMode_scrollScreen(VgaText*)+0x24>
1000016e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000171:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000178:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000017b:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000182:	a1 00 00 00 00       	mov    eax,ds:0x0	10000183: R_386_32	VGA_TEXT_MODE_ADDRESS
10000187:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000018a:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000191:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000195:	0f 8f cf 00 00 00    	jg     1000026a <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000019b:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
100001a2:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
100001a9:	0f 8f b3 00 00 00    	jg     10000262 <hwTextMode_scrollScreen(VgaText*)+0x104>
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	89 c2                	mov    edx,eax
100001c5:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001c8:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001cb:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001ce:	89 d0                	mov    eax,edx
100001d0:	c1 e0 02             	shl    eax,0x2
100001d3:	01 d0                	add    eax,edx
100001d5:	c1 e0 05             	shl    eax,0x5
100001d8:	89 c2                	mov    edx,eax
100001da:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001dd:	01 d0                	add    eax,edx
100001df:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001e5:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e8:	01 c2                	add    edx,eax
100001ea:	8a 01                	mov    al,BYTE PTR [ecx]
100001ec:	88 02                	mov    BYTE PTR [edx],al
100001ee:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001f2:	75 66                	jne    1000025a <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001f4:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001f7:	83 e0 01             	and    eax,0x1
100001fa:	85 c0                	test   eax,eax
100001fc:	74 3e                	je     1000023c <hwTextMode_scrollScreen(VgaText*)+0xde>
100001fe:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000201:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000204:	0f b6 c8             	movzx  ecx,al
10000207:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000020a:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
1000020d:	0f b6 d0             	movzx  edx,al
10000210:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
10000213:	89 d8                	mov    eax,ebx
10000215:	c1 e0 02             	shl    eax,0x2
10000218:	01 d8                	add    eax,ebx
1000021a:	c1 e0 05             	shl    eax,0x5
1000021d:	89 c3                	mov    ebx,eax
1000021f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000222:	01 d8                	add    eax,ebx
10000224:	89 c3                	mov    ebx,eax
10000226:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000229:	01 c3                	add    ebx,eax
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	51                   	push   ecx
1000022f:	52                   	push   edx
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	88 03                	mov    BYTE PTR [ebx],al
1000023a:	eb 1e                	jmp    1000025a <hwTextMode_scrollScreen(VgaText*)+0xfc>
1000023c:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000023f:	89 d0                	mov    eax,edx
10000241:	c1 e0 02             	shl    eax,0x2
10000244:	01 d0                	add    eax,edx
10000246:	c1 e0 05             	shl    eax,0x5
10000249:	89 c2                	mov    edx,eax
1000024b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000024e:	01 d0                	add    eax,edx
10000250:	89 c2                	mov    edx,eax
10000252:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000255:	01 d0                	add    eax,edx
10000257:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000025a:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
1000025d:	e9 40 ff ff ff       	jmp    100001a2 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000262:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000265:	e9 27 ff ff ff       	jmp    10000191 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000026a:	90                   	nop
1000026b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
1000026e:	c9                   	leave  
1000026f:	c3                   	ret    

10000270 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000270:	55                   	push   ebp
10000271:	89 e5                	mov    ebp,esp
10000273:	83 ec 28             	sub    esp,0x28
10000276:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000279:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
1000027c:	a0 00 00 00 00       	mov    al,ds:0x0	1000027d: R_386_32	vgamono
10000281:	84 c0                	test   al,al
10000283:	74 0e                	je     10000293 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000285:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
1000028c:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000293:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000296:	0f b6 d0             	movzx  edx,al
10000299:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000029c:	0f b6 c0             	movzx  eax,al
1000029f:	83 ec 08             	sub    esp,0x8
100002a2:	52                   	push   edx
100002a3:	50                   	push   eax
100002a4:	e8 fc ff ff ff       	call   100002a5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	100002a5: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100002a9:	83 c4 10             	add    esp,0x10
100002ac:	0f b6 d0             	movzx  edx,al
100002af:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
100002b3:	83 ec 08             	sub    esp,0x8
100002b6:	52                   	push   edx
100002b7:	50                   	push   eax
100002b8:	e8 fc ff ff ff       	call   100002b9 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	100002b9: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002bd:	83 c4 10             	add    esp,0x10
100002c0:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c4:	a1 00 00 00 00       	mov    eax,ds:0x0	100002c5: R_386_32	VGA_TEXT_MODE_ADDRESS
100002c9:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002cc:	a0 00 00 00 00       	mov    al,ds:0x0	100002cd: R_386_32	vgamono
100002d1:	84 c0                	test   al,al
100002d3:	74 0c                	je     100002e1 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002d5:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002da:	80 cc 02             	or     ah,0x2
100002dd:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002e1:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002e4:	89 d0                	mov    eax,edx
100002e6:	c1 e0 02             	shl    eax,0x2
100002e9:	01 d0                	add    eax,edx
100002eb:	c1 e0 04             	shl    eax,0x4
100002ee:	89 c2                	mov    edx,eax
100002f0:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002f3:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002f6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002f9:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002fc:	ba 19 00 00 00       	mov    edx,0x19
10000301:	29 c2                	sub    edx,eax
10000303:	89 d0                	mov    eax,edx
10000305:	c1 e0 02             	shl    eax,0x2
10000308:	01 d0                	add    eax,edx
1000030a:	c1 e0 04             	shl    eax,0x4
1000030d:	01 c8                	add    eax,ecx
1000030f:	01 c0                	add    eax,eax
10000311:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
10000314:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10000317:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
1000031b:	66 89 02             	mov    WORD PTR [edx],ax
1000031e:	90                   	nop
1000031f:	c9                   	leave  
10000320:	c3                   	ret    

10000321 <hwTextMode_showCursor(VgaText*, bool)>:
10000321:	55                   	push   ebp
10000322:	89 e5                	mov    ebp,esp
10000324:	83 ec 24             	sub    esp,0x24
10000327:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000032a:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000032d:	a0 00 00 00 00       	mov    al,ds:0x0	1000032e: R_386_32	vgamono
10000332:	84 c0                	test   al,al
10000334:	0f 85 bd 00 00 00    	jne    100003f7 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000033a:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
1000033e:	0f 84 8d 00 00 00    	je     100003d1 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000344:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000034a:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
1000034e:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000351:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000355:	ee                   	out    dx,al
10000356:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
1000035c:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000360:	89 c2                	mov    edx,eax
10000362:	ec                   	in     al,dx
10000363:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000366:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
10000369:	83 e0 c0             	and    eax,0xffffffc0
1000036c:	88 c2                	mov    dl,al
1000036e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000371:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000374:	b1 0f                	mov    cl,0xf
10000376:	29 c1                	sub    ecx,eax
10000378:	88 c8                	mov    al,cl
1000037a:	09 d0                	or     eax,edx
1000037c:	0f b6 c0             	movzx  eax,al
1000037f:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000385:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000388:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000038b:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000038f:	ee                   	out    dx,al
10000390:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000396:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000039a:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000039d:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100003a1:	ee                   	out    dx,al
100003a2:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
100003a8:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003ac:	89 c2                	mov    edx,eax
100003ae:	ec                   	in     al,dx
100003af:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100003b2:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100003b5:	83 e0 e0             	and    eax,0xffffffe0
100003b8:	83 c8 0f             	or     eax,0xf
100003bb:	0f b6 c0             	movzx  eax,al
100003be:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003c4:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003c7:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ca:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003ce:	ee                   	out    dx,al
100003cf:	eb 27                	jmp    100003f8 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003d1:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003d7:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003db:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003de:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003e2:	ee                   	out    dx,al
100003e3:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003e9:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003ed:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003f0:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003f4:	ee                   	out    dx,al
100003f5:	eb 01                	jmp    100003f8 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003f7:	90                   	nop
100003f8:	c9                   	leave  
100003f9:	c3                   	ret    

100003fa <hwTextMode_update(VgaText*)>:
100003fa:	90                   	nop
100003fb:	c3                   	ret    

100003fc <hwTextMode_updateCursor(VgaText*)>:
100003fc:	55                   	push   ebp
100003fd:	89 e5                	mov    ebp,esp
100003ff:	53                   	push   ebx
10000400:	83 ec 20             	sub    esp,0x20
10000403:	a0 00 00 00 00       	mov    al,ds:0x0	10000404: R_386_32	vgamono
10000408:	84 c0                	test   al,al
1000040a:	0f 85 87 00 00 00    	jne    10000497 <hwTextMode_updateCursor(VgaText*)+0x9b>
10000410:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000413:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
10000416:	89 c1                	mov    ecx,eax
10000418:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000041b:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000041e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000421:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000424:	bb 19 00 00 00       	mov    ebx,0x19
10000429:	29 c3                	sub    ebx,eax
1000042b:	89 d8                	mov    eax,ebx
1000042d:	01 d0                	add    eax,edx
1000042f:	89 c2                	mov    edx,eax
10000431:	89 d0                	mov    eax,edx
10000433:	c1 e0 02             	shl    eax,0x2
10000436:	01 d0                	add    eax,edx
10000438:	c1 e0 04             	shl    eax,0x4
1000043b:	01 c8                	add    eax,ecx
1000043d:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000441:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
10000447:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000044b:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
1000044e:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000451:	ee                   	out    dx,al
10000452:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000456:	0f b6 c0             	movzx  eax,al
10000459:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
1000045f:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000462:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000465:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10000468:	ee                   	out    dx,al
10000469:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
1000046f:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000473:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000476:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000479:	ee                   	out    dx,al
1000047a:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000047e:	66 c1 e8 08          	shr    ax,0x8
10000482:	0f b6 c0             	movzx  eax,al
10000485:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000048b:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000048e:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000491:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000494:	ee                   	out    dx,al
10000495:	eb 01                	jmp    10000498 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000497:	90                   	nop
10000498:	83 c4 20             	add    esp,0x20
1000049b:	5b                   	pop    ebx
1000049c:	5d                   	pop    ebp
1000049d:	c3                   	ret    

1000049e <hwTextMode_disableBlink(VgaText*, bool)>:
1000049e:	55                   	push   ebp
1000049f:	89 e5                	mov    ebp,esp
100004a1:	83 ec 24             	sub    esp,0x24
100004a4:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100004a7:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100004aa:	a0 00 00 00 00       	mov    al,ds:0x0	100004ab: R_386_32	vgamono
100004af:	84 c0                	test   al,al
100004b1:	0f 85 a8 00 00 00    	jne    1000055f <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
100004b7:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
100004ba:	83 f0 01             	xor    eax,0x1
100004bd:	84 c0                	test   al,al
100004bf:	74 4e                	je     1000050f <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004c1:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004c7:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004cb:	89 c2                	mov    edx,eax
100004cd:	ec                   	in     al,dx
100004ce:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004d1:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004d7:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004db:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004de:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004e2:	ee                   	out    dx,al
100004e3:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004e9:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004ed:	89 c2                	mov    edx,eax
100004ef:	ec                   	in     al,dx
100004f0:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004f3:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004f6:	83 c8 08             	or     eax,0x8
100004f9:	0f b6 c0             	movzx  eax,al
100004fc:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
10000502:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000505:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000508:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000050c:	ee                   	out    dx,al
1000050d:	eb 51                	jmp    10000560 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000050f:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
10000515:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
10000519:	89 c2                	mov    edx,eax
1000051b:	ec                   	in     al,dx
1000051c:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
1000051f:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000525:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
10000529:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000052c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000530:	ee                   	out    dx,al
10000531:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
10000537:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000053b:	89 c2                	mov    edx,eax
1000053d:	ec                   	in     al,dx
1000053e:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000541:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000544:	0f b6 c0             	movzx  eax,al
10000547:	25 f7 00 00 00       	and    eax,0xf7
1000054c:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000552:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000555:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
10000558:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
1000055c:	ee                   	out    dx,al
1000055d:	eb 01                	jmp    10000560 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000055f:	90                   	nop
10000560:	c9                   	leave  
10000561:	c3                   	ret    
10000562:	b8 10 04 00 00       	mov    eax,0x410
10000567:	66 8b 00             	mov    ax,WORD PTR [eax]
1000056a:	0f b7 c0             	movzx  eax,ax
1000056d:	83 e0 30             	and    eax,0x30
10000570:	83 f8 30             	cmp    eax,0x30
10000573:	75 16                	jne    1000058b <hwTextMode_disableBlink(VgaText*, bool)+0xed>
10000575:	a1 00 00 00 00       	mov    eax,ds:0x0	10000576: R_386_32	VGA_TEXT_MODE_ADDRESS
1000057a:	2d 00 80 00 00       	sub    eax,0x8000
1000057f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000580: R_386_32	VGA_TEXT_MODE_ADDRESS
10000584:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000586: R_386_32	vgamono
1000058b:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000058d: R_386_32	textModeImplementation
	10000591: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000595:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000597: R_386_32	textModeImplementation
	1000059b: R_386_32	hwTextMode_loadInData(VgaText*)
1000059f:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100005a1: R_386_32	textModeImplementation
	100005a5: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
100005a9:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	100005ab: R_386_32	textModeImplementation
	100005af: R_386_32	hwTextMode_scrollScreen(VgaText*)
100005b3:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	100005b5: R_386_32	textModeImplementation
	100005b9: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005bd:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005bf: R_386_32	textModeImplementation
	100005c3: R_386_32	hwTextMode_update(VgaText*)
100005c7:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005c9: R_386_32	textModeImplementation
	100005cd: R_386_32	hwTextMode_updateCursor(VgaText*)
100005d1:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005d3: R_386_32	textModeImplementation
	100005d7: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005db:	90                   	nop
100005dc:	c3                   	ret    
100005dd:	90                   	nop

100005de <BIOS::BIOS()>:
100005de:	55                   	push   ebp
100005df:	89 e5                	mov    ebp,esp
100005e1:	83 ec 08             	sub    esp,0x8
100005e4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e7:	83 ec 08             	sub    esp,0x8
100005ea:	68 b8 07 00 10       	push   0x100007b8	100005eb: R_386_32	.text
100005ef:	50                   	push   eax
100005f0:	e8 fc ff ff ff       	call   100005f1 <BIOS::BIOS()+0x13>	100005f1: R_386_PC32	Device::Device(char const*)
100005f5:	83 c4 10             	add    esp,0x10
100005f8:	ba 08 00 00 00       	mov    edx,0x8	100005f9: R_386_32	vtable for BIOS
100005fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000600:	89 10                	mov    DWORD PTR [eax],edx
10000602:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000605:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000060b:	0f b6 d0             	movzx  edx,al
1000060e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000611:	83 c2 08             	add    edx,0x8
10000614:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
1000061c:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000620:	83 e1 00             	and    ecx,0x0
10000623:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000627:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000062a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000630:	8d 50 01             	lea    edx,[eax+0x1]
10000633:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000636:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000063c:	0f b6 d0             	movzx  edx,al
1000063f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000642:	83 c2 08             	add    edx,0x8
10000645:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000649:	0f b6 c9             	movzx  ecx,cl
1000064c:	81 c9 00 00 01 00    	or     ecx,0x10000
10000652:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000656:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000659:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000065f:	0f b6 d0             	movzx  edx,al
10000662:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000665:	83 c2 08             	add    edx,0x8
10000668:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000670:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000674:	83 e1 00             	and    ecx,0x0
10000677:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000067b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000684:	8d 50 01             	lea    edx,[eax+0x1]
10000687:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000068a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000690:	0f b6 d0             	movzx  edx,al
10000693:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000696:	83 c2 08             	add    edx,0x8
10000699:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000069d:	0f b6 c9             	movzx  ecx,cl
100006a0:	81 c9 00 00 00 04    	or     ecx,0x4000000
100006a6:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ad:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006b3:	0f b6 d0             	movzx  edx,al
100006b6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b9:	83 c2 08             	add    edx,0x8
100006bc:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006c4:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006c8:	83 e1 00             	and    ecx,0x0
100006cb:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006cf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006d2:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006d8:	8d 50 01             	lea    edx,[eax+0x1]
100006db:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006de:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006e4:	0f b6 d0             	movzx  edx,al
100006e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ea:	83 c2 08             	add    edx,0x8
100006ed:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006f1:	0f b6 c9             	movzx  ecx,cl
100006f4:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006fa:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006fe:	90                   	nop
100006ff:	c9                   	leave  
10000700:	c3                   	ret    
10000701:	90                   	nop

10000702 <BIOS::configure()>:
10000702:	90                   	nop
10000703:	c3                   	ret    

10000704 <BIOS::open_(int, int, void*)>:
10000704:	b8 00 00 00 00       	mov    eax,0x0
10000709:	c3                   	ret    

1000070a <BIOS::open(int, int, void*)>:
1000070a:	b8 00 00 00 00       	mov    eax,0x0
1000070f:	c3                   	ret    

10000710 <BIOS::close(int, int, void*)>:
10000710:	b8 00 00 00 00       	mov    eax,0x0
10000715:	c3                   	ret    
10000716:	66 90                	xchg   ax,ax
10000718:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000071e:	00 00                	add    BYTE PTR [eax],al
10000720:	00 06                	add    BYTE PTR [esi],al
10000722:	00 00                	add    BYTE PTR [eax],al
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	02 00                	add    al,BYTE PTR [eax]
1000072c:	00 00                	add    BYTE PTR [eax],al
1000072e:	04 00                	add    al,0x0
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	06                   	push   es
10000733:	00 00                	add    BYTE PTR [eax],al
10000735:	00 10                	add    BYTE PTR [eax],dl
10000737:	00 00                	add    BYTE PTR [eax],al
10000739:	10 00                	adc    BYTE PTR [eax],al
1000073b:	00 00                	add    BYTE PTR [eax],al
1000073d:	00 00                	add    BYTE PTR [eax],al
1000073f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000742:	00 c2                	add    dl,al
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	40                   	inc    eax
10000747:	c2 00 00             	ret    0x0
1000074a:	80 c2 00             	add    dl,0x0
1000074d:	00 c0                	add    al,al
1000074f:	c2 00 00             	ret    0x0
10000752:	01 c2                	add    edx,eax
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	01 00                	add    DWORD PTR [eax],eax
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	06                   	push   es
1000075b:	c2 00 00             	ret    0x0
1000075e:	02 00                	add    al,BYTE PTR [eax]
10000760:	00 10                	add    BYTE PTR [eax],dl
10000762:	00 c2                	add    dl,al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	02 c2                	add    al,dl
10000768:	00 00                	add    BYTE PTR [eax],al
1000076a:	02 00                	add    al,BYTE PTR [eax]
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	04 c2                	add    al,0xc2
10000770:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000776:	00 c2                	add    dl,al
10000778:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000077e:	00 c2                	add    dl,al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	18 00                	sbb    BYTE PTR [eax],al
10000784:	00 00                	add    BYTE PTR [eax],al
10000786:	08 00                	or     BYTE PTR [eax],al
10000788:	00 00                	add    BYTE PTR [eax],al
1000078a:	20 00                	and    BYTE PTR [eax],al
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 10                	add    BYTE PTR [eax],dl
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	00 02                	add    BYTE PTR [edx],al
10000794:	00 00                	add    BYTE PTR [eax],al
10000796:	e8 01 00 00 00       	call   1000079c <BIOS::close(int, int, void*)+0x8c>
1000079b:	c8 ff ff ff          	enter  0xffff,0xff
1000079f:	ef                   	out    dx,eax
100007a0:	00 00                	add    BYTE PTR [eax],al
100007a2:	00 f0                	add    al,dh
100007a4:	00 00                	add    BYTE PTR [eax],al
100007a6:	c0 ff 00             	sar    bh,0x0
100007a9:	00 10                	add    BYTE PTR [eax],dl
100007ab:	c2 00 40             	ret    0x4000
100007ae:	48                   	dec    eax
100007af:	c2 96 00             	ret    0x96
100007b2:	00 00                	add    BYTE PTR [eax],al
100007b4:	2c 01                	sub    al,0x1
100007b6:	00 00                	add    BYTE PTR [eax],al
100007b8:	4c                   	dec    esp
100007b9:	65 67 61             	gs addr16 popa 
100007bc:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007bf:	42                   	inc    edx
100007c0:	49                   	dec    ecx
100007c1:	4f                   	dec    edi
100007c2:	53                   	push   ebx
	...

100007c4 <vtable for BIOS>:
	...
	100007cc: R_386_32	BIOS::~BIOS()
	100007d0: R_386_32	BIOS::~BIOS()
	100007d4: R_386_32	BIOS::open(int, int, void*)
	100007d8: R_386_32	BIOS::close(int, int, void*)
	100007dc: R_386_32	Device::hibernate()
	100007e0: R_386_32	Device::wake()
	100007e4: R_386_32	Device::detect()
	100007e8: R_386_32	Device::disableLegacy()
	100007ec: R_386_32	Device::powerSaving(PowerSavingLevel)
	100007f0: R_386_32	BIOS::configure()
	100007f4: R_386_32	BIOS::open_(int, int, void*)

Disassembly of section .text._ZN4BIOSD2Ev:

100007f8 <BIOS::~BIOS()>:
100007f8:	55                   	push   ebp
100007f9:	89 e5                	mov    ebp,esp
100007fb:	83 ec 08             	sub    esp,0x8
100007fe:	ba 08 00 00 00       	mov    edx,0x8	100007ff: R_386_32	vtable for BIOS
10000803:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000806:	89 10                	mov    DWORD PTR [eax],edx
10000808:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000080b:	83 ec 0c             	sub    esp,0xc
1000080e:	50                   	push   eax
1000080f:	e8 fc ff ff ff       	call   10000810 <BIOS::~BIOS()+0x18>	10000810: R_386_PC32	Device::~Device()
10000814:	83 c4 10             	add    esp,0x10
10000817:	90                   	nop
10000818:	c9                   	leave  
10000819:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

1000081a <BIOS::~BIOS()>:
1000081a:	55                   	push   ebp
1000081b:	89 e5                	mov    ebp,esp
1000081d:	83 ec 08             	sub    esp,0x8
10000820:	83 ec 0c             	sub    esp,0xc
10000823:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000826:	e8 fc ff ff ff       	call   10000827 <BIOS::~BIOS()+0xd>	10000827: R_386_PC32	BIOS::~BIOS()
1000082b:	83 c4 10             	add    esp,0x10
1000082e:	83 ec 08             	sub    esp,0x8
10000831:	68 58 01 00 00       	push   0x158
10000836:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000839:	e8 fc ff ff ff       	call   1000083a <BIOS::~BIOS()+0x20>	1000083a: R_386_PC32	operator delete(void*, unsigned long)
1000083e:	83 c4 10             	add    esp,0x10
10000841:	c9                   	leave  
10000842:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <hwTextMode_disableBlink(VgaText*, bool)+0xed>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 98 07 00 10       	push   0x10000798	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	b8 00 00 00 00       	mov    eax,0x0
100006eb:	c3                   	ret    

100006ec <BIOS::open(int, int, void*)>:
100006ec:	b8 00 00 00 00       	mov    eax,0x0
100006f1:	c3                   	ret    

100006f2 <BIOS::close(int, int, void*)>:
100006f2:	b8 00 00 00 00       	mov    eax,0x0
100006f7:	c3                   	ret    
100006f8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006fe:	00 00                	add    BYTE PTR [eax],al
10000700:	00 06                	add    BYTE PTR [esi],al
10000702:	00 00                	add    BYTE PTR [eax],al
10000704:	00 00                	add    BYTE PTR [eax],al
10000706:	01 00                	add    DWORD PTR [eax],eax
10000708:	00 00                	add    BYTE PTR [eax],al
1000070a:	02 00                	add    al,BYTE PTR [eax]
1000070c:	00 00                	add    BYTE PTR [eax],al
1000070e:	04 00                	add    al,0x0
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	06                   	push   es
10000713:	00 00                	add    BYTE PTR [eax],al
10000715:	00 10                	add    BYTE PTR [eax],dl
10000717:	00 00                	add    BYTE PTR [eax],al
10000719:	10 00                	adc    BYTE PTR [eax],al
1000071b:	00 00                	add    BYTE PTR [eax],al
1000071d:	00 00                	add    BYTE PTR [eax],al
1000071f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000722:	00 c2                	add    dl,al
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	40                   	inc    eax
10000727:	c2 00 00             	ret    0x0
1000072a:	80 c2 00             	add    dl,0x0
1000072d:	00 c0                	add    al,al
1000072f:	c2 00 00             	ret    0x0
10000732:	01 c2                	add    edx,eax
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	01 00                	add    DWORD PTR [eax],eax
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	06                   	push   es
1000073b:	c2 00 00             	ret    0x0
1000073e:	02 00                	add    al,BYTE PTR [eax]
10000740:	00 10                	add    BYTE PTR [eax],dl
10000742:	00 c2                	add    dl,al
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	02 c2                	add    al,dl
10000748:	00 00                	add    BYTE PTR [eax],al
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 00                	add    BYTE PTR [eax],al
1000074e:	04 c2                	add    al,0xc2
10000750:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000756:	00 c2                	add    dl,al
10000758:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000075e:	00 c2                	add    dl,al
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	18 00                	sbb    BYTE PTR [eax],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	08 00                	or     BYTE PTR [eax],al
10000768:	00 00                	add    BYTE PTR [eax],al
1000076a:	20 00                	and    BYTE PTR [eax],al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	00 10                	add    BYTE PTR [eax],dl
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 02                	add    BYTE PTR [edx],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	e8 01 00 00 00       	call   1000077c <BIOS::close(int, int, void*)+0x8a>
1000077b:	c8 ff ff ff          	enter  0xffff,0xff
1000077f:	ef                   	out    dx,eax
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	00 f0                	add    al,dh
10000784:	00 00                	add    BYTE PTR [eax],al
10000786:	c0 ff 00             	sar    bh,0x0
10000789:	00 10                	add    BYTE PTR [eax],dl
1000078b:	c2 00 40             	ret    0x4000
1000078e:	48                   	dec    eax
1000078f:	c2 96 00             	ret    0x96
10000792:	00 00                	add    BYTE PTR [eax],al
10000794:	2c 01                	sub    al,0x1
10000796:	00 00                	add    BYTE PTR [eax],al
10000798:	4c                   	dec    esp
10000799:	65 67 61             	gs addr16 popa 
1000079c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000079f:	42                   	inc    edx
100007a0:	49                   	dec    ecx
100007a1:	4f                   	dec    edi
100007a2:	53                   	push   ebx
	...

100007a4 <vtable for BIOS>:
	...
	100007ac: R_386_32	BIOS::~BIOS()
	100007b0: R_386_32	BIOS::~BIOS()
	100007b4: R_386_32	BIOS::open(int, int, void*)
	100007b8: R_386_32	BIOS::close(int, int, void*)
	100007bc: R_386_32	Device::hibernate()
	100007c0: R_386_32	Device::wake()
	100007c4: R_386_32	Device::detect()
	100007c8: R_386_32	Device::disableLegacy()
	100007cc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007d0 <BIOS::~BIOS()>:
100007d0:	55                   	push   ebp
100007d1:	89 e5                	mov    ebp,esp
100007d3:	83 ec 08             	sub    esp,0x8
100007d6:	ba 08 00 00 00       	mov    edx,0x8	100007d7: R_386_32	vtable for BIOS
100007db:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007de:	89 10                	mov    DWORD PTR [eax],edx
100007e0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007e3:	83 ec 0c             	sub    esp,0xc
100007e6:	50                   	push   eax
100007e7:	e8 fc ff ff ff       	call   100007e8 <BIOS::~BIOS()+0x18>	100007e8: R_386_PC32	Device::~Device()
100007ec:	83 c4 10             	add    esp,0x10
100007ef:	90                   	nop
100007f0:	c9                   	leave  
100007f1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007f2 <BIOS::~BIOS()>:
100007f2:	55                   	push   ebp
100007f3:	89 e5                	mov    ebp,esp
100007f5:	83 ec 08             	sub    esp,0x8
100007f8:	83 ec 0c             	sub    esp,0xc
100007fb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007fe:	e8 fc ff ff ff       	call   100007ff <BIOS::~BIOS()+0xd>	100007ff: R_386_PC32	BIOS::~BIOS()
10000803:	83 c4 10             	add    esp,0x10
10000806:	83 ec 08             	sub    esp,0x8
10000809:	68 58 01 00 00       	push   0x158
1000080e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000811:	e8 fc ff ff ff       	call   10000812 <BIOS::~BIOS()+0x20>	10000812: R_386_PC32	operator delete(void*, unsigned long)
10000816:	83 c4 10             	add    esp,0x10
10000819:	c9                   	leave  
1000081a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    

10000546 <setupTextMode()>:
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <setupTextMode()+0x29>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 a4 07 00 10       	push   0x100007a4	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	55                   	push   ebp
100006e7:	89 e5                	mov    ebp,esp
100006e9:	83 ec 08             	sub    esp,0x8
100006ec:	e8 fc ff ff ff       	call   100006ed <BIOS::open_(int, int, void*)+0x7>	100006ed: R_386_PC32	setupTextMode()
100006f1:	b8 00 00 00 00       	mov    eax,0x0
100006f6:	c9                   	leave  
100006f7:	c3                   	ret    

100006f8 <BIOS::open(int, int, void*)>:
100006f8:	b8 00 00 00 00       	mov    eax,0x0
100006fd:	c3                   	ret    

100006fe <BIOS::close(int, int, void*)>:
100006fe:	b8 00 00 00 00       	mov    eax,0x0
10000703:	c3                   	ret    
10000704:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000070a:	00 00                	add    BYTE PTR [eax],al
1000070c:	00 06                	add    BYTE PTR [esi],al
1000070e:	00 00                	add    BYTE PTR [eax],al
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	01 00                	add    DWORD PTR [eax],eax
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	02 00                	add    al,BYTE PTR [eax]
10000718:	00 00                	add    BYTE PTR [eax],al
1000071a:	04 00                	add    al,0x0
1000071c:	00 00                	add    BYTE PTR [eax],al
1000071e:	06                   	push   es
1000071f:	00 00                	add    BYTE PTR [eax],al
10000721:	00 10                	add    BYTE PTR [eax],dl
10000723:	00 00                	add    BYTE PTR [eax],al
10000725:	10 00                	adc    BYTE PTR [eax],al
10000727:	00 00                	add    BYTE PTR [eax],al
10000729:	00 00                	add    BYTE PTR [eax],al
1000072b:	c0 00 00             	rol    BYTE PTR [eax],0x0
1000072e:	00 c2                	add    dl,al
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	40                   	inc    eax
10000733:	c2 00 00             	ret    0x0
10000736:	80 c2 00             	add    dl,0x0
10000739:	00 c0                	add    al,al
1000073b:	c2 00 00             	ret    0x0
1000073e:	01 c2                	add    edx,eax
10000740:	00 00                	add    BYTE PTR [eax],al
10000742:	01 00                	add    DWORD PTR [eax],eax
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	06                   	push   es
10000747:	c2 00 00             	ret    0x0
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 10                	add    BYTE PTR [eax],dl
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	02 c2                	add    al,dl
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	02 00                	add    al,BYTE PTR [eax]
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	04 c2                	add    al,0xc2
1000075c:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000762:	00 c2                	add    dl,al
10000764:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000076a:	00 c2                	add    dl,al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	18 00                	sbb    BYTE PTR [eax],al
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	08 00                	or     BYTE PTR [eax],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	20 00                	and    BYTE PTR [eax],al
10000778:	00 00                	add    BYTE PTR [eax],al
1000077a:	00 10                	add    BYTE PTR [eax],dl
1000077c:	00 00                	add    BYTE PTR [eax],al
1000077e:	00 02                	add    BYTE PTR [edx],al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	e8 01 00 00 00       	call   10000788 <BIOS::close(int, int, void*)+0x8a>
10000787:	c8 ff ff ff          	enter  0xffff,0xff
1000078b:	ef                   	out    dx,eax
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 f0                	add    al,dh
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	c0 ff 00             	sar    bh,0x0
10000795:	00 10                	add    BYTE PTR [eax],dl
10000797:	c2 00 40             	ret    0x4000
1000079a:	48                   	dec    eax
1000079b:	c2 96 00             	ret    0x96
1000079e:	00 00                	add    BYTE PTR [eax],al
100007a0:	2c 01                	sub    al,0x1
100007a2:	00 00                	add    BYTE PTR [eax],al
100007a4:	4c                   	dec    esp
100007a5:	65 67 61             	gs addr16 popa 
100007a8:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007ab:	42                   	inc    edx
100007ac:	49                   	dec    ecx
100007ad:	4f                   	dec    edi
100007ae:	53                   	push   ebx
	...

100007b0 <vtable for BIOS>:
	...
	100007b8: R_386_32	BIOS::~BIOS()
	100007bc: R_386_32	BIOS::~BIOS()
	100007c0: R_386_32	BIOS::open(int, int, void*)
	100007c4: R_386_32	BIOS::close(int, int, void*)
	100007c8: R_386_32	Device::hibernate()
	100007cc: R_386_32	Device::wake()
	100007d0: R_386_32	Device::detect()
	100007d4: R_386_32	Device::disableLegacy()
	100007d8: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007dc <BIOS::~BIOS()>:
100007dc:	55                   	push   ebp
100007dd:	89 e5                	mov    ebp,esp
100007df:	83 ec 08             	sub    esp,0x8
100007e2:	ba 08 00 00 00       	mov    edx,0x8	100007e3: R_386_32	vtable for BIOS
100007e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ea:	89 10                	mov    DWORD PTR [eax],edx
100007ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ef:	83 ec 0c             	sub    esp,0xc
100007f2:	50                   	push   eax
100007f3:	e8 fc ff ff ff       	call   100007f4 <BIOS::~BIOS()+0x18>	100007f4: R_386_PC32	Device::~Device()
100007f8:	83 c4 10             	add    esp,0x10
100007fb:	90                   	nop
100007fc:	c9                   	leave  
100007fd:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007fe <BIOS::~BIOS()>:
100007fe:	55                   	push   ebp
100007ff:	89 e5                	mov    ebp,esp
10000801:	83 ec 08             	sub    esp,0x8
10000804:	83 ec 0c             	sub    esp,0xc
10000807:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000080a:	e8 fc ff ff ff       	call   1000080b <BIOS::~BIOS()+0xd>	1000080b: R_386_PC32	BIOS::~BIOS()
1000080f:	83 c4 10             	add    esp,0x10
10000812:	83 ec 08             	sub    esp,0x8
10000815:	68 58 01 00 00       	push   0x158
1000081a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000081d:	e8 fc ff ff ff       	call   1000081e <BIOS::~BIOS()+0x20>	1000081e: R_386_PC32	operator delete(void*, unsigned long)
10000822:	83 c4 10             	add    esp,0x10
10000825:	c9                   	leave  
10000826:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    

10000546 <setupTextMode()>:
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <setupTextMode()+0x29>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 a4 07 00 10       	push   0x100007a4	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	55                   	push   ebp
100006e7:	89 e5                	mov    ebp,esp
100006e9:	83 ec 08             	sub    esp,0x8
100006ec:	e8 fc ff ff ff       	call   100006ed <BIOS::open_(int, int, void*)+0x7>	100006ed: R_386_PC32	setupTextMode()
100006f1:	b8 00 00 00 00       	mov    eax,0x0
100006f6:	c9                   	leave  
100006f7:	c3                   	ret    

100006f8 <BIOS::open(int, int, void*)>:
100006f8:	b8 00 00 00 00       	mov    eax,0x0
100006fd:	c3                   	ret    

100006fe <BIOS::close(int, int, void*)>:
100006fe:	b8 00 00 00 00       	mov    eax,0x0
10000703:	c3                   	ret    
10000704:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000070a:	00 00                	add    BYTE PTR [eax],al
1000070c:	00 06                	add    BYTE PTR [esi],al
1000070e:	00 00                	add    BYTE PTR [eax],al
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	01 00                	add    DWORD PTR [eax],eax
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	02 00                	add    al,BYTE PTR [eax]
10000718:	00 00                	add    BYTE PTR [eax],al
1000071a:	04 00                	add    al,0x0
1000071c:	00 00                	add    BYTE PTR [eax],al
1000071e:	06                   	push   es
1000071f:	00 00                	add    BYTE PTR [eax],al
10000721:	00 10                	add    BYTE PTR [eax],dl
10000723:	00 00                	add    BYTE PTR [eax],al
10000725:	10 00                	adc    BYTE PTR [eax],al
10000727:	00 00                	add    BYTE PTR [eax],al
10000729:	00 00                	add    BYTE PTR [eax],al
1000072b:	c0 00 00             	rol    BYTE PTR [eax],0x0
1000072e:	00 c2                	add    dl,al
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	40                   	inc    eax
10000733:	c2 00 00             	ret    0x0
10000736:	80 c2 00             	add    dl,0x0
10000739:	00 c0                	add    al,al
1000073b:	c2 00 00             	ret    0x0
1000073e:	01 c2                	add    edx,eax
10000740:	00 00                	add    BYTE PTR [eax],al
10000742:	01 00                	add    DWORD PTR [eax],eax
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	06                   	push   es
10000747:	c2 00 00             	ret    0x0
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 10                	add    BYTE PTR [eax],dl
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	02 c2                	add    al,dl
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	02 00                	add    al,BYTE PTR [eax]
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	04 c2                	add    al,0xc2
1000075c:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000762:	00 c2                	add    dl,al
10000764:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000076a:	00 c2                	add    dl,al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	18 00                	sbb    BYTE PTR [eax],al
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	08 00                	or     BYTE PTR [eax],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	20 00                	and    BYTE PTR [eax],al
10000778:	00 00                	add    BYTE PTR [eax],al
1000077a:	00 10                	add    BYTE PTR [eax],dl
1000077c:	00 00                	add    BYTE PTR [eax],al
1000077e:	00 02                	add    BYTE PTR [edx],al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	e8 01 00 00 00       	call   10000788 <BIOS::close(int, int, void*)+0x8a>
10000787:	c8 ff ff ff          	enter  0xffff,0xff
1000078b:	ef                   	out    dx,eax
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 f0                	add    al,dh
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	c0 ff 00             	sar    bh,0x0
10000795:	00 10                	add    BYTE PTR [eax],dl
10000797:	c2 00 40             	ret    0x4000
1000079a:	48                   	dec    eax
1000079b:	c2 96 00             	ret    0x96
1000079e:	00 00                	add    BYTE PTR [eax],al
100007a0:	2c 01                	sub    al,0x1
100007a2:	00 00                	add    BYTE PTR [eax],al
100007a4:	4c                   	dec    esp
100007a5:	65 67 61             	gs addr16 popa 
100007a8:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007ab:	42                   	inc    edx
100007ac:	49                   	dec    ecx
100007ad:	4f                   	dec    edi
100007ae:	53                   	push   ebx
	...

100007b0 <vtable for BIOS>:
	...
	100007b8: R_386_32	BIOS::~BIOS()
	100007bc: R_386_32	BIOS::~BIOS()
	100007c0: R_386_32	BIOS::open(int, int, void*)
	100007c4: R_386_32	BIOS::close(int, int, void*)
	100007c8: R_386_32	Device::hibernate()
	100007cc: R_386_32	Device::wake()
	100007d0: R_386_32	Device::detect()
	100007d4: R_386_32	Device::disableLegacy()
	100007d8: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007dc <BIOS::~BIOS()>:
100007dc:	55                   	push   ebp
100007dd:	89 e5                	mov    ebp,esp
100007df:	83 ec 08             	sub    esp,0x8
100007e2:	ba 08 00 00 00       	mov    edx,0x8	100007e3: R_386_32	vtable for BIOS
100007e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ea:	89 10                	mov    DWORD PTR [eax],edx
100007ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ef:	83 ec 0c             	sub    esp,0xc
100007f2:	50                   	push   eax
100007f3:	e8 fc ff ff ff       	call   100007f4 <BIOS::~BIOS()+0x18>	100007f4: R_386_PC32	Device::~Device()
100007f8:	83 c4 10             	add    esp,0x10
100007fb:	90                   	nop
100007fc:	c9                   	leave  
100007fd:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007fe <BIOS::~BIOS()>:
100007fe:	55                   	push   ebp
100007ff:	89 e5                	mov    ebp,esp
10000801:	83 ec 08             	sub    esp,0x8
10000804:	83 ec 0c             	sub    esp,0xc
10000807:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000080a:	e8 fc ff ff ff       	call   1000080b <BIOS::~BIOS()+0xd>	1000080b: R_386_PC32	BIOS::~BIOS()
1000080f:	83 c4 10             	add    esp,0x10
10000812:	83 ec 08             	sub    esp,0x8
10000815:	68 58 01 00 00       	push   0x158
1000081a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000081d:	e8 fc ff ff ff       	call   1000081e <BIOS::~BIOS()+0x20>	1000081e: R_386_PC32	operator delete(void*, unsigned long)
10000822:	83 c4 10             	add    esp,0x10
10000825:	c9                   	leave  
10000826:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    

10000546 <setupTextMode()>:
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <setupTextMode()+0x29>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 a4 07 00 10       	push   0x100007a4	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	55                   	push   ebp
100006e7:	89 e5                	mov    ebp,esp
100006e9:	83 ec 08             	sub    esp,0x8
100006ec:	e8 fc ff ff ff       	call   100006ed <BIOS::open_(int, int, void*)+0x7>	100006ed: R_386_PC32	setupTextMode()
100006f1:	b8 00 00 00 00       	mov    eax,0x0
100006f6:	c9                   	leave  
100006f7:	c3                   	ret    

100006f8 <BIOS::open(int, int, void*)>:
100006f8:	b8 00 00 00 00       	mov    eax,0x0
100006fd:	c3                   	ret    

100006fe <BIOS::close(int, int, void*)>:
100006fe:	b8 00 00 00 00       	mov    eax,0x0
10000703:	c3                   	ret    
10000704:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000070a:	00 00                	add    BYTE PTR [eax],al
1000070c:	00 06                	add    BYTE PTR [esi],al
1000070e:	00 00                	add    BYTE PTR [eax],al
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	01 00                	add    DWORD PTR [eax],eax
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	02 00                	add    al,BYTE PTR [eax]
10000718:	00 00                	add    BYTE PTR [eax],al
1000071a:	04 00                	add    al,0x0
1000071c:	00 00                	add    BYTE PTR [eax],al
1000071e:	06                   	push   es
1000071f:	00 00                	add    BYTE PTR [eax],al
10000721:	00 10                	add    BYTE PTR [eax],dl
10000723:	00 00                	add    BYTE PTR [eax],al
10000725:	10 00                	adc    BYTE PTR [eax],al
10000727:	00 00                	add    BYTE PTR [eax],al
10000729:	00 00                	add    BYTE PTR [eax],al
1000072b:	c0 00 00             	rol    BYTE PTR [eax],0x0
1000072e:	00 c2                	add    dl,al
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	40                   	inc    eax
10000733:	c2 00 00             	ret    0x0
10000736:	80 c2 00             	add    dl,0x0
10000739:	00 c0                	add    al,al
1000073b:	c2 00 00             	ret    0x0
1000073e:	01 c2                	add    edx,eax
10000740:	00 00                	add    BYTE PTR [eax],al
10000742:	01 00                	add    DWORD PTR [eax],eax
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	06                   	push   es
10000747:	c2 00 00             	ret    0x0
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 10                	add    BYTE PTR [eax],dl
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	02 c2                	add    al,dl
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	02 00                	add    al,BYTE PTR [eax]
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	04 c2                	add    al,0xc2
1000075c:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000762:	00 c2                	add    dl,al
10000764:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000076a:	00 c2                	add    dl,al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	18 00                	sbb    BYTE PTR [eax],al
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	08 00                	or     BYTE PTR [eax],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	20 00                	and    BYTE PTR [eax],al
10000778:	00 00                	add    BYTE PTR [eax],al
1000077a:	00 10                	add    BYTE PTR [eax],dl
1000077c:	00 00                	add    BYTE PTR [eax],al
1000077e:	00 02                	add    BYTE PTR [edx],al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	e8 01 00 00 00       	call   10000788 <BIOS::close(int, int, void*)+0x8a>
10000787:	c8 ff ff ff          	enter  0xffff,0xff
1000078b:	ef                   	out    dx,eax
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 f0                	add    al,dh
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	c0 ff 00             	sar    bh,0x0
10000795:	00 10                	add    BYTE PTR [eax],dl
10000797:	c2 00 40             	ret    0x4000
1000079a:	48                   	dec    eax
1000079b:	c2 96 00             	ret    0x96
1000079e:	00 00                	add    BYTE PTR [eax],al
100007a0:	2c 01                	sub    al,0x1
100007a2:	00 00                	add    BYTE PTR [eax],al
100007a4:	4c                   	dec    esp
100007a5:	65 67 61             	gs addr16 popa 
100007a8:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007ab:	42                   	inc    edx
100007ac:	49                   	dec    ecx
100007ad:	4f                   	dec    edi
100007ae:	53                   	push   ebx
	...

100007b0 <vtable for BIOS>:
	...
	100007b8: R_386_32	BIOS::~BIOS()
	100007bc: R_386_32	BIOS::~BIOS()
	100007c0: R_386_32	BIOS::open(int, int, void*)
	100007c4: R_386_32	BIOS::close(int, int, void*)
	100007c8: R_386_32	Device::hibernate()
	100007cc: R_386_32	Device::wake()
	100007d0: R_386_32	Device::detect()
	100007d4: R_386_32	Device::disableLegacy()
	100007d8: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007dc <BIOS::~BIOS()>:
100007dc:	55                   	push   ebp
100007dd:	89 e5                	mov    ebp,esp
100007df:	83 ec 08             	sub    esp,0x8
100007e2:	ba 08 00 00 00       	mov    edx,0x8	100007e3: R_386_32	vtable for BIOS
100007e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ea:	89 10                	mov    DWORD PTR [eax],edx
100007ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ef:	83 ec 0c             	sub    esp,0xc
100007f2:	50                   	push   eax
100007f3:	e8 fc ff ff ff       	call   100007f4 <BIOS::~BIOS()+0x18>	100007f4: R_386_PC32	Device::~Device()
100007f8:	83 c4 10             	add    esp,0x10
100007fb:	90                   	nop
100007fc:	c9                   	leave  
100007fd:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007fe <BIOS::~BIOS()>:
100007fe:	55                   	push   ebp
100007ff:	89 e5                	mov    ebp,esp
10000801:	83 ec 08             	sub    esp,0x8
10000804:	83 ec 0c             	sub    esp,0xc
10000807:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000080a:	e8 fc ff ff ff       	call   1000080b <BIOS::~BIOS()+0xd>	1000080b: R_386_PC32	BIOS::~BIOS()
1000080f:	83 c4 10             	add    esp,0x10
10000812:	83 ec 08             	sub    esp,0x8
10000815:	68 58 01 00 00       	push   0x158
1000081a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000081d:	e8 fc ff ff ff       	call   1000081e <BIOS::~BIOS()+0x20>	1000081e: R_386_PC32	operator delete(void*, unsigned long)
10000822:	83 c4 10             	add    esp,0x10
10000825:	c9                   	leave  
10000826:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    

10000546 <setupTextMode()>:
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <setupTextMode()+0x29>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 a4 07 00 10       	push   0x100007a4	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	55                   	push   ebp
100006e7:	89 e5                	mov    ebp,esp
100006e9:	83 ec 08             	sub    esp,0x8
100006ec:	e8 fc ff ff ff       	call   100006ed <BIOS::open_(int, int, void*)+0x7>	100006ed: R_386_PC32	setupTextMode()
100006f1:	b8 00 00 00 00       	mov    eax,0x0
100006f6:	c9                   	leave  
100006f7:	c3                   	ret    

100006f8 <BIOS::open(int, int, void*)>:
100006f8:	b8 00 00 00 00       	mov    eax,0x0
100006fd:	c3                   	ret    

100006fe <BIOS::close(int, int, void*)>:
100006fe:	b8 00 00 00 00       	mov    eax,0x0
10000703:	c3                   	ret    
10000704:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000070a:	00 00                	add    BYTE PTR [eax],al
1000070c:	00 06                	add    BYTE PTR [esi],al
1000070e:	00 00                	add    BYTE PTR [eax],al
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	01 00                	add    DWORD PTR [eax],eax
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	02 00                	add    al,BYTE PTR [eax]
10000718:	00 00                	add    BYTE PTR [eax],al
1000071a:	04 00                	add    al,0x0
1000071c:	00 00                	add    BYTE PTR [eax],al
1000071e:	06                   	push   es
1000071f:	00 00                	add    BYTE PTR [eax],al
10000721:	00 10                	add    BYTE PTR [eax],dl
10000723:	00 00                	add    BYTE PTR [eax],al
10000725:	10 00                	adc    BYTE PTR [eax],al
10000727:	00 00                	add    BYTE PTR [eax],al
10000729:	00 00                	add    BYTE PTR [eax],al
1000072b:	c0 00 00             	rol    BYTE PTR [eax],0x0
1000072e:	00 c2                	add    dl,al
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	40                   	inc    eax
10000733:	c2 00 00             	ret    0x0
10000736:	80 c2 00             	add    dl,0x0
10000739:	00 c0                	add    al,al
1000073b:	c2 00 00             	ret    0x0
1000073e:	01 c2                	add    edx,eax
10000740:	00 00                	add    BYTE PTR [eax],al
10000742:	01 00                	add    DWORD PTR [eax],eax
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	06                   	push   es
10000747:	c2 00 00             	ret    0x0
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 10                	add    BYTE PTR [eax],dl
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	02 c2                	add    al,dl
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	02 00                	add    al,BYTE PTR [eax]
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	04 c2                	add    al,0xc2
1000075c:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000762:	00 c2                	add    dl,al
10000764:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000076a:	00 c2                	add    dl,al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	18 00                	sbb    BYTE PTR [eax],al
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	08 00                	or     BYTE PTR [eax],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	20 00                	and    BYTE PTR [eax],al
10000778:	00 00                	add    BYTE PTR [eax],al
1000077a:	00 10                	add    BYTE PTR [eax],dl
1000077c:	00 00                	add    BYTE PTR [eax],al
1000077e:	00 02                	add    BYTE PTR [edx],al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	e8 01 00 00 00       	call   10000788 <BIOS::close(int, int, void*)+0x8a>
10000787:	c8 ff ff ff          	enter  0xffff,0xff
1000078b:	ef                   	out    dx,eax
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 f0                	add    al,dh
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	c0 ff 00             	sar    bh,0x0
10000795:	00 10                	add    BYTE PTR [eax],dl
10000797:	c2 00 40             	ret    0x4000
1000079a:	48                   	dec    eax
1000079b:	c2 96 00             	ret    0x96
1000079e:	00 00                	add    BYTE PTR [eax],al
100007a0:	2c 01                	sub    al,0x1
100007a2:	00 00                	add    BYTE PTR [eax],al
100007a4:	4c                   	dec    esp
100007a5:	65 67 61             	gs addr16 popa 
100007a8:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007ab:	42                   	inc    edx
100007ac:	49                   	dec    ecx
100007ad:	4f                   	dec    edi
100007ae:	53                   	push   ebx
	...

100007b0 <vtable for BIOS>:
	...
	100007b8: R_386_32	BIOS::~BIOS()
	100007bc: R_386_32	BIOS::~BIOS()
	100007c0: R_386_32	BIOS::open(int, int, void*)
	100007c4: R_386_32	BIOS::close(int, int, void*)
	100007c8: R_386_32	Device::hibernate()
	100007cc: R_386_32	Device::wake()
	100007d0: R_386_32	Device::detect()
	100007d4: R_386_32	Device::disableLegacy()
	100007d8: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007dc <BIOS::~BIOS()>:
100007dc:	55                   	push   ebp
100007dd:	89 e5                	mov    ebp,esp
100007df:	83 ec 08             	sub    esp,0x8
100007e2:	ba 08 00 00 00       	mov    edx,0x8	100007e3: R_386_32	vtable for BIOS
100007e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ea:	89 10                	mov    DWORD PTR [eax],edx
100007ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ef:	83 ec 0c             	sub    esp,0xc
100007f2:	50                   	push   eax
100007f3:	e8 fc ff ff ff       	call   100007f4 <BIOS::~BIOS()+0x18>	100007f4: R_386_PC32	Device::~Device()
100007f8:	83 c4 10             	add    esp,0x10
100007fb:	90                   	nop
100007fc:	c9                   	leave  
100007fd:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007fe <BIOS::~BIOS()>:
100007fe:	55                   	push   ebp
100007ff:	89 e5                	mov    ebp,esp
10000801:	83 ec 08             	sub    esp,0x8
10000804:	83 ec 0c             	sub    esp,0xc
10000807:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000080a:	e8 fc ff ff ff       	call   1000080b <BIOS::~BIOS()+0xd>	1000080b: R_386_PC32	BIOS::~BIOS()
1000080f:	83 c4 10             	add    esp,0x10
10000812:	83 ec 08             	sub    esp,0x8
10000815:	68 58 01 00 00       	push   0x158
1000081a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000081d:	e8 fc ff ff ff       	call   1000081e <BIOS::~BIOS()+0x20>	1000081e: R_386_PC32	operator delete(void*, unsigned long)
10000822:	83 c4 10             	add    esp,0x10
10000825:	c9                   	leave  
10000826:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start()-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <start()-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <start()>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000001c:	83 ec 0c             	sub    esp,0xc
1000001f:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000022:	e8 fc ff ff ff       	call   10000023 <start()+0x15>	10000023: R_386_PC32	malloc
10000027:	83 c4 10             	add    esp,0x10
1000002a:	89 c3                	mov    ebx,eax
1000002c:	83 ec 0c             	sub    esp,0xc
1000002f:	53                   	push   ebx
10000030:	e8 fc ff ff ff       	call   10000031 <start()+0x23>	10000031: R_386_PC32	BIOS::BIOS()
10000035:	83 c4 10             	add    esp,0x10
10000038:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000003c: R_386_32	Krnl::computer
10000040:	83 ec 08             	sub    esp,0x8
10000043:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000046:	50                   	push   eax
10000047:	e8 fc ff ff ff       	call   10000048 <start()+0x3a>	10000048: R_386_PC32	Device::addChild(Device*)
1000004c:	83 c4 10             	add    esp,0x10
1000004f:	6a 00                	push   0x0
10000051:	6a 00                	push   0x0
10000053:	6a 00                	push   0x0
10000055:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000058:	e8 fc ff ff ff       	call   10000059 <start()+0x4b>	10000059: R_386_PC32	BIOS::open_(int, int, void*)
1000005d:	83 c4 10             	add    esp,0x10
10000060:	90                   	nop
10000061:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000064:	c9                   	leave  
10000065:	c3                   	ret    

10000066 <hwTextMode_loadInData(VgaText*)>:
10000066:	55                   	push   ebp
10000067:	89 e5                	mov    ebp,esp
10000069:	83 ec 10             	sub    esp,0x10
1000006c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000006d: R_386_32	VGA_TEXT_MODE_ADDRESS
10000071:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000074:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
1000007b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000081:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000084:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000008b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000091:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000094:	7d 2f                	jge    100000c5 <hwTextMode_loadInData(VgaText*)+0x5f>
10000096:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000009d:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
100000a1:	7f 1d                	jg     100000c0 <hwTextMode_loadInData(VgaText*)+0x5a>
100000a3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a6:	8d 50 02             	lea    edx,[eax+0x2]
100000a9:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100000ac:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
100000af:	8d 4a 02             	lea    ecx,[edx+0x2]
100000b2:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000b5:	66 8b 00             	mov    ax,WORD PTR [eax]
100000b8:	66 89 02             	mov    WORD PTR [edx],ax
100000bb:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100000be:	eb dd                	jmp    1000009d <hwTextMode_loadInData(VgaText*)+0x37>
100000c0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100000c3:	eb c6                	jmp    1000008b <hwTextMode_loadInData(VgaText*)+0x25>
100000c5:	90                   	nop
100000c6:	c9                   	leave  
100000c7:	c3                   	ret    

100000c8 <hwTextMode_loadInTitle(VgaText*, char*)>:
100000c8:	55                   	push   ebp
100000c9:	89 e5                	mov    ebp,esp
100000cb:	83 ec 10             	sub    esp,0x10
100000ce:	a0 00 00 00 00       	mov    al,ds:0x0	100000cf: R_386_32	vgamono
100000d3:	84 c0                	test   al,al
100000d5:	74 14                	je     100000eb <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
100000d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000da:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
100000e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e4:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
100000eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100000ec: R_386_32	VGA_TEXT_MODE_ADDRESS
100000f0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000f3:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000fa:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000fe:	7f 3f                	jg     1000013f <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
10000100:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000103:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000106:	01 d0                	add    eax,edx
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	0f b6 c0             	movzx  eax,al
1000010d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000110:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
10000113:	0f b7 d2             	movzx  edx,dx
10000116:	89 d1                	mov    ecx,edx
10000118:	83 e1 0f             	and    ecx,0xf
1000011b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000011e:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
10000121:	c1 e2 04             	shl    edx,0x4
10000124:	0f b6 d2             	movzx  edx,dl
10000127:	09 ca                	or     edx,ecx
10000129:	c1 e2 08             	shl    edx,0x8
1000012c:	09 c2                	or     edx,eax
1000012e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000131:	8d 48 02             	lea    ecx,[eax+0x2]
10000134:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000137:	66 89 10             	mov    WORD PTR [eax],dx
1000013a:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000013d:	eb bb                	jmp    100000fa <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
1000013f:	90                   	nop
10000140:	c9                   	leave  
10000141:	c3                   	ret    

10000142 <hwTextMode_scrollScreen(VgaText*)>:
10000142:	55                   	push   ebp
10000143:	89 e5                	mov    ebp,esp
10000145:	53                   	push   ebx
10000146:	83 ec 14             	sub    esp,0x14
10000149:	a0 00 00 00 00       	mov    al,ds:0x0	1000014a: R_386_32	vgamono
1000014e:	84 c0                	test   al,al
10000150:	74 14                	je     10000166 <hwTextMode_scrollScreen(VgaText*)+0x24>
10000152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000155:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
1000015c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000015f:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
10000166:	a1 00 00 00 00       	mov    eax,ds:0x0	10000167: R_386_32	VGA_TEXT_MODE_ADDRESS
1000016b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000016e:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
10000175:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000179:	0f 8f cf 00 00 00    	jg     1000024e <hwTextMode_scrollScreen(VgaText*)+0x10c>
1000017f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000186:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
1000018d:	0f 8f b3 00 00 00    	jg     10000246 <hwTextMode_scrollScreen(VgaText*)+0x104>
10000193:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000196:	89 d0                	mov    eax,edx
10000198:	c1 e0 02             	shl    eax,0x2
1000019b:	01 d0                	add    eax,edx
1000019d:	c1 e0 05             	shl    eax,0x5
100001a0:	89 c2                	mov    edx,eax
100001a2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001a5:	01 d0                	add    eax,edx
100001a7:	89 c2                	mov    edx,eax
100001a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001ac:	8d 0c 02             	lea    ecx,[edx+eax*1]
100001af:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001b2:	89 d0                	mov    eax,edx
100001b4:	c1 e0 02             	shl    eax,0x2
100001b7:	01 d0                	add    eax,edx
100001b9:	c1 e0 05             	shl    eax,0x5
100001bc:	89 c2                	mov    edx,eax
100001be:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001c1:	01 d0                	add    eax,edx
100001c3:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
100001c9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001cc:	01 c2                	add    edx,eax
100001ce:	8a 01                	mov    al,BYTE PTR [ecx]
100001d0:	88 02                	mov    BYTE PTR [edx],al
100001d2:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
100001d6:	75 66                	jne    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001d8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001db:	83 e0 01             	and    eax,0x1
100001de:	85 c0                	test   eax,eax
100001e0:	74 3e                	je     10000220 <hwTextMode_scrollScreen(VgaText*)+0xde>
100001e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001e5:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100001e8:	0f b6 c8             	movzx  ecx,al
100001eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001ee:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
100001f1:	0f b6 d0             	movzx  edx,al
100001f4:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
100001f7:	89 d8                	mov    eax,ebx
100001f9:	c1 e0 02             	shl    eax,0x2
100001fc:	01 d8                	add    eax,ebx
100001fe:	c1 e0 05             	shl    eax,0x5
10000201:	89 c3                	mov    ebx,eax
10000203:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000206:	01 d8                	add    eax,ebx
10000208:	89 c3                	mov    ebx,eax
1000020a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000020d:	01 c3                	add    ebx,eax
1000020f:	83 ec 08             	sub    esp,0x8
10000212:	51                   	push   ecx
10000213:	52                   	push   edx
10000214:	e8 fc ff ff ff       	call   10000215 <hwTextMode_scrollScreen(VgaText*)+0xd3>	10000215: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000219:	83 c4 10             	add    esp,0x10
1000021c:	88 03                	mov    BYTE PTR [ebx],al
1000021e:	eb 1e                	jmp    1000023e <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000220:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000223:	89 d0                	mov    eax,edx
10000225:	c1 e0 02             	shl    eax,0x2
10000228:	01 d0                	add    eax,edx
1000022a:	c1 e0 05             	shl    eax,0x5
1000022d:	89 c2                	mov    edx,eax
1000022f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000232:	01 d0                	add    eax,edx
10000234:	89 c2                	mov    edx,eax
10000236:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000239:	01 d0                	add    eax,edx
1000023b:	c6 00 20             	mov    BYTE PTR [eax],0x20
1000023e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000241:	e9 40 ff ff ff       	jmp    10000186 <hwTextMode_scrollScreen(VgaText*)+0x44>
10000246:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000249:	e9 27 ff ff ff       	jmp    10000175 <hwTextMode_scrollScreen(VgaText*)+0x33>
1000024e:	90                   	nop
1000024f:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000252:	c9                   	leave  
10000253:	c3                   	ret    

10000254 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
10000254:	55                   	push   ebp
10000255:	89 e5                	mov    ebp,esp
10000257:	83 ec 28             	sub    esp,0x28
1000025a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000025d:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000260:	a0 00 00 00 00       	mov    al,ds:0x0	10000261: R_386_32	vgamono
10000265:	84 c0                	test   al,al
10000267:	74 0e                	je     10000277 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000269:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000270:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
10000277:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000027a:	0f b6 d0             	movzx  edx,al
1000027d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000280:	0f b6 c0             	movzx  eax,al
10000283:	83 ec 08             	sub    esp,0x8
10000286:	52                   	push   edx
10000287:	50                   	push   eax
10000288:	e8 fc ff ff ff       	call   10000289 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000289: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
1000028d:	83 c4 10             	add    esp,0x10
10000290:	0f b6 d0             	movzx  edx,al
10000293:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
10000297:	83 ec 08             	sub    esp,0x8
1000029a:	52                   	push   edx
1000029b:	50                   	push   eax
1000029c:	e8 fc ff ff ff       	call   1000029d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	1000029d: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
100002a1:	83 c4 10             	add    esp,0x10
100002a4:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002a8:	a1 00 00 00 00       	mov    eax,ds:0x0	100002a9: R_386_32	VGA_TEXT_MODE_ADDRESS
100002ad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100002b0:	a0 00 00 00 00       	mov    al,ds:0x0	100002b1: R_386_32	vgamono
100002b5:	84 c0                	test   al,al
100002b7:	74 0c                	je     100002c5 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
100002b9:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
100002be:	80 cc 02             	or     ah,0x2
100002c1:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
100002c5:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100002c8:	89 d0                	mov    eax,edx
100002ca:	c1 e0 02             	shl    eax,0x2
100002cd:	01 d0                	add    eax,edx
100002cf:	c1 e0 04             	shl    eax,0x4
100002d2:	89 c2                	mov    edx,eax
100002d4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100002d7:	8d 0c 02             	lea    ecx,[edx+eax*1]
100002da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002dd:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100002e0:	ba 19 00 00 00       	mov    edx,0x19
100002e5:	29 c2                	sub    edx,eax
100002e7:	89 d0                	mov    eax,edx
100002e9:	c1 e0 02             	shl    eax,0x2
100002ec:	01 d0                	add    eax,edx
100002ee:	c1 e0 04             	shl    eax,0x4
100002f1:	01 c8                	add    eax,ecx
100002f3:	01 c0                	add    eax,eax
100002f5:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002f8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002fb:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002ff:	66 89 02             	mov    WORD PTR [edx],ax
10000302:	90                   	nop
10000303:	c9                   	leave  
10000304:	c3                   	ret    

10000305 <hwTextMode_showCursor(VgaText*, bool)>:
10000305:	55                   	push   ebp
10000306:	89 e5                	mov    ebp,esp
10000308:	83 ec 24             	sub    esp,0x24
1000030b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000030e:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000311:	a0 00 00 00 00       	mov    al,ds:0x0	10000312: R_386_32	vgamono
10000316:	84 c0                	test   al,al
10000318:	0f 85 bd 00 00 00    	jne    100003db <hwTextMode_showCursor(VgaText*, bool)+0xd6>
1000031e:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
10000322:	0f 84 8d 00 00 00    	je     100003b5 <hwTextMode_showCursor(VgaText*, bool)+0xb0>
10000328:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
1000032e:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
10000332:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000335:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
10000339:	ee                   	out    dx,al
1000033a:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
10000340:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
10000344:	89 c2                	mov    edx,eax
10000346:	ec                   	in     al,dx
10000347:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000034a:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000034d:	83 e0 c0             	and    eax,0xffffffc0
10000350:	88 c2                	mov    dl,al
10000352:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000355:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000358:	b1 0f                	mov    cl,0xf
1000035a:	29 c1                	sub    ecx,eax
1000035c:	88 c8                	mov    al,cl
1000035e:	09 d0                	or     eax,edx
10000360:	0f b6 c0             	movzx  eax,al
10000363:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000369:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000036c:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
1000036f:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
10000373:	ee                   	out    dx,al
10000374:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
1000037a:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
1000037e:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000381:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
10000385:	ee                   	out    dx,al
10000386:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
1000038c:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000390:	89 c2                	mov    edx,eax
10000392:	ec                   	in     al,dx
10000393:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
10000396:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000399:	83 e0 e0             	and    eax,0xffffffe0
1000039c:	83 c8 0f             	or     eax,0xf
1000039f:	0f b6 c0             	movzx  eax,al
100003a2:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
100003a8:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100003ab:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100003ae:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100003b2:	ee                   	out    dx,al
100003b3:	eb 27                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003b5:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
100003bb:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
100003bf:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
100003c2:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
100003c6:	ee                   	out    dx,al
100003c7:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
100003cd:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
100003d1:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100003d4:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100003d8:	ee                   	out    dx,al
100003d9:	eb 01                	jmp    100003dc <hwTextMode_showCursor(VgaText*, bool)+0xd7>
100003db:	90                   	nop
100003dc:	c9                   	leave  
100003dd:	c3                   	ret    

100003de <hwTextMode_update(VgaText*)>:
100003de:	90                   	nop
100003df:	c3                   	ret    

100003e0 <hwTextMode_updateCursor(VgaText*)>:
100003e0:	55                   	push   ebp
100003e1:	89 e5                	mov    ebp,esp
100003e3:	53                   	push   ebx
100003e4:	83 ec 20             	sub    esp,0x20
100003e7:	a0 00 00 00 00       	mov    al,ds:0x0	100003e8: R_386_32	vgamono
100003ec:	84 c0                	test   al,al
100003ee:	0f 85 87 00 00 00    	jne    1000047b <hwTextMode_updateCursor(VgaText*)+0x9b>
100003f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003fa:	89 c1                	mov    ecx,eax
100003fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ff:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10000402:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000405:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000408:	bb 19 00 00 00       	mov    ebx,0x19
1000040d:	29 c3                	sub    ebx,eax
1000040f:	89 d8                	mov    eax,ebx
10000411:	01 d0                	add    eax,edx
10000413:	89 c2                	mov    edx,eax
10000415:	89 d0                	mov    eax,edx
10000417:	c1 e0 02             	shl    eax,0x2
1000041a:	01 d0                	add    eax,edx
1000041c:	c1 e0 04             	shl    eax,0x4
1000041f:	01 c8                	add    eax,ecx
10000421:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
10000425:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
1000042b:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
1000042f:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
10000432:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10000435:	ee                   	out    dx,al
10000436:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000043a:	0f b6 c0             	movzx  eax,al
1000043d:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
10000443:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
10000446:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10000449:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000044c:	ee                   	out    dx,al
1000044d:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
10000453:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
10000457:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000045a:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000045d:	ee                   	out    dx,al
1000045e:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000462:	66 c1 e8 08          	shr    ax,0x8
10000466:	0f b6 c0             	movzx  eax,al
10000469:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
1000046f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10000472:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000475:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000478:	ee                   	out    dx,al
10000479:	eb 01                	jmp    1000047c <hwTextMode_updateCursor(VgaText*)+0x9c>
1000047b:	90                   	nop
1000047c:	83 c4 20             	add    esp,0x20
1000047f:	5b                   	pop    ebx
10000480:	5d                   	pop    ebp
10000481:	c3                   	ret    

10000482 <hwTextMode_disableBlink(VgaText*, bool)>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 24             	sub    esp,0x24
10000488:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000048b:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
1000048e:	a0 00 00 00 00       	mov    al,ds:0x0	1000048f: R_386_32	vgamono
10000493:	84 c0                	test   al,al
10000495:	0f 85 a8 00 00 00    	jne    10000543 <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
1000049b:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
1000049e:	83 f0 01             	xor    eax,0x1
100004a1:	84 c0                	test   al,al
100004a3:	74 4e                	je     100004f3 <hwTextMode_disableBlink(VgaText*, bool)+0x71>
100004a5:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
100004ab:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
100004af:	89 c2                	mov    edx,eax
100004b1:	ec                   	in     al,dx
100004b2:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
100004b5:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
100004bb:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
100004bf:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100004c2:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
100004c6:	ee                   	out    dx,al
100004c7:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
100004cd:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100004d1:	89 c2                	mov    edx,eax
100004d3:	ec                   	in     al,dx
100004d4:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100004d7:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100004da:	83 c8 08             	or     eax,0x8
100004dd:	0f b6 c0             	movzx  eax,al
100004e0:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
100004e6:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
100004e9:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
100004ec:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
100004f0:	ee                   	out    dx,al
100004f1:	eb 51                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004f3:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004f9:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004fd:	89 c2                	mov    edx,eax
100004ff:	ec                   	in     al,dx
10000500:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
10000503:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
10000509:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
1000050d:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
10000510:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000514:	ee                   	out    dx,al
10000515:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
1000051b:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
1000051f:	89 c2                	mov    edx,eax
10000521:	ec                   	in     al,dx
10000522:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
10000525:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
10000528:	0f b6 c0             	movzx  eax,al
1000052b:	25 f7 00 00 00       	and    eax,0xf7
10000530:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
10000536:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
10000539:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
1000053c:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
10000540:	ee                   	out    dx,al
10000541:	eb 01                	jmp    10000544 <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
10000543:	90                   	nop
10000544:	c9                   	leave  
10000545:	c3                   	ret    

10000546 <setupTextMode()>:
10000546:	b8 10 04 00 00       	mov    eax,0x410
1000054b:	66 8b 00             	mov    ax,WORD PTR [eax]
1000054e:	0f b7 c0             	movzx  eax,ax
10000551:	83 e0 30             	and    eax,0x30
10000554:	83 f8 30             	cmp    eax,0x30
10000557:	75 16                	jne    1000056f <setupTextMode()+0x29>
10000559:	a1 00 00 00 00       	mov    eax,ds:0x0	1000055a: R_386_32	VGA_TEXT_MODE_ADDRESS
1000055e:	2d 00 80 00 00       	sub    eax,0x8000
10000563:	a3 00 00 00 00       	mov    ds:0x0,eax	10000564: R_386_32	VGA_TEXT_MODE_ADDRESS
10000568:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	1000056a: R_386_32	vgamono
1000056f:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000571: R_386_32	textModeImplementation
	10000575: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000579:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	1000057b: R_386_32	textModeImplementation
	1000057f: R_386_32	hwTextMode_loadInData(VgaText*)
10000583:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000585: R_386_32	textModeImplementation
	10000589: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
1000058d:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	1000058f: R_386_32	textModeImplementation
	10000593: R_386_32	hwTextMode_scrollScreen(VgaText*)
10000597:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000599: R_386_32	textModeImplementation
	1000059d: R_386_32	hwTextMode_showCursor(VgaText*, bool)
100005a1:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	100005a3: R_386_32	textModeImplementation
	100005a7: R_386_32	hwTextMode_update(VgaText*)
100005ab:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	100005ad: R_386_32	textModeImplementation
	100005b1: R_386_32	hwTextMode_updateCursor(VgaText*)
100005b5:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	100005b7: R_386_32	textModeImplementation
	100005bb: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
100005bf:	90                   	nop
100005c0:	c3                   	ret    
100005c1:	90                   	nop

100005c2 <BIOS::BIOS()>:
100005c2:	55                   	push   ebp
100005c3:	89 e5                	mov    ebp,esp
100005c5:	83 ec 08             	sub    esp,0x8
100005c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005cb:	83 ec 08             	sub    esp,0x8
100005ce:	68 a4 07 00 10       	push   0x100007a4	100005cf: R_386_32	.text
100005d3:	50                   	push   eax
100005d4:	e8 fc ff ff ff       	call   100005d5 <BIOS::BIOS()+0x13>	100005d5: R_386_PC32	Device::Device(char const*)
100005d9:	83 c4 10             	add    esp,0x10
100005dc:	ba 08 00 00 00       	mov    edx,0x8	100005dd: R_386_32	vtable for BIOS
100005e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e4:	89 10                	mov    DWORD PTR [eax],edx
100005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e9:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005ef:	0f b6 d0             	movzx  edx,al
100005f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f5:	83 c2 08             	add    edx,0x8
100005f8:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
10000600:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000604:	83 e1 00             	and    ecx,0x0
10000607:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000060b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000614:	8d 50 01             	lea    edx,[eax+0x1]
10000617:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000061a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000620:	0f b6 d0             	movzx  edx,al
10000623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000626:	83 c2 08             	add    edx,0x8
10000629:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000062d:	0f b6 c9             	movzx  ecx,cl
10000630:	81 c9 00 00 01 00    	or     ecx,0x10000
10000636:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000063a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000063d:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000643:	0f b6 d0             	movzx  edx,al
10000646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000649:	83 c2 08             	add    edx,0x8
1000064c:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
10000654:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000658:	83 e1 00             	and    ecx,0x0
1000065b:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000662:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000668:	8d 50 01             	lea    edx,[eax+0x1]
1000066b:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066e:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000674:	0f b6 d0             	movzx  edx,al
10000677:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000067a:	83 c2 08             	add    edx,0x8
1000067d:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000681:	0f b6 c9             	movzx  ecx,cl
10000684:	81 c9 00 00 00 04    	or     ecx,0x4000000
1000068a:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000691:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000697:	0f b6 d0             	movzx  edx,al
1000069a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000069d:	83 c2 08             	add    edx,0x8
100006a0:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
100006a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100006ac:	83 e1 00             	and    ecx,0x0
100006af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100006b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100006bc:	8d 50 01             	lea    edx,[eax+0x1]
100006bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100006c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100006c8:	0f b6 d0             	movzx  edx,al
100006cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100006ce:	83 c2 08             	add    edx,0x8
100006d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100006d5:	0f b6 c9             	movzx  ecx,cl
100006d8:	81 c9 00 00 00 02    	or     ecx,0x2000000
100006de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100006e2:	90                   	nop
100006e3:	c9                   	leave  
100006e4:	c3                   	ret    
100006e5:	90                   	nop

100006e6 <BIOS::open_(int, int, void*)>:
100006e6:	55                   	push   ebp
100006e7:	89 e5                	mov    ebp,esp
100006e9:	83 ec 08             	sub    esp,0x8
100006ec:	e8 fc ff ff ff       	call   100006ed <BIOS::open_(int, int, void*)+0x7>	100006ed: R_386_PC32	setupTextMode()
100006f1:	b8 00 00 00 00       	mov    eax,0x0
100006f6:	c9                   	leave  
100006f7:	c3                   	ret    

100006f8 <BIOS::open(int, int, void*)>:
100006f8:	b8 00 00 00 00       	mov    eax,0x0
100006fd:	c3                   	ret    

100006fe <BIOS::close(int, int, void*)>:
100006fe:	b8 00 00 00 00       	mov    eax,0x0
10000703:	c3                   	ret    
10000704:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
1000070a:	00 00                	add    BYTE PTR [eax],al
1000070c:	00 06                	add    BYTE PTR [esi],al
1000070e:	00 00                	add    BYTE PTR [eax],al
10000710:	00 00                	add    BYTE PTR [eax],al
10000712:	01 00                	add    DWORD PTR [eax],eax
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	02 00                	add    al,BYTE PTR [eax]
10000718:	00 00                	add    BYTE PTR [eax],al
1000071a:	04 00                	add    al,0x0
1000071c:	00 00                	add    BYTE PTR [eax],al
1000071e:	06                   	push   es
1000071f:	00 00                	add    BYTE PTR [eax],al
10000721:	00 10                	add    BYTE PTR [eax],dl
10000723:	00 00                	add    BYTE PTR [eax],al
10000725:	10 00                	adc    BYTE PTR [eax],al
10000727:	00 00                	add    BYTE PTR [eax],al
10000729:	00 00                	add    BYTE PTR [eax],al
1000072b:	c0 00 00             	rol    BYTE PTR [eax],0x0
1000072e:	00 c2                	add    dl,al
10000730:	00 00                	add    BYTE PTR [eax],al
10000732:	40                   	inc    eax
10000733:	c2 00 00             	ret    0x0
10000736:	80 c2 00             	add    dl,0x0
10000739:	00 c0                	add    al,al
1000073b:	c2 00 00             	ret    0x0
1000073e:	01 c2                	add    edx,eax
10000740:	00 00                	add    BYTE PTR [eax],al
10000742:	01 00                	add    DWORD PTR [eax],eax
10000744:	00 00                	add    BYTE PTR [eax],al
10000746:	06                   	push   es
10000747:	c2 00 00             	ret    0x0
1000074a:	02 00                	add    al,BYTE PTR [eax]
1000074c:	00 10                	add    BYTE PTR [eax],dl
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	02 c2                	add    al,dl
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	02 00                	add    al,BYTE PTR [eax]
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	04 c2                	add    al,0xc2
1000075c:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000762:	00 c2                	add    dl,al
10000764:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000076a:	00 c2                	add    dl,al
1000076c:	00 00                	add    BYTE PTR [eax],al
1000076e:	18 00                	sbb    BYTE PTR [eax],al
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	08 00                	or     BYTE PTR [eax],al
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	20 00                	and    BYTE PTR [eax],al
10000778:	00 00                	add    BYTE PTR [eax],al
1000077a:	00 10                	add    BYTE PTR [eax],dl
1000077c:	00 00                	add    BYTE PTR [eax],al
1000077e:	00 02                	add    BYTE PTR [edx],al
10000780:	00 00                	add    BYTE PTR [eax],al
10000782:	e8 01 00 00 00       	call   10000788 <BIOS::close(int, int, void*)+0x8a>
10000787:	c8 ff ff ff          	enter  0xffff,0xff
1000078b:	ef                   	out    dx,eax
1000078c:	00 00                	add    BYTE PTR [eax],al
1000078e:	00 f0                	add    al,dh
10000790:	00 00                	add    BYTE PTR [eax],al
10000792:	c0 ff 00             	sar    bh,0x0
10000795:	00 10                	add    BYTE PTR [eax],dl
10000797:	c2 00 40             	ret    0x4000
1000079a:	48                   	dec    eax
1000079b:	c2 96 00             	ret    0x96
1000079e:	00 00                	add    BYTE PTR [eax],al
100007a0:	2c 01                	sub    al,0x1
100007a2:	00 00                	add    BYTE PTR [eax],al
100007a4:	4c                   	dec    esp
100007a5:	65 67 61             	gs addr16 popa 
100007a8:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
100007ab:	42                   	inc    edx
100007ac:	49                   	dec    ecx
100007ad:	4f                   	dec    edi
100007ae:	53                   	push   ebx
	...

100007b0 <vtable for BIOS>:
	...
	100007b8: R_386_32	BIOS::~BIOS()
	100007bc: R_386_32	BIOS::~BIOS()
	100007c0: R_386_32	BIOS::open(int, int, void*)
	100007c4: R_386_32	BIOS::close(int, int, void*)
	100007c8: R_386_32	Device::hibernate()
	100007cc: R_386_32	Device::wake()
	100007d0: R_386_32	Device::detect()
	100007d4: R_386_32	Device::disableLegacy()
	100007d8: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007dc <BIOS::~BIOS()>:
100007dc:	55                   	push   ebp
100007dd:	89 e5                	mov    ebp,esp
100007df:	83 ec 08             	sub    esp,0x8
100007e2:	ba 08 00 00 00       	mov    edx,0x8	100007e3: R_386_32	vtable for BIOS
100007e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ea:	89 10                	mov    DWORD PTR [eax],edx
100007ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ef:	83 ec 0c             	sub    esp,0xc
100007f2:	50                   	push   eax
100007f3:	e8 fc ff ff ff       	call   100007f4 <BIOS::~BIOS()+0x18>	100007f4: R_386_PC32	Device::~Device()
100007f8:	83 c4 10             	add    esp,0x10
100007fb:	90                   	nop
100007fc:	c9                   	leave  
100007fd:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007fe <BIOS::~BIOS()>:
100007fe:	55                   	push   ebp
100007ff:	89 e5                	mov    ebp,esp
10000801:	83 ec 08             	sub    esp,0x8
10000804:	83 ec 0c             	sub    esp,0xc
10000807:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000080a:	e8 fc ff ff ff       	call   1000080b <BIOS::~BIOS()+0xd>	1000080b: R_386_PC32	BIOS::~BIOS()
1000080f:	83 c4 10             	add    esp,0x10
10000812:	83 ec 08             	sub    esp,0x8
10000815:	68 58 01 00 00       	push   0x158
1000081a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000081d:	e8 fc ff ff ff       	call   1000081e <BIOS::~BIOS()+0x20>	1000081e: R_386_PC32	operator delete(void*, unsigned long)
10000822:	83 c4 10             	add    esp,0x10
10000825:	c9                   	leave  
10000826:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    

packages/system/32/0002/bios.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <hwTextMode_loadInData(VgaText*)-0xe>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	e8 fc ff ff ff       	call   10000007 <hwTextMode_loadInData(VgaText*)-0x7>	10000007: R_386_PC32	start()
1000000b:	90                   	nop
1000000c:	c9                   	leave  
1000000d:	c3                   	ret    

1000000e <hwTextMode_loadInData(VgaText*)>:
1000000e:	55                   	push   ebp
1000000f:	89 e5                	mov    ebp,esp
10000011:	83 ec 10             	sub    esp,0x10
10000014:	a1 00 00 00 00       	mov    eax,ds:0x0	10000015: R_386_32	VGA_TEXT_MODE_ADDRESS
10000019:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000001c:	81 45 fc a0 00 00 00 	add    DWORD PTR [ebp-0x4],0xa0
10000023:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000026:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000029:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000002c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000036:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000039:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
1000003c:	7d 2f                	jge    1000006d <hwTextMode_loadInData(VgaText*)+0x5f>
1000003e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000045:	83 7d f0 4f          	cmp    DWORD PTR [ebp-0x10],0x4f
10000049:	7f 1d                	jg     10000068 <hwTextMode_loadInData(VgaText*)+0x5a>
1000004b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000004e:	8d 50 02             	lea    edx,[eax+0x2]
10000051:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10000054:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
10000057:	8d 4a 02             	lea    ecx,[edx+0x2]
1000005a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000005d:	66 8b 00             	mov    ax,WORD PTR [eax]
10000060:	66 89 02             	mov    WORD PTR [edx],ax
10000063:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000066:	eb dd                	jmp    10000045 <hwTextMode_loadInData(VgaText*)+0x37>
10000068:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000006b:	eb c6                	jmp    10000033 <hwTextMode_loadInData(VgaText*)+0x25>
1000006d:	90                   	nop
1000006e:	c9                   	leave  
1000006f:	c3                   	ret    

10000070 <hwTextMode_loadInTitle(VgaText*, char*)>:
10000070:	55                   	push   ebp
10000071:	89 e5                	mov    ebp,esp
10000073:	83 ec 10             	sub    esp,0x10
10000076:	a0 00 00 00 00       	mov    al,ds:0x0	10000077: R_386_32	vgamono
1000007b:	84 c0                	test   al,al
1000007d:	74 14                	je     10000093 <hwTextMode_loadInTitle(VgaText*, char*)+0x23>
1000007f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000082:	c7 40 3c 02 00 00 00 	mov    DWORD PTR [eax+0x3c],0x2
10000089:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008c:	c7 40 38 00 00 00 00 	mov    DWORD PTR [eax+0x38],0x0
10000093:	a1 00 00 00 00       	mov    eax,ds:0x0	10000094: R_386_32	VGA_TEXT_MODE_ADDRESS
10000098:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000009b:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100000a2:	83 7d f8 4f          	cmp    DWORD PTR [ebp-0x8],0x4f
100000a6:	7f 3f                	jg     100000e7 <hwTextMode_loadInTitle(VgaText*, char*)+0x77>
100000a8:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100000ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ae:	01 d0                	add    eax,edx
100000b0:	8a 00                	mov    al,BYTE PTR [eax]
100000b2:	0f b6 c0             	movzx  eax,al
100000b5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000b8:	8b 52 3c             	mov    edx,DWORD PTR [edx+0x3c]
100000bb:	0f b7 d2             	movzx  edx,dx
100000be:	89 d1                	mov    ecx,edx
100000c0:	83 e1 0f             	and    ecx,0xf
100000c3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100000c6:	8b 52 38             	mov    edx,DWORD PTR [edx+0x38]
100000c9:	c1 e2 04             	shl    edx,0x4
100000cc:	0f b6 d2             	movzx  edx,dl
100000cf:	09 ca                	or     edx,ecx
100000d1:	c1 e2 08             	shl    edx,0x8
100000d4:	09 c2                	or     edx,eax
100000d6:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000d9:	8d 48 02             	lea    ecx,[eax+0x2]
100000dc:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100000df:	66 89 10             	mov    WORD PTR [eax],dx
100000e2:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100000e5:	eb bb                	jmp    100000a2 <hwTextMode_loadInTitle(VgaText*, char*)+0x32>
100000e7:	90                   	nop
100000e8:	c9                   	leave  
100000e9:	c3                   	ret    

100000ea <hwTextMode_scrollScreen(VgaText*)>:
100000ea:	55                   	push   ebp
100000eb:	89 e5                	mov    ebp,esp
100000ed:	53                   	push   ebx
100000ee:	83 ec 14             	sub    esp,0x14
100000f1:	a0 00 00 00 00       	mov    al,ds:0x0	100000f2: R_386_32	vgamono
100000f6:	84 c0                	test   al,al
100000f8:	74 14                	je     1000010e <hwTextMode_scrollScreen(VgaText*)+0x24>
100000fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fd:	c7 40 34 02 00 00 00 	mov    DWORD PTR [eax+0x34],0x2
10000104:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000107:	c7 40 30 00 00 00 00 	mov    DWORD PTR [eax+0x30],0x0
1000010e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000010f: R_386_32	VGA_TEXT_MODE_ADDRESS
10000113:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000116:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [ebp-0xc],0x2
1000011d:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
10000121:	0f 8f cf 00 00 00    	jg     100001f6 <hwTextMode_scrollScreen(VgaText*)+0x10c>
10000127:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000012e:	81 7d f0 9f 00 00 00 	cmp    DWORD PTR [ebp-0x10],0x9f
10000135:	0f 8f b3 00 00 00    	jg     100001ee <hwTextMode_scrollScreen(VgaText*)+0x104>
1000013b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000013e:	89 d0                	mov    eax,edx
10000140:	c1 e0 02             	shl    eax,0x2
10000143:	01 d0                	add    eax,edx
10000145:	c1 e0 05             	shl    eax,0x5
10000148:	89 c2                	mov    edx,eax
1000014a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000014d:	01 d0                	add    eax,edx
1000014f:	89 c2                	mov    edx,eax
10000151:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000154:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000157:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000015a:	89 d0                	mov    eax,edx
1000015c:	c1 e0 02             	shl    eax,0x2
1000015f:	01 d0                	add    eax,edx
10000161:	c1 e0 05             	shl    eax,0x5
10000164:	89 c2                	mov    edx,eax
10000166:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000169:	01 d0                	add    eax,edx
1000016b:	8d 90 60 ff ff ff    	lea    edx,[eax-0xa0]
10000171:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000174:	01 c2                	add    edx,eax
10000176:	8a 01                	mov    al,BYTE PTR [ecx]
10000178:	88 02                	mov    BYTE PTR [edx],al
1000017a:	83 7d f4 18          	cmp    DWORD PTR [ebp-0xc],0x18
1000017e:	75 66                	jne    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
10000180:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000183:	83 e0 01             	and    eax,0x1
10000186:	85 c0                	test   eax,eax
10000188:	74 3e                	je     100001c8 <hwTextMode_scrollScreen(VgaText*)+0xde>
1000018a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000018d:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
10000190:	0f b6 c8             	movzx  ecx,al
10000193:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000196:	8b 40 34             	mov    eax,DWORD PTR [eax+0x34]
10000199:	0f b6 d0             	movzx  edx,al
1000019c:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-0xc]
1000019f:	89 d8                	mov    eax,ebx
100001a1:	c1 e0 02             	shl    eax,0x2
100001a4:	01 d8                	add    eax,ebx
100001a6:	c1 e0 05             	shl    eax,0x5
100001a9:	89 c3                	mov    ebx,eax
100001ab:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001ae:	01 d8                	add    eax,ebx
100001b0:	89 c3                	mov    ebx,eax
100001b2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001b5:	01 c3                	add    ebx,eax
100001b7:	83 ec 08             	sub    esp,0x8
100001ba:	51                   	push   ecx
100001bb:	52                   	push   edx
100001bc:	e8 fc ff ff ff       	call   100001bd <hwTextMode_scrollScreen(VgaText*)+0xd3>	100001bd: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
100001c1:	83 c4 10             	add    esp,0x10
100001c4:	88 03                	mov    BYTE PTR [ebx],al
100001c6:	eb 1e                	jmp    100001e6 <hwTextMode_scrollScreen(VgaText*)+0xfc>
100001c8:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100001cb:	89 d0                	mov    eax,edx
100001cd:	c1 e0 02             	shl    eax,0x2
100001d0:	01 d0                	add    eax,edx
100001d2:	c1 e0 05             	shl    eax,0x5
100001d5:	89 c2                	mov    edx,eax
100001d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100001da:	01 d0                	add    eax,edx
100001dc:	89 c2                	mov    edx,eax
100001de:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100001e1:	01 d0                	add    eax,edx
100001e3:	c6 00 20             	mov    BYTE PTR [eax],0x20
100001e6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001e9:	e9 40 ff ff ff       	jmp    1000012e <hwTextMode_scrollScreen(VgaText*)+0x44>
100001ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100001f1:	e9 27 ff ff ff       	jmp    1000011d <hwTextMode_scrollScreen(VgaText*)+0x33>
100001f6:	90                   	nop
100001f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100001fa:	c9                   	leave  
100001fb:	c3                   	ret    

100001fc <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)>:
100001fc:	55                   	push   ebp
100001fd:	89 e5                	mov    ebp,esp
100001ff:	83 ec 28             	sub    esp,0x28
10000202:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000205:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
10000208:	a0 00 00 00 00       	mov    al,ds:0x0	10000209: R_386_32	vgamono
1000020d:	84 c0                	test   al,al
1000020f:	74 0e                	je     1000021f <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x23>
10000211:	c7 45 10 02 00 00 00 	mov    DWORD PTR [ebp+0x10],0x2
10000218:	c7 45 14 00 00 00 00 	mov    DWORD PTR [ebp+0x14],0x0
1000021f:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000222:	0f b6 d0             	movzx  edx,al
10000225:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000228:	0f b6 c0             	movzx  eax,al
1000022b:	83 ec 08             	sub    esp,0x8
1000022e:	52                   	push   edx
1000022f:	50                   	push   eax
10000230:	e8 fc ff ff ff       	call   10000231 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x35>	10000231: R_386_PC32	VgaText::combineColours(unsigned char, unsigned char)
10000235:	83 c4 10             	add    esp,0x10
10000238:	0f b6 d0             	movzx  edx,al
1000023b:	0f be 45 e4          	movsx  eax,BYTE PTR [ebp-0x1c]
1000023f:	83 ec 08             	sub    esp,0x8
10000242:	52                   	push   edx
10000243:	50                   	push   eax
10000244:	e8 fc ff ff ff       	call   10000245 <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x49>	10000245: R_386_PC32	VgaText::combineCharAndColour(char, unsigned char)
10000249:	83 c4 10             	add    esp,0x10
1000024c:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10000250:	a1 00 00 00 00       	mov    eax,ds:0x0	10000251: R_386_32	VGA_TEXT_MODE_ADDRESS
10000255:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000258:	a0 00 00 00 00       	mov    al,ds:0x0	10000259: R_386_32	vgamono
1000025d:	84 c0                	test   al,al
1000025f:	74 0c                	je     1000026d <hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)+0x71>
10000261:	66 0f be 45 e4       	movsx  ax,BYTE PTR [ebp-0x1c]
10000266:	80 cc 02             	or     ah,0x2
10000269:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
1000026d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10000270:	89 d0                	mov    eax,edx
10000272:	c1 e0 02             	shl    eax,0x2
10000275:	01 d0                	add    eax,edx
10000277:	c1 e0 04             	shl    eax,0x4
1000027a:	89 c2                	mov    edx,eax
1000027c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000027f:	8d 0c 02             	lea    ecx,[edx+eax*1]
10000282:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000285:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10000288:	ba 19 00 00 00       	mov    edx,0x19
1000028d:	29 c2                	sub    edx,eax
1000028f:	89 d0                	mov    eax,edx
10000291:	c1 e0 02             	shl    eax,0x2
10000294:	01 d0                	add    eax,edx
10000296:	c1 e0 04             	shl    eax,0x4
10000299:	01 c8                	add    eax,ecx
1000029b:	01 c0                	add    eax,eax
1000029d:	01 45 f0             	add    DWORD PTR [ebp-0x10],eax
100002a0:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100002a3:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
100002a7:	66 89 02             	mov    WORD PTR [edx],ax
100002aa:	90                   	nop
100002ab:	c9                   	leave  
100002ac:	c3                   	ret    

100002ad <hwTextMode_showCursor(VgaText*, bool)>:
100002ad:	55                   	push   ebp
100002ae:	89 e5                	mov    ebp,esp
100002b0:	83 ec 24             	sub    esp,0x24
100002b3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002b6:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
100002b9:	a0 00 00 00 00       	mov    al,ds:0x0	100002ba: R_386_32	vgamono
100002be:	84 c0                	test   al,al
100002c0:	0f 85 bd 00 00 00    	jne    10000383 <hwTextMode_showCursor(VgaText*, bool)+0xd6>
100002c6:	80 7d dc 00          	cmp    BYTE PTR [ebp-0x24],0x0
100002ca:	0f 84 8d 00 00 00    	je     1000035d <hwTextMode_showCursor(VgaText*, bool)+0xb0>
100002d0:	66 c7 45 ea d4 03    	mov    WORD PTR [ebp-0x16],0x3d4
100002d6:	c6 45 e9 0a          	mov    BYTE PTR [ebp-0x17],0xa
100002da:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100002dd:	66 8b 55 ea          	mov    dx,WORD PTR [ebp-0x16]
100002e1:	ee                   	out    dx,al
100002e2:	66 c7 45 ee d5 03    	mov    WORD PTR [ebp-0x12],0x3d5
100002e8:	66 8b 45 ee          	mov    ax,WORD PTR [ebp-0x12]
100002ec:	89 c2                	mov    edx,eax
100002ee:	ec                   	in     al,dx
100002ef:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100002f2:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100002f5:	83 e0 c0             	and    eax,0xffffffc0
100002f8:	88 c2                	mov    dl,al
100002fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fd:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10000300:	b1 0f                	mov    cl,0xf
10000302:	29 c1                	sub    ecx,eax
10000304:	88 c8                	mov    al,cl
10000306:	09 d0                	or     eax,edx
10000308:	0f b6 c0             	movzx  eax,al
1000030b:	66 c7 45 f2 d5 03    	mov    WORD PTR [ebp-0xe],0x3d5
10000311:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000314:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000317:	66 8b 55 f2          	mov    dx,WORD PTR [ebp-0xe]
1000031b:	ee                   	out    dx,al
1000031c:	66 c7 45 f6 d4 03    	mov    WORD PTR [ebp-0xa],0x3d4
10000322:	c6 45 f5 0b          	mov    BYTE PTR [ebp-0xb],0xb
10000326:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10000329:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000032d:	ee                   	out    dx,al
1000032e:	66 c7 45 fa d5 03    	mov    WORD PTR [ebp-0x6],0x3d5
10000334:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000338:	89 c2                	mov    edx,eax
1000033a:	ec                   	in     al,dx
1000033b:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000033e:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000341:	83 e0 e0             	and    eax,0xffffffe0
10000344:	83 c8 0f             	or     eax,0xf
10000347:	0f b6 c0             	movzx  eax,al
1000034a:	66 c7 45 fe d5 03    	mov    WORD PTR [ebp-0x2],0x3d5
10000350:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000353:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000356:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
1000035a:	ee                   	out    dx,al
1000035b:	eb 27                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
1000035d:	66 c7 45 e2 d4 03    	mov    WORD PTR [ebp-0x1e],0x3d4
10000363:	c6 45 e1 0a          	mov    BYTE PTR [ebp-0x1f],0xa
10000367:	8a 45 e1             	mov    al,BYTE PTR [ebp-0x1f]
1000036a:	66 8b 55 e2          	mov    dx,WORD PTR [ebp-0x1e]
1000036e:	ee                   	out    dx,al
1000036f:	66 c7 45 e6 d5 03    	mov    WORD PTR [ebp-0x1a],0x3d5
10000375:	c6 45 e5 20          	mov    BYTE PTR [ebp-0x1b],0x20
10000379:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
1000037c:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
10000380:	ee                   	out    dx,al
10000381:	eb 01                	jmp    10000384 <hwTextMode_showCursor(VgaText*, bool)+0xd7>
10000383:	90                   	nop
10000384:	c9                   	leave  
10000385:	c3                   	ret    

10000386 <hwTextMode_update(VgaText*)>:
10000386:	90                   	nop
10000387:	c3                   	ret    

10000388 <hwTextMode_updateCursor(VgaText*)>:
10000388:	55                   	push   ebp
10000389:	89 e5                	mov    ebp,esp
1000038b:	53                   	push   ebx
1000038c:	83 ec 20             	sub    esp,0x20
1000038f:	a0 00 00 00 00       	mov    al,ds:0x0	10000390: R_386_32	vgamono
10000394:	84 c0                	test   al,al
10000396:	0f 85 87 00 00 00    	jne    10000423 <hwTextMode_updateCursor(VgaText*)+0x9b>
1000039c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000039f:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100003a2:	89 c1                	mov    ecx,eax
100003a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003a7:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100003aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003ad:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100003b0:	bb 19 00 00 00       	mov    ebx,0x19
100003b5:	29 c3                	sub    ebx,eax
100003b7:	89 d8                	mov    eax,ebx
100003b9:	01 d0                	add    eax,edx
100003bb:	89 c2                	mov    edx,eax
100003bd:	89 d0                	mov    eax,edx
100003bf:	c1 e0 02             	shl    eax,0x2
100003c2:	01 d0                	add    eax,edx
100003c4:	c1 e0 04             	shl    eax,0x4
100003c7:	01 c8                	add    eax,ecx
100003c9:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax
100003cd:	66 c7 45 ec d4 03    	mov    WORD PTR [ebp-0x14],0x3d4
100003d3:	c6 45 eb 0f          	mov    BYTE PTR [ebp-0x15],0xf
100003d7:	8a 45 eb             	mov    al,BYTE PTR [ebp-0x15]
100003da:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100003dd:	ee                   	out    dx,al
100003de:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
100003e2:	0f b6 c0             	movzx  eax,al
100003e5:	66 c7 45 f0 d5 03    	mov    WORD PTR [ebp-0x10],0x3d5
100003eb:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100003ee:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100003f1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100003f4:	ee                   	out    dx,al
100003f5:	66 c7 45 f4 d4 03    	mov    WORD PTR [ebp-0xc],0x3d4
100003fb:	c6 45 f3 0e          	mov    BYTE PTR [ebp-0xd],0xe
100003ff:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10000402:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000405:	ee                   	out    dx,al
10000406:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
1000040a:	66 c1 e8 08          	shr    ax,0x8
1000040e:	0f b6 c0             	movzx  eax,al
10000411:	66 c7 45 f8 d5 03    	mov    WORD PTR [ebp-0x8],0x3d5
10000417:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000041a:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000041d:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10000420:	ee                   	out    dx,al
10000421:	eb 01                	jmp    10000424 <hwTextMode_updateCursor(VgaText*)+0x9c>
10000423:	90                   	nop
10000424:	83 c4 20             	add    esp,0x20
10000427:	5b                   	pop    ebx
10000428:	5d                   	pop    ebp
10000429:	c3                   	ret    

1000042a <hwTextMode_disableBlink(VgaText*, bool)>:
1000042a:	55                   	push   ebp
1000042b:	89 e5                	mov    ebp,esp
1000042d:	83 ec 24             	sub    esp,0x24
10000430:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000433:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
10000436:	a0 00 00 00 00       	mov    al,ds:0x0	10000437: R_386_32	vgamono
1000043b:	84 c0                	test   al,al
1000043d:	0f 85 a8 00 00 00    	jne    100004eb <hwTextMode_disableBlink(VgaText*, bool)+0xc1>
10000443:	8a 45 dc             	mov    al,BYTE PTR [ebp-0x24]
10000446:	83 f0 01             	xor    eax,0x1
10000449:	84 c0                	test   al,al
1000044b:	74 4e                	je     1000049b <hwTextMode_disableBlink(VgaText*, bool)+0x71>
1000044d:	66 c7 45 f2 da 03    	mov    WORD PTR [ebp-0xe],0x3da
10000453:	66 8b 45 f2          	mov    ax,WORD PTR [ebp-0xe]
10000457:	89 c2                	mov    edx,eax
10000459:	ec                   	in     al,dx
1000045a:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
1000045d:	66 c7 45 f6 c0 03    	mov    WORD PTR [ebp-0xa],0x3c0
10000463:	c6 45 f5 30          	mov    BYTE PTR [ebp-0xb],0x30
10000467:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
1000046a:	66 8b 55 f6          	mov    dx,WORD PTR [ebp-0xa]
1000046e:	ee                   	out    dx,al
1000046f:	66 c7 45 fa c1 03    	mov    WORD PTR [ebp-0x6],0x3c1
10000475:	66 8b 45 fa          	mov    ax,WORD PTR [ebp-0x6]
10000479:	89 c2                	mov    edx,eax
1000047b:	ec                   	in     al,dx
1000047c:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
1000047f:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
10000482:	83 c8 08             	or     eax,0x8
10000485:	0f b6 c0             	movzx  eax,al
10000488:	66 c7 45 fe c0 03    	mov    WORD PTR [ebp-0x2],0x3c0
1000048e:	88 45 fd             	mov    BYTE PTR [ebp-0x3],al
10000491:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000494:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000498:	ee                   	out    dx,al
10000499:	eb 51                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
1000049b:	66 c7 45 e2 da 03    	mov    WORD PTR [ebp-0x1e],0x3da
100004a1:	66 8b 45 e2          	mov    ax,WORD PTR [ebp-0x1e]
100004a5:	89 c2                	mov    edx,eax
100004a7:	ec                   	in     al,dx
100004a8:	88 45 e1             	mov    BYTE PTR [ebp-0x1f],al
100004ab:	66 c7 45 e6 c0 03    	mov    WORD PTR [ebp-0x1a],0x3c0
100004b1:	c6 45 e5 30          	mov    BYTE PTR [ebp-0x1b],0x30
100004b5:	8a 45 e5             	mov    al,BYTE PTR [ebp-0x1b]
100004b8:	66 8b 55 e6          	mov    dx,WORD PTR [ebp-0x1a]
100004bc:	ee                   	out    dx,al
100004bd:	66 c7 45 ea c1 03    	mov    WORD PTR [ebp-0x16],0x3c1
100004c3:	66 8b 45 ea          	mov    ax,WORD PTR [ebp-0x16]
100004c7:	89 c2                	mov    edx,eax
100004c9:	ec                   	in     al,dx
100004ca:	88 45 e9             	mov    BYTE PTR [ebp-0x17],al
100004cd:	8a 45 e9             	mov    al,BYTE PTR [ebp-0x17]
100004d0:	0f b6 c0             	movzx  eax,al
100004d3:	25 f7 00 00 00       	and    eax,0xf7
100004d8:	66 c7 45 ee c0 03    	mov    WORD PTR [ebp-0x12],0x3c0
100004de:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
100004e1:	8a 45 ed             	mov    al,BYTE PTR [ebp-0x13]
100004e4:	66 8b 55 ee          	mov    dx,WORD PTR [ebp-0x12]
100004e8:	ee                   	out    dx,al
100004e9:	eb 01                	jmp    100004ec <hwTextMode_disableBlink(VgaText*, bool)+0xc2>
100004eb:	90                   	nop
100004ec:	c9                   	leave  
100004ed:	c3                   	ret    

100004ee <setupTextMode()>:
100004ee:	b8 10 04 00 00       	mov    eax,0x410
100004f3:	66 8b 00             	mov    ax,WORD PTR [eax]
100004f6:	0f b7 c0             	movzx  eax,ax
100004f9:	83 e0 30             	and    eax,0x30
100004fc:	83 f8 30             	cmp    eax,0x30
100004ff:	75 16                	jne    10000517 <setupTextMode()+0x29>
10000501:	a1 00 00 00 00       	mov    eax,ds:0x0	10000502: R_386_32	VGA_TEXT_MODE_ADDRESS
10000506:	2d 00 80 00 00       	sub    eax,0x8000
1000050b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050c: R_386_32	VGA_TEXT_MODE_ADDRESS
10000510:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000512: R_386_32	vgamono
10000517:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10000519: R_386_32	textModeImplementation
	1000051d: R_386_32	hwTextMode_disableBlink(VgaText*, bool)
10000521:	c7 05 04 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x4,0x0	10000523: R_386_32	textModeImplementation
	10000527: R_386_32	hwTextMode_loadInData(VgaText*)
1000052b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000052d: R_386_32	textModeImplementation
	10000531: R_386_32	hwTextMode_loadInTitle(VgaText*, char*)
10000535:	c7 05 0c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xc,0x0	10000537: R_386_32	textModeImplementation
	1000053b: R_386_32	hwTextMode_scrollScreen(VgaText*)
1000053f:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10000541: R_386_32	textModeImplementation
	10000545: R_386_32	hwTextMode_showCursor(VgaText*, bool)
10000549:	c7 05 08 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x8,0x0	1000054b: R_386_32	textModeImplementation
	1000054f: R_386_32	hwTextMode_update(VgaText*)
10000553:	c7 05 10 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x10,0x0	10000555: R_386_32	textModeImplementation
	10000559: R_386_32	hwTextMode_updateCursor(VgaText*)
1000055d:	c7 05 1c 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x1c,0x0	1000055f: R_386_32	textModeImplementation
	10000563: R_386_32	hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
10000567:	90                   	nop
10000568:	c3                   	ret    
10000569:	90                   	nop

1000056a <BIOS::BIOS()>:
1000056a:	55                   	push   ebp
1000056b:	89 e5                	mov    ebp,esp
1000056d:	83 ec 08             	sub    esp,0x8
10000570:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000573:	83 ec 08             	sub    esp,0x8
10000576:	68 88 07 00 10       	push   0x10000788	10000577: R_386_32	.text
1000057b:	50                   	push   eax
1000057c:	e8 fc ff ff ff       	call   1000057d <BIOS::BIOS()+0x13>	1000057d: R_386_PC32	Device::Device(char const*)
10000581:	83 c4 10             	add    esp,0x10
10000584:	ba 08 00 00 00       	mov    edx,0x8	10000585: R_386_32	vtable for BIOS
10000589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000058c:	89 10                	mov    DWORD PTR [eax],edx
1000058e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000591:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000597:	0f b6 d0             	movzx  edx,al
1000059a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000059d:	83 c2 08             	add    edx,0x8
100005a0:	c7 44 d0 04 00 04 00 00 	mov    DWORD PTR [eax+edx*8+0x4],0x400
100005a8:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
100005ac:	83 e1 00             	and    ecx,0x0
100005af:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
100005b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005b6:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005bc:	8d 50 01             	lea    edx,[eax+0x1]
100005bf:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100005c2:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
100005c8:	0f b6 d0             	movzx  edx,al
100005cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005ce:	83 c2 08             	add    edx,0x8
100005d1:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
100005d5:	0f b6 c9             	movzx  ecx,cl
100005d8:	81 c9 00 00 01 00    	or     ecx,0x10000
100005de:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
100005e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005e5:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
100005eb:	0f b6 d0             	movzx  edx,al
100005ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100005f1:	83 c2 08             	add    edx,0x8
100005f4:	c7 44 d0 04 00 00 0c 00 	mov    DWORD PTR [eax+edx*8+0x4],0xc0000
100005fc:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000600:	83 e1 00             	and    ecx,0x0
10000603:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
10000607:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000060a:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000610:	8d 50 01             	lea    edx,[eax+0x1]
10000613:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10000616:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
1000061c:	0f b6 d0             	movzx  edx,al
1000061f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000622:	83 c2 08             	add    edx,0x8
10000625:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10000629:	0f b6 c9             	movzx  ecx,cl
1000062c:	81 c9 00 00 00 04    	or     ecx,0x4000000
10000632:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
10000636:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000639:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
1000063f:	0f b6 d0             	movzx  edx,al
10000642:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000645:	83 c2 08             	add    edx,0x8
10000648:	c7 44 d0 04 00 00 08 00 	mov    DWORD PTR [eax+edx*8+0x4],0x80000
10000650:	8a 4c d0 08          	mov    cl,BYTE PTR [eax+edx*8+0x8]
10000654:	83 e1 00             	and    ecx,0x0
10000657:	88 4c d0 08          	mov    BYTE PTR [eax+edx*8+0x8],cl
1000065b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000065e:	8a 80 c5 00 00 00    	mov    al,BYTE PTR [eax+0xc5]
10000664:	8d 50 01             	lea    edx,[eax+0x1]
10000667:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000066a:	88 91 c5 00 00 00    	mov    BYTE PTR [ecx+0xc5],dl
10000670:	0f b6 d0             	movzx  edx,al
10000673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000676:	83 c2 08             	add    edx,0x8
10000679:	8b 4c d0 08          	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1000067d:	0f b6 c9             	movzx  ecx,cl
10000680:	81 c9 00 00 00 02    	or     ecx,0x2000000
10000686:	89 4c d0 08          	mov    DWORD PTR [eax+edx*8+0x8],ecx
1000068a:	90                   	nop
1000068b:	c9                   	leave  
1000068c:	c3                   	ret    

1000068d <start()>:
1000068d:	55                   	push   ebp
1000068e:	89 e5                	mov    ebp,esp
10000690:	53                   	push   ebx
10000691:	83 ec 14             	sub    esp,0x14
10000694:	c7 45 f0 58 01 00 00 	mov    DWORD PTR [ebp-0x10],0x158
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100006a1:	e8 fc ff ff ff       	call   100006a2 <start()+0x15>	100006a2: R_386_PC32	malloc
100006a6:	83 c4 10             	add    esp,0x10
100006a9:	89 c3                	mov    ebx,eax
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	53                   	push   ebx
100006af:	e8 fc ff ff ff       	call   100006b0 <start()+0x23>	100006b0: R_386_PC32	BIOS::BIOS()
100006b4:	83 c4 10             	add    esp,0x10
100006b7:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100006bb: R_386_32	Krnl::computer
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c5:	50                   	push   eax
100006c6:	e8 fc ff ff ff       	call   100006c7 <start()+0x3a>	100006c7: R_386_PC32	Device::addChild(Device*)
100006cb:	83 c4 10             	add    esp,0x10
100006ce:	e8 fc ff ff ff       	call   100006cf <start()+0x42>	100006cf: R_386_PC32	setupTextMode()
100006d3:	90                   	nop
100006d4:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006d7:	c9                   	leave  
100006d8:	c3                   	ret    
100006d9:	90                   	nop

100006da <BIOS::open(int, int, void*)>:
100006da:	b8 00 00 00 00       	mov    eax,0x0
100006df:	c3                   	ret    

100006e0 <BIOS::close(int, int, void*)>:
100006e0:	b8 00 00 00 00       	mov    eax,0x0
100006e5:	c3                   	ret    
100006e6:	66 90                	xchg   ax,ax
100006e8:	13 05 00 00 24 05    	adc    eax,DWORD PTR ds:0x5240000
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	00 06                	add    BYTE PTR [esi],al
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	00 00                	add    BYTE PTR [eax],al
100006f6:	01 00                	add    DWORD PTR [eax],eax
100006f8:	00 00                	add    BYTE PTR [eax],al
100006fa:	02 00                	add    al,BYTE PTR [eax]
100006fc:	00 00                	add    BYTE PTR [eax],al
100006fe:	04 00                	add    al,0x0
10000700:	00 00                	add    BYTE PTR [eax],al
10000702:	06                   	push   es
10000703:	00 00                	add    BYTE PTR [eax],al
10000705:	00 10                	add    BYTE PTR [eax],dl
10000707:	00 00                	add    BYTE PTR [eax],al
10000709:	10 00                	adc    BYTE PTR [eax],al
1000070b:	00 00                	add    BYTE PTR [eax],al
1000070d:	00 00                	add    BYTE PTR [eax],al
1000070f:	c0 00 00             	rol    BYTE PTR [eax],0x0
10000712:	00 c2                	add    dl,al
10000714:	00 00                	add    BYTE PTR [eax],al
10000716:	40                   	inc    eax
10000717:	c2 00 00             	ret    0x0
1000071a:	80 c2 00             	add    dl,0x0
1000071d:	00 c0                	add    al,al
1000071f:	c2 00 00             	ret    0x0
10000722:	01 c2                	add    edx,eax
10000724:	00 00                	add    BYTE PTR [eax],al
10000726:	01 00                	add    DWORD PTR [eax],eax
10000728:	00 00                	add    BYTE PTR [eax],al
1000072a:	06                   	push   es
1000072b:	c2 00 00             	ret    0x0
1000072e:	02 00                	add    al,BYTE PTR [eax]
10000730:	00 10                	add    BYTE PTR [eax],dl
10000732:	00 c2                	add    dl,al
10000734:	00 00                	add    BYTE PTR [eax],al
10000736:	02 c2                	add    al,dl
10000738:	00 00                	add    BYTE PTR [eax],al
1000073a:	02 00                	add    al,BYTE PTR [eax]
1000073c:	00 00                	add    BYTE PTR [eax],al
1000073e:	04 c2                	add    al,0xc2
10000740:	00 80 00 00 00 06    	add    BYTE PTR [eax+0x6000000],al
10000746:	00 c2                	add    dl,al
10000748:	13 05 00 c2 24 05    	adc    eax,DWORD PTR ds:0x524c200
1000074e:	00 c2                	add    dl,al
10000750:	00 00                	add    BYTE PTR [eax],al
10000752:	18 00                	sbb    BYTE PTR [eax],al
10000754:	00 00                	add    BYTE PTR [eax],al
10000756:	08 00                	or     BYTE PTR [eax],al
10000758:	00 00                	add    BYTE PTR [eax],al
1000075a:	20 00                	and    BYTE PTR [eax],al
1000075c:	00 00                	add    BYTE PTR [eax],al
1000075e:	00 10                	add    BYTE PTR [eax],dl
10000760:	00 00                	add    BYTE PTR [eax],al
10000762:	00 02                	add    BYTE PTR [edx],al
10000764:	00 00                	add    BYTE PTR [eax],al
10000766:	e8 01 00 00 00       	call   1000076c <BIOS::close(int, int, void*)+0x8c>
1000076b:	c8 ff ff ff          	enter  0xffff,0xff
1000076f:	ef                   	out    dx,eax
10000770:	00 00                	add    BYTE PTR [eax],al
10000772:	00 f0                	add    al,dh
10000774:	00 00                	add    BYTE PTR [eax],al
10000776:	c0 ff 00             	sar    bh,0x0
10000779:	00 10                	add    BYTE PTR [eax],dl
1000077b:	c2 00 40             	ret    0x4000
1000077e:	48                   	dec    eax
1000077f:	c2 96 00             	ret    0x96
10000782:	00 00                	add    BYTE PTR [eax],al
10000784:	2c 01                	sub    al,0x1
10000786:	00 00                	add    BYTE PTR [eax],al
10000788:	4c                   	dec    esp
10000789:	65 67 61             	gs addr16 popa 
1000078c:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
1000078f:	42                   	inc    edx
10000790:	49                   	dec    ecx
10000791:	4f                   	dec    edi
10000792:	53                   	push   ebx
	...

10000794 <vtable for BIOS>:
	...
	1000079c: R_386_32	BIOS::~BIOS()
	100007a0: R_386_32	BIOS::~BIOS()
	100007a4: R_386_32	BIOS::open(int, int, void*)
	100007a8: R_386_32	BIOS::close(int, int, void*)
	100007ac: R_386_32	Device::hibernate()
	100007b0: R_386_32	Device::wake()
	100007b4: R_386_32	Device::detect()
	100007b8: R_386_32	Device::disableLegacy()
	100007bc: R_386_32	Device::powerSaving(PowerSavingLevel)

Disassembly of section .text._ZN4BIOSD2Ev:

100007c0 <BIOS::~BIOS()>:
100007c0:	55                   	push   ebp
100007c1:	89 e5                	mov    ebp,esp
100007c3:	83 ec 08             	sub    esp,0x8
100007c6:	ba 08 00 00 00       	mov    edx,0x8	100007c7: R_386_32	vtable for BIOS
100007cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007ce:	89 10                	mov    DWORD PTR [eax],edx
100007d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007d3:	83 ec 0c             	sub    esp,0xc
100007d6:	50                   	push   eax
100007d7:	e8 fc ff ff ff       	call   100007d8 <BIOS::~BIOS()+0x18>	100007d8: R_386_PC32	Device::~Device()
100007dc:	83 c4 10             	add    esp,0x10
100007df:	90                   	nop
100007e0:	c9                   	leave  
100007e1:	c3                   	ret    

Disassembly of section .text._ZN4BIOSD0Ev:

100007e2 <BIOS::~BIOS()>:
100007e2:	55                   	push   ebp
100007e3:	89 e5                	mov    ebp,esp
100007e5:	83 ec 08             	sub    esp,0x8
100007e8:	83 ec 0c             	sub    esp,0xc
100007eb:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007ee:	e8 fc ff ff ff       	call   100007ef <BIOS::~BIOS()+0xd>	100007ef: R_386_PC32	BIOS::~BIOS()
100007f3:	83 c4 10             	add    esp,0x10
100007f6:	83 ec 08             	sub    esp,0x8
100007f9:	68 58 01 00 00       	push   0x158
100007fe:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000801:	e8 fc ff ff ff       	call   10000802 <BIOS::~BIOS()+0x20>	10000802: R_386_PC32	operator delete(void*, unsigned long)
10000806:	83 c4 10             	add    esp,0x10
10000809:	c9                   	leave  
1000080a:	c3                   	ret    
