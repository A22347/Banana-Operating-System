
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000009: R_386_32	guiPanicHandler
	1000000d: R_386_32	monikaBsod(char*)
10000011:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000013: R_386_32	screen
10000017:	e8 fc ff ff ff       	call   10000018 <start(void*)+0x18>	10000018: R_386_PC32	Video::getWidth()
1000001c:	89 c3                	mov    ebx,eax
1000001e:	58                   	pop    eax
1000001f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000021: R_386_32	screen
10000025:	e8 fc ff ff ff       	call   10000026 <start(void*)+0x26>	10000026: R_386_PC32	Video::getHeight()
1000002a:	5a                   	pop    edx
1000002b:	89 c7                	mov    edi,eax
1000002d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002f: R_386_32	screen
10000033:	e8 fc ff ff ff       	call   10000034 <start(void*)+0x34>	10000034: R_386_PC32	Video::getWidth()
10000038:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000003f:	89 c5                	mov    ebp,eax
10000041:	e8 fc ff ff ff       	call   10000042 <start(void*)+0x42>	10000042: R_386_PC32	malloc
10000046:	59                   	pop    ecx
10000047:	89 c6                	mov    esi,eax
10000049:	58                   	pop    eax
1000004a:	6a 20                	push   0x20
1000004c:	55                   	push   ebp
1000004d:	57                   	push   edi
1000004e:	53                   	push   ebx
1000004f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000051: R_386_32	screen
10000055:	56                   	push   esi
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
1000005b:	83 c4 14             	add    esp,0x14
1000005e:	6a 14                	push   0x14
10000060:	e8 fc ff ff ff       	call   10000061 <start(void*)+0x61>	10000061: R_386_PC32	malloc
10000065:	89 c3                	mov    ebx,eax
10000067:	58                   	pop    eax
10000068:	5a                   	pop    edx
10000069:	56                   	push   esi
1000006a:	53                   	push   ebx
1000006b:	e8 fc ff ff ff       	call   1000006c <start(void*)+0x6c>	1000006c: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000070:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
10000077:	e8 fc ff ff ff       	call   10000078 <start(void*)+0x78>	10000078: R_386_PC32	malloc
1000007c:	5f                   	pop    edi
1000007d:	5d                   	pop    ebp
1000007e:	6a 01                	push   0x1
10000080:	6a 01                	push   0x1
10000082:	6a 00                	push   0x0
10000084:	6a 00                	push   0x0
10000086:	56                   	push   esi
10000087:	50                   	push   eax
10000088:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000008c:	e8 fc ff ff ff       	call   1000008d <start(void*)+0x8d>	1000008d: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000091:	83 c4 14             	add    esp,0x14
10000094:	6a 40                	push   0x40
10000096:	e8 fc ff ff ff       	call   10000097 <start(void*)+0x97>	10000097: R_386_PC32	malloc
1000009b:	89 c2                	mov    edx,eax
1000009d:	58                   	pop    eax
1000009e:	59                   	pop    ecx
1000009f:	68 40 01 00 00       	push   0x140
100000a4:	68 90 01 00 00       	push   0x190
100000a9:	6a 32                	push   0x32
100000ab:	6a 32                	push   0x32
100000ad:	56                   	push   esi
100000ae:	52                   	push   edx
100000af:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000b3:	e8 fc ff ff ff       	call   100000b4 <start(void*)+0xb4>	100000b4: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000b8:	83 c4 14             	add    esp,0x14
100000bb:	6a 40                	push   0x40
100000bd:	e8 fc ff ff ff       	call   100000be <start(void*)+0xbe>	100000be: R_386_PC32	malloc
100000c2:	5f                   	pop    edi
100000c3:	89 c5                	mov    ebp,eax
100000c5:	58                   	pop    eax
100000c6:	68 7c 01 00 00       	push   0x17c
100000cb:	68 f4 01 00 00       	push   0x1f4
100000d0:	68 96 00 00 00       	push   0x96
100000d5:	68 c8 00 00 00       	push   0xc8
100000da:	56                   	push   esi
100000db:	55                   	push   ebp
100000dc:	e8 fc ff ff ff       	call   100000dd <start(void*)+0xdd>	100000dd: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000e1:	83 c4 14             	add    esp,0x14
100000e4:	6a 40                	push   0x40
100000e6:	e8 fc ff ff ff       	call   100000e7 <start(void*)+0xe7>	100000e7: R_386_PC32	malloc
100000eb:	89 c7                	mov    edi,eax
100000ed:	58                   	pop    eax
100000ee:	5a                   	pop    edx
100000ef:	68 af 00 00 00       	push   0xaf
100000f4:	68 0e 01 00 00       	push   0x10e
100000f9:	68 90 01 00 00       	push   0x190
100000fe:	6a 7d                	push   0x7d
10000100:	56                   	push   esi
10000101:	57                   	push   edi
10000102:	e8 fc ff ff ff       	call   10000103 <start(void*)+0x103>	10000103: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000107:	83 c4 18             	add    esp,0x18
1000010a:	83 4f 3c 01          	or     DWORD PTR [edi+0x3c],0x1
1000010e:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10000112:	51                   	push   ecx
10000113:	53                   	push   ebx
10000114:	e8 fc ff ff ff       	call   10000115 <start(void*)+0x115>	10000115: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000119:	59                   	pop    ecx
1000011a:	5e                   	pop    esi
1000011b:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000011f:	52                   	push   edx
10000120:	53                   	push   ebx
10000121:	e8 fc ff ff ff       	call   10000122 <start(void*)+0x122>	10000122: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000126:	58                   	pop    eax
10000127:	5a                   	pop    edx
10000128:	55                   	push   ebp
10000129:	53                   	push   ebx
1000012a:	e8 fc ff ff ff       	call   1000012b <start(void*)+0x12b>	1000012b: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012f:	59                   	pop    ecx
10000130:	5e                   	pop    esi
10000131:	57                   	push   edi
10000132:	53                   	push   ebx
10000133:	e8 fc ff ff ff       	call   10000134 <start(void*)+0x134>	10000134: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000138:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000013b:	e8 fc ff ff ff       	call   1000013c <start(void*)+0x13c>	1000013c: R_386_PC32	NIDesktop::completeRefresh()
10000140:	83 c4 10             	add    esp,0x10
10000143:	83 ec 0c             	sub    esp,0xc
10000146:	6a 02                	push   0x2
10000148:	e8 fc ff ff ff       	call   10000149 <start(void*)+0x149>	10000149: R_386_PC32	blockTask(TaskState)
1000014d:	eb f1                	jmp    10000140 <start(void*)+0x140>
1000014f:	90                   	nop

10000150 <begin(void*)>:
10000150:	83 ec 18             	sub    esp,0x18
10000153:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000157:	e8 fc ff ff ff       	call   10000158 <begin(void*)+0x8>	10000158: R_386_PC32	start(void*)

1000015c <_ssfn__bitreverse16>:
1000015c:	89 c2                	mov    edx,eax
1000015e:	01 c0                	add    eax,eax
10000160:	d1 fa                	sar    edx,1
10000162:	25 aa aa 00 00       	and    eax,0xaaaa
10000167:	81 e2 55 55 00 00    	and    edx,0x5555
1000016d:	09 c2                	or     edx,eax
1000016f:	89 d0                	mov    eax,edx
10000171:	c1 e2 02             	shl    edx,0x2
10000174:	c1 f8 02             	sar    eax,0x2
10000177:	81 e2 cc cc 00 00    	and    edx,0xcccc
1000017d:	25 33 33 00 00       	and    eax,0x3333
10000182:	09 d0                	or     eax,edx
10000184:	89 c2                	mov    edx,eax
10000186:	c1 e0 04             	shl    eax,0x4
10000189:	c1 fa 04             	sar    edx,0x4
1000018c:	25 f0 f0 00 00       	and    eax,0xf0f0
10000191:	81 e2 0f 0f 00 00    	and    edx,0xf0f
10000197:	09 c2                	or     edx,eax
10000199:	89 d1                	mov    ecx,edx
1000019b:	c1 e2 08             	shl    edx,0x8
1000019e:	c1 f9 08             	sar    ecx,0x8
100001a1:	0f b7 c2             	movzx  eax,dx
100001a4:	09 c8                	or     eax,ecx
100001a6:	c3                   	ret    

100001a7 <_ssfn__zhuffman_decode>:
100001a7:	55                   	push   ebp
100001a8:	57                   	push   edi
100001a9:	56                   	push   esi
100001aa:	53                   	push   ebx
100001ab:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001af:	7f 1d                	jg     100001ce <_ssfn__zhuffman_decode+0x27>
100001b1:	8b 18                	mov    ebx,DWORD PTR [eax]
100001b3:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001b6:	89 08                	mov    DWORD PTR [eax],ecx
100001b8:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001bb:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001be:	d3 e3                	shl    ebx,cl
100001c0:	83 c1 08             	add    ecx,0x8
100001c3:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001c6:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001c9:	83 f9 18             	cmp    ecx,0x18
100001cc:	eb e1                	jmp    100001af <_ssfn__zhuffman_decode+0x8>
100001ce:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001d1:	89 f9                	mov    ecx,edi
100001d3:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001d9:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001dd:	89 cb                	mov    ebx,ecx
100001df:	85 c9                	test   ecx,ecx
100001e1:	74 15                	je     100001f8 <_ssfn__zhuffman_decode+0x51>
100001e3:	c1 f9 09             	sar    ecx,0x9
100001e6:	89 da                	mov    edx,ebx
100001e8:	d3 ef                	shr    edi,cl
100001ea:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001ed:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001f0:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001f6:	eb 58                	jmp    10000250 <_ssfn__zhuffman_decode+0xa9>
100001f8:	89 d5                	mov    ebp,edx
100001fa:	89 c3                	mov    ebx,eax
100001fc:	be 0a 00 00 00       	mov    esi,0xa
10000201:	89 f8                	mov    eax,edi
10000203:	e8 54 ff ff ff       	call   1000015c <_ssfn__bitreverse16>
10000208:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
1000020f:	7c 03                	jl     10000214 <_ssfn__zhuffman_decode+0x6d>
10000211:	46                   	inc    esi
10000212:	eb f4                	jmp    10000208 <_ssfn__zhuffman_decode+0x61>
10000214:	83 ca ff             	or     edx,0xffffffff
10000217:	83 fe 10             	cmp    esi,0x10
1000021a:	74 34                	je     10000250 <_ssfn__zhuffman_decode+0xa9>
1000021c:	8d 14 36             	lea    edx,[esi+esi*1]
1000021f:	b9 10 00 00 00       	mov    ecx,0x10
10000224:	01 ea                	add    edx,ebp
10000226:	29 f1                	sub    ecx,esi
10000228:	d3 f8                	sar    eax,cl
1000022a:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000231:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000238:	29 c8                	sub    eax,ecx
1000023a:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
1000023d:	89 f1                	mov    ecx,esi
1000023f:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
10000246:	d3 ef                	shr    edi,cl
10000248:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000024b:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000250:	5b                   	pop    ebx
10000251:	89 d0                	mov    eax,edx
10000253:	5e                   	pop    esi
10000254:	5f                   	pop    edi
10000255:	5d                   	pop    ebp
10000256:	c3                   	ret    

10000257 <_ssfn__zexpand>:
10000257:	55                   	push   ebp
10000258:	57                   	push   edi
10000259:	56                   	push   esi
1000025a:	53                   	push   ebx
1000025b:	83 ec 0c             	sub    esp,0xc
1000025e:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000261:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000264:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
10000267:	29 f9                	sub    ecx,edi
10000269:	83 f9 08             	cmp    ecx,0x8
1000026c:	74 04                	je     10000272 <_ssfn__zexpand+0x1b>
1000026e:	31 c0                	xor    eax,eax
10000270:	eb 3c                	jmp    100002ae <_ssfn__zexpand+0x57>
10000272:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000275:	75 f7                	jne    1000026e <_ssfn__zexpand+0x17>
10000277:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000027b:	75 f1                	jne    1000026e <_ssfn__zexpand+0x17>
1000027d:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000281:	75 eb                	jne    1000026e <_ssfn__zexpand+0x17>
10000283:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
10000286:	89 c3                	mov    ebx,eax
10000288:	89 d6                	mov    esi,edx
1000028a:	50                   	push   eax
1000028b:	50                   	push   eax
1000028c:	55                   	push   ebp
1000028d:	57                   	push   edi
1000028e:	e8 fc ff ff ff       	call   1000028f <_ssfn__zexpand+0x38>	1000028f: R_386_PC32	realloc
10000293:	83 c4 10             	add    esp,0x10
10000296:	85 c0                	test   eax,eax
10000298:	74 d4                	je     1000026e <_ssfn__zexpand+0x17>
1000029a:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000029d:	29 fe                	sub    esi,edi
1000029f:	01 c6                	add    esi,eax
100002a1:	01 e8                	add    eax,ebp
100002a3:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002a6:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002a9:	b8 01 00 00 00       	mov    eax,0x1
100002ae:	83 c4 0c             	add    esp,0xc
100002b1:	5b                   	pop    ebx
100002b2:	5e                   	pop    esi
100002b3:	5f                   	pop    edi
100002b4:	5d                   	pop    ebp
100002b5:	c3                   	ret    

100002b6 <_ssfn__zbuild_huffman>:
100002b6:	55                   	push   ebp
100002b7:	57                   	push   edi
100002b8:	56                   	push   esi
100002b9:	53                   	push   ebx
100002ba:	89 c3                	mov    ebx,eax
100002bc:	81 ec a0 00 00 00    	sub    esp,0xa0
100002c2:	31 c0                	xor    eax,eax
100002c4:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002c7:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002cb:	b9 11 00 00 00       	mov    ecx,0x11
100002d0:	89 ef                	mov    edi,ebp
100002d2:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002d6:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002d8:	b9 00 01 00 00       	mov    ecx,0x100
100002dd:	89 df                	mov    edi,ebx
100002df:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002e1:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002e4:	7d 0f                	jge    100002f5 <_ssfn__zbuild_huffman+0x3f>
100002e6:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002ea:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002ee:	40                   	inc    eax
100002ef:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002f3:	eb ec                	jmp    100002e1 <_ssfn__zbuild_huffman+0x2b>
100002f5:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002fd:	b9 01 00 00 00       	mov    ecx,0x1
10000302:	b8 01 00 00 00       	mov    eax,0x1
10000307:	89 c7                	mov    edi,eax
10000309:	d3 e7                	shl    edi,cl
1000030b:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
1000030f:	0f 8f 10 01 00 00    	jg     10000425 <_ssfn__zbuild_huffman+0x16f>
10000315:	41                   	inc    ecx
10000316:	83 f9 10             	cmp    ecx,0x10
10000319:	75 ec                	jne    10000307 <_ssfn__zbuild_huffman+0x51>
1000031b:	31 ff                	xor    edi,edi
1000031d:	31 f6                	xor    esi,esi
1000031f:	b8 01 00 00 00       	mov    eax,0x1
10000324:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000328:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
1000032c:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000334:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
1000033c:	01 ef                	add    edi,ebp
1000033e:	85 ed                	test   ebp,ebp
10000340:	74 11                	je     10000353 <_ssfn__zbuild_huffman+0x9d>
10000342:	ba 01 00 00 00       	mov    edx,0x1
10000347:	88 c1                	mov    cl,al
10000349:	d3 e2                	shl    edx,cl
1000034b:	39 fa                	cmp    edx,edi
1000034d:	0f 8c d2 00 00 00    	jl     10000425 <_ssfn__zbuild_huffman+0x16f>
10000353:	89 fa                	mov    edx,edi
10000355:	b9 10 00 00 00       	mov    ecx,0x10
1000035a:	01 ff                	add    edi,edi
1000035c:	29 c1                	sub    ecx,eax
1000035e:	01 ee                	add    esi,ebp
10000360:	d3 e2                	shl    edx,cl
10000362:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
10000369:	40                   	inc    eax
1000036a:	83 f8 10             	cmp    eax,0x10
1000036d:	75 b5                	jne    10000324 <_ssfn__zbuild_huffman+0x6e>
1000036f:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000372:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
1000037c:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000380:	31 ff                	xor    edi,edi
10000382:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10000386:	0f 8d 9d 00 00 00    	jge    10000429 <_ssfn__zbuild_huffman+0x173>
1000038c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000390:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000394:	89 f2                	mov    edx,esi
10000396:	85 f6                	test   esi,esi
10000398:	0f 84 81 00 00 00    	je     1000041f <_ssfn__zbuild_huffman+0x169>
1000039e:	8d 0c 36             	lea    ecx,[esi+esi*1]
100003a1:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003a5:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003a8:	89 e9                	mov    ecx,ebp
100003aa:	89 04 24             	mov    DWORD PTR [esp],eax
100003ad:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003b4:	29 c1                	sub    ecx,eax
100003b6:	89 c8                	mov    eax,ecx
100003b8:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003bb:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003c2:	01 c8                	add    eax,ecx
100003c4:	83 fe 09             	cmp    esi,0x9
100003c7:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003ce:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003d6:	7f 42                	jg     1000041a <_ssfn__zbuild_huffman+0x164>
100003d8:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003dc:	89 e8                	mov    eax,ebp
100003de:	e8 79 fd ff ff       	call   1000015c <_ssfn__bitreverse16>
100003e3:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003e7:	b9 10 00 00 00       	mov    ecx,0x10
100003ec:	29 f1                	sub    ecx,esi
100003ee:	d3 f8                	sar    eax,cl
100003f0:	88 d1                	mov    cl,dl
100003f2:	89 04 24             	mov    DWORD PTR [esp],eax
100003f5:	89 f2                	mov    edx,esi
100003f7:	b8 01 00 00 00       	mov    eax,0x1
100003fc:	c1 e2 09             	shl    edx,0x9
100003ff:	d3 e0                	shl    eax,cl
10000401:	09 fa                	or     edx,edi
10000403:	89 c1                	mov    ecx,eax
10000405:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
1000040c:	7f 0c                	jg     1000041a <_ssfn__zbuild_huffman+0x164>
1000040e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000411:	01 0c 24             	add    DWORD PTR [esp],ecx
10000414:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000418:	eb eb                	jmp    10000405 <_ssfn__zbuild_huffman+0x14f>
1000041a:	45                   	inc    ebp
1000041b:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
1000041f:	47                   	inc    edi
10000420:	e9 5d ff ff ff       	jmp    10000382 <_ssfn__zbuild_huffman+0xcc>
10000425:	31 c0                	xor    eax,eax
10000427:	eb 05                	jmp    1000042e <_ssfn__zbuild_huffman+0x178>
10000429:	b8 01 00 00 00       	mov    eax,0x1
1000042e:	81 c4 a0 00 00 00    	add    esp,0xa0
10000434:	5b                   	pop    ebx
10000435:	5e                   	pop    esi
10000436:	5f                   	pop    edi
10000437:	5d                   	pop    ebp
10000438:	c3                   	ret    

10000439 <_ssfn_fc.part.1>:
10000439:	55                   	push   ebp
1000043a:	57                   	push   edi
1000043b:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000441:	56                   	push   esi
10000442:	53                   	push   ebx
10000443:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000449:	83 ec 0c             	sub    esp,0xc
1000044c:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
1000044f:	74 5d                	je     100004ae <_ssfn_fc.part.1+0x75>
10000451:	31 f6                	xor    esi,esi
10000453:	8b 03                	mov    eax,DWORD PTR [ebx]
10000455:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
10000459:	74 35                	je     10000490 <_ssfn_fc.part.1+0x57>
1000045b:	31 ed                	xor    ebp,ebp
1000045d:	8b 03                	mov    eax,DWORD PTR [ebx]
1000045f:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000462:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000465:	85 c0                	test   eax,eax
10000467:	74 0c                	je     10000475 <_ssfn_fc.part.1+0x3c>
10000469:	83 ec 0c             	sub    esp,0xc
1000046c:	50                   	push   eax
1000046d:	e8 fc ff ff ff       	call   1000046e <_ssfn_fc.part.1+0x35>	1000046e: R_386_PC32	free
10000472:	83 c4 10             	add    esp,0x10
10000475:	83 c5 04             	add    ebp,0x4
10000478:	81 fd 00 04 00 00    	cmp    ebp,0x400
1000047e:	75 dd                	jne    1000045d <_ssfn_fc.part.1+0x24>
10000480:	83 ec 0c             	sub    esp,0xc
10000483:	8b 03                	mov    eax,DWORD PTR [ebx]
10000485:	ff 34 30             	push   DWORD PTR [eax+esi*1]
10000488:	e8 fc ff ff ff       	call   10000489 <_ssfn_fc.part.1+0x50>	10000489: R_386_PC32	free
1000048d:	83 c4 10             	add    esp,0x10
10000490:	83 c6 04             	add    esi,0x4
10000493:	81 fe 00 04 00 00    	cmp    esi,0x400
10000499:	75 b8                	jne    10000453 <_ssfn_fc.part.1+0x1a>
1000049b:	83 ec 0c             	sub    esp,0xc
1000049e:	ff 33                	push   DWORD PTR [ebx]
100004a0:	e8 fc ff ff ff       	call   100004a1 <_ssfn_fc.part.1+0x68>	100004a1: R_386_PC32	free
100004a5:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004ab:	83 c4 10             	add    esp,0x10
100004ae:	83 c3 04             	add    ebx,0x4
100004b1:	39 fb                	cmp    ebx,edi
100004b3:	75 97                	jne    1000044c <_ssfn_fc.part.1+0x13>
100004b5:	83 c4 0c             	add    esp,0xc
100004b8:	5b                   	pop    ebx
100004b9:	5e                   	pop    esi
100004ba:	5f                   	pop    edi
100004bb:	5d                   	pop    ebp
100004bc:	c3                   	ret    

100004bd <_ssfn_l>:
100004bd:	57                   	push   edi
100004be:	56                   	push   esi
100004bf:	53                   	push   ebx
100004c0:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004c4:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004c8:	39 ce                	cmp    esi,ecx
100004ca:	89 f3                	mov    ebx,esi
100004cc:	0f 9d c1             	setge  cl
100004cf:	c1 eb 1f             	shr    ebx,0x1f
100004d2:	09 d9                	or     ecx,ebx
100004d4:	89 fb                	mov    ebx,edi
100004d6:	c1 eb 1f             	shr    ebx,0x1f
100004d9:	08 d9                	or     cl,bl
100004db:	0f 85 e9 00 00 00    	jne    100005ca <_ssfn_l+0x10d>
100004e1:	39 d7                	cmp    edi,edx
100004e3:	0f 8d e1 00 00 00    	jge    100005ca <_ssfn_l+0x10d>
100004e9:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004ef:	8d 51 08             	lea    edx,[ecx+0x8]
100004f2:	8d 4f 08             	lea    ecx,[edi+0x8]
100004f5:	c1 fa 04             	sar    edx,0x4
100004f8:	c1 f9 04             	sar    ecx,0x4
100004fb:	39 ca                	cmp    edx,ecx
100004fd:	75 1a                	jne    10000519 <_ssfn_l+0x5c>
100004ff:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
10000505:	8d 4e 08             	lea    ecx,[esi+0x8]
10000508:	83 c2 08             	add    edx,0x8
1000050b:	c1 f9 04             	sar    ecx,0x4
1000050e:	c1 fa 04             	sar    edx,0x4
10000511:	39 ca                	cmp    edx,ecx
10000513:	0f 84 b1 00 00 00    	je     100005ca <_ssfn_l+0x10d>
10000519:	89 c3                	mov    ebx,eax
1000051b:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000521:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
10000527:	7f 3e                	jg     10000567 <_ssfn_l+0xaa>
10000529:	05 00 02 00 00       	add    eax,0x200
1000052e:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000534:	52                   	push   edx
10000535:	01 c0                	add    eax,eax
10000537:	52                   	push   edx
10000538:	50                   	push   eax
10000539:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
1000053f:	e8 fc ff ff ff       	call   10000540 <_ssfn_l+0x83>	10000540: R_386_PC32	realloc
10000544:	83 c4 10             	add    esp,0x10
10000547:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
1000054d:	85 c0                	test   eax,eax
1000054f:	75 16                	jne    10000567 <_ssfn_l+0xaa>
10000551:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000055b:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000565:	eb 63                	jmp    100005ca <_ssfn_l+0x10d>
10000567:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
1000056e:	75 26                	jne    10000596 <_ssfn_l+0xd9>
10000570:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000576:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
1000057c:	66 89 10             	mov    WORD PTR [eax],dx
1000057f:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000585:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000058b:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
1000058f:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000596:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
1000059c:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005a2:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005a6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005ac:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005b2:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005b7:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005bd:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005c4:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005ca:	5b                   	pop    ebx
100005cb:	5e                   	pop    esi
100005cc:	5f                   	pop    edi
100005cd:	c3                   	ret    

100005ce <_ssfn_b>:
100005ce:	55                   	push   ebp
100005cf:	57                   	push   edi
100005d0:	56                   	push   esi
100005d1:	53                   	push   ebx
100005d2:	83 ec 4c             	sub    esp,0x4c
100005d5:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005d9:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005dd:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005e1:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005e5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005e9:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005ed:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005f1:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005f5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005f9:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005fd:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10000601:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
10000605:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000609:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000060d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000611:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000618:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000061c:	83 f8 04             	cmp    eax,0x4
1000061f:	75 28                	jne    10000649 <_ssfn_b+0x7b>
10000621:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000625:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000629:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000062d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000631:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000635:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000639:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000063d:	83 c4 4c             	add    esp,0x4c
10000640:	5b                   	pop    ebx
10000641:	5e                   	pop    esi
10000642:	5f                   	pop    edi
10000643:	5d                   	pop    ebp
10000644:	e9 74 fe ff ff       	jmp    100004bd <_ssfn_l>
10000649:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000064d:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000651:	75 0e                	jne    10000661 <_ssfn_b+0x93>
10000653:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000657:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000065b:	0f 84 19 01 00 00    	je     1000077a <_ssfn_b+0x1ac>
10000661:	be 02 00 00 00       	mov    esi,0x2
10000666:	89 d8                	mov    eax,ebx
10000668:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
1000066c:	99                   	cdq    
1000066d:	f7 fe                	idiv   esi
1000066f:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000673:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000677:	89 e8                	mov    eax,ebp
10000679:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
1000067d:	99                   	cdq    
1000067e:	f7 fe                	idiv   esi
10000680:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000684:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000688:	89 f8                	mov    eax,edi
1000068a:	29 d8                	sub    eax,ebx
1000068c:	99                   	cdq    
1000068d:	f7 fe                	idiv   esi
1000068f:	01 c3                	add    ebx,eax
10000691:	89 c8                	mov    eax,ecx
10000693:	29 e8                	sub    eax,ebp
10000695:	99                   	cdq    
10000696:	f7 fe                	idiv   esi
10000698:	01 e8                	add    eax,ebp
1000069a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000069e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006a2:	29 f8                	sub    eax,edi
100006a4:	99                   	cdq    
100006a5:	f7 fe                	idiv   esi
100006a7:	01 f8                	add    eax,edi
100006a9:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006ad:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006b1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006b5:	29 c8                	sub    eax,ecx
100006b7:	99                   	cdq    
100006b8:	f7 fe                	idiv   esi
100006ba:	01 c8                	add    eax,ecx
100006bc:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006c0:	89 d8                	mov    eax,ebx
100006c2:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006c6:	99                   	cdq    
100006c7:	f7 fe                	idiv   esi
100006c9:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006cc:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006d0:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006d4:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006d8:	99                   	cdq    
100006d9:	f7 fe                	idiv   esi
100006db:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006de:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006e2:	29 d8                	sub    eax,ebx
100006e4:	99                   	cdq    
100006e5:	f7 fe                	idiv   esi
100006e7:	83 ec 0c             	sub    esp,0xc
100006ea:	01 d8                	add    eax,ebx
100006ec:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006f0:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006f4:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006f8:	99                   	cdq    
100006f9:	f7 fe                	idiv   esi
100006fb:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006ff:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000703:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000707:	29 c8                	sub    eax,ecx
10000709:	99                   	cdq    
1000070a:	f7 fe                	idiv   esi
1000070c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000070f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000713:	29 e8                	sub    eax,ebp
10000715:	99                   	cdq    
10000716:	f7 fe                	idiv   esi
10000718:	8d 34 28             	lea    esi,[eax+ebp*1]
1000071b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000071f:	8d 78 01             	lea    edi,[eax+0x1]
10000722:	57                   	push   edi
10000723:	56                   	push   esi
10000724:	53                   	push   ebx
10000725:	55                   	push   ebp
10000726:	51                   	push   ecx
10000727:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000072b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000072f:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000733:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000737:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000073b:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000073f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000743:	e8 86 fe ff ff       	call   100005ce <_ssfn_b>
10000748:	83 c4 24             	add    esp,0x24
1000074b:	57                   	push   edi
1000074c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000750:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000754:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000758:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000075c:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000760:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000764:	56                   	push   esi
10000765:	53                   	push   ebx
10000766:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000076a:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000076e:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000772:	e8 57 fe ff ff       	call   100005ce <_ssfn_b>
10000777:	83 c4 30             	add    esp,0x30
1000077a:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
1000077f:	0f 85 9c fe ff ff    	jne    10000621 <_ssfn_b+0x53>
10000785:	83 c4 4c             	add    esp,0x4c
10000788:	5b                   	pop    ebx
10000789:	5e                   	pop    esi
1000078a:	5f                   	pop    edi
1000078b:	5d                   	pop    ebp
1000078c:	c3                   	ret    

1000078d <_ssfn__zreceive>:
1000078d:	56                   	push   esi
1000078e:	53                   	push   ebx
1000078f:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000792:	7d 1d                	jge    100007b1 <_ssfn__zreceive+0x24>
10000794:	8b 18                	mov    ebx,DWORD PTR [eax]
10000796:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000799:	89 08                	mov    DWORD PTR [eax],ecx
1000079b:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000079e:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100007a1:	d3 e3                	shl    ebx,cl
100007a3:	83 c1 08             	add    ecx,0x8
100007a6:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007a9:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007ac:	83 f9 18             	cmp    ecx,0x18
100007af:	7e e3                	jle    10000794 <_ssfn__zreceive+0x7>
100007b1:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007b4:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007b7:	89 f3                	mov    ebx,esi
100007b9:	88 d1                	mov    cl,dl
100007bb:	d3 eb                	shr    ebx,cl
100007bd:	88 d1                	mov    cl,dl
100007bf:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007c2:	bb 01 00 00 00       	mov    ebx,0x1
100007c7:	d3 e3                	shl    ebx,cl
100007c9:	8d 43 ff             	lea    eax,[ebx-0x1]
100007cc:	5b                   	pop    ebx
100007cd:	21 f0                	and    eax,esi
100007cf:	5e                   	pop    esi
100007d0:	c3                   	ret    

100007d1 <ssfn_utf8>:
100007d1:	56                   	push   esi
100007d2:	53                   	push   ebx
100007d3:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007d7:	8b 11                	mov    edx,DWORD PTR [ecx]
100007d9:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007dc:	89 f0                	mov    eax,esi
100007de:	84 c0                	test   al,al
100007e0:	0f be d8             	movsx  ebx,al
100007e3:	78 04                	js     100007e9 <ssfn_utf8+0x18>
100007e5:	89 d8                	mov    eax,ebx
100007e7:	eb 7d                	jmp    10000866 <ssfn_utf8+0x95>
100007e9:	f7 c6 20 00 00 00    	test   esi,0x20
100007ef:	75 14                	jne    10000805 <ssfn_utf8+0x34>
100007f1:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007f4:	c1 e3 06             	shl    ebx,0x6
100007f7:	83 e0 3f             	and    eax,0x3f
100007fa:	81 e3 c0 07 00 00    	and    ebx,0x7c0
10000800:	42                   	inc    edx
10000801:	09 d8                	or     eax,ebx
10000803:	eb 5f                	jmp    10000864 <ssfn_utf8+0x93>
10000805:	f7 c6 10 00 00 00    	test   esi,0x10
1000080b:	75 20                	jne    1000082d <ssfn_utf8+0x5c>
1000080d:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000811:	c1 e3 0c             	shl    ebx,0xc
10000814:	c1 e0 06             	shl    eax,0x6
10000817:	0f b7 db             	movzx  ebx,bx
1000081a:	25 c0 0f 00 00       	and    eax,0xfc0
1000081f:	83 c2 02             	add    edx,0x2
10000822:	09 d8                	or     eax,ebx
10000824:	8a 1a                	mov    bl,BYTE PTR [edx]
10000826:	83 e3 3f             	and    ebx,0x3f
10000829:	09 d8                	or     eax,ebx
1000082b:	eb 37                	jmp    10000864 <ssfn_utf8+0x93>
1000082d:	31 c0                	xor    eax,eax
1000082f:	83 e6 08             	and    esi,0x8
10000832:	75 32                	jne    10000866 <ssfn_utf8+0x95>
10000834:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000838:	c1 e3 12             	shl    ebx,0x12
1000083b:	c1 e0 0c             	shl    eax,0xc
1000083e:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000844:	25 00 f0 03 00       	and    eax,0x3f000
10000849:	83 c2 03             	add    edx,0x3
1000084c:	09 d8                	or     eax,ebx
1000084e:	8a 1a                	mov    bl,BYTE PTR [edx]
10000850:	83 e3 3f             	and    ebx,0x3f
10000853:	09 d8                	or     eax,ebx
10000855:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
10000859:	c1 e3 06             	shl    ebx,0x6
1000085c:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000862:	09 d8                	or     eax,ebx
10000864:	89 11                	mov    DWORD PTR [ecx],edx
10000866:	ff 01                	inc    DWORD PTR [ecx]
10000868:	5b                   	pop    ebx
10000869:	5e                   	pop    esi
1000086a:	c3                   	ret    

1000086b <_ssfn_c>:
1000086b:	55                   	push   ebp
1000086c:	57                   	push   edi
1000086d:	56                   	push   esi
1000086e:	53                   	push   ebx
1000086f:	83 ec 14             	sub    esp,0x14
10000872:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
10000878:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
1000087c:	85 c0                	test   eax,eax
1000087e:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000884:	0f 84 e6 00 00 00    	je     10000970 <_ssfn_c+0x105>
1000088a:	31 ff                	xor    edi,edi
1000088c:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000890:	0f 84 f3 00 00 00    	je     10000989 <_ssfn_c+0x11e>
10000896:	85 d2                	test   edx,edx
10000898:	0f 84 eb 00 00 00    	je     10000989 <_ssfn_c+0x11e>
1000089e:	80 3a 00             	cmp    BYTE PTR [edx],0x0
100008a1:	0f 84 e2 00 00 00    	je     10000989 <_ssfn_c+0x11e>
100008a7:	89 d6                	mov    esi,edx
100008a9:	89 cd                	mov    ebp,ecx
100008ab:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008ae:	89 c3                	mov    ebx,eax
100008b0:	85 d2                	test   edx,edx
100008b2:	74 38                	je     100008ec <_ssfn_c+0x81>
100008b4:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008b7:	31 c0                	xor    eax,eax
100008b9:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008bc:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008bf:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008c3:	66 85 d2             	test   dx,dx
100008c6:	74 24                	je     100008ec <_ssfn_c+0x81>
100008c8:	01 da                	add    edx,ebx
100008ca:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008ce:	8a 0a                	mov    cl,BYTE PTR [edx]
100008d0:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008d4:	84 c9                	test   cl,cl
100008d6:	0f 84 9e 00 00 00    	je     1000097a <_ssfn_c+0x10f>
100008dc:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008de:	0f 85 90 00 00 00    	jne    10000974 <_ssfn_c+0x109>
100008e4:	47                   	inc    edi
100008e5:	42                   	inc    edx
100008e6:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008ea:	eb e2                	jmp    100008ce <_ssfn_c+0x63>
100008ec:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008f0:	8d 44 24 10          	lea    eax,[esp+0x10]
100008f4:	50                   	push   eax
100008f5:	e8 fc ff ff ff       	call   100008f6 <_ssfn_c+0x8b>	100008f6: R_386_PC32	ssfn_utf8
100008fa:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008fe:	29 f2                	sub    edx,esi
10000900:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
10000903:	5a                   	pop    edx
10000904:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000908:	89 06                	mov    DWORD PTR [esi],eax
1000090a:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
1000090d:	89 df                	mov    edi,ebx
1000090f:	31 db                	xor    ebx,ebx
10000911:	8a 17                	mov    dl,BYTE PTR [edi]
10000913:	80 fa ff             	cmp    dl,0xff
10000916:	75 08                	jne    10000920 <_ssfn_c+0xb5>
10000918:	81 c3 ff ff 00 00    	add    ebx,0xffff
1000091e:	eb 2a                	jmp    1000094a <_ssfn_c+0xdf>
10000920:	88 d1                	mov    cl,dl
10000922:	83 e1 c0             	and    ecx,0xffffffc0
10000925:	80 f9 c0             	cmp    cl,0xc0
10000928:	75 16                	jne    10000940 <_ssfn_c+0xd5>
1000092a:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000092e:	c1 e2 08             	shl    edx,0x8
10000931:	83 c7 02             	add    edi,0x2
10000934:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000093a:	09 ca                	or     edx,ecx
1000093c:	01 d3                	add    ebx,edx
1000093e:	eb 27                	jmp    10000967 <_ssfn_c+0xfc>
10000940:	80 f9 80             	cmp    cl,0x80
10000943:	75 08                	jne    1000094d <_ssfn_c+0xe2>
10000945:	83 e2 3f             	and    edx,0x3f
10000948:	01 d3                	add    ebx,edx
1000094a:	47                   	inc    edi
1000094b:	eb 1a                	jmp    10000967 <_ssfn_c+0xfc>
1000094d:	39 d8                	cmp    eax,ebx
1000094f:	74 38                	je     10000989 <_ssfn_c+0x11e>
10000951:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000955:	83 e2 40             	and    edx,0x40
10000958:	80 fa 01             	cmp    dl,0x1
1000095b:	19 d2                	sbb    edx,edx
1000095d:	83 c2 06             	add    edx,0x6
10000960:	0f af d1             	imul   edx,ecx
10000963:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
10000967:	43                   	inc    ebx
10000968:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
1000096e:	76 a1                	jbe    10000911 <_ssfn_c+0xa6>
10000970:	31 ff                	xor    edi,edi
10000972:	eb 15                	jmp    10000989 <_ssfn_c+0x11e>
10000974:	40                   	inc    eax
10000975:	e9 42 ff ff ff       	jmp    100008bc <_ssfn_c+0x51>
1000097a:	29 f7                	sub    edi,esi
1000097c:	05 00 f0 00 00       	add    eax,0xf000
10000981:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000984:	e9 7b ff ff ff       	jmp    10000904 <_ssfn_c+0x99>
10000989:	83 c4 14             	add    esp,0x14
1000098c:	89 f8                	mov    eax,edi
1000098e:	5b                   	pop    ebx
1000098f:	5e                   	pop    esi
10000990:	5f                   	pop    edi
10000991:	5d                   	pop    ebp
10000992:	c3                   	ret    

10000993 <_ssfn_zlib_decode>:
10000993:	55                   	push   ebp
10000994:	57                   	push   edi
10000995:	56                   	push   esi
10000996:	53                   	push   ebx
10000997:	81 ec c8 19 00 00    	sub    esp,0x19c8
1000099d:	6a 08                	push   0x8
1000099f:	e8 fc ff ff ff       	call   100009a0 <_ssfn_zlib_decode+0xd>	100009a0: R_386_PC32	malloc
100009a4:	83 c4 10             	add    esp,0x10
100009a7:	89 c2                	mov    edx,eax
100009a9:	85 c0                	test   eax,eax
100009ab:	0f 84 eb 04 00 00    	je     10000e9c <_ssfn_zlib_decode+0x509>
100009b1:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009b8:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009bf:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009c6:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009cd:	31 c0                	xor    eax,eax
100009cf:	83 c2 08             	add    edx,0x8
100009d2:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009d9:	c6 80 e0 4d 03 10 08 	mov    BYTE PTR [eax+0x10034de0],0x8	100009db: R_386_32	.bss
100009e0:	40                   	inc    eax
100009e1:	3d 90 00 00 00       	cmp    eax,0x90
100009e6:	75 f1                	jne    100009d9 <_ssfn_zlib_decode+0x46>
100009e8:	c6 80 e0 4d 03 10 09 	mov    BYTE PTR [eax+0x10034de0],0x9	100009ea: R_386_32	.bss
100009ef:	40                   	inc    eax
100009f0:	3d 00 01 00 00       	cmp    eax,0x100
100009f5:	75 f1                	jne    100009e8 <_ssfn_zlib_decode+0x55>
100009f7:	c6 80 e0 4d 03 10 07 	mov    BYTE PTR [eax+0x10034de0],0x7	100009f9: R_386_32	.bss
100009fe:	40                   	inc    eax
100009ff:	3d 18 01 00 00       	cmp    eax,0x118
10000a04:	75 f1                	jne    100009f7 <_ssfn_zlib_decode+0x64>
10000a06:	c7 05 f8 4e 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034ef8,0x8080808	10000a08: R_386_32	.bss
10000a10:	c7 05 fc 4e 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034efc,0x8080808	10000a12: R_386_32	.bss
10000a1a:	31 c0                	xor    eax,eax
10000a1c:	c6 80 c0 4d 03 10 05 	mov    BYTE PTR [eax+0x10034dc0],0x5	10000a1e: R_386_32	.bss
10000a23:	40                   	inc    eax
10000a24:	83 f8 20             	cmp    eax,0x20
10000a27:	75 f3                	jne    10000a1c <_ssfn_zlib_decode+0x89>
10000a29:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a34:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a3f:	ba 01 00 00 00       	mov    edx,0x1
10000a44:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a4b:	e8 3d fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a50:	ba 02 00 00 00       	mov    edx,0x2
10000a55:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a59:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a60:	e8 28 fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a65:	89 c6                	mov    esi,eax
10000a67:	85 c0                	test   eax,eax
10000a69:	0f 85 09 01 00 00    	jne    10000b78 <_ssfn_zlib_decode+0x1e5>
10000a6f:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a76:	83 e2 07             	and    edx,0x7
10000a79:	74 0c                	je     10000a87 <_ssfn_zlib_decode+0xf4>
10000a7b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a82:	e8 06 fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a87:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a8e:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a95:	31 c0                	xor    eax,eax
10000a97:	31 db                	xor    ebx,ebx
10000a99:	85 d2                	test   edx,edx
10000a9b:	7f 14                	jg     10000ab1 <_ssfn_zlib_decode+0x11e>
10000a9d:	84 db                	test   bl,bl
10000a9f:	74 22                	je     10000ac3 <_ssfn_zlib_decode+0x130>
10000aa1:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000aa8:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aaf:	eb 12                	jmp    10000ac3 <_ssfn_zlib_decode+0x130>
10000ab1:	40                   	inc    eax
10000ab2:	83 ea 08             	sub    edx,0x8
10000ab5:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000abc:	b3 01                	mov    bl,0x1
10000abe:	c1 e9 08             	shr    ecx,0x8
10000ac1:	eb d6                	jmp    10000a99 <_ssfn_zlib_decode+0x106>
10000ac3:	83 f8 04             	cmp    eax,0x4
10000ac6:	74 1d                	je     10000ae5 <_ssfn_zlib_decode+0x152>
10000ac8:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000acf:	40                   	inc    eax
10000ad0:	8d 4a 01             	lea    ecx,[edx+0x1]
10000ad3:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ada:	8a 12                	mov    dl,BYTE PTR [edx]
10000adc:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000ae3:	eb de                	jmp    10000ac3 <_ssfn_zlib_decode+0x130>
10000ae5:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000aed:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000af5:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000afd:	c1 e3 08             	shl    ebx,0x8
10000b00:	01 c3                	add    ebx,eax
10000b02:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b0a:	c1 e0 08             	shl    eax,0x8
10000b0d:	01 d0                	add    eax,edx
10000b0f:	89 da                	mov    edx,ebx
10000b11:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b17:	39 d0                	cmp    eax,edx
10000b19:	0f 85 69 03 00 00    	jne    10000e88 <_ssfn_zlib_decode+0x4f5>
10000b1f:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b26:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b29:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b30:	73 14                	jae    10000b46 <_ssfn_zlib_decode+0x1b3>
10000b32:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b39:	e8 19 f7 ff ff       	call   10000257 <_ssfn__zexpand>
10000b3e:	85 c0                	test   eax,eax
10000b40:	0f 84 42 03 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000b46:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b4d:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b54:	39 f3                	cmp    ebx,esi
10000b56:	74 09                	je     10000b61 <_ssfn_zlib_decode+0x1ce>
10000b58:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b5b:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b5e:	46                   	inc    esi
10000b5f:	eb e5                	jmp    10000b46 <_ssfn_zlib_decode+0x1b3>
10000b61:	01 da                	add    edx,ebx
10000b63:	01 c3                	add    ebx,eax
10000b65:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b6c:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b73:	e9 fc 02 00 00       	jmp    10000e74 <_ssfn_zlib_decode+0x4e1>
10000b78:	83 f8 03             	cmp    eax,0x3
10000b7b:	0f 84 07 03 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000b81:	4e                   	dec    esi
10000b82:	75 2d                	jne    10000bb1 <_ssfn_zlib_decode+0x21e>
10000b84:	b9 20 01 00 00       	mov    ecx,0x120
10000b89:	ba e0 4d 03 10       	mov    edx,0x10034de0	10000b8a: R_386_32	.bss
10000b8e:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b95:	e8 1c f7 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000b9a:	85 c0                	test   eax,eax
10000b9c:	0f 84 e6 02 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ba2:	b9 20 00 00 00       	mov    ecx,0x20
10000ba7:	ba c0 4d 03 10       	mov    edx,0x10034dc0	10000ba8: R_386_32	.bss
10000bac:	e9 78 01 00 00       	jmp    10000d29 <_ssfn_zlib_decode+0x396>
10000bb1:	ba 05 00 00 00       	mov    edx,0x5
10000bb6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bbd:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bc1:	e8 c7 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bc6:	89 df                	mov    edi,ebx
10000bc8:	ba 05 00 00 00       	mov    edx,0x5
10000bcd:	89 c5                	mov    ebp,eax
10000bcf:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bd6:	e8 b2 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bdb:	ba 04 00 00 00       	mov    edx,0x4
10000be0:	89 c6                	mov    esi,eax
10000be2:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000be9:	e8 9f fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bee:	b9 13 00 00 00       	mov    ecx,0x13
10000bf3:	83 c0 04             	add    eax,0x4
10000bf6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bfa:	31 c0                	xor    eax,eax
10000bfc:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bfe:	31 ff                	xor    edi,edi
10000c00:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c04:	7e 1f                	jle    10000c25 <_ssfn_zlib_decode+0x292>
10000c06:	ba 03 00 00 00       	mov    edx,0x3
10000c0b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c12:	47                   	inc    edi
10000c13:	e8 75 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000c18:	0f b6 97 5f 4a 00 10 	movzx  edx,BYTE PTR [edi+0x10004a5f]	10000c1b: R_386_32	.text
10000c1f:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c23:	eb db                	jmp    10000c00 <_ssfn_zlib_decode+0x26d>
10000c25:	b9 13 00 00 00       	mov    ecx,0x13
10000c2a:	89 da                	mov    edx,ebx
10000c2c:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c33:	e8 7e f6 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000c38:	85 c0                	test   eax,eax
10000c3a:	0f 84 48 02 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000c40:	8d 46 01             	lea    eax,[esi+0x1]
10000c43:	81 c5 01 01 00 00    	add    ebp,0x101
10000c49:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c4d:	31 f6                	xor    esi,esi
10000c4f:	01 e8                	add    eax,ebp
10000c51:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c55:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c59:	0f 8e 9f 00 00 00    	jle    10000cfe <_ssfn_zlib_decode+0x36b>
10000c5f:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c66:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c6d:	e8 35 f5 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000c72:	83 f8 12             	cmp    eax,0x12
10000c75:	0f 87 0d 02 00 00    	ja     10000e88 <_ssfn_zlib_decode+0x4f5>
10000c7b:	83 f8 0f             	cmp    eax,0xf
10000c7e:	7f 07                	jg     10000c87 <_ssfn_zlib_decode+0x2f4>
10000c80:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c84:	46                   	inc    esi
10000c85:	eb ce                	jmp    10000c55 <_ssfn_zlib_decode+0x2c2>
10000c87:	83 f8 10             	cmp    eax,0x10
10000c8a:	75 22                	jne    10000cae <_ssfn_zlib_decode+0x31b>
10000c8c:	ba 02 00 00 00       	mov    edx,0x2
10000c91:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c98:	e8 f0 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000c9d:	85 f6                	test   esi,esi
10000c9f:	8d 58 03             	lea    ebx,[eax+0x3]
10000ca2:	0f 84 e0 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ca8:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000cac:	eb 31                	jmp    10000cdf <_ssfn_zlib_decode+0x34c>
10000cae:	83 f8 11             	cmp    eax,0x11
10000cb1:	75 16                	jne    10000cc9 <_ssfn_zlib_decode+0x336>
10000cb3:	ba 03 00 00 00       	mov    edx,0x3
10000cb8:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cbf:	e8 c9 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000cc4:	8d 58 03             	lea    ebx,[eax+0x3]
10000cc7:	eb 14                	jmp    10000cdd <_ssfn_zlib_decode+0x34a>
10000cc9:	ba 07 00 00 00       	mov    edx,0x7
10000cce:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cd5:	e8 b3 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000cda:	8d 58 0b             	lea    ebx,[eax+0xb]
10000cdd:	31 c0                	xor    eax,eax
10000cdf:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000ce3:	29 f2                	sub    edx,esi
10000ce5:	39 da                	cmp    edx,ebx
10000ce7:	0f 8c 9b 01 00 00    	jl     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ced:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000cf1:	89 d9                	mov    ecx,ebx
10000cf3:	89 d7                	mov    edi,edx
10000cf5:	01 de                	add    esi,ebx
10000cf7:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000cf9:	e9 57 ff ff ff       	jmp    10000c55 <_ssfn_zlib_decode+0x2c2>
10000cfe:	0f 85 84 01 00 00    	jne    10000e88 <_ssfn_zlib_decode+0x4f5>
10000d04:	89 e9                	mov    ecx,ebp
10000d06:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d0a:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d11:	e8 a0 f5 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000d16:	85 c0                	test   eax,eax
10000d18:	0f 84 6a 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d1e:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d22:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d26:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d29:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d30:	e8 81 f5 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000d35:	85 c0                	test   eax,eax
10000d37:	0f 84 4b 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d3d:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d44:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d4b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d52:	e8 50 f4 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000d57:	89 c3                	mov    ebx,eax
10000d59:	3d ff 00 00 00       	cmp    eax,0xff
10000d5e:	7f 34                	jg     10000d94 <_ssfn_zlib_decode+0x401>
10000d60:	85 c0                	test   eax,eax
10000d62:	0f 88 20 01 00 00    	js     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d68:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d6f:	77 1d                	ja     10000d8e <_ssfn_zlib_decode+0x3fb>
10000d71:	89 ea                	mov    edx,ebp
10000d73:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d7a:	e8 d8 f4 ff ff       	call   10000257 <_ssfn__zexpand>
10000d7f:	85 c0                	test   eax,eax
10000d81:	0f 84 01 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d87:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d8e:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d91:	45                   	inc    ebp
10000d92:	eb b0                	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000d94:	3d 00 01 00 00       	cmp    eax,0x100
10000d99:	75 0c                	jne    10000da7 <_ssfn_zlib_decode+0x414>
10000d9b:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000da2:	e9 cd 00 00 00       	jmp    10000e74 <_ssfn_zlib_decode+0x4e1>
10000da7:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000dad:	8b 14 85 80 4b 00 10 	mov    edx,DWORD PTR [eax*4+0x10004b80]	10000db0: R_386_32	.text
10000db4:	8b 1c 85 00 4c 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004c00]	10000db7: R_386_32	.text
10000dbb:	85 d2                	test   edx,edx
10000dbd:	74 0e                	je     10000dcd <_ssfn_zlib_decode+0x43a>
10000dbf:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dc6:	e8 c2 f9 ff ff       	call   1000078d <_ssfn__zreceive>
10000dcb:	01 c3                	add    ebx,eax
10000dcd:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000dd4:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ddb:	e8 c7 f3 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000de0:	85 c0                	test   eax,eax
10000de2:	0f 88 a0 00 00 00    	js     10000e88 <_ssfn_zlib_decode+0x4f5>
10000de8:	8b 14 85 80 4a 00 10 	mov    edx,DWORD PTR [eax*4+0x10004a80]	10000deb: R_386_32	.text
10000def:	8b 3c 85 00 4b 00 10 	mov    edi,DWORD PTR [eax*4+0x10004b00]	10000df2: R_386_32	.text
10000df6:	85 d2                	test   edx,edx
10000df8:	74 0e                	je     10000e08 <_ssfn_zlib_decode+0x475>
10000dfa:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e01:	e8 87 f9 ff ff       	call   1000078d <_ssfn__zreceive>
10000e06:	01 c7                	add    edi,eax
10000e08:	89 e8                	mov    eax,ebp
10000e0a:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e11:	39 f8                	cmp    eax,edi
10000e13:	7c 73                	jl     10000e88 <_ssfn_zlib_decode+0x4f5>
10000e15:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e19:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e20:	73 19                	jae    10000e3b <_ssfn_zlib_decode+0x4a8>
10000e22:	89 ea                	mov    edx,ebp
10000e24:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e2b:	e8 27 f4 ff ff       	call   10000257 <_ssfn__zexpand>
10000e30:	85 c0                	test   eax,eax
10000e32:	74 54                	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000e34:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e3b:	89 ee                	mov    esi,ebp
10000e3d:	29 fe                	sub    esi,edi
10000e3f:	4f                   	dec    edi
10000e40:	75 19                	jne    10000e5b <_ssfn_zlib_decode+0x4c8>
10000e42:	85 db                	test   ebx,ebx
10000e44:	0f 84 fa fe ff ff    	je     10000d44 <_ssfn_zlib_decode+0x3b1>
10000e4a:	8a 06                	mov    al,BYTE PTR [esi]
10000e4c:	01 eb                	add    ebx,ebp
10000e4e:	45                   	inc    ebp
10000e4f:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e52:	39 dd                	cmp    ebp,ebx
10000e54:	75 f8                	jne    10000e4e <_ssfn_zlib_decode+0x4bb>
10000e56:	e9 e9 fe ff ff       	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000e5b:	85 db                	test   ebx,ebx
10000e5d:	0f 84 e1 fe ff ff    	je     10000d44 <_ssfn_zlib_decode+0x3b1>
10000e63:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e66:	89 ef                	mov    edi,ebp
10000e68:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e69:	39 f0                	cmp    eax,esi
10000e6b:	75 fb                	jne    10000e68 <_ssfn_zlib_decode+0x4d5>
10000e6d:	01 dd                	add    ebp,ebx
10000e6f:	e9 d0 fe ff ff       	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000e74:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e79:	0f 84 c0 fb ff ff    	je     10000a3f <_ssfn_zlib_decode+0xac>
10000e7f:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e86:	eb 14                	jmp    10000e9c <_ssfn_zlib_decode+0x509>
10000e88:	83 ec 0c             	sub    esp,0xc
10000e8b:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e92:	e8 fc ff ff ff       	call   10000e93 <_ssfn_zlib_decode+0x500>	10000e93: R_386_PC32	free
10000e97:	83 c4 10             	add    esp,0x10
10000e9a:	31 c0                	xor    eax,eax
10000e9c:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000ea2:	5b                   	pop    ebx
10000ea3:	5e                   	pop    esi
10000ea4:	5f                   	pop    edi
10000ea5:	5d                   	pop    ebp
10000ea6:	c3                   	ret    

10000ea7 <ssfn_load>:
10000ea7:	55                   	push   ebp
10000ea8:	57                   	push   edi
10000ea9:	56                   	push   esi
10000eaa:	53                   	push   ebx
10000eab:	83 ec 1c             	sub    esp,0x1c
10000eae:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000eb2:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000eb6:	85 ff                	test   edi,edi
10000eb8:	0f 84 d0 01 00 00    	je     1000108e <ssfn_load+0x1e7>
10000ebe:	85 f6                	test   esi,esi
10000ec0:	0f 84 c8 01 00 00    	je     1000108e <ssfn_load+0x1e7>
10000ec6:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ec9:	0f 85 a8 00 00 00    	jne    10000f77 <ssfn_load+0xd0>
10000ecf:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000ed3:	0f 85 9e 00 00 00    	jne    10000f77 <ssfn_load+0xd0>
10000ed9:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000edd:	74 0a                	je     10000ee9 <ssfn_load+0x42>
10000edf:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ee4:	e9 aa 01 00 00       	jmp    10001093 <ssfn_load+0x1ec>
10000ee9:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000eec:	a8 04                	test   al,0x4
10000eee:	75 05                	jne    10000ef5 <ssfn_load+0x4e>
10000ef0:	83 c6 0a             	add    esi,0xa
10000ef3:	eb 08                	jmp    10000efd <ssfn_load+0x56>
10000ef5:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000ef9:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000efd:	a8 08                	test   al,0x8
10000eff:	74 07                	je     10000f08 <ssfn_load+0x61>
10000f01:	46                   	inc    esi
10000f02:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f06:	eb f7                	jmp    10000eff <ssfn_load+0x58>
10000f08:	a8 10                	test   al,0x10
10000f0a:	74 07                	je     10000f13 <ssfn_load+0x6c>
10000f0c:	46                   	inc    esi
10000f0d:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f11:	eb f7                	jmp    10000f0a <ssfn_load+0x63>
10000f13:	83 ec 0c             	sub    esp,0xc
10000f16:	56                   	push   esi
10000f17:	e8 fc ff ff ff       	call   10000f18 <ssfn_load+0x71>	10000f18: R_386_PC32	_ssfn_zlib_decode
10000f1c:	83 c4 10             	add    esp,0x10
10000f1f:	89 c6                	mov    esi,eax
10000f21:	85 c0                	test   eax,eax
10000f23:	74 ba                	je     10000edf <ssfn_load+0x38>
10000f25:	50                   	push   eax
10000f26:	50                   	push   eax
10000f27:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f2d:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f34:	50                   	push   eax
10000f35:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f3b:	e8 fc ff ff ff       	call   10000f3c <ssfn_load+0x95>	10000f3c: R_386_PC32	realloc
10000f40:	83 c4 10             	add    esp,0x10
10000f43:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f49:	85 c0                	test   eax,eax
10000f4b:	75 0f                	jne    10000f5c <ssfn_load+0xb5>
10000f4d:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f57:	e9 1a 01 00 00       	jmp    10001076 <ssfn_load+0x1cf>
10000f5c:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f62:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f65:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f6b:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f6e:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f71:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f77:	50                   	push   eax
10000f78:	6a 04                	push   0x4
10000f7a:	68 2d 49 00 10       	push   0x1000492d	10000f7b: R_386_32	.text
10000f7f:	56                   	push   esi
10000f80:	e8 fc ff ff ff       	call   10000f81 <ssfn_load+0xda>	10000f81: R_386_PC32	memcmp
10000f85:	83 c4 10             	add    esp,0x10
10000f88:	89 c5                	mov    ebp,eax
10000f8a:	85 c0                	test   eax,eax
10000f8c:	75 29                	jne    10000fb7 <ssfn_load+0x110>
10000f8e:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f91:	01 f3                	add    ebx,esi
10000f93:	83 c6 08             	add    esi,0x8
10000f96:	39 de                	cmp    esi,ebx
10000f98:	0f 83 f5 00 00 00    	jae    10001093 <ssfn_load+0x1ec>
10000f9e:	50                   	push   eax
10000f9f:	50                   	push   eax
10000fa0:	56                   	push   esi
10000fa1:	57                   	push   edi
10000fa2:	e8 fc ff ff ff       	call   10000fa3 <ssfn_load+0xfc>	10000fa3: R_386_PC32	ssfn_load
10000fa7:	83 c4 10             	add    esp,0x10
10000faa:	85 c0                	test   eax,eax
10000fac:	0f 85 e1 00 00 00    	jne    10001093 <ssfn_load+0x1ec>
10000fb2:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fb5:	eb df                	jmp    10000f96 <ssfn_load+0xef>
10000fb7:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fba:	83 e0 0f             	and    eax,0xf
10000fbd:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fc1:	53                   	push   ebx
10000fc2:	6a 04                	push   0x4
10000fc4:	68 32 49 00 10       	push   0x10004932	10000fc5: R_386_32	.text
10000fc9:	56                   	push   esi
10000fca:	e8 fc ff ff ff       	call   10000fcb <ssfn_load+0x124>	10000fcb: R_386_PC32	memcmp
10000fcf:	83 c4 10             	add    esp,0x10
10000fd2:	89 c5                	mov    ebp,eax
10000fd4:	85 c0                	test   eax,eax
10000fd6:	0f 85 03 ff ff ff    	jne    10000edf <ssfn_load+0x38>
10000fdc:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fdf:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fe3:	51                   	push   ecx
10000fe4:	6a 04                	push   0x4
10000fe6:	68 37 49 00 10       	push   0x10004937	10000fe7: R_386_32	.text
10000feb:	50                   	push   eax
10000fec:	e8 fc ff ff ff       	call   10000fed <ssfn_load+0x146>	10000fed: R_386_PC32	memcmp
10000ff1:	83 c4 10             	add    esp,0x10
10000ff4:	85 c0                	test   eax,eax
10000ff6:	0f 85 e3 fe ff ff    	jne    10000edf <ssfn_load+0x38>
10000ffc:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10001001:	0f 87 d8 fe ff ff    	ja     10000edf <ssfn_load+0x38>
10001007:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
1000100b:	39 cb                	cmp    ebx,ecx
1000100d:	0f 86 cc fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001013:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10001016:	39 c3                	cmp    ebx,eax
10001018:	0f 86 c1 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
1000101e:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001021:	0f 86 b8 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001027:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000102a:	0f 86 af fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001030:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001033:	0f 86 a6 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001039:	39 c1                	cmp    ecx,eax
1000103b:	0f 83 9e fe ff ff    	jae    10000edf <ssfn_load+0x38>
10001041:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10001046:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001049:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
1000104f:	40                   	inc    eax
10001050:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
10001056:	52                   	push   edx
10001057:	c1 e0 02             	shl    eax,0x2
1000105a:	52                   	push   edx
1000105b:	50                   	push   eax
1000105c:	ff 33                	push   DWORD PTR [ebx]
1000105e:	e8 fc ff ff ff       	call   1000105f <ssfn_load+0x1b8>	1000105f: R_386_PC32	realloc
10001063:	83 c4 10             	add    esp,0x10
10001066:	89 03                	mov    DWORD PTR [ebx],eax
10001068:	85 c0                	test   eax,eax
1000106a:	75 0f                	jne    1000107b <ssfn_load+0x1d4>
1000106c:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
10001076:	83 cd ff             	or     ebp,0xffffffff
10001079:	eb 18                	jmp    10001093 <ssfn_load+0x1ec>
1000107b:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001081:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001085:	89 f8                	mov    eax,edi
10001087:	e8 ad f3 ff ff       	call   10000439 <_ssfn_fc.part.1>
1000108c:	eb 05                	jmp    10001093 <ssfn_load+0x1ec>
1000108e:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10001093:	83 c4 1c             	add    esp,0x1c
10001096:	89 e8                	mov    eax,ebp
10001098:	5b                   	pop    ebx
10001099:	5e                   	pop    esi
1000109a:	5f                   	pop    edi
1000109b:	5d                   	pop    ebp
1000109c:	c3                   	ret    

1000109d <ssfn_free>:
1000109d:	57                   	push   edi
1000109e:	56                   	push   esi
1000109f:	53                   	push   ebx
100010a0:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010a4:	85 db                	test   ebx,ebx
100010a6:	74 7e                	je     10001126 <ssfn_free+0x89>
100010a8:	89 d8                	mov    eax,ebx
100010aa:	e8 8a f3 ff ff       	call   10000439 <_ssfn_fc.part.1>
100010af:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010b6:	74 32                	je     100010ea <ssfn_free+0x4d>
100010b8:	31 f6                	xor    esi,esi
100010ba:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010c0:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010c6:	7e 16                	jle    100010de <ssfn_free+0x41>
100010c8:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010cb:	85 c0                	test   eax,eax
100010cd:	74 0c                	je     100010db <ssfn_free+0x3e>
100010cf:	83 ec 0c             	sub    esp,0xc
100010d2:	50                   	push   eax
100010d3:	e8 fc ff ff ff       	call   100010d4 <ssfn_free+0x37>	100010d4: R_386_PC32	free
100010d8:	83 c4 10             	add    esp,0x10
100010db:	46                   	inc    esi
100010dc:	eb dc                	jmp    100010ba <ssfn_free+0x1d>
100010de:	83 ec 0c             	sub    esp,0xc
100010e1:	50                   	push   eax
100010e2:	e8 fc ff ff ff       	call   100010e3 <ssfn_free+0x46>	100010e3: R_386_PC32	free
100010e7:	83 c4 10             	add    esp,0x10
100010ea:	31 f6                	xor    esi,esi
100010ec:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010ef:	85 c0                	test   eax,eax
100010f1:	74 0c                	je     100010ff <ssfn_free+0x62>
100010f3:	83 ec 0c             	sub    esp,0xc
100010f6:	50                   	push   eax
100010f7:	e8 fc ff ff ff       	call   100010f8 <ssfn_free+0x5b>	100010f8: R_386_PC32	free
100010fc:	83 c4 10             	add    esp,0x10
100010ff:	46                   	inc    esi
10001100:	83 fe 05             	cmp    esi,0x5
10001103:	75 e7                	jne    100010ec <ssfn_free+0x4f>
10001105:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000110b:	85 c0                	test   eax,eax
1000110d:	74 0c                	je     1000111b <ssfn_free+0x7e>
1000110f:	83 ec 0c             	sub    esp,0xc
10001112:	50                   	push   eax
10001113:	e8 fc ff ff ff       	call   10001114 <ssfn_free+0x77>	10001114: R_386_PC32	free
10001118:	83 c4 10             	add    esp,0x10
1000111b:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001120:	31 c0                	xor    eax,eax
10001122:	89 df                	mov    edi,ebx
10001124:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001126:	5b                   	pop    ebx
10001127:	5e                   	pop    esi
10001128:	5f                   	pop    edi
10001129:	c3                   	ret    

1000112a <ssfn_mem>:
1000112a:	55                   	push   ebp
1000112b:	31 c0                	xor    eax,eax
1000112d:	57                   	push   edi
1000112e:	56                   	push   esi
1000112f:	53                   	push   ebx
10001130:	83 ec 08             	sub    esp,0x8
10001133:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001137:	85 d2                	test   edx,edx
10001139:	0f 84 8e 00 00 00    	je     100011cd <ssfn_mem+0xa3>
1000113f:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001144:	31 c9                	xor    ecx,ecx
10001146:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
1000114d:	41                   	inc    ecx
1000114e:	8d 04 98             	lea    eax,[eax+ebx*4]
10001151:	83 f9 05             	cmp    ecx,0x5
10001154:	75 f0                	jne    10001146 <ssfn_mem+0x1c>
10001156:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
1000115c:	31 c9                	xor    ecx,ecx
1000115e:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001165:	89 34 24             	mov    DWORD PTR [esp],esi
10001168:	85 f6                	test   esi,esi
1000116a:	74 48                	je     100011b4 <ssfn_mem+0x8a>
1000116c:	31 db                	xor    ebx,ebx
1000116e:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001171:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001174:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
10001178:	85 ff                	test   edi,edi
1000117a:	74 2a                	je     100011a6 <ssfn_mem+0x7c>
1000117c:	31 f6                	xor    esi,esi
1000117e:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001182:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001185:	85 ed                	test   ebp,ebp
10001187:	74 0f                	je     10001198 <ssfn_mem+0x6e>
10001189:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
1000118d:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001191:	0f af fd             	imul   edi,ebp
10001194:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
10001198:	46                   	inc    esi
10001199:	81 fe 00 01 00 00    	cmp    esi,0x100
1000119f:	75 dd                	jne    1000117e <ssfn_mem+0x54>
100011a1:	05 00 04 00 00       	add    eax,0x400
100011a6:	43                   	inc    ebx
100011a7:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011ad:	75 bf                	jne    1000116e <ssfn_mem+0x44>
100011af:	05 00 04 00 00       	add    eax,0x400
100011b4:	41                   	inc    ecx
100011b5:	83 f9 11             	cmp    ecx,0x11
100011b8:	75 a4                	jne    1000115e <ssfn_mem+0x34>
100011ba:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011c1:	74 0a                	je     100011cd <ssfn_mem+0xa3>
100011c3:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011c9:	01 d2                	add    edx,edx
100011cb:	01 d0                	add    eax,edx
100011cd:	83 c4 08             	add    esp,0x8
100011d0:	5b                   	pop    ebx
100011d1:	5e                   	pop    esi
100011d2:	5f                   	pop    edi
100011d3:	5d                   	pop    ebp
100011d4:	c3                   	ret    

100011d5 <ssfn_select>:
100011d5:	55                   	push   ebp
100011d6:	57                   	push   edi
100011d7:	56                   	push   esi
100011d8:	53                   	push   ebx
100011d9:	83 ec 1c             	sub    esp,0x1c
100011dc:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011e0:	85 db                	test   ebx,ebx
100011e2:	75 0a                	jne    100011ee <ssfn_select+0x19>
100011e4:	be fc ff ff ff       	mov    esi,0xfffffffc
100011e9:	e9 13 01 00 00       	jmp    10001301 <ssfn_select+0x12c>
100011ee:	89 d8                	mov    eax,ebx
100011f0:	e8 44 f2 ff ff       	call   10000439 <_ssfn_fc.part.1>
100011f5:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011f9:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011ff:	0f 85 e9 00 00 00    	jne    100012ee <ssfn_select+0x119>
10001205:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001209:	83 e8 08             	sub    eax,0x8
1000120c:	3d b8 00 00 00       	cmp    eax,0xb8
10001211:	0f 87 de 00 00 00    	ja     100012f5 <ssfn_select+0x120>
10001217:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
1000121f:	75 76                	jne    10001297 <ssfn_select+0xc2>
10001221:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001226:	74 bc                	je     100011e4 <ssfn_select+0xf>
10001228:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000122c:	80 38 00             	cmp    BYTE PTR [eax],0x0
1000122f:	74 b3                	je     100011e4 <ssfn_select+0xf>
10001231:	31 ed                	xor    ebp,ebp
10001233:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001237:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000123b:	74 03                	je     10001240 <ssfn_select+0x6b>
1000123d:	45                   	inc    ebp
1000123e:	eb f3                	jmp    10001233 <ssfn_select+0x5e>
10001240:	8d 43 14             	lea    eax,[ebx+0x14]
10001243:	89 df                	mov    edi,ebx
10001245:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001249:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
1000124f:	31 d2                	xor    edx,edx
10001251:	89 04 24             	mov    DWORD PTR [esp],eax
10001254:	39 14 24             	cmp    DWORD PTR [esp],edx
10001257:	7e 33                	jle    1000128c <ssfn_select+0xb7>
10001259:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
1000125d:	8b 07                	mov    eax,DWORD PTR [edi]
1000125f:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001262:	50                   	push   eax
10001263:	8d 41 20             	lea    eax,[ecx+0x20]
10001266:	55                   	push   ebp
10001267:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000126b:	50                   	push   eax
1000126c:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001270:	e8 fc ff ff ff       	call   10001271 <ssfn_select+0x9c>	10001271: R_386_PC32	memcmp
10001275:	83 c4 10             	add    esp,0x10
10001278:	85 c0                	test   eax,eax
1000127a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000127e:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001282:	75 05                	jne    10001289 <ssfn_select+0xb4>
10001284:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
10001287:	eb 34                	jmp    100012bd <ssfn_select+0xe8>
10001289:	42                   	inc    edx
1000128a:	eb c8                	jmp    10001254 <ssfn_select+0x7f>
1000128c:	83 c7 04             	add    edi,0x4
1000128f:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001293:	75 b4                	jne    10001249 <ssfn_select+0x74>
10001295:	eb 65                	jmp    100012fc <ssfn_select+0x127>
10001297:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
1000129f:	74 15                	je     100012b6 <ssfn_select+0xe1>
100012a1:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012a6:	7f 54                	jg     100012fc <ssfn_select+0x127>
100012a8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012ac:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012b4:	74 46                	je     100012fc <ssfn_select+0x127>
100012b6:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012bd:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012c1:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012c8:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012ce:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012d8:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012dc:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012e2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012e6:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012ec:	eb 13                	jmp    10001301 <ssfn_select+0x12c>
100012ee:	be fb ff ff ff       	mov    esi,0xfffffffb
100012f3:	eb 0c                	jmp    10001301 <ssfn_select+0x12c>
100012f5:	be fa ff ff ff       	mov    esi,0xfffffffa
100012fa:	eb 05                	jmp    10001301 <ssfn_select+0x12c>
100012fc:	be fd ff ff ff       	mov    esi,0xfffffffd
10001301:	83 c4 1c             	add    esp,0x1c
10001304:	89 f0                	mov    eax,esi
10001306:	5b                   	pop    ebx
10001307:	5e                   	pop    esi
10001308:	5f                   	pop    edi
10001309:	5d                   	pop    ebp
1000130a:	c3                   	ret    

1000130b <ssfn_render>:
1000130b:	55                   	push   ebp
1000130c:	57                   	push   edi
1000130d:	56                   	push   esi
1000130e:	53                   	push   ebx
1000130f:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001315:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
1000131c:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
10001327:	85 ed                	test   ebp,ebp
10001329:	0f 94 c2             	sete   dl
1000132c:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001334:	0f 94 c0             	sete   al
10001337:	08 c2                	or     dl,al
10001339:	74 0a                	je     10001345 <ssfn_render+0x3a>
1000133b:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001340:	e9 14 1e 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
10001345:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
1000134c:	31 c9                	xor    ecx,ecx
1000134e:	8a 00                	mov    al,BYTE PTR [eax]
10001350:	84 c0                	test   al,al
10001352:	0f 84 01 1e 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001358:	3c 0d                	cmp    al,0xd
1000135a:	75 0f                	jne    1000136b <ssfn_render+0x60>
1000135c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001363:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001369:	eb 31                	jmp    1000139c <ssfn_render+0x91>
1000136b:	3c 0a                	cmp    al,0xa
1000136d:	75 37                	jne    100013a6 <ssfn_render+0x9b>
1000136f:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001376:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000137c:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
1000137f:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001385:	85 c0                	test   eax,eax
10001387:	75 06                	jne    1000138f <ssfn_render+0x84>
10001389:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
1000138f:	01 d0                	add    eax,edx
10001391:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10001398:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
1000139c:	b9 01 00 00 00       	mov    ecx,0x1
100013a1:	e9 b3 1d 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
100013a6:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013a9:	85 c0                	test   eax,eax
100013ab:	74 3e                	je     100013eb <ssfn_render+0xe0>
100013ad:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013b0:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
100013b7:	56                   	push   esi
100013b8:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013bf:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013c6:	e8 a0 f4 ff ff       	call   1000086b <_ssfn_c>
100013cb:	5b                   	pop    ebx
100013cc:	85 c0                	test   eax,eax
100013ce:	0f 85 71 02 00 00    	jne    10001645 <ssfn_render+0x33a>
100013d4:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013da:	81 e2 00 01 00 00    	and    edx,0x100
100013e0:	0f 84 fd 01 00 00    	je     100015e3 <ssfn_render+0x2d8>
100013e6:	e9 1d 02 00 00       	jmp    10001608 <ssfn_render+0x2fd>
100013eb:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013f1:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013f8:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100013fc:	3d fd 00 00 00       	cmp    eax,0xfd
10001401:	7f 08                	jg     1000140b <ssfn_render+0x100>
10001403:	89 c3                	mov    ebx,eax
10001405:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001409:	eb 3f                	jmp    1000144a <ssfn_render+0x13f>
1000140b:	31 db                	xor    ebx,ebx
1000140d:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001415:	eb 33                	jmp    1000144a <ssfn_render+0x13f>
10001417:	85 c0                	test   eax,eax
10001419:	0f 84 64 01 00 00    	je     10001583 <ssfn_render+0x278>
1000141f:	43                   	inc    ebx
10001420:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001424:	7e 28                	jle    1000144e <ssfn_render+0x143>
10001426:	85 c0                	test   eax,eax
10001428:	0f 85 17 02 00 00    	jne    10001645 <ssfn_render+0x33a>
1000142e:	31 db                	xor    ebx,ebx
10001430:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001438:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001440:	74 92                	je     100013d4 <ssfn_render+0xc9>
10001442:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000144a:	31 c0                	xor    eax,eax
1000144c:	eb d2                	jmp    10001420 <ssfn_render+0x115>
1000144e:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001452:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
10001459:	74 bc                	je     10001417 <ssfn_render+0x10c>
1000145b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001466:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000146d:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001474:	7e 50                	jle    100014c6 <ssfn_render+0x1bb>
10001476:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
10001479:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
1000147d:	c1 fa 04             	sar    edx,0x4
10001480:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
10001486:	80 e2 03             	and    dl,0x3
10001489:	75 32                	jne    100014bd <ssfn_render+0x1b2>
1000148b:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
1000148f:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001495:	75 26                	jne    100014bd <ssfn_render+0x1b2>
10001497:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
1000149e:	50                   	push   eax
1000149f:	89 f8                	mov    eax,edi
100014a1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014a8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014af:	e8 b7 f3 ff ff       	call   1000086b <_ssfn_c>
100014b4:	59                   	pop    ecx
100014b5:	85 c0                	test   eax,eax
100014b7:	0f 85 04 01 00 00    	jne    100015c1 <ssfn_render+0x2b6>
100014bd:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014c4:	eb a0                	jmp    10001466 <ssfn_render+0x15b>
100014c6:	85 c0                	test   eax,eax
100014c8:	0f 85 51 ff ff ff    	jne    1000141f <ssfn_render+0x114>
100014ce:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014d9:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014e0:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014e7:	0f 8e f9 1b 00 00    	jle    100030e6 <ssfn_render+0x1ddb>
100014ed:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014f0:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014f4:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014fa:	74 09                	je     10001505 <ssfn_render+0x1fa>
100014fc:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001503:	eb d4                	jmp    100014d9 <ssfn_render+0x1ce>
10001505:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000150c:	57                   	push   edi
1000150d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001514:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000151b:	e8 4b f3 ff ff       	call   1000086b <_ssfn_c>
10001520:	5a                   	pop    edx
10001521:	85 c0                	test   eax,eax
10001523:	74 d7                	je     100014fc <ssfn_render+0x1f1>
10001525:	e9 97 00 00 00       	jmp    100015c1 <ssfn_render+0x2b6>
1000152a:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000152d:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001531:	c1 fa 04             	sar    edx,0x4
10001534:	31 ca                	xor    edx,ecx
10001536:	80 e2 03             	and    dl,0x3
10001539:	0f 84 b7 1b 00 00    	je     100030f6 <ssfn_render+0x1deb>
1000153f:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001546:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000154d:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10001553:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000155a:	7f ce                	jg     1000152a <ssfn_render+0x21f>
1000155c:	83 e1 03             	and    ecx,0x3
1000155f:	83 f9 03             	cmp    ecx,0x3
10001562:	75 1f                	jne    10001583 <ssfn_render+0x278>
10001564:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000156f:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001576:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000157d:	0f 8f 9c 1b 00 00    	jg     1000311f <ssfn_render+0x1e14>
10001583:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000158e:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001595:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000159c:	7e 3e                	jle    100015dc <ssfn_render+0x2d1>
1000159e:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100015a1:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015a8:	57                   	push   edi
100015a9:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100015b0:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100015b7:	e8 af f2 ff ff       	call   1000086b <_ssfn_c>
100015bc:	5a                   	pop    edx
100015bd:	85 c0                	test   eax,eax
100015bf:	74 12                	je     100015d3 <ssfn_render+0x2c8>
100015c1:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100015c8:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
100015cb:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
100015ce:	e9 4c fe ff ff       	jmp    1000141f <ssfn_render+0x114>
100015d3:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100015da:	eb b2                	jmp    1000158e <ssfn_render+0x283>
100015dc:	31 c0                	xor    eax,eax
100015de:	e9 3c fe ff ff       	jmp    1000141f <ssfn_render+0x114>
100015e3:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015e9:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015f4:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100015fa:	7f 16                	jg     10001612 <ssfn_render+0x307>
100015fc:	89 da                	mov    edx,ebx
100015fe:	31 c0                	xor    eax,eax
10001600:	39 da                	cmp    edx,ebx
10001602:	7e 15                	jle    10001619 <ssfn_render+0x30e>
10001604:	85 c0                	test   eax,eax
10001606:	75 3d                	jne    10001645 <ssfn_render+0x33a>
10001608:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
1000160d:	e9 47 1b 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
10001612:	bb 04 00 00 00       	mov    ebx,0x4
10001617:	eb e5                	jmp    100015fe <ssfn_render+0x2f3>
10001619:	85 c0                	test   eax,eax
1000161b:	75 28                	jne    10001645 <ssfn_render+0x33a>
1000161d:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001625:	74 1b                	je     10001642 <ssfn_render+0x337>
10001627:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
1000162b:	8b 09                	mov    ecx,DWORD PTR [ecx]
1000162d:	85 c9                	test   ecx,ecx
1000162f:	74 11                	je     10001642 <ssfn_render+0x337>
10001631:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001634:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001638:	78 08                	js     10001642 <ssfn_render+0x337>
1000163a:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
1000163d:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001640:	01 c8                	add    eax,ecx
10001642:	42                   	inc    edx
10001643:	eb bb                	jmp    10001600 <ssfn_render+0x2f5>
10001645:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001648:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
1000164d:	85 d2                	test   edx,edx
1000164f:	0f 84 04 1b 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001655:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
10001659:	0f 84 fa 1a 00 00    	je     10003159 <ssfn_render+0x1e4e>
1000165f:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001665:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001669:	85 ff                	test   edi,edi
1000166b:	0f 84 e8 1a 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001671:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
10001678:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
1000167c:	c1 ef 10             	shr    edi,0x10
1000167f:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10001683:	83 ff 10             	cmp    edi,0x10
10001686:	0f 87 af fc ff ff    	ja     1000133b <ssfn_render+0x30>
1000168c:	8d 70 06             	lea    esi,[eax+0x6]
1000168f:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001695:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10001699:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
1000169f:	89 f7                	mov    edi,esi
100016a1:	81 e7 00 02 00 00    	and    edi,0x200
100016a7:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016ab:	75 34                	jne    100016e1 <ssfn_render+0x3d6>
100016ad:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100016b1:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
100016b8:	85 c9                	test   ecx,ecx
100016ba:	74 25                	je     100016e1 <ssfn_render+0x3d6>
100016bc:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100016c0:	0f b6 ff             	movzx  edi,bh
100016c3:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016c6:	85 c9                	test   ecx,ecx
100016c8:	74 17                	je     100016e1 <ssfn_render+0x3d6>
100016ca:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
100016cf:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016d2:	85 c9                	test   ecx,ecx
100016d4:	74 0b                	je     100016e1 <ssfn_render+0x3d6>
100016d6:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016dc:	e9 25 0d 00 00       	jmp    10002406 <ssfn_render+0x10fb>
100016e1:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016e5:	f7 c6 40 00 00 00    	test   esi,0x40
100016eb:	75 1a                	jne    10001707 <ssfn_render+0x3fc>
100016ed:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016f1:	7e 10                	jle    10001703 <ssfn_render+0x3f8>
100016f3:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016f7:	83 c7 04             	add    edi,0x4
100016fa:	83 e7 fc             	and    edi,0xfffffffc
100016fd:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001701:	eb 04                	jmp    10001707 <ssfn_render+0x3fc>
10001703:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001707:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
1000170c:	f7 c6 02 00 00 00    	test   esi,0x2
10001712:	74 14                	je     10001728 <ssfn_render+0x41d>
10001714:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
10001717:	c0 eb 05             	shr    bl,0x5
1000171a:	89 df                	mov    edi,ebx
1000171c:	83 f7 01             	xor    edi,0x1
1000171f:	83 e7 01             	and    edi,0x1
10001722:	89 fb                	mov    ebx,edi
10001724:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001728:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
1000172d:	83 e6 01             	and    esi,0x1
10001730:	74 10                	je     10001742 <ssfn_render+0x437>
10001732:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
10001736:	75 0a                	jne    10001742 <ssfn_render+0x437>
10001738:	8d 51 40             	lea    edx,[ecx+0x40]
1000173b:	c1 fa 06             	sar    edx,0x6
1000173e:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001742:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
10001746:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000174b:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000174f:	99                   	cdq    
10001750:	f7 f9                	idiv   ecx
10001752:	89 c1                	mov    ecx,eax
10001754:	31 c0                	xor    eax,eax
10001756:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000175b:	74 0c                	je     10001769 <ssfn_render+0x45e>
1000175d:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001761:	be 04 00 00 00       	mov    esi,0x4
10001766:	99                   	cdq    
10001767:	f7 fe                	idiv   esi
10001769:	01 c8                	add    eax,ecx
1000176b:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001770:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001775:	01 f0                	add    eax,esi
10001777:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
1000177b:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000177f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001783:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
10001788:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000178c:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001791:	0f 8f c2 19 00 00    	jg     10003159 <ssfn_render+0x1e4e>
10001797:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
1000179c:	0f 85 f0 00 00 00    	jne    10001892 <ssfn_render+0x587>
100017a2:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017a6:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017aa:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
100017b1:	75 2f                	jne    100017e2 <ssfn_render+0x4d7>
100017b3:	83 ec 0c             	sub    esp,0xc
100017b6:	68 00 04 00 00       	push   0x400
100017bb:	e8 fc ff ff ff       	call   100017bc <ssfn_render+0x4b1>	100017bc: R_386_PC32	malloc
100017c0:	83 c4 10             	add    esp,0x10
100017c3:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
100017c9:	85 c0                	test   eax,eax
100017cb:	75 08                	jne    100017d5 <ssfn_render+0x4ca>
100017cd:	83 c9 ff             	or     ecx,0xffffffff
100017d0:	e9 84 19 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
100017d5:	89 c7                	mov    edi,eax
100017d7:	b9 00 01 00 00       	mov    ecx,0x100
100017dc:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017e0:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017e2:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017e6:	0f b6 dc             	movzx  ebx,ah
100017e9:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017ef:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017f2:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017f5:	75 3a                	jne    10001831 <ssfn_render+0x526>
100017f7:	83 ec 0c             	sub    esp,0xc
100017fa:	68 00 04 00 00       	push   0x400
100017ff:	e8 fc ff ff ff       	call   10001800 <ssfn_render+0x4f5>	10001800: R_386_PC32	malloc
10001804:	89 03                	mov    DWORD PTR [ebx],eax
10001806:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000180d:	83 c4 10             	add    esp,0x10
10001810:	89 c2                	mov    edx,eax
10001812:	0f b6 c4             	movzx  eax,ah
10001815:	c1 ea 10             	shr    edx,0x10
10001818:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000181f:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
10001822:	85 d2                	test   edx,edx
10001824:	74 a7                	je     100017cd <ssfn_render+0x4c2>
10001826:	b9 00 01 00 00       	mov    ecx,0x100
1000182b:	31 c0                	xor    eax,eax
1000182d:	89 d7                	mov    edi,edx
1000182f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001831:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001838:	83 ec 0c             	sub    esp,0xc
1000183b:	0f b6 cc             	movzx  ecx,ah
1000183e:	89 c2                	mov    edx,eax
10001840:	0f b6 c0             	movzx  eax,al
10001843:	c1 ea 10             	shr    edx,0x10
10001846:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000184d:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001850:	8d 1c 82             	lea    ebx,[edx+eax*4]
10001853:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001857:	83 c0 08             	add    eax,0x8
1000185a:	50                   	push   eax
1000185b:	e8 fc ff ff ff       	call   1000185c <ssfn_render+0x551>	1000185c: R_386_PC32	malloc
10001860:	89 03                	mov    DWORD PTR [ebx],eax
10001862:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
10001868:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000186f:	83 c4 10             	add    esp,0x10
10001872:	89 c2                	mov    edx,eax
10001874:	0f b6 cc             	movzx  ecx,ah
10001877:	c1 ea 10             	shr    edx,0x10
1000187a:	0f b6 c0             	movzx  eax,al
1000187d:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001884:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001887:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000188b:	75 0e                	jne    1000189b <ssfn_render+0x590>
1000188d:	e9 3b ff ff ff       	jmp    100017cd <ssfn_render+0x4c2>
10001892:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001895:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000189b:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
100018a1:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018a5:	74 2a                	je     100018d1 <ssfn_render+0x5c6>
100018a7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018ac:	74 23                	je     100018d1 <ssfn_render+0x5c6>
100018ae:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100018b1:	bb 04 00 00 00       	mov    ebx,0x4
100018b6:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100018ba:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
100018be:	89 cf                	mov    edi,ecx
100018c0:	29 c7                	sub    edi,eax
100018c2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100018c6:	0f af c7             	imul   eax,edi
100018c9:	99                   	cdq    
100018ca:	f7 fb                	idiv   ebx
100018cc:	99                   	cdq    
100018cd:	f7 f9                	idiv   ecx
100018cf:	eb 02                	jmp    100018d3 <ssfn_render+0x5c8>
100018d1:	31 c0                	xor    eax,eax
100018d3:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018d9:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018dd:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018e1:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018e9:	66 89 32             	mov    WORD PTR [edx],si
100018ec:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018f1:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018f7:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100018fa:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001900:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001906:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001909:	01 c3                	add    ebx,eax
1000190b:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
1000190e:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001914:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
1000191a:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
1000191d:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001920:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
10001926:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000192c:	8a 12                	mov    dl,BYTE PTR [edx]
1000192e:	83 e2 3f             	and    edx,0x3f
10001931:	01 d0                	add    eax,edx
10001933:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
10001936:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000193a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001940:	8d 50 08             	lea    edx,[eax+0x8]
10001943:	b0 ff                	mov    al,0xff
10001945:	89 d7                	mov    edi,edx
10001947:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001949:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000194f:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
10001953:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001959:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
1000195d:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001961:	c1 e0 04             	shl    eax,0x4
10001964:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10001968:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000196c:	c1 e0 04             	shl    eax,0x4
1000196f:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001973:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001979:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
1000197d:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001981:	0f 8e 4d 0a 00 00    	jle    100023d4 <ssfn_render+0x10c9>
10001987:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000198b:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000198f:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001992:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001995:	8a 12                	mov    dl,BYTE PTR [edx]
10001997:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000199b:	83 e2 40             	and    edx,0x40
1000199e:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
100019a2:	88 c2                	mov    dl,al
100019a4:	21 ca                	and    edx,ecx
100019a6:	fe c2                	inc    dl
100019a8:	75 14                	jne    100019be <ssfn_render+0x6b3>
100019aa:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019af:	19 c0                	sbb    eax,eax
100019b1:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
100019b5:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100019b9:	e9 09 0a 00 00       	jmp    100023c7 <ssfn_render+0x10bc>
100019be:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100019c2:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
100019c5:	c1 e0 04             	shl    eax,0x4
100019c8:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
100019cc:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019d1:	99                   	cdq    
100019d2:	f7 fe                	idiv   esi
100019d4:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100019d8:	0f b6 c1             	movzx  eax,cl
100019db:	c1 e0 04             	shl    eax,0x4
100019de:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019e3:	99                   	cdq    
100019e4:	f7 fe                	idiv   esi
100019e6:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019ea:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019ee:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019f2:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019f6:	c1 e2 10             	shl    edx,0x10
100019f9:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100019fe:	74 0e                	je     10001a0e <ssfn_render+0x703>
10001a00:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a04:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a09:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a0c:	eb 0c                	jmp    10001a1a <ssfn_render+0x70f>
10001a0e:	c1 e0 08             	shl    eax,0x8
10001a11:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a16:	09 d0                	or     eax,edx
10001a18:	09 c3                	or     ebx,eax
10001a1a:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a1d:	8a 01                	mov    al,BYTE PTR [ecx]
10001a1f:	84 c0                	test   al,al
10001a21:	0f 88 17 05 00 00    	js     10001f3e <ssfn_render+0xc33>
10001a27:	89 c7                	mov    edi,eax
10001a29:	83 e7 3f             	and    edi,0x3f
10001a2c:	a8 40                	test   al,0x40
10001a2e:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a32:	74 10                	je     10001a44 <ssfn_render+0x739>
10001a34:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a38:	89 f8                	mov    eax,edi
10001a3a:	41                   	inc    ecx
10001a3b:	c1 e0 08             	shl    eax,0x8
10001a3e:	09 c2                	or     edx,eax
10001a40:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a44:	8d 41 01             	lea    eax,[ecx+0x1]
10001a47:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a51:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a55:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a60:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a64:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a68:	83 c0 04             	add    eax,0x4
10001a6b:	c1 f8 02             	sar    eax,0x2
10001a6e:	01 c7                	add    edi,eax
10001a70:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a77:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a7b:	0f 8f d7 01 00 00    	jg     10001c58 <ssfn_render+0x94d>
10001a81:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a84:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a88:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a8c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a90:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a94:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a97:	c1 e0 04             	shl    eax,0x4
10001a9a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a9f:	99                   	cdq    
10001aa0:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001aa4:	01 c6                	add    esi,eax
10001aa6:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001aaa:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001aae:	c1 e0 04             	shl    eax,0x4
10001ab1:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001ab6:	99                   	cdq    
10001ab7:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001abb:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001abf:	01 c3                	add    ebx,eax
10001ac1:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001ac5:	89 c8                	mov    eax,ecx
10001ac7:	01 c9                	add    ecx,ecx
10001ac9:	c1 f8 02             	sar    eax,0x2
10001acc:	83 e1 06             	and    ecx,0x6
10001acf:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001ad3:	d3 f8                	sar    eax,cl
10001ad5:	83 e0 03             	and    eax,0x3
10001ad8:	89 c1                	mov    ecx,eax
10001ada:	83 f8 02             	cmp    eax,0x2
10001add:	74 4a                	je     10001b29 <ssfn_render+0x81e>
10001adf:	83 f8 03             	cmp    eax,0x3
10001ae2:	0f 84 e4 00 00 00    	je     10001bcc <ssfn_render+0x8c1>
10001ae8:	49                   	dec    ecx
10001ae9:	74 20                	je     10001b0b <ssfn_render+0x800>
10001aeb:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001af1:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001af7:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001afd:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001b03:	83 c7 02             	add    edi,0x2
10001b06:	e9 41 01 00 00       	jmp    10001c4c <ssfn_render+0x941>
10001b0b:	83 c7 02             	add    edi,0x2
10001b0e:	50                   	push   eax
10001b0f:	50                   	push   eax
10001b10:	89 e8                	mov    eax,ebp
10001b12:	53                   	push   ebx
10001b13:	56                   	push   esi
10001b14:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b18:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b1c:	e8 9c e9 ff ff       	call   100004bd <_ssfn_l>
10001b21:	83 c4 10             	add    esp,0x10
10001b24:	e9 23 01 00 00       	jmp    10001c4c <ssfn_render+0x941>
10001b29:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b2d:	83 c7 04             	add    edi,0x4
10001b30:	c1 e0 04             	shl    eax,0x4
10001b33:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b38:	99                   	cdq    
10001b39:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b3d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b41:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b45:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b49:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b4d:	c1 e0 04             	shl    eax,0x4
10001b50:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b55:	99                   	cdq    
10001b56:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b5a:	83 ec 0c             	sub    esp,0xc
10001b5d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b61:	6a 00                	push   0x0
10001b63:	53                   	push   ebx
10001b64:	56                   	push   esi
10001b65:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b69:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b6d:	99                   	cdq    
10001b6e:	f7 f9                	idiv   ecx
10001b70:	01 d8                	add    eax,ebx
10001b72:	50                   	push   eax
10001b73:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b77:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b7b:	99                   	cdq    
10001b7c:	f7 f9                	idiv   ecx
10001b7e:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b82:	50                   	push   eax
10001b83:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b87:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b8b:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b91:	99                   	cdq    
10001b92:	f7 f9                	idiv   ecx
10001b94:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b9a:	50                   	push   eax
10001b9b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001b9f:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001ba5:	99                   	cdq    
10001ba6:	f7 f9                	idiv   ecx
10001ba8:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001bae:	50                   	push   eax
10001baf:	89 e8                	mov    eax,ebp
10001bb1:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bb7:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bbd:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001bc1:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001bc5:	e8 04 ea ff ff       	call   100005ce <_ssfn_b>
10001bca:	eb 7d                	jmp    10001c49 <ssfn_render+0x93e>
10001bcc:	83 ec 0c             	sub    esp,0xc
10001bcf:	83 c7 06             	add    edi,0x6
10001bd2:	6a 00                	push   0x0
10001bd4:	53                   	push   ebx
10001bd5:	56                   	push   esi
10001bd6:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001bda:	c1 e0 04             	shl    eax,0x4
10001bdd:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001be2:	99                   	cdq    
10001be3:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001be7:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001beb:	50                   	push   eax
10001bec:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001bf0:	c1 e0 04             	shl    eax,0x4
10001bf3:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001bf8:	99                   	cdq    
10001bf9:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001bfd:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001c01:	50                   	push   eax
10001c02:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c06:	c1 e0 04             	shl    eax,0x4
10001c09:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c0e:	99                   	cdq    
10001c0f:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c13:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c17:	50                   	push   eax
10001c18:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c1c:	c1 e0 04             	shl    eax,0x4
10001c1f:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c24:	99                   	cdq    
10001c25:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c29:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c2d:	50                   	push   eax
10001c2e:	89 e8                	mov    eax,ebp
10001c30:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c36:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c3c:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c40:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c44:	e8 85 e9 ff ff       	call   100005ce <_ssfn_b>
10001c49:	83 c4 30             	add    esp,0x30
10001c4c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c53:	e9 18 fe ff ff       	jmp    10001a70 <ssfn_render+0x765>
10001c58:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c5e:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c64:	75 0e                	jne    10001c74 <ssfn_render+0x969>
10001c66:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c6c:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c72:	74 2e                	je     10001ca2 <ssfn_render+0x997>
10001c74:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c7a:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c80:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c84:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c8a:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c90:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c96:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c9b:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001ca2:	b3 fe                	mov    bl,0xfe
10001ca4:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001cab:	0f 8e 16 07 00 00    	jle    100023c7 <ssfn_render+0x10bc>
10001cb1:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001cb9:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001cc1:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001cc9:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001cd1:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001cd9:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001cdd:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001ce1:	0f 8d de 06 00 00    	jge    100023c5 <ssfn_render+0x10ba>
10001ce7:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001ced:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001cf8:	83 e8 03             	sub    eax,0x3
10001cfb:	31 f6                	xor    esi,esi
10001cfd:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001d01:	89 f8                	mov    eax,edi
10001d03:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d07:	c1 f8 02             	sar    eax,0x2
10001d0a:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d0e:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d15:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d19:	0f 8e 16 01 00 00    	jle    10001e35 <ssfn_render+0xb2a>
10001d1f:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d25:	8d 47 01             	lea    eax,[edi+0x1]
10001d28:	01 c0                	add    eax,eax
10001d2a:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d2e:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d32:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d37:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d3b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d3f:	7d 0c                	jge    10001d4d <ssfn_render+0xa42>
10001d41:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d45:	0f 8f db 00 00 00    	jg     10001e26 <ssfn_render+0xb1b>
10001d4b:	eb 0a                	jmp    10001d57 <ssfn_render+0xa4c>
10001d4d:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d51:	0f 8e cf 00 00 00    	jle    10001e26 <ssfn_render+0xb1b>
10001d57:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d5c:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d60:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d65:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d69:	89 d8                	mov    eax,ebx
10001d6b:	c1 fa 04             	sar    edx,0x4
10001d6e:	c1 f8 04             	sar    eax,0x4
10001d71:	39 c2                	cmp    edx,eax
10001d73:	75 0a                	jne    10001d7f <ssfn_render+0xa74>
10001d75:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d79:	01 c8                	add    eax,ecx
10001d7b:	d1 f8                	sar    eax,1
10001d7d:	eb 1a                	jmp    10001d99 <ssfn_render+0xa8e>
10001d7f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d83:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d87:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d8b:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d8f:	0f af c1             	imul   eax,ecx
10001d92:	99                   	cdq    
10001d93:	f7 fb                	idiv   ebx
10001d95:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d99:	c1 f8 04             	sar    eax,0x4
10001d9c:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001da1:	74 04                	je     10001da7 <ssfn_render+0xa9c>
10001da3:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001da7:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001dac:	75 3f                	jne    10001ded <ssfn_render+0xae2>
10001dae:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001db3:	74 38                	je     10001ded <ssfn_render+0xae2>
10001db5:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001db9:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001dbf:	f7 db                	neg    ebx
10001dc1:	01 c2                	add    edx,eax
10001dc3:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001dc7:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dcb:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dcf:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001dd3:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001dd7:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001ddb:	74 10                	je     10001ded <ssfn_render+0xae2>
10001ddd:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001de1:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001de5:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001de9:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001ded:	31 d2                	xor    edx,edx
10001def:	39 f2                	cmp    edx,esi
10001df1:	75 0b                	jne    10001dfe <ssfn_render+0xaf3>
10001df3:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001dfb:	46                   	inc    esi
10001dfc:	eb 28                	jmp    10001e26 <ssfn_render+0xb1b>
10001dfe:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e06:	39 c1                	cmp    ecx,eax
10001e08:	7d 03                	jge    10001e0d <ssfn_render+0xb02>
10001e0a:	42                   	inc    edx
10001e0b:	eb e2                	jmp    10001def <ssfn_render+0xae4>
10001e0d:	89 f1                	mov    ecx,esi
10001e0f:	49                   	dec    ecx
10001e10:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e18:	39 d1                	cmp    ecx,edx
10001e1a:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e22:	7f eb                	jg     10001e0f <ssfn_render+0xb04>
10001e24:	eb cd                	jmp    10001df3 <ssfn_render+0xae8>
10001e26:	8d 47 02             	lea    eax,[edi+0x2]
10001e29:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e30:	e9 d9 fe ff ff       	jmp    10001d0e <ssfn_render+0xa03>
10001e35:	83 fe 01             	cmp    esi,0x1
10001e38:	7e 1f                	jle    10001e59 <ssfn_render+0xb4e>
10001e3a:	f7 c6 01 00 00 00    	test   esi,0x1
10001e40:	74 24                	je     10001e66 <ssfn_render+0xb5b>
10001e42:	8d 46 ff             	lea    eax,[esi-0x1]
10001e45:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e4d:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e55:	89 c6                	mov    esi,eax
10001e57:	eb 0d                	jmp    10001e66 <ssfn_render+0xb5b>
10001e59:	85 f6                	test   esi,esi
10001e5b:	0f 84 c7 00 00 00    	je     10001f28 <ssfn_render+0xc1d>
10001e61:	be 01 00 00 00       	mov    esi,0x1
10001e66:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e6c:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e70:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e74:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e78:	39 d1                	cmp    ecx,edx
10001e7a:	7d 0b                	jge    10001e87 <ssfn_render+0xb7c>
10001e7c:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e80:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e84:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e87:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e92:	31 c0                	xor    eax,eax
10001e94:	31 d2                	xor    edx,edx
10001e96:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e99:	39 d1                	cmp    ecx,edx
10001e9b:	7e 7d                	jle    10001f1a <ssfn_render+0xc0f>
10001e9d:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ea5:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001ead:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001eb1:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001eb5:	79 02                	jns    10001eb9 <ssfn_render+0xbae>
10001eb7:	31 c0                	xor    eax,eax
10001eb9:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001ebd:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001ec1:	39 cf                	cmp    edi,ecx
10001ec3:	7e 04                	jle    10001ec9 <ssfn_render+0xbbe>
10001ec5:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001ec9:	85 d2                	test   edx,edx
10001ecb:	74 12                	je     10001edf <ssfn_render+0xbd4>
10001ecd:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001ed5:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ed9:	39 c8                	cmp    eax,ecx
10001edb:	7d 02                	jge    10001edf <ssfn_render+0xbd4>
10001edd:	89 c8                	mov    eax,ecx
10001edf:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001ee3:	7d 2b                	jge    10001f10 <ssfn_render+0xc05>
10001ee5:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001ee9:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001eef:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001ef2:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001ef6:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001efa:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001efe:	75 05                	jne    10001f05 <ssfn_render+0xbfa>
10001f00:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f05:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f09:	40                   	inc    eax
10001f0a:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f0e:	eb cf                	jmp    10001edf <ssfn_render+0xbd4>
10001f10:	83 c2 02             	add    edx,0x2
10001f13:	b0 01                	mov    al,0x1
10001f15:	e9 7c ff ff ff       	jmp    10001e96 <ssfn_render+0xb8b>
10001f1a:	83 e6 fe             	and    esi,0xfffffffe
10001f1d:	84 c0                	test   al,al
10001f1f:	74 07                	je     10001f28 <ssfn_render+0xc1d>
10001f21:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f28:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f2c:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f30:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f34:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f39:	e9 9b fd ff ff       	jmp    10001cd9 <ssfn_render+0x9ce>
10001f3e:	88 c2                	mov    dl,al
10001f40:	80 e2 60             	and    dl,0x60
10001f43:	0f 85 95 02 00 00    	jne    100021de <ssfn_render+0xed3>
10001f49:	83 e0 1f             	and    eax,0x1f
10001f4c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f50:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f57:	c1 fb 04             	sar    ebx,0x4
10001f5a:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f5e:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f62:	40                   	inc    eax
10001f63:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f67:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f6b:	c1 f8 04             	sar    eax,0x4
10001f6e:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f72:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f76:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f7b:	99                   	cdq    
10001f7c:	f7 fe                	idiv   esi
10001f7e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f82:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f86:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f8b:	99                   	cdq    
10001f8c:	f7 fe                	idiv   esi
10001f8e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f92:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f98:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f9c:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001fa0:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fa3:	39 d6                	cmp    esi,edx
10001fa5:	7d 0a                	jge    10001fb1 <ssfn_render+0xca6>
10001fa7:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fab:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fae:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001fb1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001fb5:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001fbd:	0f af c3             	imul   eax,ebx
10001fc0:	31 ff                	xor    edi,edi
10001fc2:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fc6:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001fca:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001fce:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001fd2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fd6:	29 d8                	sub    eax,ebx
10001fd8:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fdc:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fe0:	0f 8d b1 00 00 00    	jge    10002097 <ssfn_render+0xd8c>
10001fe6:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001fea:	99                   	cdq    
10001feb:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001fef:	89 c6                	mov    esi,eax
10001ff1:	31 c0                	xor    eax,eax
10001ff3:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001ff8:	74 0e                	je     10002008 <ssfn_render+0xcfd>
10001ffa:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001ffe:	bb 04 00 00 00       	mov    ebx,0x4
10002003:	29 f8                	sub    eax,edi
10002005:	99                   	cdq    
10002006:	f7 fb                	idiv   ebx
10002008:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000200c:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002017:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
1000201b:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002020:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002027:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000202b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000202f:	39 d8                	cmp    eax,ebx
10002031:	7d 4e                	jge    10002081 <ssfn_render+0xd76>
10002033:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002037:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
1000203c:	99                   	cdq    
1000203d:	f7 fb                	idiv   ebx
1000203f:	8d 14 06             	lea    edx,[esi+eax*1]
10002042:	83 e0 07             	and    eax,0x7
10002045:	c1 fa 03             	sar    edx,0x3
10002048:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
1000204d:	0f a3 c2             	bt     edx,eax
10002050:	72 0e                	jb     10002060 <ssfn_render+0xd55>
10002052:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10002056:	43                   	inc    ebx
10002057:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
1000205e:	eb c0                	jmp    10002020 <ssfn_render+0xd15>
10002060:	31 c0                	xor    eax,eax
10002062:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10002066:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000206a:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002070:	40                   	inc    eax
10002071:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10002075:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10002079:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
1000207d:	7d e3                	jge    10002062 <ssfn_render+0xd57>
1000207f:	eb d1                	jmp    10002052 <ssfn_render+0xd47>
10002081:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002085:	47                   	inc    edi
10002086:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000208a:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000208e:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
10002092:	e9 45 ff ff ff       	jmp    10001fdc <ssfn_render+0xcd1>
10002097:	b3 fe                	mov    bl,0xfe
10002099:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
100020a0:	0f 85 21 03 00 00    	jne    100023c7 <ssfn_render+0x10bc>
100020a6:	31 c0                	xor    eax,eax
100020a8:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020ac:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
100020b1:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100020b5:	0f 95 c0             	setne  al
100020b8:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100020bc:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020c0:	4f                   	dec    edi
100020c1:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100020c5:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
100020cd:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100020d1:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100020d8:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020dc:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020e0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020e4:	31 c0                	xor    eax,eax
100020e6:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020e9:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020ed:	83 c1 04             	add    ecx,0x4
100020f0:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020f4:	0f 8d c0 02 00 00    	jge    100023ba <ssfn_render+0x10af>
100020fa:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100020fe:	8d 77 01             	lea    esi,[edi+0x1]
10002101:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002105:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002109:	4f                   	dec    edi
1000210a:	be 01 00 00 00       	mov    esi,0x1
1000210f:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002113:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002117:	7e 63                	jle    1000217c <ssfn_render+0xe71>
10002119:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000211d:	b9 01 00 00 00       	mov    ecx,0x1
10002122:	89 ca                	mov    edx,ecx
10002124:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002128:	7e 45                	jle    1000216f <ssfn_render+0xe64>
1000212a:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002130:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002135:	75 34                	jne    1000216b <ssfn_render+0xe60>
10002137:	89 c7                	mov    edi,eax
10002139:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000213d:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002141:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002145:	74 0c                	je     10002153 <ssfn_render+0xe48>
10002147:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000214b:	01 d7                	add    edi,edx
1000214d:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002151:	75 18                	jne    1000216b <ssfn_render+0xe60>
10002153:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002157:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
1000215b:	74 06                	je     10002163 <ssfn_render+0xe58>
1000215d:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002161:	75 08                	jne    1000216b <ssfn_render+0xe60>
10002163:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
10002167:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
1000216b:	41                   	inc    ecx
1000216c:	40                   	inc    eax
1000216d:	eb b3                	jmp    10002122 <ssfn_render+0xe17>
1000216f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002173:	46                   	inc    esi
10002174:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
10002178:	b0 01                	mov    al,0x1
1000217a:	eb 97                	jmp    10002113 <ssfn_render+0xe08>
1000217c:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002180:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002184:	bb 01 00 00 00       	mov    ebx,0x1
10002189:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
1000218d:	7e 3d                	jle    100021cc <ssfn_render+0xec1>
1000218f:	b8 01 00 00 00       	mov    eax,0x1
10002194:	89 c2                	mov    edx,eax
10002196:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000219a:	7e 23                	jle    100021bf <ssfn_render+0xeb4>
1000219c:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100021a0:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021a6:	8d 14 07             	lea    edx,[edi+eax*1]
100021a9:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021ae:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100021b2:	75 08                	jne    100021bc <ssfn_render+0xeb1>
100021b4:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100021b8:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
100021bc:	40                   	inc    eax
100021bd:	eb d5                	jmp    10002194 <ssfn_render+0xe89>
100021bf:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100021c3:	43                   	inc    ebx
100021c4:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
100021c8:	b0 01                	mov    al,0x1
100021ca:	eb bd                	jmp    10002189 <ssfn_render+0xe7e>
100021cc:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100021cf:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100021d3:	01 c9                	add    ecx,ecx
100021d5:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
100021d9:	e9 08 ff ff ff       	jmp    100020e6 <ssfn_render+0xddb>
100021de:	b3 fe                	mov    bl,0xfe
100021e0:	80 fa 20             	cmp    dl,0x20
100021e3:	0f 85 de 01 00 00    	jne    100023c7 <ssfn_render+0x10bc>
100021e9:	89 c3                	mov    ebx,eax
100021eb:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021ef:	c1 e3 08             	shl    ebx,0x8
100021f2:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100021f8:	09 c3                	or     ebx,eax
100021fa:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100021fe:	43                   	inc    ebx
100021ff:	40                   	inc    eax
10002200:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002204:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002208:	40                   	inc    eax
10002209:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000220d:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002211:	c1 f8 04             	sar    eax,0x4
10002214:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002218:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000221c:	c1 f8 04             	sar    eax,0x4
1000221f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002223:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002227:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
1000222c:	99                   	cdq    
1000222d:	f7 fe                	idiv   esi
1000222f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002233:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002237:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
1000223c:	99                   	cdq    
1000223d:	f7 fe                	idiv   esi
1000223f:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002243:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002247:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000224d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002251:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002255:	39 d6                	cmp    esi,edx
10002257:	7d 0b                	jge    10002264 <ssfn_render+0xf59>
10002259:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
1000225d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002261:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002264:	83 c1 04             	add    ecx,0x4
10002267:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002272:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002275:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002279:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
1000227d:	72 35                	jb     100022b4 <ssfn_render+0xfa9>
1000227f:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10002283:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002287:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
1000228c:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002290:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002294:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000229b:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
1000229f:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022a7:	31 d2                	xor    edx,edx
100022a9:	31 ff                	xor    edi,edi
100022ab:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022af:	e9 cc 00 00 00       	jmp    10002380 <ssfn_render+0x1075>
100022b4:	8a 11                	mov    dl,BYTE PTR [ecx]
100022b6:	89 d0                	mov    eax,edx
100022b8:	83 e0 7f             	and    eax,0x7f
100022bb:	84 d2                	test   dl,dl
100022bd:	8d 78 01             	lea    edi,[eax+0x1]
100022c0:	78 09                	js     100022cb <ssfn_render+0xfc0>
100022c2:	41                   	inc    ecx
100022c3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100022c7:	89 ca                	mov    edx,ecx
100022c9:	eb 3d                	jmp    10002308 <ssfn_render+0xffd>
100022cb:	48                   	dec    eax
100022cc:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100022d3:	83 f8 fe             	cmp    eax,0xfffffffe
100022d6:	74 16                	je     100022ee <ssfn_render+0xfe3>
100022d8:	8d 5a 01             	lea    ebx,[edx+0x1]
100022db:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022e2:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022e5:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022ec:	eb dd                	jmp    100022cb <ssfn_render+0xfc0>
100022ee:	83 c1 02             	add    ecx,0x2
100022f1:	eb 86                	jmp    10002279 <ssfn_render+0xf6e>
100022f3:	42                   	inc    edx
100022f4:	8d 73 01             	lea    esi,[ebx+0x1]
100022f7:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100022fe:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002301:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002308:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
1000230c:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
10002313:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002318:	75 d9                	jne    100022f3 <ssfn_render+0xfe8>
1000231a:	01 f9                	add    ecx,edi
1000231c:	e9 58 ff ff ff       	jmp    10002279 <ssfn_render+0xf6e>
10002321:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002325:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002329:	99                   	cdq    
1000232a:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
1000232e:	0f af c8             	imul   ecx,eax
10002331:	31 c0                	xor    eax,eax
10002333:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002338:	74 0e                	je     10002348 <ssfn_render+0x103d>
1000233a:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000233e:	bb 04 00 00 00       	mov    ebx,0x4
10002343:	29 f8                	sub    eax,edi
10002345:	99                   	cdq    
10002346:	f7 fb                	idiv   ebx
10002348:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000234c:	31 db                	xor    ebx,ebx
1000234e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002352:	31 f6                	xor    esi,esi
10002354:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
1000235b:	01 c1                	add    ecx,eax
1000235d:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002361:	7f 30                	jg     10002393 <ssfn_render+0x1088>
10002363:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002367:	85 c0                	test   eax,eax
10002369:	79 02                	jns    1000236d <ssfn_render+0x1062>
1000236b:	31 c0                	xor    eax,eax
1000236d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002371:	47                   	inc    edi
10002372:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
10002376:	b2 01                	mov    dl,0x1
10002378:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
1000237c:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002380:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002384:	7c 9b                	jl     10002321 <ssfn_render+0x1016>
10002386:	84 d2                	test   dl,dl
10002388:	74 3b                	je     100023c5 <ssfn_render+0x10ba>
1000238a:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002391:	eb 32                	jmp    100023c5 <ssfn_render+0x10ba>
10002393:	89 d8                	mov    eax,ebx
10002395:	99                   	cdq    
10002396:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000239a:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
100023a1:	3c ff                	cmp    al,0xff
100023a3:	74 0e                	je     100023b3 <ssfn_render+0x10a8>
100023a5:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023a9:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023af:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
100023b3:	46                   	inc    esi
100023b4:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
100023b8:	eb a3                	jmp    1000235d <ssfn_render+0x1052>
100023ba:	84 c0                	test   al,al
100023bc:	74 07                	je     100023c5 <ssfn_render+0x10ba>
100023be:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
100023c5:	b3 fe                	mov    bl,0xfe
100023c7:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
100023cb:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
100023cf:	e9 9f f5 ff ff       	jmp    10001973 <ssfn_render+0x668>
100023d4:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100023da:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023dd:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023e0:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023e3:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023e9:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023ed:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023f1:	89 f0                	mov    eax,esi
100023f3:	89 d9                	mov    ecx,ebx
100023f5:	43                   	inc    ebx
100023f6:	39 de                	cmp    esi,ebx
100023f8:	7e 08                	jle    10002402 <ssfn_render+0x10f7>
100023fa:	48                   	dec    eax
100023fb:	29 c8                	sub    eax,ecx
100023fd:	88 42 07             	mov    BYTE PTR [edx+0x7],al
10002400:	eb 04                	jmp    10002406 <ssfn_render+0x10fb>
10002402:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
10002406:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
1000240e:	0f 84 c9 0c 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002414:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
1000241a:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002420:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002424:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
10002427:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000242b:	0f ba e0 0c          	bt     eax,0xc
1000242f:	72 22                	jb     10002453 <ssfn_render+0x1148>
10002431:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002434:	83 e0 0f             	and    eax,0xf
10002437:	3c 03                	cmp    al,0x3
10002439:	74 18                	je     10002453 <ssfn_render+0x1148>
1000243b:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
1000243f:	84 c9                	test   cl,cl
10002441:	74 10                	je     10002453 <ssfn_render+0x1148>
10002443:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
10002447:	0f af d7             	imul   edx,edi
1000244a:	89 d0                	mov    eax,edx
1000244c:	99                   	cdq    
1000244d:	f7 f9                	idiv   ecx
1000244f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002453:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002457:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
1000245d:	7d 06                	jge    10002465 <ssfn_render+0x115a>
1000245f:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002465:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
1000246b:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
1000246f:	0f b7 13             	movzx  edx,WORD PTR [ebx]
10002472:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002477:	89 d0                	mov    eax,edx
10002479:	99                   	cdq    
1000247a:	f7 f9                	idiv   ecx
1000247c:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002480:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002484:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
10002487:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000248b:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
1000248f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002493:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
10002498:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000249c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024a1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024a5:	99                   	cdq    
100024a6:	f7 f9                	idiv   ecx
100024a8:	31 d2                	xor    edx,edx
100024aa:	83 ff 10             	cmp    edi,0x10
100024ad:	0f 9f c2             	setg   dl
100024b0:	42                   	inc    edx
100024b1:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
100024b5:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
100024b9:	7d 08                	jge    100024c3 <ssfn_render+0x11b8>
100024bb:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100024bf:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100024c3:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
100024c7:	39 c2                	cmp    edx,eax
100024c9:	7d 04                	jge    100024cf <ssfn_render+0x11c4>
100024cb:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024cf:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
100024d4:	74 4c                	je     10002522 <ssfn_render+0x1217>
100024d6:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100024da:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024df:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024e3:	99                   	cdq    
100024e4:	f7 f9                	idiv   ecx
100024e6:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024ea:	81 e2 00 08 00 00    	and    edx,0x800
100024f0:	74 04                	je     100024f6 <ssfn_render+0x11eb>
100024f2:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024f6:	01 d0                	add    eax,edx
100024f8:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024fe:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002502:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002506:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
1000250a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000250f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002513:	99                   	cdq    
10002514:	f7 f9                	idiv   ecx
10002516:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000251a:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002520:	eb 22                	jmp    10002544 <ssfn_render+0x1239>
10002522:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002526:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002530:	d1 f8                	sar    eax,1
10002532:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
1000253a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000253e:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002544:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000254b:	8b 18                	mov    ebx,DWORD PTR [eax]
1000254d:	85 db                	test   ebx,ebx
1000254f:	0f 84 2e 09 00 00    	je     10002e83 <ssfn_render+0x1b78>
10002555:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
10002559:	89 d1                	mov    ecx,edx
1000255b:	89 d0                	mov    eax,edx
1000255d:	66 c1 f9 0b          	sar    cx,0xb
10002561:	c1 f8 1f             	sar    eax,0x1f
10002564:	31 c2                	xor    edx,eax
10002566:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
1000256a:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
1000256e:	88 c8                	mov    al,cl
10002570:	83 e0 10             	and    eax,0x10
10002573:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
10002577:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000257b:	83 c0 40             	add    eax,0x40
1000257e:	c1 f8 06             	sar    eax,0x6
10002581:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
10002588:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000258c:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002590:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002594:	7d 08                	jge    1000259e <ssfn_render+0x1293>
10002596:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000259a:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
1000259e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100025a1:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025a9:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025ad:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
100025b5:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
100025b9:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100025be:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100025c2:	99                   	cdq    
100025c3:	f7 f9                	idiv   ecx
100025c5:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100025c9:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025d0:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025d3:	0f b6 f4             	movzx  esi,ah
100025d6:	89 c2                	mov    edx,eax
100025d8:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025dc:	c1 ea 10             	shr    edx,0x10
100025df:	0f b6 fa             	movzx  edi,dl
100025e2:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025e6:	0f b6 f8             	movzx  edi,al
100025e9:	c1 e8 18             	shr    eax,0x18
100025ec:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025f0:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025f4:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025fb:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100025fe:	0f b6 fc             	movzx  edi,ah
10002601:	89 c2                	mov    edx,eax
10002603:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000260a:	c1 ea 10             	shr    edx,0x10
1000260d:	0f b6 c0             	movzx  eax,al
10002610:	0f b6 f2             	movzx  esi,dl
10002613:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000261a:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002621:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002625:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000262c:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002633:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002637:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000263b:	0f af c2             	imul   eax,edx
1000263e:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002642:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002646:	8d 04 90             	lea    eax,[eax+edx*4]
10002649:	01 d8                	add    eax,ebx
1000264b:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
10002652:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10002656:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
1000265d:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002662:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
10002669:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000266d:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002671:	0f 8d e2 04 00 00    	jge    10002b59 <ssfn_render+0x184e>
10002677:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000267e:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002685:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002689:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
1000268d:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002691:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002695:	39 d0                	cmp    eax,edx
10002697:	0f 8d bc 04 00 00    	jge    10002b59 <ssfn_render+0x184e>
1000269d:	85 c0                	test   eax,eax
1000269f:	0f 88 94 04 00 00    	js     10002b39 <ssfn_render+0x182e>
100026a5:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026ab:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026af:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100026b3:	c1 e1 08             	shl    ecx,0x8
100026b6:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100026be:	89 c8                	mov    eax,ecx
100026c0:	0f af c3             	imul   eax,ebx
100026c3:	99                   	cdq    
100026c4:	f7 fe                	idiv   esi
100026c6:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100026cd:	c1 f8 08             	sar    eax,0x8
100026d0:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
100026d7:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026dd:	0f af c3             	imul   eax,ebx
100026e0:	99                   	cdq    
100026e1:	f7 fe                	idiv   esi
100026e3:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026e7:	c1 f8 08             	sar    eax,0x8
100026ea:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026f1:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026f5:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100026fc:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
10002703:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000270a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
1000270e:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002712:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002716:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000271a:	0f 8d 19 04 00 00    	jge    10002b39 <ssfn_render+0x182e>
10002720:	85 c0                	test   eax,eax
10002722:	0f 88 ff 03 00 00    	js     10002b27 <ssfn_render+0x181c>
10002728:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000272f:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002733:	75 42                	jne    10002777 <ssfn_render+0x146c>
10002735:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002739:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002740:	b9 10 00 00 00       	mov    ecx,0x10
10002745:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002748:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
1000274f:	89 c2                	mov    edx,eax
10002751:	0f b6 fc             	movzx  edi,ah
10002754:	d3 ea                	shr    edx,cl
10002756:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000275d:	0f b6 f2             	movzx  esi,dl
10002760:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002764:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000276b:	d3 e8                	shr    eax,cl
1000276d:	0f b6 c0             	movzx  eax,al
10002770:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002777:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000277d:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002781:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002784:	c1 e1 08             	shl    ecx,0x8
10002787:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
1000278b:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10002793:	89 c8                	mov    eax,ecx
10002795:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
1000279d:	0f af c3             	imul   eax,ebx
100027a0:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027a8:	99                   	cdq    
100027a9:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
100027b1:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027b5:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100027bd:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
100027c4:	c1 f8 08             	sar    eax,0x8
100027c7:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100027ce:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100027d4:	0f af c3             	imul   eax,ebx
100027d7:	99                   	cdq    
100027d8:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027dc:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027e0:	c1 f8 08             	sar    eax,0x8
100027e3:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027ea:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027f1:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027f5:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100027f9:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100027fd:	0f 8d 3b 02 00 00    	jge    10002a3e <ssfn_render+0x1733>
10002803:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10002807:	c1 fa 08             	sar    edx,0x8
1000280a:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002811:	75 25                	jne    10002838 <ssfn_render+0x152d>
10002813:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002818:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
1000281f:	b8 00 01 00 00       	mov    eax,0x100
10002824:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
1000282c:	29 c8                	sub    eax,ecx
1000282e:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002832:	39 c7                	cmp    edi,eax
10002834:	7e 1c                	jle    10002852 <ssfn_render+0x1547>
10002836:	eb 16                	jmp    1000284e <ssfn_render+0x1543>
10002838:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002840:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
10002847:	75 09                	jne    10002852 <ssfn_render+0x1547>
10002849:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
1000284e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002852:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10002856:	0f b7 00             	movzx  eax,WORD PTR [eax]
10002859:	0f af c2             	imul   eax,edx
1000285c:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
10002863:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
10002868:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
1000286d:	c1 f8 08             	sar    eax,0x8
10002870:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
10002877:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
1000287e:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002882:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
10002886:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
1000288a:	0f 8d a1 01 00 00    	jge    10002a31 <ssfn_render+0x1726>
10002890:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002894:	c1 f8 08             	sar    eax,0x8
10002897:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
1000289e:	75 3b                	jne    100028db <ssfn_render+0x15d0>
100028a0:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028a5:	ba 00 01 00 00       	mov    edx,0x100
100028aa:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
100028b2:	29 ca                	sub    edx,ecx
100028b4:	89 f1                	mov    ecx,esi
100028b6:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
100028bd:	39 d1                	cmp    ecx,edx
100028bf:	7c 0e                	jl     100028cf <ssfn_render+0x15c4>
100028c1:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028c5:	81 fa 00 01 00 00    	cmp    edx,0x100
100028cb:	74 22                	je     100028ef <ssfn_render+0x15e4>
100028cd:	89 d1                	mov    ecx,edx
100028cf:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
100028d4:	89 cf                	mov    edi,ecx
100028d6:	c1 ff 08             	sar    edi,0x8
100028d9:	eb 14                	jmp    100028ef <ssfn_render+0x15e4>
100028db:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028e2:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028e9:	74 04                	je     100028ef <ssfn_render+0x15e4>
100028eb:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028ef:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028f3:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028f7:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100028fe:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
10002903:	81 fa ff 00 00 00    	cmp    edx,0xff
10002909:	75 37                	jne    10002942 <ssfn_render+0x1637>
1000290b:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
10002912:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
1000291a:	0f af c7             	imul   eax,edi
1000291d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002921:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002928:	0f af c7             	imul   eax,edi
1000292b:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
1000292f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10002936:	0f af c7             	imul   eax,edi
10002939:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
1000293d:	e9 e2 00 00 00       	jmp    10002a24 <ssfn_render+0x1719>
10002942:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002948:	74 2d                	je     10002977 <ssfn_render+0x166c>
1000294a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000294d:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002950:	85 c9                	test   ecx,ecx
10002952:	74 23                	je     10002977 <ssfn_render+0x166c>
10002954:	01 c8                	add    eax,ecx
10002956:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
10002959:	89 d9                	mov    ecx,ebx
1000295b:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
10002962:	c1 e9 10             	shr    ecx,0x10
10002965:	0f b6 f7             	movzx  esi,bh
10002968:	0f b6 c1             	movzx  eax,cl
1000296b:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000296f:	0f b6 c3             	movzx  eax,bl
10002972:	c1 eb 18             	shr    ebx,0x18
10002975:	eb 14                	jmp    1000298b <ssfn_render+0x1680>
10002977:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000297b:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000297f:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002983:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
10002987:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000298b:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002991:	75 25                	jne    100029b8 <ssfn_render+0x16ad>
10002993:	0f af c7             	imul   eax,edi
10002996:	0f af f7             	imul   esi,edi
10002999:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
1000299d:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029a1:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029a7:	0f af cf             	imul   ecx,edi
100029aa:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029ae:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
100029b2:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
100029b6:	eb 6c                	jmp    10002a24 <ssfn_render+0x1719>
100029b8:	0f af f3             	imul   esi,ebx
100029bb:	0f af c3             	imul   eax,ebx
100029be:	b9 ff 00 00 00       	mov    ecx,0xff
100029c3:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
100029ca:	29 d9                	sub    ecx,ebx
100029cc:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100029d0:	0f af d1             	imul   edx,ecx
100029d3:	b9 ff 00 00 00       	mov    ecx,0xff
100029d8:	01 d0                	add    eax,edx
100029da:	0f af c7             	imul   eax,edi
100029dd:	99                   	cdq    
100029de:	f7 f9                	idiv   ecx
100029e0:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029e4:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029e8:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029f0:	01 f0                	add    eax,esi
100029f2:	89 ce                	mov    esi,ecx
100029f4:	0f af c7             	imul   eax,edi
100029f7:	99                   	cdq    
100029f8:	f7 f9                	idiv   ecx
100029fa:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029fe:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002a02:	0f af cb             	imul   ecx,ebx
10002a05:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a09:	0f af df             	imul   ebx,edi
10002a0c:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a14:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a18:	01 c8                	add    eax,ecx
10002a1a:	0f af c7             	imul   eax,edi
10002a1d:	99                   	cdq    
10002a1e:	f7 fe                	idiv   esi
10002a20:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a24:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a2c:	e9 51 fe ff ff       	jmp    10002882 <ssfn_render+0x1577>
10002a31:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a39:	e9 b7 fd ff ff       	jmp    100027f5 <ssfn_render+0x14ea>
10002a3e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a43:	74 30                	je     10002a75 <ssfn_render+0x176a>
10002a45:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a49:	31 d2                	xor    edx,edx
10002a4b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a4f:	31 d2                	xor    edx,edx
10002a51:	89 c1                	mov    ecx,eax
10002a53:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a57:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a5b:	31 d2                	xor    edx,edx
10002a5d:	89 c6                	mov    esi,eax
10002a5f:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a63:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a67:	31 d2                	xor    edx,edx
10002a69:	89 c3                	mov    ebx,eax
10002a6b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a6f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a73:	eb 1c                	jmp    10002a91 <ssfn_render+0x1786>
10002a75:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a79:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a7d:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a81:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a85:	c1 e9 08             	shr    ecx,0x8
10002a88:	c1 ee 08             	shr    esi,0x8
10002a8b:	c1 eb 08             	shr    ebx,0x8
10002a8e:	c1 e8 08             	shr    eax,0x8
10002a91:	83 f8 0f             	cmp    eax,0xf
10002a94:	0f 86 8d 00 00 00    	jbe    10002b27 <ssfn_render+0x181c>
10002a9a:	89 ca                	mov    edx,ecx
10002a9c:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002aa2:	76 05                	jbe    10002aa9 <ssfn_render+0x179e>
10002aa4:	ba ff 00 00 00       	mov    edx,0xff
10002aa9:	b9 10 00 00 00       	mov    ecx,0x10
10002aae:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002ab5:	d3 e2                	shl    edx,cl
10002ab7:	3d ff 00 00 00       	cmp    eax,0xff
10002abc:	89 d1                	mov    ecx,edx
10002abe:	76 05                	jbe    10002ac5 <ssfn_render+0x17ba>
10002ac0:	b8 ff 00 00 00       	mov    eax,0xff
10002ac5:	c1 e0 18             	shl    eax,0x18
10002ac8:	09 c8                	or     eax,ecx
10002aca:	81 fe ff 00 00 00    	cmp    esi,0xff
10002ad0:	76 05                	jbe    10002ad7 <ssfn_render+0x17cc>
10002ad2:	be ff 00 00 00       	mov    esi,0xff
10002ad7:	c1 e6 08             	shl    esi,0x8
10002ada:	09 f0                	or     eax,esi
10002adc:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002ae2:	76 05                	jbe    10002ae9 <ssfn_render+0x17de>
10002ae4:	bb ff 00 00 00       	mov    ebx,0xff
10002ae9:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002aed:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002af1:	d3 e3                	shl    ebx,cl
10002af3:	09 c3                	or     ebx,eax
10002af5:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002afc:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002aff:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002b03:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b07:	75 1e                	jne    10002b27 <ssfn_render+0x181c>
10002b09:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b10:	7e 07                	jle    10002b19 <ssfn_render+0x180e>
10002b12:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b19:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b1d:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b21:	7d 04                	jge    10002b27 <ssfn_render+0x181c>
10002b23:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b27:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b2b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b2f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b33:	0f 85 ca fb ff ff    	jne    10002703 <ssfn_render+0x13f8>
10002b39:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b40:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b44:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b48:	25 fc ff 00 00       	and    eax,0xfffc
10002b4d:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b54:	e9 10 fb ff ff       	jmp    10002669 <ssfn_render+0x135e>
10002b59:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b60:	0f 84 90 01 00 00    	je     10002cf6 <ssfn_render+0x19eb>
10002b66:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b6e:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b75:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b79:	40                   	inc    eax
10002b7a:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b7e:	29 c7                	sub    edi,eax
10002b80:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b84:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b88:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b8c:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b90:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b94:	7e 09                	jle    10002b9f <ssfn_render+0x1894>
10002b96:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002b9a:	40                   	inc    eax
10002b9b:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b9f:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002ba6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bad:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002bb1:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bb5:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bb9:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bbd:	0f af c2             	imul   eax,edx
10002bc0:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002bc4:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002bc8:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002bcc:	03 07                	add    eax,DWORD PTR [edi]
10002bce:	89 c7                	mov    edi,eax
10002bd0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002bd4:	c1 e0 18             	shl    eax,0x18
10002bd7:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002bdb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002bdf:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002be3:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002be8:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002bec:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002bf0:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bf4:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002bf8:	0f 8e f8 00 00 00    	jle    10002cf6 <ssfn_render+0x19eb>
10002bfe:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c05:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c0c:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c10:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c14:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c18:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c1c:	39 d0                	cmp    eax,edx
10002c1e:	0f 8d d2 00 00 00    	jge    10002cf6 <ssfn_render+0x19eb>
10002c24:	31 db                	xor    ebx,ebx
10002c26:	85 c0                	test   eax,eax
10002c28:	79 23                	jns    10002c4d <ssfn_render+0x1942>
10002c2a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c31:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c35:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c39:	25 fc ff 00 00       	and    eax,0xfffc
10002c3e:	01 c7                	add    edi,eax
10002c40:	eb aa                	jmp    10002bec <ssfn_render+0x18e1>
10002c42:	85 c0                	test   eax,eax
10002c44:	79 20                	jns    10002c66 <ssfn_render+0x195b>
10002c46:	43                   	inc    ebx
10002c47:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c4b:	7c dd                	jl     10002c2a <ssfn_render+0x191f>
10002c4d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c54:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c58:	01 d8                	add    eax,ebx
10002c5a:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c5e:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c62:	7c de                	jl     10002c42 <ssfn_render+0x1937>
10002c64:	eb c4                	jmp    10002c2a <ssfn_render+0x191f>
10002c66:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c6a:	7e 06                	jle    10002c72 <ssfn_render+0x1967>
10002c6c:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c70:	7f d4                	jg     10002c46 <ssfn_render+0x193b>
10002c72:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c75:	b8 10 00 00 00       	mov    eax,0x10
10002c7a:	0f b6 f6             	movzx  esi,dh
10002c7d:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c81:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c85:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c89:	89 d0                	mov    eax,edx
10002c8b:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c8f:	d3 e8                	shr    eax,cl
10002c91:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c95:	0f b6 c0             	movzx  eax,al
10002c98:	d3 ea                	shr    edx,cl
10002c9a:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002c9e:	0f b6 f2             	movzx  esi,dl
10002ca1:	29 c1                	sub    ecx,eax
10002ca3:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002ca7:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cac:	29 f2                	sub    edx,esi
10002cae:	c1 f9 08             	sar    ecx,0x8
10002cb1:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cb6:	01 c8                	add    eax,ecx
10002cb8:	c1 fa 08             	sar    edx,0x8
10002cbb:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cbf:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002cc3:	d3 e0                	shl    eax,cl
10002cc5:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cc9:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002ccd:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002cd1:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cd5:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cda:	d3 e6                	shl    esi,cl
10002cdc:	c1 fa 08             	sar    edx,0x8
10002cdf:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002ce3:	c1 e2 08             	shl    edx,0x8
10002ce6:	09 d0                	or     eax,edx
10002ce8:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002cec:	09 c6                	or     esi,eax
10002cee:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002cf1:	e9 50 ff ff ff       	jmp    10002c46 <ssfn_render+0x193b>
10002cf6:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002cfd:	0f 84 80 01 00 00    	je     10002e83 <ssfn_render+0x1b78>
10002d03:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d07:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d0b:	d1 fa                	sar    edx,1
10002d0d:	40                   	inc    eax
10002d0e:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d12:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d16:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d1a:	7e 09                	jle    10002d25 <ssfn_render+0x1a1a>
10002d1c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d20:	40                   	inc    eax
10002d21:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d25:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d2c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d33:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d37:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d3b:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d3f:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d43:	01 d0                	add    eax,edx
10002d45:	0f af c1             	imul   eax,ecx
10002d48:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d4c:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d50:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d54:	03 03                	add    eax,DWORD PTR [ebx]
10002d56:	89 c7                	mov    edi,eax
10002d58:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d5c:	c1 e0 18             	shl    eax,0x18
10002d5f:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d63:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d6b:	01 d0                	add    eax,edx
10002d6d:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d71:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d76:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d7a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d7e:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d82:	0f 8e fb 00 00 00    	jle    10002e83 <ssfn_render+0x1b78>
10002d88:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d8f:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d93:	01 d8                	add    eax,ebx
10002d95:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d9c:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002da0:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002da4:	39 d0                	cmp    eax,edx
10002da6:	0f 8d d7 00 00 00    	jge    10002e83 <ssfn_render+0x1b78>
10002dac:	31 f6                	xor    esi,esi
10002dae:	85 c0                	test   eax,eax
10002db0:	0f 89 ad 00 00 00    	jns    10002e63 <ssfn_render+0x1b58>
10002db6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002dbd:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002dc1:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002dc5:	25 fc ff 00 00       	and    eax,0xfffc
10002dca:	01 c7                	add    edi,eax
10002dcc:	eb ac                	jmp    10002d7a <ssfn_render+0x1a6f>
10002dce:	85 c0                	test   eax,eax
10002dd0:	0f 88 82 00 00 00    	js     10002e58 <ssfn_render+0x1b4d>
10002dd6:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002dd9:	b8 10 00 00 00       	mov    eax,0x10
10002dde:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002de2:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002de6:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002dea:	89 d8                	mov    eax,ebx
10002dec:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002df0:	d3 e8                	shr    eax,cl
10002df2:	0f b6 cf             	movzx  ecx,bh
10002df5:	0f b6 c0             	movzx  eax,al
10002df8:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002dfc:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e00:	d3 eb                	shr    ebx,cl
10002e02:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e06:	0f b6 db             	movzx  ebx,bl
10002e09:	29 c1                	sub    ecx,eax
10002e0b:	29 da                	sub    edx,ebx
10002e0d:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e12:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e17:	c1 f9 08             	sar    ecx,0x8
10002e1a:	c1 fa 08             	sar    edx,0x8
10002e1d:	01 c8                	add    eax,ecx
10002e1f:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e23:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e27:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e2b:	d3 e0                	shl    eax,cl
10002e2d:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e31:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e35:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e3a:	c1 fa 08             	sar    edx,0x8
10002e3d:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e41:	c1 e2 08             	shl    edx,0x8
10002e44:	09 d0                	or     eax,edx
10002e46:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e49:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e4d:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e51:	d3 e2                	shl    edx,cl
10002e53:	09 c2                	or     edx,eax
10002e55:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e58:	46                   	inc    esi
10002e59:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e5d:	0f 8c 53 ff ff ff    	jl     10002db6 <ssfn_render+0x1aab>
10002e63:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e6a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e6e:	01 f0                	add    eax,esi
10002e70:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e74:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e78:	0f 8c 50 ff ff ff    	jl     10002dce <ssfn_render+0x1ac3>
10002e7e:	e9 33 ff ff ff       	jmp    10002db6 <ssfn_render+0x1aab>
10002e83:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e8a:	74 04                	je     10002e90 <ssfn_render+0x1b85>
10002e8c:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e90:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e94:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002e98:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002e9e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ea5:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002ea9:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002eb0:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002eb3:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002eb7:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002ebd:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002ec1:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002ec6:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002eca:	99                   	cdq    
10002ecb:	f7 f9                	idiv   ecx
10002ecd:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002ed1:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002ed7:	25 80 00 00 00       	and    eax,0x80
10002edc:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002ee0:	0f 85 f7 01 00 00    	jne    100030dd <ssfn_render+0x1dd2>
10002ee6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ee9:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002eed:	0f 84 ea 01 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002ef3:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002efa:	83 ec 0c             	sub    esp,0xc
10002efd:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f04:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f0b:	51                   	push   ecx
10002f0c:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f13:	e8 53 d9 ff ff       	call   1000086b <_ssfn_c>
10002f18:	83 c4 10             	add    esp,0x10
10002f1b:	85 c0                	test   eax,eax
10002f1d:	0f 84 ba 01 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002f23:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f2b:	0f 86 ac 01 00 00    	jbe    100030dd <ssfn_render+0x1dd2>
10002f31:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f37:	8d 48 06             	lea    ecx,[eax+0x6]
10002f3a:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f40:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f44:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f48:	0f 8e 8f 01 00 00    	jle    100030dd <ssfn_render+0x1dd2>
10002f4e:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f50:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f54:	8a 18                	mov    bl,BYTE PTR [eax]
10002f56:	83 e3 40             	and    ebx,0x40
10002f59:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f5e:	75 14                	jne    10002f74 <ssfn_render+0x1c69>
10002f60:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f64:	75 0e                	jne    10002f74 <ssfn_render+0x1c69>
10002f66:	80 fb 01             	cmp    bl,0x1
10002f69:	19 c0                	sbb    eax,eax
10002f6b:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f6f:	e9 60 01 00 00       	jmp    100030d4 <ssfn_render+0x1dc9>
10002f74:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f78:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f7c:	c1 e6 10             	shl    esi,0x10
10002f7f:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f83:	84 db                	test   bl,bl
10002f85:	74 08                	je     10002f8f <ssfn_render+0x1c84>
10002f87:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f8a:	83 c1 06             	add    ecx,0x6
10002f8d:	eb 0c                	jmp    10002f9b <ssfn_render+0x1c90>
10002f8f:	c1 e2 08             	shl    edx,0x8
10002f92:	83 c1 05             	add    ecx,0x5
10002f95:	89 d0                	mov    eax,edx
10002f97:	09 f0                	or     eax,esi
10002f99:	09 c7                	or     edi,eax
10002f9b:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f9e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002fa2:	01 f8                	add    eax,edi
10002fa4:	8a 10                	mov    dl,BYTE PTR [eax]
10002fa6:	88 d3                	mov    bl,dl
10002fa8:	83 e3 e0             	and    ebx,0xffffffe0
10002fab:	80 fb c0             	cmp    bl,0xc0
10002fae:	0f 85 20 01 00 00    	jne    100030d4 <ssfn_render+0x1dc9>
10002fb4:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002fb8:	c1 e2 08             	shl    edx,0x8
10002fbb:	83 c0 02             	add    eax,0x2
10002fbe:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002fc4:	09 da                	or     edx,ebx
10002fc6:	8d 72 01             	lea    esi,[edx+0x1]
10002fc9:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002fcd:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002fd4:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002fd8:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fdd:	0f 84 f1 00 00 00    	je     100030d4 <ssfn_render+0x1dc9>
10002fe3:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fe7:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002fea:	c1 e3 10             	shl    ebx,0x10
10002fed:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002ff3:	09 d3                	or     ebx,edx
10002ff5:	39 de                	cmp    esi,ebx
10002ff7:	0f 82 cf 00 00 00    	jb     100030cc <ssfn_render+0x1dc1>
10002ffd:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10003000:	89 d7                	mov    edi,edx
10003002:	c1 e7 10             	shl    edi,0x10
10003005:	81 e7 00 00 0f 00    	and    edi,0xf0000
1000300b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000300f:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10003013:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10003017:	39 fe                	cmp    esi,edi
10003019:	0f 87 ad 00 00 00    	ja     100030cc <ssfn_render+0x1dc1>
1000301f:	29 de                	sub    esi,ebx
10003021:	c0 ea 04             	shr    dl,0x4
10003024:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
1000302b:	0f b6 d2             	movzx  edx,dl
1000302e:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10003032:	89 d3                	mov    ebx,edx
10003034:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003038:	c1 e3 10             	shl    ebx,0x10
1000303b:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
1000303e:	09 da                	or     edx,ebx
10003040:	c0 e8 04             	shr    al,0x4
10003043:	c1 e0 18             	shl    eax,0x18
10003046:	09 c2                	or     edx,eax
10003048:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000304c:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
1000304f:	01 c2                	add    edx,eax
10003051:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003054:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10003058:	39 d7                	cmp    edi,edx
1000305a:	76 78                	jbe    100030d4 <ssfn_render+0x1dc9>
1000305c:	8a 1a                	mov    bl,BYTE PTR [edx]
1000305e:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10003065:	89 de                	mov    esi,ebx
10003067:	83 e6 7f             	and    esi,0x7f
1000306a:	39 c6                	cmp    esi,eax
1000306c:	73 1d                	jae    1000308b <ssfn_render+0x1d80>
1000306e:	48                   	dec    eax
1000306f:	bb 02 00 00 00       	mov    ebx,0x2
10003074:	29 f0                	sub    eax,esi
10003076:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
1000307d:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10003080:	84 c0                	test   al,al
10003082:	78 03                	js     10003087 <ssfn_render+0x1d7c>
10003084:	8d 58 02             	lea    ebx,[eax+0x2]
10003087:	01 da                	add    edx,ebx
10003089:	eb cd                	jmp    10003058 <ssfn_render+0x1d4d>
1000308b:	be 01 00 00 00       	mov    esi,0x1
10003090:	84 db                	test   bl,bl
10003092:	78 03                	js     10003097 <ssfn_render+0x1d8c>
10003094:	8d 70 01             	lea    esi,[eax+0x1]
10003097:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
1000309b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000309f:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030a4:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030a8:	99                   	cdq    
100030a9:	f7 fb                	idiv   ebx
100030ab:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
100030b0:	74 0d                	je     100030bf <ssfn_render+0x1db4>
100030b2:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100030b9:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
100030bd:	eb 15                	jmp    100030d4 <ssfn_render+0x1dc9>
100030bf:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
100030c6:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
100030ca:	eb 08                	jmp    100030d4 <ssfn_render+0x1dc9>
100030cc:	83 c0 08             	add    eax,0x8
100030cf:	e9 00 ff ff ff       	jmp    10002fd4 <ssfn_render+0x1cc9>
100030d4:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100030d8:	e9 5d fe ff ff       	jmp    10002f3a <ssfn_render+0x1c2f>
100030dd:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030e4:	eb 73                	jmp    10003159 <ssfn_render+0x1e4e>
100030e6:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030f1:	e9 50 e4 ff ff       	jmp    10001546 <ssfn_render+0x23b>
100030f6:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030fd:	57                   	push   edi
100030fe:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003105:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000310c:	e8 5a d7 ff ff       	call   1000086b <_ssfn_c>
10003111:	5f                   	pop    edi
10003112:	85 c0                	test   eax,eax
10003114:	0f 84 25 e4 ff ff    	je     1000153f <ssfn_render+0x234>
1000311a:	e9 a2 e4 ff ff       	jmp    100015c1 <ssfn_render+0x2b6>
1000311f:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003122:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10003126:	75 0c                	jne    10003134 <ssfn_render+0x1e29>
10003128:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000312f:	e9 3b e4 ff ff       	jmp    1000156f <ssfn_render+0x264>
10003134:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000313b:	57                   	push   edi
1000313c:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003143:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000314a:	e8 1c d7 ff ff       	call   1000086b <_ssfn_c>
1000314f:	59                   	pop    ecx
10003150:	85 c0                	test   eax,eax
10003152:	74 d4                	je     10003128 <ssfn_render+0x1e1d>
10003154:	e9 68 e4 ff ff       	jmp    100015c1 <ssfn_render+0x2b6>
10003159:	81 c4 dc 05 01 00    	add    esp,0x105dc
1000315f:	89 c8                	mov    eax,ecx
10003161:	5b                   	pop    ebx
10003162:	5e                   	pop    esi
10003163:	5f                   	pop    edi
10003164:	5d                   	pop    ebp
10003165:	c3                   	ret    

10003166 <ssfn_bbox>:
10003166:	55                   	push   ebp
10003167:	57                   	push   edi
10003168:	56                   	push   esi
10003169:	53                   	push   ebx
1000316a:	83 ec 3c             	sub    esp,0x3c
1000316d:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
10003172:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10003176:	0f 94 c0             	sete   al
10003179:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
1000317e:	0f 94 c2             	sete   dl
10003181:	09 d0                	or     eax,edx
10003183:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
10003188:	0f 94 c2             	sete   dl
1000318b:	09 d0                	or     eax,edx
1000318d:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
10003192:	0f 94 c2             	sete   dl
10003195:	09 d0                	or     eax,edx
10003197:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
1000319c:	0f 94 c2             	sete   dl
1000319f:	08 d0                	or     al,dl
100031a1:	0f 85 7c 01 00 00    	jne    10003323 <ssfn_bbox+0x1bd>
100031a7:	85 db                	test   ebx,ebx
100031a9:	0f 84 74 01 00 00    	je     10003323 <ssfn_bbox+0x1bd>
100031af:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031b3:	31 f6                	xor    esi,esi
100031b5:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031bb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031bf:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c5:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100031c9:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031cf:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100031d3:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031d9:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031dd:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031e0:	0f 84 42 01 00 00    	je     10003328 <ssfn_bbox+0x1c2>
100031e6:	8d 54 24 18          	lea    edx,[esp+0x18]
100031ea:	b9 06 00 00 00       	mov    ecx,0x6
100031ef:	89 d7                	mov    edi,edx
100031f1:	89 f0                	mov    eax,esi
100031f3:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100031fd:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100031ff:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10003207:	31 ff                	xor    edi,edi
10003209:	bd 01 00 00 00       	mov    ebp,0x1
1000320e:	50                   	push   eax
1000320f:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003213:	8d 44 24 20          	lea    eax,[esp+0x20]
10003217:	50                   	push   eax
10003218:	53                   	push   ebx
10003219:	e8 fc ff ff ff       	call   1000321a <ssfn_bbox+0xb4>	1000321a: R_386_PC32	ssfn_render
1000321e:	83 c4 10             	add    esp,0x10
10003221:	89 c6                	mov    esi,eax
10003223:	85 c0                	test   eax,eax
10003225:	74 6f                	je     10003296 <ssfn_bbox+0x130>
10003227:	0f 88 fb 00 00 00    	js     10003328 <ssfn_bbox+0x1c2>
1000322d:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003233:	85 c0                	test   eax,eax
10003235:	0f 84 ed 00 00 00    	je     10003328 <ssfn_bbox+0x1c2>
1000323b:	85 ed                	test   ebp,ebp
1000323d:	74 0b                	je     1000324a <ssfn_bbox+0xe4>
1000323f:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003245:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000324a:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000324e:	74 12                	je     10003262 <ssfn_bbox+0xfc>
10003250:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
10003256:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000325a:	7d 2f                	jge    1000328b <ssfn_bbox+0x125>
1000325c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003260:	eb 29                	jmp    1000328b <ssfn_bbox+0x125>
10003262:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003265:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
1000326a:	39 cd                	cmp    ebp,ecx
1000326c:	7d 05                	jge    10003273 <ssfn_bbox+0x10d>
1000326e:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
10003273:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
10003277:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
1000327c:	84 d2                	test   dl,dl
1000327e:	75 04                	jne    10003284 <ssfn_bbox+0x11e>
10003280:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003284:	01 ca                	add    edx,ecx
10003286:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
1000328b:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000328f:	31 ed                	xor    ebp,ebp
10003291:	e9 78 ff ff ff       	jmp    1000320e <ssfn_bbox+0xa8>
10003296:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
1000329d:	74 23                	je     100032c2 <ssfn_bbox+0x15c>
1000329f:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100032a2:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032a6:	75 1a                	jne    100032c2 <ssfn_bbox+0x15c>
100032a8:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032ae:	b9 04 00 00 00       	mov    ecx,0x4
100032b3:	99                   	cdq    
100032b4:	f7 f9                	idiv   ecx
100032b6:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
100032bb:	29 f8                	sub    eax,edi
100032bd:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
100032c2:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100032c8:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100032cc:	74 29                	je     100032f7 <ssfn_bbox+0x191>
100032ce:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100032d3:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100032d7:	89 01                	mov    DWORD PTR [ecx],eax
100032d9:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032dd:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032e3:	89 01                	mov    DWORD PTR [ecx],eax
100032e5:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032e9:	89 38                	mov    DWORD PTR [eax],edi
100032eb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032ef:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032f3:	89 38                	mov    DWORD PTR [eax],edi
100032f5:	eb 31                	jmp    10003328 <ssfn_bbox+0x1c2>
100032f7:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100032fc:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003300:	89 07                	mov    DWORD PTR [edi],eax
10003302:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003307:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
1000330b:	89 07                	mov    DWORD PTR [edi],eax
1000330d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003311:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003317:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000331b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003321:	eb 05                	jmp    10003328 <ssfn_bbox+0x1c2>
10003323:	be fc ff ff ff       	mov    esi,0xfffffffc
10003328:	83 c4 3c             	add    esp,0x3c
1000332b:	89 f0                	mov    eax,esi
1000332d:	5b                   	pop    ebx
1000332e:	5e                   	pop    esi
1000332f:	5f                   	pop    edi
10003330:	5d                   	pop    ebp
10003331:	c3                   	ret    

10003332 <ssfn_text>:
10003332:	55                   	push   ebp
10003333:	57                   	push   edi
10003334:	56                   	push   esi
10003335:	53                   	push   ebx
10003336:	83 ec 1c             	sub    esp,0x1c
10003339:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000333d:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003341:	85 f6                	test   esi,esi
10003343:	0f 84 b2 00 00 00    	je     100033fb <ssfn_text+0xc9>
10003349:	85 ed                	test   ebp,ebp
1000334b:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003350:	0f 84 a5 00 00 00    	je     100033fb <ssfn_text+0xc9>
10003356:	83 ec 0c             	sub    esp,0xc
10003359:	6a 18                	push   0x18
1000335b:	e8 fc ff ff ff       	call   1000335c <ssfn_text+0x2a>	1000335c: R_386_PC32	malloc
10003360:	83 c4 10             	add    esp,0x10
10003363:	89 c3                	mov    ebx,eax
10003365:	85 c0                	test   eax,eax
10003367:	0f 84 8e 00 00 00    	je     100033fb <ssfn_text+0xc9>
1000336d:	31 c0                	xor    eax,eax
1000336f:	b9 06 00 00 00       	mov    ecx,0x6
10003374:	89 df                	mov    edi,ebx
10003376:	80 3e 00             	cmp    BYTE PTR [esi],0x0
10003379:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000337b:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000337f:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003382:	74 79                	je     100033fd <ssfn_text+0xcb>
10003384:	8d 43 0c             	lea    eax,[ebx+0xc]
10003387:	52                   	push   edx
10003388:	52                   	push   edx
10003389:	50                   	push   eax
1000338a:	8d 43 0a             	lea    eax,[ebx+0xa]
1000338d:	50                   	push   eax
1000338e:	8d 43 06             	lea    eax,[ebx+0x6]
10003391:	50                   	push   eax
10003392:	8d 43 04             	lea    eax,[ebx+0x4]
10003395:	50                   	push   eax
10003396:	56                   	push   esi
10003397:	55                   	push   ebp
10003398:	e8 fc ff ff ff       	call   10003399 <ssfn_text+0x67>	10003399: R_386_PC32	ssfn_bbox
1000339d:	83 c4 20             	add    esp,0x20
100033a0:	85 c0                	test   eax,eax
100033a2:	75 59                	jne    100033fd <ssfn_text+0xcb>
100033a4:	83 ec 0c             	sub    esp,0xc
100033a7:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033ab:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033af:	0f af c8             	imul   ecx,eax
100033b2:	c1 e1 02             	shl    ecx,0x2
100033b5:	51                   	push   ecx
100033b6:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100033ba:	e8 fc ff ff ff       	call   100033bb <ssfn_text+0x89>	100033bb: R_386_PC32	malloc
100033bf:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033c3:	89 c7                	mov    edi,eax
100033c5:	89 03                	mov    DWORD PTR [ebx],eax
100033c7:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
100033cb:	83 c4 10             	add    esp,0x10
100033ce:	f3 aa                	rep stos BYTE PTR es:[edi],al
100033d0:	50                   	push   eax
100033d1:	56                   	push   esi
100033d2:	53                   	push   ebx
100033d3:	55                   	push   ebp
100033d4:	e8 fc ff ff ff       	call   100033d5 <ssfn_text+0xa3>	100033d5: R_386_PC32	ssfn_render
100033d9:	83 c4 10             	add    esp,0x10
100033dc:	85 c0                	test   eax,eax
100033de:	7e 04                	jle    100033e4 <ssfn_text+0xb2>
100033e0:	01 c6                	add    esi,eax
100033e2:	eb ec                	jmp    100033d0 <ssfn_text+0x9e>
100033e4:	74 17                	je     100033fd <ssfn_text+0xcb>
100033e6:	83 ec 0c             	sub    esp,0xc
100033e9:	ff 33                	push   DWORD PTR [ebx]
100033eb:	e8 fc ff ff ff       	call   100033ec <ssfn_text+0xba>	100033ec: R_386_PC32	free
100033f0:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033f3:	e8 fc ff ff ff       	call   100033f4 <ssfn_text+0xc2>	100033f4: R_386_PC32	free
100033f8:	83 c4 10             	add    esp,0x10
100033fb:	31 db                	xor    ebx,ebx
100033fd:	83 c4 1c             	add    esp,0x1c
10003400:	89 d8                	mov    eax,ebx
10003402:	5b                   	pop    ebx
10003403:	5e                   	pop    esi
10003404:	5f                   	pop    edi
10003405:	5d                   	pop    ebp
10003406:	c3                   	ret    
10003407:	90                   	nop

10003408 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003408:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000340c:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003412:	8b 10                	mov    edx,DWORD PTR [eax]
10003414:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003418:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
1000341b:	90                   	nop

1000341c <NIContext::drvDarken4(int, int, int)>:
1000341c:	55                   	push   ebp
1000341d:	57                   	push   edi
1000341e:	56                   	push   esi
1000341f:	53                   	push   ebx
10003420:	83 ec 20             	sub    esp,0x20
10003423:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10003427:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000342b:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000342f:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10003433:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003439:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000343d:	8b 10                	mov    edx,DWORD PTR [eax]
1000343f:	56                   	push   esi
10003440:	53                   	push   ebx
10003441:	50                   	push   eax
10003442:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003445:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003449:	89 c2                	mov    edx,eax
1000344b:	0f b6 ec             	movzx  ebp,ah
1000344e:	c1 ea 10             	shr    edx,0x10
10003451:	0f af e9             	imul   ebp,ecx
10003454:	0f b6 d2             	movzx  edx,dl
10003457:	0f b6 c0             	movzx  eax,al
1000345a:	0f af d1             	imul   edx,ecx
1000345d:	0f af c1             	imul   eax,ecx
10003460:	c1 ea 07             	shr    edx,0x7
10003463:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
10003469:	c1 e8 07             	shr    eax,0x7
1000346c:	8b 39                	mov    edi,DWORD PTR [ecx]
1000346e:	c1 e2 10             	shl    edx,0x10
10003471:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003475:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
10003479:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
1000347d:	c1 ed 07             	shr    ebp,0x7
10003480:	c1 e5 08             	shl    ebp,0x8
10003483:	09 ea                	or     edx,ebp
10003485:	09 c2                	or     edx,eax
10003487:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000348b:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
1000348e:	83 c4 2c             	add    esp,0x2c
10003491:	5b                   	pop    ebx
10003492:	5e                   	pop    esi
10003493:	5f                   	pop    edi
10003494:	5d                   	pop    ebp
10003495:	ff e0                	jmp    eax
10003497:	90                   	nop

10003498 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
10003498:	55                   	push   ebp
10003499:	b9 00 40 00 00       	mov    ecx,0x4000
1000349e:	57                   	push   edi
1000349f:	b0 ff                	mov    al,0xff
100034a1:	56                   	push   esi
100034a2:	53                   	push   ebx
100034a3:	83 ec 3c             	sub    esp,0x3c
100034a6:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034aa:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034ae:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
100034b1:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100034b5:	f3 aa                	rep stos BYTE PTR es:[edi],al
100034b7:	85 db                	test   ebx,ebx
100034b9:	75 10                	jne    100034cb <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
100034bb:	83 ec 0c             	sub    esp,0xc
100034be:	68 3c 49 00 10       	push   0x1000493c	100034bf: R_386_32	.text
100034c3:	e8 fc ff ff ff       	call   100034c4 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	100034c4: R_386_PC32	KePanic(char const*)
100034c8:	83 c4 10             	add    esp,0x10
100034cb:	50                   	push   eax
100034cc:	50                   	push   eax
100034cd:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d1:	50                   	push   eax
100034d2:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d6:	50                   	push   eax
100034d7:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034db:	50                   	push   eax
100034dc:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034e0:	50                   	push   eax
100034e1:	56                   	push   esi
100034e2:	68 00 00 00 00       	push   0x0	100034e3: R_386_32	ssfn_ctx
100034e7:	e8 fc ff ff ff       	call   100034e8 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034e8: R_386_PC32	ssfn_bbox
100034ec:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034ef:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034f7:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100034fb:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
10003503:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10003507:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000350c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003510:	0d 00 00 00 ff       	or     eax,0xff000000
10003515:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003519:	83 c4 1c             	add    esp,0x1c
1000351c:	56                   	push   esi
1000351d:	8d 44 24 20          	lea    eax,[esp+0x20]
10003521:	50                   	push   eax
10003522:	68 00 00 00 00       	push   0x0	10003523: R_386_32	ssfn_ctx
10003527:	e8 fc ff ff ff       	call   10003528 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003528: R_386_PC32	ssfn_render
1000352c:	83 c4 10             	add    esp,0x10
1000352f:	89 03                	mov    DWORD PTR [ebx],eax
10003531:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003535:	31 db                	xor    ebx,ebx
10003537:	89 f0                	mov    eax,esi
10003539:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
1000353d:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003541:	7e 3f                	jle    10003582 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003543:	31 ff                	xor    edi,edi
10003545:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000354a:	39 f8                	cmp    eax,edi
1000354c:	7e 2c                	jle    1000357a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
1000354e:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003551:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003554:	83 f8 ff             	cmp    eax,0xffffffff
10003557:	74 1d                	je     10003576 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
10003559:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
1000355f:	25 ff ff ff 00       	and    eax,0xffffff
10003564:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003566:	50                   	push   eax
10003567:	56                   	push   esi
10003568:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000356c:	01 f8                	add    eax,edi
1000356e:	50                   	push   eax
1000356f:	52                   	push   edx
10003570:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003573:	83 c4 10             	add    esp,0x10
10003576:	43                   	inc    ebx
10003577:	47                   	inc    edi
10003578:	eb cb                	jmp    10003545 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
1000357a:	29 c3                	sub    ebx,eax
1000357c:	46                   	inc    esi
1000357d:	83 c3 40             	add    ebx,0x40
10003580:	eb b5                	jmp    10003537 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
10003582:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003587:	83 c4 3c             	add    esp,0x3c
1000358a:	5b                   	pop    ebx
1000358b:	5e                   	pop    esi
1000358c:	5f                   	pop    edi
1000358d:	5d                   	pop    ebp
1000358e:	c3                   	ret    
1000358f:	90                   	nop

10003590 <NIContext::~NIContext()>:
10003590:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003594: R_386_32	ssfn_ctx
10003598:	e9 00 db ff ff       	jmp    1000109d <ssfn_free>
1000359d:	90                   	nop

1000359e <NIContext::NIContext(Video*, int, int, int, int)>:
1000359e:	55                   	push   ebp
1000359f:	ba 00 00 00 00       	mov    edx,0x0	100035a0: R_386_32	ssfn_ctx
100035a4:	57                   	push   edi
100035a5:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035aa:	56                   	push   esi
100035ab:	89 d7                	mov    edi,edx
100035ad:	53                   	push   ebx
100035ae:	81 ec 48 02 00 00    	sub    esp,0x248
100035b4:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
100035bb:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
100035c2:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
100035c8:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
100035cf:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
100035d5:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035dc:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035e2:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035e9:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035ef:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035f6:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100035fc:	31 c0                	xor    eax,eax
100035fe:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003600:	68 00 40 00 00       	push   0x4000
10003605:	e8 fc ff ff ff       	call   10003606 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	10003606: R_386_PC32	malloc
1000360a:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003614:	89 03                	mov    DWORD PTR [ebx],eax
10003616:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000361d:	e8 fc ff ff ff       	call   1000361e <NIContext::NIContext(Video*, int, int, int, int)+0x80>	1000361e: R_386_PC32	malloc
10003622:	83 c4 0c             	add    esp,0xc
10003625:	89 c6                	mov    esi,eax
10003627:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003629: R_386_32	kernelProcess
1000362d:	68 55 49 00 10       	push   0x10004955	1000362e: R_386_32	.text
10003632:	50                   	push   eax
10003633:	e8 fc ff ff ff       	call   10003634 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003634: R_386_PC32	Directory::Directory(char const*, Process*)
10003638:	83 c4 10             	add    esp,0x10
1000363b:	85 f6                	test   esi,esi
1000363d:	75 10                	jne    1000364f <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
1000363f:	83 ec 0c             	sub    esp,0xc
10003642:	68 69 49 00 10       	push   0x10004969	10003643: R_386_32	.text
10003647:	e8 fc ff ff ff       	call   10003648 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003648: R_386_PC32	KePanic(char const*)
1000364c:	83 c4 10             	add    esp,0x10
1000364f:	83 ec 0c             	sub    esp,0xc
10003652:	56                   	push   esi
10003653:	e8 fc ff ff ff       	call   10003654 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003654: R_386_PC32	Directory::open()
10003658:	83 c4 10             	add    esp,0x10
1000365b:	85 c0                	test   eax,eax
1000365d:	75 e0                	jne    1000363f <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
1000365f:	83 ec 0c             	sub    esp,0xc
10003662:	8b 06                	mov    eax,DWORD PTR [esi]
10003664:	8d 4c 24 20          	lea    ecx,[esp+0x20]
10003668:	51                   	push   ecx
10003669:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003670:	52                   	push   edx
10003671:	6a 00                	push   0x0
10003673:	68 10 01 00 00       	push   0x110
10003678:	56                   	push   esi
10003679:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000367c:	83 c4 20             	add    esp,0x20
1000367f:	85 c0                	test   eax,eax
10003681:	0f 85 a0 01 00 00    	jne    10003827 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003687:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
1000368f:	0f 85 92 01 00 00    	jne    10003827 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003695:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
1000369c:	83 c9 ff             	or     ecx,0xffffffff
1000369f:	83 ec 0c             	sub    esp,0xc
100036a2:	89 ef                	mov    edi,ebp
100036a4:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036a6:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036ac:	89 ca                	mov    edx,ecx
100036ae:	f7 d2                	not    edx
100036b0:	52                   	push   edx
100036b1:	e8 fc ff ff ff       	call   100036b2 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	100036b2: R_386_PC32	malloc
100036b6:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
100036ba:	47                   	inc    edi
100036bb:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
100036c1:	5a                   	pop    edx
100036c2:	59                   	pop    ecx
100036c3:	55                   	push   ebp
100036c4:	50                   	push   eax
100036c5:	e8 fc ff ff ff       	call   100036c6 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	100036c6: R_386_PC32	strcpy
100036ca:	5f                   	pop    edi
100036cb:	58                   	pop    eax
100036cc:	68 84 49 00 10       	push   0x10004984	100036cd: R_386_32	.text
100036d1:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
100036d5:	57                   	push   edi
100036d6:	e8 fc ff ff ff       	call   100036d7 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	100036d7: R_386_PC32	strcpy
100036db:	58                   	pop    eax
100036dc:	5a                   	pop    edx
100036dd:	55                   	push   ebp
100036de:	57                   	push   edi
100036df:	e8 fc ff ff ff       	call   100036e0 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036e0: R_386_PC32	strcat
100036e4:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036eb:	e8 fc ff ff ff       	call   100036ec <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036ec: R_386_PC32	malloc
100036f0:	83 c4 0c             	add    esp,0xc
100036f3:	89 c5                	mov    ebp,eax
100036f5:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036f7: R_386_32	kernelProcess
100036fb:	57                   	push   edi
100036fc:	50                   	push   eax
100036fd:	e8 fc ff ff ff       	call   100036fe <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100036fe: R_386_PC32	File::File(char const*, Process*)
10003702:	83 c4 10             	add    esp,0x10
10003705:	85 ed                	test   ebp,ebp
10003707:	0f 84 52 ff ff ff    	je     1000365f <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
1000370d:	50                   	push   eax
1000370e:	50                   	push   eax
1000370f:	6a 01                	push   0x1
10003711:	55                   	push   ebp
10003712:	e8 fc ff ff ff       	call   10003713 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	10003713: R_386_PC32	File::open(FileOpenMode)
10003717:	83 c4 10             	add    esp,0x10
1000371a:	85 c0                	test   eax,eax
1000371c:	74 0c                	je     1000372a <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
1000371e:	83 ec 0c             	sub    esp,0xc
10003721:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003724:	55                   	push   ebp
10003725:	e9 b4 00 00 00       	jmp    100037de <NIContext::NIContext(Video*, int, int, int, int)+0x240>
1000372a:	50                   	push   eax
1000372b:	8d 44 24 17          	lea    eax,[esp+0x17]
1000372f:	50                   	push   eax
10003730:	8d 44 24 20          	lea    eax,[esp+0x20]
10003734:	50                   	push   eax
10003735:	55                   	push   ebp
10003736:	e8 fc ff ff ff       	call   10003737 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	10003737: R_386_PC32	File::stat(unsigned long long*, bool*)
1000373b:	83 c4 10             	add    esp,0x10
1000373e:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003743:	74 0e                	je     10003753 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003745:	83 ec 0c             	sub    esp,0xc
10003748:	55                   	push   ebp
10003749:	e8 fc ff ff ff       	call   1000374a <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000374a: R_386_PC32	File::close()
1000374e:	e9 85 00 00 00       	jmp    100037d8 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
10003753:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10003757:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000375b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000375f:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003763:	83 ec 0c             	sub    esp,0xc
10003766:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000376a:	e8 fc ff ff ff       	call   1000376b <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	1000376b: R_386_PC32	malloc
1000376f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003773:	58                   	pop    eax
10003774:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003777:	8d 54 24 20          	lea    edx,[esp+0x20]
1000377b:	52                   	push   edx
1000377c:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003780:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003784:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003788:	55                   	push   ebp
10003789:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000378c:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003790:	83 c4 1c             	add    esp,0x1c
10003793:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003797:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000379b:	68 99 49 00 10       	push   0x10004999	1000379c: R_386_32	.text
100037a0:	e8 fc ff ff ff       	call   100037a1 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	100037a1: R_386_PC32	Dbg::kprintf(char const*, ...)
100037a5:	83 c4 10             	add    esp,0x10
100037a8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037ac:	85 c0                	test   eax,eax
100037ae:	75 15                	jne    100037c5 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037b0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100037b4:	89 c1                	mov    ecx,eax
100037b6:	c1 f9 1f             	sar    ecx,0x1f
100037b9:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
100037bd:	75 06                	jne    100037c5 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037bf:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100037c3:	74 24                	je     100037e9 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
100037c5:	83 ec 0c             	sub    esp,0xc
100037c8:	55                   	push   ebp
100037c9:	e8 fc ff ff ff       	call   100037ca <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	100037ca: R_386_PC32	File::close()
100037ce:	58                   	pop    eax
100037cf:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100037d3:	e8 fc ff ff ff       	call   100037d4 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	100037d4: R_386_PC32	free
100037d8:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037db:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037de:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037e1:	83 c4 10             	add    esp,0x10
100037e4:	e9 76 fe ff ff       	jmp    1000365f <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037e9:	50                   	push   eax
100037ea:	50                   	push   eax
100037eb:	57                   	push   edi
100037ec:	68 ad 49 00 10       	push   0x100049ad	100037ed: R_386_32	.text
100037f1:	e8 fc ff ff ff       	call   100037f2 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037f2: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f6:	5a                   	pop    edx
100037f7:	59                   	pop    ecx
100037f8:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100037fc:	68 00 00 00 00       	push   0x0	100037fd: R_386_32	ssfn_ctx
10003801:	e8 fc ff ff ff       	call   10003802 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	10003802: R_386_PC32	ssfn_load
10003806:	5b                   	pop    ebx
10003807:	5f                   	pop    edi
10003808:	50                   	push   eax
10003809:	68 be 49 00 10       	push   0x100049be	1000380a: R_386_32	.text
1000380e:	e8 fc ff ff ff       	call   1000380f <NIContext::NIContext(Video*, int, int, int, int)+0x271>	1000380f: R_386_PC32	Dbg::kprintf(char const*, ...)
10003813:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003816:	e8 fc ff ff ff       	call   10003817 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	10003817: R_386_PC32	File::close()
1000381b:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000381e:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003821:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003824:	83 c4 10             	add    esp,0x10
10003827:	83 ec 0c             	sub    esp,0xc
1000382a:	56                   	push   esi
1000382b:	e8 fc ff ff ff       	call   1000382c <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	1000382c: R_386_PC32	Directory::close()
10003830:	8b 06                	mov    eax,DWORD PTR [esi]
10003832:	89 34 24             	mov    DWORD PTR [esp],esi
10003835:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003838:	b8 00 00 00 00       	mov    eax,0x0	10003839: R_386_32	ssfn_ctx
1000383d:	e8 f7 cb ff ff       	call   10000439 <_ssfn_fc.part.1>
10003842:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003844: R_386_32	ssfn_ctx
1000384c:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000384e: R_386_32	ssfn_ctx
10003856:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	10003858: R_386_32	ssfn_ctx
10003860:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	10003862: R_386_32	ssfn_ctx
1000386a:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	1000386c: R_386_32	ssfn_ctx
10003874:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	10003876: R_386_32	ssfn_ctx
1000387e:	81 c4 4c 02 00 00    	add    esp,0x24c
10003884:	5b                   	pop    ebx
10003885:	5e                   	pop    esi
10003886:	5f                   	pop    edi
10003887:	5d                   	pop    ebp
10003888:	c3                   	ret    
10003889:	90                   	nop

1000388a <NIDesktop::NIDesktop(NIContext*)>:
1000388a:	53                   	push   ebx
1000388b:	83 ec 14             	sub    esp,0x14
1000388e:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10003892:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10003896:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
1000389d:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100038a0:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038a7:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038ae:	6a 08                	push   0x8
100038b0:	e8 fc ff ff ff       	call   100038b1 <NIDesktop::NIDesktop(NIContext*)+0x27>	100038b1: R_386_PC32	malloc
100038b5:	89 03                	mov    DWORD PTR [ebx],eax
100038b7:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100038be:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100038c4:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	100038c6: R_386_32	mouseDesktop
100038ca:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100038cc: R_386_32	guiMouseHandler
	100038d0: R_386_32	clipdrawHandleMouse(int, int, int, int)
100038d4:	83 c4 18             	add    esp,0x18
100038d7:	5b                   	pop    ebx
100038d8:	c3                   	ret    
100038d9:	90                   	nop

100038da <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
100038da:	53                   	push   ebx
100038db:	83 ec 08             	sub    esp,0x8
100038de:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100038e2:	8b 00                	mov    eax,DWORD PTR [eax]
100038e4:	8b 18                	mov    ebx,DWORD PTR [eax]
100038e6:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
100038ea:	74 1d                	je     10003909 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
100038ec:	8b 03                	mov    eax,DWORD PTR [ebx]
100038ee:	85 c0                	test   eax,eax
100038f0:	74 12                	je     10003904 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038f2:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
100038f6:	74 0c                	je     10003904 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038f8:	83 ec 0c             	sub    esp,0xc
100038fb:	50                   	push   eax
100038fc:	e8 fc ff ff ff       	call   100038fd <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	100038fd: R_386_PC32	NIWindow::invalidate()
10003901:	83 c4 10             	add    esp,0x10
10003904:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003907:	eb dd                	jmp    100038e6 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003909:	83 c4 08             	add    esp,0x8
1000390c:	5b                   	pop    ebx
1000390d:	c3                   	ret    

1000390e <NIDesktop::getTopmostWindowAtPixel(int, int)>:
1000390e:	57                   	push   edi
1000390f:	56                   	push   esi
10003910:	53                   	push   ebx
10003911:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003915:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003919:	8b 00                	mov    eax,DWORD PTR [eax]
1000391b:	8b 00                	mov    eax,DWORD PTR [eax]
1000391d:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003920:	85 db                	test   ebx,ebx
10003922:	74 43                	je     10003967 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
10003924:	8b 00                	mov    eax,DWORD PTR [eax]
10003926:	85 c0                	test   eax,eax
10003928:	74 3f                	je     10003969 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
1000392a:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
1000392d:	39 ca                	cmp    edx,ecx
1000392f:	7e 04                	jle    10003935 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003931:	89 d8                	mov    eax,ebx
10003933:	eb e8                	jmp    1000391d <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
10003935:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003938:	01 d6                	add    esi,edx
1000393a:	39 ce                	cmp    esi,ecx
1000393c:	7e f3                	jle    10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000393e:	89 ce                	mov    esi,ecx
10003940:	29 d6                	sub    esi,edx
10003942:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10003945:	8d 34 b2             	lea    esi,[edx+esi*4]
10003948:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000394b:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000394e:	01 d7                	add    edi,edx
10003950:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
10003954:	7f db                	jg     10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003956:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
10003959:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
1000395d:	29 f2                	sub    edx,esi
1000395f:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10003963:	7e cc                	jle    10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003965:	eb 02                	jmp    10003969 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003967:	31 c0                	xor    eax,eax
10003969:	5b                   	pop    ebx
1000396a:	5e                   	pop    esi
1000396b:	5f                   	pop    edi
1000396c:	c3                   	ret    
1000396d:	90                   	nop

1000396e <NIDesktop::renderScanline(int, int, int)>:
1000396e:	55                   	push   ebp
1000396f:	57                   	push   edi
10003970:	56                   	push   esi
10003971:	53                   	push   ebx
10003972:	83 ec 2c             	sub    esp,0x2c
10003975:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003979:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
1000397d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003981:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003985:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003989:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000398b: R_386_32	render
1000398f:	31 c0                	xor    eax,eax
10003991:	89 d7                	mov    edi,edx
10003993:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003995:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003999:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000399d:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000399f: R_386_32	shadow
100039a3:	b0 80                	mov    al,0x80
100039a5:	89 d7                	mov    edi,edx
100039a7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039a9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039ad:	8b 00                	mov    eax,DWORD PTR [eax]
100039af:	8b 00                	mov    eax,DWORD PTR [eax]
100039b1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039b5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100039b9:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100039bd:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100039bf: R_386_32	movingWin
100039c3:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100039c7:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100039ca:	85 c0                	test   eax,eax
100039cc:	75 09                	jne    100039d7 <NIDesktop::renderScanline(int, int, int)+0x69>
100039ce:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039d2:	e9 cf 02 00 00       	jmp    10003ca6 <NIDesktop::renderScanline(int, int, int)+0x338>
100039d7:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100039db:	8b 1f                	mov    ebx,DWORD PTR [edi]
100039dd:	85 db                	test   ebx,ebx
100039df:	74 ed                	je     100039ce <NIDesktop::renderScanline(int, int, int)+0x60>
100039e1:	39 da                	cmp    edx,ebx
100039e3:	75 06                	jne    100039eb <NIDesktop::renderScanline(int, int, int)+0x7d>
100039e5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039e9:	eb d8                	jmp    100039c3 <NIDesktop::renderScanline(int, int, int)+0x55>
100039eb:	83 ec 0c             	sub    esp,0xc
100039ee:	53                   	push   ebx
100039ef:	e8 fc ff ff ff       	call   100039f0 <NIDesktop::renderScanline(int, int, int)+0x82>	100039f0: R_386_PC32	NIWindow::request()
100039f4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100039f7:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
100039fa:	83 c4 10             	add    esp,0x10
100039fd:	01 c2                	add    edx,eax
100039ff:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a03:	0f 8e ad 00 00 00    	jle    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a09:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a0d:	0f 85 a3 00 00 00    	jne    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a13:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a17:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a1a:	83 c0 06             	add    eax,0x6
10003a1d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a21:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a24:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a27:	01 c8                	add    eax,ecx
10003a29:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003a2d:	39 d0                	cmp    eax,edx
10003a2f:	0f 8e 40 01 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a35:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a39:	7c 75                	jl     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a3b:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a3f:	0f 8f 30 01 00 00    	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a45:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a48:	89 d5                	mov    ebp,edx
10003a4a:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a4d:	29 cd                	sub    ebp,ecx
10003a4f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a53:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003a57:	39 f0                	cmp    eax,esi
10003a59:	7c 1d                	jl     10003a78 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a5b:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003a5e:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003a61:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003a64:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003a68:	7f 0e                	jg     10003a78 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a6a:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003a6e:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003a72:	29 cd                	sub    ebp,ecx
10003a74:	39 d5                	cmp    ebp,edx
10003a76:	7d 07                	jge    10003a7f <NIDesktop::renderScanline(int, int, int)+0x111>
10003a78:	40                   	inc    eax
10003a79:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003a7d:	75 d8                	jne    10003a57 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003a7f:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003a83:	48                   	dec    eax
10003a84:	83 f8 03             	cmp    eax,0x3
10003a87:	77 27                	ja     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a89:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003a8b: R_386_32	render
10003a90:	75 1e                	jne    10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a92:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a99:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a9c: R_386_32	shadow
10003aa0:	0f af c1             	imul   eax,ecx
10003aa3:	d1 f9                	sar    ecx,1
10003aa5:	c1 f8 08             	sar    eax,0x8
10003aa8:	01 c1                	add    ecx,eax
10003aaa:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003aac: R_386_32	shadow
10003ab0:	42                   	inc    edx
10003ab1:	e9 6b ff ff ff       	jmp    10003a21 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003ab6:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003aba:	0f 8d b5 00 00 00    	jge    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ac0:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003ac4:	0f 85 ab 00 00 00    	jne    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003aca:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003ace:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003ad1:	8d 77 fa             	lea    esi,[edi-0x6]
10003ad4:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003ad8:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003adb:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003ade:	01 ce                	add    esi,ecx
10003ae0:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003ae4:	39 c6                	cmp    esi,eax
10003ae6:	0f 8e 89 00 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003aec:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003af0:	7c 7d                	jl     10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003af2:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003af6:	7f 7d                	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003af8:	89 c7                	mov    edi,eax
10003afa:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003afe:	29 cf                	sub    edi,ecx
10003b00:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b04:	4a                   	dec    edx
10003b05:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b09:	29 d1                	sub    ecx,edx
10003b0b:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b0f:	74 32                	je     10003b43 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b11:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b14:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b17:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b1a:	39 d5                	cmp    ebp,edx
10003b1c:	7e e6                	jle    10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b1e:	89 d5                	mov    ebp,edx
10003b20:	29 fd                	sub    ebp,edi
10003b22:	39 ee                	cmp    esi,ebp
10003b24:	7e 1d                	jle    10003b43 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b26:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b29:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b2c:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b2f:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b33:	7f cf                	jg     10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b35:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b39:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003b3d:	29 f7                	sub    edi,esi
10003b3f:	39 c7                	cmp    edi,eax
10003b41:	7c c1                	jl     10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b43:	83 f9 04             	cmp    ecx,0x4
10003b46:	77 27                	ja     10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003b48:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b4a: R_386_32	render
10003b4f:	75 1e                	jne    10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003b51:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003b58:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003b5b: R_386_32	shadow
10003b5f:	0f af d1             	imul   edx,ecx
10003b62:	d1 f9                	sar    ecx,1
10003b64:	c1 fa 08             	sar    edx,0x8
10003b67:	01 d1                	add    ecx,edx
10003b69:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003b6b: R_386_32	shadow
10003b6f:	40                   	inc    eax
10003b70:	e9 63 ff ff ff       	jmp    10003ad8 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003b75:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003b78:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b7c:	0f 8f 00 01 00 00    	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003b82:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003b85:	01 c2                	add    edx,eax
10003b87:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003b8b:	0f 8e f1 00 00 00    	jle    10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003b91:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b95:	29 c2                	sub    edx,eax
10003b97:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003b9a:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b9e:	8d 14 90             	lea    edx,[eax+edx*4]
10003ba1:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003ba4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003ba8:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003bac:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003bb0:	74 09                	je     10003bbb <NIDesktop::renderScanline(int, int, int)+0x24d>
10003bb2:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bb6:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003bb9:	eb 78                	jmp    10003c33 <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003bbb:	31 c9                	xor    ecx,ecx
10003bbd:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003bc0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bc4:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003bc8:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003bcb:	01 cd                	add    ebp,ecx
10003bcd:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003bd1:	01 ca                	add    edx,ecx
10003bd3:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003bd5: R_386_32	render
10003bda:	75 1f                	jne    10003bfb <NIDesktop::renderScanline(int, int, int)+0x28d>
10003bdc:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003bdf: R_386_32	shadow
10003be3:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003be6:	83 c7 7d             	add    edi,0x7d
10003be9:	0f af f7             	imul   esi,edi
10003bec:	d1 ff                	sar    edi,1
10003bee:	c1 fe 08             	sar    esi,0x8
10003bf1:	01 f7                	add    edi,esi
10003bf3:	89 f8                	mov    eax,edi
10003bf5:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003bf7: R_386_32	shadow
10003bfb:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003bfd: R_386_32	render
10003c02:	75 20                	jne    10003c24 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c04:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c0b:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c0e: R_386_32	shadow
10003c12:	0f af f7             	imul   esi,edi
10003c15:	d1 ff                	sar    edi,1
10003c17:	c1 fe 08             	sar    esi,0x8
10003c1a:	01 f7                	add    edi,esi
10003c1c:	89 f8                	mov    eax,edi
10003c1e:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c20: R_386_32	shadow
10003c24:	41                   	inc    ecx
10003c25:	83 f9 04             	cmp    ecx,0x4
10003c28:	75 93                	jne    10003bbd <NIDesktop::renderScanline(int, int, int)+0x24f>
10003c2a:	eb 86                	jmp    10003bb2 <NIDesktop::renderScanline(int, int, int)+0x244>
10003c2c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c30:	7d 11                	jge    10003c43 <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003c32:	40                   	inc    eax
10003c33:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c36:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c39:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c3d:	39 c2                	cmp    edx,eax
10003c3f:	7f eb                	jg     10003c2c <NIDesktop::renderScanline(int, int, int)+0x2be>
10003c41:	eb 3f                	jmp    10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c43:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c47:	7f 39                	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c49:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c4b: R_386_32	render
10003c50:	75 e0                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c52:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c54: R_386_32	render
10003c59:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003c5d:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003c60:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003c63:	0f af ca             	imul   ecx,edx
10003c66:	89 c2                	mov    edx,eax
10003c68:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003c6b:	01 ca                	add    edx,ecx
10003c6d:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003c70:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003c74:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003c77:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003c7a: R_386_32	renderData
10003c7e:	75 b2                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c80:	eb 44                	jmp    10003cc6 <NIDesktop::renderScanline(int, int, int)+0x358>
10003c82:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003c86:	0f 85 42 fd ff ff    	jne    100039ce <NIDesktop::renderScanline(int, int, int)+0x60>
10003c8c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003c90:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c93:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003c97:	e9 21 fd ff ff       	jmp    100039bd <NIDesktop::renderScanline(int, int, int)+0x4f>
10003c9c:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9e: R_386_32	render
10003ca3:	74 09                	je     10003cae <NIDesktop::renderScanline(int, int, int)+0x340>
10003ca5:	40                   	inc    eax
10003ca6:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003caa:	7c f0                	jl     10003c9c <NIDesktop::renderScanline(int, int, int)+0x32e>
10003cac:	eb 18                	jmp    10003cc6 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cae:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003cb0: R_386_32	render
10003cb5:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003cb8: R_386_32	renderData
10003cc0:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003cc4:	75 df                	jne    10003ca5 <NIDesktop::renderScanline(int, int, int)+0x337>
10003cc6:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cca:	8b 00                	mov    eax,DWORD PTR [eax]
10003ccc:	8b 00                	mov    eax,DWORD PTR [eax]
10003cce:	85 c0                	test   eax,eax
10003cd0:	74 5e                	je     10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cd2:	8b 00                	mov    eax,DWORD PTR [eax]
10003cd4:	85 c0                	test   eax,eax
10003cd6:	74 58                	je     10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cd8:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003cdc:	75 52                	jne    10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cde:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003ce2:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003ce6:	7d 48                	jge    10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003ce8:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003cea: R_386_32	shadow
10003cee:	3c 80                	cmp    al,0x80
10003cf0:	74 3b                	je     10003d2d <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003cf2:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003cf5: R_386_32	renderData
10003cf9:	0f b6 f0             	movzx  esi,al
10003cfc:	89 d1                	mov    ecx,edx
10003cfe:	0f b6 c6             	movzx  eax,dh
10003d01:	c1 e9 10             	shr    ecx,0x10
10003d04:	0f af c6             	imul   eax,esi
10003d07:	0f b6 c9             	movzx  ecx,cl
10003d0a:	0f b6 d2             	movzx  edx,dl
10003d0d:	0f af ce             	imul   ecx,esi
10003d10:	0f af d6             	imul   edx,esi
10003d13:	c1 e9 07             	shr    ecx,0x7
10003d16:	c1 e8 07             	shr    eax,0x7
10003d19:	c1 e1 10             	shl    ecx,0x10
10003d1c:	c1 e0 08             	shl    eax,0x8
10003d1f:	c1 ea 07             	shr    edx,0x7
10003d22:	09 c1                	or     ecx,eax
10003d24:	09 ca                	or     edx,ecx
10003d26:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d29: R_386_32	renderData
10003d2d:	43                   	inc    ebx
10003d2e:	eb b2                	jmp    10003ce2 <NIDesktop::renderScanline(int, int, int)+0x374>
10003d30:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d34:	83 ec 0c             	sub    esp,0xc
10003d37:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d3a:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d40:	8b 10                	mov    edx,DWORD PTR [eax]
10003d42:	68 00 00 00 00       	push   0x0	10003d43: R_386_32	renderData
10003d47:	6a 00                	push   0x0
10003d49:	6a 01                	push   0x1
10003d4b:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003d4f:	6a 00                	push   0x0
10003d51:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d55:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d59:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003d5d:	50                   	push   eax
10003d5e:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003d61:	83 c4 5c             	add    esp,0x5c
10003d64:	5b                   	pop    ebx
10003d65:	5e                   	pop    esi
10003d66:	5f                   	pop    edi
10003d67:	5d                   	pop    ebp
10003d68:	c3                   	ret    
10003d69:	90                   	nop

10003d6a <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d6a:	53                   	push   ebx
10003d6b:	83 ec 08             	sub    esp,0x8
10003d6e:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d72:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d76:	7d 18                	jge    10003d90 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d78:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d7c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d80:	53                   	push   ebx
10003d81:	43                   	inc    ebx
10003d82:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d86:	e8 fc ff ff ff       	call   10003d87 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d87: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d8b:	83 c4 10             	add    esp,0x10
10003d8e:	eb e2                	jmp    10003d72 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d90:	83 c4 08             	add    esp,0x8
10003d93:	5b                   	pop    ebx
10003d94:	c3                   	ret    
10003d95:	90                   	nop

10003d96 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d96:	55                   	push   ebp
10003d97:	ba 05 00 00 00       	mov    edx,0x5
10003d9c:	57                   	push   edi
10003d9d:	56                   	push   esi
10003d9e:	53                   	push   ebx
10003d9f:	83 ec 0c             	sub    esp,0xc
10003da2:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003da6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003da9:	83 f8 05             	cmp    eax,0x5
10003dac:	7c 02                	jl     10003db0 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003dae:	89 c2                	mov    edx,eax
10003db0:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003db4:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003db7:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003dba:	83 ea 05             	sub    edx,0x5
10003dbd:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003dc3:	8d 70 05             	lea    esi,[eax+0x5]
10003dc6:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003dc9:	39 c5                	cmp    ebp,eax
10003dcb:	7f 03                	jg     10003dd0 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003dcd:	8d 71 ff             	lea    esi,[ecx-0x1]
10003dd0:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003dd3:	89 c1                	mov    ecx,eax
10003dd5:	83 f8 05             	cmp    eax,0x5
10003dd8:	7d 05                	jge    10003ddf <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003dda:	b9 05 00 00 00       	mov    ecx,0x5
10003ddf:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003de2:	83 e9 05             	sub    ecx,0x5
10003de5:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003deb:	8d 58 05             	lea    ebx,[eax+0x5]
10003dee:	8d 6f fb             	lea    ebp,[edi-0x5]
10003df1:	39 c5                	cmp    ebp,eax
10003df3:	7f 03                	jg     10003df8 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003df5:	8d 5f ff             	lea    ebx,[edi-0x1]
10003df8:	83 ec 0c             	sub    esp,0xc
10003dfb:	53                   	push   ebx
10003dfc:	51                   	push   ecx
10003dfd:	56                   	push   esi
10003dfe:	52                   	push   edx
10003dff:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e03:	e8 fc ff ff ff       	call   10003e04 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e04: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e08:	83 c4 2c             	add    esp,0x2c
10003e0b:	5b                   	pop    ebx
10003e0c:	5e                   	pop    esi
10003e0d:	5f                   	pop    edi
10003e0e:	5d                   	pop    ebp
10003e0f:	c3                   	ret    

10003e10 <NIDesktop::completeRefresh()>:
10003e10:	56                   	push   esi
10003e11:	53                   	push   ebx
10003e12:	31 f6                	xor    esi,esi
10003e14:	50                   	push   eax
10003e15:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e19:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e1c:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e22:	7e 15                	jle    10003e39 <NIDesktop::completeRefresh()+0x29>
10003e24:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e2a:	6a 00                	push   0x0
10003e2c:	56                   	push   esi
10003e2d:	46                   	inc    esi
10003e2e:	53                   	push   ebx
10003e2f:	e8 fc ff ff ff       	call   10003e30 <NIDesktop::completeRefresh()+0x20>	10003e30: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e34:	83 c4 10             	add    esp,0x10
10003e37:	eb e0                	jmp    10003e19 <NIDesktop::completeRefresh()+0x9>
10003e39:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e3f:	83 ec 0c             	sub    esp,0xc
10003e42:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e44:	6a 00                	push   0x0
10003e46:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e49:	05 00 00 00 00       	add    eax,0x0	10003e4a: R_386_32	___mouse_data
10003e4e:	50                   	push   eax
10003e4f:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e52:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e55:	52                   	push   edx
10003e56:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e59:	83 c4 24             	add    esp,0x24
10003e5c:	5b                   	pop    ebx
10003e5d:	5e                   	pop    esi
10003e5e:	c3                   	ret    
10003e5f:	90                   	nop

10003e60 <NIDesktop::addWindow(NIWindow*)>:
10003e60:	56                   	push   esi
10003e61:	53                   	push   ebx
10003e62:	83 ec 0c             	sub    esp,0xc
10003e65:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e69:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e6d:	56                   	push   esi
10003e6e:	ff 33                	push   DWORD PTR [ebx]
10003e70:	e8 fc ff ff ff       	call   10003e71 <NIDesktop::addWindow(NIWindow*)+0x11>	10003e71: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e75:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e79:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e7d:	83 c4 14             	add    esp,0x14
10003e80:	5b                   	pop    ebx
10003e81:	5e                   	pop    esi
10003e82:	e9 0f ff ff ff       	jmp    10003d96 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e87:	90                   	nop

10003e88 <NIDesktop::raiseWindow(NIWindow*)>:
10003e88:	53                   	push   ebx
10003e89:	83 ec 10             	sub    esp,0x10
10003e8c:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e90:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e94:	50                   	push   eax
10003e95:	ff 33                	push   DWORD PTR [ebx]
10003e97:	e8 fc ff ff ff       	call   10003e98 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e98: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e9c:	58                   	pop    eax
10003e9d:	5a                   	pop    edx
10003e9e:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ea2:	ff 33                	push   DWORD PTR [ebx]
10003ea4:	e8 fc ff ff ff       	call   10003ea5 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ea5: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ea9:	59                   	pop    ecx
10003eaa:	58                   	pop    eax
10003eab:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eaf:	53                   	push   ebx
10003eb0:	e8 fc ff ff ff       	call   10003eb1 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003eb1: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eb5:	83 c4 18             	add    esp,0x18
10003eb8:	5b                   	pop    ebx
10003eb9:	c3                   	ret    

10003eba <NIDesktop::deleteWindow(NIWindow*)>:
10003eba:	53                   	push   ebx
10003ebb:	83 ec 10             	sub    esp,0x10
10003ebe:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ec2:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003ec6:	50                   	push   eax
10003ec7:	ff 33                	push   DWORD PTR [ebx]
10003ec9:	e8 fc ff ff ff       	call   10003eca <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003eca: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003ece:	58                   	pop    eax
10003ecf:	5a                   	pop    edx
10003ed0:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ed4:	53                   	push   ebx
10003ed5:	e8 fc ff ff ff       	call   10003ed6 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003ed6: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eda:	83 c4 18             	add    esp,0x18
10003edd:	5b                   	pop    ebx
10003ede:	c3                   	ret    
10003edf:	90                   	nop

10003ee0 <NIDesktop::handleMouse(int, int, int, int)>:
10003ee0:	55                   	push   ebp
10003ee1:	57                   	push   edi
10003ee2:	56                   	push   esi
10003ee3:	53                   	push   ebx
10003ee4:	83 ec 28             	sub    esp,0x28
10003ee7:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003eeb:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003eee:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ef1:	8d 4a 20             	lea    ecx,[edx+0x20]
10003ef4:	51                   	push   ecx
10003ef5:	52                   	push   edx
10003ef6:	8d 50 20             	lea    edx,[eax+0x20]
10003ef9:	52                   	push   edx
10003efa:	50                   	push   eax
10003efb:	53                   	push   ebx
10003efc:	e8 fc ff ff ff       	call   10003efd <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003efd: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f01:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f04:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f08:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f0b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10003f0f:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f13:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003f17:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f1b:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f1e:	83 c4 20             	add    esp,0x20
10003f21:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f24:	85 d2                	test   edx,edx
10003f26:	79 07                	jns    10003f2f <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003f28:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f2f:	85 c0                	test   eax,eax
10003f31:	79 07                	jns    10003f3a <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003f33:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f3a:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f3d:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f43:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f46:	7f 04                	jg     10003f4c <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f48:	48                   	dec    eax
10003f49:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f4c:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f52:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f55:	7f 04                	jg     10003f5b <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003f57:	48                   	dec    eax
10003f58:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f5b:	55                   	push   ebp
10003f5c:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f5f:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f62:	53                   	push   ebx
10003f63:	e8 fc ff ff ff       	call   10003f64 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003f64: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f68:	83 c4 10             	add    esp,0x10
10003f6b:	89 c6                	mov    esi,eax
10003f6d:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f71:	83 e0 01             	and    eax,0x1
10003f74:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f76: R_386_32	movingWin
10003f7b:	0f 84 e1 01 00 00    	je     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
10003f81:	c6 04 24 00          	mov    BYTE PTR [esp],0x0
10003f85:	85 c0                	test   eax,eax
10003f87:	75 0b                	jne    10003f94 <NIDesktop::handleMouse(int, int, int, int)+0xb4>
10003f89:	a0 38 7f 03 10       	mov    al,ds:0x10037f38	10003f8a: R_386_32	.bss
10003f8e:	83 e0 01             	and    eax,0x1
10003f91:	88 04 24             	mov    BYTE PTR [esp],al
10003f94:	bf 01 00 00 00       	mov    edi,0x1
10003f99:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003f9b: R_386_32	movingWin
10003f9f:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003fa2:	48                   	dec    eax
10003fa3:	39 f8                	cmp    eax,edi
10003fa5:	0f 8e b0 00 00 00    	jle    1000405b <NIDesktop::handleMouse(int, int, int, int)+0x17b>
10003fab:	bd 01 00 00 00       	mov    ebp,0x1
10003fb0:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fb1: R_386_32	movingWin
10003fb5:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10003fb8:	48                   	dec    eax
10003fb9:	39 e8                	cmp    eax,ebp
10003fbb:	0f 8e 94 00 00 00    	jle    10004055 <NIDesktop::handleMouse(int, int, int, int)+0x175>
10003fc1:	8d 04 2f             	lea    eax,[edi+ebp*1]
10003fc4:	89 fa                	mov    edx,edi
10003fc6:	83 e0 1f             	and    eax,0x1f
10003fc9:	83 e2 03             	and    edx,0x3
10003fcc:	09 d0                	or     eax,edx
10003fce:	75 7f                	jne    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10003fd0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003fd4:	2b 05 34 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f34	10003fd6: R_386_32	.bss
10003fda:	01 e8                	add    eax,ebp
10003fdc:	78 2d                	js     1000400b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10003fde:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003fe1:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10003fe7:	7d 22                	jge    1000400b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10003fe9:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003fed:	8d 48 01             	lea    ecx,[eax+0x1]
10003ff0:	83 ec 0c             	sub    esp,0xc
10003ff3:	2b 15 30 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f30	10003ff5: R_386_32	.bss
10003ff9:	51                   	push   ecx
10003ffa:	01 fa                	add    edx,edi
10003ffc:	50                   	push   eax
10003ffd:	8d 42 01             	lea    eax,[edx+0x1]
10004000:	50                   	push   eax
10004001:	52                   	push   edx
10004002:	53                   	push   ebx
10004003:	e8 fc ff ff ff       	call   10004004 <NIDesktop::handleMouse(int, int, int, int)+0x124>	10004004: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004008:	83 c4 20             	add    esp,0x20
1000400b:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
1000400f:	75 3e                	jne    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004011:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004014:	01 e8                	add    eax,ebp
10004016:	2b 05 34 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f34	10004018: R_386_32	.bss
1000401c:	78 31                	js     1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
1000401e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004021:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004027:	7d 26                	jge    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004029:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
1000402f:	8b 11                	mov    edx,DWORD PTR [ecx]
10004031:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10004035:	6a 00                	push   0x0
10004037:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000403a:	01 fa                	add    edx,edi
1000403c:	2b 15 30 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f30	1000403e: R_386_32	.bss
10004042:	52                   	push   edx
10004043:	50                   	push   eax
10004044:	51                   	push   ecx
10004045:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10004049:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000404c:	83 c4 10             	add    esp,0x10
1000404f:	45                   	inc    ebp
10004050:	e9 5b ff ff ff       	jmp    10003fb0 <NIDesktop::handleMouse(int, int, int, int)+0xd0>
10004055:	47                   	inc    edi
10004056:	e9 3e ff ff ff       	jmp    10003f99 <NIDesktop::handleMouse(int, int, int, int)+0xb9>
1000405b:	a1 34 7f 03 10       	mov    eax,ds:0x10037f34	1000405c: R_386_32	.bss
10004060:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
10004063:	29 c7                	sub    edi,eax
10004065:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
10004069:	0f 85 6d 02 00 00    	jne    100042dc <NIDesktop::handleMouse(int, int, int, int)+0x3fc>
1000406f:	89 3c 24             	mov    DWORD PTR [esp],edi
10004072:	85 ff                	test   edi,edi
10004074:	79 07                	jns    1000407d <NIDesktop::handleMouse(int, int, int, int)+0x19d>
10004076:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
1000407d:	8b 4a 20             	mov    ecx,DWORD PTR [edx+0x20]
10004080:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004083:	01 cf                	add    edi,ecx
10004085:	8b aa 0c 04 00 00    	mov    ebp,DWORD PTR [edx+0x40c]
1000408b:	39 ef                	cmp    edi,ebp
1000408d:	7d 05                	jge    10004094 <NIDesktop::handleMouse(int, int, int, int)+0x1b4>
1000408f:	2b 3c 24             	sub    edi,DWORD PTR [esp]
10004092:	eb 0b                	jmp    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x1bf>
10004094:	89 ef                	mov    edi,ebp
10004096:	2b 3c 24             	sub    edi,DWORD PTR [esp]
10004099:	0f 88 c3 00 00 00    	js     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
1000409f:	85 ff                	test   edi,edi
100040a1:	0f 84 bb 00 00 00    	je     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040a7:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100040ab:	29 c2                	sub    edx,eax
100040ad:	89 d0                	mov    eax,edx
100040af:	79 02                	jns    100040b3 <NIDesktop::handleMouse(int, int, int, int)+0x1d3>
100040b1:	31 d2                	xor    edx,edx
100040b3:	01 c8                	add    eax,ecx
100040b5:	39 c5                	cmp    ebp,eax
100040b7:	7e 04                	jle    100040bd <NIDesktop::handleMouse(int, int, int, int)+0x1dd>
100040b9:	29 d0                	sub    eax,edx
100040bb:	eb 08                	jmp    100040c5 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
100040bd:	89 e8                	mov    eax,ebp
100040bf:	29 d0                	sub    eax,edx
100040c1:	79 02                	jns    100040c5 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
100040c3:	31 c0                	xor    eax,eax
100040c5:	83 ec 0c             	sub    esp,0xc
100040c8:	8d 2c 10             	lea    ebp,[eax+edx*1]
100040cb:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100040cf:	55                   	push   ebp
100040d0:	2b 05 30 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f30	100040d2: R_386_32	.bss
100040d6:	52                   	push   edx
100040d7:	8d 48 01             	lea    ecx,[eax+0x1]
100040da:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
100040de:	51                   	push   ecx
100040df:	50                   	push   eax
100040e0:	53                   	push   ebx
100040e1:	e8 fc ff ff ff       	call   100040e2 <NIDesktop::handleMouse(int, int, int, int)+0x202>	100040e2: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100040e6:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100040ea:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	100040ec: R_386_32	movingWin
100040f0:	83 c4 14             	add    esp,0x14
100040f3:	2b 05 30 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f30	100040f5: R_386_32	.bss
100040f9:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
100040fc:	55                   	push   ebp
100040fd:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004101:	52                   	push   edx
10004102:	50                   	push   eax
10004103:	48                   	dec    eax
10004104:	50                   	push   eax
10004105:	53                   	push   ebx
10004106:	e8 fc ff ff ff       	call   10004107 <NIDesktop::handleMouse(int, int, int, int)+0x227>	10004107: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000410b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000410e:	83 c4 18             	add    esp,0x18
10004111:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004117:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004119:	6a 00                	push   0x0
1000411b:	6a 01                	push   0x1
1000411d:	57                   	push   edi
1000411e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004121:	2b 05 30 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f30	10004123: R_386_32	.bss
10004127:	50                   	push   eax
10004128:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000412c:	52                   	push   edx
1000412d:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004130:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004133:	83 c4 18             	add    esp,0x18
10004136:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000413c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000413e:	6a 00                	push   0x0
10004140:	6a 01                	push   0x1
10004142:	57                   	push   edi
10004143:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004145: R_386_32	movingWin
10004149:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000414c:	2b 05 30 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f30	1000414e: R_386_32	.bss
10004152:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
10004155:	48                   	dec    eax
10004156:	50                   	push   eax
10004157:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000415b:	52                   	push   edx
1000415c:	ff 51 28             	call   DWORD PTR [ecx+0x28]
1000415f:	83 c4 20             	add    esp,0x20
10004162:	85 f6                	test   esi,esi
10004164:	0f 84 3e 01 00 00    	je     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000416a:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
1000416f:	0f 84 33 01 00 00    	je     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004175:	8b 0d 38 7f 03 10    	mov    ecx,DWORD PTR ds:0x10037f38	10004177: R_386_32	.bss
1000417b:	83 e1 01             	and    ecx,0x1
1000417e:	0f 85 e7 00 00 00    	jne    1000426b <NIDesktop::handleMouse(int, int, int, int)+0x38b>
10004184:	a1 00 00 00 00       	mov    eax,ds:0x0	10004185: R_386_32	milliTenthsSinceBoot
10004189:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	1000418b: R_386_32	milliTenthsSinceBoot
1000418f:	2b 05 28 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f28	10004191: R_386_32	.bss
10004195:	bf b7 0b 00 00       	mov    edi,0xbb7
1000419a:	1b 15 2c 7f 03 10    	sbb    edx,DWORD PTR ds:0x10037f2c	1000419c: R_386_32	.bss
100041a0:	39 c7                	cmp    edi,eax
100041a2:	19 d1                	sbb    ecx,edx
100041a4:	0f 82 95 00 00 00    	jb     1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041aa:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100041ad:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041b0:	29 d0                	sub    eax,edx
100041b2:	83 f8 18             	cmp    eax,0x18
100041b5:	0f 8f 84 00 00 00    	jg     1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041bb:	f6 46 3c 01          	test   BYTE PTR [esi+0x3c],0x1
100041bf:	75 7e                	jne    1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041c1:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100041c5:	74 26                	je     100041ed <NIDesktop::handleMouse(int, int, int, int)+0x30d>
100041c7:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
100041ca:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
100041cd:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
100041d0:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
100041d3:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
100041d6:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
100041d9:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
100041dc:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
100041df:	57                   	push   edi
100041e0:	57                   	push   edi
100041e1:	56                   	push   esi
100041e2:	53                   	push   ebx
100041e3:	e8 fc ff ff ff       	call   100041e4 <NIDesktop::handleMouse(int, int, int, int)+0x304>	100041e4: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
100041e8:	83 c4 10             	add    esp,0x10
100041eb:	eb 3b                	jmp    10004228 <NIDesktop::handleMouse(int, int, int, int)+0x348>
100041ed:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
100041f0:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
100041f7:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
100041fa:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004201:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004204:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004207:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000420a:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
1000420d:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004210:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004213:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
10004219:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000421c:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000421f:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
10004225:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004228:	83 ec 0c             	sub    esp,0xc
1000422b:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
1000422f:	56                   	push   esi
10004230:	e8 fc ff ff ff       	call   10004231 <NIDesktop::handleMouse(int, int, int, int)+0x351>	10004231: R_386_PC32	NIWindow::rerender()
10004235:	89 1c 24             	mov    DWORD PTR [esp],ebx
10004238:	e8 fc ff ff ff       	call   10004239 <NIDesktop::handleMouse(int, int, int, int)+0x359>	10004239: R_386_PC32	NIDesktop::completeRefresh()
1000423d:	eb 11                	jmp    10004250 <NIDesktop::handleMouse(int, int, int, int)+0x370>
1000423f:	8b 03                	mov    eax,DWORD PTR [ebx]
10004241:	8b 00                	mov    eax,DWORD PTR [eax]
10004243:	39 30                	cmp    DWORD PTR [eax],esi
10004245:	74 0c                	je     10004253 <NIDesktop::handleMouse(int, int, int, int)+0x373>
10004247:	51                   	push   ecx
10004248:	51                   	push   ecx
10004249:	56                   	push   esi
1000424a:	53                   	push   ebx
1000424b:	e8 fc ff ff ff       	call   1000424c <NIDesktop::handleMouse(int, int, int, int)+0x36c>	1000424c: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
10004250:	83 c4 10             	add    esp,0x10
10004253:	a1 00 00 00 00       	mov    eax,ds:0x0	10004254: R_386_32	milliTenthsSinceBoot
10004258:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	1000425a: R_386_32	milliTenthsSinceBoot
1000425e:	a3 28 7f 03 10       	mov    ds:0x10037f28,eax	1000425f: R_386_32	.bss
10004263:	89 15 2c 7f 03 10    	mov    DWORD PTR ds:0x10037f2c,edx	10004265: R_386_32	.bss
10004269:	eb 3d                	jmp    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000426b:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	1000426d: R_386_32	movingWin
10004272:	75 34                	jne    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004274:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004277:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
1000427a:	83 f8 18             	cmp    eax,0x18
1000427d:	7f 29                	jg     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000427f:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004283:	75 23                	jne    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004285:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004288:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	1000428a: R_386_32	movingWin
1000428e:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
10004291:	a3 30 7f 03 10       	mov    ds:0x10037f30,eax	10004292: R_386_32	.bss
10004296:	89 15 34 7f 03 10    	mov    DWORD PTR ds:0x10037f34,edx	10004298: R_386_32	.bss
1000429c:	52                   	push   edx
1000429d:	52                   	push   edx
1000429e:	56                   	push   esi
1000429f:	53                   	push   ebx
100042a0:	e8 fc ff ff ff       	call   100042a1 <NIDesktop::handleMouse(int, int, int, int)+0x3c1>	100042a1: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100042a5:	83 c4 10             	add    esp,0x10
100042a8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100042ab:	83 ec 0c             	sub    esp,0xc
100042ae:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100042b4:	8b 0a                	mov    ecx,DWORD PTR [edx]
100042b6:	6a 00                	push   0x0
100042b8:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100042bb:	05 00 00 00 00       	add    eax,0x0	100042bc: R_386_32	___mouse_data
100042c0:	50                   	push   eax
100042c1:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
100042c4:	ff 73 08             	push   DWORD PTR [ebx+0x8]
100042c7:	52                   	push   edx
100042c8:	ff 51 30             	call   DWORD PTR [ecx+0x30]
100042cb:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100042cf:	a3 38 7f 03 10       	mov    ds:0x10037f38,eax	100042d0: R_386_32	.bss
100042d4:	83 c4 3c             	add    esp,0x3c
100042d7:	5b                   	pop    ebx
100042d8:	5e                   	pop    esi
100042d9:	5f                   	pop    edi
100042da:	5d                   	pop    ebp
100042db:	c3                   	ret    
100042dc:	89 7a 18             	mov    DWORD PTR [edx+0x18],edi
100042df:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100042e1: R_386_32	movingWin
100042e9:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100042ec:	2b 05 30 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f30	100042ee: R_386_32	.bss
100042f2:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
100042f5:	50                   	push   eax
100042f6:	50                   	push   eax
100042f7:	52                   	push   edx
100042f8:	53                   	push   ebx
100042f9:	e8 fc ff ff ff       	call   100042fa <NIDesktop::handleMouse(int, int, int, int)+0x41a>	100042fa: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100042fe:	83 c4 10             	add    esp,0x10
10004301:	e9 5c fe ff ff       	jmp    10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>

10004306 <clipdrawHandleMouse(int, int, int, int)>:
10004306:	83 ec 18             	sub    esp,0x18
10004309:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000430d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004311:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004315:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004319:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000431b: R_386_32	mouseDesktop
1000431f:	e8 fc ff ff ff       	call   10004320 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004320: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004324:	83 c4 2c             	add    esp,0x2c
10004327:	c3                   	ret    

10004328 <drawVGAChar(int, int, int)>:
10004328:	55                   	push   ebp
10004329:	57                   	push   edi
1000432a:	56                   	push   esi
1000432b:	53                   	push   ebx
1000432c:	31 db                	xor    ebx,ebx
1000432e:	83 ec 1c             	sub    esp,0x1c
10004331:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10004335:	c1 e0 04             	shl    eax,0x4
10004338:	89 04 24             	mov    DWORD PTR [esp],eax
1000433b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000433f:	c1 e0 04             	shl    eax,0x4
10004342:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004346:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000434a:	c1 e0 03             	shl    eax,0x3
1000434d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004351:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004354:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10004358:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	1000435b: R_386_32	cp
1000435f:	8d 3c 19             	lea    edi,[ecx+ebx*1]
10004362:	31 f6                	xor    esi,esi
10004364:	84 c0                	test   al,al
10004366:	79 22                	jns    1000438a <drawVGAChar(int, int, int)+0x62>
10004368:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
1000436c:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000436e: R_386_32	screen
10004372:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004374:	6a 00                	push   0x0
10004376:	57                   	push   edi
10004377:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000437b:	8d 2c 06             	lea    ebp,[esi+eax*1]
1000437e:	55                   	push   ebp
1000437f:	52                   	push   edx
10004380:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10004383:	83 c4 10             	add    esp,0x10
10004386:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
1000438a:	d1 e0                	shl    eax,1
1000438c:	46                   	inc    esi
1000438d:	83 fe 08             	cmp    esi,0x8
10004390:	75 d2                	jne    10004364 <drawVGAChar(int, int, int)+0x3c>
10004392:	43                   	inc    ebx
10004393:	83 fb 10             	cmp    ebx,0x10
10004396:	75 b9                	jne    10004351 <drawVGAChar(int, int, int)+0x29>
10004398:	83 c4 1c             	add    esp,0x1c
1000439b:	5b                   	pop    ebx
1000439c:	5e                   	pop    esi
1000439d:	5f                   	pop    edi
1000439e:	5d                   	pop    ebp
1000439f:	c3                   	ret    

100043a0 <monikaBsod(char*)>:
100043a0:	55                   	push   ebp
100043a1:	57                   	push   edi
100043a2:	31 ff                	xor    edi,edi
100043a4:	56                   	push   esi
100043a5:	53                   	push   ebx
100043a6:	31 db                	xor    ebx,ebx
100043a8:	83 ec 24             	sub    esp,0x24
100043ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100043ac: R_386_32	screen
100043b0:	8b 10                	mov    edx,DWORD PTR [eax]
100043b2:	68 ff ff ff 00       	push   0xffffff
100043b7:	50                   	push   eax
100043b8:	ff 52 40             	call   DWORD PTR [edx+0x40]
100043bb:	83 c4 10             	add    esp,0x10
100043be:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	100043c0: R_386_32	justMonika
100043c4:	8d 43 01             	lea    eax,[ebx+0x1]
100043c7:	84 c9                	test   cl,cl
100043c9:	79 0e                	jns    100043d9 <monikaBsod(char*)+0x39>
100043cb:	8d 51 80             	lea    edx,[ecx-0x80]
100043ce:	83 c3 02             	add    ebx,0x2
100043d1:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	100043d3: R_386_32	justMonika
100043d7:	eb 04                	jmp    100043dd <monikaBsod(char*)+0x3d>
100043d9:	89 c3                	mov    ebx,eax
100043db:	b2 01                	mov    dl,0x1
100043dd:	0f b6 c1             	movzx  eax,cl
100043e0:	83 e1 03             	and    ecx,0x3
100043e3:	89 c6                	mov    esi,eax
100043e5:	6b c9 55             	imul   ecx,ecx,0x55
100043e8:	c1 fe 05             	sar    esi,0x5
100043eb:	c1 f8 02             	sar    eax,0x2
100043ee:	83 e6 03             	and    esi,0x3
100043f1:	83 e0 07             	and    eax,0x7
100043f4:	6b f6 55             	imul   esi,esi,0x55
100043f7:	6b c0 24             	imul   eax,eax,0x24
100043fa:	c1 e6 10             	shl    esi,0x10
100043fd:	c1 e0 08             	shl    eax,0x8
10004400:	09 f0                	or     eax,esi
10004402:	31 f6                	xor    esi,esi
10004404:	09 c8                	or     eax,ecx
10004406:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000440a:	0f b6 c2             	movzx  eax,dl
1000440d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004411:	8d 04 37             	lea    eax,[edi+esi*1]
10004414:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10004418:	7f 10                	jg     1000442a <monikaBsod(char*)+0x8a>
1000441a:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
1000441e:	81 ff ff af 04 00    	cmp    edi,0x4afff
10004424:	7e 98                	jle    100043be <monikaBsod(char*)+0x1e>
10004426:	31 db                	xor    ebx,ebx
10004428:	eb 25                	jmp    1000444f <monikaBsod(char*)+0xaf>
1000442a:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000442c: R_386_32	screen
10004430:	b9 80 02 00 00       	mov    ecx,0x280
10004435:	8b 2a                	mov    ebp,DWORD PTR [edx]
10004437:	46                   	inc    esi
10004438:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000443c:	99                   	cdq    
1000443d:	f7 f9                	idiv   ecx
1000443f:	50                   	push   eax
10004440:	52                   	push   edx
10004441:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004443: R_386_32	screen
10004447:	ff 55 24             	call   DWORD PTR [ebp+0x24]
1000444a:	83 c4 10             	add    esp,0x10
1000444d:	eb c2                	jmp    10004411 <monikaBsod(char*)+0x71>
1000444f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10004453:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
10004457:	84 c0                	test   al,al
10004459:	74 1d                	je     10004478 <monikaBsod(char*)+0xd8>
1000445b:	b9 19 00 00 00       	mov    ecx,0x19
10004460:	52                   	push   edx
10004461:	50                   	push   eax
10004462:	89 d8                	mov    eax,ebx
10004464:	43                   	inc    ebx
10004465:	99                   	cdq    
10004466:	f7 f9                	idiv   ecx
10004468:	83 c0 0a             	add    eax,0xa
1000446b:	42                   	inc    edx
1000446c:	50                   	push   eax
1000446d:	52                   	push   edx
1000446e:	e8 fc ff ff ff       	call   1000446f <monikaBsod(char*)+0xcf>	1000446f: R_386_PC32	drawVGAChar(int, int, int)
10004473:	83 c4 10             	add    esp,0x10
10004476:	eb d7                	jmp    1000444f <monikaBsod(char*)+0xaf>
10004478:	f4                   	hlt    
10004479:	eb fd                	jmp    10004478 <monikaBsod(char*)+0xd8>
1000447b:	90                   	nop

1000447c <NIWindow::invalidate()>:
1000447c:	53                   	push   ebx
1000447d:	83 ec 08             	sub    esp,0x8
10004480:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004484:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004488:	74 1d                	je     100044a7 <NIWindow::invalidate()+0x2b>
1000448a:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
1000448e:	74 17                	je     100044a7 <NIWindow::invalidate()+0x2b>
10004490:	83 ec 0c             	sub    esp,0xc
10004493:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004496:	e8 fc ff ff ff       	call   10004497 <NIWindow::invalidate()+0x1b>	10004497: R_386_PC32	free
1000449b:	59                   	pop    ecx
1000449c:	ff 73 14             	push   DWORD PTR [ebx+0x14]
1000449f:	e8 fc ff ff ff       	call   100044a0 <NIWindow::invalidate()+0x24>	100044a0: R_386_PC32	free
100044a4:	83 c4 10             	add    esp,0x10
100044a7:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100044ae:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100044b5:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
100044b9:	83 c4 08             	add    esp,0x8
100044bc:	5b                   	pop    ebx
100044bd:	c3                   	ret    

100044be <NIWindow::putpixel(int, int, unsigned int)>:
100044be:	56                   	push   esi
100044bf:	53                   	push   ebx
100044c0:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100044c4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100044c8:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
100044cb:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
100044cf:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100044d3:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100044d7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100044da:	83 fe 04             	cmp    esi,0x4
100044dd:	75 05                	jne    100044e4 <NIWindow::putpixel(int, int, unsigned int)+0x26>
100044df:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
100044e2:	eb 0e                	jmp    100044f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100044e4:	83 fe 02             	cmp    esi,0x2
100044e7:	75 06                	jne    100044ef <NIWindow::putpixel(int, int, unsigned int)+0x31>
100044e9:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
100044ed:	eb 03                	jmp    100044f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100044ef:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
100044f2:	5b                   	pop    ebx
100044f3:	5e                   	pop    esi
100044f4:	c3                   	ret    
100044f5:	90                   	nop

100044f6 <NIWindow::rerender()>:
100044f6:	55                   	push   ebp
100044f7:	57                   	push   edi
100044f8:	56                   	push   esi
100044f9:	53                   	push   ebx
100044fa:	83 ec 0c             	sub    esp,0xc
100044fd:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004501:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004505:	74 0c                	je     10004513 <NIWindow::rerender()+0x1d>
10004507:	83 ec 0c             	sub    esp,0xc
1000450a:	53                   	push   ebx
1000450b:	e8 fc ff ff ff       	call   1000450c <NIWindow::rerender()+0x16>	1000450c: R_386_PC32	NIWindow::invalidate()
10004510:	83 c4 10             	add    esp,0x10
10004513:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10004516:	83 ec 0c             	sub    esp,0xc
10004519:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
1000451c:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004523:	50                   	push   eax
10004524:	e8 fc ff ff ff       	call   10004525 <NIWindow::rerender()+0x2f>	10004525: R_386_PC32	malloc
10004529:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
1000452d:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004530:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004534:	89 34 24             	mov    DWORD PTR [esp],esi
10004537:	e8 fc ff ff ff       	call   10004538 <NIWindow::rerender()+0x42>	10004538: R_386_PC32	malloc
1000453c:	83 c4 10             	add    esp,0x10
1000453f:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004542:	31 c0                	xor    eax,eax
10004544:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004547:	7e 6a                	jle    100045b3 <NIWindow::rerender()+0xbd>
10004549:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10004550:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004553:	01 d6                	add    esi,edx
10004555:	83 f8 06             	cmp    eax,0x6
10004558:	7f 1b                	jg     10004575 <NIWindow::rerender()+0x7f>
1000455a:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	1000455d: R_386_32	curveLookup7
10004561:	66 89 0e             	mov    WORD PTR [esi],cx
10004564:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004567:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	1000456a: R_386_32	curveLookup7
1000456e:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
10004573:	eb 3b                	jmp    100045b0 <NIWindow::rerender()+0xba>
10004575:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004578:	8d 79 fa             	lea    edi,[ecx-0x6]
1000457b:	39 c7                	cmp    edi,eax
1000457d:	7f 22                	jg     100045a1 <NIWindow::rerender()+0xab>
1000457f:	29 c1                	sub    ecx,eax
10004581:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004584: R_386_32	curveLookup7
10004588:	66 89 0e             	mov    WORD PTR [esi],cx
1000458b:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000458e:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004591:	29 c1                	sub    ecx,eax
10004593:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004596: R_386_32	curveLookup7
1000459a:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
1000459f:	eb 0f                	jmp    100045b0 <NIWindow::rerender()+0xba>
100045a1:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
100045a6:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100045a9:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
100045b0:	40                   	inc    eax
100045b1:	eb 91                	jmp    10004544 <NIWindow::rerender()+0x4e>
100045b3:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
100045b7:	31 ff                	xor    edi,edi
100045b9:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
100045bc:	7e 30                	jle    100045ee <NIWindow::rerender()+0xf8>
100045be:	31 c0                	xor    eax,eax
100045c0:	83 ff 19             	cmp    edi,0x19
100045c3:	0f 9e c0             	setle  al
100045c6:	31 ed                	xor    ebp,ebp
100045c8:	89 c6                	mov    esi,eax
100045ca:	4e                   	dec    esi
100045cb:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
100045d1:	81 c6 ff ff ff 00    	add    esi,0xffffff
100045d7:	39 6b 20             	cmp    DWORD PTR [ebx+0x20],ebp
100045da:	7e 0f                	jle    100045eb <NIWindow::rerender()+0xf5>
100045dc:	56                   	push   esi
100045dd:	57                   	push   edi
100045de:	55                   	push   ebp
100045df:	45                   	inc    ebp
100045e0:	53                   	push   ebx
100045e1:	e8 fc ff ff ff       	call   100045e2 <NIWindow::rerender()+0xec>	100045e2: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100045e6:	83 c4 10             	add    esp,0x10
100045e9:	eb ec                	jmp    100045d7 <NIWindow::rerender()+0xe1>
100045eb:	47                   	inc    edi
100045ec:	eb cb                	jmp    100045b9 <NIWindow::rerender()+0xc3>
100045ee:	83 c4 0c             	add    esp,0xc
100045f1:	5b                   	pop    ebx
100045f2:	5e                   	pop    esi
100045f3:	5f                   	pop    edi
100045f4:	5d                   	pop    ebp
100045f5:	c3                   	ret    

100045f6 <NIWindow::changeContext(NIContext*, int, int)>:
100045f6:	55                   	push   ebp
100045f7:	57                   	push   edi
100045f8:	56                   	push   esi
100045f9:	53                   	push   ebx
100045fa:	83 ec 18             	sub    esp,0x18
100045fd:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004601:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004605:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10004609:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000460d:	53                   	push   ebx
1000460e:	e8 fc ff ff ff       	call   1000460f <NIWindow::changeContext(NIContext*, int, int)+0x19>	1000460f: R_386_PC32	NIWindow::invalidate()
10004613:	89 33                	mov    DWORD PTR [ebx],esi
10004615:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
10004618:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
1000461b:	83 c4 10             	add    esp,0x10
1000461e:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004624:	83 f8 08             	cmp    eax,0x8
10004627:	7f 09                	jg     10004632 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10004629:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10004630:	eb 15                	jmp    10004647 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004632:	83 f8 10             	cmp    eax,0x10
10004635:	7f 09                	jg     10004640 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004637:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
1000463e:	eb 07                	jmp    10004647 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004640:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004647:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
1000464b:	83 c4 0c             	add    esp,0xc
1000464e:	5b                   	pop    ebx
1000464f:	5e                   	pop    esi
10004650:	5f                   	pop    edi
10004651:	5d                   	pop    ebp
10004652:	e9 9f fe ff ff       	jmp    100044f6 <NIWindow::rerender()>
10004657:	90                   	nop

10004658 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10004658:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000465c:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10004660:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
10004664:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004667:	c7 40 3c 00 00 00 00 	mov    DWORD PTR [eax+0x3c],0x0
1000466e:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004672:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
10004676:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004679:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004680:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10004687:	e9 6a ff ff ff       	jmp    100045f6 <NIWindow::changeContext(NIContext*, int, int)>

1000468c <NIWindow::request()>:
1000468c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004690:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
10004694:	75 05                	jne    1000469b <NIWindow::request()+0xf>
10004696:	e9 5b fe ff ff       	jmp    100044f6 <NIWindow::rerender()>
1000469b:	c3                   	ret    

1000469c <NIWindow::SHADOW_TEST()>:
1000469c:	55                   	push   ebp
1000469d:	57                   	push   edi
1000469e:	56                   	push   esi
1000469f:	53                   	push   ebx
100046a0:	83 ec 28             	sub    esp,0x28
100046a3:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
100046a7:	53                   	push   ebx
100046a8:	e8 fc ff ff ff       	call   100046a9 <NIWindow::SHADOW_TEST()+0xd>	100046a9: R_386_PC32	NIWindow::request()
100046ad:	83 c4 10             	add    esp,0x10
100046b0:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100046b3:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100046b6:	74 10                	je     100046c8 <NIWindow::SHADOW_TEST()+0x2c>
100046b8:	83 ec 0c             	sub    esp,0xc
100046bb:	68 7c 4c 00 10       	push   0x10004c7c	100046bc: R_386_32	.text
100046c0:	e8 fc ff ff ff       	call   100046c1 <NIWindow::SHADOW_TEST()+0x25>	100046c1: R_386_PC32	KePanic(char const*)
100046c5:	83 c4 10             	add    esp,0x10
100046c8:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100046cc:	0f 85 28 01 00 00    	jne    100047fa <NIWindow::SHADOW_TEST()+0x15e>
100046d2:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
100046da:	31 ff                	xor    edi,edi
100046dc:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
100046df:	0f 8e 15 01 00 00    	jle    100047fa <NIWindow::SHADOW_TEST()+0x15e>
100046e5:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100046e8:	8d 04 b8             	lea    eax,[eax+edi*4]
100046eb:	0f b7 30             	movzx  esi,WORD PTR [eax]
100046ee:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
100046f2:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
100046f6:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100046fa:	89 34 24             	mov    DWORD PTR [esp],esi
100046fd:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004700:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004703:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10004707:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
1000470a:	0f 8e d4 00 00 00    	jle    100047e4 <NIWindow::SHADOW_TEST()+0x148>
10004710:	83 ff 05             	cmp    edi,0x5
10004713:	7e 1f                	jle    10004734 <NIWindow::SHADOW_TEST()+0x98>
10004715:	8d 41 fb             	lea    eax,[ecx-0x5]
10004718:	39 f8                	cmp    eax,edi
1000471a:	7e 18                	jle    10004734 <NIWindow::SHADOW_TEST()+0x98>
1000471c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004720:	83 c0 05             	add    eax,0x5
10004723:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004726:	7d 0c                	jge    10004734 <NIWindow::SHADOW_TEST()+0x98>
10004728:	8d 45 fb             	lea    eax,[ebp-0x5]
1000472b:	3b 04 24             	cmp    eax,DWORD PTR [esp]
1000472e:	0f 8f a8 00 00 00    	jg     100047dc <NIWindow::SHADOW_TEST()+0x140>
10004734:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
10004738:	be ea 01 00 00       	mov    esi,0x1ea
1000473d:	29 f9                	sub    ecx,edi
1000473f:	89 f0                	mov    eax,esi
10004741:	83 c1 04             	add    ecx,0x4
10004744:	99                   	cdq    
10004745:	f7 f9                	idiv   ecx
10004747:	89 c1                	mov    ecx,eax
10004749:	89 f0                	mov    eax,esi
1000474b:	99                   	cdq    
1000474c:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10004750:	83 f8 0a             	cmp    eax,0xa
10004753:	7d 05                	jge    1000475a <NIWindow::SHADOW_TEST()+0xbe>
10004755:	b8 0a 00 00 00       	mov    eax,0xa
1000475a:	39 c1                	cmp    ecx,eax
1000475c:	7d 02                	jge    10004760 <NIWindow::SHADOW_TEST()+0xc4>
1000475e:	89 c1                	mov    ecx,eax
10004760:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10004763:	b8 ea 01 00 00       	mov    eax,0x1ea
10004768:	83 c5 04             	add    ebp,0x4
1000476b:	99                   	cdq    
1000476c:	f7 fd                	idiv   ebp
1000476e:	89 c6                	mov    esi,eax
10004770:	83 f8 0a             	cmp    eax,0xa
10004773:	7d 05                	jge    1000477a <NIWindow::SHADOW_TEST()+0xde>
10004775:	be 0a 00 00 00       	mov    esi,0xa
1000477a:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000477d:	8d 68 05             	lea    ebp,[eax+0x5]
10004780:	b8 ea 01 00 00       	mov    eax,0x1ea
10004785:	99                   	cdq    
10004786:	f7 fd                	idiv   ebp
10004788:	39 c6                	cmp    esi,eax
1000478a:	7d 02                	jge    1000478e <NIWindow::SHADOW_TEST()+0xf2>
1000478c:	89 c6                	mov    esi,eax
1000478e:	89 f0                	mov    eax,esi
10004790:	89 ca                	mov    edx,ecx
10004792:	0f af c6             	imul   eax,esi
10004795:	0f af d1             	imul   edx,ecx
10004798:	0f af f1             	imul   esi,ecx
1000479b:	01 d0                	add    eax,edx
1000479d:	8d 04 c6             	lea    eax,[esi+eax*8]
100047a0:	c1 f8 08             	sar    eax,0x8
100047a3:	83 f8 66             	cmp    eax,0x66
100047a6:	7e 46                	jle    100047ee <NIWindow::SHADOW_TEST()+0x152>
100047a8:	8d 50 9a             	lea    edx,[eax-0x66]
100047ab:	d1 fa                	sar    edx,1
100047ad:	8d 42 66             	lea    eax,[edx+0x66]
100047b0:	83 f8 73             	cmp    eax,0x73
100047b3:	7e 39                	jle    100047ee <NIWindow::SHADOW_TEST()+0x152>
100047b5:	83 ea 0d             	sub    edx,0xd
100047b8:	c1 fa 02             	sar    edx,0x2
100047bb:	8d 42 73             	lea    eax,[edx+0x73]
100047be:	83 f8 7f             	cmp    eax,0x7f
100047c1:	7f 19                	jg     100047dc <NIWindow::SHADOW_TEST()+0x140>
100047c3:	50                   	push   eax
100047c4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100047c7:	01 f8                	add    eax,edi
100047c9:	50                   	push   eax
100047ca:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100047ce:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
100047d1:	50                   	push   eax
100047d2:	ff 33                	push   DWORD PTR [ebx]
100047d4:	e8 fc ff ff ff       	call   100047d5 <NIWindow::SHADOW_TEST()+0x139>	100047d5: R_386_PC32	NIContext::drvDarken4(int, int, int)
100047d9:	83 c4 10             	add    esp,0x10
100047dc:	ff 04 24             	inc    DWORD PTR [esp]
100047df:	e9 19 ff ff ff       	jmp    100046fd <NIWindow::SHADOW_TEST()+0x61>
100047e4:	47                   	inc    edi
100047e5:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
100047e9:	e9 ee fe ff ff       	jmp    100046dc <NIWindow::SHADOW_TEST()+0x40>
100047ee:	83 f8 0a             	cmp    eax,0xa
100047f1:	7d d0                	jge    100047c3 <NIWindow::SHADOW_TEST()+0x127>
100047f3:	b8 0a 00 00 00       	mov    eax,0xa
100047f8:	eb c9                	jmp    100047c3 <NIWindow::SHADOW_TEST()+0x127>
100047fa:	83 c4 1c             	add    esp,0x1c
100047fd:	5b                   	pop    ebx
100047fe:	5e                   	pop    esi
100047ff:	5f                   	pop    edi
10004800:	5d                   	pop    ebp
10004801:	c3                   	ret    

10004802 <NIWindow::realdraw()>:
10004802:	55                   	push   ebp
10004803:	57                   	push   edi
10004804:	56                   	push   esi
10004805:	53                   	push   ebx
10004806:	83 ec 18             	sub    esp,0x18
10004809:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000480d:	53                   	push   ebx
1000480e:	e8 fc ff ff ff       	call   1000480f <NIWindow::realdraw()+0xd>	1000480f: R_386_PC32	NIWindow::request()
10004813:	83 c4 10             	add    esp,0x10
10004816:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004819:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
1000481c:	74 10                	je     1000482e <NIWindow::realdraw()+0x2c>
1000481e:	83 ec 0c             	sub    esp,0xc
10004821:	68 7c 4c 00 10       	push   0x10004c7c	10004822: R_386_32	.text
10004826:	e8 fc ff ff ff       	call   10004827 <NIWindow::realdraw()+0x25>	10004827: R_386_PC32	KePanic(char const*)
1000482b:	83 c4 10             	add    esp,0x10
1000482e:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004832:	75 46                	jne    1000487a <NIWindow::realdraw()+0x78>
10004834:	31 f6                	xor    esi,esi
10004836:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
10004839:	7e 3f                	jle    1000487a <NIWindow::realdraw()+0x78>
1000483b:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000483e:	8d 04 b0             	lea    eax,[eax+esi*4]
10004841:	0f b7 28             	movzx  ebp,WORD PTR [eax]
10004844:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
10004848:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000484b:	89 c2                	mov    edx,eax
1000484d:	29 fa                	sub    edx,edi
1000484f:	39 ea                	cmp    edx,ebp
10004851:	7e 24                	jle    10004877 <NIWindow::realdraw()+0x75>
10004853:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004856:	0f af c6             	imul   eax,esi
10004859:	01 e8                	add    eax,ebp
1000485b:	ff 34 82             	push   DWORD PTR [edx+eax*4]
1000485e:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004861:	01 f0                	add    eax,esi
10004863:	50                   	push   eax
10004864:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10004867:	01 e8                	add    eax,ebp
10004869:	45                   	inc    ebp
1000486a:	50                   	push   eax
1000486b:	ff 33                	push   DWORD PTR [ebx]
1000486d:	e8 fc ff ff ff       	call   1000486e <NIWindow::realdraw()+0x6c>	1000486e: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004872:	83 c4 10             	add    esp,0x10
10004875:	eb d1                	jmp    10004848 <NIWindow::realdraw()+0x46>
10004877:	46                   	inc    esi
10004878:	eb bc                	jmp    10004836 <NIWindow::realdraw()+0x34>
1000487a:	83 c4 0c             	add    esp,0xc
1000487d:	5b                   	pop    ebx
1000487e:	5e                   	pop    esi
1000487f:	5f                   	pop    edi
10004880:	5d                   	pop    ebp
10004881:	c3                   	ret    

10004882 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004882:	53                   	push   ebx
10004883:	83 ec 14             	sub    esp,0x14
10004886:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000488a:	6a 0c                	push   0xc
1000488c:	e8 fc ff ff ff       	call   1000488d <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	1000488d: R_386_PC32	malloc
10004891:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10004895:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000489c:	89 10                	mov    DWORD PTR [eax],edx
1000489e:	83 c4 10             	add    esp,0x10
100048a1:	8b 13                	mov    edx,DWORD PTR [ebx]
100048a3:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100048a6:	85 d2                	test   edx,edx
100048a8:	74 05                	je     100048af <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
100048aa:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
100048ad:	eb 03                	jmp    100048b2 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
100048af:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100048b2:	89 03                	mov    DWORD PTR [ebx],eax
100048b4:	83 c4 08             	add    esp,0x8
100048b7:	5b                   	pop    ebx
100048b8:	c3                   	ret    
100048b9:	90                   	nop

100048ba <List<NIWindow*>::deleteElement(NIWindow*&)>:
100048ba:	57                   	push   edi
100048bb:	56                   	push   esi
100048bc:	53                   	push   ebx
100048bd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100048c1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100048c5:	8b 19                	mov    ebx,DWORD PTR [ecx]
100048c7:	85 db                	test   ebx,ebx
100048c9:	74 5e                	je     10004929 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100048cb:	8b 30                	mov    esi,DWORD PTR [eax]
100048cd:	89 da                	mov    edx,ebx
100048cf:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
100048d2:	8b 3a                	mov    edi,DWORD PTR [edx]
100048d4:	85 c0                	test   eax,eax
100048d6:	74 08                	je     100048e0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100048d8:	39 f7                	cmp    edi,esi
100048da:	73 04                	jae    100048e0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100048dc:	89 c2                	mov    edx,eax
100048de:	eb ef                	jmp    100048cf <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
100048e0:	39 f7                	cmp    edi,esi
100048e2:	75 45                	jne    10004929 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100048e4:	39 d3                	cmp    ebx,edx
100048e6:	75 18                	jne    10004900 <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
100048e8:	89 01                	mov    DWORD PTR [ecx],eax
100048ea:	85 c0                	test   eax,eax
100048ec:	75 09                	jne    100048f7 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
100048ee:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
100048f5:	eb 1e                	jmp    10004915 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
100048f7:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
100048fe:	eb 15                	jmp    10004915 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004900:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004903:	85 c0                	test   eax,eax
10004905:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004908:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000490b:	74 05                	je     10004912 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
1000490d:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10004910:	eb 03                	jmp    10004915 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004912:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004915:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
1000491d:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10004921:	5b                   	pop    ebx
10004922:	5e                   	pop    esi
10004923:	5f                   	pop    edi
10004924:	e9 fc ff ff ff       	jmp    10004925 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004925: R_386_PC32	operator delete(void*, unsigned long)
10004929:	5b                   	pop    ebx
1000492a:	5e                   	pop    esi
1000492b:	5f                   	pop    edi
1000492c:	c3                   	ret    
1000492d:	53                   	push   ebx
1000492e:	46                   	inc    esi
1000492f:	4e                   	dec    esi
10004930:	43                   	inc    ebx
10004931:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004934:	4e                   	dec    esi
10004935:	32 00                	xor    al,BYTE PTR [eax]
10004937:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
1000493a:	53                   	push   ebx
1000493b:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
1000493e:	43                   	inc    ebx
1000493f:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004940:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004941:	74 65                	je     100049a8 <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
10004943:	78 74                	js     100049b9 <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
10004945:	3a 3a                	cmp    bh,BYTE PTR [edx]
10004947:	64 72 76             	fs jb  100049c0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
1000494a:	52                   	push   edx
1000494b:	65 6e                	outs   dx,BYTE PTR gs:[esi]
1000494d:	64 65 72 54          	fs gs jb 100049a5 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
10004951:	54                   	push   esp
10004952:	46                   	inc    esi
10004953:	34 00                	xor    al,0x0
10004955:	43                   	inc    ebx
10004956:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004958:	42                   	inc    edx
10004959:	61                   	popa   
1000495a:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000495b:	61                   	popa   
1000495c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000495d:	61                   	popa   
1000495e:	2f                   	das    
1000495f:	46                   	inc    esi
10004960:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004961:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004962:	74 73                	je     100049d7 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
10004964:	2f                   	das    
10004965:	53                   	push   ebx
10004966:	46                   	inc    esi
10004967:	4e                   	dec    esi
10004968:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000496b:	4e                   	dec    esi
1000496c:	4e                   	dec    esi
1000496d:	4f                   	dec    edi
1000496e:	54                   	push   esp
1000496f:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004973:	44                   	inc    esp
10004974:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
10004977:	4e                   	dec    esi
10004978:	54                   	push   esp
10004979:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
1000497d:	45                   	inc    ebp
1000497e:	43                   	inc    ebx
1000497f:	54                   	push   esp
10004980:	4f                   	dec    edi
10004981:	52                   	push   edx
10004982:	59                   	pop    ecx
10004983:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
10004986:	2f                   	das    
10004987:	42                   	inc    edx
10004988:	61                   	popa   
10004989:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000498a:	61                   	popa   
1000498b:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000498c:	61                   	popa   
1000498d:	2f                   	das    
1000498e:	46                   	inc    esi
1000498f:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004990:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004991:	74 73                	je     10004a06 <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
10004993:	2f                   	das    
10004994:	53                   	push   ebx
10004995:	46                   	inc    esi
10004996:	4e                   	dec    esi
10004997:	2f                   	das    
10004998:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
1000499b:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000499c:	74 20                	je     100049be <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
1000499e:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
100049a5:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
100049ac:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
100049b0:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
100049b6:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049b7:	74 3a                	je     100049f3 <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
100049b9:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
100049bf:	53                   	push   ebx
100049c0:	46                   	inc    esi
100049c1:	4e                   	dec    esi
100049c2:	5f                   	pop    edi
100049c3:	52                   	push   edx
100049c4:	45                   	inc    ebp
100049c5:	53                   	push   ebx
100049c6:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
100049cc:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
100049cf:	6d                   	ins    DWORD PTR es:[edi],dx
100049d0:	6f                   	outs   dx,DWORD PTR ds:[esi]
100049d1:	72 79                	jb     10004a4c <List<NIWindow*>::deleteElement(NIWindow*&)+0x192>
100049d3:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
100049d6:	6c                   	ins    BYTE PTR es:[edi],dx
100049d7:	6f                   	outs   dx,DWORD PTR ds:[esi]
100049d8:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
100049db:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
100049e2:	6f                   	outs   dx,DWORD PTR ds:[esi]
100049e3:	72 00                	jb     100049e5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
100049e5:	42                   	inc    edx
100049e6:	61                   	popa   
100049e7:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
100049eb:	6c                   	ins    BYTE PTR es:[edi],dx
100049ec:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
100049f0:	72 6d                	jb     10004a5f <List<NIWindow*>::deleteElement(NIWindow*&)+0x1a5>
100049f2:	61                   	popa   
100049f3:	74 00                	je     100049f5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
100049f5:	4e                   	dec    esi
100049f6:	6f                   	outs   dx,DWORD PTR ds:[esi]
100049f7:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
100049fa:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049fb:	74 20                	je     10004a1d <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
100049fd:	66 61                	popaw  
100049ff:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004a02:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004a04:	75 6e                	jne    10004a74 <_ssfn__compute_huffman_codes::length_dezigzag+0x14>
10004a06:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
10004a0a:	76 61                	jbe    10004a6d <_ssfn__compute_huffman_codes::length_dezigzag+0xd>
10004a0c:	6c                   	ins    BYTE PTR es:[edi],dx
10004a0d:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004a15:	20 76 61             	and    BYTE PTR [esi+0x61],dh
10004a18:	6c                   	ins    BYTE PTR es:[edi],dx
10004a19:	75 65                	jne    10004a80 <_ssfn__zdist_extra>
10004a1b:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004a1e:	76 61                	jbe    10004a81 <_ssfn__zdist_extra+0x1>
10004a20:	6c                   	ins    BYTE PTR es:[edi],dx
10004a21:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
10004a29:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004a2c:	76 61                	jbe    10004a8f <_ssfn__zdist_extra+0xf>
10004a2e:	6c                   	ins    BYTE PTR es:[edi],dx
10004a2f:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
10004a37:	47                   	inc    edi
10004a38:	6c                   	ins    BYTE PTR es:[edi],dx
10004a39:	79 70                	jns    10004aab <_ssfn__zdist_extra+0x2b>
10004a3b:	68 20 6e 6f 74       	push   0x746f6e20
10004a40:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004a43:	75 6e                	jne    10004ab3 <_ssfn__zdist_extra+0x33>
10004a45:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
10004a49:	66 90                	xchg   ax,ax
10004a4b:	66 90                	xchg   ax,ax
10004a4d:	66 90                	xchg   ax,ax
10004a4f:	66 90                	xchg   ax,ax
10004a51:	66 90                	xchg   ax,ax
10004a53:	66 90                	xchg   ax,ax
10004a55:	66 90                	xchg   ax,ax
10004a57:	66 90                	xchg   ax,ax
10004a59:	66 90                	xchg   ax,ax
10004a5b:	66 90                	xchg   ax,ax
10004a5d:	66 90                	xchg   ax,ax
10004a5f:	90                   	nop

10004a60 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004a60:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004a70:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004a80 <_ssfn__zdist_extra>:
	...
10004a90:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
10004aa0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
10004ab0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
10004ac0:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
10004ad0:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10004ae0:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10004af0:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004b00 <_ssfn__zdist_base>:
10004b00:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004b10:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004b20:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004b30:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004b40:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004b50:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004b60:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004b70:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004b80 <_ssfn__zlength_extra>:
	...
10004ba0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
10004bb0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
10004bc0:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
10004bd0:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10004be0:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004c00 <_ssfn__zlength_base>:
10004c00:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004c10:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004c20:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004c30:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004c40:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004c50:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004c60:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004c70:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
10004c80:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
10004c90:	29 2e 00                                            )..
