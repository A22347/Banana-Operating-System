
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 0c             	sub    esp,0xc
10000007:	e8 fc ff ff ff       	call   10000008 <start(void*)+0x8>	10000008: R_386_PC32	NiInstallSysHooks()
1000000c:	83 ec 0c             	sub    esp,0xc
1000000f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000011: R_386_32	screen
10000015:	e8 fc ff ff ff       	call   10000016 <start(void*)+0x16>	10000016: R_386_PC32	Video::getWidth()
1000001a:	89 c6                	mov    esi,eax
1000001c:	58                   	pop    eax
1000001d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000001f: R_386_32	screen
10000023:	e8 fc ff ff ff       	call   10000024 <start(void*)+0x24>	10000024: R_386_PC32	Video::getHeight()
10000028:	5a                   	pop    edx
10000029:	89 c7                	mov    edi,eax
1000002b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002d: R_386_32	screen
10000031:	e8 fc ff ff ff       	call   10000032 <start(void*)+0x32>	10000032: R_386_PC32	Video::getWidth()
10000036:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000003d:	89 c5                	mov    ebp,eax
1000003f:	e8 fc ff ff ff       	call   10000040 <start(void*)+0x40>	10000040: R_386_PC32	malloc
10000044:	59                   	pop    ecx
10000045:	89 c3                	mov    ebx,eax
10000047:	58                   	pop    eax
10000048:	6a 20                	push   0x20
1000004a:	55                   	push   ebp
1000004b:	57                   	push   edi
1000004c:	56                   	push   esi
1000004d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000004f: R_386_32	screen
10000053:	53                   	push   ebx
10000054:	e8 fc ff ff ff       	call   10000055 <start(void*)+0x55>	10000055: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000059:	83 c4 14             	add    esp,0x14
1000005c:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	1000005e: R_386_32	ctxt
10000062:	6a 14                	push   0x14
10000064:	e8 fc ff ff ff       	call   10000065 <start(void*)+0x65>	10000065: R_386_PC32	malloc
10000069:	89 c6                	mov    esi,eax
1000006b:	58                   	pop    eax
1000006c:	5a                   	pop    edx
1000006d:	53                   	push   ebx
1000006e:	56                   	push   esi
1000006f:	e8 fc ff ff ff       	call   10000070 <start(void*)+0x70>	10000070: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000074:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
1000007b:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	1000007d: R_386_32	desktop
10000081:	e8 fc ff ff ff       	call   10000082 <start(void*)+0x82>	10000082: R_386_PC32	malloc
10000086:	59                   	pop    ecx
10000087:	89 c5                	mov    ebp,eax
10000089:	5b                   	pop    ebx
1000008a:	6a 01                	push   0x1
1000008c:	6a 01                	push   0x1
1000008e:	6a 00                	push   0x0
10000090:	6a 00                	push   0x0
10000092:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000094: R_386_32	ctxt
10000098:	50                   	push   eax
10000099:	e8 fc ff ff ff       	call   1000009a <start(void*)+0x9a>	1000009a: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000009e:	83 c4 14             	add    esp,0x14
100000a1:	6a 40                	push   0x40
100000a3:	e8 fc ff ff ff       	call   100000a4 <start(void*)+0xa4>	100000a4: R_386_PC32	malloc
100000a8:	5e                   	pop    esi
100000a9:	89 c7                	mov    edi,eax
100000ab:	58                   	pop    eax
100000ac:	68 40 01 00 00       	push   0x140
100000b1:	68 90 01 00 00       	push   0x190
100000b6:	6a 32                	push   0x32
100000b8:	6a 32                	push   0x32
100000ba:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100000bc: R_386_32	ctxt
100000c0:	57                   	push   edi
100000c1:	e8 fc ff ff ff       	call   100000c2 <start(void*)+0xc2>	100000c2: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000c6:	83 c4 14             	add    esp,0x14
100000c9:	6a 40                	push   0x40
100000cb:	e8 fc ff ff ff       	call   100000cc <start(void*)+0xcc>	100000cc: R_386_PC32	malloc
100000d0:	89 c6                	mov    esi,eax
100000d2:	58                   	pop    eax
100000d3:	5a                   	pop    edx
100000d4:	68 7c 01 00 00       	push   0x17c
100000d9:	68 f4 01 00 00       	push   0x1f4
100000de:	68 96 00 00 00       	push   0x96
100000e3:	68 c8 00 00 00       	push   0xc8
100000e8:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100000ea: R_386_32	ctxt
100000ee:	56                   	push   esi
100000ef:	e8 fc ff ff ff       	call   100000f0 <start(void*)+0xf0>	100000f0: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000f4:	83 c4 14             	add    esp,0x14
100000f7:	6a 40                	push   0x40
100000f9:	e8 fc ff ff ff       	call   100000fa <start(void*)+0xfa>	100000fa: R_386_PC32	malloc
100000fe:	59                   	pop    ecx
100000ff:	89 c3                	mov    ebx,eax
10000101:	58                   	pop    eax
10000102:	68 af 00 00 00       	push   0xaf
10000107:	68 0e 01 00 00       	push   0x10e
1000010c:	68 90 01 00 00       	push   0x190
10000111:	6a 7d                	push   0x7d
10000113:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000115: R_386_32	ctxt
10000119:	53                   	push   ebx
1000011a:	e8 fc ff ff ff       	call   1000011b <start(void*)+0x11b>	1000011b: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000011f:	83 c4 18             	add    esp,0x18
10000122:	83 4b 3c 01          	or     DWORD PTR [ebx+0x3c],0x1
10000126:	55                   	push   ebp
10000127:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000129: R_386_32	desktop
1000012d:	e8 fc ff ff ff       	call   1000012e <start(void*)+0x12e>	1000012e: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000132:	58                   	pop    eax
10000133:	5a                   	pop    edx
10000134:	57                   	push   edi
10000135:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000137: R_386_32	desktop
1000013b:	e8 fc ff ff ff       	call   1000013c <start(void*)+0x13c>	1000013c: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000140:	59                   	pop    ecx
10000141:	5f                   	pop    edi
10000142:	56                   	push   esi
10000143:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000145: R_386_32	desktop
10000149:	e8 fc ff ff ff       	call   1000014a <start(void*)+0x14a>	1000014a: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000014e:	5d                   	pop    ebp
1000014f:	58                   	pop    eax
10000150:	53                   	push   ebx
10000151:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000153: R_386_32	desktop
10000157:	e8 fc ff ff ff       	call   10000158 <start(void*)+0x158>	10000158: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000015c:	58                   	pop    eax
1000015d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000015f: R_386_32	desktop
10000163:	e8 fc ff ff ff       	call   10000164 <start(void*)+0x164>	10000164: R_386_PC32	NIDesktop::completeRefresh()
10000168:	c7 04 24 24 07 00 00 	mov    DWORD PTR [esp],0x724
1000016f:	e8 fc ff ff ff       	call   10000170 <start(void*)+0x170>	10000170: R_386_PC32	malloc
10000174:	6a 00                	push   0x0
10000176:	89 c3                	mov    ebx,eax
10000178:	6a 00                	push   0x0
1000017a:	68 67 c9 00 10       	push   0x1000c967	1000017b: R_386_32	.text
1000017f:	50                   	push   eax
10000180:	e8 fc ff ff ff       	call   10000181 <start(void*)+0x181>	10000181: R_386_PC32	Process::Process(char const*, Process*, char**)
10000185:	83 c4 14             	add    esp,0x14
10000188:	53                   	push   ebx
10000189:	e8 fc ff ff ff       	call   1000018a <start(void*)+0x18a>	1000018a: R_386_PC32	Process::createUserThread()
1000018e:	83 c4 10             	add    esp,0x10
10000191:	83 ec 0c             	sub    esp,0xc
10000194:	6a 02                	push   0x2
10000196:	e8 fc ff ff ff       	call   10000197 <start(void*)+0x197>	10000197: R_386_PC32	blockTask(TaskState)
1000019b:	eb f1                	jmp    1000018e <start(void*)+0x18e>
1000019d:	8d 76 00             	lea    esi,[esi+0x0]

100001a0 <begin(void*)>:
100001a0:	83 ec 18             	sub    esp,0x18
100001a3:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100001a7:	e8 fc ff ff ff       	call   100001a8 <begin(void*)+0x8>	100001a8: R_386_PC32	start(void*)

100001ac <_ssfn__bitreverse16>:
100001ac:	89 c2                	mov    edx,eax
100001ae:	01 c0                	add    eax,eax
100001b0:	d1 fa                	sar    edx,1
100001b2:	25 aa aa 00 00       	and    eax,0xaaaa
100001b7:	81 e2 55 55 00 00    	and    edx,0x5555
100001bd:	09 c2                	or     edx,eax
100001bf:	89 d0                	mov    eax,edx
100001c1:	c1 e2 02             	shl    edx,0x2
100001c4:	c1 f8 02             	sar    eax,0x2
100001c7:	81 e2 cc cc 00 00    	and    edx,0xcccc
100001cd:	25 33 33 00 00       	and    eax,0x3333
100001d2:	09 d0                	or     eax,edx
100001d4:	89 c2                	mov    edx,eax
100001d6:	c1 e0 04             	shl    eax,0x4
100001d9:	c1 fa 04             	sar    edx,0x4
100001dc:	25 f0 f0 00 00       	and    eax,0xf0f0
100001e1:	81 e2 0f 0f 00 00    	and    edx,0xf0f
100001e7:	09 c2                	or     edx,eax
100001e9:	89 d1                	mov    ecx,edx
100001eb:	c1 e2 08             	shl    edx,0x8
100001ee:	c1 f9 08             	sar    ecx,0x8
100001f1:	0f b7 c2             	movzx  eax,dx
100001f4:	09 c8                	or     eax,ecx
100001f6:	c3                   	ret    

100001f7 <_ssfn__zhuffman_decode>:
100001f7:	55                   	push   ebp
100001f8:	57                   	push   edi
100001f9:	56                   	push   esi
100001fa:	53                   	push   ebx
100001fb:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001ff:	7f 1d                	jg     1000021e <_ssfn__zhuffman_decode+0x27>
10000201:	8b 18                	mov    ebx,DWORD PTR [eax]
10000203:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000206:	89 08                	mov    DWORD PTR [eax],ecx
10000208:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000020b:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
1000020e:	d3 e3                	shl    ebx,cl
10000210:	83 c1 08             	add    ecx,0x8
10000213:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
10000216:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
10000219:	83 f9 18             	cmp    ecx,0x18
1000021c:	eb e1                	jmp    100001ff <_ssfn__zhuffman_decode+0x8>
1000021e:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
10000221:	89 f9                	mov    ecx,edi
10000223:	81 e1 ff 01 00 00    	and    ecx,0x1ff
10000229:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
1000022d:	89 cb                	mov    ebx,ecx
1000022f:	85 c9                	test   ecx,ecx
10000231:	74 15                	je     10000248 <_ssfn__zhuffman_decode+0x51>
10000233:	c1 f9 09             	sar    ecx,0x9
10000236:	89 da                	mov    edx,ebx
10000238:	d3 ef                	shr    edi,cl
1000023a:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
1000023d:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
10000240:	81 e2 ff 01 00 00    	and    edx,0x1ff
10000246:	eb 58                	jmp    100002a0 <_ssfn__zhuffman_decode+0xa9>
10000248:	89 d5                	mov    ebp,edx
1000024a:	89 c3                	mov    ebx,eax
1000024c:	be 0a 00 00 00       	mov    esi,0xa
10000251:	89 f8                	mov    eax,edi
10000253:	e8 54 ff ff ff       	call   100001ac <_ssfn__bitreverse16>
10000258:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
1000025f:	7c 03                	jl     10000264 <_ssfn__zhuffman_decode+0x6d>
10000261:	46                   	inc    esi
10000262:	eb f4                	jmp    10000258 <_ssfn__zhuffman_decode+0x61>
10000264:	83 ca ff             	or     edx,0xffffffff
10000267:	83 fe 10             	cmp    esi,0x10
1000026a:	74 34                	je     100002a0 <_ssfn__zhuffman_decode+0xa9>
1000026c:	8d 14 36             	lea    edx,[esi+esi*1]
1000026f:	b9 10 00 00 00       	mov    ecx,0x10
10000274:	01 ea                	add    edx,ebp
10000276:	29 f1                	sub    ecx,esi
10000278:	d3 f8                	sar    eax,cl
1000027a:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000281:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000288:	29 c8                	sub    eax,ecx
1000028a:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
1000028d:	89 f1                	mov    ecx,esi
1000028f:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
10000296:	d3 ef                	shr    edi,cl
10000298:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000029b:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
100002a0:	5b                   	pop    ebx
100002a1:	89 d0                	mov    eax,edx
100002a3:	5e                   	pop    esi
100002a4:	5f                   	pop    edi
100002a5:	5d                   	pop    ebp
100002a6:	c3                   	ret    

100002a7 <_ssfn__zexpand>:
100002a7:	55                   	push   ebp
100002a8:	57                   	push   edi
100002a9:	56                   	push   esi
100002aa:	53                   	push   ebx
100002ab:	83 ec 0c             	sub    esp,0xc
100002ae:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
100002b1:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
100002b4:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
100002b7:	29 f9                	sub    ecx,edi
100002b9:	83 f9 08             	cmp    ecx,0x8
100002bc:	74 04                	je     100002c2 <_ssfn__zexpand+0x1b>
100002be:	31 c0                	xor    eax,eax
100002c0:	eb 3c                	jmp    100002fe <_ssfn__zexpand+0x57>
100002c2:	80 3f 53             	cmp    BYTE PTR [edi],0x53
100002c5:	75 f7                	jne    100002be <_ssfn__zexpand+0x17>
100002c7:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
100002cb:	75 f1                	jne    100002be <_ssfn__zexpand+0x17>
100002cd:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
100002d1:	75 eb                	jne    100002be <_ssfn__zexpand+0x17>
100002d3:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
100002d6:	89 c3                	mov    ebx,eax
100002d8:	89 d6                	mov    esi,edx
100002da:	50                   	push   eax
100002db:	50                   	push   eax
100002dc:	55                   	push   ebp
100002dd:	57                   	push   edi
100002de:	e8 fc ff ff ff       	call   100002df <_ssfn__zexpand+0x38>	100002df: R_386_PC32	realloc
100002e3:	83 c4 10             	add    esp,0x10
100002e6:	85 c0                	test   eax,eax
100002e8:	74 d4                	je     100002be <_ssfn__zexpand+0x17>
100002ea:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100002ed:	29 fe                	sub    esi,edi
100002ef:	01 c6                	add    esi,eax
100002f1:	01 e8                	add    eax,ebp
100002f3:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002f6:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002f9:	b8 01 00 00 00       	mov    eax,0x1
100002fe:	83 c4 0c             	add    esp,0xc
10000301:	5b                   	pop    ebx
10000302:	5e                   	pop    esi
10000303:	5f                   	pop    edi
10000304:	5d                   	pop    ebp
10000305:	c3                   	ret    

10000306 <_ssfn__zbuild_huffman>:
10000306:	55                   	push   ebp
10000307:	57                   	push   edi
10000308:	56                   	push   esi
10000309:	53                   	push   ebx
1000030a:	89 c3                	mov    ebx,eax
1000030c:	81 ec a0 00 00 00    	sub    esp,0xa0
10000312:	31 c0                	xor    eax,eax
10000314:	89 0c 24             	mov    DWORD PTR [esp],ecx
10000317:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
1000031b:	b9 11 00 00 00       	mov    ecx,0x11
10000320:	89 ef                	mov    edi,ebp
10000322:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10000326:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000328:	b9 00 01 00 00       	mov    ecx,0x100
1000032d:	89 df                	mov    edi,ebx
1000032f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000331:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10000334:	7d 0f                	jge    10000345 <_ssfn__zbuild_huffman+0x3f>
10000336:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000033a:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
1000033e:	40                   	inc    eax
1000033f:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
10000343:	eb ec                	jmp    10000331 <_ssfn__zbuild_huffman+0x2b>
10000345:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
1000034d:	b9 01 00 00 00       	mov    ecx,0x1
10000352:	b8 01 00 00 00       	mov    eax,0x1
10000357:	89 c7                	mov    edi,eax
10000359:	d3 e7                	shl    edi,cl
1000035b:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
1000035f:	0f 8f 10 01 00 00    	jg     10000475 <_ssfn__zbuild_huffman+0x16f>
10000365:	41                   	inc    ecx
10000366:	83 f9 10             	cmp    ecx,0x10
10000369:	75 ec                	jne    10000357 <_ssfn__zbuild_huffman+0x51>
1000036b:	31 ff                	xor    edi,edi
1000036d:	31 f6                	xor    esi,esi
1000036f:	b8 01 00 00 00       	mov    eax,0x1
10000374:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000378:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
1000037c:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000384:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
1000038c:	01 ef                	add    edi,ebp
1000038e:	85 ed                	test   ebp,ebp
10000390:	74 11                	je     100003a3 <_ssfn__zbuild_huffman+0x9d>
10000392:	ba 01 00 00 00       	mov    edx,0x1
10000397:	88 c1                	mov    cl,al
10000399:	d3 e2                	shl    edx,cl
1000039b:	39 fa                	cmp    edx,edi
1000039d:	0f 8c d2 00 00 00    	jl     10000475 <_ssfn__zbuild_huffman+0x16f>
100003a3:	89 fa                	mov    edx,edi
100003a5:	b9 10 00 00 00       	mov    ecx,0x10
100003aa:	01 ff                	add    edi,edi
100003ac:	29 c1                	sub    ecx,eax
100003ae:	01 ee                	add    esi,ebp
100003b0:	d3 e2                	shl    edx,cl
100003b2:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
100003b9:	40                   	inc    eax
100003ba:	83 f8 10             	cmp    eax,0x10
100003bd:	75 b5                	jne    10000374 <_ssfn__zbuild_huffman+0x6e>
100003bf:	8b 04 24             	mov    eax,DWORD PTR [esp]
100003c2:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
100003cc:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100003d0:	31 ff                	xor    edi,edi
100003d2:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
100003d6:	0f 8d 9d 00 00 00    	jge    10000479 <_ssfn__zbuild_huffman+0x173>
100003dc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100003e0:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
100003e4:	89 f2                	mov    edx,esi
100003e6:	85 f6                	test   esi,esi
100003e8:	0f 84 81 00 00 00    	je     1000046f <_ssfn__zbuild_huffman+0x169>
100003ee:	8d 0c 36             	lea    ecx,[esi+esi*1]
100003f1:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003f5:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003f8:	89 e9                	mov    ecx,ebp
100003fa:	89 04 24             	mov    DWORD PTR [esp],eax
100003fd:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
10000404:	29 c1                	sub    ecx,eax
10000406:	89 c8                	mov    eax,ecx
10000408:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000040b:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
10000412:	01 c8                	add    eax,ecx
10000414:	83 fe 09             	cmp    esi,0x9
10000417:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
1000041e:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
10000426:	7f 42                	jg     1000046a <_ssfn__zbuild_huffman+0x164>
10000428:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
1000042c:	89 e8                	mov    eax,ebp
1000042e:	e8 79 fd ff ff       	call   100001ac <_ssfn__bitreverse16>
10000433:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
10000437:	b9 10 00 00 00       	mov    ecx,0x10
1000043c:	29 f1                	sub    ecx,esi
1000043e:	d3 f8                	sar    eax,cl
10000440:	88 d1                	mov    cl,dl
10000442:	89 04 24             	mov    DWORD PTR [esp],eax
10000445:	89 f2                	mov    edx,esi
10000447:	b8 01 00 00 00       	mov    eax,0x1
1000044c:	c1 e2 09             	shl    edx,0x9
1000044f:	d3 e0                	shl    eax,cl
10000451:	09 fa                	or     edx,edi
10000453:	89 c1                	mov    ecx,eax
10000455:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
1000045c:	7f 0c                	jg     1000046a <_ssfn__zbuild_huffman+0x164>
1000045e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000461:	01 0c 24             	add    DWORD PTR [esp],ecx
10000464:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000468:	eb eb                	jmp    10000455 <_ssfn__zbuild_huffman+0x14f>
1000046a:	45                   	inc    ebp
1000046b:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
1000046f:	47                   	inc    edi
10000470:	e9 5d ff ff ff       	jmp    100003d2 <_ssfn__zbuild_huffman+0xcc>
10000475:	31 c0                	xor    eax,eax
10000477:	eb 05                	jmp    1000047e <_ssfn__zbuild_huffman+0x178>
10000479:	b8 01 00 00 00       	mov    eax,0x1
1000047e:	81 c4 a0 00 00 00    	add    esp,0xa0
10000484:	5b                   	pop    ebx
10000485:	5e                   	pop    esi
10000486:	5f                   	pop    edi
10000487:	5d                   	pop    ebp
10000488:	c3                   	ret    

10000489 <_ssfn_fc.part.1>:
10000489:	55                   	push   ebp
1000048a:	57                   	push   edi
1000048b:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000491:	56                   	push   esi
10000492:	53                   	push   ebx
10000493:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000499:	83 ec 0c             	sub    esp,0xc
1000049c:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
1000049f:	74 5d                	je     100004fe <_ssfn_fc.part.1+0x75>
100004a1:	31 f6                	xor    esi,esi
100004a3:	8b 03                	mov    eax,DWORD PTR [ebx]
100004a5:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
100004a9:	74 35                	je     100004e0 <_ssfn_fc.part.1+0x57>
100004ab:	31 ed                	xor    ebp,ebp
100004ad:	8b 03                	mov    eax,DWORD PTR [ebx]
100004af:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
100004b2:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
100004b5:	85 c0                	test   eax,eax
100004b7:	74 0c                	je     100004c5 <_ssfn_fc.part.1+0x3c>
100004b9:	83 ec 0c             	sub    esp,0xc
100004bc:	50                   	push   eax
100004bd:	e8 fc ff ff ff       	call   100004be <_ssfn_fc.part.1+0x35>	100004be: R_386_PC32	free
100004c2:	83 c4 10             	add    esp,0x10
100004c5:	83 c5 04             	add    ebp,0x4
100004c8:	81 fd 00 04 00 00    	cmp    ebp,0x400
100004ce:	75 dd                	jne    100004ad <_ssfn_fc.part.1+0x24>
100004d0:	83 ec 0c             	sub    esp,0xc
100004d3:	8b 03                	mov    eax,DWORD PTR [ebx]
100004d5:	ff 34 30             	push   DWORD PTR [eax+esi*1]
100004d8:	e8 fc ff ff ff       	call   100004d9 <_ssfn_fc.part.1+0x50>	100004d9: R_386_PC32	free
100004dd:	83 c4 10             	add    esp,0x10
100004e0:	83 c6 04             	add    esi,0x4
100004e3:	81 fe 00 04 00 00    	cmp    esi,0x400
100004e9:	75 b8                	jne    100004a3 <_ssfn_fc.part.1+0x1a>
100004eb:	83 ec 0c             	sub    esp,0xc
100004ee:	ff 33                	push   DWORD PTR [ebx]
100004f0:	e8 fc ff ff ff       	call   100004f1 <_ssfn_fc.part.1+0x68>	100004f1: R_386_PC32	free
100004f5:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004fb:	83 c4 10             	add    esp,0x10
100004fe:	83 c3 04             	add    ebx,0x4
10000501:	39 fb                	cmp    ebx,edi
10000503:	75 97                	jne    1000049c <_ssfn_fc.part.1+0x13>
10000505:	83 c4 0c             	add    esp,0xc
10000508:	5b                   	pop    ebx
10000509:	5e                   	pop    esi
1000050a:	5f                   	pop    edi
1000050b:	5d                   	pop    ebp
1000050c:	c3                   	ret    

1000050d <_ssfn_l>:
1000050d:	57                   	push   edi
1000050e:	56                   	push   esi
1000050f:	53                   	push   ebx
10000510:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000514:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000518:	39 ce                	cmp    esi,ecx
1000051a:	89 f3                	mov    ebx,esi
1000051c:	0f 9d c1             	setge  cl
1000051f:	c1 eb 1f             	shr    ebx,0x1f
10000522:	09 d9                	or     ecx,ebx
10000524:	89 fb                	mov    ebx,edi
10000526:	c1 eb 1f             	shr    ebx,0x1f
10000529:	08 d9                	or     cl,bl
1000052b:	0f 85 e9 00 00 00    	jne    1000061a <_ssfn_l+0x10d>
10000531:	39 d7                	cmp    edi,edx
10000533:	0f 8d e1 00 00 00    	jge    1000061a <_ssfn_l+0x10d>
10000539:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
1000053f:	8d 51 08             	lea    edx,[ecx+0x8]
10000542:	8d 4f 08             	lea    ecx,[edi+0x8]
10000545:	c1 fa 04             	sar    edx,0x4
10000548:	c1 f9 04             	sar    ecx,0x4
1000054b:	39 ca                	cmp    edx,ecx
1000054d:	75 1a                	jne    10000569 <_ssfn_l+0x5c>
1000054f:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
10000555:	8d 4e 08             	lea    ecx,[esi+0x8]
10000558:	83 c2 08             	add    edx,0x8
1000055b:	c1 f9 04             	sar    ecx,0x4
1000055e:	c1 fa 04             	sar    edx,0x4
10000561:	39 ca                	cmp    edx,ecx
10000563:	0f 84 b1 00 00 00    	je     1000061a <_ssfn_l+0x10d>
10000569:	89 c3                	mov    ebx,eax
1000056b:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000571:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
10000577:	7f 3e                	jg     100005b7 <_ssfn_l+0xaa>
10000579:	05 00 02 00 00       	add    eax,0x200
1000057e:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000584:	52                   	push   edx
10000585:	01 c0                	add    eax,eax
10000587:	52                   	push   edx
10000588:	50                   	push   eax
10000589:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
1000058f:	e8 fc ff ff ff       	call   10000590 <_ssfn_l+0x83>	10000590: R_386_PC32	realloc
10000594:	83 c4 10             	add    esp,0x10
10000597:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
1000059d:	85 c0                	test   eax,eax
1000059f:	75 16                	jne    100005b7 <_ssfn_l+0xaa>
100005a1:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
100005ab:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
100005b5:	eb 63                	jmp    1000061a <_ssfn_l+0x10d>
100005b7:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
100005be:	75 26                	jne    100005e6 <_ssfn_l+0xd9>
100005c0:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005c6:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
100005cc:	66 89 10             	mov    WORD PTR [eax],dx
100005cf:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005d5:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
100005db:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
100005df:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005e6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005ec:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005f2:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005f6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005fc:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000602:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
10000607:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
1000060d:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000614:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
1000061a:	5b                   	pop    ebx
1000061b:	5e                   	pop    esi
1000061c:	5f                   	pop    edi
1000061d:	c3                   	ret    

1000061e <_ssfn_b>:
1000061e:	55                   	push   ebp
1000061f:	57                   	push   edi
10000620:	56                   	push   esi
10000621:	53                   	push   ebx
10000622:	83 ec 4c             	sub    esp,0x4c
10000625:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000629:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
1000062d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10000631:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
10000635:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000639:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
1000063d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000641:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
10000645:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000649:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
1000064d:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10000651:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
10000655:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000659:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000065d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000661:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000668:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000066c:	83 f8 04             	cmp    eax,0x4
1000066f:	75 28                	jne    10000699 <_ssfn_b+0x7b>
10000671:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000675:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000679:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000067d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000681:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000685:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000689:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000068d:	83 c4 4c             	add    esp,0x4c
10000690:	5b                   	pop    ebx
10000691:	5e                   	pop    esi
10000692:	5f                   	pop    edi
10000693:	5d                   	pop    ebp
10000694:	e9 74 fe ff ff       	jmp    1000050d <_ssfn_l>
10000699:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000069d:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
100006a1:	75 0e                	jne    100006b1 <_ssfn_b+0x93>
100006a3:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100006a7:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100006ab:	0f 84 19 01 00 00    	je     100007ca <_ssfn_b+0x1ac>
100006b1:	be 02 00 00 00       	mov    esi,0x2
100006b6:	89 d8                	mov    eax,ebx
100006b8:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
100006bc:	99                   	cdq    
100006bd:	f7 fe                	idiv   esi
100006bf:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
100006c3:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100006c7:	89 e8                	mov    eax,ebp
100006c9:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
100006cd:	99                   	cdq    
100006ce:	f7 fe                	idiv   esi
100006d0:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
100006d4:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100006d8:	89 f8                	mov    eax,edi
100006da:	29 d8                	sub    eax,ebx
100006dc:	99                   	cdq    
100006dd:	f7 fe                	idiv   esi
100006df:	01 c3                	add    ebx,eax
100006e1:	89 c8                	mov    eax,ecx
100006e3:	29 e8                	sub    eax,ebp
100006e5:	99                   	cdq    
100006e6:	f7 fe                	idiv   esi
100006e8:	01 e8                	add    eax,ebp
100006ea:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006ee:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006f2:	29 f8                	sub    eax,edi
100006f4:	99                   	cdq    
100006f5:	f7 fe                	idiv   esi
100006f7:	01 f8                	add    eax,edi
100006f9:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006fd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000701:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000705:	29 c8                	sub    eax,ecx
10000707:	99                   	cdq    
10000708:	f7 fe                	idiv   esi
1000070a:	01 c8                	add    eax,ecx
1000070c:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10000710:	89 d8                	mov    eax,ebx
10000712:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10000716:	99                   	cdq    
10000717:	f7 fe                	idiv   esi
10000719:	8d 0c 38             	lea    ecx,[eax+edi*1]
1000071c:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000720:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000724:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10000728:	99                   	cdq    
10000729:	f7 fe                	idiv   esi
1000072b:	8d 2c 38             	lea    ebp,[eax+edi*1]
1000072e:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000732:	29 d8                	sub    eax,ebx
10000734:	99                   	cdq    
10000735:	f7 fe                	idiv   esi
10000737:	83 ec 0c             	sub    esp,0xc
1000073a:	01 d8                	add    eax,ebx
1000073c:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10000740:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000744:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10000748:	99                   	cdq    
10000749:	f7 fe                	idiv   esi
1000074b:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
1000074f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000753:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000757:	29 c8                	sub    eax,ecx
10000759:	99                   	cdq    
1000075a:	f7 fe                	idiv   esi
1000075c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000075f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000763:	29 e8                	sub    eax,ebp
10000765:	99                   	cdq    
10000766:	f7 fe                	idiv   esi
10000768:	8d 34 28             	lea    esi,[eax+ebp*1]
1000076b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000076f:	8d 78 01             	lea    edi,[eax+0x1]
10000772:	57                   	push   edi
10000773:	56                   	push   esi
10000774:	53                   	push   ebx
10000775:	55                   	push   ebp
10000776:	51                   	push   ecx
10000777:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000077b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000077f:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000783:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000787:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000078b:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000078f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000793:	e8 86 fe ff ff       	call   1000061e <_ssfn_b>
10000798:	83 c4 24             	add    esp,0x24
1000079b:	57                   	push   edi
1000079c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100007a0:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100007a4:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
100007a8:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
100007ac:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
100007b0:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
100007b4:	56                   	push   esi
100007b5:	53                   	push   ebx
100007b6:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100007ba:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100007be:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100007c2:	e8 57 fe ff ff       	call   1000061e <_ssfn_b>
100007c7:	83 c4 30             	add    esp,0x30
100007ca:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
100007cf:	0f 85 9c fe ff ff    	jne    10000671 <_ssfn_b+0x53>
100007d5:	83 c4 4c             	add    esp,0x4c
100007d8:	5b                   	pop    ebx
100007d9:	5e                   	pop    esi
100007da:	5f                   	pop    edi
100007db:	5d                   	pop    ebp
100007dc:	c3                   	ret    

100007dd <_ssfn__zreceive>:
100007dd:	56                   	push   esi
100007de:	53                   	push   ebx
100007df:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
100007e2:	7d 1d                	jge    10000801 <_ssfn__zreceive+0x24>
100007e4:	8b 18                	mov    ebx,DWORD PTR [eax]
100007e6:	8d 4b 01             	lea    ecx,[ebx+0x1]
100007e9:	89 08                	mov    DWORD PTR [eax],ecx
100007eb:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100007ee:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100007f1:	d3 e3                	shl    ebx,cl
100007f3:	83 c1 08             	add    ecx,0x8
100007f6:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007f9:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007fc:	83 f9 18             	cmp    ecx,0x18
100007ff:	7e e3                	jle    100007e4 <_ssfn__zreceive+0x7>
10000801:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10000804:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
10000807:	89 f3                	mov    ebx,esi
10000809:	88 d1                	mov    cl,dl
1000080b:	d3 eb                	shr    ebx,cl
1000080d:	88 d1                	mov    cl,dl
1000080f:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10000812:	bb 01 00 00 00       	mov    ebx,0x1
10000817:	d3 e3                	shl    ebx,cl
10000819:	8d 43 ff             	lea    eax,[ebx-0x1]
1000081c:	5b                   	pop    ebx
1000081d:	21 f0                	and    eax,esi
1000081f:	5e                   	pop    esi
10000820:	c3                   	ret    

10000821 <ssfn_utf8>:
10000821:	56                   	push   esi
10000822:	53                   	push   ebx
10000823:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000827:	8b 11                	mov    edx,DWORD PTR [ecx]
10000829:	0f b6 32             	movzx  esi,BYTE PTR [edx]
1000082c:	89 f0                	mov    eax,esi
1000082e:	84 c0                	test   al,al
10000830:	0f be d8             	movsx  ebx,al
10000833:	78 04                	js     10000839 <ssfn_utf8+0x18>
10000835:	89 d8                	mov    eax,ebx
10000837:	eb 7d                	jmp    100008b6 <ssfn_utf8+0x95>
10000839:	f7 c6 20 00 00 00    	test   esi,0x20
1000083f:	75 14                	jne    10000855 <ssfn_utf8+0x34>
10000841:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
10000844:	c1 e3 06             	shl    ebx,0x6
10000847:	83 e0 3f             	and    eax,0x3f
1000084a:	81 e3 c0 07 00 00    	and    ebx,0x7c0
10000850:	42                   	inc    edx
10000851:	09 d8                	or     eax,ebx
10000853:	eb 5f                	jmp    100008b4 <ssfn_utf8+0x93>
10000855:	f7 c6 10 00 00 00    	test   esi,0x10
1000085b:	75 20                	jne    1000087d <ssfn_utf8+0x5c>
1000085d:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000861:	c1 e3 0c             	shl    ebx,0xc
10000864:	c1 e0 06             	shl    eax,0x6
10000867:	0f b7 db             	movzx  ebx,bx
1000086a:	25 c0 0f 00 00       	and    eax,0xfc0
1000086f:	83 c2 02             	add    edx,0x2
10000872:	09 d8                	or     eax,ebx
10000874:	8a 1a                	mov    bl,BYTE PTR [edx]
10000876:	83 e3 3f             	and    ebx,0x3f
10000879:	09 d8                	or     eax,ebx
1000087b:	eb 37                	jmp    100008b4 <ssfn_utf8+0x93>
1000087d:	31 c0                	xor    eax,eax
1000087f:	83 e6 08             	and    esi,0x8
10000882:	75 32                	jne    100008b6 <ssfn_utf8+0x95>
10000884:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000888:	c1 e3 12             	shl    ebx,0x12
1000088b:	c1 e0 0c             	shl    eax,0xc
1000088e:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000894:	25 00 f0 03 00       	and    eax,0x3f000
10000899:	83 c2 03             	add    edx,0x3
1000089c:	09 d8                	or     eax,ebx
1000089e:	8a 1a                	mov    bl,BYTE PTR [edx]
100008a0:	83 e3 3f             	and    ebx,0x3f
100008a3:	09 d8                	or     eax,ebx
100008a5:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
100008a9:	c1 e3 06             	shl    ebx,0x6
100008ac:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
100008b2:	09 d8                	or     eax,ebx
100008b4:	89 11                	mov    DWORD PTR [ecx],edx
100008b6:	ff 01                	inc    DWORD PTR [ecx]
100008b8:	5b                   	pop    ebx
100008b9:	5e                   	pop    esi
100008ba:	c3                   	ret    

100008bb <_ssfn_c>:
100008bb:	55                   	push   ebp
100008bc:	57                   	push   edi
100008bd:	56                   	push   esi
100008be:	53                   	push   ebx
100008bf:	83 ec 14             	sub    esp,0x14
100008c2:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
100008c8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008cc:	85 c0                	test   eax,eax
100008ce:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
100008d4:	0f 84 e6 00 00 00    	je     100009c0 <_ssfn_c+0x105>
100008da:	31 ff                	xor    edi,edi
100008dc:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
100008e0:	0f 84 f3 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008e6:	85 d2                	test   edx,edx
100008e8:	0f 84 eb 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008ee:	80 3a 00             	cmp    BYTE PTR [edx],0x0
100008f1:	0f 84 e2 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008f7:	89 d6                	mov    esi,edx
100008f9:	89 cd                	mov    ebp,ecx
100008fb:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008fe:	89 c3                	mov    ebx,eax
10000900:	85 d2                	test   edx,edx
10000902:	74 38                	je     1000093c <_ssfn_c+0x81>
10000904:	8d 0c 13             	lea    ecx,[ebx+edx*1]
10000907:	31 c0                	xor    eax,eax
10000909:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000090c:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000090f:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
10000913:	66 85 d2             	test   dx,dx
10000916:	74 24                	je     1000093c <_ssfn_c+0x81>
10000918:	01 da                	add    edx,ebx
1000091a:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
1000091e:	8a 0a                	mov    cl,BYTE PTR [edx]
10000920:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000924:	84 c9                	test   cl,cl
10000926:	0f 84 9e 00 00 00    	je     100009ca <_ssfn_c+0x10f>
1000092c:	3a 0f                	cmp    cl,BYTE PTR [edi]
1000092e:	0f 85 90 00 00 00    	jne    100009c4 <_ssfn_c+0x109>
10000934:	47                   	inc    edi
10000935:	42                   	inc    edx
10000936:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
1000093a:	eb e2                	jmp    1000091e <_ssfn_c+0x63>
1000093c:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000940:	8d 44 24 10          	lea    eax,[esp+0x10]
10000944:	50                   	push   eax
10000945:	e8 fc ff ff ff       	call   10000946 <_ssfn_c+0x8b>	10000946: R_386_PC32	ssfn_utf8
1000094a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000094e:	29 f2                	sub    edx,esi
10000950:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
10000953:	5a                   	pop    edx
10000954:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000958:	89 06                	mov    DWORD PTR [esi],eax
1000095a:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
1000095d:	89 df                	mov    edi,ebx
1000095f:	31 db                	xor    ebx,ebx
10000961:	8a 17                	mov    dl,BYTE PTR [edi]
10000963:	80 fa ff             	cmp    dl,0xff
10000966:	75 08                	jne    10000970 <_ssfn_c+0xb5>
10000968:	81 c3 ff ff 00 00    	add    ebx,0xffff
1000096e:	eb 2a                	jmp    1000099a <_ssfn_c+0xdf>
10000970:	88 d1                	mov    cl,dl
10000972:	83 e1 c0             	and    ecx,0xffffffc0
10000975:	80 f9 c0             	cmp    cl,0xc0
10000978:	75 16                	jne    10000990 <_ssfn_c+0xd5>
1000097a:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000097e:	c1 e2 08             	shl    edx,0x8
10000981:	83 c7 02             	add    edi,0x2
10000984:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000098a:	09 ca                	or     edx,ecx
1000098c:	01 d3                	add    ebx,edx
1000098e:	eb 27                	jmp    100009b7 <_ssfn_c+0xfc>
10000990:	80 f9 80             	cmp    cl,0x80
10000993:	75 08                	jne    1000099d <_ssfn_c+0xe2>
10000995:	83 e2 3f             	and    edx,0x3f
10000998:	01 d3                	add    ebx,edx
1000099a:	47                   	inc    edi
1000099b:	eb 1a                	jmp    100009b7 <_ssfn_c+0xfc>
1000099d:	39 d8                	cmp    eax,ebx
1000099f:	74 38                	je     100009d9 <_ssfn_c+0x11e>
100009a1:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
100009a5:	83 e2 40             	and    edx,0x40
100009a8:	80 fa 01             	cmp    dl,0x1
100009ab:	19 d2                	sbb    edx,edx
100009ad:	83 c2 06             	add    edx,0x6
100009b0:	0f af d1             	imul   edx,ecx
100009b3:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
100009b7:	43                   	inc    ebx
100009b8:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
100009be:	76 a1                	jbe    10000961 <_ssfn_c+0xa6>
100009c0:	31 ff                	xor    edi,edi
100009c2:	eb 15                	jmp    100009d9 <_ssfn_c+0x11e>
100009c4:	40                   	inc    eax
100009c5:	e9 42 ff ff ff       	jmp    1000090c <_ssfn_c+0x51>
100009ca:	29 f7                	sub    edi,esi
100009cc:	05 00 f0 00 00       	add    eax,0xf000
100009d1:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
100009d4:	e9 7b ff ff ff       	jmp    10000954 <_ssfn_c+0x99>
100009d9:	83 c4 14             	add    esp,0x14
100009dc:	89 f8                	mov    eax,edi
100009de:	5b                   	pop    ebx
100009df:	5e                   	pop    esi
100009e0:	5f                   	pop    edi
100009e1:	5d                   	pop    ebp
100009e2:	c3                   	ret    

100009e3 <_ssfn_zlib_decode>:
100009e3:	55                   	push   ebp
100009e4:	57                   	push   edi
100009e5:	56                   	push   esi
100009e6:	53                   	push   ebx
100009e7:	81 ec c8 19 00 00    	sub    esp,0x19c8
100009ed:	6a 08                	push   0x8
100009ef:	e8 fc ff ff ff       	call   100009f0 <_ssfn_zlib_decode+0xd>	100009f0: R_386_PC32	malloc
100009f4:	83 c4 10             	add    esp,0x10
100009f7:	89 c2                	mov    edx,eax
100009f9:	85 c0                	test   eax,eax
100009fb:	0f 84 eb 04 00 00    	je     10000eec <_ssfn_zlib_decode+0x509>
10000a01:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
10000a08:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
10000a0f:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
10000a16:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
10000a1d:	31 c0                	xor    eax,eax
10000a1f:	83 c2 08             	add    edx,0x8
10000a22:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
10000a29:	c6 80 80 d9 03 10 08 	mov    BYTE PTR [eax+0x1003d980],0x8	10000a2b: R_386_32	.bss
10000a30:	40                   	inc    eax
10000a31:	3d 90 00 00 00       	cmp    eax,0x90
10000a36:	75 f1                	jne    10000a29 <_ssfn_zlib_decode+0x46>
10000a38:	c6 80 80 d9 03 10 09 	mov    BYTE PTR [eax+0x1003d980],0x9	10000a3a: R_386_32	.bss
10000a3f:	40                   	inc    eax
10000a40:	3d 00 01 00 00       	cmp    eax,0x100
10000a45:	75 f1                	jne    10000a38 <_ssfn_zlib_decode+0x55>
10000a47:	c6 80 80 d9 03 10 07 	mov    BYTE PTR [eax+0x1003d980],0x7	10000a49: R_386_32	.bss
10000a4e:	40                   	inc    eax
10000a4f:	3d 18 01 00 00       	cmp    eax,0x118
10000a54:	75 f1                	jne    10000a47 <_ssfn_zlib_decode+0x64>
10000a56:	c7 05 98 da 03 10 08 08 08 08 	mov    DWORD PTR ds:0x1003da98,0x8080808	10000a58: R_386_32	.bss
10000a60:	c7 05 9c da 03 10 08 08 08 08 	mov    DWORD PTR ds:0x1003da9c,0x8080808	10000a62: R_386_32	.bss
10000a6a:	31 c0                	xor    eax,eax
10000a6c:	c6 80 60 d9 03 10 05 	mov    BYTE PTR [eax+0x1003d960],0x5	10000a6e: R_386_32	.bss
10000a73:	40                   	inc    eax
10000a74:	83 f8 20             	cmp    eax,0x20
10000a77:	75 f3                	jne    10000a6c <_ssfn_zlib_decode+0x89>
10000a79:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a84:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a8f:	ba 01 00 00 00       	mov    edx,0x1
10000a94:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a9b:	e8 3d fd ff ff       	call   100007dd <_ssfn__zreceive>
10000aa0:	ba 02 00 00 00       	mov    edx,0x2
10000aa5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000aa9:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ab0:	e8 28 fd ff ff       	call   100007dd <_ssfn__zreceive>
10000ab5:	89 c6                	mov    esi,eax
10000ab7:	85 c0                	test   eax,eax
10000ab9:	0f 85 09 01 00 00    	jne    10000bc8 <_ssfn_zlib_decode+0x1e5>
10000abf:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000ac6:	83 e2 07             	and    edx,0x7
10000ac9:	74 0c                	je     10000ad7 <_ssfn_zlib_decode+0xf4>
10000acb:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ad2:	e8 06 fd ff ff       	call   100007dd <_ssfn__zreceive>
10000ad7:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000ade:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000ae5:	31 c0                	xor    eax,eax
10000ae7:	31 db                	xor    ebx,ebx
10000ae9:	85 d2                	test   edx,edx
10000aeb:	7f 14                	jg     10000b01 <_ssfn_zlib_decode+0x11e>
10000aed:	84 db                	test   bl,bl
10000aef:	74 22                	je     10000b13 <_ssfn_zlib_decode+0x130>
10000af1:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000af8:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aff:	eb 12                	jmp    10000b13 <_ssfn_zlib_decode+0x130>
10000b01:	40                   	inc    eax
10000b02:	83 ea 08             	sub    edx,0x8
10000b05:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000b0c:	b3 01                	mov    bl,0x1
10000b0e:	c1 e9 08             	shr    ecx,0x8
10000b11:	eb d6                	jmp    10000ae9 <_ssfn_zlib_decode+0x106>
10000b13:	83 f8 04             	cmp    eax,0x4
10000b16:	74 1d                	je     10000b35 <_ssfn_zlib_decode+0x152>
10000b18:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b1f:	40                   	inc    eax
10000b20:	8d 4a 01             	lea    ecx,[edx+0x1]
10000b23:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000b2a:	8a 12                	mov    dl,BYTE PTR [edx]
10000b2c:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000b33:	eb de                	jmp    10000b13 <_ssfn_zlib_decode+0x130>
10000b35:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000b3d:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000b45:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000b4d:	c1 e3 08             	shl    ebx,0x8
10000b50:	01 c3                	add    ebx,eax
10000b52:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b5a:	c1 e0 08             	shl    eax,0x8
10000b5d:	01 d0                	add    eax,edx
10000b5f:	89 da                	mov    edx,ebx
10000b61:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b67:	39 d0                	cmp    eax,edx
10000b69:	0f 85 69 03 00 00    	jne    10000ed8 <_ssfn_zlib_decode+0x4f5>
10000b6f:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b76:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b79:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b80:	73 14                	jae    10000b96 <_ssfn_zlib_decode+0x1b3>
10000b82:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b89:	e8 19 f7 ff ff       	call   100002a7 <_ssfn__zexpand>
10000b8e:	85 c0                	test   eax,eax
10000b90:	0f 84 42 03 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000b96:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b9d:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000ba4:	39 f3                	cmp    ebx,esi
10000ba6:	74 09                	je     10000bb1 <_ssfn_zlib_decode+0x1ce>
10000ba8:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000bab:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000bae:	46                   	inc    esi
10000baf:	eb e5                	jmp    10000b96 <_ssfn_zlib_decode+0x1b3>
10000bb1:	01 da                	add    edx,ebx
10000bb3:	01 c3                	add    ebx,eax
10000bb5:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000bbc:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000bc3:	e9 fc 02 00 00       	jmp    10000ec4 <_ssfn_zlib_decode+0x4e1>
10000bc8:	83 f8 03             	cmp    eax,0x3
10000bcb:	0f 84 07 03 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000bd1:	4e                   	dec    esi
10000bd2:	75 2d                	jne    10000c01 <_ssfn_zlib_decode+0x21e>
10000bd4:	b9 20 01 00 00       	mov    ecx,0x120
10000bd9:	ba 80 d9 03 10       	mov    edx,0x1003d980	10000bda: R_386_32	.bss
10000bde:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000be5:	e8 1c f7 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000bea:	85 c0                	test   eax,eax
10000bec:	0f 84 e6 02 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000bf2:	b9 20 00 00 00       	mov    ecx,0x20
10000bf7:	ba 60 d9 03 10       	mov    edx,0x1003d960	10000bf8: R_386_32	.bss
10000bfc:	e9 78 01 00 00       	jmp    10000d79 <_ssfn_zlib_decode+0x396>
10000c01:	ba 05 00 00 00       	mov    edx,0x5
10000c06:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c0d:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000c11:	e8 c7 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c16:	89 df                	mov    edi,ebx
10000c18:	ba 05 00 00 00       	mov    edx,0x5
10000c1d:	89 c5                	mov    ebp,eax
10000c1f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c26:	e8 b2 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c2b:	ba 04 00 00 00       	mov    edx,0x4
10000c30:	89 c6                	mov    esi,eax
10000c32:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c39:	e8 9f fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c3e:	b9 13 00 00 00       	mov    ecx,0x13
10000c43:	83 c0 04             	add    eax,0x4
10000c46:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c4a:	31 c0                	xor    eax,eax
10000c4c:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000c4e:	31 ff                	xor    edi,edi
10000c50:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c54:	7e 1f                	jle    10000c75 <_ssfn_zlib_decode+0x292>
10000c56:	ba 03 00 00 00       	mov    edx,0x3
10000c5b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c62:	47                   	inc    edi
10000c63:	e8 75 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c68:	0f b6 97 9f ca 00 10 	movzx  edx,BYTE PTR [edi+0x1000ca9f]	10000c6b: R_386_32	.text
10000c6f:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c73:	eb db                	jmp    10000c50 <_ssfn_zlib_decode+0x26d>
10000c75:	b9 13 00 00 00       	mov    ecx,0x13
10000c7a:	89 da                	mov    edx,ebx
10000c7c:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c83:	e8 7e f6 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000c88:	85 c0                	test   eax,eax
10000c8a:	0f 84 48 02 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000c90:	8d 46 01             	lea    eax,[esi+0x1]
10000c93:	81 c5 01 01 00 00    	add    ebp,0x101
10000c99:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c9d:	31 f6                	xor    esi,esi
10000c9f:	01 e8                	add    eax,ebp
10000ca1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000ca5:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000ca9:	0f 8e 9f 00 00 00    	jle    10000d4e <_ssfn_zlib_decode+0x36b>
10000caf:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000cb6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cbd:	e8 35 f5 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000cc2:	83 f8 12             	cmp    eax,0x12
10000cc5:	0f 87 0d 02 00 00    	ja     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000ccb:	83 f8 0f             	cmp    eax,0xf
10000cce:	7f 07                	jg     10000cd7 <_ssfn_zlib_decode+0x2f4>
10000cd0:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000cd4:	46                   	inc    esi
10000cd5:	eb ce                	jmp    10000ca5 <_ssfn_zlib_decode+0x2c2>
10000cd7:	83 f8 10             	cmp    eax,0x10
10000cda:	75 22                	jne    10000cfe <_ssfn_zlib_decode+0x31b>
10000cdc:	ba 02 00 00 00       	mov    edx,0x2
10000ce1:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ce8:	e8 f0 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000ced:	85 f6                	test   esi,esi
10000cef:	8d 58 03             	lea    ebx,[eax+0x3]
10000cf2:	0f 84 e0 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000cf8:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000cfc:	eb 31                	jmp    10000d2f <_ssfn_zlib_decode+0x34c>
10000cfe:	83 f8 11             	cmp    eax,0x11
10000d01:	75 16                	jne    10000d19 <_ssfn_zlib_decode+0x336>
10000d03:	ba 03 00 00 00       	mov    edx,0x3
10000d08:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d0f:	e8 c9 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000d14:	8d 58 03             	lea    ebx,[eax+0x3]
10000d17:	eb 14                	jmp    10000d2d <_ssfn_zlib_decode+0x34a>
10000d19:	ba 07 00 00 00       	mov    edx,0x7
10000d1e:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d25:	e8 b3 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000d2a:	8d 58 0b             	lea    ebx,[eax+0xb]
10000d2d:	31 c0                	xor    eax,eax
10000d2f:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000d33:	29 f2                	sub    edx,esi
10000d35:	39 da                	cmp    edx,ebx
10000d37:	0f 8c 9b 01 00 00    	jl     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d3d:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000d41:	89 d9                	mov    ecx,ebx
10000d43:	89 d7                	mov    edi,edx
10000d45:	01 de                	add    esi,ebx
10000d47:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000d49:	e9 57 ff ff ff       	jmp    10000ca5 <_ssfn_zlib_decode+0x2c2>
10000d4e:	0f 85 84 01 00 00    	jne    10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d54:	89 e9                	mov    ecx,ebp
10000d56:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d5a:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d61:	e8 a0 f5 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000d66:	85 c0                	test   eax,eax
10000d68:	0f 84 6a 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d6e:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d72:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d76:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d79:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d80:	e8 81 f5 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000d85:	85 c0                	test   eax,eax
10000d87:	0f 84 4b 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d8d:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d94:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d9b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000da2:	e8 50 f4 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000da7:	89 c3                	mov    ebx,eax
10000da9:	3d ff 00 00 00       	cmp    eax,0xff
10000dae:	7f 34                	jg     10000de4 <_ssfn_zlib_decode+0x401>
10000db0:	85 c0                	test   eax,eax
10000db2:	0f 88 20 01 00 00    	js     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000db8:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000dbf:	77 1d                	ja     10000dde <_ssfn_zlib_decode+0x3fb>
10000dc1:	89 ea                	mov    edx,ebp
10000dc3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dca:	e8 d8 f4 ff ff       	call   100002a7 <_ssfn__zexpand>
10000dcf:	85 c0                	test   eax,eax
10000dd1:	0f 84 01 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000dd7:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000dde:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000de1:	45                   	inc    ebp
10000de2:	eb b0                	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000de4:	3d 00 01 00 00       	cmp    eax,0x100
10000de9:	75 0c                	jne    10000df7 <_ssfn_zlib_decode+0x414>
10000deb:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000df2:	e9 cd 00 00 00       	jmp    10000ec4 <_ssfn_zlib_decode+0x4e1>
10000df7:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000dfd:	8b 14 85 c0 cb 00 10 	mov    edx,DWORD PTR [eax*4+0x1000cbc0]	10000e00: R_386_32	.text
10000e04:	8b 1c 85 40 cc 00 10 	mov    ebx,DWORD PTR [eax*4+0x1000cc40]	10000e07: R_386_32	.text
10000e0b:	85 d2                	test   edx,edx
10000e0d:	74 0e                	je     10000e1d <_ssfn_zlib_decode+0x43a>
10000e0f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e16:	e8 c2 f9 ff ff       	call   100007dd <_ssfn__zreceive>
10000e1b:	01 c3                	add    ebx,eax
10000e1d:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000e24:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e2b:	e8 c7 f3 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000e30:	85 c0                	test   eax,eax
10000e32:	0f 88 a0 00 00 00    	js     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e38:	8b 14 85 c0 ca 00 10 	mov    edx,DWORD PTR [eax*4+0x1000cac0]	10000e3b: R_386_32	.text
10000e3f:	8b 3c 85 40 cb 00 10 	mov    edi,DWORD PTR [eax*4+0x1000cb40]	10000e42: R_386_32	.text
10000e46:	85 d2                	test   edx,edx
10000e48:	74 0e                	je     10000e58 <_ssfn_zlib_decode+0x475>
10000e4a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e51:	e8 87 f9 ff ff       	call   100007dd <_ssfn__zreceive>
10000e56:	01 c7                	add    edi,eax
10000e58:	89 e8                	mov    eax,ebp
10000e5a:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e61:	39 f8                	cmp    eax,edi
10000e63:	7c 73                	jl     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e65:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e69:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e70:	73 19                	jae    10000e8b <_ssfn_zlib_decode+0x4a8>
10000e72:	89 ea                	mov    edx,ebp
10000e74:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e7b:	e8 27 f4 ff ff       	call   100002a7 <_ssfn__zexpand>
10000e80:	85 c0                	test   eax,eax
10000e82:	74 54                	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e84:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e8b:	89 ee                	mov    esi,ebp
10000e8d:	29 fe                	sub    esi,edi
10000e8f:	4f                   	dec    edi
10000e90:	75 19                	jne    10000eab <_ssfn_zlib_decode+0x4c8>
10000e92:	85 db                	test   ebx,ebx
10000e94:	0f 84 fa fe ff ff    	je     10000d94 <_ssfn_zlib_decode+0x3b1>
10000e9a:	8a 06                	mov    al,BYTE PTR [esi]
10000e9c:	01 eb                	add    ebx,ebp
10000e9e:	45                   	inc    ebp
10000e9f:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000ea2:	39 dd                	cmp    ebp,ebx
10000ea4:	75 f8                	jne    10000e9e <_ssfn_zlib_decode+0x4bb>
10000ea6:	e9 e9 fe ff ff       	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000eab:	85 db                	test   ebx,ebx
10000ead:	0f 84 e1 fe ff ff    	je     10000d94 <_ssfn_zlib_decode+0x3b1>
10000eb3:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000eb6:	89 ef                	mov    edi,ebp
10000eb8:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000eb9:	39 f0                	cmp    eax,esi
10000ebb:	75 fb                	jne    10000eb8 <_ssfn_zlib_decode+0x4d5>
10000ebd:	01 dd                	add    ebp,ebx
10000ebf:	e9 d0 fe ff ff       	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000ec4:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000ec9:	0f 84 c0 fb ff ff    	je     10000a8f <_ssfn_zlib_decode+0xac>
10000ecf:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000ed6:	eb 14                	jmp    10000eec <_ssfn_zlib_decode+0x509>
10000ed8:	83 ec 0c             	sub    esp,0xc
10000edb:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000ee2:	e8 fc ff ff ff       	call   10000ee3 <_ssfn_zlib_decode+0x500>	10000ee3: R_386_PC32	free
10000ee7:	83 c4 10             	add    esp,0x10
10000eea:	31 c0                	xor    eax,eax
10000eec:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000ef2:	5b                   	pop    ebx
10000ef3:	5e                   	pop    esi
10000ef4:	5f                   	pop    edi
10000ef5:	5d                   	pop    ebp
10000ef6:	c3                   	ret    

10000ef7 <ssfn_load>:
10000ef7:	55                   	push   ebp
10000ef8:	57                   	push   edi
10000ef9:	56                   	push   esi
10000efa:	53                   	push   ebx
10000efb:	83 ec 1c             	sub    esp,0x1c
10000efe:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000f02:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000f06:	85 ff                	test   edi,edi
10000f08:	0f 84 d0 01 00 00    	je     100010de <ssfn_load+0x1e7>
10000f0e:	85 f6                	test   esi,esi
10000f10:	0f 84 c8 01 00 00    	je     100010de <ssfn_load+0x1e7>
10000f16:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000f19:	0f 85 a8 00 00 00    	jne    10000fc7 <ssfn_load+0xd0>
10000f1f:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000f23:	0f 85 9e 00 00 00    	jne    10000fc7 <ssfn_load+0xd0>
10000f29:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000f2d:	74 0a                	je     10000f39 <ssfn_load+0x42>
10000f2f:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000f34:	e9 aa 01 00 00       	jmp    100010e3 <ssfn_load+0x1ec>
10000f39:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000f3c:	a8 04                	test   al,0x4
10000f3e:	75 05                	jne    10000f45 <ssfn_load+0x4e>
10000f40:	83 c6 0a             	add    esi,0xa
10000f43:	eb 08                	jmp    10000f4d <ssfn_load+0x56>
10000f45:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000f49:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000f4d:	a8 08                	test   al,0x8
10000f4f:	74 07                	je     10000f58 <ssfn_load+0x61>
10000f51:	46                   	inc    esi
10000f52:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f56:	eb f7                	jmp    10000f4f <ssfn_load+0x58>
10000f58:	a8 10                	test   al,0x10
10000f5a:	74 07                	je     10000f63 <ssfn_load+0x6c>
10000f5c:	46                   	inc    esi
10000f5d:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f61:	eb f7                	jmp    10000f5a <ssfn_load+0x63>
10000f63:	83 ec 0c             	sub    esp,0xc
10000f66:	56                   	push   esi
10000f67:	e8 fc ff ff ff       	call   10000f68 <ssfn_load+0x71>	10000f68: R_386_PC32	_ssfn_zlib_decode
10000f6c:	83 c4 10             	add    esp,0x10
10000f6f:	89 c6                	mov    esi,eax
10000f71:	85 c0                	test   eax,eax
10000f73:	74 ba                	je     10000f2f <ssfn_load+0x38>
10000f75:	50                   	push   eax
10000f76:	50                   	push   eax
10000f77:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f7d:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f84:	50                   	push   eax
10000f85:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f8b:	e8 fc ff ff ff       	call   10000f8c <ssfn_load+0x95>	10000f8c: R_386_PC32	realloc
10000f90:	83 c4 10             	add    esp,0x10
10000f93:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f99:	85 c0                	test   eax,eax
10000f9b:	75 0f                	jne    10000fac <ssfn_load+0xb5>
10000f9d:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000fa7:	e9 1a 01 00 00       	jmp    100010c6 <ssfn_load+0x1cf>
10000fac:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000fb2:	8d 4a 01             	lea    ecx,[edx+0x1]
10000fb5:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000fbb:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000fbe:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000fc1:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000fc7:	50                   	push   eax
10000fc8:	6a 04                	push   0x4
10000fca:	68 83 c9 00 10       	push   0x1000c983	10000fcb: R_386_32	.text
10000fcf:	56                   	push   esi
10000fd0:	e8 fc ff ff ff       	call   10000fd1 <ssfn_load+0xda>	10000fd1: R_386_PC32	memcmp
10000fd5:	83 c4 10             	add    esp,0x10
10000fd8:	89 c5                	mov    ebp,eax
10000fda:	85 c0                	test   eax,eax
10000fdc:	75 29                	jne    10001007 <ssfn_load+0x110>
10000fde:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fe1:	01 f3                	add    ebx,esi
10000fe3:	83 c6 08             	add    esi,0x8
10000fe6:	39 de                	cmp    esi,ebx
10000fe8:	0f 83 f5 00 00 00    	jae    100010e3 <ssfn_load+0x1ec>
10000fee:	50                   	push   eax
10000fef:	50                   	push   eax
10000ff0:	56                   	push   esi
10000ff1:	57                   	push   edi
10000ff2:	e8 fc ff ff ff       	call   10000ff3 <ssfn_load+0xfc>	10000ff3: R_386_PC32	ssfn_load
10000ff7:	83 c4 10             	add    esp,0x10
10000ffa:	85 c0                	test   eax,eax
10000ffc:	0f 85 e1 00 00 00    	jne    100010e3 <ssfn_load+0x1ec>
10001002:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10001005:	eb df                	jmp    10000fe6 <ssfn_load+0xef>
10001007:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
1000100a:	83 e0 0f             	and    eax,0xf
1000100d:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10001011:	53                   	push   ebx
10001012:	6a 04                	push   0x4
10001014:	68 88 c9 00 10       	push   0x1000c988	10001015: R_386_32	.text
10001019:	56                   	push   esi
1000101a:	e8 fc ff ff ff       	call   1000101b <ssfn_load+0x124>	1000101b: R_386_PC32	memcmp
1000101f:	83 c4 10             	add    esp,0x10
10001022:	89 c5                	mov    ebp,eax
10001024:	85 c0                	test   eax,eax
10001026:	0f 85 03 ff ff ff    	jne    10000f2f <ssfn_load+0x38>
1000102c:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
1000102f:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10001033:	51                   	push   ecx
10001034:	6a 04                	push   0x4
10001036:	68 8d c9 00 10       	push   0x1000c98d	10001037: R_386_32	.text
1000103b:	50                   	push   eax
1000103c:	e8 fc ff ff ff       	call   1000103d <ssfn_load+0x146>	1000103d: R_386_PC32	memcmp
10001041:	83 c4 10             	add    esp,0x10
10001044:	85 c0                	test   eax,eax
10001046:	0f 85 e3 fe ff ff    	jne    10000f2f <ssfn_load+0x38>
1000104c:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10001051:	0f 87 d8 fe ff ff    	ja     10000f2f <ssfn_load+0x38>
10001057:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
1000105b:	39 cb                	cmp    ebx,ecx
1000105d:	0f 86 cc fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001063:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10001066:	39 c3                	cmp    ebx,eax
10001068:	0f 86 c1 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
1000106e:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001071:	0f 86 b8 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001077:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000107a:	0f 86 af fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001080:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001083:	0f 86 a6 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001089:	39 c1                	cmp    ecx,eax
1000108b:	0f 83 9e fe ff ff    	jae    10000f2f <ssfn_load+0x38>
10001091:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10001096:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001099:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
1000109f:	40                   	inc    eax
100010a0:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
100010a6:	52                   	push   edx
100010a7:	c1 e0 02             	shl    eax,0x2
100010aa:	52                   	push   edx
100010ab:	50                   	push   eax
100010ac:	ff 33                	push   DWORD PTR [ebx]
100010ae:	e8 fc ff ff ff       	call   100010af <ssfn_load+0x1b8>	100010af: R_386_PC32	realloc
100010b3:	83 c4 10             	add    esp,0x10
100010b6:	89 03                	mov    DWORD PTR [ebx],eax
100010b8:	85 c0                	test   eax,eax
100010ba:	75 0f                	jne    100010cb <ssfn_load+0x1d4>
100010bc:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
100010c6:	83 cd ff             	or     ebp,0xffffffff
100010c9:	eb 18                	jmp    100010e3 <ssfn_load+0x1ec>
100010cb:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
100010d1:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
100010d5:	89 f8                	mov    eax,edi
100010d7:	e8 ad f3 ff ff       	call   10000489 <_ssfn_fc.part.1>
100010dc:	eb 05                	jmp    100010e3 <ssfn_load+0x1ec>
100010de:	bd fc ff ff ff       	mov    ebp,0xfffffffc
100010e3:	83 c4 1c             	add    esp,0x1c
100010e6:	89 e8                	mov    eax,ebp
100010e8:	5b                   	pop    ebx
100010e9:	5e                   	pop    esi
100010ea:	5f                   	pop    edi
100010eb:	5d                   	pop    ebp
100010ec:	c3                   	ret    

100010ed <ssfn_free>:
100010ed:	57                   	push   edi
100010ee:	56                   	push   esi
100010ef:	53                   	push   ebx
100010f0:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010f4:	85 db                	test   ebx,ebx
100010f6:	74 7e                	je     10001176 <ssfn_free+0x89>
100010f8:	89 d8                	mov    eax,ebx
100010fa:	e8 8a f3 ff ff       	call   10000489 <_ssfn_fc.part.1>
100010ff:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
10001106:	74 32                	je     1000113a <ssfn_free+0x4d>
10001108:	31 f6                	xor    esi,esi
1000110a:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
10001110:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
10001116:	7e 16                	jle    1000112e <ssfn_free+0x41>
10001118:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000111b:	85 c0                	test   eax,eax
1000111d:	74 0c                	je     1000112b <ssfn_free+0x3e>
1000111f:	83 ec 0c             	sub    esp,0xc
10001122:	50                   	push   eax
10001123:	e8 fc ff ff ff       	call   10001124 <ssfn_free+0x37>	10001124: R_386_PC32	free
10001128:	83 c4 10             	add    esp,0x10
1000112b:	46                   	inc    esi
1000112c:	eb dc                	jmp    1000110a <ssfn_free+0x1d>
1000112e:	83 ec 0c             	sub    esp,0xc
10001131:	50                   	push   eax
10001132:	e8 fc ff ff ff       	call   10001133 <ssfn_free+0x46>	10001133: R_386_PC32	free
10001137:	83 c4 10             	add    esp,0x10
1000113a:	31 f6                	xor    esi,esi
1000113c:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
1000113f:	85 c0                	test   eax,eax
10001141:	74 0c                	je     1000114f <ssfn_free+0x62>
10001143:	83 ec 0c             	sub    esp,0xc
10001146:	50                   	push   eax
10001147:	e8 fc ff ff ff       	call   10001148 <ssfn_free+0x5b>	10001148: R_386_PC32	free
1000114c:	83 c4 10             	add    esp,0x10
1000114f:	46                   	inc    esi
10001150:	83 fe 05             	cmp    esi,0x5
10001153:	75 e7                	jne    1000113c <ssfn_free+0x4f>
10001155:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000115b:	85 c0                	test   eax,eax
1000115d:	74 0c                	je     1000116b <ssfn_free+0x7e>
1000115f:	83 ec 0c             	sub    esp,0xc
10001162:	50                   	push   eax
10001163:	e8 fc ff ff ff       	call   10001164 <ssfn_free+0x77>	10001164: R_386_PC32	free
10001168:	83 c4 10             	add    esp,0x10
1000116b:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001170:	31 c0                	xor    eax,eax
10001172:	89 df                	mov    edi,ebx
10001174:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001176:	5b                   	pop    ebx
10001177:	5e                   	pop    esi
10001178:	5f                   	pop    edi
10001179:	c3                   	ret    

1000117a <ssfn_mem>:
1000117a:	55                   	push   ebp
1000117b:	31 c0                	xor    eax,eax
1000117d:	57                   	push   edi
1000117e:	56                   	push   esi
1000117f:	53                   	push   ebx
10001180:	83 ec 08             	sub    esp,0x8
10001183:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001187:	85 d2                	test   edx,edx
10001189:	0f 84 8e 00 00 00    	je     1000121d <ssfn_mem+0xa3>
1000118f:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001194:	31 c9                	xor    ecx,ecx
10001196:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
1000119d:	41                   	inc    ecx
1000119e:	8d 04 98             	lea    eax,[eax+ebx*4]
100011a1:	83 f9 05             	cmp    ecx,0x5
100011a4:	75 f0                	jne    10001196 <ssfn_mem+0x1c>
100011a6:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
100011ac:	31 c9                	xor    ecx,ecx
100011ae:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
100011b5:	89 34 24             	mov    DWORD PTR [esp],esi
100011b8:	85 f6                	test   esi,esi
100011ba:	74 48                	je     10001204 <ssfn_mem+0x8a>
100011bc:	31 db                	xor    ebx,ebx
100011be:	8b 34 24             	mov    esi,DWORD PTR [esp]
100011c1:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
100011c4:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
100011c8:	85 ff                	test   edi,edi
100011ca:	74 2a                	je     100011f6 <ssfn_mem+0x7c>
100011cc:	31 f6                	xor    esi,esi
100011ce:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100011d2:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
100011d5:	85 ed                	test   ebp,ebp
100011d7:	74 0f                	je     100011e8 <ssfn_mem+0x6e>
100011d9:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
100011dd:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
100011e1:	0f af fd             	imul   edi,ebp
100011e4:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
100011e8:	46                   	inc    esi
100011e9:	81 fe 00 01 00 00    	cmp    esi,0x100
100011ef:	75 dd                	jne    100011ce <ssfn_mem+0x54>
100011f1:	05 00 04 00 00       	add    eax,0x400
100011f6:	43                   	inc    ebx
100011f7:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011fd:	75 bf                	jne    100011be <ssfn_mem+0x44>
100011ff:	05 00 04 00 00       	add    eax,0x400
10001204:	41                   	inc    ecx
10001205:	83 f9 11             	cmp    ecx,0x11
10001208:	75 a4                	jne    100011ae <ssfn_mem+0x34>
1000120a:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
10001211:	74 0a                	je     1000121d <ssfn_mem+0xa3>
10001213:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
10001219:	01 d2                	add    edx,edx
1000121b:	01 d0                	add    eax,edx
1000121d:	83 c4 08             	add    esp,0x8
10001220:	5b                   	pop    ebx
10001221:	5e                   	pop    esi
10001222:	5f                   	pop    edi
10001223:	5d                   	pop    ebp
10001224:	c3                   	ret    

10001225 <ssfn_select>:
10001225:	55                   	push   ebp
10001226:	57                   	push   edi
10001227:	56                   	push   esi
10001228:	53                   	push   ebx
10001229:	83 ec 1c             	sub    esp,0x1c
1000122c:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10001230:	85 db                	test   ebx,ebx
10001232:	75 0a                	jne    1000123e <ssfn_select+0x19>
10001234:	be fc ff ff ff       	mov    esi,0xfffffffc
10001239:	e9 13 01 00 00       	jmp    10001351 <ssfn_select+0x12c>
1000123e:	89 d8                	mov    eax,ebx
10001240:	e8 44 f2 ff ff       	call   10000489 <_ssfn_fc.part.1>
10001245:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10001249:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
1000124f:	0f 85 e9 00 00 00    	jne    1000133e <ssfn_select+0x119>
10001255:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001259:	83 e8 08             	sub    eax,0x8
1000125c:	3d b8 00 00 00       	cmp    eax,0xb8
10001261:	0f 87 de 00 00 00    	ja     10001345 <ssfn_select+0x120>
10001267:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
1000126f:	75 76                	jne    100012e7 <ssfn_select+0xc2>
10001271:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001276:	74 bc                	je     10001234 <ssfn_select+0xf>
10001278:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000127c:	80 38 00             	cmp    BYTE PTR [eax],0x0
1000127f:	74 b3                	je     10001234 <ssfn_select+0xf>
10001281:	31 ed                	xor    ebp,ebp
10001283:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001287:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000128b:	74 03                	je     10001290 <ssfn_select+0x6b>
1000128d:	45                   	inc    ebp
1000128e:	eb f3                	jmp    10001283 <ssfn_select+0x5e>
10001290:	8d 43 14             	lea    eax,[ebx+0x14]
10001293:	89 df                	mov    edi,ebx
10001295:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001299:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
1000129f:	31 d2                	xor    edx,edx
100012a1:	89 04 24             	mov    DWORD PTR [esp],eax
100012a4:	39 14 24             	cmp    DWORD PTR [esp],edx
100012a7:	7e 33                	jle    100012dc <ssfn_select+0xb7>
100012a9:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100012ad:	8b 07                	mov    eax,DWORD PTR [edi]
100012af:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
100012b2:	50                   	push   eax
100012b3:	8d 41 20             	lea    eax,[ecx+0x20]
100012b6:	55                   	push   ebp
100012b7:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
100012bb:	50                   	push   eax
100012bc:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
100012c0:	e8 fc ff ff ff       	call   100012c1 <ssfn_select+0x9c>	100012c1: R_386_PC32	memcmp
100012c5:	83 c4 10             	add    esp,0x10
100012c8:	85 c0                	test   eax,eax
100012ca:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
100012ce:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100012d2:	75 05                	jne    100012d9 <ssfn_select+0xb4>
100012d4:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
100012d7:	eb 34                	jmp    1000130d <ssfn_select+0xe8>
100012d9:	42                   	inc    edx
100012da:	eb c8                	jmp    100012a4 <ssfn_select+0x7f>
100012dc:	83 c7 04             	add    edi,0x4
100012df:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
100012e3:	75 b4                	jne    10001299 <ssfn_select+0x74>
100012e5:	eb 65                	jmp    1000134c <ssfn_select+0x127>
100012e7:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
100012ef:	74 15                	je     10001306 <ssfn_select+0xe1>
100012f1:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012f6:	7f 54                	jg     1000134c <ssfn_select+0x127>
100012f8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012fc:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
10001304:	74 46                	je     1000134c <ssfn_select+0x127>
10001306:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
1000130d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001311:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
10001318:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
1000131e:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
10001328:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000132c:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
10001332:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001336:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
1000133c:	eb 13                	jmp    10001351 <ssfn_select+0x12c>
1000133e:	be fb ff ff ff       	mov    esi,0xfffffffb
10001343:	eb 0c                	jmp    10001351 <ssfn_select+0x12c>
10001345:	be fa ff ff ff       	mov    esi,0xfffffffa
1000134a:	eb 05                	jmp    10001351 <ssfn_select+0x12c>
1000134c:	be fd ff ff ff       	mov    esi,0xfffffffd
10001351:	83 c4 1c             	add    esp,0x1c
10001354:	89 f0                	mov    eax,esi
10001356:	5b                   	pop    ebx
10001357:	5e                   	pop    esi
10001358:	5f                   	pop    edi
10001359:	5d                   	pop    ebp
1000135a:	c3                   	ret    

1000135b <ssfn_render>:
1000135b:	55                   	push   ebp
1000135c:	57                   	push   edi
1000135d:	56                   	push   esi
1000135e:	53                   	push   ebx
1000135f:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001365:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
1000136c:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
10001377:	85 ed                	test   ebp,ebp
10001379:	0f 94 c2             	sete   dl
1000137c:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001384:	0f 94 c0             	sete   al
10001387:	08 c2                	or     dl,al
10001389:	74 0a                	je     10001395 <ssfn_render+0x3a>
1000138b:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001390:	e9 14 1e 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001395:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
1000139c:	31 c9                	xor    ecx,ecx
1000139e:	8a 00                	mov    al,BYTE PTR [eax]
100013a0:	84 c0                	test   al,al
100013a2:	0f 84 01 1e 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100013a8:	3c 0d                	cmp    al,0xd
100013aa:	75 0f                	jne    100013bb <ssfn_render+0x60>
100013ac:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100013b3:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
100013b9:	eb 31                	jmp    100013ec <ssfn_render+0x91>
100013bb:	3c 0a                	cmp    al,0xa
100013bd:	75 37                	jne    100013f6 <ssfn_render+0x9b>
100013bf:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100013c6:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
100013cc:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
100013cf:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
100013d5:	85 c0                	test   eax,eax
100013d7:	75 06                	jne    100013df <ssfn_render+0x84>
100013d9:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
100013df:	01 d0                	add    eax,edx
100013e1:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100013e8:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
100013ec:	b9 01 00 00 00       	mov    ecx,0x1
100013f1:	e9 b3 1d 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
100013f6:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013f9:	85 c0                	test   eax,eax
100013fb:	74 3e                	je     1000143b <ssfn_render+0xe0>
100013fd:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
10001400:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
10001407:	56                   	push   esi
10001408:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000140f:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001416:	e8 a0 f4 ff ff       	call   100008bb <_ssfn_c>
1000141b:	5b                   	pop    ebx
1000141c:	85 c0                	test   eax,eax
1000141e:	0f 85 71 02 00 00    	jne    10001695 <ssfn_render+0x33a>
10001424:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
1000142a:	81 e2 00 01 00 00    	and    edx,0x100
10001430:	0f 84 fd 01 00 00    	je     10001633 <ssfn_render+0x2d8>
10001436:	e9 1d 02 00 00       	jmp    10001658 <ssfn_render+0x2fd>
1000143b:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
10001441:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
10001448:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000144c:	3d fd 00 00 00       	cmp    eax,0xfd
10001451:	7f 08                	jg     1000145b <ssfn_render+0x100>
10001453:	89 c3                	mov    ebx,eax
10001455:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001459:	eb 3f                	jmp    1000149a <ssfn_render+0x13f>
1000145b:	31 db                	xor    ebx,ebx
1000145d:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001465:	eb 33                	jmp    1000149a <ssfn_render+0x13f>
10001467:	85 c0                	test   eax,eax
10001469:	0f 84 64 01 00 00    	je     100015d3 <ssfn_render+0x278>
1000146f:	43                   	inc    ebx
10001470:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001474:	7e 28                	jle    1000149e <ssfn_render+0x143>
10001476:	85 c0                	test   eax,eax
10001478:	0f 85 17 02 00 00    	jne    10001695 <ssfn_render+0x33a>
1000147e:	31 db                	xor    ebx,ebx
10001480:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001488:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001490:	74 92                	je     10001424 <ssfn_render+0xc9>
10001492:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000149a:	31 c0                	xor    eax,eax
1000149c:	eb d2                	jmp    10001470 <ssfn_render+0x115>
1000149e:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
100014a2:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
100014a9:	74 bc                	je     10001467 <ssfn_render+0x10c>
100014ab:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014b6:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100014bd:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
100014c4:	7e 50                	jle    10001516 <ssfn_render+0x1bb>
100014c6:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
100014c9:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
100014cd:	c1 fa 04             	sar    edx,0x4
100014d0:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
100014d6:	80 e2 03             	and    dl,0x3
100014d9:	75 32                	jne    1000150d <ssfn_render+0x1b2>
100014db:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
100014df:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014e5:	75 26                	jne    1000150d <ssfn_render+0x1b2>
100014e7:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
100014ee:	50                   	push   eax
100014ef:	89 f8                	mov    eax,edi
100014f1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014f8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014ff:	e8 b7 f3 ff ff       	call   100008bb <_ssfn_c>
10001504:	59                   	pop    ecx
10001505:	85 c0                	test   eax,eax
10001507:	0f 85 04 01 00 00    	jne    10001611 <ssfn_render+0x2b6>
1000150d:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001514:	eb a0                	jmp    100014b6 <ssfn_render+0x15b>
10001516:	85 c0                	test   eax,eax
10001518:	0f 85 51 ff ff ff    	jne    1000146f <ssfn_render+0x114>
1000151e:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001529:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001530:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001537:	0f 8e f9 1b 00 00    	jle    10003136 <ssfn_render+0x1ddb>
1000153d:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001540:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
10001544:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
1000154a:	74 09                	je     10001555 <ssfn_render+0x1fa>
1000154c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001553:	eb d4                	jmp    10001529 <ssfn_render+0x1ce>
10001555:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000155c:	57                   	push   edi
1000155d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001564:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000156b:	e8 4b f3 ff ff       	call   100008bb <_ssfn_c>
10001570:	5a                   	pop    edx
10001571:	85 c0                	test   eax,eax
10001573:	74 d7                	je     1000154c <ssfn_render+0x1f1>
10001575:	e9 97 00 00 00       	jmp    10001611 <ssfn_render+0x2b6>
1000157a:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000157d:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001581:	c1 fa 04             	sar    edx,0x4
10001584:	31 ca                	xor    edx,ecx
10001586:	80 e2 03             	and    dl,0x3
10001589:	0f 84 b7 1b 00 00    	je     10003146 <ssfn_render+0x1deb>
1000158f:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001596:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000159d:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
100015a3:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015aa:	7f ce                	jg     1000157a <ssfn_render+0x21f>
100015ac:	83 e1 03             	and    ecx,0x3
100015af:	83 f9 03             	cmp    ecx,0x3
100015b2:	75 1f                	jne    100015d3 <ssfn_render+0x278>
100015b4:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100015bf:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100015c6:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015cd:	0f 8f 9c 1b 00 00    	jg     1000316f <ssfn_render+0x1e14>
100015d3:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100015de:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100015e5:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015ec:	7e 3e                	jle    1000162c <ssfn_render+0x2d1>
100015ee:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100015f1:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015f8:	57                   	push   edi
100015f9:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001600:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001607:	e8 af f2 ff ff       	call   100008bb <_ssfn_c>
1000160c:	5a                   	pop    edx
1000160d:	85 c0                	test   eax,eax
1000160f:	74 12                	je     10001623 <ssfn_render+0x2c8>
10001611:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001618:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
1000161b:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
1000161e:	e9 4c fe ff ff       	jmp    1000146f <ssfn_render+0x114>
10001623:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000162a:	eb b2                	jmp    100015de <ssfn_render+0x283>
1000162c:	31 c0                	xor    eax,eax
1000162e:	e9 3c fe ff ff       	jmp    1000146f <ssfn_render+0x114>
10001633:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
10001639:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
10001644:	81 fb fd 00 00 00    	cmp    ebx,0xfd
1000164a:	7f 16                	jg     10001662 <ssfn_render+0x307>
1000164c:	89 da                	mov    edx,ebx
1000164e:	31 c0                	xor    eax,eax
10001650:	39 da                	cmp    edx,ebx
10001652:	7e 15                	jle    10001669 <ssfn_render+0x30e>
10001654:	85 c0                	test   eax,eax
10001656:	75 3d                	jne    10001695 <ssfn_render+0x33a>
10001658:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
1000165d:	e9 47 1b 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001662:	bb 04 00 00 00       	mov    ebx,0x4
10001667:	eb e5                	jmp    1000164e <ssfn_render+0x2f3>
10001669:	85 c0                	test   eax,eax
1000166b:	75 28                	jne    10001695 <ssfn_render+0x33a>
1000166d:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001675:	74 1b                	je     10001692 <ssfn_render+0x337>
10001677:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
1000167b:	8b 09                	mov    ecx,DWORD PTR [ecx]
1000167d:	85 c9                	test   ecx,ecx
1000167f:	74 11                	je     10001692 <ssfn_render+0x337>
10001681:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001684:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001688:	78 08                	js     10001692 <ssfn_render+0x337>
1000168a:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
1000168d:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001690:	01 c8                	add    eax,ecx
10001692:	42                   	inc    edx
10001693:	eb bb                	jmp    10001650 <ssfn_render+0x2f5>
10001695:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001698:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
1000169d:	85 d2                	test   edx,edx
1000169f:	0f 84 04 1b 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016a5:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
100016a9:	0f 84 fa 1a 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016af:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
100016b5:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100016b9:	85 ff                	test   edi,edi
100016bb:	0f 84 e8 1a 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016c1:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
100016c8:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
100016cc:	c1 ef 10             	shr    edi,0x10
100016cf:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
100016d3:	83 ff 10             	cmp    edi,0x10
100016d6:	0f 87 af fc ff ff    	ja     1000138b <ssfn_render+0x30>
100016dc:	8d 70 06             	lea    esi,[eax+0x6]
100016df:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
100016e5:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
100016e9:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
100016ef:	89 f7                	mov    edi,esi
100016f1:	81 e7 00 02 00 00    	and    edi,0x200
100016f7:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016fb:	75 34                	jne    10001731 <ssfn_render+0x3d6>
100016fd:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001701:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
10001708:	85 c9                	test   ecx,ecx
1000170a:	74 25                	je     10001731 <ssfn_render+0x3d6>
1000170c:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001710:	0f b6 ff             	movzx  edi,bh
10001713:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001716:	85 c9                	test   ecx,ecx
10001718:	74 17                	je     10001731 <ssfn_render+0x3d6>
1000171a:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
1000171f:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001722:	85 c9                	test   ecx,ecx
10001724:	74 0b                	je     10001731 <ssfn_render+0x3d6>
10001726:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
1000172c:	e9 25 0d 00 00       	jmp    10002456 <ssfn_render+0x10fb>
10001731:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
10001735:	f7 c6 40 00 00 00    	test   esi,0x40
1000173b:	75 1a                	jne    10001757 <ssfn_render+0x3fc>
1000173d:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10001741:	7e 10                	jle    10001753 <ssfn_render+0x3f8>
10001743:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001747:	83 c7 04             	add    edi,0x4
1000174a:	83 e7 fc             	and    edi,0xfffffffc
1000174d:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001751:	eb 04                	jmp    10001757 <ssfn_render+0x3fc>
10001753:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001757:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
1000175c:	f7 c6 02 00 00 00    	test   esi,0x2
10001762:	74 14                	je     10001778 <ssfn_render+0x41d>
10001764:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
10001767:	c0 eb 05             	shr    bl,0x5
1000176a:	89 df                	mov    edi,ebx
1000176c:	83 f7 01             	xor    edi,0x1
1000176f:	83 e7 01             	and    edi,0x1
10001772:	89 fb                	mov    ebx,edi
10001774:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001778:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
1000177d:	83 e6 01             	and    esi,0x1
10001780:	74 10                	je     10001792 <ssfn_render+0x437>
10001782:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
10001786:	75 0a                	jne    10001792 <ssfn_render+0x437>
10001788:	8d 51 40             	lea    edx,[ecx+0x40]
1000178b:	c1 fa 06             	sar    edx,0x6
1000178e:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001792:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
10001796:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000179b:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000179f:	99                   	cdq    
100017a0:	f7 f9                	idiv   ecx
100017a2:	89 c1                	mov    ecx,eax
100017a4:	31 c0                	xor    eax,eax
100017a6:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100017ab:	74 0c                	je     100017b9 <ssfn_render+0x45e>
100017ad:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100017b1:	be 04 00 00 00       	mov    esi,0x4
100017b6:	99                   	cdq    
100017b7:	f7 fe                	idiv   esi
100017b9:	01 c8                	add    eax,ecx
100017bb:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
100017c0:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
100017c5:	01 f0                	add    eax,esi
100017c7:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
100017cb:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100017cf:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100017d3:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
100017d8:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100017dc:	3d ff f4 00 00       	cmp    eax,0xf4ff
100017e1:	0f 8f c2 19 00 00    	jg     100031a9 <ssfn_render+0x1e4e>
100017e7:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
100017ec:	0f 85 f0 00 00 00    	jne    100018e2 <ssfn_render+0x587>
100017f2:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017f6:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017fa:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
10001801:	75 2f                	jne    10001832 <ssfn_render+0x4d7>
10001803:	83 ec 0c             	sub    esp,0xc
10001806:	68 00 04 00 00       	push   0x400
1000180b:	e8 fc ff ff ff       	call   1000180c <ssfn_render+0x4b1>	1000180c: R_386_PC32	malloc
10001810:	83 c4 10             	add    esp,0x10
10001813:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
10001819:	85 c0                	test   eax,eax
1000181b:	75 08                	jne    10001825 <ssfn_render+0x4ca>
1000181d:	83 c9 ff             	or     ecx,0xffffffff
10001820:	e9 84 19 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001825:	89 c7                	mov    edi,eax
10001827:	b9 00 01 00 00       	mov    ecx,0x100
1000182c:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001830:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001832:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001836:	0f b6 dc             	movzx  ebx,ah
10001839:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
1000183f:	8d 1c 98             	lea    ebx,[eax+ebx*4]
10001842:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10001845:	75 3a                	jne    10001881 <ssfn_render+0x526>
10001847:	83 ec 0c             	sub    esp,0xc
1000184a:	68 00 04 00 00       	push   0x400
1000184f:	e8 fc ff ff ff       	call   10001850 <ssfn_render+0x4f5>	10001850: R_386_PC32	malloc
10001854:	89 03                	mov    DWORD PTR [ebx],eax
10001856:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000185d:	83 c4 10             	add    esp,0x10
10001860:	89 c2                	mov    edx,eax
10001862:	0f b6 c4             	movzx  eax,ah
10001865:	c1 ea 10             	shr    edx,0x10
10001868:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000186f:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
10001872:	85 d2                	test   edx,edx
10001874:	74 a7                	je     1000181d <ssfn_render+0x4c2>
10001876:	b9 00 01 00 00       	mov    ecx,0x100
1000187b:	31 c0                	xor    eax,eax
1000187d:	89 d7                	mov    edi,edx
1000187f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001881:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001888:	83 ec 0c             	sub    esp,0xc
1000188b:	0f b6 cc             	movzx  ecx,ah
1000188e:	89 c2                	mov    edx,eax
10001890:	0f b6 c0             	movzx  eax,al
10001893:	c1 ea 10             	shr    edx,0x10
10001896:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000189d:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
100018a0:	8d 1c 82             	lea    ebx,[edx+eax*4]
100018a3:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100018a7:	83 c0 08             	add    eax,0x8
100018aa:	50                   	push   eax
100018ab:	e8 fc ff ff ff       	call   100018ac <ssfn_render+0x551>	100018ac: R_386_PC32	malloc
100018b0:	89 03                	mov    DWORD PTR [ebx],eax
100018b2:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100018b8:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
100018bf:	83 c4 10             	add    esp,0x10
100018c2:	89 c2                	mov    edx,eax
100018c4:	0f b6 cc             	movzx  ecx,ah
100018c7:	c1 ea 10             	shr    edx,0x10
100018ca:	0f b6 c0             	movzx  eax,al
100018cd:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100018d4:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
100018d7:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
100018db:	75 0e                	jne    100018eb <ssfn_render+0x590>
100018dd:	e9 3b ff ff ff       	jmp    1000181d <ssfn_render+0x4c2>
100018e2:	8d 45 1c             	lea    eax,[ebp+0x1c]
100018e5:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100018eb:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
100018f1:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018f5:	74 2a                	je     10001921 <ssfn_render+0x5c6>
100018f7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018fc:	74 23                	je     10001921 <ssfn_render+0x5c6>
100018fe:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001901:	bb 04 00 00 00       	mov    ebx,0x4
10001906:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000190a:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
1000190e:	89 cf                	mov    edi,ecx
10001910:	29 c7                	sub    edi,eax
10001912:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001916:	0f af c7             	imul   eax,edi
10001919:	99                   	cdq    
1000191a:	f7 fb                	idiv   ebx
1000191c:	99                   	cdq    
1000191d:	f7 f9                	idiv   ecx
1000191f:	eb 02                	jmp    10001923 <ssfn_render+0x5c8>
10001921:	31 c0                	xor    eax,eax
10001923:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001929:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
1000192d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10001931:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
10001939:	66 89 32             	mov    WORD PTR [edx],si
1000193c:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
10001941:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001947:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
1000194a:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001950:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001956:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001959:	01 c3                	add    ebx,eax
1000195b:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
1000195e:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001964:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
1000196a:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
1000196d:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001970:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
10001976:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000197c:	8a 12                	mov    dl,BYTE PTR [edx]
1000197e:	83 e2 3f             	and    edx,0x3f
10001981:	01 d0                	add    eax,edx
10001983:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
10001986:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000198a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001990:	8d 50 08             	lea    edx,[eax+0x8]
10001993:	b0 ff                	mov    al,0xff
10001995:	89 d7                	mov    edi,edx
10001997:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001999:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000199f:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
100019a3:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100019a9:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
100019ad:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100019b1:	c1 e0 04             	shl    eax,0x4
100019b4:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
100019b8:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100019bc:	c1 e0 04             	shl    eax,0x4
100019bf:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100019c3:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
100019c9:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
100019cd:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
100019d1:	0f 8e 4d 0a 00 00    	jle    10002424 <ssfn_render+0x10c9>
100019d7:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100019db:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019df:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
100019e2:	0f b6 00             	movzx  eax,BYTE PTR [eax]
100019e5:	8a 12                	mov    dl,BYTE PTR [edx]
100019e7:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
100019eb:	83 e2 40             	and    edx,0x40
100019ee:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
100019f2:	88 c2                	mov    dl,al
100019f4:	21 ca                	and    edx,ecx
100019f6:	fe c2                	inc    dl
100019f8:	75 14                	jne    10001a0e <ssfn_render+0x6b3>
100019fa:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019ff:	19 c0                	sbb    eax,eax
10001a01:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
10001a05:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10001a09:	e9 09 0a 00 00       	jmp    10002417 <ssfn_render+0x10bc>
10001a0e:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10001a12:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
10001a15:	c1 e0 04             	shl    eax,0x4
10001a18:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
10001a1c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a21:	99                   	cdq    
10001a22:	f7 fe                	idiv   esi
10001a24:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001a28:	0f b6 c1             	movzx  eax,cl
10001a2b:	c1 e0 04             	shl    eax,0x4
10001a2e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a33:	99                   	cdq    
10001a34:	f7 fe                	idiv   esi
10001a36:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001a3a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a3e:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
10001a42:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
10001a46:	c1 e2 10             	shl    edx,0x10
10001a49:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001a4e:	74 0e                	je     10001a5e <ssfn_render+0x703>
10001a50:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a54:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a59:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a5c:	eb 0c                	jmp    10001a6a <ssfn_render+0x70f>
10001a5e:	c1 e0 08             	shl    eax,0x8
10001a61:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a66:	09 d0                	or     eax,edx
10001a68:	09 c3                	or     ebx,eax
10001a6a:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a6d:	8a 01                	mov    al,BYTE PTR [ecx]
10001a6f:	84 c0                	test   al,al
10001a71:	0f 88 17 05 00 00    	js     10001f8e <ssfn_render+0xc33>
10001a77:	89 c7                	mov    edi,eax
10001a79:	83 e7 3f             	and    edi,0x3f
10001a7c:	a8 40                	test   al,0x40
10001a7e:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a82:	74 10                	je     10001a94 <ssfn_render+0x739>
10001a84:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a88:	89 f8                	mov    eax,edi
10001a8a:	41                   	inc    ecx
10001a8b:	c1 e0 08             	shl    eax,0x8
10001a8e:	09 c2                	or     edx,eax
10001a90:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a94:	8d 41 01             	lea    eax,[ecx+0x1]
10001a97:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001aa1:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001aa5:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001ab0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001ab4:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001ab8:	83 c0 04             	add    eax,0x4
10001abb:	c1 f8 02             	sar    eax,0x2
10001abe:	01 c7                	add    edi,eax
10001ac0:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001ac7:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001acb:	0f 8f d7 01 00 00    	jg     10001ca8 <ssfn_render+0x94d>
10001ad1:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001ad4:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001ad8:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001adc:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001ae0:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001ae4:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001ae7:	c1 e0 04             	shl    eax,0x4
10001aea:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001aef:	99                   	cdq    
10001af0:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001af4:	01 c6                	add    esi,eax
10001af6:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001afa:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001afe:	c1 e0 04             	shl    eax,0x4
10001b01:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b06:	99                   	cdq    
10001b07:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b0b:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001b0f:	01 c3                	add    ebx,eax
10001b11:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001b15:	89 c8                	mov    eax,ecx
10001b17:	01 c9                	add    ecx,ecx
10001b19:	c1 f8 02             	sar    eax,0x2
10001b1c:	83 e1 06             	and    ecx,0x6
10001b1f:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001b23:	d3 f8                	sar    eax,cl
10001b25:	83 e0 03             	and    eax,0x3
10001b28:	89 c1                	mov    ecx,eax
10001b2a:	83 f8 02             	cmp    eax,0x2
10001b2d:	74 4a                	je     10001b79 <ssfn_render+0x81e>
10001b2f:	83 f8 03             	cmp    eax,0x3
10001b32:	0f 84 e4 00 00 00    	je     10001c1c <ssfn_render+0x8c1>
10001b38:	49                   	dec    ecx
10001b39:	74 20                	je     10001b5b <ssfn_render+0x800>
10001b3b:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001b41:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001b47:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001b4d:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001b53:	83 c7 02             	add    edi,0x2
10001b56:	e9 41 01 00 00       	jmp    10001c9c <ssfn_render+0x941>
10001b5b:	83 c7 02             	add    edi,0x2
10001b5e:	50                   	push   eax
10001b5f:	50                   	push   eax
10001b60:	89 e8                	mov    eax,ebp
10001b62:	53                   	push   ebx
10001b63:	56                   	push   esi
10001b64:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b68:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b6c:	e8 9c e9 ff ff       	call   1000050d <_ssfn_l>
10001b71:	83 c4 10             	add    esp,0x10
10001b74:	e9 23 01 00 00       	jmp    10001c9c <ssfn_render+0x941>
10001b79:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b7d:	83 c7 04             	add    edi,0x4
10001b80:	c1 e0 04             	shl    eax,0x4
10001b83:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b88:	99                   	cdq    
10001b89:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b8d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b91:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b95:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b99:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b9d:	c1 e0 04             	shl    eax,0x4
10001ba0:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001ba5:	99                   	cdq    
10001ba6:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001baa:	83 ec 0c             	sub    esp,0xc
10001bad:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001bb1:	6a 00                	push   0x0
10001bb3:	53                   	push   ebx
10001bb4:	56                   	push   esi
10001bb5:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001bb9:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001bbd:	99                   	cdq    
10001bbe:	f7 f9                	idiv   ecx
10001bc0:	01 d8                	add    eax,ebx
10001bc2:	50                   	push   eax
10001bc3:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001bc7:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001bcb:	99                   	cdq    
10001bcc:	f7 f9                	idiv   ecx
10001bce:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001bd2:	50                   	push   eax
10001bd3:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001bd7:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001bdb:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001be1:	99                   	cdq    
10001be2:	f7 f9                	idiv   ecx
10001be4:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001bea:	50                   	push   eax
10001beb:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001bef:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001bf5:	99                   	cdq    
10001bf6:	f7 f9                	idiv   ecx
10001bf8:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001bfe:	50                   	push   eax
10001bff:	89 e8                	mov    eax,ebp
10001c01:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c07:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c0d:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c11:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c15:	e8 04 ea ff ff       	call   1000061e <_ssfn_b>
10001c1a:	eb 7d                	jmp    10001c99 <ssfn_render+0x93e>
10001c1c:	83 ec 0c             	sub    esp,0xc
10001c1f:	83 c7 06             	add    edi,0x6
10001c22:	6a 00                	push   0x0
10001c24:	53                   	push   ebx
10001c25:	56                   	push   esi
10001c26:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001c2a:	c1 e0 04             	shl    eax,0x4
10001c2d:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001c32:	99                   	cdq    
10001c33:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001c37:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001c3b:	50                   	push   eax
10001c3c:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001c40:	c1 e0 04             	shl    eax,0x4
10001c43:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001c48:	99                   	cdq    
10001c49:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001c4d:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001c51:	50                   	push   eax
10001c52:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c56:	c1 e0 04             	shl    eax,0x4
10001c59:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c5e:	99                   	cdq    
10001c5f:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c63:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c67:	50                   	push   eax
10001c68:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c6c:	c1 e0 04             	shl    eax,0x4
10001c6f:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c74:	99                   	cdq    
10001c75:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c79:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c7d:	50                   	push   eax
10001c7e:	89 e8                	mov    eax,ebp
10001c80:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c86:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c8c:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c90:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c94:	e8 85 e9 ff ff       	call   1000061e <_ssfn_b>
10001c99:	83 c4 30             	add    esp,0x30
10001c9c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001ca3:	e9 18 fe ff ff       	jmp    10001ac0 <ssfn_render+0x765>
10001ca8:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001cae:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001cb4:	75 0e                	jne    10001cc4 <ssfn_render+0x969>
10001cb6:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001cbc:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001cc2:	74 2e                	je     10001cf2 <ssfn_render+0x997>
10001cc4:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001cca:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001cd0:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001cd4:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001cda:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001ce0:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001ce6:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001ceb:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001cf2:	b3 fe                	mov    bl,0xfe
10001cf4:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001cfb:	0f 8e 16 07 00 00    	jle    10002417 <ssfn_render+0x10bc>
10001d01:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001d09:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001d11:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001d19:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001d21:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001d29:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001d2d:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001d31:	0f 8d de 06 00 00    	jge    10002415 <ssfn_render+0x10ba>
10001d37:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001d3d:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001d48:	83 e8 03             	sub    eax,0x3
10001d4b:	31 f6                	xor    esi,esi
10001d4d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001d51:	89 f8                	mov    eax,edi
10001d53:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d57:	c1 f8 02             	sar    eax,0x2
10001d5a:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d5e:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d65:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d69:	0f 8e 16 01 00 00    	jle    10001e85 <ssfn_render+0xb2a>
10001d6f:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d75:	8d 47 01             	lea    eax,[edi+0x1]
10001d78:	01 c0                	add    eax,eax
10001d7a:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d7e:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d82:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d87:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d8b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d8f:	7d 0c                	jge    10001d9d <ssfn_render+0xa42>
10001d91:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d95:	0f 8f db 00 00 00    	jg     10001e76 <ssfn_render+0xb1b>
10001d9b:	eb 0a                	jmp    10001da7 <ssfn_render+0xa4c>
10001d9d:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001da1:	0f 8e cf 00 00 00    	jle    10001e76 <ssfn_render+0xb1b>
10001da7:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001dac:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001db0:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001db5:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001db9:	89 d8                	mov    eax,ebx
10001dbb:	c1 fa 04             	sar    edx,0x4
10001dbe:	c1 f8 04             	sar    eax,0x4
10001dc1:	39 c2                	cmp    edx,eax
10001dc3:	75 0a                	jne    10001dcf <ssfn_render+0xa74>
10001dc5:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001dc9:	01 c8                	add    eax,ecx
10001dcb:	d1 f8                	sar    eax,1
10001dcd:	eb 1a                	jmp    10001de9 <ssfn_render+0xa8e>
10001dcf:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001dd3:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001dd7:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001ddb:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001ddf:	0f af c1             	imul   eax,ecx
10001de2:	99                   	cdq    
10001de3:	f7 fb                	idiv   ebx
10001de5:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001de9:	c1 f8 04             	sar    eax,0x4
10001dec:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001df1:	74 04                	je     10001df7 <ssfn_render+0xa9c>
10001df3:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001df7:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001dfc:	75 3f                	jne    10001e3d <ssfn_render+0xae2>
10001dfe:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001e03:	74 38                	je     10001e3d <ssfn_render+0xae2>
10001e05:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e09:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001e0f:	f7 db                	neg    ebx
10001e11:	01 c2                	add    edx,eax
10001e13:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001e17:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001e1b:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e1f:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001e23:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001e27:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001e2b:	74 10                	je     10001e3d <ssfn_render+0xae2>
10001e2d:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001e31:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001e35:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e39:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001e3d:	31 d2                	xor    edx,edx
10001e3f:	39 f2                	cmp    edx,esi
10001e41:	75 0b                	jne    10001e4e <ssfn_render+0xaf3>
10001e43:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001e4b:	46                   	inc    esi
10001e4c:	eb 28                	jmp    10001e76 <ssfn_render+0xb1b>
10001e4e:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e56:	39 c1                	cmp    ecx,eax
10001e58:	7d 03                	jge    10001e5d <ssfn_render+0xb02>
10001e5a:	42                   	inc    edx
10001e5b:	eb e2                	jmp    10001e3f <ssfn_render+0xae4>
10001e5d:	89 f1                	mov    ecx,esi
10001e5f:	49                   	dec    ecx
10001e60:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e68:	39 d1                	cmp    ecx,edx
10001e6a:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e72:	7f eb                	jg     10001e5f <ssfn_render+0xb04>
10001e74:	eb cd                	jmp    10001e43 <ssfn_render+0xae8>
10001e76:	8d 47 02             	lea    eax,[edi+0x2]
10001e79:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e80:	e9 d9 fe ff ff       	jmp    10001d5e <ssfn_render+0xa03>
10001e85:	83 fe 01             	cmp    esi,0x1
10001e88:	7e 1f                	jle    10001ea9 <ssfn_render+0xb4e>
10001e8a:	f7 c6 01 00 00 00    	test   esi,0x1
10001e90:	74 24                	je     10001eb6 <ssfn_render+0xb5b>
10001e92:	8d 46 ff             	lea    eax,[esi-0x1]
10001e95:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e9d:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001ea5:	89 c6                	mov    esi,eax
10001ea7:	eb 0d                	jmp    10001eb6 <ssfn_render+0xb5b>
10001ea9:	85 f6                	test   esi,esi
10001eab:	0f 84 c7 00 00 00    	je     10001f78 <ssfn_render+0xc1d>
10001eb1:	be 01 00 00 00       	mov    esi,0x1
10001eb6:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001ebc:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001ec0:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001ec4:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001ec8:	39 d1                	cmp    ecx,edx
10001eca:	7d 0b                	jge    10001ed7 <ssfn_render+0xb7c>
10001ecc:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001ed0:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001ed4:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001ed7:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001ee2:	31 c0                	xor    eax,eax
10001ee4:	31 d2                	xor    edx,edx
10001ee6:	8d 4e ff             	lea    ecx,[esi-0x1]
10001ee9:	39 d1                	cmp    ecx,edx
10001eeb:	7e 7d                	jle    10001f6a <ssfn_render+0xc0f>
10001eed:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ef5:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001efd:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001f01:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001f05:	79 02                	jns    10001f09 <ssfn_render+0xbae>
10001f07:	31 c0                	xor    eax,eax
10001f09:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f0d:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001f11:	39 cf                	cmp    edi,ecx
10001f13:	7e 04                	jle    10001f19 <ssfn_render+0xbbe>
10001f15:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001f19:	85 d2                	test   edx,edx
10001f1b:	74 12                	je     10001f2f <ssfn_render+0xbd4>
10001f1d:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001f25:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001f29:	39 c8                	cmp    eax,ecx
10001f2b:	7d 02                	jge    10001f2f <ssfn_render+0xbd4>
10001f2d:	89 c8                	mov    eax,ecx
10001f2f:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001f33:	7d 2b                	jge    10001f60 <ssfn_render+0xc05>
10001f35:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001f39:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001f3f:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001f42:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001f46:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001f4a:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001f4e:	75 05                	jne    10001f55 <ssfn_render+0xbfa>
10001f50:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f55:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f59:	40                   	inc    eax
10001f5a:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f5e:	eb cf                	jmp    10001f2f <ssfn_render+0xbd4>
10001f60:	83 c2 02             	add    edx,0x2
10001f63:	b0 01                	mov    al,0x1
10001f65:	e9 7c ff ff ff       	jmp    10001ee6 <ssfn_render+0xb8b>
10001f6a:	83 e6 fe             	and    esi,0xfffffffe
10001f6d:	84 c0                	test   al,al
10001f6f:	74 07                	je     10001f78 <ssfn_render+0xc1d>
10001f71:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f78:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f7c:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f80:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f84:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f89:	e9 9b fd ff ff       	jmp    10001d29 <ssfn_render+0x9ce>
10001f8e:	88 c2                	mov    dl,al
10001f90:	80 e2 60             	and    dl,0x60
10001f93:	0f 85 95 02 00 00    	jne    1000222e <ssfn_render+0xed3>
10001f99:	83 e0 1f             	and    eax,0x1f
10001f9c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001fa0:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001fa7:	c1 fb 04             	sar    ebx,0x4
10001faa:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001fae:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001fb2:	40                   	inc    eax
10001fb3:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001fb7:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001fbb:	c1 f8 04             	sar    eax,0x4
10001fbe:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001fc2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fc6:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001fcb:	99                   	cdq    
10001fcc:	f7 fe                	idiv   esi
10001fce:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001fd2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fd6:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001fdb:	99                   	cdq    
10001fdc:	f7 fe                	idiv   esi
10001fde:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001fe2:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001fe8:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fec:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001ff0:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001ff3:	39 d6                	cmp    esi,edx
10001ff5:	7d 0a                	jge    10002001 <ssfn_render+0xca6>
10001ff7:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001ffb:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001ffe:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002001:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002005:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
1000200d:	0f af c3             	imul   eax,ebx
10002010:	31 ff                	xor    edi,edi
10002012:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10002016:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000201a:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
1000201e:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10002022:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002026:	29 d8                	sub    eax,ebx
10002028:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
1000202c:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10002030:	0f 8d b1 00 00 00    	jge    100020e7 <ssfn_render+0xd8c>
10002036:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000203a:	99                   	cdq    
1000203b:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000203f:	89 c6                	mov    esi,eax
10002041:	31 c0                	xor    eax,eax
10002043:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002048:	74 0e                	je     10002058 <ssfn_render+0xcfd>
1000204a:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000204e:	bb 04 00 00 00       	mov    ebx,0x4
10002053:	29 f8                	sub    eax,edi
10002055:	99                   	cdq    
10002056:	f7 fb                	idiv   ebx
10002058:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000205c:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002067:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
1000206b:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002070:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002077:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000207b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000207f:	39 d8                	cmp    eax,ebx
10002081:	7d 4e                	jge    100020d1 <ssfn_render+0xd76>
10002083:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002087:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
1000208c:	99                   	cdq    
1000208d:	f7 fb                	idiv   ebx
1000208f:	8d 14 06             	lea    edx,[esi+eax*1]
10002092:	83 e0 07             	and    eax,0x7
10002095:	c1 fa 03             	sar    edx,0x3
10002098:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
1000209d:	0f a3 c2             	bt     edx,eax
100020a0:	72 0e                	jb     100020b0 <ssfn_render+0xd55>
100020a2:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100020a6:	43                   	inc    ebx
100020a7:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100020ae:	eb c0                	jmp    10002070 <ssfn_render+0xd15>
100020b0:	31 c0                	xor    eax,eax
100020b2:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
100020b6:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
100020ba:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100020c0:	40                   	inc    eax
100020c1:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
100020c5:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
100020c9:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
100020cd:	7d e3                	jge    100020b2 <ssfn_render+0xd57>
100020cf:	eb d1                	jmp    100020a2 <ssfn_render+0xd47>
100020d1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100020d5:	47                   	inc    edi
100020d6:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
100020da:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100020de:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
100020e2:	e9 45 ff ff ff       	jmp    1000202c <ssfn_render+0xcd1>
100020e7:	b3 fe                	mov    bl,0xfe
100020e9:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
100020f0:	0f 85 21 03 00 00    	jne    10002417 <ssfn_render+0x10bc>
100020f6:	31 c0                	xor    eax,eax
100020f8:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020fc:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
10002101:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10002105:	0f 95 c0             	setne  al
10002108:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000210c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002110:	4f                   	dec    edi
10002111:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10002115:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
1000211d:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002121:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002128:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000212c:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
10002130:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002134:	31 c0                	xor    eax,eax
10002136:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10002139:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
1000213d:	83 c1 04             	add    ecx,0x4
10002140:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10002144:	0f 8d c0 02 00 00    	jge    1000240a <ssfn_render+0x10af>
1000214a:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000214e:	8d 77 01             	lea    esi,[edi+0x1]
10002151:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002155:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002159:	4f                   	dec    edi
1000215a:	be 01 00 00 00       	mov    esi,0x1
1000215f:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002163:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002167:	7e 63                	jle    100021cc <ssfn_render+0xe71>
10002169:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000216d:	b9 01 00 00 00       	mov    ecx,0x1
10002172:	89 ca                	mov    edx,ecx
10002174:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002178:	7e 45                	jle    100021bf <ssfn_render+0xe64>
1000217a:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002180:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002185:	75 34                	jne    100021bb <ssfn_render+0xe60>
10002187:	89 c7                	mov    edi,eax
10002189:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000218d:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002191:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002195:	74 0c                	je     100021a3 <ssfn_render+0xe48>
10002197:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000219b:	01 d7                	add    edi,edx
1000219d:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
100021a1:	75 18                	jne    100021bb <ssfn_render+0xe60>
100021a3:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
100021a7:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
100021ab:	74 06                	je     100021b3 <ssfn_render+0xe58>
100021ad:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
100021b1:	75 08                	jne    100021bb <ssfn_render+0xe60>
100021b3:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
100021b7:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
100021bb:	41                   	inc    ecx
100021bc:	40                   	inc    eax
100021bd:	eb b3                	jmp    10002172 <ssfn_render+0xe17>
100021bf:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100021c3:	46                   	inc    esi
100021c4:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
100021c8:	b0 01                	mov    al,0x1
100021ca:	eb 97                	jmp    10002163 <ssfn_render+0xe08>
100021cc:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
100021d0:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
100021d4:	bb 01 00 00 00       	mov    ebx,0x1
100021d9:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
100021dd:	7e 3d                	jle    1000221c <ssfn_render+0xec1>
100021df:	b8 01 00 00 00       	mov    eax,0x1
100021e4:	89 c2                	mov    edx,eax
100021e6:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
100021ea:	7e 23                	jle    1000220f <ssfn_render+0xeb4>
100021ec:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100021f0:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021f6:	8d 14 07             	lea    edx,[edi+eax*1]
100021f9:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021fe:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002202:	75 08                	jne    1000220c <ssfn_render+0xeb1>
10002204:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10002208:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
1000220c:	40                   	inc    eax
1000220d:	eb d5                	jmp    100021e4 <ssfn_render+0xe89>
1000220f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002213:	43                   	inc    ebx
10002214:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
10002218:	b0 01                	mov    al,0x1
1000221a:	eb bd                	jmp    100021d9 <ssfn_render+0xe7e>
1000221c:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
1000221f:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002223:	01 c9                	add    ecx,ecx
10002225:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
10002229:	e9 08 ff ff ff       	jmp    10002136 <ssfn_render+0xddb>
1000222e:	b3 fe                	mov    bl,0xfe
10002230:	80 fa 20             	cmp    dl,0x20
10002233:	0f 85 de 01 00 00    	jne    10002417 <ssfn_render+0x10bc>
10002239:	89 c3                	mov    ebx,eax
1000223b:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
1000223f:	c1 e3 08             	shl    ebx,0x8
10002242:	81 e3 00 1f 00 00    	and    ebx,0x1f00
10002248:	09 c3                	or     ebx,eax
1000224a:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
1000224e:	43                   	inc    ebx
1000224f:	40                   	inc    eax
10002250:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002254:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002258:	40                   	inc    eax
10002259:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000225d:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002261:	c1 f8 04             	sar    eax,0x4
10002264:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002268:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000226c:	c1 f8 04             	sar    eax,0x4
1000226f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002273:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002277:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
1000227c:	99                   	cdq    
1000227d:	f7 fe                	idiv   esi
1000227f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002283:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002287:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
1000228c:	99                   	cdq    
1000228d:	f7 fe                	idiv   esi
1000228f:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002293:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002297:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000229d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
100022a1:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
100022a5:	39 d6                	cmp    esi,edx
100022a7:	7d 0b                	jge    100022b4 <ssfn_render+0xf59>
100022a9:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
100022ad:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
100022b1:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
100022b4:	83 c1 04             	add    ecx,0x4
100022b7:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100022c2:	8d 04 19             	lea    eax,[ecx+ebx*1]
100022c5:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100022c9:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
100022cd:	72 35                	jb     10002304 <ssfn_render+0xfa9>
100022cf:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100022d3:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100022d7:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
100022dc:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
100022e0:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
100022e4:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100022eb:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
100022ef:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022f7:	31 d2                	xor    edx,edx
100022f9:	31 ff                	xor    edi,edi
100022fb:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022ff:	e9 cc 00 00 00       	jmp    100023d0 <ssfn_render+0x1075>
10002304:	8a 11                	mov    dl,BYTE PTR [ecx]
10002306:	89 d0                	mov    eax,edx
10002308:	83 e0 7f             	and    eax,0x7f
1000230b:	84 d2                	test   dl,dl
1000230d:	8d 78 01             	lea    edi,[eax+0x1]
10002310:	78 09                	js     1000231b <ssfn_render+0xfc0>
10002312:	41                   	inc    ecx
10002313:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002317:	89 ca                	mov    edx,ecx
10002319:	eb 3d                	jmp    10002358 <ssfn_render+0xffd>
1000231b:	48                   	dec    eax
1000231c:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002323:	83 f8 fe             	cmp    eax,0xfffffffe
10002326:	74 16                	je     1000233e <ssfn_render+0xfe3>
10002328:	8d 5a 01             	lea    ebx,[edx+0x1]
1000232b:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002332:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
10002335:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
1000233c:	eb dd                	jmp    1000231b <ssfn_render+0xfc0>
1000233e:	83 c1 02             	add    ecx,0x2
10002341:	eb 86                	jmp    100022c9 <ssfn_render+0xf6e>
10002343:	42                   	inc    edx
10002344:	8d 73 01             	lea    esi,[ebx+0x1]
10002347:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
1000234e:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002351:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002358:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
1000235c:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
10002363:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002368:	75 d9                	jne    10002343 <ssfn_render+0xfe8>
1000236a:	01 f9                	add    ecx,edi
1000236c:	e9 58 ff ff ff       	jmp    100022c9 <ssfn_render+0xf6e>
10002371:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002375:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002379:	99                   	cdq    
1000237a:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
1000237e:	0f af c8             	imul   ecx,eax
10002381:	31 c0                	xor    eax,eax
10002383:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002388:	74 0e                	je     10002398 <ssfn_render+0x103d>
1000238a:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000238e:	bb 04 00 00 00       	mov    ebx,0x4
10002393:	29 f8                	sub    eax,edi
10002395:	99                   	cdq    
10002396:	f7 fb                	idiv   ebx
10002398:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000239c:	31 db                	xor    ebx,ebx
1000239e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100023a2:	31 f6                	xor    esi,esi
100023a4:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
100023ab:	01 c1                	add    ecx,eax
100023ad:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
100023b1:	7f 30                	jg     100023e3 <ssfn_render+0x1088>
100023b3:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100023b7:	85 c0                	test   eax,eax
100023b9:	79 02                	jns    100023bd <ssfn_render+0x1062>
100023bb:	31 c0                	xor    eax,eax
100023bd:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100023c1:	47                   	inc    edi
100023c2:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
100023c6:	b2 01                	mov    dl,0x1
100023c8:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
100023cc:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
100023d0:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100023d4:	7c 9b                	jl     10002371 <ssfn_render+0x1016>
100023d6:	84 d2                	test   dl,dl
100023d8:	74 3b                	je     10002415 <ssfn_render+0x10ba>
100023da:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
100023e1:	eb 32                	jmp    10002415 <ssfn_render+0x10ba>
100023e3:	89 d8                	mov    eax,ebx
100023e5:	99                   	cdq    
100023e6:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
100023ea:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
100023f1:	3c ff                	cmp    al,0xff
100023f3:	74 0e                	je     10002403 <ssfn_render+0x10a8>
100023f5:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023f9:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023ff:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
10002403:	46                   	inc    esi
10002404:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
10002408:	eb a3                	jmp    100023ad <ssfn_render+0x1052>
1000240a:	84 c0                	test   al,al
1000240c:	74 07                	je     10002415 <ssfn_render+0x10ba>
1000240e:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
10002415:	b3 fe                	mov    bl,0xfe
10002417:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
1000241b:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
1000241f:	e9 9f f5 ff ff       	jmp    100019c3 <ssfn_render+0x668>
10002424:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000242a:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000242d:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
10002430:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
10002433:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002439:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
1000243d:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
10002441:	89 f0                	mov    eax,esi
10002443:	89 d9                	mov    ecx,ebx
10002445:	43                   	inc    ebx
10002446:	39 de                	cmp    esi,ebx
10002448:	7e 08                	jle    10002452 <ssfn_render+0x10f7>
1000244a:	48                   	dec    eax
1000244b:	29 c8                	sub    eax,ecx
1000244d:	88 42 07             	mov    BYTE PTR [edx+0x7],al
10002450:	eb 04                	jmp    10002456 <ssfn_render+0x10fb>
10002452:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
10002456:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
1000245e:	0f 84 c9 0c 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002464:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
1000246a:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002470:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002474:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
10002477:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000247b:	0f ba e0 0c          	bt     eax,0xc
1000247f:	72 22                	jb     100024a3 <ssfn_render+0x1148>
10002481:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002484:	83 e0 0f             	and    eax,0xf
10002487:	3c 03                	cmp    al,0x3
10002489:	74 18                	je     100024a3 <ssfn_render+0x1148>
1000248b:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
1000248f:	84 c9                	test   cl,cl
10002491:	74 10                	je     100024a3 <ssfn_render+0x1148>
10002493:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
10002497:	0f af d7             	imul   edx,edi
1000249a:	89 d0                	mov    eax,edx
1000249c:	99                   	cdq    
1000249d:	f7 f9                	idiv   ecx
1000249f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100024a3:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100024a7:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
100024ad:	7d 06                	jge    100024b5 <ssfn_render+0x115a>
100024af:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
100024b5:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
100024bb:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
100024bf:	0f b7 13             	movzx  edx,WORD PTR [ebx]
100024c2:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
100024c7:	89 d0                	mov    eax,edx
100024c9:	99                   	cdq    
100024ca:	f7 f9                	idiv   ecx
100024cc:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
100024d0:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024d4:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
100024d7:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
100024db:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
100024df:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100024e3:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100024e8:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100024ec:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024f1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024f5:	99                   	cdq    
100024f6:	f7 f9                	idiv   ecx
100024f8:	31 d2                	xor    edx,edx
100024fa:	83 ff 10             	cmp    edi,0x10
100024fd:	0f 9f c2             	setg   dl
10002500:	42                   	inc    edx
10002501:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
10002505:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
10002509:	7d 08                	jge    10002513 <ssfn_render+0x11b8>
1000250b:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
1000250f:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10002513:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10002517:	39 c2                	cmp    edx,eax
10002519:	7d 04                	jge    1000251f <ssfn_render+0x11c4>
1000251b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000251f:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
10002524:	74 4c                	je     10002572 <ssfn_render+0x1217>
10002526:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000252a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000252f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002533:	99                   	cdq    
10002534:	f7 f9                	idiv   ecx
10002536:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000253a:	81 e2 00 08 00 00    	and    edx,0x800
10002540:	74 04                	je     10002546 <ssfn_render+0x11eb>
10002542:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10002546:	01 d0                	add    eax,edx
10002548:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
1000254e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002552:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002556:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
1000255a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000255f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002563:	99                   	cdq    
10002564:	f7 f9                	idiv   ecx
10002566:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000256a:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002570:	eb 22                	jmp    10002594 <ssfn_render+0x1239>
10002572:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002576:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002580:	d1 f8                	sar    eax,1
10002582:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
1000258a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000258e:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002594:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000259b:	8b 18                	mov    ebx,DWORD PTR [eax]
1000259d:	85 db                	test   ebx,ebx
1000259f:	0f 84 2e 09 00 00    	je     10002ed3 <ssfn_render+0x1b78>
100025a5:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
100025a9:	89 d1                	mov    ecx,edx
100025ab:	89 d0                	mov    eax,edx
100025ad:	66 c1 f9 0b          	sar    cx,0xb
100025b1:	c1 f8 1f             	sar    eax,0x1f
100025b4:	31 c2                	xor    edx,eax
100025b6:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
100025ba:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
100025be:	88 c8                	mov    al,cl
100025c0:	83 e0 10             	and    eax,0x10
100025c3:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
100025c7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100025cb:	83 c0 40             	add    eax,0x40
100025ce:	c1 f8 06             	sar    eax,0x6
100025d1:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
100025d8:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100025dc:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
100025e0:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
100025e4:	7d 08                	jge    100025ee <ssfn_render+0x1293>
100025e6:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100025ea:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
100025ee:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100025f1:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025f9:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025fd:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
10002605:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
10002609:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000260e:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002612:	99                   	cdq    
10002613:	f7 f9                	idiv   ecx
10002615:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10002619:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002620:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002623:	0f b6 f4             	movzx  esi,ah
10002626:	89 c2                	mov    edx,eax
10002628:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
1000262c:	c1 ea 10             	shr    edx,0x10
1000262f:	0f b6 fa             	movzx  edi,dl
10002632:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
10002636:	0f b6 f8             	movzx  edi,al
10002639:	c1 e8 18             	shr    eax,0x18
1000263c:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
10002640:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002644:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000264b:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
1000264e:	0f b6 fc             	movzx  edi,ah
10002651:	89 c2                	mov    edx,eax
10002653:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000265a:	c1 ea 10             	shr    edx,0x10
1000265d:	0f b6 c0             	movzx  eax,al
10002660:	0f b6 f2             	movzx  esi,dl
10002663:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000266a:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002671:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002675:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000267c:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002683:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002687:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000268b:	0f af c2             	imul   eax,edx
1000268e:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002692:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002696:	8d 04 90             	lea    eax,[eax+edx*4]
10002699:	01 d8                	add    eax,ebx
1000269b:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
100026a2:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
100026a6:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
100026ad:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
100026b2:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
100026b9:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100026bd:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
100026c1:	0f 8d e2 04 00 00    	jge    10002ba9 <ssfn_render+0x184e>
100026c7:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100026ce:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100026d5:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
100026d9:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
100026dd:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100026e1:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
100026e5:	39 d0                	cmp    eax,edx
100026e7:	0f 8d bc 04 00 00    	jge    10002ba9 <ssfn_render+0x184e>
100026ed:	85 c0                	test   eax,eax
100026ef:	0f 88 94 04 00 00    	js     10002b89 <ssfn_render+0x182e>
100026f5:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026fb:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026ff:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002703:	c1 e1 08             	shl    ecx,0x8
10002706:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
1000270e:	89 c8                	mov    eax,ecx
10002710:	0f af c3             	imul   eax,ebx
10002713:	99                   	cdq    
10002714:	f7 fe                	idiv   esi
10002716:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
1000271d:	c1 f8 08             	sar    eax,0x8
10002720:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
10002727:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
1000272d:	0f af c3             	imul   eax,ebx
10002730:	99                   	cdq    
10002731:	f7 fe                	idiv   esi
10002733:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
10002737:	c1 f8 08             	sar    eax,0x8
1000273a:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
10002741:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
10002745:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
1000274c:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
10002753:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000275a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
1000275e:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002762:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002766:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000276a:	0f 8d 19 04 00 00    	jge    10002b89 <ssfn_render+0x182e>
10002770:	85 c0                	test   eax,eax
10002772:	0f 88 ff 03 00 00    	js     10002b77 <ssfn_render+0x181c>
10002778:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000277f:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002783:	75 42                	jne    100027c7 <ssfn_render+0x146c>
10002785:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002789:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002790:	b9 10 00 00 00       	mov    ecx,0x10
10002795:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002798:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
1000279f:	89 c2                	mov    edx,eax
100027a1:	0f b6 fc             	movzx  edi,ah
100027a4:	d3 ea                	shr    edx,cl
100027a6:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
100027ad:	0f b6 f2             	movzx  esi,dl
100027b0:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
100027b4:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
100027bb:	d3 e8                	shr    eax,cl
100027bd:	0f b6 c0             	movzx  eax,al
100027c0:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
100027c7:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100027cd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100027d1:	0f b7 18             	movzx  ebx,WORD PTR [eax]
100027d4:	c1 e1 08             	shl    ecx,0x8
100027d7:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
100027db:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
100027e3:	89 c8                	mov    eax,ecx
100027e5:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
100027ed:	0f af c3             	imul   eax,ebx
100027f0:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027f8:	99                   	cdq    
100027f9:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10002801:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
10002805:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
1000280d:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
10002814:	c1 f8 08             	sar    eax,0x8
10002817:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
1000281e:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
10002824:	0f af c3             	imul   eax,ebx
10002827:	99                   	cdq    
10002828:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
1000282c:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
10002830:	c1 f8 08             	sar    eax,0x8
10002833:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
1000283a:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
10002841:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002845:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
10002849:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
1000284d:	0f 8d 3b 02 00 00    	jge    10002a8e <ssfn_render+0x1733>
10002853:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10002857:	c1 fa 08             	sar    edx,0x8
1000285a:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002861:	75 25                	jne    10002888 <ssfn_render+0x152d>
10002863:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002868:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
1000286f:	b8 00 01 00 00       	mov    eax,0x100
10002874:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
1000287c:	29 c8                	sub    eax,ecx
1000287e:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002882:	39 c7                	cmp    edi,eax
10002884:	7e 1c                	jle    100028a2 <ssfn_render+0x1547>
10002886:	eb 16                	jmp    1000289e <ssfn_render+0x1543>
10002888:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002890:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
10002897:	75 09                	jne    100028a2 <ssfn_render+0x1547>
10002899:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
1000289e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100028a2:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
100028a6:	0f b7 00             	movzx  eax,WORD PTR [eax]
100028a9:	0f af c2             	imul   eax,edx
100028ac:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
100028b3:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
100028b8:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
100028bd:	c1 f8 08             	sar    eax,0x8
100028c0:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
100028c7:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
100028ce:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100028d2:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
100028d6:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
100028da:	0f 8d a1 01 00 00    	jge    10002a81 <ssfn_render+0x1726>
100028e0:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100028e4:	c1 f8 08             	sar    eax,0x8
100028e7:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
100028ee:	75 3b                	jne    1000292b <ssfn_render+0x15d0>
100028f0:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028f5:	ba 00 01 00 00       	mov    edx,0x100
100028fa:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
10002902:	29 ca                	sub    edx,ecx
10002904:	89 f1                	mov    ecx,esi
10002906:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
1000290d:	39 d1                	cmp    ecx,edx
1000290f:	7c 0e                	jl     1000291f <ssfn_render+0x15c4>
10002911:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002915:	81 fa 00 01 00 00    	cmp    edx,0x100
1000291b:	74 22                	je     1000293f <ssfn_render+0x15e4>
1000291d:	89 d1                	mov    ecx,edx
1000291f:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
10002924:	89 cf                	mov    edi,ecx
10002926:	c1 ff 08             	sar    edi,0x8
10002929:	eb 14                	jmp    1000293f <ssfn_render+0x15e4>
1000292b:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
10002932:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
10002939:	74 04                	je     1000293f <ssfn_render+0x15e4>
1000293b:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000293f:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
10002943:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
10002947:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
1000294e:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
10002953:	81 fa ff 00 00 00    	cmp    edx,0xff
10002959:	75 37                	jne    10002992 <ssfn_render+0x1637>
1000295b:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
10002962:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
1000296a:	0f af c7             	imul   eax,edi
1000296d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002971:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002978:	0f af c7             	imul   eax,edi
1000297b:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
1000297f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10002986:	0f af c7             	imul   eax,edi
10002989:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
1000298d:	e9 e2 00 00 00       	jmp    10002a74 <ssfn_render+0x1719>
10002992:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002998:	74 2d                	je     100029c7 <ssfn_render+0x166c>
1000299a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000299d:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
100029a0:	85 c9                	test   ecx,ecx
100029a2:	74 23                	je     100029c7 <ssfn_render+0x166c>
100029a4:	01 c8                	add    eax,ecx
100029a6:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
100029a9:	89 d9                	mov    ecx,ebx
100029ab:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
100029b2:	c1 e9 10             	shr    ecx,0x10
100029b5:	0f b6 f7             	movzx  esi,bh
100029b8:	0f b6 c1             	movzx  eax,cl
100029bb:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
100029bf:	0f b6 c3             	movzx  eax,bl
100029c2:	c1 eb 18             	shr    ebx,0x18
100029c5:	eb 14                	jmp    100029db <ssfn_render+0x1680>
100029c7:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100029cb:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100029cf:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
100029d3:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
100029d7:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100029db:	81 fb ff 00 00 00    	cmp    ebx,0xff
100029e1:	75 25                	jne    10002a08 <ssfn_render+0x16ad>
100029e3:	0f af c7             	imul   eax,edi
100029e6:	0f af f7             	imul   esi,edi
100029e9:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029ed:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029f1:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029f7:	0f af cf             	imul   ecx,edi
100029fa:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029fe:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
10002a02:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
10002a06:	eb 6c                	jmp    10002a74 <ssfn_render+0x1719>
10002a08:	0f af f3             	imul   esi,ebx
10002a0b:	0f af c3             	imul   eax,ebx
10002a0e:	b9 ff 00 00 00       	mov    ecx,0xff
10002a13:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
10002a1a:	29 d9                	sub    ecx,ebx
10002a1c:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10002a20:	0f af d1             	imul   edx,ecx
10002a23:	b9 ff 00 00 00       	mov    ecx,0xff
10002a28:	01 d0                	add    eax,edx
10002a2a:	0f af c7             	imul   eax,edi
10002a2d:	99                   	cdq    
10002a2e:	f7 f9                	idiv   ecx
10002a30:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002a34:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a38:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
10002a40:	01 f0                	add    eax,esi
10002a42:	89 ce                	mov    esi,ecx
10002a44:	0f af c7             	imul   eax,edi
10002a47:	99                   	cdq    
10002a48:	f7 f9                	idiv   ecx
10002a4a:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002a4e:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002a52:	0f af cb             	imul   ecx,ebx
10002a55:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a59:	0f af df             	imul   ebx,edi
10002a5c:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a64:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a68:	01 c8                	add    eax,ecx
10002a6a:	0f af c7             	imul   eax,edi
10002a6d:	99                   	cdq    
10002a6e:	f7 fe                	idiv   esi
10002a70:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a74:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a7c:	e9 51 fe ff ff       	jmp    100028d2 <ssfn_render+0x1577>
10002a81:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a89:	e9 b7 fd ff ff       	jmp    10002845 <ssfn_render+0x14ea>
10002a8e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a93:	74 30                	je     10002ac5 <ssfn_render+0x176a>
10002a95:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a99:	31 d2                	xor    edx,edx
10002a9b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a9f:	31 d2                	xor    edx,edx
10002aa1:	89 c1                	mov    ecx,eax
10002aa3:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002aa7:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002aab:	31 d2                	xor    edx,edx
10002aad:	89 c6                	mov    esi,eax
10002aaf:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002ab3:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002ab7:	31 d2                	xor    edx,edx
10002ab9:	89 c3                	mov    ebx,eax
10002abb:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002abf:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002ac3:	eb 1c                	jmp    10002ae1 <ssfn_render+0x1786>
10002ac5:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002ac9:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002acd:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002ad1:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002ad5:	c1 e9 08             	shr    ecx,0x8
10002ad8:	c1 ee 08             	shr    esi,0x8
10002adb:	c1 eb 08             	shr    ebx,0x8
10002ade:	c1 e8 08             	shr    eax,0x8
10002ae1:	83 f8 0f             	cmp    eax,0xf
10002ae4:	0f 86 8d 00 00 00    	jbe    10002b77 <ssfn_render+0x181c>
10002aea:	89 ca                	mov    edx,ecx
10002aec:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002af2:	76 05                	jbe    10002af9 <ssfn_render+0x179e>
10002af4:	ba ff 00 00 00       	mov    edx,0xff
10002af9:	b9 10 00 00 00       	mov    ecx,0x10
10002afe:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002b05:	d3 e2                	shl    edx,cl
10002b07:	3d ff 00 00 00       	cmp    eax,0xff
10002b0c:	89 d1                	mov    ecx,edx
10002b0e:	76 05                	jbe    10002b15 <ssfn_render+0x17ba>
10002b10:	b8 ff 00 00 00       	mov    eax,0xff
10002b15:	c1 e0 18             	shl    eax,0x18
10002b18:	09 c8                	or     eax,ecx
10002b1a:	81 fe ff 00 00 00    	cmp    esi,0xff
10002b20:	76 05                	jbe    10002b27 <ssfn_render+0x17cc>
10002b22:	be ff 00 00 00       	mov    esi,0xff
10002b27:	c1 e6 08             	shl    esi,0x8
10002b2a:	09 f0                	or     eax,esi
10002b2c:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002b32:	76 05                	jbe    10002b39 <ssfn_render+0x17de>
10002b34:	bb ff 00 00 00       	mov    ebx,0xff
10002b39:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002b3d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002b41:	d3 e3                	shl    ebx,cl
10002b43:	09 c3                	or     ebx,eax
10002b45:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002b4c:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002b4f:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002b53:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b57:	75 1e                	jne    10002b77 <ssfn_render+0x181c>
10002b59:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b60:	7e 07                	jle    10002b69 <ssfn_render+0x180e>
10002b62:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b69:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b6d:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b71:	7d 04                	jge    10002b77 <ssfn_render+0x181c>
10002b73:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b77:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b7b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b7f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b83:	0f 85 ca fb ff ff    	jne    10002753 <ssfn_render+0x13f8>
10002b89:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b90:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b94:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b98:	25 fc ff 00 00       	and    eax,0xfffc
10002b9d:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002ba4:	e9 10 fb ff ff       	jmp    100026b9 <ssfn_render+0x135e>
10002ba9:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002bb0:	0f 84 90 01 00 00    	je     10002d46 <ssfn_render+0x19eb>
10002bb6:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002bbe:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002bc5:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002bc9:	40                   	inc    eax
10002bca:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002bce:	29 c7                	sub    edi,eax
10002bd0:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002bd4:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002bd8:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002bdc:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002be0:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002be4:	7e 09                	jle    10002bef <ssfn_render+0x1894>
10002be6:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002bea:	40                   	inc    eax
10002beb:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002bef:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002bf6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bfd:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002c01:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c05:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c09:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002c0d:	0f af c2             	imul   eax,edx
10002c10:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002c14:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002c18:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002c1c:	03 07                	add    eax,DWORD PTR [edi]
10002c1e:	89 c7                	mov    edi,eax
10002c20:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002c24:	c1 e0 18             	shl    eax,0x18
10002c27:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002c2b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002c2f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002c33:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002c38:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002c3c:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002c40:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002c44:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002c48:	0f 8e f8 00 00 00    	jle    10002d46 <ssfn_render+0x19eb>
10002c4e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c55:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c5c:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c60:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c64:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c68:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c6c:	39 d0                	cmp    eax,edx
10002c6e:	0f 8d d2 00 00 00    	jge    10002d46 <ssfn_render+0x19eb>
10002c74:	31 db                	xor    ebx,ebx
10002c76:	85 c0                	test   eax,eax
10002c78:	79 23                	jns    10002c9d <ssfn_render+0x1942>
10002c7a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c81:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c85:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c89:	25 fc ff 00 00       	and    eax,0xfffc
10002c8e:	01 c7                	add    edi,eax
10002c90:	eb aa                	jmp    10002c3c <ssfn_render+0x18e1>
10002c92:	85 c0                	test   eax,eax
10002c94:	79 20                	jns    10002cb6 <ssfn_render+0x195b>
10002c96:	43                   	inc    ebx
10002c97:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c9b:	7c dd                	jl     10002c7a <ssfn_render+0x191f>
10002c9d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ca4:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002ca8:	01 d8                	add    eax,ebx
10002caa:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002cae:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002cb2:	7c de                	jl     10002c92 <ssfn_render+0x1937>
10002cb4:	eb c4                	jmp    10002c7a <ssfn_render+0x191f>
10002cb6:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002cba:	7e 06                	jle    10002cc2 <ssfn_render+0x1967>
10002cbc:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002cc0:	7f d4                	jg     10002c96 <ssfn_render+0x193b>
10002cc2:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002cc5:	b8 10 00 00 00       	mov    eax,0x10
10002cca:	0f b6 f6             	movzx  esi,dh
10002ccd:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002cd1:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002cd5:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002cd9:	89 d0                	mov    eax,edx
10002cdb:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cdf:	d3 e8                	shr    eax,cl
10002ce1:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ce5:	0f b6 c0             	movzx  eax,al
10002ce8:	d3 ea                	shr    edx,cl
10002cea:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002cee:	0f b6 f2             	movzx  esi,dl
10002cf1:	29 c1                	sub    ecx,eax
10002cf3:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002cf7:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cfc:	29 f2                	sub    edx,esi
10002cfe:	c1 f9 08             	sar    ecx,0x8
10002d01:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002d06:	01 c8                	add    eax,ecx
10002d08:	c1 fa 08             	sar    edx,0x8
10002d0b:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002d0f:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002d13:	d3 e0                	shl    eax,cl
10002d15:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002d19:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002d1d:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002d21:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002d25:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002d2a:	d3 e6                	shl    esi,cl
10002d2c:	c1 fa 08             	sar    edx,0x8
10002d2f:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002d33:	c1 e2 08             	shl    edx,0x8
10002d36:	09 d0                	or     eax,edx
10002d38:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002d3c:	09 c6                	or     esi,eax
10002d3e:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002d41:	e9 50 ff ff ff       	jmp    10002c96 <ssfn_render+0x193b>
10002d46:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002d4d:	0f 84 80 01 00 00    	je     10002ed3 <ssfn_render+0x1b78>
10002d53:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d57:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d5b:	d1 fa                	sar    edx,1
10002d5d:	40                   	inc    eax
10002d5e:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d62:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d66:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d6a:	7e 09                	jle    10002d75 <ssfn_render+0x1a1a>
10002d6c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d70:	40                   	inc    eax
10002d71:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d75:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d7c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d83:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d87:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d8b:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d8f:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d93:	01 d0                	add    eax,edx
10002d95:	0f af c1             	imul   eax,ecx
10002d98:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d9c:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002da0:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002da4:	03 03                	add    eax,DWORD PTR [ebx]
10002da6:	89 c7                	mov    edi,eax
10002da8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002dac:	c1 e0 18             	shl    eax,0x18
10002daf:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002db3:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002dbb:	01 d0                	add    eax,edx
10002dbd:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002dc1:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002dc6:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002dca:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002dce:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002dd2:	0f 8e fb 00 00 00    	jle    10002ed3 <ssfn_render+0x1b78>
10002dd8:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ddf:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002de3:	01 d8                	add    eax,ebx
10002de5:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002dec:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002df0:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002df4:	39 d0                	cmp    eax,edx
10002df6:	0f 8d d7 00 00 00    	jge    10002ed3 <ssfn_render+0x1b78>
10002dfc:	31 f6                	xor    esi,esi
10002dfe:	85 c0                	test   eax,eax
10002e00:	0f 89 ad 00 00 00    	jns    10002eb3 <ssfn_render+0x1b58>
10002e06:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e0d:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002e11:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002e15:	25 fc ff 00 00       	and    eax,0xfffc
10002e1a:	01 c7                	add    edi,eax
10002e1c:	eb ac                	jmp    10002dca <ssfn_render+0x1a6f>
10002e1e:	85 c0                	test   eax,eax
10002e20:	0f 88 82 00 00 00    	js     10002ea8 <ssfn_render+0x1b4d>
10002e26:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002e29:	b8 10 00 00 00       	mov    eax,0x10
10002e2e:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002e32:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002e36:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002e3a:	89 d8                	mov    eax,ebx
10002e3c:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e40:	d3 e8                	shr    eax,cl
10002e42:	0f b6 cf             	movzx  ecx,bh
10002e45:	0f b6 c0             	movzx  eax,al
10002e48:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002e4c:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e50:	d3 eb                	shr    ebx,cl
10002e52:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e56:	0f b6 db             	movzx  ebx,bl
10002e59:	29 c1                	sub    ecx,eax
10002e5b:	29 da                	sub    edx,ebx
10002e5d:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e62:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e67:	c1 f9 08             	sar    ecx,0x8
10002e6a:	c1 fa 08             	sar    edx,0x8
10002e6d:	01 c8                	add    eax,ecx
10002e6f:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e73:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e77:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e7b:	d3 e0                	shl    eax,cl
10002e7d:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e81:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e85:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e8a:	c1 fa 08             	sar    edx,0x8
10002e8d:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e91:	c1 e2 08             	shl    edx,0x8
10002e94:	09 d0                	or     eax,edx
10002e96:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e99:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e9d:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ea1:	d3 e2                	shl    edx,cl
10002ea3:	09 c2                	or     edx,eax
10002ea5:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002ea8:	46                   	inc    esi
10002ea9:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002ead:	0f 8c 53 ff ff ff    	jl     10002e06 <ssfn_render+0x1aab>
10002eb3:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002eba:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002ebe:	01 f0                	add    eax,esi
10002ec0:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002ec4:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002ec8:	0f 8c 50 ff ff ff    	jl     10002e1e <ssfn_render+0x1ac3>
10002ece:	e9 33 ff ff ff       	jmp    10002e06 <ssfn_render+0x1aab>
10002ed3:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002eda:	74 04                	je     10002ee0 <ssfn_render+0x1b85>
10002edc:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002ee0:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002ee4:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002ee8:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002eee:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ef5:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002ef9:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002f00:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f03:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002f07:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002f0d:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002f11:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002f16:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002f1a:	99                   	cdq    
10002f1b:	f7 f9                	idiv   ecx
10002f1d:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002f21:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002f27:	25 80 00 00 00       	and    eax,0x80
10002f2c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002f30:	0f 85 f7 01 00 00    	jne    1000312d <ssfn_render+0x1dd2>
10002f36:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f39:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002f3d:	0f 84 ea 01 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002f43:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002f4a:	83 ec 0c             	sub    esp,0xc
10002f4d:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f54:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f5b:	51                   	push   ecx
10002f5c:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f63:	e8 53 d9 ff ff       	call   100008bb <_ssfn_c>
10002f68:	83 c4 10             	add    esp,0x10
10002f6b:	85 c0                	test   eax,eax
10002f6d:	0f 84 ba 01 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002f73:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f7b:	0f 86 ac 01 00 00    	jbe    1000312d <ssfn_render+0x1dd2>
10002f81:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f87:	8d 48 06             	lea    ecx,[eax+0x6]
10002f8a:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f90:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f94:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f98:	0f 8e 8f 01 00 00    	jle    1000312d <ssfn_render+0x1dd2>
10002f9e:	8a 19                	mov    bl,BYTE PTR [ecx]
10002fa0:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002fa4:	8a 18                	mov    bl,BYTE PTR [eax]
10002fa6:	83 e3 40             	and    ebx,0x40
10002fa9:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002fae:	75 14                	jne    10002fc4 <ssfn_render+0x1c69>
10002fb0:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002fb4:	75 0e                	jne    10002fc4 <ssfn_render+0x1c69>
10002fb6:	80 fb 01             	cmp    bl,0x1
10002fb9:	19 c0                	sbb    eax,eax
10002fbb:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002fbf:	e9 60 01 00 00       	jmp    10003124 <ssfn_render+0x1dc9>
10002fc4:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002fc8:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002fcc:	c1 e6 10             	shl    esi,0x10
10002fcf:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002fd3:	84 db                	test   bl,bl
10002fd5:	74 08                	je     10002fdf <ssfn_render+0x1c84>
10002fd7:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002fda:	83 c1 06             	add    ecx,0x6
10002fdd:	eb 0c                	jmp    10002feb <ssfn_render+0x1c90>
10002fdf:	c1 e2 08             	shl    edx,0x8
10002fe2:	83 c1 05             	add    ecx,0x5
10002fe5:	89 d0                	mov    eax,edx
10002fe7:	09 f0                	or     eax,esi
10002fe9:	09 c7                	or     edi,eax
10002feb:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002fee:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002ff2:	01 f8                	add    eax,edi
10002ff4:	8a 10                	mov    dl,BYTE PTR [eax]
10002ff6:	88 d3                	mov    bl,dl
10002ff8:	83 e3 e0             	and    ebx,0xffffffe0
10002ffb:	80 fb c0             	cmp    bl,0xc0
10002ffe:	0f 85 20 01 00 00    	jne    10003124 <ssfn_render+0x1dc9>
10003004:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10003008:	c1 e2 08             	shl    edx,0x8
1000300b:	83 c0 02             	add    eax,0x2
1000300e:	81 e2 00 1f 00 00    	and    edx,0x1f00
10003014:	09 da                	or     edx,ebx
10003016:	8d 72 01             	lea    esi,[edx+0x1]
10003019:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
1000301d:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10003024:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10003028:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
1000302d:	0f 84 f1 00 00 00    	je     10003124 <ssfn_render+0x1dc9>
10003033:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10003037:	0f b7 10             	movzx  edx,WORD PTR [eax]
1000303a:	c1 e3 10             	shl    ebx,0x10
1000303d:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10003043:	09 d3                	or     ebx,edx
10003045:	39 de                	cmp    esi,ebx
10003047:	0f 82 cf 00 00 00    	jb     1000311c <ssfn_render+0x1dc1>
1000304d:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10003050:	89 d7                	mov    edi,edx
10003052:	c1 e7 10             	shl    edi,0x10
10003055:	81 e7 00 00 0f 00    	and    edi,0xf0000
1000305b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000305f:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10003063:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10003067:	39 fe                	cmp    esi,edi
10003069:	0f 87 ad 00 00 00    	ja     1000311c <ssfn_render+0x1dc1>
1000306f:	29 de                	sub    esi,ebx
10003071:	c0 ea 04             	shr    dl,0x4
10003074:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
1000307b:	0f b6 d2             	movzx  edx,dl
1000307e:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10003082:	89 d3                	mov    ebx,edx
10003084:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003088:	c1 e3 10             	shl    ebx,0x10
1000308b:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
1000308e:	09 da                	or     edx,ebx
10003090:	c0 e8 04             	shr    al,0x4
10003093:	c1 e0 18             	shl    eax,0x18
10003096:	09 c2                	or     edx,eax
10003098:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000309c:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
1000309f:	01 c2                	add    edx,eax
100030a1:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100030a4:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
100030a8:	39 d7                	cmp    edi,edx
100030aa:	76 78                	jbe    10003124 <ssfn_render+0x1dc9>
100030ac:	8a 1a                	mov    bl,BYTE PTR [edx]
100030ae:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
100030b5:	89 de                	mov    esi,ebx
100030b7:	83 e6 7f             	and    esi,0x7f
100030ba:	39 c6                	cmp    esi,eax
100030bc:	73 1d                	jae    100030db <ssfn_render+0x1d80>
100030be:	48                   	dec    eax
100030bf:	bb 02 00 00 00       	mov    ebx,0x2
100030c4:	29 f0                	sub    eax,esi
100030c6:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
100030cd:	0f b6 02             	movzx  eax,BYTE PTR [edx]
100030d0:	84 c0                	test   al,al
100030d2:	78 03                	js     100030d7 <ssfn_render+0x1d7c>
100030d4:	8d 58 02             	lea    ebx,[eax+0x2]
100030d7:	01 da                	add    edx,ebx
100030d9:	eb cd                	jmp    100030a8 <ssfn_render+0x1d4d>
100030db:	be 01 00 00 00       	mov    esi,0x1
100030e0:	84 db                	test   bl,bl
100030e2:	78 03                	js     100030e7 <ssfn_render+0x1d8c>
100030e4:	8d 70 01             	lea    esi,[eax+0x1]
100030e7:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
100030eb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100030ef:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030f4:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030f8:	99                   	cdq    
100030f9:	f7 fb                	idiv   ebx
100030fb:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
10003100:	74 0d                	je     1000310f <ssfn_render+0x1db4>
10003102:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10003109:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
1000310d:	eb 15                	jmp    10003124 <ssfn_render+0x1dc9>
1000310f:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10003116:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
1000311a:	eb 08                	jmp    10003124 <ssfn_render+0x1dc9>
1000311c:	83 c0 08             	add    eax,0x8
1000311f:	e9 00 ff ff ff       	jmp    10003024 <ssfn_render+0x1cc9>
10003124:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10003128:	e9 5d fe ff ff       	jmp    10002f8a <ssfn_render+0x1c2f>
1000312d:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
10003134:	eb 73                	jmp    100031a9 <ssfn_render+0x1e4e>
10003136:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10003141:	e9 50 e4 ff ff       	jmp    10001596 <ssfn_render+0x23b>
10003146:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000314d:	57                   	push   edi
1000314e:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003155:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000315c:	e8 5a d7 ff ff       	call   100008bb <_ssfn_c>
10003161:	5f                   	pop    edi
10003162:	85 c0                	test   eax,eax
10003164:	0f 84 25 e4 ff ff    	je     1000158f <ssfn_render+0x234>
1000316a:	e9 a2 e4 ff ff       	jmp    10001611 <ssfn_render+0x2b6>
1000316f:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003172:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10003176:	75 0c                	jne    10003184 <ssfn_render+0x1e29>
10003178:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000317f:	e9 3b e4 ff ff       	jmp    100015bf <ssfn_render+0x264>
10003184:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000318b:	57                   	push   edi
1000318c:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003193:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000319a:	e8 1c d7 ff ff       	call   100008bb <_ssfn_c>
1000319f:	59                   	pop    ecx
100031a0:	85 c0                	test   eax,eax
100031a2:	74 d4                	je     10003178 <ssfn_render+0x1e1d>
100031a4:	e9 68 e4 ff ff       	jmp    10001611 <ssfn_render+0x2b6>
100031a9:	81 c4 dc 05 01 00    	add    esp,0x105dc
100031af:	89 c8                	mov    eax,ecx
100031b1:	5b                   	pop    ebx
100031b2:	5e                   	pop    esi
100031b3:	5f                   	pop    edi
100031b4:	5d                   	pop    ebp
100031b5:	c3                   	ret    

100031b6 <ssfn_bbox>:
100031b6:	55                   	push   ebp
100031b7:	57                   	push   edi
100031b8:	56                   	push   esi
100031b9:	53                   	push   ebx
100031ba:	83 ec 3c             	sub    esp,0x3c
100031bd:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
100031c2:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100031c6:	0f 94 c0             	sete   al
100031c9:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
100031ce:	0f 94 c2             	sete   dl
100031d1:	09 d0                	or     eax,edx
100031d3:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
100031d8:	0f 94 c2             	sete   dl
100031db:	09 d0                	or     eax,edx
100031dd:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
100031e2:	0f 94 c2             	sete   dl
100031e5:	09 d0                	or     eax,edx
100031e7:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
100031ec:	0f 94 c2             	sete   dl
100031ef:	08 d0                	or     al,dl
100031f1:	0f 85 7c 01 00 00    	jne    10003373 <ssfn_bbox+0x1bd>
100031f7:	85 db                	test   ebx,ebx
100031f9:	0f 84 74 01 00 00    	je     10003373 <ssfn_bbox+0x1bd>
100031ff:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003203:	31 f6                	xor    esi,esi
10003205:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000320b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000320f:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003215:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003219:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000321f:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10003223:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003229:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000322d:	80 38 00             	cmp    BYTE PTR [eax],0x0
10003230:	0f 84 42 01 00 00    	je     10003378 <ssfn_bbox+0x1c2>
10003236:	8d 54 24 18          	lea    edx,[esp+0x18]
1000323a:	b9 06 00 00 00       	mov    ecx,0x6
1000323f:	89 d7                	mov    edi,edx
10003241:	89 f0                	mov    eax,esi
10003243:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
1000324d:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000324f:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10003257:	31 ff                	xor    edi,edi
10003259:	bd 01 00 00 00       	mov    ebp,0x1
1000325e:	50                   	push   eax
1000325f:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003263:	8d 44 24 20          	lea    eax,[esp+0x20]
10003267:	50                   	push   eax
10003268:	53                   	push   ebx
10003269:	e8 fc ff ff ff       	call   1000326a <ssfn_bbox+0xb4>	1000326a: R_386_PC32	ssfn_render
1000326e:	83 c4 10             	add    esp,0x10
10003271:	89 c6                	mov    esi,eax
10003273:	85 c0                	test   eax,eax
10003275:	74 6f                	je     100032e6 <ssfn_bbox+0x130>
10003277:	0f 88 fb 00 00 00    	js     10003378 <ssfn_bbox+0x1c2>
1000327d:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003283:	85 c0                	test   eax,eax
10003285:	0f 84 ed 00 00 00    	je     10003378 <ssfn_bbox+0x1c2>
1000328b:	85 ed                	test   ebp,ebp
1000328d:	74 0b                	je     1000329a <ssfn_bbox+0xe4>
1000328f:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003295:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000329a:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000329e:	74 12                	je     100032b2 <ssfn_bbox+0xfc>
100032a0:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
100032a6:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100032aa:	7d 2f                	jge    100032db <ssfn_bbox+0x125>
100032ac:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100032b0:	eb 29                	jmp    100032db <ssfn_bbox+0x125>
100032b2:	0f b7 08             	movzx  ecx,WORD PTR [eax]
100032b5:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
100032ba:	39 cd                	cmp    ebp,ecx
100032bc:	7d 05                	jge    100032c3 <ssfn_bbox+0x10d>
100032be:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
100032c3:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
100032c7:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
100032cc:	84 d2                	test   dl,dl
100032ce:	75 04                	jne    100032d4 <ssfn_bbox+0x11e>
100032d0:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
100032d4:	01 ca                	add    edx,ecx
100032d6:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
100032db:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
100032df:	31 ed                	xor    ebp,ebp
100032e1:	e9 78 ff ff ff       	jmp    1000325e <ssfn_bbox+0xa8>
100032e6:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
100032ed:	74 23                	je     10003312 <ssfn_bbox+0x15c>
100032ef:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100032f2:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032f6:	75 1a                	jne    10003312 <ssfn_bbox+0x15c>
100032f8:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032fe:	b9 04 00 00 00       	mov    ecx,0x4
10003303:	99                   	cdq    
10003304:	f7 f9                	idiv   ecx
10003306:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
1000330b:	29 f8                	sub    eax,edi
1000330d:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
10003312:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003318:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000331c:	74 29                	je     10003347 <ssfn_bbox+0x191>
1000331e:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003323:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10003327:	89 01                	mov    DWORD PTR [ecx],eax
10003329:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000332d:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
10003333:	89 01                	mov    DWORD PTR [ecx],eax
10003335:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003339:	89 38                	mov    DWORD PTR [eax],edi
1000333b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000333f:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10003343:	89 38                	mov    DWORD PTR [eax],edi
10003345:	eb 31                	jmp    10003378 <ssfn_bbox+0x1c2>
10003347:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
1000334c:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003350:	89 07                	mov    DWORD PTR [edi],eax
10003352:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003357:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
1000335b:	89 07                	mov    DWORD PTR [edi],eax
1000335d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003361:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003367:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000336b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003371:	eb 05                	jmp    10003378 <ssfn_bbox+0x1c2>
10003373:	be fc ff ff ff       	mov    esi,0xfffffffc
10003378:	83 c4 3c             	add    esp,0x3c
1000337b:	89 f0                	mov    eax,esi
1000337d:	5b                   	pop    ebx
1000337e:	5e                   	pop    esi
1000337f:	5f                   	pop    edi
10003380:	5d                   	pop    ebp
10003381:	c3                   	ret    

10003382 <ssfn_text>:
10003382:	55                   	push   ebp
10003383:	57                   	push   edi
10003384:	56                   	push   esi
10003385:	53                   	push   ebx
10003386:	83 ec 1c             	sub    esp,0x1c
10003389:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000338d:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003391:	85 f6                	test   esi,esi
10003393:	0f 84 b2 00 00 00    	je     1000344b <ssfn_text+0xc9>
10003399:	85 ed                	test   ebp,ebp
1000339b:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
100033a0:	0f 84 a5 00 00 00    	je     1000344b <ssfn_text+0xc9>
100033a6:	83 ec 0c             	sub    esp,0xc
100033a9:	6a 18                	push   0x18
100033ab:	e8 fc ff ff ff       	call   100033ac <ssfn_text+0x2a>	100033ac: R_386_PC32	malloc
100033b0:	83 c4 10             	add    esp,0x10
100033b3:	89 c3                	mov    ebx,eax
100033b5:	85 c0                	test   eax,eax
100033b7:	0f 84 8e 00 00 00    	je     1000344b <ssfn_text+0xc9>
100033bd:	31 c0                	xor    eax,eax
100033bf:	b9 06 00 00 00       	mov    ecx,0x6
100033c4:	89 df                	mov    edi,ebx
100033c6:	80 3e 00             	cmp    BYTE PTR [esi],0x0
100033c9:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100033cb:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100033cf:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100033d2:	74 79                	je     1000344d <ssfn_text+0xcb>
100033d4:	8d 43 0c             	lea    eax,[ebx+0xc]
100033d7:	52                   	push   edx
100033d8:	52                   	push   edx
100033d9:	50                   	push   eax
100033da:	8d 43 0a             	lea    eax,[ebx+0xa]
100033dd:	50                   	push   eax
100033de:	8d 43 06             	lea    eax,[ebx+0x6]
100033e1:	50                   	push   eax
100033e2:	8d 43 04             	lea    eax,[ebx+0x4]
100033e5:	50                   	push   eax
100033e6:	56                   	push   esi
100033e7:	55                   	push   ebp
100033e8:	e8 fc ff ff ff       	call   100033e9 <ssfn_text+0x67>	100033e9: R_386_PC32	ssfn_bbox
100033ed:	83 c4 20             	add    esp,0x20
100033f0:	85 c0                	test   eax,eax
100033f2:	75 59                	jne    1000344d <ssfn_text+0xcb>
100033f4:	83 ec 0c             	sub    esp,0xc
100033f7:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033fb:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033ff:	0f af c8             	imul   ecx,eax
10003402:	c1 e1 02             	shl    ecx,0x2
10003405:	51                   	push   ecx
10003406:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
1000340a:	e8 fc ff ff ff       	call   1000340b <ssfn_text+0x89>	1000340b: R_386_PC32	malloc
1000340f:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003413:	89 c7                	mov    edi,eax
10003415:	89 03                	mov    DWORD PTR [ebx],eax
10003417:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
1000341b:	83 c4 10             	add    esp,0x10
1000341e:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003420:	50                   	push   eax
10003421:	56                   	push   esi
10003422:	53                   	push   ebx
10003423:	55                   	push   ebp
10003424:	e8 fc ff ff ff       	call   10003425 <ssfn_text+0xa3>	10003425: R_386_PC32	ssfn_render
10003429:	83 c4 10             	add    esp,0x10
1000342c:	85 c0                	test   eax,eax
1000342e:	7e 04                	jle    10003434 <ssfn_text+0xb2>
10003430:	01 c6                	add    esi,eax
10003432:	eb ec                	jmp    10003420 <ssfn_text+0x9e>
10003434:	74 17                	je     1000344d <ssfn_text+0xcb>
10003436:	83 ec 0c             	sub    esp,0xc
10003439:	ff 33                	push   DWORD PTR [ebx]
1000343b:	e8 fc ff ff ff       	call   1000343c <ssfn_text+0xba>	1000343c: R_386_PC32	free
10003440:	89 1c 24             	mov    DWORD PTR [esp],ebx
10003443:	e8 fc ff ff ff       	call   10003444 <ssfn_text+0xc2>	10003444: R_386_PC32	free
10003448:	83 c4 10             	add    esp,0x10
1000344b:	31 db                	xor    ebx,ebx
1000344d:	83 c4 1c             	add    esp,0x1c
10003450:	89 d8                	mov    eax,ebx
10003452:	5b                   	pop    ebx
10003453:	5e                   	pop    esi
10003454:	5f                   	pop    edi
10003455:	5d                   	pop    ebp
10003456:	c3                   	ret    
10003457:	90                   	nop

10003458 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003458:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000345c:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003462:	8b 10                	mov    edx,DWORD PTR [eax]
10003464:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003468:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
1000346b:	90                   	nop

1000346c <NIContext::drvDarken4(int, int, int)>:
1000346c:	55                   	push   ebp
1000346d:	57                   	push   edi
1000346e:	56                   	push   esi
1000346f:	53                   	push   ebx
10003470:	83 ec 20             	sub    esp,0x20
10003473:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10003477:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000347b:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000347f:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10003483:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003489:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000348d:	8b 10                	mov    edx,DWORD PTR [eax]
1000348f:	56                   	push   esi
10003490:	53                   	push   ebx
10003491:	50                   	push   eax
10003492:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003495:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003499:	89 c2                	mov    edx,eax
1000349b:	0f b6 ec             	movzx  ebp,ah
1000349e:	c1 ea 10             	shr    edx,0x10
100034a1:	0f af e9             	imul   ebp,ecx
100034a4:	0f b6 d2             	movzx  edx,dl
100034a7:	0f b6 c0             	movzx  eax,al
100034aa:	0f af d1             	imul   edx,ecx
100034ad:	0f af c1             	imul   eax,ecx
100034b0:	c1 ea 07             	shr    edx,0x7
100034b3:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
100034b9:	c1 e8 07             	shr    eax,0x7
100034bc:	8b 39                	mov    edi,DWORD PTR [ecx]
100034be:	c1 e2 10             	shl    edx,0x10
100034c1:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
100034c5:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
100034c9:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
100034cd:	c1 ed 07             	shr    ebp,0x7
100034d0:	c1 e5 08             	shl    ebp,0x8
100034d3:	09 ea                	or     edx,ebp
100034d5:	09 c2                	or     edx,eax
100034d7:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
100034db:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
100034de:	83 c4 2c             	add    esp,0x2c
100034e1:	5b                   	pop    ebx
100034e2:	5e                   	pop    esi
100034e3:	5f                   	pop    edi
100034e4:	5d                   	pop    ebp
100034e5:	ff e0                	jmp    eax
100034e7:	90                   	nop

100034e8 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
100034e8:	55                   	push   ebp
100034e9:	b9 00 40 00 00       	mov    ecx,0x4000
100034ee:	57                   	push   edi
100034ef:	b0 ff                	mov    al,0xff
100034f1:	56                   	push   esi
100034f2:	53                   	push   ebx
100034f3:	83 ec 3c             	sub    esp,0x3c
100034f6:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034fa:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034fe:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
10003501:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10003505:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003507:	85 db                	test   ebx,ebx
10003509:	75 10                	jne    1000351b <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
1000350b:	83 ec 0c             	sub    esp,0xc
1000350e:	68 92 c9 00 10       	push   0x1000c992	1000350f: R_386_32	.text
10003513:	e8 fc ff ff ff       	call   10003514 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	10003514: R_386_PC32	KePanic(char const*)
10003518:	83 c4 10             	add    esp,0x10
1000351b:	50                   	push   eax
1000351c:	50                   	push   eax
1000351d:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003521:	50                   	push   eax
10003522:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003526:	50                   	push   eax
10003527:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000352b:	50                   	push   eax
1000352c:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003530:	50                   	push   eax
10003531:	56                   	push   esi
10003532:	68 00 00 00 00       	push   0x0	10003533: R_386_32	ssfn_ctx
10003537:	e8 fc ff ff ff       	call   10003538 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	10003538: R_386_PC32	ssfn_bbox
1000353c:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000353f:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
10003547:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
1000354b:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
10003553:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10003557:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000355c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003560:	0d 00 00 00 ff       	or     eax,0xff000000
10003565:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003569:	83 c4 1c             	add    esp,0x1c
1000356c:	56                   	push   esi
1000356d:	8d 44 24 20          	lea    eax,[esp+0x20]
10003571:	50                   	push   eax
10003572:	68 00 00 00 00       	push   0x0	10003573: R_386_32	ssfn_ctx
10003577:	e8 fc ff ff ff       	call   10003578 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003578: R_386_PC32	ssfn_render
1000357c:	83 c4 10             	add    esp,0x10
1000357f:	89 03                	mov    DWORD PTR [ebx],eax
10003581:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003585:	31 db                	xor    ebx,ebx
10003587:	89 f0                	mov    eax,esi
10003589:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
1000358d:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003591:	7e 3f                	jle    100035d2 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003593:	31 ff                	xor    edi,edi
10003595:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000359a:	39 f8                	cmp    eax,edi
1000359c:	7e 2c                	jle    100035ca <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
1000359e:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100035a1:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
100035a4:	83 f8 ff             	cmp    eax,0xffffffff
100035a7:	74 1d                	je     100035c6 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
100035a9:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
100035af:	25 ff ff ff 00       	and    eax,0xffffff
100035b4:	8b 0a                	mov    ecx,DWORD PTR [edx]
100035b6:	50                   	push   eax
100035b7:	56                   	push   esi
100035b8:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100035bc:	01 f8                	add    eax,edi
100035be:	50                   	push   eax
100035bf:	52                   	push   edx
100035c0:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100035c3:	83 c4 10             	add    esp,0x10
100035c6:	43                   	inc    ebx
100035c7:	47                   	inc    edi
100035c8:	eb cb                	jmp    10003595 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
100035ca:	29 c3                	sub    ebx,eax
100035cc:	46                   	inc    esi
100035cd:	83 c3 40             	add    ebx,0x40
100035d0:	eb b5                	jmp    10003587 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
100035d2:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100035d7:	83 c4 3c             	add    esp,0x3c
100035da:	5b                   	pop    ebx
100035db:	5e                   	pop    esi
100035dc:	5f                   	pop    edi
100035dd:	5d                   	pop    ebp
100035de:	c3                   	ret    
100035df:	90                   	nop

100035e0 <NIContext::~NIContext()>:
100035e0:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	100035e4: R_386_32	ssfn_ctx
100035e8:	e9 00 db ff ff       	jmp    100010ed <ssfn_free>
100035ed:	90                   	nop

100035ee <NIContext::NIContext(Video*, int, int, int, int)>:
100035ee:	55                   	push   ebp
100035ef:	ba 00 00 00 00       	mov    edx,0x0	100035f0: R_386_32	ssfn_ctx
100035f4:	57                   	push   edi
100035f5:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035fa:	56                   	push   esi
100035fb:	89 d7                	mov    edi,edx
100035fd:	53                   	push   ebx
100035fe:	81 ec 48 02 00 00    	sub    esp,0x248
10003604:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
1000360b:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
10003612:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
10003618:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
1000361f:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
10003625:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
1000362c:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
10003632:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
10003639:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
1000363f:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
10003646:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
1000364c:	31 c0                	xor    eax,eax
1000364e:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003650:	68 00 40 00 00       	push   0x4000
10003655:	e8 fc ff ff ff       	call   10003656 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	10003656: R_386_PC32	malloc
1000365a:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003664:	89 03                	mov    DWORD PTR [ebx],eax
10003666:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000366d:	e8 fc ff ff ff       	call   1000366e <NIContext::NIContext(Video*, int, int, int, int)+0x80>	1000366e: R_386_PC32	malloc
10003672:	83 c4 0c             	add    esp,0xc
10003675:	89 c6                	mov    esi,eax
10003677:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003679: R_386_32	kernelProcess
1000367d:	68 ab c9 00 10       	push   0x1000c9ab	1000367e: R_386_32	.text
10003682:	50                   	push   eax
10003683:	e8 fc ff ff ff       	call   10003684 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003684: R_386_PC32	Directory::Directory(char const*, Process*)
10003688:	83 c4 10             	add    esp,0x10
1000368b:	85 f6                	test   esi,esi
1000368d:	75 10                	jne    1000369f <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
1000368f:	83 ec 0c             	sub    esp,0xc
10003692:	68 bf c9 00 10       	push   0x1000c9bf	10003693: R_386_32	.text
10003697:	e8 fc ff ff ff       	call   10003698 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003698: R_386_PC32	KePanic(char const*)
1000369c:	83 c4 10             	add    esp,0x10
1000369f:	83 ec 0c             	sub    esp,0xc
100036a2:	56                   	push   esi
100036a3:	e8 fc ff ff ff       	call   100036a4 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	100036a4: R_386_PC32	Directory::open()
100036a8:	83 c4 10             	add    esp,0x10
100036ab:	85 c0                	test   eax,eax
100036ad:	75 e0                	jne    1000368f <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
100036af:	83 ec 0c             	sub    esp,0xc
100036b2:	8b 06                	mov    eax,DWORD PTR [esi]
100036b4:	8d 4c 24 20          	lea    ecx,[esp+0x20]
100036b8:	51                   	push   ecx
100036b9:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
100036c0:	52                   	push   edx
100036c1:	6a 00                	push   0x0
100036c3:	68 10 01 00 00       	push   0x110
100036c8:	56                   	push   esi
100036c9:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100036cc:	83 c4 20             	add    esp,0x20
100036cf:	85 c0                	test   eax,eax
100036d1:	0f 85 a0 01 00 00    	jne    10003877 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100036d7:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
100036df:	0f 85 92 01 00 00    	jne    10003877 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100036e5:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
100036ec:	83 c9 ff             	or     ecx,0xffffffff
100036ef:	83 ec 0c             	sub    esp,0xc
100036f2:	89 ef                	mov    edi,ebp
100036f4:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036f6:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036fc:	89 ca                	mov    edx,ecx
100036fe:	f7 d2                	not    edx
10003700:	52                   	push   edx
10003701:	e8 fc ff ff ff       	call   10003702 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	10003702: R_386_PC32	malloc
10003706:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
1000370a:	47                   	inc    edi
1000370b:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
10003711:	5a                   	pop    edx
10003712:	59                   	pop    ecx
10003713:	55                   	push   ebp
10003714:	50                   	push   eax
10003715:	e8 fc ff ff ff       	call   10003716 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	10003716: R_386_PC32	strcpy
1000371a:	5f                   	pop    edi
1000371b:	58                   	pop    eax
1000371c:	68 da c9 00 10       	push   0x1000c9da	1000371d: R_386_32	.text
10003721:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
10003725:	57                   	push   edi
10003726:	e8 fc ff ff ff       	call   10003727 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	10003727: R_386_PC32	strcpy
1000372b:	58                   	pop    eax
1000372c:	5a                   	pop    edx
1000372d:	55                   	push   ebp
1000372e:	57                   	push   edi
1000372f:	e8 fc ff ff ff       	call   10003730 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	10003730: R_386_PC32	strcat
10003734:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000373b:	e8 fc ff ff ff       	call   1000373c <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	1000373c: R_386_PC32	malloc
10003740:	83 c4 0c             	add    esp,0xc
10003743:	89 c5                	mov    ebp,eax
10003745:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003747: R_386_32	kernelProcess
1000374b:	57                   	push   edi
1000374c:	50                   	push   eax
1000374d:	e8 fc ff ff ff       	call   1000374e <NIContext::NIContext(Video*, int, int, int, int)+0x160>	1000374e: R_386_PC32	File::File(char const*, Process*)
10003752:	83 c4 10             	add    esp,0x10
10003755:	85 ed                	test   ebp,ebp
10003757:	0f 84 52 ff ff ff    	je     100036af <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
1000375d:	50                   	push   eax
1000375e:	50                   	push   eax
1000375f:	6a 01                	push   0x1
10003761:	55                   	push   ebp
10003762:	e8 fc ff ff ff       	call   10003763 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	10003763: R_386_PC32	File::open(FileOpenMode)
10003767:	83 c4 10             	add    esp,0x10
1000376a:	85 c0                	test   eax,eax
1000376c:	74 0c                	je     1000377a <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
1000376e:	83 ec 0c             	sub    esp,0xc
10003771:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003774:	55                   	push   ebp
10003775:	e9 b4 00 00 00       	jmp    1000382e <NIContext::NIContext(Video*, int, int, int, int)+0x240>
1000377a:	50                   	push   eax
1000377b:	8d 44 24 17          	lea    eax,[esp+0x17]
1000377f:	50                   	push   eax
10003780:	8d 44 24 20          	lea    eax,[esp+0x20]
10003784:	50                   	push   eax
10003785:	55                   	push   ebp
10003786:	e8 fc ff ff ff       	call   10003787 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	10003787: R_386_PC32	File::stat(unsigned long long*, bool*)
1000378b:	83 c4 10             	add    esp,0x10
1000378e:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003793:	74 0e                	je     100037a3 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003795:	83 ec 0c             	sub    esp,0xc
10003798:	55                   	push   ebp
10003799:	e8 fc ff ff ff       	call   1000379a <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000379a: R_386_PC32	File::close()
1000379e:	e9 85 00 00 00       	jmp    10003828 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
100037a3:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100037a7:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100037ab:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100037af:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100037b3:	83 ec 0c             	sub    esp,0xc
100037b6:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100037ba:	e8 fc ff ff ff       	call   100037bb <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	100037bb: R_386_PC32	malloc
100037bf:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100037c3:	58                   	pop    eax
100037c4:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037c7:	8d 54 24 20          	lea    edx,[esp+0x20]
100037cb:	52                   	push   edx
100037cc:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100037d0:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037d4:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037d8:	55                   	push   ebp
100037d9:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100037dc:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100037e0:	83 c4 1c             	add    esp,0x1c
100037e3:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037e7:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037eb:	68 ef c9 00 10       	push   0x1000c9ef	100037ec: R_386_32	.text
100037f0:	e8 fc ff ff ff       	call   100037f1 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	100037f1: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f5:	83 c4 10             	add    esp,0x10
100037f8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037fc:	85 c0                	test   eax,eax
100037fe:	75 15                	jne    10003815 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003800:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003804:	89 c1                	mov    ecx,eax
10003806:	c1 f9 1f             	sar    ecx,0x1f
10003809:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
1000380d:	75 06                	jne    10003815 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
1000380f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10003813:	74 24                	je     10003839 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
10003815:	83 ec 0c             	sub    esp,0xc
10003818:	55                   	push   ebp
10003819:	e8 fc ff ff ff       	call   1000381a <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	1000381a: R_386_PC32	File::close()
1000381e:	58                   	pop    eax
1000381f:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10003823:	e8 fc ff ff ff       	call   10003824 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	10003824: R_386_PC32	free
10003828:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000382b:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000382e:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003831:	83 c4 10             	add    esp,0x10
10003834:	e9 76 fe ff ff       	jmp    100036af <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003839:	50                   	push   eax
1000383a:	50                   	push   eax
1000383b:	57                   	push   edi
1000383c:	68 03 ca 00 10       	push   0x1000ca03	1000383d: R_386_32	.text
10003841:	e8 fc ff ff ff       	call   10003842 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	10003842: R_386_PC32	Dbg::kprintf(char const*, ...)
10003846:	5a                   	pop    edx
10003847:	59                   	pop    ecx
10003848:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000384c:	68 00 00 00 00       	push   0x0	1000384d: R_386_32	ssfn_ctx
10003851:	e8 fc ff ff ff       	call   10003852 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	10003852: R_386_PC32	ssfn_load
10003856:	5b                   	pop    ebx
10003857:	5f                   	pop    edi
10003858:	50                   	push   eax
10003859:	68 14 ca 00 10       	push   0x1000ca14	1000385a: R_386_32	.text
1000385e:	e8 fc ff ff ff       	call   1000385f <NIContext::NIContext(Video*, int, int, int, int)+0x271>	1000385f: R_386_PC32	Dbg::kprintf(char const*, ...)
10003863:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003866:	e8 fc ff ff ff       	call   10003867 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	10003867: R_386_PC32	File::close()
1000386b:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000386e:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003871:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003874:	83 c4 10             	add    esp,0x10
10003877:	83 ec 0c             	sub    esp,0xc
1000387a:	56                   	push   esi
1000387b:	e8 fc ff ff ff       	call   1000387c <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	1000387c: R_386_PC32	Directory::close()
10003880:	8b 06                	mov    eax,DWORD PTR [esi]
10003882:	89 34 24             	mov    DWORD PTR [esp],esi
10003885:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003888:	b8 00 00 00 00       	mov    eax,0x0	10003889: R_386_32	ssfn_ctx
1000388d:	e8 f7 cb ff ff       	call   10000489 <_ssfn_fc.part.1>
10003892:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003894: R_386_32	ssfn_ctx
1000389c:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000389e: R_386_32	ssfn_ctx
100038a6:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	100038a8: R_386_32	ssfn_ctx
100038b0:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	100038b2: R_386_32	ssfn_ctx
100038ba:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	100038bc: R_386_32	ssfn_ctx
100038c4:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	100038c6: R_386_32	ssfn_ctx
100038ce:	81 c4 4c 02 00 00    	add    esp,0x24c
100038d4:	5b                   	pop    ebx
100038d5:	5e                   	pop    esi
100038d6:	5f                   	pop    edi
100038d7:	5d                   	pop    ebp
100038d8:	c3                   	ret    
100038d9:	90                   	nop

100038da <NIDesktop::NIDesktop(NIContext*)>:
100038da:	53                   	push   ebx
100038db:	83 ec 14             	sub    esp,0x14
100038de:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
100038e2:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100038e6:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
100038ed:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100038f0:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038f7:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038fe:	6a 08                	push   0x8
10003900:	e8 fc ff ff ff       	call   10003901 <NIDesktop::NIDesktop(NIContext*)+0x27>	10003901: R_386_PC32	malloc
10003905:	89 03                	mov    DWORD PTR [ebx],eax
10003907:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
1000390e:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003914:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10003916: R_386_32	mouseDesktop
1000391a:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000391c: R_386_32	guiMouseHandler
	10003920: R_386_32	clipdrawHandleMouse(int, int, int, int)
10003924:	83 c4 18             	add    esp,0x18
10003927:	5b                   	pop    ebx
10003928:	c3                   	ret    
10003929:	90                   	nop

1000392a <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
1000392a:	53                   	push   ebx
1000392b:	83 ec 08             	sub    esp,0x8
1000392e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003932:	8b 00                	mov    eax,DWORD PTR [eax]
10003934:	8b 18                	mov    ebx,DWORD PTR [eax]
10003936:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
1000393a:	74 1d                	je     10003959 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
1000393c:	8b 03                	mov    eax,DWORD PTR [ebx]
1000393e:	85 c0                	test   eax,eax
10003940:	74 12                	je     10003954 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003942:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
10003946:	74 0c                	je     10003954 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003948:	83 ec 0c             	sub    esp,0xc
1000394b:	50                   	push   eax
1000394c:	e8 fc ff ff ff       	call   1000394d <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	1000394d: R_386_PC32	NIWindow::invalidate()
10003951:	83 c4 10             	add    esp,0x10
10003954:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003957:	eb dd                	jmp    10003936 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003959:	83 c4 08             	add    esp,0x8
1000395c:	5b                   	pop    ebx
1000395d:	c3                   	ret    

1000395e <NIDesktop::getTopmostWindowAtPixel(int, int)>:
1000395e:	57                   	push   edi
1000395f:	56                   	push   esi
10003960:	53                   	push   ebx
10003961:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003965:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003969:	8b 00                	mov    eax,DWORD PTR [eax]
1000396b:	8b 00                	mov    eax,DWORD PTR [eax]
1000396d:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003970:	85 db                	test   ebx,ebx
10003972:	74 43                	je     100039b7 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
10003974:	8b 00                	mov    eax,DWORD PTR [eax]
10003976:	85 c0                	test   eax,eax
10003978:	74 3f                	je     100039b9 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
1000397a:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
1000397d:	39 ca                	cmp    edx,ecx
1000397f:	7e 04                	jle    10003985 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003981:	89 d8                	mov    eax,ebx
10003983:	eb e8                	jmp    1000396d <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
10003985:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003988:	01 d6                	add    esi,edx
1000398a:	39 ce                	cmp    esi,ecx
1000398c:	7e f3                	jle    10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000398e:	89 ce                	mov    esi,ecx
10003990:	29 d6                	sub    esi,edx
10003992:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10003995:	8d 34 b2             	lea    esi,[edx+esi*4]
10003998:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000399b:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000399e:	01 d7                	add    edi,edx
100039a0:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
100039a4:	7f db                	jg     10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039a6:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
100039a9:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
100039ad:	29 f2                	sub    edx,esi
100039af:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
100039b3:	7e cc                	jle    10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039b5:	eb 02                	jmp    100039b9 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100039b7:	31 c0                	xor    eax,eax
100039b9:	5b                   	pop    ebx
100039ba:	5e                   	pop    esi
100039bb:	5f                   	pop    edi
100039bc:	c3                   	ret    
100039bd:	90                   	nop

100039be <NIDesktop::renderScanline(int, int, int)>:
100039be:	55                   	push   ebp
100039bf:	57                   	push   edi
100039c0:	56                   	push   esi
100039c1:	53                   	push   ebx
100039c2:	83 ec 2c             	sub    esp,0x2c
100039c5:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100039c9:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
100039cd:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100039d1:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039d5:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100039d9:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100039db: R_386_32	render
100039df:	31 c0                	xor    eax,eax
100039e1:	89 d7                	mov    edi,edx
100039e3:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039e5:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039e9:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100039ed:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100039ef: R_386_32	shadow
100039f3:	b0 80                	mov    al,0x80
100039f5:	89 d7                	mov    edi,edx
100039f7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039f9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039fd:	8b 00                	mov    eax,DWORD PTR [eax]
100039ff:	8b 00                	mov    eax,DWORD PTR [eax]
10003a01:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a05:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003a09:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003a0d:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003a0f: R_386_32	movingWin
10003a13:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003a17:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003a1a:	85 c0                	test   eax,eax
10003a1c:	75 09                	jne    10003a27 <NIDesktop::renderScanline(int, int, int)+0x69>
10003a1e:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003a22:	e9 cf 02 00 00       	jmp    10003cf6 <NIDesktop::renderScanline(int, int, int)+0x338>
10003a27:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10003a2b:	8b 1f                	mov    ebx,DWORD PTR [edi]
10003a2d:	85 db                	test   ebx,ebx
10003a2f:	74 ed                	je     10003a1e <NIDesktop::renderScanline(int, int, int)+0x60>
10003a31:	39 da                	cmp    edx,ebx
10003a33:	75 06                	jne    10003a3b <NIDesktop::renderScanline(int, int, int)+0x7d>
10003a35:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a39:	eb d8                	jmp    10003a13 <NIDesktop::renderScanline(int, int, int)+0x55>
10003a3b:	83 ec 0c             	sub    esp,0xc
10003a3e:	53                   	push   ebx
10003a3f:	e8 fc ff ff ff       	call   10003a40 <NIDesktop::renderScanline(int, int, int)+0x82>	10003a40: R_386_PC32	NIWindow::request()
10003a44:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003a47:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003a4a:	83 c4 10             	add    esp,0x10
10003a4d:	01 c2                	add    edx,eax
10003a4f:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a53:	0f 8e ad 00 00 00    	jle    10003b06 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a59:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a5d:	0f 85 a3 00 00 00    	jne    10003b06 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a63:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a67:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a6a:	83 c0 06             	add    eax,0x6
10003a6d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a71:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a74:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a77:	01 c8                	add    eax,ecx
10003a79:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003a7d:	39 d0                	cmp    eax,edx
10003a7f:	0f 8e 40 01 00 00    	jle    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a85:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a89:	7c 75                	jl     10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a8b:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a8f:	0f 8f 30 01 00 00    	jg     10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a95:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a98:	89 d5                	mov    ebp,edx
10003a9a:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a9d:	29 cd                	sub    ebp,ecx
10003a9f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003aa3:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003aa7:	39 f0                	cmp    eax,esi
10003aa9:	7c 1d                	jl     10003ac8 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003aab:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003aae:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003ab1:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003ab4:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003ab8:	7f 0e                	jg     10003ac8 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003aba:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003abe:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003ac2:	29 cd                	sub    ebp,ecx
10003ac4:	39 d5                	cmp    ebp,edx
10003ac6:	7d 07                	jge    10003acf <NIDesktop::renderScanline(int, int, int)+0x111>
10003ac8:	40                   	inc    eax
10003ac9:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003acd:	75 d8                	jne    10003aa7 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003acf:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003ad3:	48                   	dec    eax
10003ad4:	83 f8 03             	cmp    eax,0x3
10003ad7:	77 27                	ja     10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003ad9:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003adb: R_386_32	render
10003ae0:	75 1e                	jne    10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003ae2:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003ae9:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003aec: R_386_32	shadow
10003af0:	0f af c1             	imul   eax,ecx
10003af3:	d1 f9                	sar    ecx,1
10003af5:	c1 f8 08             	sar    eax,0x8
10003af8:	01 c1                	add    ecx,eax
10003afa:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003afc: R_386_32	shadow
10003b00:	42                   	inc    edx
10003b01:	e9 6b ff ff ff       	jmp    10003a71 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003b06:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b0a:	0f 8d b5 00 00 00    	jge    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b10:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b14:	0f 85 ab 00 00 00    	jne    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b1a:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003b1e:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003b21:	8d 77 fa             	lea    esi,[edi-0x6]
10003b24:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003b28:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003b2b:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003b2e:	01 ce                	add    esi,ecx
10003b30:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003b34:	39 c6                	cmp    esi,eax
10003b36:	0f 8e 89 00 00 00    	jle    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b3c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003b40:	7c 7d                	jl     10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003b42:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003b46:	7f 7d                	jg     10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b48:	89 c7                	mov    edi,eax
10003b4a:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b4e:	29 cf                	sub    edi,ecx
10003b50:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b54:	4a                   	dec    edx
10003b55:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b59:	29 d1                	sub    ecx,edx
10003b5b:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b5f:	74 32                	je     10003b93 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b61:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b64:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b67:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b6a:	39 d5                	cmp    ebp,edx
10003b6c:	7e e6                	jle    10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b6e:	89 d5                	mov    ebp,edx
10003b70:	29 fd                	sub    ebp,edi
10003b72:	39 ee                	cmp    esi,ebp
10003b74:	7e 1d                	jle    10003b93 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b76:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b79:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b7c:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b7f:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b83:	7f cf                	jg     10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b85:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b89:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003b8d:	29 f7                	sub    edi,esi
10003b8f:	39 c7                	cmp    edi,eax
10003b91:	7c c1                	jl     10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b93:	83 f9 04             	cmp    ecx,0x4
10003b96:	77 27                	ja     10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003b98:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b9a: R_386_32	render
10003b9f:	75 1e                	jne    10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003ba1:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003ba8:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003bab: R_386_32	shadow
10003baf:	0f af d1             	imul   edx,ecx
10003bb2:	d1 f9                	sar    ecx,1
10003bb4:	c1 fa 08             	sar    edx,0x8
10003bb7:	01 d1                	add    ecx,edx
10003bb9:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003bbb: R_386_32	shadow
10003bbf:	40                   	inc    eax
10003bc0:	e9 63 ff ff ff       	jmp    10003b28 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003bc5:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003bc8:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003bcc:	0f 8f 00 01 00 00    	jg     10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003bd2:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003bd5:	01 c2                	add    edx,eax
10003bd7:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003bdb:	0f 8e f1 00 00 00    	jle    10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003be1:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003be5:	29 c2                	sub    edx,eax
10003be7:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003bea:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003bee:	8d 14 90             	lea    edx,[eax+edx*4]
10003bf1:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003bf4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003bf8:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003bfc:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003c00:	74 09                	je     10003c0b <NIDesktop::renderScanline(int, int, int)+0x24d>
10003c02:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c06:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003c09:	eb 78                	jmp    10003c83 <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003c0b:	31 c9                	xor    ecx,ecx
10003c0d:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003c10:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c14:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003c18:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003c1b:	01 cd                	add    ebp,ecx
10003c1d:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c21:	01 ca                	add    edx,ecx
10003c23:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003c25: R_386_32	render
10003c2a:	75 1f                	jne    10003c4b <NIDesktop::renderScanline(int, int, int)+0x28d>
10003c2c:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003c2f: R_386_32	shadow
10003c33:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003c36:	83 c7 7d             	add    edi,0x7d
10003c39:	0f af f7             	imul   esi,edi
10003c3c:	d1 ff                	sar    edi,1
10003c3e:	c1 fe 08             	sar    esi,0x8
10003c41:	01 f7                	add    edi,esi
10003c43:	89 f8                	mov    eax,edi
10003c45:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003c47: R_386_32	shadow
10003c4b:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003c4d: R_386_32	render
10003c52:	75 20                	jne    10003c74 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c54:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c5b:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c5e: R_386_32	shadow
10003c62:	0f af f7             	imul   esi,edi
10003c65:	d1 ff                	sar    edi,1
10003c67:	c1 fe 08             	sar    esi,0x8
10003c6a:	01 f7                	add    edi,esi
10003c6c:	89 f8                	mov    eax,edi
10003c6e:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c70: R_386_32	shadow
10003c74:	41                   	inc    ecx
10003c75:	83 f9 04             	cmp    ecx,0x4
10003c78:	75 93                	jne    10003c0d <NIDesktop::renderScanline(int, int, int)+0x24f>
10003c7a:	eb 86                	jmp    10003c02 <NIDesktop::renderScanline(int, int, int)+0x244>
10003c7c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c80:	7d 11                	jge    10003c93 <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003c82:	40                   	inc    eax
10003c83:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c86:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c89:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c8d:	39 c2                	cmp    edx,eax
10003c8f:	7f eb                	jg     10003c7c <NIDesktop::renderScanline(int, int, int)+0x2be>
10003c91:	eb 3f                	jmp    10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c93:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c97:	7f 39                	jg     10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c99:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9b: R_386_32	render
10003ca0:	75 e0                	jne    10003c82 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003ca2:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003ca4: R_386_32	render
10003ca9:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003cad:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003cb0:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003cb3:	0f af ca             	imul   ecx,edx
10003cb6:	89 c2                	mov    edx,eax
10003cb8:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003cbb:	01 ca                	add    edx,ecx
10003cbd:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003cc0:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003cc4:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003cc7:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003cca: R_386_32	renderData
10003cce:	75 b2                	jne    10003c82 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003cd0:	eb 44                	jmp    10003d16 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cd2:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003cd6:	0f 85 42 fd ff ff    	jne    10003a1e <NIDesktop::renderScanline(int, int, int)+0x60>
10003cdc:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003ce0:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003ce3:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003ce7:	e9 21 fd ff ff       	jmp    10003a0d <NIDesktop::renderScanline(int, int, int)+0x4f>
10003cec:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003cee: R_386_32	render
10003cf3:	74 09                	je     10003cfe <NIDesktop::renderScanline(int, int, int)+0x340>
10003cf5:	40                   	inc    eax
10003cf6:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003cfa:	7c f0                	jl     10003cec <NIDesktop::renderScanline(int, int, int)+0x32e>
10003cfc:	eb 18                	jmp    10003d16 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cfe:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003d00: R_386_32	render
10003d05:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003d08: R_386_32	renderData
10003d10:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003d14:	75 df                	jne    10003cf5 <NIDesktop::renderScanline(int, int, int)+0x337>
10003d16:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d1a:	8b 00                	mov    eax,DWORD PTR [eax]
10003d1c:	8b 00                	mov    eax,DWORD PTR [eax]
10003d1e:	85 c0                	test   eax,eax
10003d20:	74 5e                	je     10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d22:	8b 00                	mov    eax,DWORD PTR [eax]
10003d24:	85 c0                	test   eax,eax
10003d26:	74 58                	je     10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d28:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003d2c:	75 52                	jne    10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d2e:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003d32:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003d36:	7d 48                	jge    10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d38:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003d3a: R_386_32	shadow
10003d3e:	3c 80                	cmp    al,0x80
10003d40:	74 3b                	je     10003d7d <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003d42:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003d45: R_386_32	renderData
10003d49:	0f b6 f0             	movzx  esi,al
10003d4c:	89 d1                	mov    ecx,edx
10003d4e:	0f b6 c6             	movzx  eax,dh
10003d51:	c1 e9 10             	shr    ecx,0x10
10003d54:	0f af c6             	imul   eax,esi
10003d57:	0f b6 c9             	movzx  ecx,cl
10003d5a:	0f b6 d2             	movzx  edx,dl
10003d5d:	0f af ce             	imul   ecx,esi
10003d60:	0f af d6             	imul   edx,esi
10003d63:	c1 e9 07             	shr    ecx,0x7
10003d66:	c1 e8 07             	shr    eax,0x7
10003d69:	c1 e1 10             	shl    ecx,0x10
10003d6c:	c1 e0 08             	shl    eax,0x8
10003d6f:	c1 ea 07             	shr    edx,0x7
10003d72:	09 c1                	or     ecx,eax
10003d74:	09 ca                	or     edx,ecx
10003d76:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d79: R_386_32	renderData
10003d7d:	43                   	inc    ebx
10003d7e:	eb b2                	jmp    10003d32 <NIDesktop::renderScanline(int, int, int)+0x374>
10003d80:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d84:	83 ec 0c             	sub    esp,0xc
10003d87:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d8a:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d90:	8b 10                	mov    edx,DWORD PTR [eax]
10003d92:	68 00 00 00 00       	push   0x0	10003d93: R_386_32	renderData
10003d97:	6a 00                	push   0x0
10003d99:	6a 01                	push   0x1
10003d9b:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003d9f:	6a 00                	push   0x0
10003da1:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003da5:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003da9:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003dad:	50                   	push   eax
10003dae:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003db1:	83 c4 5c             	add    esp,0x5c
10003db4:	5b                   	pop    ebx
10003db5:	5e                   	pop    esi
10003db6:	5f                   	pop    edi
10003db7:	5d                   	pop    ebp
10003db8:	c3                   	ret    
10003db9:	90                   	nop

10003dba <NIDesktop::rangeRefresh(int, int, int, int)>:
10003dba:	53                   	push   ebx
10003dbb:	83 ec 08             	sub    esp,0x8
10003dbe:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003dc2:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003dc6:	7d 18                	jge    10003de0 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003dc8:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003dcc:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003dd0:	53                   	push   ebx
10003dd1:	43                   	inc    ebx
10003dd2:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003dd6:	e8 fc ff ff ff       	call   10003dd7 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003dd7: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003ddb:	83 c4 10             	add    esp,0x10
10003dde:	eb e2                	jmp    10003dc2 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003de0:	83 c4 08             	add    esp,0x8
10003de3:	5b                   	pop    ebx
10003de4:	c3                   	ret    
10003de5:	90                   	nop

10003de6 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003de6:	55                   	push   ebp
10003de7:	ba 05 00 00 00       	mov    edx,0x5
10003dec:	57                   	push   edi
10003ded:	56                   	push   esi
10003dee:	53                   	push   ebx
10003def:	83 ec 0c             	sub    esp,0xc
10003df2:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003df6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003df9:	83 f8 05             	cmp    eax,0x5
10003dfc:	7c 02                	jl     10003e00 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003dfe:	89 c2                	mov    edx,eax
10003e00:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003e04:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003e07:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003e0a:	83 ea 05             	sub    edx,0x5
10003e0d:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003e13:	8d 70 05             	lea    esi,[eax+0x5]
10003e16:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003e19:	39 c5                	cmp    ebp,eax
10003e1b:	7f 03                	jg     10003e20 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003e1d:	8d 71 ff             	lea    esi,[ecx-0x1]
10003e20:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003e23:	89 c1                	mov    ecx,eax
10003e25:	83 f8 05             	cmp    eax,0x5
10003e28:	7d 05                	jge    10003e2f <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003e2a:	b9 05 00 00 00       	mov    ecx,0x5
10003e2f:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003e32:	83 e9 05             	sub    ecx,0x5
10003e35:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003e3b:	8d 58 05             	lea    ebx,[eax+0x5]
10003e3e:	8d 6f fb             	lea    ebp,[edi-0x5]
10003e41:	39 c5                	cmp    ebp,eax
10003e43:	7f 03                	jg     10003e48 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003e45:	8d 5f ff             	lea    ebx,[edi-0x1]
10003e48:	83 ec 0c             	sub    esp,0xc
10003e4b:	53                   	push   ebx
10003e4c:	51                   	push   ecx
10003e4d:	56                   	push   esi
10003e4e:	52                   	push   edx
10003e4f:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e53:	e8 fc ff ff ff       	call   10003e54 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e54: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e58:	83 c4 2c             	add    esp,0x2c
10003e5b:	5b                   	pop    ebx
10003e5c:	5e                   	pop    esi
10003e5d:	5f                   	pop    edi
10003e5e:	5d                   	pop    ebp
10003e5f:	c3                   	ret    

10003e60 <NIDesktop::completeRefresh()>:
10003e60:	56                   	push   esi
10003e61:	53                   	push   ebx
10003e62:	31 f6                	xor    esi,esi
10003e64:	50                   	push   eax
10003e65:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e69:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e6c:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e72:	7e 15                	jle    10003e89 <NIDesktop::completeRefresh()+0x29>
10003e74:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e7a:	6a 00                	push   0x0
10003e7c:	56                   	push   esi
10003e7d:	46                   	inc    esi
10003e7e:	53                   	push   ebx
10003e7f:	e8 fc ff ff ff       	call   10003e80 <NIDesktop::completeRefresh()+0x20>	10003e80: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e84:	83 c4 10             	add    esp,0x10
10003e87:	eb e0                	jmp    10003e69 <NIDesktop::completeRefresh()+0x9>
10003e89:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e8f:	83 ec 0c             	sub    esp,0xc
10003e92:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e94:	6a 00                	push   0x0
10003e96:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e99:	05 00 00 00 00       	add    eax,0x0	10003e9a: R_386_32	___mouse_data
10003e9e:	50                   	push   eax
10003e9f:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003ea2:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003ea5:	52                   	push   edx
10003ea6:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003ea9:	83 c4 24             	add    esp,0x24
10003eac:	5b                   	pop    ebx
10003ead:	5e                   	pop    esi
10003eae:	c3                   	ret    
10003eaf:	90                   	nop

10003eb0 <NIDesktop::addWindow(NIWindow*)>:
10003eb0:	56                   	push   esi
10003eb1:	53                   	push   ebx
10003eb2:	83 ec 0c             	sub    esp,0xc
10003eb5:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003eb9:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003ebd:	56                   	push   esi
10003ebe:	ff 33                	push   DWORD PTR [ebx]
10003ec0:	e8 fc ff ff ff       	call   10003ec1 <NIDesktop::addWindow(NIWindow*)+0x11>	10003ec1: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ec5:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003ec9:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003ecd:	83 c4 14             	add    esp,0x14
10003ed0:	5b                   	pop    ebx
10003ed1:	5e                   	pop    esi
10003ed2:	e9 0f ff ff ff       	jmp    10003de6 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003ed7:	90                   	nop

10003ed8 <NIDesktop::raiseWindow(NIWindow*)>:
10003ed8:	53                   	push   ebx
10003ed9:	83 ec 10             	sub    esp,0x10
10003edc:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ee0:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003ee4:	50                   	push   eax
10003ee5:	ff 33                	push   DWORD PTR [ebx]
10003ee7:	e8 fc ff ff ff       	call   10003ee8 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003ee8: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003eec:	58                   	pop    eax
10003eed:	5a                   	pop    edx
10003eee:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ef2:	ff 33                	push   DWORD PTR [ebx]
10003ef4:	e8 fc ff ff ff       	call   10003ef5 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ef5: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ef9:	59                   	pop    ecx
10003efa:	58                   	pop    eax
10003efb:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eff:	53                   	push   ebx
10003f00:	e8 fc ff ff ff       	call   10003f01 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003f01: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f05:	83 c4 18             	add    esp,0x18
10003f08:	5b                   	pop    ebx
10003f09:	c3                   	ret    

10003f0a <NIDesktop::deleteWindow(NIWindow*)>:
10003f0a:	53                   	push   ebx
10003f0b:	83 ec 10             	sub    esp,0x10
10003f0e:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003f12:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003f16:	50                   	push   eax
10003f17:	ff 33                	push   DWORD PTR [ebx]
10003f19:	e8 fc ff ff ff       	call   10003f1a <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003f1a: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003f1e:	58                   	pop    eax
10003f1f:	5a                   	pop    edx
10003f20:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003f24:	53                   	push   ebx
10003f25:	e8 fc ff ff ff       	call   10003f26 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003f26: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f2a:	83 c4 18             	add    esp,0x18
10003f2d:	5b                   	pop    ebx
10003f2e:	c3                   	ret    
10003f2f:	90                   	nop

10003f30 <NIDesktop::handleMouse(int, int, int, int)>:
10003f30:	55                   	push   ebp
10003f31:	57                   	push   edi
10003f32:	56                   	push   esi
10003f33:	53                   	push   ebx
10003f34:	83 ec 28             	sub    esp,0x28
10003f37:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003f3b:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003f3e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f41:	8d 4a 20             	lea    ecx,[edx+0x20]
10003f44:	51                   	push   ecx
10003f45:	52                   	push   edx
10003f46:	8d 50 20             	lea    edx,[eax+0x20]
10003f49:	52                   	push   edx
10003f4a:	50                   	push   eax
10003f4b:	53                   	push   ebx
10003f4c:	e8 fc ff ff ff       	call   10003f4d <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003f4d: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f51:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f54:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f58:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f5b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10003f5f:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f63:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003f67:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f6b:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f6e:	83 c4 20             	add    esp,0x20
10003f71:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f74:	85 d2                	test   edx,edx
10003f76:	79 07                	jns    10003f7f <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003f78:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f7f:	85 c0                	test   eax,eax
10003f81:	79 07                	jns    10003f8a <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003f83:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f8a:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f8d:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f93:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f96:	7f 04                	jg     10003f9c <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f98:	48                   	dec    eax
10003f99:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f9c:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003fa2:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003fa5:	7f 04                	jg     10003fab <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003fa7:	48                   	dec    eax
10003fa8:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003fab:	55                   	push   ebp
10003fac:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003faf:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003fb2:	53                   	push   ebx
10003fb3:	e8 fc ff ff ff       	call   10003fb4 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003fb4: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003fb8:	83 c4 10             	add    esp,0x10
10003fbb:	89 c6                	mov    esi,eax
10003fbd:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003fc1:	83 e0 01             	and    eax,0x1
10003fc4:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003fc6: R_386_32	movingWin
10003fcb:	0f 84 e1 01 00 00    	je     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
10003fd1:	c6 04 24 00          	mov    BYTE PTR [esp],0x0
10003fd5:	85 c0                	test   eax,eax
10003fd7:	75 0b                	jne    10003fe4 <NIDesktop::handleMouse(int, int, int, int)+0xb4>
10003fd9:	a0 d8 0a 04 10       	mov    al,ds:0x10040ad8	10003fda: R_386_32	.bss
10003fde:	83 e0 01             	and    eax,0x1
10003fe1:	88 04 24             	mov    BYTE PTR [esp],al
10003fe4:	bf 01 00 00 00       	mov    edi,0x1
10003fe9:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003feb: R_386_32	movingWin
10003fef:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003ff2:	48                   	dec    eax
10003ff3:	39 f8                	cmp    eax,edi
10003ff5:	0f 8e b0 00 00 00    	jle    100040ab <NIDesktop::handleMouse(int, int, int, int)+0x17b>
10003ffb:	bd 01 00 00 00       	mov    ebp,0x1
10004000:	a1 00 00 00 00       	mov    eax,ds:0x0	10004001: R_386_32	movingWin
10004005:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10004008:	48                   	dec    eax
10004009:	39 e8                	cmp    eax,ebp
1000400b:	0f 8e 94 00 00 00    	jle    100040a5 <NIDesktop::handleMouse(int, int, int, int)+0x175>
10004011:	8d 04 2f             	lea    eax,[edi+ebp*1]
10004014:	89 fa                	mov    edx,edi
10004016:	83 e0 1f             	and    eax,0x1f
10004019:	83 e2 03             	and    edx,0x3
1000401c:	09 d0                	or     eax,edx
1000401e:	75 7f                	jne    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004020:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004024:	2b 05 d4 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad4	10004026: R_386_32	.bss
1000402a:	01 e8                	add    eax,ebp
1000402c:	78 2d                	js     1000405b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
1000402e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004031:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004037:	7d 22                	jge    1000405b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10004039:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
1000403d:	8d 48 01             	lea    ecx,[eax+0x1]
10004040:	83 ec 0c             	sub    esp,0xc
10004043:	2b 15 d0 0a 04 10    	sub    edx,DWORD PTR ds:0x10040ad0	10004045: R_386_32	.bss
10004049:	51                   	push   ecx
1000404a:	01 fa                	add    edx,edi
1000404c:	50                   	push   eax
1000404d:	8d 42 01             	lea    eax,[edx+0x1]
10004050:	50                   	push   eax
10004051:	52                   	push   edx
10004052:	53                   	push   ebx
10004053:	e8 fc ff ff ff       	call   10004054 <NIDesktop::handleMouse(int, int, int, int)+0x124>	10004054: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004058:	83 c4 20             	add    esp,0x20
1000405b:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
1000405f:	75 3e                	jne    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004061:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004064:	01 e8                	add    eax,ebp
10004066:	2b 05 d4 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad4	10004068: R_386_32	.bss
1000406c:	78 31                	js     1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
1000406e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004071:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004077:	7d 26                	jge    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004079:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
1000407f:	8b 11                	mov    edx,DWORD PTR [ecx]
10004081:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10004085:	6a 00                	push   0x0
10004087:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000408a:	01 fa                	add    edx,edi
1000408c:	2b 15 d0 0a 04 10    	sub    edx,DWORD PTR ds:0x10040ad0	1000408e: R_386_32	.bss
10004092:	52                   	push   edx
10004093:	50                   	push   eax
10004094:	51                   	push   ecx
10004095:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10004099:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000409c:	83 c4 10             	add    esp,0x10
1000409f:	45                   	inc    ebp
100040a0:	e9 5b ff ff ff       	jmp    10004000 <NIDesktop::handleMouse(int, int, int, int)+0xd0>
100040a5:	47                   	inc    edi
100040a6:	e9 3e ff ff ff       	jmp    10003fe9 <NIDesktop::handleMouse(int, int, int, int)+0xb9>
100040ab:	a1 d4 0a 04 10       	mov    eax,ds:0x10040ad4	100040ac: R_386_32	.bss
100040b0:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
100040b3:	29 c7                	sub    edi,eax
100040b5:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
100040b9:	0f 85 6d 02 00 00    	jne    1000432c <NIDesktop::handleMouse(int, int, int, int)+0x3fc>
100040bf:	89 3c 24             	mov    DWORD PTR [esp],edi
100040c2:	85 ff                	test   edi,edi
100040c4:	79 07                	jns    100040cd <NIDesktop::handleMouse(int, int, int, int)+0x19d>
100040c6:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
100040cd:	8b 4a 20             	mov    ecx,DWORD PTR [edx+0x20]
100040d0:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
100040d3:	01 cf                	add    edi,ecx
100040d5:	8b aa 0c 04 00 00    	mov    ebp,DWORD PTR [edx+0x40c]
100040db:	39 ef                	cmp    edi,ebp
100040dd:	7d 05                	jge    100040e4 <NIDesktop::handleMouse(int, int, int, int)+0x1b4>
100040df:	2b 3c 24             	sub    edi,DWORD PTR [esp]
100040e2:	eb 0b                	jmp    100040ef <NIDesktop::handleMouse(int, int, int, int)+0x1bf>
100040e4:	89 ef                	mov    edi,ebp
100040e6:	2b 3c 24             	sub    edi,DWORD PTR [esp]
100040e9:	0f 88 c3 00 00 00    	js     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040ef:	85 ff                	test   edi,edi
100040f1:	0f 84 bb 00 00 00    	je     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040f7:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100040fb:	29 c2                	sub    edx,eax
100040fd:	89 d0                	mov    eax,edx
100040ff:	79 02                	jns    10004103 <NIDesktop::handleMouse(int, int, int, int)+0x1d3>
10004101:	31 d2                	xor    edx,edx
10004103:	01 c8                	add    eax,ecx
10004105:	39 c5                	cmp    ebp,eax
10004107:	7e 04                	jle    1000410d <NIDesktop::handleMouse(int, int, int, int)+0x1dd>
10004109:	29 d0                	sub    eax,edx
1000410b:	eb 08                	jmp    10004115 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
1000410d:	89 e8                	mov    eax,ebp
1000410f:	29 d0                	sub    eax,edx
10004111:	79 02                	jns    10004115 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
10004113:	31 c0                	xor    eax,eax
10004115:	83 ec 0c             	sub    esp,0xc
10004118:	8d 2c 10             	lea    ebp,[eax+edx*1]
1000411b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000411f:	55                   	push   ebp
10004120:	2b 05 d0 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad0	10004122: R_386_32	.bss
10004126:	52                   	push   edx
10004127:	8d 48 01             	lea    ecx,[eax+0x1]
1000412a:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
1000412e:	51                   	push   ecx
1000412f:	50                   	push   eax
10004130:	53                   	push   ebx
10004131:	e8 fc ff ff ff       	call   10004132 <NIDesktop::handleMouse(int, int, int, int)+0x202>	10004132: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004136:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000413a:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	1000413c: R_386_32	movingWin
10004140:	83 c4 14             	add    esp,0x14
10004143:	2b 05 d0 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad0	10004145: R_386_32	.bss
10004149:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
1000414c:	55                   	push   ebp
1000414d:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004151:	52                   	push   edx
10004152:	50                   	push   eax
10004153:	48                   	dec    eax
10004154:	50                   	push   eax
10004155:	53                   	push   ebx
10004156:	e8 fc ff ff ff       	call   10004157 <NIDesktop::handleMouse(int, int, int, int)+0x227>	10004157: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000415b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000415e:	83 c4 18             	add    esp,0x18
10004161:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004167:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004169:	6a 00                	push   0x0
1000416b:	6a 01                	push   0x1
1000416d:	57                   	push   edi
1000416e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004171:	2b 05 d0 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad0	10004173: R_386_32	.bss
10004177:	50                   	push   eax
10004178:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000417c:	52                   	push   edx
1000417d:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004180:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004183:	83 c4 18             	add    esp,0x18
10004186:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000418c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000418e:	6a 00                	push   0x0
10004190:	6a 01                	push   0x1
10004192:	57                   	push   edi
10004193:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004195: R_386_32	movingWin
10004199:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000419c:	2b 05 d0 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad0	1000419e: R_386_32	.bss
100041a2:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
100041a5:	48                   	dec    eax
100041a6:	50                   	push   eax
100041a7:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100041ab:	52                   	push   edx
100041ac:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100041af:	83 c4 20             	add    esp,0x20
100041b2:	85 f6                	test   esi,esi
100041b4:	0f 84 3e 01 00 00    	je     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100041ba:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
100041bf:	0f 84 33 01 00 00    	je     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100041c5:	8b 0d d8 0a 04 10    	mov    ecx,DWORD PTR ds:0x10040ad8	100041c7: R_386_32	.bss
100041cb:	83 e1 01             	and    ecx,0x1
100041ce:	0f 85 e7 00 00 00    	jne    100042bb <NIDesktop::handleMouse(int, int, int, int)+0x38b>
100041d4:	a1 00 00 00 00       	mov    eax,ds:0x0	100041d5: R_386_32	milliTenthsSinceBoot
100041d9:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100041db: R_386_32	milliTenthsSinceBoot
100041df:	2b 05 c8 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ac8	100041e1: R_386_32	.bss
100041e5:	bf b7 0b 00 00       	mov    edi,0xbb7
100041ea:	1b 15 cc 0a 04 10    	sbb    edx,DWORD PTR ds:0x10040acc	100041ec: R_386_32	.bss
100041f0:	39 c7                	cmp    edi,eax
100041f2:	19 d1                	sbb    ecx,edx
100041f4:	0f 82 95 00 00 00    	jb     1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041fa:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100041fd:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004200:	29 d0                	sub    eax,edx
10004202:	83 f8 18             	cmp    eax,0x18
10004205:	0f 8f 84 00 00 00    	jg     1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
1000420b:	f6 46 3c 01          	test   BYTE PTR [esi+0x3c],0x1
1000420f:	75 7e                	jne    1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
10004211:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004215:	74 26                	je     1000423d <NIDesktop::handleMouse(int, int, int, int)+0x30d>
10004217:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
1000421a:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
1000421d:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004220:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
10004223:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
10004226:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
10004229:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
1000422c:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
1000422f:	57                   	push   edi
10004230:	57                   	push   edi
10004231:	56                   	push   esi
10004232:	53                   	push   ebx
10004233:	e8 fc ff ff ff       	call   10004234 <NIDesktop::handleMouse(int, int, int, int)+0x304>	10004234: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
10004238:	83 c4 10             	add    esp,0x10
1000423b:	eb 3b                	jmp    10004278 <NIDesktop::handleMouse(int, int, int, int)+0x348>
1000423d:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004240:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
10004247:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
1000424a:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004251:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004254:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004257:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000425a:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
1000425d:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004260:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004263:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
10004269:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000426c:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000426f:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
10004275:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004278:	83 ec 0c             	sub    esp,0xc
1000427b:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
1000427f:	56                   	push   esi
10004280:	e8 fc ff ff ff       	call   10004281 <NIDesktop::handleMouse(int, int, int, int)+0x351>	10004281: R_386_PC32	NIWindow::rerender()
10004285:	89 1c 24             	mov    DWORD PTR [esp],ebx
10004288:	e8 fc ff ff ff       	call   10004289 <NIDesktop::handleMouse(int, int, int, int)+0x359>	10004289: R_386_PC32	NIDesktop::completeRefresh()
1000428d:	eb 11                	jmp    100042a0 <NIDesktop::handleMouse(int, int, int, int)+0x370>
1000428f:	8b 03                	mov    eax,DWORD PTR [ebx]
10004291:	8b 00                	mov    eax,DWORD PTR [eax]
10004293:	39 30                	cmp    DWORD PTR [eax],esi
10004295:	74 0c                	je     100042a3 <NIDesktop::handleMouse(int, int, int, int)+0x373>
10004297:	51                   	push   ecx
10004298:	51                   	push   ecx
10004299:	56                   	push   esi
1000429a:	53                   	push   ebx
1000429b:	e8 fc ff ff ff       	call   1000429c <NIDesktop::handleMouse(int, int, int, int)+0x36c>	1000429c: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
100042a0:	83 c4 10             	add    esp,0x10
100042a3:	a1 00 00 00 00       	mov    eax,ds:0x0	100042a4: R_386_32	milliTenthsSinceBoot
100042a8:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100042aa: R_386_32	milliTenthsSinceBoot
100042ae:	a3 c8 0a 04 10       	mov    ds:0x10040ac8,eax	100042af: R_386_32	.bss
100042b3:	89 15 cc 0a 04 10    	mov    DWORD PTR ds:0x10040acc,edx	100042b5: R_386_32	.bss
100042b9:	eb 3d                	jmp    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042bb:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100042bd: R_386_32	movingWin
100042c2:	75 34                	jne    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042c4:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100042c7:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
100042ca:	83 f8 18             	cmp    eax,0x18
100042cd:	7f 29                	jg     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042cf:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100042d3:	75 23                	jne    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042d5:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100042d8:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100042da: R_386_32	movingWin
100042de:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
100042e1:	a3 d0 0a 04 10       	mov    ds:0x10040ad0,eax	100042e2: R_386_32	.bss
100042e6:	89 15 d4 0a 04 10    	mov    DWORD PTR ds:0x10040ad4,edx	100042e8: R_386_32	.bss
100042ec:	52                   	push   edx
100042ed:	52                   	push   edx
100042ee:	56                   	push   esi
100042ef:	53                   	push   ebx
100042f0:	e8 fc ff ff ff       	call   100042f1 <NIDesktop::handleMouse(int, int, int, int)+0x3c1>	100042f1: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100042f5:	83 c4 10             	add    esp,0x10
100042f8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100042fb:	83 ec 0c             	sub    esp,0xc
100042fe:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004304:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004306:	6a 00                	push   0x0
10004308:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000430b:	05 00 00 00 00       	add    eax,0x0	1000430c: R_386_32	___mouse_data
10004310:	50                   	push   eax
10004311:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10004314:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004317:	52                   	push   edx
10004318:	ff 51 30             	call   DWORD PTR [ecx+0x30]
1000431b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000431f:	a3 d8 0a 04 10       	mov    ds:0x10040ad8,eax	10004320: R_386_32	.bss
10004324:	83 c4 3c             	add    esp,0x3c
10004327:	5b                   	pop    ebx
10004328:	5e                   	pop    esi
10004329:	5f                   	pop    edi
1000432a:	5d                   	pop    ebp
1000432b:	c3                   	ret    
1000432c:	89 7a 18             	mov    DWORD PTR [edx+0x18],edi
1000432f:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004331: R_386_32	movingWin
10004339:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000433c:	2b 05 d0 0a 04 10    	sub    eax,DWORD PTR ds:0x10040ad0	1000433e: R_386_32	.bss
10004342:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
10004345:	50                   	push   eax
10004346:	50                   	push   eax
10004347:	52                   	push   edx
10004348:	53                   	push   ebx
10004349:	e8 fc ff ff ff       	call   1000434a <NIDesktop::handleMouse(int, int, int, int)+0x41a>	1000434a: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000434e:	83 c4 10             	add    esp,0x10
10004351:	e9 5c fe ff ff       	jmp    100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>

10004356 <clipdrawHandleMouse(int, int, int, int)>:
10004356:	83 ec 18             	sub    esp,0x18
10004359:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000435d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004361:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004365:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004369:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000436b: R_386_32	mouseDesktop
1000436f:	e8 fc ff ff ff       	call   10004370 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004370: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004374:	83 c4 2c             	add    esp,0x2c
10004377:	c3                   	ret    

10004378 <drawVGAChar(int, int, int)>:
10004378:	55                   	push   ebp
10004379:	57                   	push   edi
1000437a:	56                   	push   esi
1000437b:	53                   	push   ebx
1000437c:	31 db                	xor    ebx,ebx
1000437e:	83 ec 1c             	sub    esp,0x1c
10004381:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10004385:	c1 e0 04             	shl    eax,0x4
10004388:	89 04 24             	mov    DWORD PTR [esp],eax
1000438b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000438f:	c1 e0 04             	shl    eax,0x4
10004392:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004396:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000439a:	c1 e0 03             	shl    eax,0x3
1000439d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100043a1:	8b 04 24             	mov    eax,DWORD PTR [esp]
100043a4:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
100043a8:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	100043ab: R_386_32	cp
100043af:	8d 3c 19             	lea    edi,[ecx+ebx*1]
100043b2:	31 f6                	xor    esi,esi
100043b4:	84 c0                	test   al,al
100043b6:	79 22                	jns    100043da <drawVGAChar(int, int, int)+0x62>
100043b8:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
100043bc:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043be: R_386_32	screen
100043c2:	8b 0a                	mov    ecx,DWORD PTR [edx]
100043c4:	6a 00                	push   0x0
100043c6:	57                   	push   edi
100043c7:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100043cb:	8d 2c 06             	lea    ebp,[esi+eax*1]
100043ce:	55                   	push   ebp
100043cf:	52                   	push   edx
100043d0:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100043d3:	83 c4 10             	add    esp,0x10
100043d6:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100043da:	d1 e0                	shl    eax,1
100043dc:	46                   	inc    esi
100043dd:	83 fe 08             	cmp    esi,0x8
100043e0:	75 d2                	jne    100043b4 <drawVGAChar(int, int, int)+0x3c>
100043e2:	43                   	inc    ebx
100043e3:	83 fb 10             	cmp    ebx,0x10
100043e6:	75 b9                	jne    100043a1 <drawVGAChar(int, int, int)+0x29>
100043e8:	83 c4 1c             	add    esp,0x1c
100043eb:	5b                   	pop    ebx
100043ec:	5e                   	pop    esi
100043ed:	5f                   	pop    edi
100043ee:	5d                   	pop    ebp
100043ef:	c3                   	ret    

100043f0 <monikaBsod(char*)>:
100043f0:	55                   	push   ebp
100043f1:	57                   	push   edi
100043f2:	31 ff                	xor    edi,edi
100043f4:	56                   	push   esi
100043f5:	53                   	push   ebx
100043f6:	31 db                	xor    ebx,ebx
100043f8:	83 ec 24             	sub    esp,0x24
100043fb:	a1 00 00 00 00       	mov    eax,ds:0x0	100043fc: R_386_32	screen
10004400:	8b 10                	mov    edx,DWORD PTR [eax]
10004402:	68 ff ff ff 00       	push   0xffffff
10004407:	50                   	push   eax
10004408:	ff 52 40             	call   DWORD PTR [edx+0x40]
1000440b:	83 c4 10             	add    esp,0x10
1000440e:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	10004410: R_386_32	justMonika
10004414:	8d 43 01             	lea    eax,[ebx+0x1]
10004417:	84 c9                	test   cl,cl
10004419:	79 0e                	jns    10004429 <monikaBsod(char*)+0x39>
1000441b:	8d 51 80             	lea    edx,[ecx-0x80]
1000441e:	83 c3 02             	add    ebx,0x2
10004421:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	10004423: R_386_32	justMonika
10004427:	eb 04                	jmp    1000442d <monikaBsod(char*)+0x3d>
10004429:	89 c3                	mov    ebx,eax
1000442b:	b2 01                	mov    dl,0x1
1000442d:	0f b6 c1             	movzx  eax,cl
10004430:	83 e1 03             	and    ecx,0x3
10004433:	89 c6                	mov    esi,eax
10004435:	6b c9 55             	imul   ecx,ecx,0x55
10004438:	c1 fe 05             	sar    esi,0x5
1000443b:	c1 f8 02             	sar    eax,0x2
1000443e:	83 e6 03             	and    esi,0x3
10004441:	83 e0 07             	and    eax,0x7
10004444:	6b f6 55             	imul   esi,esi,0x55
10004447:	6b c0 24             	imul   eax,eax,0x24
1000444a:	c1 e6 10             	shl    esi,0x10
1000444d:	c1 e0 08             	shl    eax,0x8
10004450:	09 f0                	or     eax,esi
10004452:	31 f6                	xor    esi,esi
10004454:	09 c8                	or     eax,ecx
10004456:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000445a:	0f b6 c2             	movzx  eax,dl
1000445d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004461:	8d 04 37             	lea    eax,[edi+esi*1]
10004464:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10004468:	7f 10                	jg     1000447a <monikaBsod(char*)+0x8a>
1000446a:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
1000446e:	81 ff ff af 04 00    	cmp    edi,0x4afff
10004474:	7e 98                	jle    1000440e <monikaBsod(char*)+0x1e>
10004476:	31 db                	xor    ebx,ebx
10004478:	eb 25                	jmp    1000449f <monikaBsod(char*)+0xaf>
1000447a:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000447c: R_386_32	screen
10004480:	b9 80 02 00 00       	mov    ecx,0x280
10004485:	8b 2a                	mov    ebp,DWORD PTR [edx]
10004487:	46                   	inc    esi
10004488:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000448c:	99                   	cdq    
1000448d:	f7 f9                	idiv   ecx
1000448f:	50                   	push   eax
10004490:	52                   	push   edx
10004491:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004493: R_386_32	screen
10004497:	ff 55 24             	call   DWORD PTR [ebp+0x24]
1000449a:	83 c4 10             	add    esp,0x10
1000449d:	eb c2                	jmp    10004461 <monikaBsod(char*)+0x71>
1000449f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100044a3:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
100044a7:	84 c0                	test   al,al
100044a9:	74 1d                	je     100044c8 <monikaBsod(char*)+0xd8>
100044ab:	b9 19 00 00 00       	mov    ecx,0x19
100044b0:	52                   	push   edx
100044b1:	50                   	push   eax
100044b2:	89 d8                	mov    eax,ebx
100044b4:	43                   	inc    ebx
100044b5:	99                   	cdq    
100044b6:	f7 f9                	idiv   ecx
100044b8:	83 c0 0a             	add    eax,0xa
100044bb:	42                   	inc    edx
100044bc:	50                   	push   eax
100044bd:	52                   	push   edx
100044be:	e8 fc ff ff ff       	call   100044bf <monikaBsod(char*)+0xcf>	100044bf: R_386_PC32	drawVGAChar(int, int, int)
100044c3:	83 c4 10             	add    esp,0x10
100044c6:	eb d7                	jmp    1000449f <monikaBsod(char*)+0xaf>
100044c8:	f4                   	hlt    
100044c9:	eb fd                	jmp    100044c8 <monikaBsod(char*)+0xd8>

100044cb <NiInstallSysHooks()>:
100044cb:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100044cd: R_386_32	guiPanicHandler
	100044d1: R_386_32	monikaBsod(char*)
100044d5:	c7 05 bc 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xbc,0x0	100044d7: R_386_32	systemCallHandlers
	100044db: R_386_32	NiSystemCallHandler(regs*)
100044df:	c3                   	ret    

100044e0 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)>:
100044e0:	55                   	push   ebp
100044e1:	31 ed                	xor    ebp,ebp
100044e3:	57                   	push   edi
100044e4:	56                   	push   esi
100044e5:	53                   	push   ebx
100044e6:	83 ec 28             	sub    esp,0x28
100044e9:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100044ed:	6a 40                	push   0x40
100044ef:	e8 fc ff ff ff       	call   100044f0 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x10>	100044f0: R_386_PC32	malloc
100044f4:	89 c6                	mov    esi,eax
100044f6:	58                   	pop    eax
100044f7:	5a                   	pop    edx
100044f8:	ff b7 b0 00 00 00    	push   DWORD PTR [edi+0xb0]
100044fe:	ff b7 ac 00 00 00    	push   DWORD PTR [edi+0xac]
10004504:	ff b7 a8 00 00 00    	push   DWORD PTR [edi+0xa8]
1000450a:	ff b7 a4 00 00 00    	push   DWORD PTR [edi+0xa4]
10004510:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004512: R_386_32	ctxt
10004516:	56                   	push   esi
10004517:	e8 fc ff ff ff       	call   10004518 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x38>	10004518: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000451c:	83 c4 18             	add    esp,0x18
1000451f:	56                   	push   esi
10004520:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004522: R_386_32	desktop
10004526:	e8 fc ff ff ff       	call   10004527 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x47>	10004527: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000452b:	59                   	pop    ecx
1000452c:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000452e: R_386_32	desktop
10004532:	e8 fc ff ff ff       	call   10004533 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x53>	10004533: R_386_PC32	NIDesktop::completeRefresh()
10004537:	83 c4 10             	add    esp,0x10
1000453a:	39 6e 24             	cmp    DWORD PTR [esi+0x24],ebp
1000453d:	7e 36                	jle    10004575 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x95>
1000453f:	31 db                	xor    ebx,ebx
10004541:	83 fd 19             	cmp    ebp,0x19
10004544:	0f 9e c3             	setle  bl
10004547:	31 c0                	xor    eax,eax
10004549:	4b                   	dec    ebx
1000454a:	81 e3 d5 d4 d4 ff    	and    ebx,0xffd4d4d5
10004550:	81 c3 ff ff ff 00    	add    ebx,0xffffff
10004556:	39 46 20             	cmp    DWORD PTR [esi+0x20],eax
10004559:	7e 17                	jle    10004572 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x92>
1000455b:	53                   	push   ebx
1000455c:	55                   	push   ebp
1000455d:	50                   	push   eax
1000455e:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10004562:	56                   	push   esi
10004563:	e8 fc ff ff ff       	call   10004564 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x84>	10004564: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10004568:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000456c:	83 c4 10             	add    esp,0x10
1000456f:	40                   	inc    eax
10004570:	eb e4                	jmp    10004556 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x76>
10004572:	45                   	inc    ebp
10004573:	eb c5                	jmp    1000453a <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x5a>
10004575:	89 b7 a0 00 00 00    	mov    DWORD PTR [edi+0xa0],esi
1000457b:	31 c0                	xor    eax,eax
1000457d:	83 c4 1c             	add    esp,0x1c
10004580:	31 d2                	xor    edx,edx
10004582:	5b                   	pop    ebx
10004583:	5e                   	pop    esi
10004584:	5f                   	pop    edi
10004585:	5d                   	pop    ebp
10004586:	c3                   	ret    

10004587 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)>:
10004587:	55                   	push   ebp
10004588:	31 c0                	xor    eax,eax
1000458a:	57                   	push   edi
1000458b:	56                   	push   esi
1000458c:	53                   	push   ebx
1000458d:	31 db                	xor    ebx,ebx
1000458f:	83 ec 0c             	sub    esp,0xc
10004592:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10004596:	8b aa a0 00 00 00    	mov    ebp,DWORD PTR [edx+0xa0]
1000459c:	39 5d 24             	cmp    DWORD PTR [ebp+0x24],ebx
1000459f:	7e 2e                	jle    100045cf <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x48>
100045a1:	89 c6                	mov    esi,eax
100045a3:	31 ff                	xor    edi,edi
100045a5:	89 f0                	mov    eax,esi
100045a7:	39 7d 20             	cmp    DWORD PTR [ebp+0x20],edi
100045aa:	7e 20                	jle    100045cc <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x45>
100045ac:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
100045b0:	8b 82 b8 00 00 00    	mov    eax,DWORD PTR [edx+0xb8]
100045b6:	ff 34 b0             	push   DWORD PTR [eax+esi*4]
100045b9:	46                   	inc    esi
100045ba:	53                   	push   ebx
100045bb:	57                   	push   edi
100045bc:	47                   	inc    edi
100045bd:	55                   	push   ebp
100045be:	e8 fc ff ff ff       	call   100045bf <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x38>	100045bf: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100045c3:	83 c4 10             	add    esp,0x10
100045c6:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100045ca:	eb d9                	jmp    100045a5 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x1e>
100045cc:	43                   	inc    ebx
100045cd:	eb cd                	jmp    1000459c <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x15>
100045cf:	83 c4 0c             	add    esp,0xc
100045d2:	31 c0                	xor    eax,eax
100045d4:	5b                   	pop    ebx
100045d5:	31 d2                	xor    edx,edx
100045d7:	5e                   	pop    esi
100045d8:	5f                   	pop    edi
100045d9:	5d                   	pop    ebp
100045da:	c3                   	ret    

100045db <NiSystemCallHandler(regs*)>:
100045db:	83 ec 0c             	sub    esp,0xc
100045de:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100045e2:	8b 50 20             	mov    edx,DWORD PTR [eax+0x20]
100045e5:	85 d2                	test   edx,edx
100045e7:	74 0c                	je     100045f5 <NiSystemCallHandler(regs*)+0x1a>
100045e9:	83 fa 04             	cmp    edx,0x4
100045ec:	74 16                	je     10004604 <NiSystemCallHandler(regs*)+0x29>
100045ee:	83 c8 ff             	or     eax,0xffffffff
100045f1:	89 c2                	mov    edx,eax
100045f3:	eb 1f                	jmp    10004614 <NiSystemCallHandler(regs*)+0x39>
100045f5:	51                   	push   ecx
100045f6:	51                   	push   ecx
100045f7:	ff 70 24             	push   DWORD PTR [eax+0x24]
100045fa:	ff 70 28             	push   DWORD PTR [eax+0x28]
100045fd:	e8 fc ff ff ff       	call   100045fe <NiSystemCallHandler(regs*)+0x23>	100045fe: R_386_PC32	NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)
10004602:	eb 0d                	jmp    10004611 <NiSystemCallHandler(regs*)+0x36>
10004604:	52                   	push   edx
10004605:	52                   	push   edx
10004606:	ff 70 24             	push   DWORD PTR [eax+0x24]
10004609:	ff 70 28             	push   DWORD PTR [eax+0x28]
1000460c:	e8 fc ff ff ff       	call   1000460d <NiSystemCallHandler(regs*)+0x32>	1000460d: R_386_PC32	NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)
10004611:	83 c4 10             	add    esp,0x10
10004614:	83 c4 0c             	add    esp,0xc
10004617:	c3                   	ret    

10004618 <NIWindow::invalidate()>:
10004618:	53                   	push   ebx
10004619:	83 ec 08             	sub    esp,0x8
1000461c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004620:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004624:	74 1d                	je     10004643 <NIWindow::invalidate()+0x2b>
10004626:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
1000462a:	74 17                	je     10004643 <NIWindow::invalidate()+0x2b>
1000462c:	83 ec 0c             	sub    esp,0xc
1000462f:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004632:	e8 fc ff ff ff       	call   10004633 <NIWindow::invalidate()+0x1b>	10004633: R_386_PC32	free
10004637:	59                   	pop    ecx
10004638:	ff 73 14             	push   DWORD PTR [ebx+0x14]
1000463b:	e8 fc ff ff ff       	call   1000463c <NIWindow::invalidate()+0x24>	1000463c: R_386_PC32	free
10004640:	83 c4 10             	add    esp,0x10
10004643:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
1000464a:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10004651:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
10004655:	83 c4 08             	add    esp,0x8
10004658:	5b                   	pop    ebx
10004659:	c3                   	ret    

1000465a <NIWindow::rerender()>:
1000465a:	57                   	push   edi
1000465b:	56                   	push   esi
1000465c:	53                   	push   ebx
1000465d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004661:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004665:	74 0c                	je     10004673 <NIWindow::rerender()+0x19>
10004667:	83 ec 0c             	sub    esp,0xc
1000466a:	53                   	push   ebx
1000466b:	e8 fc ff ff ff       	call   1000466c <NIWindow::rerender()+0x12>	1000466c: R_386_PC32	NIWindow::invalidate()
10004670:	83 c4 10             	add    esp,0x10
10004673:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10004676:	83 ec 0c             	sub    esp,0xc
10004679:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
1000467c:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004683:	50                   	push   eax
10004684:	e8 fc ff ff ff       	call   10004685 <NIWindow::rerender()+0x2b>	10004685: R_386_PC32	malloc
10004689:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
1000468d:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004690:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004694:	89 34 24             	mov    DWORD PTR [esp],esi
10004697:	e8 fc ff ff ff       	call   10004698 <NIWindow::rerender()+0x3e>	10004698: R_386_PC32	malloc
1000469c:	83 c4 10             	add    esp,0x10
1000469f:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
100046a2:	31 c0                	xor    eax,eax
100046a4:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100046a7:	7e 6a                	jle    10004713 <NIWindow::rerender()+0xb9>
100046a9:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100046b0:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
100046b3:	01 d6                	add    esi,edx
100046b5:	83 f8 06             	cmp    eax,0x6
100046b8:	7f 1b                	jg     100046d5 <NIWindow::rerender()+0x7b>
100046ba:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	100046bd: R_386_32	curveLookup7
100046c1:	66 89 0e             	mov    WORD PTR [esi],cx
100046c4:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100046c7:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	100046ca: R_386_32	curveLookup7
100046ce:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
100046d3:	eb 3b                	jmp    10004710 <NIWindow::rerender()+0xb6>
100046d5:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
100046d8:	8d 79 fa             	lea    edi,[ecx-0x6]
100046db:	39 c7                	cmp    edi,eax
100046dd:	7f 22                	jg     10004701 <NIWindow::rerender()+0xa7>
100046df:	29 c1                	sub    ecx,eax
100046e1:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	100046e4: R_386_32	curveLookup7
100046e8:	66 89 0e             	mov    WORD PTR [esi],cx
100046eb:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
100046ee:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
100046f1:	29 c1                	sub    ecx,eax
100046f3:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	100046f6: R_386_32	curveLookup7
100046fa:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
100046ff:	eb 0f                	jmp    10004710 <NIWindow::rerender()+0xb6>
10004701:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
10004706:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004709:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
10004710:	40                   	inc    eax
10004711:	eb 91                	jmp    100046a4 <NIWindow::rerender()+0x4a>
10004713:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
10004717:	5b                   	pop    ebx
10004718:	5e                   	pop    esi
10004719:	5f                   	pop    edi
1000471a:	c3                   	ret    
1000471b:	90                   	nop

1000471c <NIWindow::changeContext(NIContext*, int, int)>:
1000471c:	55                   	push   ebp
1000471d:	57                   	push   edi
1000471e:	56                   	push   esi
1000471f:	53                   	push   ebx
10004720:	83 ec 18             	sub    esp,0x18
10004723:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004727:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
1000472b:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000472f:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10004733:	53                   	push   ebx
10004734:	e8 fc ff ff ff       	call   10004735 <NIWindow::changeContext(NIContext*, int, int)+0x19>	10004735: R_386_PC32	NIWindow::invalidate()
10004739:	89 33                	mov    DWORD PTR [ebx],esi
1000473b:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
1000473e:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
10004741:	83 c4 10             	add    esp,0x10
10004744:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
1000474a:	83 f8 08             	cmp    eax,0x8
1000474d:	7f 09                	jg     10004758 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
1000474f:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10004756:	eb 15                	jmp    1000476d <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004758:	83 f8 10             	cmp    eax,0x10
1000475b:	7f 09                	jg     10004766 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
1000475d:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
10004764:	eb 07                	jmp    1000476d <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004766:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
1000476d:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10004771:	83 c4 0c             	add    esp,0xc
10004774:	5b                   	pop    ebx
10004775:	5e                   	pop    esi
10004776:	5f                   	pop    edi
10004777:	5d                   	pop    ebp
10004778:	e9 dd fe ff ff       	jmp    1000465a <NIWindow::rerender()>
1000477d:	90                   	nop

1000477e <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
1000477e:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004782:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10004786:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
1000478a:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
1000478d:	c7 40 3c 00 00 00 00 	mov    DWORD PTR [eax+0x3c],0x0
10004794:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004798:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
1000479c:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
1000479f:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
100047a6:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
100047ad:	e9 6a ff ff ff       	jmp    1000471c <NIWindow::changeContext(NIContext*, int, int)>

100047b2 <NIWindow::request()>:
100047b2:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100047b6:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
100047ba:	75 05                	jne    100047c1 <NIWindow::request()+0xf>
100047bc:	e9 99 fe ff ff       	jmp    1000465a <NIWindow::rerender()>
100047c1:	c3                   	ret    

100047c2 <NIWindow::SHADOW_TEST()>:
100047c2:	55                   	push   ebp
100047c3:	57                   	push   edi
100047c4:	56                   	push   esi
100047c5:	53                   	push   ebx
100047c6:	83 ec 28             	sub    esp,0x28
100047c9:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
100047cd:	53                   	push   ebx
100047ce:	e8 fc ff ff ff       	call   100047cf <NIWindow::SHADOW_TEST()+0xd>	100047cf: R_386_PC32	NIWindow::request()
100047d3:	83 c4 10             	add    esp,0x10
100047d6:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100047d9:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100047dc:	74 10                	je     100047ee <NIWindow::SHADOW_TEST()+0x2c>
100047de:	83 ec 0c             	sub    esp,0xc
100047e1:	68 bc cc 00 10       	push   0x1000ccbc	100047e2: R_386_32	.text
100047e6:	e8 fc ff ff ff       	call   100047e7 <NIWindow::SHADOW_TEST()+0x25>	100047e7: R_386_PC32	KePanic(char const*)
100047eb:	83 c4 10             	add    esp,0x10
100047ee:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100047f2:	0f 85 28 01 00 00    	jne    10004920 <NIWindow::SHADOW_TEST()+0x15e>
100047f8:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
10004800:	31 ff                	xor    edi,edi
10004802:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
10004805:	0f 8e 15 01 00 00    	jle    10004920 <NIWindow::SHADOW_TEST()+0x15e>
1000480b:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000480e:	8d 04 b8             	lea    eax,[eax+edi*4]
10004811:	0f b7 30             	movzx  esi,WORD PTR [eax]
10004814:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10004818:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
1000481c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004820:	89 34 24             	mov    DWORD PTR [esp],esi
10004823:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004826:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004829:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
1000482d:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
10004830:	0f 8e d4 00 00 00    	jle    1000490a <NIWindow::SHADOW_TEST()+0x148>
10004836:	83 ff 05             	cmp    edi,0x5
10004839:	7e 1f                	jle    1000485a <NIWindow::SHADOW_TEST()+0x98>
1000483b:	8d 41 fb             	lea    eax,[ecx-0x5]
1000483e:	39 f8                	cmp    eax,edi
10004840:	7e 18                	jle    1000485a <NIWindow::SHADOW_TEST()+0x98>
10004842:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004846:	83 c0 05             	add    eax,0x5
10004849:	3b 04 24             	cmp    eax,DWORD PTR [esp]
1000484c:	7d 0c                	jge    1000485a <NIWindow::SHADOW_TEST()+0x98>
1000484e:	8d 45 fb             	lea    eax,[ebp-0x5]
10004851:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004854:	0f 8f a8 00 00 00    	jg     10004902 <NIWindow::SHADOW_TEST()+0x140>
1000485a:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
1000485e:	be ea 01 00 00       	mov    esi,0x1ea
10004863:	29 f9                	sub    ecx,edi
10004865:	89 f0                	mov    eax,esi
10004867:	83 c1 04             	add    ecx,0x4
1000486a:	99                   	cdq    
1000486b:	f7 f9                	idiv   ecx
1000486d:	89 c1                	mov    ecx,eax
1000486f:	89 f0                	mov    eax,esi
10004871:	99                   	cdq    
10004872:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10004876:	83 f8 0a             	cmp    eax,0xa
10004879:	7d 05                	jge    10004880 <NIWindow::SHADOW_TEST()+0xbe>
1000487b:	b8 0a 00 00 00       	mov    eax,0xa
10004880:	39 c1                	cmp    ecx,eax
10004882:	7d 02                	jge    10004886 <NIWindow::SHADOW_TEST()+0xc4>
10004884:	89 c1                	mov    ecx,eax
10004886:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10004889:	b8 ea 01 00 00       	mov    eax,0x1ea
1000488e:	83 c5 04             	add    ebp,0x4
10004891:	99                   	cdq    
10004892:	f7 fd                	idiv   ebp
10004894:	89 c6                	mov    esi,eax
10004896:	83 f8 0a             	cmp    eax,0xa
10004899:	7d 05                	jge    100048a0 <NIWindow::SHADOW_TEST()+0xde>
1000489b:	be 0a 00 00 00       	mov    esi,0xa
100048a0:	8b 04 24             	mov    eax,DWORD PTR [esp]
100048a3:	8d 68 05             	lea    ebp,[eax+0x5]
100048a6:	b8 ea 01 00 00       	mov    eax,0x1ea
100048ab:	99                   	cdq    
100048ac:	f7 fd                	idiv   ebp
100048ae:	39 c6                	cmp    esi,eax
100048b0:	7d 02                	jge    100048b4 <NIWindow::SHADOW_TEST()+0xf2>
100048b2:	89 c6                	mov    esi,eax
100048b4:	89 f0                	mov    eax,esi
100048b6:	89 ca                	mov    edx,ecx
100048b8:	0f af c6             	imul   eax,esi
100048bb:	0f af d1             	imul   edx,ecx
100048be:	0f af f1             	imul   esi,ecx
100048c1:	01 d0                	add    eax,edx
100048c3:	8d 04 c6             	lea    eax,[esi+eax*8]
100048c6:	c1 f8 08             	sar    eax,0x8
100048c9:	83 f8 66             	cmp    eax,0x66
100048cc:	7e 46                	jle    10004914 <NIWindow::SHADOW_TEST()+0x152>
100048ce:	8d 50 9a             	lea    edx,[eax-0x66]
100048d1:	d1 fa                	sar    edx,1
100048d3:	8d 42 66             	lea    eax,[edx+0x66]
100048d6:	83 f8 73             	cmp    eax,0x73
100048d9:	7e 39                	jle    10004914 <NIWindow::SHADOW_TEST()+0x152>
100048db:	83 ea 0d             	sub    edx,0xd
100048de:	c1 fa 02             	sar    edx,0x2
100048e1:	8d 42 73             	lea    eax,[edx+0x73]
100048e4:	83 f8 7f             	cmp    eax,0x7f
100048e7:	7f 19                	jg     10004902 <NIWindow::SHADOW_TEST()+0x140>
100048e9:	50                   	push   eax
100048ea:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100048ed:	01 f8                	add    eax,edi
100048ef:	50                   	push   eax
100048f0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100048f4:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
100048f7:	50                   	push   eax
100048f8:	ff 33                	push   DWORD PTR [ebx]
100048fa:	e8 fc ff ff ff       	call   100048fb <NIWindow::SHADOW_TEST()+0x139>	100048fb: R_386_PC32	NIContext::drvDarken4(int, int, int)
100048ff:	83 c4 10             	add    esp,0x10
10004902:	ff 04 24             	inc    DWORD PTR [esp]
10004905:	e9 19 ff ff ff       	jmp    10004823 <NIWindow::SHADOW_TEST()+0x61>
1000490a:	47                   	inc    edi
1000490b:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000490f:	e9 ee fe ff ff       	jmp    10004802 <NIWindow::SHADOW_TEST()+0x40>
10004914:	83 f8 0a             	cmp    eax,0xa
10004917:	7d d0                	jge    100048e9 <NIWindow::SHADOW_TEST()+0x127>
10004919:	b8 0a 00 00 00       	mov    eax,0xa
1000491e:	eb c9                	jmp    100048e9 <NIWindow::SHADOW_TEST()+0x127>
10004920:	83 c4 1c             	add    esp,0x1c
10004923:	5b                   	pop    ebx
10004924:	5e                   	pop    esi
10004925:	5f                   	pop    edi
10004926:	5d                   	pop    ebp
10004927:	c3                   	ret    

10004928 <NIWindow::realdraw()>:
10004928:	55                   	push   ebp
10004929:	57                   	push   edi
1000492a:	56                   	push   esi
1000492b:	53                   	push   ebx
1000492c:	83 ec 18             	sub    esp,0x18
1000492f:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004933:	53                   	push   ebx
10004934:	e8 fc ff ff ff       	call   10004935 <NIWindow::realdraw()+0xd>	10004935: R_386_PC32	NIWindow::request()
10004939:	83 c4 10             	add    esp,0x10
1000493c:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
1000493f:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004942:	74 10                	je     10004954 <NIWindow::realdraw()+0x2c>
10004944:	83 ec 0c             	sub    esp,0xc
10004947:	68 bc cc 00 10       	push   0x1000ccbc	10004948: R_386_32	.text
1000494c:	e8 fc ff ff ff       	call   1000494d <NIWindow::realdraw()+0x25>	1000494d: R_386_PC32	KePanic(char const*)
10004951:	83 c4 10             	add    esp,0x10
10004954:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004958:	75 46                	jne    100049a0 <NIWindow::realdraw()+0x78>
1000495a:	31 f6                	xor    esi,esi
1000495c:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
1000495f:	7e 3f                	jle    100049a0 <NIWindow::realdraw()+0x78>
10004961:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004964:	8d 04 b0             	lea    eax,[eax+esi*4]
10004967:	0f b7 28             	movzx  ebp,WORD PTR [eax]
1000496a:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
1000496e:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10004971:	89 c2                	mov    edx,eax
10004973:	29 fa                	sub    edx,edi
10004975:	39 ea                	cmp    edx,ebp
10004977:	7e 24                	jle    1000499d <NIWindow::realdraw()+0x75>
10004979:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000497c:	0f af c6             	imul   eax,esi
1000497f:	01 e8                	add    eax,ebp
10004981:	ff 34 82             	push   DWORD PTR [edx+eax*4]
10004984:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004987:	01 f0                	add    eax,esi
10004989:	50                   	push   eax
1000498a:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000498d:	01 e8                	add    eax,ebp
1000498f:	45                   	inc    ebp
10004990:	50                   	push   eax
10004991:	ff 33                	push   DWORD PTR [ebx]
10004993:	e8 fc ff ff ff       	call   10004994 <NIWindow::realdraw()+0x6c>	10004994: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004998:	83 c4 10             	add    esp,0x10
1000499b:	eb d1                	jmp    1000496e <NIWindow::realdraw()+0x46>
1000499d:	46                   	inc    esi
1000499e:	eb bc                	jmp    1000495c <NIWindow::realdraw()+0x34>
100049a0:	83 c4 0c             	add    esp,0xc
100049a3:	5b                   	pop    ebx
100049a4:	5e                   	pop    esi
100049a5:	5f                   	pop    edi
100049a6:	5d                   	pop    ebp
100049a7:	c3                   	ret    

100049a8 <NIWindow::putpixel(int, int, unsigned int)>:
100049a8:	56                   	push   esi
100049a9:	53                   	push   ebx
100049aa:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100049ae:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100049b2:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
100049b5:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
100049b9:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100049bd:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100049c1:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100049c4:	83 fe 04             	cmp    esi,0x4
100049c7:	75 05                	jne    100049ce <NIWindow::putpixel(int, int, unsigned int)+0x26>
100049c9:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
100049cc:	eb 0e                	jmp    100049dc <NIWindow::putpixel(int, int, unsigned int)+0x34>
100049ce:	83 fe 02             	cmp    esi,0x2
100049d1:	75 06                	jne    100049d9 <NIWindow::putpixel(int, int, unsigned int)+0x31>
100049d3:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
100049d7:	eb 03                	jmp    100049dc <NIWindow::putpixel(int, int, unsigned int)+0x34>
100049d9:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
100049dc:	5b                   	pop    ebx
100049dd:	5e                   	pop    esi
100049de:	c3                   	ret    

100049df <read_u32>:
100049df:	8b 00                	mov    eax,DWORD PTR [eax]
100049e1:	86 e0                	xchg   al,ah
100049e3:	c1 c0 10             	rol    eax,0x10
100049e6:	86 e0                	xchg   al,ah
100049e8:	c3                   	ret    

100049e9 <write_u32>:
100049e9:	86 f2                	xchg   dl,dh
100049eb:	c1 c2 10             	rol    edx,0x10
100049ee:	86 f2                	xchg   dl,dh
100049f0:	89 10                	mov    DWORD PTR [eax],edx
100049f2:	c3                   	ret    

100049f3 <get_sample>:
100049f3:	53                   	push   ebx
100049f4:	89 c2                	mov    edx,eax
100049f6:	8b 58 10             	mov    ebx,DWORD PTR [eax+0x10]
100049f9:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100049fc:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
100049ff:	d3 f8                	sar    eax,cl
10004a01:	23 02                	and    eax,DWORD PTR [edx]
10004a03:	2b 4a 0c             	sub    ecx,DWORD PTR [edx+0xc]
10004a06:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
10004a09:	83 f9 07             	cmp    ecx,0x7
10004a0c:	76 0a                	jbe    10004a18 <get_sample+0x25>
10004a0e:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
10004a11:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
10004a14:	43                   	inc    ebx
10004a15:	89 5a 10             	mov    DWORD PTR [edx+0x10],ebx
10004a18:	5b                   	pop    ebx
10004a19:	c3                   	ret    

10004a1a <calculate_image_size>:
10004a1a:	57                   	push   edi
10004a1b:	56                   	push   esi
10004a1c:	53                   	push   ebx
10004a1d:	85 c9                	test   ecx,ecx
10004a1f:	0f 84 00 01 00 00    	je     10004b25 <calculate_image_size+0x10b>
10004a25:	89 c7                	mov    edi,eax
10004a27:	85 c0                	test   eax,eax
10004a29:	0f 84 f6 00 00 00    	je     10004b25 <calculate_image_size+0x10b>
10004a2f:	8d 42 ff             	lea    eax,[edx-0x1]
10004a32:	bb 47 00 00 00       	mov    ebx,0x47
10004a37:	85 d0                	test   eax,edx
10004a39:	0f 85 eb 00 00 00    	jne    10004b2a <calculate_image_size+0x110>
10004a3f:	8b b7 f0 00 00 00    	mov    esi,DWORD PTR [edi+0xf0]
10004a45:	83 fa 01             	cmp    edx,0x1
10004a48:	0f 84 a4 00 00 00    	je     10004af2 <calculate_image_size+0xd8>
10004a4e:	83 fa 02             	cmp    edx,0x2
10004a51:	0f 84 a2 00 00 00    	je     10004af9 <calculate_image_size+0xdf>
10004a57:	83 fa 04             	cmp    edx,0x4
10004a5a:	0f 84 a0 00 00 00    	je     10004b00 <calculate_image_size+0xe6>
10004a60:	8d 82 00 ff ff ff    	lea    eax,[edx-0x100]
10004a66:	a9 ff fe ff ff       	test   eax,0xfffffeff
10004a6b:	75 3a                	jne    10004aa7 <calculate_image_size+0x8d>
10004a6d:	bb 50 00 00 00       	mov    ebx,0x50
10004a72:	85 f6                	test   esi,esi
10004a74:	0f 84 b0 00 00 00    	je     10004b2a <calculate_image_size+0x110>
10004a7a:	0f b6 87 f8 00 00 00 	movzx  eax,BYTE PTR [edi+0xf8]
10004a81:	0f af 87 b0 09 00 00 	imul   eax,DWORD PTR [edi+0x9b0]
10004a88:	bb 03 00 00 00       	mov    ebx,0x3
10004a8d:	f7 e6                	mul    esi
10004a8f:	0f 80 95 00 00 00    	jo     10004b2a <calculate_image_size+0x110>
10004a95:	8d 70 0f             	lea    esi,[eax+0xf]
10004a98:	83 fe 0e             	cmp    esi,0xe
10004a9b:	0f 86 89 00 00 00    	jbe    10004b2a <calculate_image_size+0x110>
10004aa1:	c1 ee 03             	shr    esi,0x3
10004aa4:	4e                   	dec    esi
10004aa5:	eb 60                	jmp    10004b07 <calculate_image_size+0xed>
10004aa7:	bb 47 00 00 00       	mov    ebx,0x47
10004aac:	83 fa 40             	cmp    edx,0x40
10004aaf:	75 14                	jne    10004ac5 <calculate_image_size+0xab>
10004ab1:	80 bf f9 00 00 00 00 	cmp    BYTE PTR [edi+0xf9],0x0
10004ab8:	75 70                	jne    10004b2a <calculate_image_size+0x110>
10004aba:	80 bf f8 00 00 00 08 	cmp    BYTE PTR [edi+0xf8],0x8
10004ac1:	76 44                	jbe    10004b07 <calculate_image_size+0xed>
10004ac3:	eb 65                	jmp    10004b2a <calculate_image_size+0x110>
10004ac5:	83 fa 10             	cmp    edx,0x10
10004ac8:	75 19                	jne    10004ae3 <calculate_image_size+0xc9>
10004aca:	80 bf f9 00 00 00 00 	cmp    BYTE PTR [edi+0xf9],0x0
10004ad1:	75 57                	jne    10004b2a <calculate_image_size+0x110>
10004ad3:	80 bf f8 00 00 00 08 	cmp    BYTE PTR [edi+0xf8],0x8
10004ada:	77 4e                	ja     10004b2a <calculate_image_size+0x110>
10004adc:	ba 02 00 00 00       	mov    edx,0x2
10004ae1:	eb 29                	jmp    10004b0c <calculate_image_size+0xf2>
10004ae3:	83 fa 20             	cmp    edx,0x20
10004ae6:	75 42                	jne    10004b2a <calculate_image_size+0x110>
10004ae8:	66 83 bf f8 00 00 00 10 	cmp    WORD PTR [edi+0xf8],0x10
10004af0:	75 38                	jne    10004b2a <calculate_image_size+0x110>
10004af2:	ba 04 00 00 00       	mov    edx,0x4
10004af7:	eb 13                	jmp    10004b0c <calculate_image_size+0xf2>
10004af9:	ba 08 00 00 00       	mov    edx,0x8
10004afe:	eb 0c                	jmp    10004b0c <calculate_image_size+0xf2>
10004b00:	ba 03 00 00 00       	mov    edx,0x3
10004b05:	eb 05                	jmp    10004b0c <calculate_image_size+0xf2>
10004b07:	ba 01 00 00 00       	mov    edx,0x1
10004b0c:	bb 03 00 00 00       	mov    ebx,0x3
10004b11:	89 f0                	mov    eax,esi
10004b13:	f7 e2                	mul    edx
10004b15:	70 13                	jo     10004b2a <calculate_image_size+0x110>
10004b17:	f7 a7 f4 00 00 00    	mul    DWORD PTR [edi+0xf4]
10004b1d:	70 0b                	jo     10004b2a <calculate_image_size+0x110>
10004b1f:	89 01                	mov    DWORD PTR [ecx],eax
10004b21:	31 db                	xor    ebx,ebx
10004b23:	eb 05                	jmp    10004b2a <calculate_image_size+0x110>
10004b25:	bb 50 00 00 00       	mov    ebx,0x50
10004b2a:	89 d8                	mov    eax,ebx
10004b2c:	5b                   	pop    ebx
10004b2d:	5e                   	pop    esi
10004b2e:	5f                   	pop    edi
10004b2f:	c3                   	ret    

10004b30 <is_critical_chunk>:
10004b30:	85 c0                	test   eax,eax
10004b32:	74 0d                	je     10004b41 <is_critical_chunk+0x11>
10004b34:	8a 40 08             	mov    al,BYTE PTR [eax+0x8]
10004b37:	c0 e8 05             	shr    al,0x5
10004b3a:	83 f0 01             	xor    eax,0x1
10004b3d:	83 e0 01             	and    eax,0x1
10004b40:	c3                   	ret    
10004b41:	31 c0                	xor    eax,eax
10004b43:	c3                   	ret    

10004b44 <paeth>:
10004b44:	55                   	push   ebp
10004b45:	57                   	push   edi
10004b46:	56                   	push   esi
10004b47:	53                   	push   ebx
10004b48:	89 cf                	mov    edi,ecx
10004b4a:	0f b6 da             	movzx  ebx,dl
10004b4d:	0f b6 f1             	movzx  esi,cl
10004b50:	29 f3                	sub    ebx,esi
10004b52:	0f b6 f0             	movzx  esi,al
10004b55:	01 f3                	add    ebx,esi
10004b57:	0f bf db             	movsx  ebx,bx
10004b5a:	0f b6 f2             	movzx  esi,dl
10004b5d:	89 dd                	mov    ebp,ebx
10004b5f:	29 f5                	sub    ebp,esi
10004b61:	89 ee                	mov    esi,ebp
10004b63:	c1 fd 1f             	sar    ebp,0x1f
10004b66:	31 ee                	xor    esi,ebp
10004b68:	29 ee                	sub    esi,ebp
10004b6a:	0f b6 c9             	movzx  ecx,cl
10004b6d:	89 dd                	mov    ebp,ebx
10004b6f:	29 cd                	sub    ebp,ecx
10004b71:	89 e9                	mov    ecx,ebp
10004b73:	c1 fd 1f             	sar    ebp,0x1f
10004b76:	31 e9                	xor    ecx,ebp
10004b78:	29 e9                	sub    ecx,ebp
10004b7a:	0f b6 e8             	movzx  ebp,al
10004b7d:	29 eb                	sub    ebx,ebp
10004b7f:	89 dd                	mov    ebp,ebx
10004b81:	c1 fd 1f             	sar    ebp,0x1f
10004b84:	31 eb                	xor    ebx,ebp
10004b86:	29 eb                	sub    ebx,ebp
10004b88:	89 cd                	mov    ebp,ecx
10004b8a:	66 39 ce             	cmp    si,cx
10004b8d:	7f 02                	jg     10004b91 <paeth+0x4d>
10004b8f:	89 f5                	mov    ebp,esi
10004b91:	66 39 dd             	cmp    bp,bx
10004b94:	7d 09                	jge    10004b9f <paeth+0x5b>
10004b96:	66 39 ce             	cmp    si,cx
10004b99:	7f 06                	jg     10004ba1 <paeth+0x5d>
10004b9b:	89 d7                	mov    edi,edx
10004b9d:	eb 02                	jmp    10004ba1 <paeth+0x5d>
10004b9f:	89 c7                	mov    edi,eax
10004ba1:	89 f8                	mov    eax,edi
10004ba3:	5b                   	pop    ebx
10004ba4:	5e                   	pop    esi
10004ba5:	5f                   	pop    edi
10004ba6:	5d                   	pop    ebp
10004ba7:	c3                   	ret    

10004ba8 <sample_to_target>:
10004ba8:	55                   	push   ebp
10004ba9:	57                   	push   edi
10004baa:	56                   	push   esi
10004bab:	53                   	push   ebx
10004bac:	89 ce                	mov    esi,ecx
10004bae:	39 ca                	cmp    edx,ecx
10004bb0:	75 0c                	jne    10004bbe <sample_to_target+0x16>
10004bb2:	89 c3                	mov    ebx,eax
10004bb4:	89 c2                	mov    edx,eax
10004bb6:	3b 4c 24 14          	cmp    ecx,DWORD PTR [esp+0x14]
10004bba:	75 0d                	jne    10004bc9 <sample_to_target+0x21>
10004bbc:	eb 4a                	jmp    10004c08 <sample_to_target+0x60>
10004bbe:	0f b7 c0             	movzx  eax,ax
10004bc1:	29 ca                	sub    edx,ecx
10004bc3:	88 d1                	mov    cl,dl
10004bc5:	d3 f8                	sar    eax,cl
10004bc7:	89 c2                	mov    edx,eax
10004bc9:	3b 74 24 14          	cmp    esi,DWORD PTR [esp+0x14]
10004bcd:	76 0d                	jbe    10004bdc <sample_to_target+0x34>
10004bcf:	0f b7 da             	movzx  ebx,dx
10004bd2:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10004bd6:	89 f1                	mov    ecx,esi
10004bd8:	d3 fb                	sar    ebx,cl
10004bda:	eb 2c                	jmp    10004c08 <sample_to_target+0x60>
10004bdc:	89 f0                	mov    eax,esi
10004bde:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10004be2:	89 f3                	mov    ebx,esi
10004be4:	29 d9                	sub    ecx,ebx
10004be6:	31 db                	xor    ebx,ebx
10004be8:	0f b7 fa             	movzx  edi,dx
10004beb:	84 c9                	test   cl,cl
10004bed:	78 0a                	js     10004bf9 <sample_to_target+0x51>
10004bef:	89 fd                	mov    ebp,edi
10004bf1:	d3 e5                	shl    ebp,cl
10004bf3:	09 eb                	or     ebx,ebp
10004bf5:	29 c1                	sub    ecx,eax
10004bf7:	eb f2                	jmp    10004beb <sample_to_target+0x43>
10004bf9:	89 f0                	mov    eax,esi
10004bfb:	00 c8                	add    al,cl
10004bfd:	74 09                	je     10004c08 <sample_to_target+0x60>
10004bff:	0f b7 d2             	movzx  edx,dx
10004c02:	f7 d9                	neg    ecx
10004c04:	d3 fa                	sar    edx,cl
10004c06:	09 d3                	or     ebx,edx
10004c08:	89 d8                	mov    eax,ebx
10004c0a:	5b                   	pop    ebx
10004c0b:	5e                   	pop    esi
10004c0c:	5f                   	pop    edi
10004c0d:	5d                   	pop    ebp
10004c0e:	c3                   	ret    

10004c0f <check_chrm_int>:
10004c0f:	ba 01 00 00 00       	mov    edx,0x1
10004c14:	85 c0                	test   eax,eax
10004c16:	74 37                	je     10004c4f <check_chrm_int+0x40>
10004c18:	ba 22 00 00 00       	mov    edx,0x22
10004c1d:	83 38 00             	cmp    DWORD PTR [eax],0x0
10004c20:	78 2d                	js     10004c4f <check_chrm_int+0x40>
10004c22:	83 78 04 00          	cmp    DWORD PTR [eax+0x4],0x0
10004c26:	78 27                	js     10004c4f <check_chrm_int+0x40>
10004c28:	83 78 08 00          	cmp    DWORD PTR [eax+0x8],0x0
10004c2c:	78 21                	js     10004c4f <check_chrm_int+0x40>
10004c2e:	83 78 0c 00          	cmp    DWORD PTR [eax+0xc],0x0
10004c32:	78 1b                	js     10004c4f <check_chrm_int+0x40>
10004c34:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10004c38:	78 15                	js     10004c4f <check_chrm_int+0x40>
10004c3a:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10004c3e:	78 0f                	js     10004c4f <check_chrm_int+0x40>
10004c40:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10004c44:	78 09                	js     10004c4f <check_chrm_int+0x40>
10004c46:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10004c49:	c1 fa 1f             	sar    edx,0x1f
10004c4c:	83 e2 22             	and    edx,0x22
10004c4f:	89 d0                	mov    eax,edx
10004c51:	c3                   	ret    

10004c52 <update_row_info>:
10004c52:	57                   	push   edi
10004c53:	56                   	push   esi
10004c54:	53                   	push   ebx
10004c55:	89 c2                	mov    edx,eax
10004c57:	8a 80 fc 00 00 00    	mov    al,BYTE PTR [eax+0xfc]
10004c5d:	89 c7                	mov    edi,eax
10004c5f:	8d 9a e0 08 00 00    	lea    ebx,[edx+0x8e0]
10004c65:	8b 8a e0 0f 00 00    	mov    ecx,DWORD PTR [edx+0xfe0]
10004c6b:	8b 82 e8 0f 00 00    	mov    eax,DWORD PTR [edx+0xfe8]
10004c71:	89 c6                	mov    esi,eax
10004c73:	c1 e6 04             	shl    esi,0x4
10004c76:	8b 74 33 04          	mov    esi,DWORD PTR [ebx+esi*1+0x4]
10004c7a:	4e                   	dec    esi
10004c7b:	39 f1                	cmp    ecx,esi
10004c7d:	75 47                	jne    10004cc6 <update_row_info+0x74>
10004c7f:	8b 8a c0 09 00 00    	mov    ecx,DWORD PTR [edx+0x9c0]
10004c85:	39 c8                	cmp    eax,ecx
10004c87:	75 0e                	jne    10004c97 <update_row_info+0x45>
10004c89:	c7 42 70 06 00 00 00 	mov    DWORD PTR [edx+0x70],0x6
10004c90:	b8 4b 00 00 00       	mov    eax,0x4b
10004c95:	eb 65                	jmp    10004cfc <update_row_info+0xaa>
10004c97:	c7 82 e0 0f 00 00 00 00 00 00 	mov    DWORD PTR [edx+0xfe0],0x0
10004ca1:	40                   	inc    eax
10004ca2:	89 82 e8 0f 00 00    	mov    DWORD PTR [edx+0xfe8],eax
10004ca8:	8b 82 e8 0f 00 00    	mov    eax,DWORD PTR [edx+0xfe8]
10004cae:	89 c6                	mov    esi,eax
10004cb0:	c1 e6 04             	shl    esi,0x4
10004cb3:	01 de                	add    esi,ebx
10004cb5:	83 3e 00             	cmp    DWORD PTR [esi],0x0
10004cb8:	74 06                	je     10004cc0 <update_row_info+0x6e>
10004cba:	83 7e 04 00          	cmp    DWORD PTR [esi+0x4],0x0
10004cbe:	75 13                	jne    10004cd3 <update_row_info+0x81>
10004cc0:	39 c1                	cmp    ecx,eax
10004cc2:	7f dd                	jg     10004ca1 <update_row_info+0x4f>
10004cc4:	eb 0d                	jmp    10004cd3 <update_row_info+0x81>
10004cc6:	ff 82 e4 0f 00 00    	inc    DWORD PTR [edx+0xfe4]
10004ccc:	41                   	inc    ecx
10004ccd:	89 8a e0 0f 00 00    	mov    DWORD PTR [edx+0xfe0],ecx
10004cd3:	31 c0                	xor    eax,eax
10004cd5:	89 fb                	mov    ebx,edi
10004cd7:	84 db                	test   bl,bl
10004cd9:	74 21                	je     10004cfc <update_row_info+0xaa>
10004cdb:	8b 9a e8 0f 00 00    	mov    ebx,DWORD PTR [edx+0xfe8]
10004ce1:	8b 8a e0 0f 00 00    	mov    ecx,DWORD PTR [edx+0xfe0]
10004ce7:	0f af 0c 9d 80 d7 00 10 	imul   ecx,DWORD PTR [ebx*4+0x1000d780]	10004ceb: R_386_32	.text
10004cef:	03 0c 9d b8 d7 00 10 	add    ecx,DWORD PTR [ebx*4+0x1000d7b8]	10004cf2: R_386_32	.text
10004cf6:	89 8a e4 0f 00 00    	mov    DWORD PTR [edx+0xfe4],ecx
10004cfc:	5b                   	pop    ebx
10004cfd:	5e                   	pop    esi
10004cfe:	5f                   	pop    edi
10004cff:	c3                   	ret    

10004d00 <buffer_read_fn>:
10004d00:	53                   	push   ebx
10004d01:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10004d05:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10004d09:	8b 4a 24             	mov    ecx,DWORD PTR [edx+0x24]
10004d0c:	83 c8 ff             	or     eax,0xffffffff
10004d0f:	39 d9                	cmp    ecx,ebx
10004d11:	72 10                	jb     10004d23 <buffer_read_fn+0x23>
10004d13:	8b 42 28             	mov    eax,DWORD PTR [edx+0x28]
10004d16:	01 42 10             	add    DWORD PTR [edx+0x10],eax
10004d19:	89 5a 28             	mov    DWORD PTR [edx+0x28],ebx
10004d1c:	29 d9                	sub    ecx,ebx
10004d1e:	89 4a 24             	mov    DWORD PTR [edx+0x24],ecx
10004d21:	31 c0                	xor    eax,eax
10004d23:	5b                   	pop    ebx
10004d24:	c3                   	ret    

10004d25 <load3>:
10004d25:	83 ec 1c             	sub    esp,0x1c
10004d28:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10004d30:	66 8b 10             	mov    dx,WORD PTR [eax]
10004d33:	66 89 54 24 0c       	mov    WORD PTR [esp+0xc],dx
10004d38:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10004d3b:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
10004d3f:	66 0f 6e 44 24 0c    	movd   xmm0,DWORD PTR [esp+0xc]
10004d45:	83 c4 1c             	add    esp,0x1c
10004d48:	c3                   	ret    

10004d49 <check_exif>:
10004d49:	85 c0                	test   eax,eax
10004d4b:	74 67                	je     10004db4 <check_exif+0x6b>
10004d4d:	53                   	push   ebx
10004d4e:	83 ec 18             	sub    esp,0x18
10004d51:	89 c2                	mov    edx,eax
10004d53:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10004d56:	b8 01 00 00 00       	mov    eax,0x1
10004d5b:	85 db                	test   ebx,ebx
10004d5d:	74 5b                	je     10004dba <check_exif+0x71>
10004d5f:	8b 12                	mov    edx,DWORD PTR [edx]
10004d61:	b8 11 00 00 00       	mov    eax,0x11
10004d66:	83 fa 03             	cmp    edx,0x3
10004d69:	76 4f                	jbe    10004dba <check_exif+0x71>
10004d6b:	b8 4f 00 00 00       	mov    eax,0x4f
10004d70:	85 d2                	test   edx,edx
10004d72:	78 46                	js     10004dba <check_exif+0x71>
10004d74:	c7 44 24 08 49 49 2a 00 	mov    DWORD PTR [esp+0x8],0x2a4949
10004d7c:	c7 44 24 0c 4d 4d 00 2a 	mov    DWORD PTR [esp+0xc],0x2a004d4d
10004d84:	52                   	push   edx
10004d85:	6a 04                	push   0x4
10004d87:	8d 44 24 10          	lea    eax,[esp+0x10]
10004d8b:	50                   	push   eax
10004d8c:	53                   	push   ebx
10004d8d:	e8 fc ff ff ff       	call   10004d8e <check_exif+0x45>	10004d8e: R_386_PC32	memcmp
10004d92:	83 c4 10             	add    esp,0x10
10004d95:	85 c0                	test   eax,eax
10004d97:	74 21                	je     10004dba <check_exif+0x71>
10004d99:	50                   	push   eax
10004d9a:	6a 04                	push   0x4
10004d9c:	8d 44 24 14          	lea    eax,[esp+0x14]
10004da0:	50                   	push   eax
10004da1:	53                   	push   ebx
10004da2:	e8 fc ff ff ff       	call   10004da3 <check_exif+0x5a>	10004da3: R_386_PC32	memcmp
10004da7:	83 c4 10             	add    esp,0x10
10004daa:	85 c0                	test   eax,eax
10004dac:	0f 95 c0             	setne  al
10004daf:	0f b6 c0             	movzx  eax,al
10004db2:	eb 06                	jmp    10004dba <check_exif+0x71>
10004db4:	b8 01 00 00 00       	mov    eax,0x1
10004db9:	c3                   	ret    
10004dba:	83 c4 18             	add    esp,0x18
10004dbd:	5b                   	pop    ebx
10004dbe:	c3                   	ret    

10004dbf <defilter_sub4>:
10004dbf:	83 c0 04             	add    eax,0x4
10004dc2:	0f 57 c9             	xorps  xmm1,xmm1
10004dc5:	83 f8 04             	cmp    eax,0x4
10004dc8:	76 17                	jbe    10004de1 <defilter_sub4+0x22>
10004dca:	66 0f 6e 02          	movd   xmm0,DWORD PTR [edx]
10004dce:	66 0f fc c1          	paddb  xmm0,xmm1
10004dd2:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004dd6:	83 c2 04             	add    edx,0x4
10004dd9:	83 e8 04             	sub    eax,0x4
10004ddc:	0f 28 c8             	movaps xmm1,xmm0
10004ddf:	eb e4                	jmp    10004dc5 <defilter_sub4+0x6>
10004de1:	c3                   	ret    

10004de2 <store3>:
10004de2:	83 ec 1c             	sub    esp,0x1c
10004de5:	66 0f 7e c2          	movd   edx,xmm0
10004de9:	66 0f 7e 44 24 0c    	movd   DWORD PTR [esp+0xc],xmm0
10004def:	66 89 10             	mov    WORD PTR [eax],dx
10004df2:	8a 54 24 0e          	mov    dl,BYTE PTR [esp+0xe]
10004df6:	88 50 02             	mov    BYTE PTR [eax+0x2],dl
10004df9:	83 c4 1c             	add    esp,0x1c
10004dfc:	c3                   	ret    

10004dfd <defilter_sub3>:
10004dfd:	53                   	push   ebx
10004dfe:	83 ec 08             	sub    esp,0x8
10004e01:	89 c3                	mov    ebx,eax
10004e03:	89 d1                	mov    ecx,edx
10004e05:	0f 57 c9             	xorps  xmm1,xmm1
10004e08:	83 fb 03             	cmp    ebx,0x3
10004e0b:	76 1a                	jbe    10004e27 <defilter_sub3+0x2a>
10004e0d:	66 0f 6e 01          	movd   xmm0,DWORD PTR [ecx]
10004e11:	66 0f fc c1          	paddb  xmm0,xmm1
10004e15:	0f 28 c8             	movaps xmm1,xmm0
10004e18:	89 c8                	mov    eax,ecx
10004e1a:	e8 c3 ff ff ff       	call   10004de2 <store3>
10004e1f:	83 c1 03             	add    ecx,0x3
10004e22:	83 eb 03             	sub    ebx,0x3
10004e25:	eb e1                	jmp    10004e08 <defilter_sub3+0xb>
10004e27:	85 db                	test   ebx,ebx
10004e29:	74 13                	je     10004e3e <defilter_sub3+0x41>
10004e2b:	89 c8                	mov    eax,ecx
10004e2d:	e8 f3 fe ff ff       	call   10004d25 <load3>
10004e32:	66 0f fc c1          	paddb  xmm0,xmm1
10004e36:	89 c8                	mov    eax,ecx
10004e38:	83 c4 08             	add    esp,0x8
10004e3b:	5b                   	pop    ebx
10004e3c:	eb a4                	jmp    10004de2 <store3>
10004e3e:	83 c4 08             	add    esp,0x8
10004e41:	5b                   	pop    ebx
10004e42:	c3                   	ret    

10004e43 <defilter_avg4>:
10004e43:	83 c0 04             	add    eax,0x4
10004e46:	0f 57 c0             	xorps  xmm0,xmm0
10004e49:	0f 28 1d f0 d7 00 10 	movaps xmm3,XMMWORD PTR ds:0x1000d7f0	10004e4c: R_386_32	.text
10004e50:	83 f8 04             	cmp    eax,0x4
10004e53:	76 32                	jbe    10004e87 <defilter_avg4+0x44>
10004e55:	66 0f 6e 11          	movd   xmm2,DWORD PTR [ecx]
10004e59:	0f 28 e0             	movaps xmm4,xmm0
10004e5c:	66 0f e0 e2          	pavgb  xmm4,xmm2
10004e60:	66 0f 6e 0a          	movd   xmm1,DWORD PTR [edx]
10004e64:	0f 57 c2             	xorps  xmm0,xmm2
10004e67:	0f 54 c3             	andps  xmm0,xmm3
10004e6a:	0f 28 e9             	movaps xmm5,xmm1
10004e6d:	66 0f f8 e8          	psubb  xmm5,xmm0
10004e71:	0f 28 c5             	movaps xmm0,xmm5
10004e74:	66 0f fc c4          	paddb  xmm0,xmm4
10004e78:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004e7c:	83 c1 04             	add    ecx,0x4
10004e7f:	83 c2 04             	add    edx,0x4
10004e82:	83 e8 04             	sub    eax,0x4
10004e85:	eb c9                	jmp    10004e50 <defilter_avg4+0xd>
10004e87:	c3                   	ret    

10004e88 <defilter_avg3>:
10004e88:	56                   	push   esi
10004e89:	53                   	push   ebx
10004e8a:	53                   	push   ebx
10004e8b:	89 c6                	mov    esi,eax
10004e8d:	89 d3                	mov    ebx,edx
10004e8f:	0f 57 c9             	xorps  xmm1,xmm1
10004e92:	0f 28 1d f0 d7 00 10 	movaps xmm3,XMMWORD PTR ds:0x1000d7f0	10004e95: R_386_32	.text
10004e99:	83 fe 03             	cmp    esi,0x3
10004e9c:	76 32                	jbe    10004ed0 <defilter_avg3+0x48>
10004e9e:	66 0f 6e 11          	movd   xmm2,DWORD PTR [ecx]
10004ea2:	0f 28 e1             	movaps xmm4,xmm1
10004ea5:	66 0f e0 e2          	pavgb  xmm4,xmm2
10004ea9:	66 0f 6e 03          	movd   xmm0,DWORD PTR [ebx]
10004ead:	0f 57 d1             	xorps  xmm2,xmm1
10004eb0:	0f 54 d3             	andps  xmm2,xmm3
10004eb3:	66 0f f8 c2          	psubb  xmm0,xmm2
10004eb7:	66 0f fc c4          	paddb  xmm0,xmm4
10004ebb:	0f 28 c8             	movaps xmm1,xmm0
10004ebe:	89 d8                	mov    eax,ebx
10004ec0:	e8 1d ff ff ff       	call   10004de2 <store3>
10004ec5:	83 c1 03             	add    ecx,0x3
10004ec8:	83 c3 03             	add    ebx,0x3
10004ecb:	83 ee 03             	sub    esi,0x3
10004ece:	eb c9                	jmp    10004e99 <defilter_avg3+0x11>
10004ed0:	85 f6                	test   esi,esi
10004ed2:	74 34                	je     10004f08 <defilter_avg3+0x80>
10004ed4:	89 c8                	mov    eax,ecx
10004ed6:	e8 4a fe ff ff       	call   10004d25 <load3>
10004edb:	0f 28 d8             	movaps xmm3,xmm0
10004ede:	89 d8                	mov    eax,ebx
10004ee0:	e8 40 fe ff ff       	call   10004d25 <load3>
10004ee5:	0f 28 d1             	movaps xmm2,xmm1
10004ee8:	66 0f e0 d3          	pavgb  xmm2,xmm3
10004eec:	66 0f fc c2          	paddb  xmm0,xmm2
10004ef0:	0f 57 cb             	xorps  xmm1,xmm3
10004ef3:	0f 54 0d f0 d7 00 10 	andps  xmm1,XMMWORD PTR ds:0x1000d7f0	10004ef6: R_386_32	.text
10004efa:	66 0f f8 c1          	psubb  xmm0,xmm1
10004efe:	89 d8                	mov    eax,ebx
10004f00:	5a                   	pop    edx
10004f01:	5b                   	pop    ebx
10004f02:	5e                   	pop    esi
10004f03:	e9 da fe ff ff       	jmp    10004de2 <store3>
10004f08:	58                   	pop    eax
10004f09:	5b                   	pop    ebx
10004f0a:	5e                   	pop    esi
10004f0b:	c3                   	ret    

10004f0c <defilter_paeth4>:
10004f0c:	83 c0 04             	add    eax,0x4
10004f0f:	0f 57 ed             	xorps  xmm5,xmm5
10004f12:	0f 28 e5             	movaps xmm4,xmm5
10004f15:	83 f8 04             	cmp    eax,0x4
10004f18:	77 01                	ja     10004f1b <defilter_paeth4+0xf>
10004f1a:	c3                   	ret    
10004f1b:	83 ec 3c             	sub    esp,0x3c
10004f1e:	66 0f 6e 19          	movd   xmm3,DWORD PTR [ecx]
10004f22:	0f 57 f6             	xorps  xmm6,xmm6
10004f25:	66 0f 60 de          	punpcklbw xmm3,xmm6
10004f29:	66 0f 6e 12          	movd   xmm2,DWORD PTR [edx]
10004f2d:	0f 28 fa             	movaps xmm7,xmm2
10004f30:	66 0f 60 fe          	punpcklbw xmm7,xmm6
10004f34:	0f 29 7c 24 20       	movaps XMMWORD PTR [esp+0x20],xmm7
10004f39:	0f 28 d3             	movaps xmm2,xmm3
10004f3c:	66 0f f9 d4          	psubw  xmm2,xmm4
10004f40:	0f 28 cd             	movaps xmm1,xmm5
10004f43:	66 0f f9 cc          	psubw  xmm1,xmm4
10004f47:	0f 28 c1             	movaps xmm0,xmm1
10004f4a:	66 0f fd c2          	paddw  xmm0,xmm2
10004f4e:	0f 28 f2             	movaps xmm6,xmm2
10004f51:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004f56:	0f 29 74 24 10       	movaps XMMWORD PTR [esp+0x10],xmm6
10004f5b:	0f 28 f9             	movaps xmm7,xmm1
10004f5e:	66 0f 71 e7 0f       	psraw  xmm7,0xf
10004f63:	0f 28 f0             	movaps xmm6,xmm0
10004f66:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004f6b:	0f 29 34 24          	movaps XMMWORD PTR [esp],xmm6
10004f6f:	0f 57 cf             	xorps  xmm1,xmm7
10004f72:	66 0f f9 cf          	psubw  xmm1,xmm7
10004f76:	0f 57 54 24 10       	xorps  xmm2,XMMWORD PTR [esp+0x10]
10004f7b:	66 0f f9 54 24 10    	psubw  xmm2,XMMWORD PTR [esp+0x10]
10004f81:	0f 28 f2             	movaps xmm6,xmm2
10004f84:	66 0f ea f1          	pminsw xmm6,xmm1
10004f88:	0f 57 04 24          	xorps  xmm0,XMMWORD PTR [esp]
10004f8c:	66 0f f9 04 24       	psubw  xmm0,XMMWORD PTR [esp]
10004f91:	66 0f ea c6          	pminsw xmm0,xmm6
10004f95:	66 0f 75 c8          	pcmpeqw xmm1,xmm0
10004f99:	0f 28 f9             	movaps xmm7,xmm1
10004f9c:	0f 55 fc             	andnps xmm7,xmm4
10004f9f:	66 0f 75 c2          	pcmpeqw xmm0,xmm2
10004fa3:	0f 54 cb             	andps  xmm1,xmm3
10004fa6:	0f 56 cf             	orps   xmm1,xmm7
10004fa9:	0f 28 d0             	movaps xmm2,xmm0
10004fac:	0f 55 d1             	andnps xmm2,xmm1
10004faf:	0f 54 c5             	andps  xmm0,xmm5
10004fb2:	0f 56 c2             	orps   xmm0,xmm2
10004fb5:	0f 28 6c 24 20       	movaps xmm5,XMMWORD PTR [esp+0x20]
10004fba:	66 0f fc e8          	paddb  xmm5,xmm0
10004fbe:	0f 28 c5             	movaps xmm0,xmm5
10004fc1:	66 0f 67 c5          	packuswb xmm0,xmm5
10004fc5:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004fc9:	83 c1 04             	add    ecx,0x4
10004fcc:	83 c2 04             	add    edx,0x4
10004fcf:	83 e8 04             	sub    eax,0x4
10004fd2:	0f 28 e3             	movaps xmm4,xmm3
10004fd5:	83 f8 04             	cmp    eax,0x4
10004fd8:	0f 87 40 ff ff ff    	ja     10004f1e <defilter_paeth4+0x12>
10004fde:	83 c4 3c             	add    esp,0x3c
10004fe1:	c3                   	ret    

10004fe2 <defilter_paeth3>:
10004fe2:	56                   	push   esi
10004fe3:	53                   	push   ebx
10004fe4:	83 ec 24             	sub    esp,0x24
10004fe7:	89 c6                	mov    esi,eax
10004fe9:	89 d3                	mov    ebx,edx
10004feb:	0f 57 ed             	xorps  xmm5,xmm5
10004fee:	0f 29 2c 24          	movaps XMMWORD PTR [esp],xmm5
10004ff2:	0f 28 e5             	movaps xmm4,xmm5
10004ff5:	83 fe 03             	cmp    esi,0x3
10004ff8:	0f 86 b3 00 00 00    	jbe    100050b1 <defilter_paeth3+0xcf>
10004ffe:	66 0f 6e 29          	movd   xmm5,DWORD PTR [ecx]
10005002:	0f 57 c9             	xorps  xmm1,xmm1
10005005:	66 0f 60 e9          	punpcklbw xmm5,xmm1
10005009:	66 0f 6e 03          	movd   xmm0,DWORD PTR [ebx]
1000500d:	0f 28 f8             	movaps xmm7,xmm0
10005010:	66 0f 60 f9          	punpcklbw xmm7,xmm1
10005014:	0f 29 7c 24 10       	movaps XMMWORD PTR [esp+0x10],xmm7
10005019:	0f 28 c5             	movaps xmm0,xmm5
1000501c:	66 0f f9 c4          	psubw  xmm0,xmm4
10005020:	0f 28 14 24          	movaps xmm2,XMMWORD PTR [esp]
10005024:	66 0f f9 d4          	psubw  xmm2,xmm4
10005028:	0f 28 c8             	movaps xmm1,xmm0
1000502b:	66 0f fd ca          	paddw  xmm1,xmm2
1000502f:	0f 28 f0             	movaps xmm6,xmm0
10005032:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10005037:	0f 28 fa             	movaps xmm7,xmm2
1000503a:	66 0f 71 e7 0f       	psraw  xmm7,0xf
1000503f:	0f 28 d9             	movaps xmm3,xmm1
10005042:	66 0f 71 e3 0f       	psraw  xmm3,0xf
10005047:	0f 57 d7             	xorps  xmm2,xmm7
1000504a:	66 0f f9 d7          	psubw  xmm2,xmm7
1000504e:	0f 57 c6             	xorps  xmm0,xmm6
10005051:	66 0f f9 c6          	psubw  xmm0,xmm6
10005055:	0f 28 f0             	movaps xmm6,xmm0
10005058:	66 0f ea f2          	pminsw xmm6,xmm2
1000505c:	0f 57 cb             	xorps  xmm1,xmm3
1000505f:	66 0f f9 cb          	psubw  xmm1,xmm3
10005063:	66 0f ea f1          	pminsw xmm6,xmm1
10005067:	66 0f 75 d6          	pcmpeqw xmm2,xmm6
1000506b:	0f 28 ca             	movaps xmm1,xmm2
1000506e:	0f 55 cc             	andnps xmm1,xmm4
10005071:	66 0f 75 c6          	pcmpeqw xmm0,xmm6
10005075:	0f 54 d5             	andps  xmm2,xmm5
10005078:	0f 56 d1             	orps   xmm2,xmm1
1000507b:	0f 28 f0             	movaps xmm6,xmm0
1000507e:	0f 55 f2             	andnps xmm6,xmm2
10005081:	0f 54 04 24          	andps  xmm0,XMMWORD PTR [esp]
10005085:	0f 56 c6             	orps   xmm0,xmm6
10005088:	0f 28 5c 24 10       	movaps xmm3,XMMWORD PTR [esp+0x10]
1000508d:	66 0f fc d8          	paddb  xmm3,xmm0
10005091:	0f 28 c3             	movaps xmm0,xmm3
10005094:	66 0f 67 c3          	packuswb xmm0,xmm3
10005098:	89 d8                	mov    eax,ebx
1000509a:	e8 43 fd ff ff       	call   10004de2 <store3>
1000509f:	83 c1 03             	add    ecx,0x3
100050a2:	83 c3 03             	add    ebx,0x3
100050a5:	83 ee 03             	sub    esi,0x3
100050a8:	0f 29 1c 24          	movaps XMMWORD PTR [esp],xmm3
100050ac:	e9 41 ff ff ff       	jmp    10004ff2 <defilter_paeth3+0x10>
100050b1:	85 f6                	test   esi,esi
100050b3:	0f 84 af 00 00 00    	je     10005168 <defilter_paeth3+0x186>
100050b9:	89 c8                	mov    eax,ecx
100050bb:	e8 65 fc ff ff       	call   10004d25 <load3>
100050c0:	0f 57 c9             	xorps  xmm1,xmm1
100050c3:	0f 28 e8             	movaps xmm5,xmm0
100050c6:	66 0f 60 e9          	punpcklbw xmm5,xmm1
100050ca:	89 d8                	mov    eax,ebx
100050cc:	e8 54 fc ff ff       	call   10004d25 <load3>
100050d1:	0f 28 f8             	movaps xmm7,xmm0
100050d4:	66 0f 60 f9          	punpcklbw xmm7,xmm1
100050d8:	0f 29 7c 24 10       	movaps XMMWORD PTR [esp+0x10],xmm7
100050dd:	0f 28 d5             	movaps xmm2,xmm5
100050e0:	66 0f f9 d4          	psubw  xmm2,xmm4
100050e4:	0f 28 04 24          	movaps xmm0,XMMWORD PTR [esp]
100050e8:	66 0f f9 c4          	psubw  xmm0,xmm4
100050ec:	0f 28 c8             	movaps xmm1,xmm0
100050ef:	66 0f fd ca          	paddw  xmm1,xmm2
100050f3:	0f 28 f2             	movaps xmm6,xmm2
100050f6:	66 0f 71 e6 0f       	psraw  xmm6,0xf
100050fb:	0f 28 f8             	movaps xmm7,xmm0
100050fe:	66 0f 71 e7 0f       	psraw  xmm7,0xf
10005103:	0f 28 d9             	movaps xmm3,xmm1
10005106:	66 0f 71 e3 0f       	psraw  xmm3,0xf
1000510b:	0f 57 c7             	xorps  xmm0,xmm7
1000510e:	66 0f f9 c7          	psubw  xmm0,xmm7
10005112:	0f 57 d6             	xorps  xmm2,xmm6
10005115:	66 0f f9 d6          	psubw  xmm2,xmm6
10005119:	0f 28 f2             	movaps xmm6,xmm2
1000511c:	66 0f ea f0          	pminsw xmm6,xmm0
10005120:	0f 57 cb             	xorps  xmm1,xmm3
10005123:	66 0f f9 cb          	psubw  xmm1,xmm3
10005127:	66 0f ea f1          	pminsw xmm6,xmm1
1000512b:	66 0f 75 c6          	pcmpeqw xmm0,xmm6
1000512f:	0f 28 f8             	movaps xmm7,xmm0
10005132:	0f 55 fc             	andnps xmm7,xmm4
10005135:	66 0f 75 f2          	pcmpeqw xmm6,xmm2
10005139:	0f 54 c5             	andps  xmm0,xmm5
1000513c:	0f 56 c7             	orps   xmm0,xmm7
1000513f:	0f 28 e6             	movaps xmm4,xmm6
10005142:	0f 55 e0             	andnps xmm4,xmm0
10005145:	0f 28 1c 24          	movaps xmm3,XMMWORD PTR [esp]
10005149:	0f 54 de             	andps  xmm3,xmm6
1000514c:	0f 56 dc             	orps   xmm3,xmm4
1000514f:	66 0f fc 5c 24 10    	paddb  xmm3,XMMWORD PTR [esp+0x10]
10005155:	0f 28 c3             	movaps xmm0,xmm3
10005158:	66 0f 67 c3          	packuswb xmm0,xmm3
1000515c:	89 d8                	mov    eax,ebx
1000515e:	83 c4 24             	add    esp,0x24
10005161:	5b                   	pop    ebx
10005162:	5e                   	pop    esi
10005163:	e9 7a fc ff ff       	jmp    10004de2 <store3>
10005168:	83 c4 24             	add    esp,0x24
1000516b:	5b                   	pop    ebx
1000516c:	5e                   	pop    esi
1000516d:	c3                   	ret    

1000516e <check_png_keyword>:
1000516e:	57                   	push   edi
1000516f:	56                   	push   esi
10005170:	53                   	push   ebx
10005171:	85 c0                	test   eax,eax
10005173:	74 5b                	je     100051d0 <check_png_keyword+0x62>
10005175:	89 c3                	mov    ebx,eax
10005177:	83 c9 ff             	or     ecx,0xffffffff
1000517a:	31 c0                	xor    eax,eax
1000517c:	89 df                	mov    edi,ebx
1000517e:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10005180:	89 ca                	mov    edx,ecx
10005182:	f7 d2                	not    edx
10005184:	89 d1                	mov    ecx,edx
10005186:	8d 7a ff             	lea    edi,[edx-0x1]
10005189:	83 e9 02             	sub    ecx,0x2
1000518c:	be 01 00 00 00       	mov    esi,0x1
10005191:	83 f9 4e             	cmp    ecx,0x4e
10005194:	77 3f                	ja     100051d5 <check_png_keyword+0x67>
10005196:	80 3b 20             	cmp    BYTE PTR [ebx],0x20
10005199:	74 3a                	je     100051d5 <check_png_keyword+0x67>
1000519b:	01 df                	add    edi,ebx
1000519d:	80 7f ff 20          	cmp    BYTE PTR [edi-0x1],0x20
100051a1:	74 32                	je     100051d5 <check_png_keyword+0x67>
100051a3:	50                   	push   eax
100051a4:	50                   	push   eax
100051a5:	68 d3 cc 00 10       	push   0x1000ccd3	100051a6: R_386_32	.text
100051aa:	53                   	push   ebx
100051ab:	e8 fc ff ff ff       	call   100051ac <check_png_keyword+0x3e>	100051ac: R_386_PC32	strstr
100051b0:	83 c4 10             	add    esp,0x10
100051b3:	85 c0                	test   eax,eax
100051b5:	75 1e                	jne    100051d5 <check_png_keyword+0x67>
100051b7:	39 fb                	cmp    ebx,edi
100051b9:	74 11                	je     100051cc <check_png_keyword+0x5e>
100051bb:	8a 03                	mov    al,BYTE PTR [ebx]
100051bd:	8d 50 e0             	lea    edx,[eax-0x20]
100051c0:	80 fa 5e             	cmp    dl,0x5e
100051c3:	76 04                	jbe    100051c9 <check_png_keyword+0x5b>
100051c5:	3c a0                	cmp    al,0xa0
100051c7:	76 07                	jbe    100051d0 <check_png_keyword+0x62>
100051c9:	43                   	inc    ebx
100051ca:	eb eb                	jmp    100051b7 <check_png_keyword+0x49>
100051cc:	31 f6                	xor    esi,esi
100051ce:	eb 05                	jmp    100051d5 <check_png_keyword+0x67>
100051d0:	be 01 00 00 00       	mov    esi,0x1
100051d5:	89 f0                	mov    eax,esi
100051d7:	5b                   	pop    ebx
100051d8:	5e                   	pop    esi
100051d9:	5f                   	pop    edi
100051da:	c3                   	ret    

100051db <spng__inflate_init>:
100051db:	56                   	push   esi
100051dc:	53                   	push   ebx
100051dd:	52                   	push   edx
100051de:	89 c3                	mov    ebx,eax
100051e0:	8d b0 50 09 00 00    	lea    esi,[eax+0x950]
100051e6:	83 b8 6c 09 00 00 00 	cmp    DWORD PTR [eax+0x96c],0x0
100051ed:	74 0c                	je     100051fb <spng__inflate_init+0x20>
100051ef:	83 ec 0c             	sub    esp,0xc
100051f2:	56                   	push   esi
100051f3:	e8 fc ff ff ff       	call   100051f4 <spng__inflate_init+0x19>	100051f4: R_386_PC32	inflateEnd
100051f8:	83 c4 10             	add    esp,0x10
100051fb:	80 4b 74 02          	or     BYTE PTR [ebx+0x74],0x2
100051ff:	c7 83 70 09 00 00 13 53 00 10 	mov    DWORD PTR [ebx+0x970],0x10005313	10005205: R_386_32	.text
10005209:	c7 83 74 09 00 00 3a 53 00 10 	mov    DWORD PTR [ebx+0x974],0x1000533a	1000520f: R_386_32	.text
10005213:	89 9b 78 09 00 00    	mov    DWORD PTR [ebx+0x978],ebx
10005219:	50                   	push   eax
1000521a:	6a 38                	push   0x38
1000521c:	68 d6 cc 00 10       	push   0x1000ccd6	1000521d: R_386_32	.text
10005221:	56                   	push   esi
10005222:	e8 fc ff ff ff       	call   10005223 <spng__inflate_init+0x48>	10005223: R_386_PC32	inflateInit_
10005227:	83 c4 10             	add    esp,0x10
1000522a:	85 c0                	test   eax,eax
1000522c:	74 07                	je     10005235 <spng__inflate_init+0x5a>
1000522e:	b8 4e 00 00 00       	mov    eax,0x4e
10005233:	eb 38                	jmp    1000526d <spng__inflate_init+0x92>
10005235:	8b 53 68             	mov    edx,DWORD PTR [ebx+0x68]
10005238:	f7 d2                	not    edx
1000523a:	83 e2 01             	and    edx,0x1
1000523d:	8d 43 40             	lea    eax,[ebx+0x40]
10005240:	e8 eb f8 ff ff       	call   10004b30 <is_critical_chunk>
10005245:	85 c0                	test   eax,eax
10005247:	74 09                	je     10005252 <spng__inflate_init+0x77>
10005249:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
10005250:	eb 07                	jmp    10005259 <spng__inflate_init+0x7e>
10005252:	83 bb ec 00 00 00 02 	cmp    DWORD PTR [ebx+0xec],0x2
10005259:	75 02                	jne    1000525d <spng__inflate_init+0x82>
1000525b:	31 d2                	xor    edx,edx
1000525d:	51                   	push   ecx
1000525e:	51                   	push   ecx
1000525f:	52                   	push   edx
10005260:	56                   	push   esi
10005261:	e8 fc ff ff ff       	call   10005262 <spng__inflate_init+0x87>	10005262: R_386_PC32	inflateValidate
10005266:	83 c4 10             	add    esp,0x10
10005269:	85 c0                	test   eax,eax
1000526b:	75 c1                	jne    1000522e <spng__inflate_init+0x53>
1000526d:	5a                   	pop    edx
1000526e:	5b                   	pop    ebx
1000526f:	5e                   	pop    esi
10005270:	c3                   	ret    

10005271 <spng__deflate_init>:
10005271:	57                   	push   edi
10005272:	56                   	push   esi
10005273:	53                   	push   ebx
10005274:	89 c3                	mov    ebx,eax
10005276:	89 d6                	mov    esi,edx
10005278:	8d b8 50 09 00 00    	lea    edi,[eax+0x950]
1000527e:	83 b8 6c 09 00 00 00 	cmp    DWORD PTR [eax+0x96c],0x0
10005285:	74 0c                	je     10005293 <spng__deflate_init+0x22>
10005287:	83 ec 0c             	sub    esp,0xc
1000528a:	57                   	push   edi
1000528b:	e8 fc ff ff ff       	call   1000528c <spng__deflate_init+0x1b>	1000528c: R_386_PC32	deflateEnd
10005290:	83 c4 10             	add    esp,0x10
10005293:	80 4b 74 04          	or     BYTE PTR [ebx+0x74],0x4
10005297:	c7 83 70 09 00 00 13 53 00 10 	mov    DWORD PTR [ebx+0x970],0x10005313	1000529d: R_386_32	.text
100052a1:	c7 83 74 09 00 00 3a 53 00 10 	mov    DWORD PTR [ebx+0x974],0x1000533a	100052a7: R_386_32	.text
100052ab:	89 9b 78 09 00 00    	mov    DWORD PTR [ebx+0x978],ebx
100052b1:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
100052b4:	89 83 7c 09 00 00    	mov    DWORD PTR [ebx+0x97c],eax
100052ba:	6a 38                	push   0x38
100052bc:	68 d6 cc 00 10       	push   0x1000ccd6	100052bd: R_386_32	.text
100052c1:	ff 76 0c             	push   DWORD PTR [esi+0xc]
100052c4:	ff 76 08             	push   DWORD PTR [esi+0x8]
100052c7:	ff 76 04             	push   DWORD PTR [esi+0x4]
100052ca:	6a 08                	push   0x8
100052cc:	ff 36                	push   DWORD PTR [esi]
100052ce:	57                   	push   edi
100052cf:	e8 fc ff ff ff       	call   100052d0 <spng__deflate_init+0x5f>	100052d0: R_386_PC32	deflateInit2_
100052d4:	83 c4 20             	add    esp,0x20
100052d7:	85 c0                	test   eax,eax
100052d9:	74 05                	je     100052e0 <spng__deflate_init+0x6f>
100052db:	b8 4e 00 00 00       	mov    eax,0x4e
100052e0:	5b                   	pop    ebx
100052e1:	5e                   	pop    esi
100052e2:	5f                   	pop    edi
100052e3:	c3                   	ret    

100052e4 <file_write_fn>:
100052e4:	83 ec 0c             	sub    esp,0xc
100052e7:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100052eb:	6a 01                	push   0x1
100052ed:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100052f1:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100052f5:	e8 fc ff ff ff       	call   100052f6 <file_write_fn+0x12>	100052f6: R_386_PC32	fwrite
100052fa:	48                   	dec    eax
100052fb:	0f 94 c0             	sete   al
100052fe:	0f b6 c0             	movzx  eax,al
10005301:	8d 44 00 fe          	lea    eax,[eax+eax*1-0x2]
10005305:	83 c4 1c             	add    esp,0x1c
10005308:	c3                   	ret    

10005309 <spng__malloc.isra.0>:
10005309:	83 ec 18             	sub    esp,0x18
1000530c:	52                   	push   edx
1000530d:	ff d0                	call   eax
1000530f:	83 c4 1c             	add    esp,0x1c
10005312:	c3                   	ret    

10005313 <spng__zalloc>:
10005313:	53                   	push   ebx
10005314:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10005318:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000531c:	f7 64 24 0c          	mul    DWORD PTR [esp+0xc]
10005320:	70 0a                	jo     1000532c <spng__zalloc+0x19>
10005322:	89 c1                	mov    ecx,eax
10005324:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10005327:	89 ca                	mov    edx,ecx
10005329:	5b                   	pop    ebx
1000532a:	eb dd                	jmp    10005309 <spng__malloc.isra.0>
1000532c:	31 c0                	xor    eax,eax
1000532e:	5b                   	pop    ebx
1000532f:	c3                   	ret    

10005330 <spng__free.isra.3>:
10005330:	83 ec 18             	sub    esp,0x18
10005333:	52                   	push   edx
10005334:	ff d0                	call   eax
10005336:	83 c4 1c             	add    esp,0x1c
10005339:	c3                   	ret    

1000533a <spng__zfree>:
1000533a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000533e:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10005341:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10005345:	eb e9                	jmp    10005330 <spng__free.isra.3>

10005347 <increase_cache_usage>:
10005347:	89 c1                	mov    ecx,eax
10005349:	85 d2                	test   edx,edx
1000534b:	74 27                	je     10005374 <increase_cache_usage+0x2d>
1000534d:	85 c0                	test   eax,eax
1000534f:	74 23                	je     10005374 <increase_cache_usage+0x2d>
10005351:	b8 03 00 00 00       	mov    eax,0x3
10005356:	03 91 e4 00 00 00    	add    edx,DWORD PTR [ecx+0xe4]
1000535c:	72 1b                	jb     10005379 <increase_cache_usage+0x32>
1000535e:	b8 4d 00 00 00       	mov    eax,0x4d
10005363:	3b 91 e0 00 00 00    	cmp    edx,DWORD PTR [ecx+0xe0]
10005369:	77 0e                	ja     10005379 <increase_cache_usage+0x32>
1000536b:	89 91 e4 00 00 00    	mov    DWORD PTR [ecx+0xe4],edx
10005371:	31 c0                	xor    eax,eax
10005373:	c3                   	ret    
10005374:	b8 50 00 00 00       	mov    eax,0x50
10005379:	c3                   	ret    

1000537a <decrease_cache_usage>:
1000537a:	53                   	push   ebx
1000537b:	85 d2                	test   edx,edx
1000537d:	74 1f                	je     1000539e <decrease_cache_usage+0x24>
1000537f:	85 c0                	test   eax,eax
10005381:	74 1b                	je     1000539e <decrease_cache_usage+0x24>
10005383:	8b 88 e4 00 00 00    	mov    ecx,DWORD PTR [eax+0xe4]
10005389:	bb 50 00 00 00       	mov    ebx,0x50
1000538e:	39 ca                	cmp    edx,ecx
10005390:	77 11                	ja     100053a3 <decrease_cache_usage+0x29>
10005392:	29 d1                	sub    ecx,edx
10005394:	89 88 e4 00 00 00    	mov    DWORD PTR [eax+0xe4],ecx
1000539a:	31 db                	xor    ebx,ebx
1000539c:	eb 05                	jmp    100053a3 <decrease_cache_usage+0x29>
1000539e:	bb 50 00 00 00       	mov    ebx,0x50
100053a3:	89 d8                	mov    eax,ebx
100053a5:	5b                   	pop    ebx
100053a6:	c3                   	ret    

100053a7 <splt_undo>:
100053a7:	56                   	push   esi
100053a8:	53                   	push   ebx
100053a9:	50                   	push   eax
100053aa:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100053ae:	6b 83 b4 08 00 00 5c 	imul   eax,DWORD PTR [ebx+0x8b4],0x5c
100053b5:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
100053bb:	8d 74 02 a4          	lea    esi,[edx+eax*1-0x5c]
100053bf:	8b 56 58             	mov    edx,DWORD PTR [esi+0x58]
100053c2:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
100053c5:	e8 66 ff ff ff       	call   10005330 <spng__free.isra.3>
100053ca:	ba 5c 00 00 00       	mov    edx,0x5c
100053cf:	89 d8                	mov    eax,ebx
100053d1:	e8 a4 ff ff ff       	call   1000537a <decrease_cache_usage>
100053d6:	6b 56 54 0a          	imul   edx,DWORD PTR [esi+0x54],0xa
100053da:	89 d8                	mov    eax,ebx
100053dc:	e8 99 ff ff ff       	call   1000537a <decrease_cache_usage>
100053e1:	c7 46 58 00 00 00 00 	mov    DWORD PTR [esi+0x58],0x0
100053e8:	ff 8b b4 08 00 00    	dec    DWORD PTR [ebx+0x8b4]
100053ee:	5a                   	pop    edx
100053ef:	5b                   	pop    ebx
100053f0:	5e                   	pop    esi
100053f1:	c3                   	ret    

100053f2 <text_undo>:
100053f2:	56                   	push   esi
100053f3:	53                   	push   ebx
100053f4:	52                   	push   edx
100053f5:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100053f9:	6b 83 88 05 00 00 70 	imul   eax,DWORD PTR [ebx+0x588],0x70
10005400:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
10005406:	8d 74 02 90          	lea    esi,[edx+eax*1-0x70]
1000540a:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
1000540d:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10005410:	e8 1b ff ff ff       	call   10005330 <spng__free.isra.3>
10005415:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
10005419:	74 0b                	je     10005426 <text_undo+0x34>
1000541b:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
1000541e:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10005421:	e8 0a ff ff ff       	call   10005330 <spng__free.isra.3>
10005426:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
10005429:	89 d8                	mov    eax,ebx
1000542b:	e8 4a ff ff ff       	call   1000537a <decrease_cache_usage>
10005430:	ba 70 00 00 00       	mov    edx,0x70
10005435:	89 d8                	mov    eax,ebx
10005437:	e8 3e ff ff ff       	call   1000537a <decrease_cache_usage>
1000543c:	c7 46 04 00 00 00 00 	mov    DWORD PTR [esi+0x4],0x0
10005443:	c7 46 08 00 00 00 00 	mov    DWORD PTR [esi+0x8],0x0
1000544a:	ff 8b 88 05 00 00    	dec    DWORD PTR [ebx+0x588]
10005450:	58                   	pop    eax
10005451:	5b                   	pop    ebx
10005452:	5e                   	pop    esi
10005453:	c3                   	ret    

10005454 <chunk_undo>:
10005454:	56                   	push   esi
10005455:	53                   	push   ebx
10005456:	50                   	push   eax
10005457:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000545b:	8b 86 d8 08 00 00    	mov    eax,DWORD PTR [esi+0x8d8]
10005461:	8d 98 ff ff ff 0f    	lea    ebx,[eax+0xfffffff]
10005467:	c1 e3 04             	shl    ebx,0x4
1000546a:	03 9e dc 08 00 00    	add    ebx,DWORD PTR [esi+0x8dc]
10005470:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10005473:	8b 46 64             	mov    eax,DWORD PTR [esi+0x64]
10005476:	e8 b5 fe ff ff       	call   10005330 <spng__free.isra.3>
1000547b:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
1000547e:	89 f0                	mov    eax,esi
10005480:	e8 f5 fe ff ff       	call   1000537a <decrease_cache_usage>
10005485:	ba 10 00 00 00       	mov    edx,0x10
1000548a:	89 f0                	mov    eax,esi
1000548c:	e8 e9 fe ff ff       	call   1000537a <decrease_cache_usage>
10005491:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10005498:	ff 8e d8 08 00 00    	dec    DWORD PTR [esi+0x8d8]
1000549e:	5a                   	pop    edx
1000549f:	5b                   	pop    ebx
100054a0:	5e                   	pop    esi
100054a1:	c3                   	ret    

100054a2 <read_data>:
100054a2:	85 c0                	test   eax,eax
100054a4:	74 50                	je     100054f6 <read_data+0x54>
100054a6:	85 d2                	test   edx,edx
100054a8:	74 56                	je     10005500 <read_data+0x5e>
100054aa:	56                   	push   esi
100054ab:	53                   	push   ebx
100054ac:	51                   	push   ecx
100054ad:	89 c3                	mov    ebx,eax
100054af:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
100054b3:	74 0d                	je     100054c2 <read_data+0x20>
100054b5:	b8 50 00 00 00       	mov    eax,0x50
100054ba:	81 fa 00 20 00 00    	cmp    edx,0x2000
100054c0:	77 3a                	ja     100054fc <read_data+0x5a>
100054c2:	89 d6                	mov    esi,edx
100054c4:	52                   	push   edx
100054c5:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
100054c8:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
100054cb:	53                   	push   ebx
100054cc:	ff 53 14             	call   DWORD PTR [ebx+0x14]
100054cf:	83 c4 10             	add    esp,0x10
100054d2:	85 c0                	test   eax,eax
100054d4:	74 0f                	je     100054e5 <read_data+0x43>
100054d6:	8d 50 02             	lea    edx,[eax+0x2]
100054d9:	83 fa 02             	cmp    edx,0x2
100054dc:	76 1e                	jbe    100054fc <read_data+0x5a>
100054de:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100054e3:	eb 17                	jmp    100054fc <read_data+0x5a>
100054e5:	03 73 04             	add    esi,DWORD PTR [ebx+0x4]
100054e8:	89 73 04             	mov    DWORD PTR [ebx+0x4],esi
100054eb:	b8 03 00 00 00       	mov    eax,0x3
100054f0:	72 0a                	jb     100054fc <read_data+0x5a>
100054f2:	31 c0                	xor    eax,eax
100054f4:	eb 06                	jmp    100054fc <read_data+0x5a>
100054f6:	b8 50 00 00 00       	mov    eax,0x50
100054fb:	c3                   	ret    
100054fc:	5a                   	pop    edx
100054fd:	5b                   	pop    ebx
100054fe:	5e                   	pop    esi
100054ff:	c3                   	ret    
10005500:	31 c0                	xor    eax,eax
10005502:	c3                   	ret    

10005503 <read_and_check_crc>:
10005503:	85 c0                	test   eax,eax
10005505:	74 5f                	je     10005566 <read_and_check_crc+0x63>
10005507:	53                   	push   ebx
10005508:	83 ec 08             	sub    esp,0x8
1000550b:	89 c3                	mov    ebx,eax
1000550d:	ba 04 00 00 00       	mov    edx,0x4
10005512:	e8 8b ff ff ff       	call   100054a2 <read_data>
10005517:	89 c2                	mov    edx,eax
10005519:	85 c0                	test   eax,eax
1000551b:	75 51                	jne    1000556e <read_and_check_crc+0x6b>
1000551d:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10005520:	e8 ba f4 ff ff       	call   100049df <read_u32>
10005525:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
10005528:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
1000552c:	75 40                	jne    1000556e <read_and_check_crc+0x6b>
1000552e:	3b 43 54             	cmp    eax,DWORD PTR [ebx+0x54]
10005531:	74 3b                	je     1000556e <read_and_check_crc+0x6b>
10005533:	8d 43 40             	lea    eax,[ebx+0x40]
10005536:	e8 f5 f5 ff ff       	call   10004b30 <is_critical_chunk>
1000553b:	85 c0                	test   eax,eax
1000553d:	74 10                	je     1000554f <read_and_check_crc+0x4c>
1000553f:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
10005546:	74 26                	je     1000556e <read_and_check_crc+0x6b>
10005548:	ba 12 00 00 00       	mov    edx,0x12
1000554d:	eb 1f                	jmp    1000556e <read_and_check_crc+0x6b>
1000554f:	8b 83 ec 00 00 00    	mov    eax,DWORD PTR [ebx+0xec]
10005555:	83 f8 02             	cmp    eax,0x2
10005558:	74 14                	je     1000556e <read_and_check_crc+0x6b>
1000555a:	31 d2                	xor    edx,edx
1000555c:	48                   	dec    eax
1000555d:	0f 95 c2             	setne  dl
10005560:	4a                   	dec    edx
10005561:	83 ca 12             	or     edx,0x12
10005564:	eb 08                	jmp    1000556e <read_and_check_crc+0x6b>
10005566:	ba 50 00 00 00       	mov    edx,0x50
1000556b:	89 d0                	mov    eax,edx
1000556d:	c3                   	ret    
1000556e:	89 d0                	mov    eax,edx
10005570:	83 c4 08             	add    esp,0x8
10005573:	5b                   	pop    ebx
10005574:	c3                   	ret    

10005575 <read_header>:
10005575:	55                   	push   ebp
10005576:	57                   	push   edi
10005577:	56                   	push   esi
10005578:	53                   	push   ebx
10005579:	83 ec 1c             	sub    esp,0x1c
1000557c:	bd 50 00 00 00       	mov    ebp,0x50
10005581:	85 c0                	test   eax,eax
10005583:	0f 84 cb 00 00 00    	je     10005654 <read_header+0xdf>
10005589:	89 c3                	mov    ebx,eax
1000558b:	89 e7                	mov    edi,esp
1000558d:	b9 04 00 00 00       	mov    ecx,0x4
10005592:	31 c0                	xor    eax,eax
10005594:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10005596:	89 d8                	mov    eax,ebx
10005598:	e8 66 ff ff ff       	call   10005503 <read_and_check_crc>
1000559d:	89 c5                	mov    ebp,eax
1000559f:	85 c0                	test   eax,eax
100055a1:	89 e6                	mov    esi,esp
100055a3:	74 0d                	je     100055b2 <read_header+0x3d>
100055a5:	83 f8 ff             	cmp    eax,0xffffffff
100055a8:	0f 85 a6 00 00 00    	jne    10005654 <read_header+0xdf>
100055ae:	80 4b 74 20          	or     BYTE PTR [ebx+0x74],0x20
100055b2:	ba 08 00 00 00       	mov    edx,0x8
100055b7:	89 d8                	mov    eax,ebx
100055b9:	e8 e4 fe ff ff       	call   100054a2 <read_data>
100055be:	89 c5                	mov    ebp,eax
100055c0:	85 c0                	test   eax,eax
100055c2:	0f 85 8c 00 00 00    	jne    10005654 <read_header+0xdf>
100055c8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100055cb:	83 e8 08             	sub    eax,0x8
100055ce:	89 04 24             	mov    DWORD PTR [esp],eax
100055d1:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
100055d4:	89 d0                	mov    eax,edx
100055d6:	e8 04 f4 ff ff       	call   100049df <read_u32>
100055db:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100055df:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
100055e2:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
100055e6:	85 c0                	test   eax,eax
100055e8:	78 65                	js     1000564f <read_header+0xda>
100055ea:	89 43 50             	mov    DWORD PTR [ebx+0x50],eax
100055ed:	89 f0                	mov    eax,esi
100055ef:	e8 3c f5 ff ff       	call   10004b30 <is_critical_chunk>
100055f4:	85 c0                	test   eax,eax
100055f6:	8a 43 74             	mov    al,BYTE PTR [ebx+0x74]
100055f9:	74 0e                	je     10005609 <read_header+0x94>
100055fb:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
10005602:	75 05                	jne    10005609 <read_header+0x94>
10005604:	83 c8 40             	or     eax,0x40
10005607:	eb 0c                	jmp    10005615 <read_header+0xa0>
10005609:	83 bb ec 00 00 00 02 	cmp    DWORD PTR [ebx+0xec],0x2
10005610:	74 f2                	je     10005604 <read_header+0x8f>
10005612:	83 e0 bf             	and    eax,0xffffffbf
10005615:	88 43 74             	mov    BYTE PTR [ebx+0x74],al
10005618:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
1000561c:	75 25                	jne    10005643 <read_header+0xce>
1000561e:	50                   	push   eax
1000561f:	6a 00                	push   0x0
10005621:	6a 00                	push   0x0
10005623:	6a 00                	push   0x0
10005625:	e8 fc ff ff ff       	call   10005626 <read_header+0xb1>	10005626: R_386_PC32	crc32
1000562a:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
1000562d:	83 c4 0c             	add    esp,0xc
10005630:	6a 04                	push   0x4
10005632:	8d 54 24 10          	lea    edx,[esp+0x10]
10005636:	52                   	push   edx
10005637:	50                   	push   eax
10005638:	e8 fc ff ff ff       	call   10005639 <read_header+0xc4>	10005639: R_386_PC32	crc32
1000563d:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
10005640:	83 c4 10             	add    esp,0x10
10005643:	8d 7b 40             	lea    edi,[ebx+0x40]
10005646:	b9 04 00 00 00       	mov    ecx,0x4
1000564b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000564d:	eb 05                	jmp    10005654 <read_header+0xdf>
1000564f:	bd 4f 00 00 00       	mov    ebp,0x4f
10005654:	89 e8                	mov    eax,ebp
10005656:	83 c4 1c             	add    esp,0x1c
10005659:	5b                   	pop    ebx
1000565a:	5e                   	pop    esi
1000565b:	5f                   	pop    edi
1000565c:	5d                   	pop    ebp
1000565d:	c3                   	ret    

1000565e <check_ihdr.part.13>:
1000565e:	80 78 09 06          	cmp    BYTE PTR [eax+0x9],0x6
10005662:	77 7b                	ja     100056df <check_ihdr.part.13+0x81>
10005664:	53                   	push   ebx
10005665:	0f b6 50 09          	movzx  edx,BYTE PTR [eax+0x9]
10005669:	ff 24 95 c0 d4 00 10 	jmp    DWORD PTR [edx*4+0x1000d4c0]	1000566c: R_386_32	.text
10005670:	8a 48 08             	mov    cl,BYTE PTR [eax+0x8]
10005673:	ba 09 00 00 00       	mov    edx,0x9
10005678:	80 f9 10             	cmp    cl,0x10
1000567b:	77 5e                	ja     100056db <check_ihdr.part.13+0x7d>
1000567d:	bb 16 01 01 00       	mov    ebx,0x10116
10005682:	0f a3 cb             	bt     ebx,ecx
10005685:	72 2c                	jb     100056b3 <check_ihdr.part.13+0x55>
10005687:	eb 52                	jmp    100056db <check_ihdr.part.13+0x7d>
10005689:	8a 58 08             	mov    bl,BYTE PTR [eax+0x8]
1000568c:	8d 4b f8             	lea    ecx,[ebx-0x8]
1000568f:	ba 09 00 00 00       	mov    edx,0x9
10005694:	80 e1 f7             	and    cl,0xf7
10005697:	74 1a                	je     100056b3 <check_ihdr.part.13+0x55>
10005699:	eb 40                	jmp    100056db <check_ihdr.part.13+0x7d>
1000569b:	8a 50 08             	mov    dl,BYTE PTR [eax+0x8]
1000569e:	8d 4a fc             	lea    ecx,[edx-0x4]
100056a1:	80 e1 fb             	and    cl,0xfb
100056a4:	74 0d                	je     100056b3 <check_ihdr.part.13+0x55>
100056a6:	8d 4a ff             	lea    ecx,[edx-0x1]
100056a9:	ba 09 00 00 00       	mov    edx,0x9
100056ae:	80 f9 01             	cmp    cl,0x1
100056b1:	77 28                	ja     100056db <check_ihdr.part.13+0x7d>
100056b3:	ba 0b 00 00 00       	mov    edx,0xb
100056b8:	80 78 0a 00          	cmp    BYTE PTR [eax+0xa],0x0
100056bc:	75 1d                	jne    100056db <check_ihdr.part.13+0x7d>
100056be:	ba 0c 00 00 00       	mov    edx,0xc
100056c3:	80 78 0b 00          	cmp    BYTE PTR [eax+0xb],0x0
100056c7:	75 12                	jne    100056db <check_ihdr.part.13+0x7d>
100056c9:	80 78 0c 02          	cmp    BYTE PTR [eax+0xc],0x2
100056cd:	19 d2                	sbb    edx,edx
100056cf:	f7 d2                	not    edx
100056d1:	83 e2 0d             	and    edx,0xd
100056d4:	eb 05                	jmp    100056db <check_ihdr.part.13+0x7d>
100056d6:	ba 0a 00 00 00       	mov    edx,0xa
100056db:	89 d0                	mov    eax,edx
100056dd:	5b                   	pop    ebx
100056de:	c3                   	ret    
100056df:	ba 0a 00 00 00       	mov    edx,0xa
100056e4:	89 d0                	mov    eax,edx
100056e6:	c3                   	ret    

100056e7 <check_plte>:
100056e7:	85 c0                	test   eax,eax
100056e9:	74 30                	je     1000571b <check_plte+0x34>
100056eb:	53                   	push   ebx
100056ec:	8b 18                	mov    ebx,DWORD PTR [eax]
100056ee:	8d 4b ff             	lea    ecx,[ebx-0x1]
100056f1:	b8 01 00 00 00       	mov    eax,0x1
100056f6:	81 f9 ff 00 00 00    	cmp    ecx,0xff
100056fc:	77 23                	ja     10005721 <check_plte+0x3a>
100056fe:	31 c0                	xor    eax,eax
10005700:	80 7a 09 03          	cmp    BYTE PTR [edx+0x9],0x3
10005704:	75 1b                	jne    10005721 <check_plte+0x3a>
10005706:	0f b6 4a 08          	movzx  ecx,BYTE PTR [edx+0x8]
1000570a:	b8 01 00 00 00       	mov    eax,0x1
1000570f:	d3 e0                	shl    eax,cl
10005711:	39 c3                	cmp    ebx,eax
10005713:	0f 97 c0             	seta   al
10005716:	0f b6 c0             	movzx  eax,al
10005719:	eb 06                	jmp    10005721 <check_plte+0x3a>
1000571b:	b8 01 00 00 00       	mov    eax,0x1
10005720:	c3                   	ret    
10005721:	5b                   	pop    ebx
10005722:	c3                   	ret    

10005723 <check_sbit.part.15>:
10005723:	57                   	push   edi
10005724:	56                   	push   esi
10005725:	53                   	push   ebx
10005726:	51                   	push   ecx
10005727:	89 d7                	mov    edi,edx
10005729:	8a 4a 09             	mov    cl,BYTE PTR [edx+0x9]
1000572c:	84 c9                	test   cl,cl
1000572e:	75 1c                	jne    1000574c <check_sbit.part.15+0x29>
10005730:	8a 00                	mov    al,BYTE PTR [eax]
10005732:	be 29 00 00 00       	mov    esi,0x29
10005737:	84 c0                	test   al,al
10005739:	0f 84 d5 00 00 00    	je     10005814 <check_sbit.part.15+0xf1>
1000573f:	38 42 08             	cmp    BYTE PTR [edx+0x8],al
10005742:	19 f6                	sbb    esi,esi
10005744:	83 e6 29             	and    esi,0x29
10005747:	e9 c8 00 00 00       	jmp    10005814 <check_sbit.part.15+0xf1>
1000574c:	8d 51 fe             	lea    edx,[ecx-0x2]
1000574f:	80 fa 01             	cmp    dl,0x1
10005752:	77 4a                	ja     1000579e <check_sbit.part.15+0x7b>
10005754:	8a 58 01             	mov    bl,BYTE PTR [eax+0x1]
10005757:	88 5c 24 02          	mov    BYTE PTR [esp+0x2],bl
1000575b:	be 29 00 00 00       	mov    esi,0x29
10005760:	84 db                	test   bl,bl
10005762:	0f 84 ac 00 00 00    	je     10005814 <check_sbit.part.15+0xf1>
10005768:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
1000576b:	84 d2                	test   dl,dl
1000576d:	0f 84 a1 00 00 00    	je     10005814 <check_sbit.part.15+0xf1>
10005773:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
10005776:	84 c0                	test   al,al
10005778:	0f 84 96 00 00 00    	je     10005814 <check_sbit.part.15+0xf1>
1000577e:	b3 08                	mov    bl,0x8
10005780:	80 f9 03             	cmp    cl,0x3
10005783:	74 03                	je     10005788 <check_sbit.part.15+0x65>
10005785:	8a 5f 08             	mov    bl,BYTE PTR [edi+0x8]
10005788:	38 5c 24 02          	cmp    BYTE PTR [esp+0x2],bl
1000578c:	0f 97 c1             	seta   cl
1000578f:	38 da                	cmp    dl,bl
10005791:	0f 97 c2             	seta   dl
10005794:	08 d1                	or     cl,dl
10005796:	75 77                	jne    1000580f <check_sbit.part.15+0xec>
10005798:	31 f6                	xor    esi,esi
1000579a:	38 d8                	cmp    al,bl
1000579c:	eb 6f                	jmp    1000580d <check_sbit.part.15+0xea>
1000579e:	80 f9 04             	cmp    cl,0x4
100057a1:	75 1f                	jne    100057c2 <check_sbit.part.15+0x9f>
100057a3:	8a 10                	mov    dl,BYTE PTR [eax]
100057a5:	be 29 00 00 00       	mov    esi,0x29
100057aa:	84 d2                	test   dl,dl
100057ac:	74 66                	je     10005814 <check_sbit.part.15+0xf1>
100057ae:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
100057b1:	84 c0                	test   al,al
100057b3:	74 5f                	je     10005814 <check_sbit.part.15+0xf1>
100057b5:	8a 4f 08             	mov    cl,BYTE PTR [edi+0x8]
100057b8:	38 ca                	cmp    dl,cl
100057ba:	77 53                	ja     1000580f <check_sbit.part.15+0xec>
100057bc:	31 f6                	xor    esi,esi
100057be:	38 c8                	cmp    al,cl
100057c0:	eb 4b                	jmp    1000580d <check_sbit.part.15+0xea>
100057c2:	31 f6                	xor    esi,esi
100057c4:	80 f9 06             	cmp    cl,0x6
100057c7:	75 4b                	jne    10005814 <check_sbit.part.15+0xf1>
100057c9:	8a 58 01             	mov    bl,BYTE PTR [eax+0x1]
100057cc:	84 db                	test   bl,bl
100057ce:	74 3f                	je     1000580f <check_sbit.part.15+0xec>
100057d0:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
100057d3:	88 54 24 02          	mov    BYTE PTR [esp+0x2],dl
100057d7:	84 d2                	test   dl,dl
100057d9:	74 34                	je     1000580f <check_sbit.part.15+0xec>
100057db:	8a 48 03             	mov    cl,BYTE PTR [eax+0x3]
100057de:	84 c9                	test   cl,cl
100057e0:	74 2d                	je     1000580f <check_sbit.part.15+0xec>
100057e2:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
100057e5:	88 44 24 03          	mov    BYTE PTR [esp+0x3],al
100057e9:	84 c0                	test   al,al
100057eb:	74 22                	je     1000580f <check_sbit.part.15+0xec>
100057ed:	8a 57 08             	mov    dl,BYTE PTR [edi+0x8]
100057f0:	38 54 24 02          	cmp    BYTE PTR [esp+0x2],dl
100057f4:	0f 97 c0             	seta   al
100057f7:	89 c7                	mov    edi,eax
100057f9:	38 d3                	cmp    bl,dl
100057fb:	0f 97 c3             	seta   bl
100057fe:	09 fb                	or     ebx,edi
10005800:	38 d1                	cmp    cl,dl
10005802:	0f 97 c1             	seta   cl
10005805:	08 cb                	or     bl,cl
10005807:	75 06                	jne    1000580f <check_sbit.part.15+0xec>
10005809:	38 54 24 03          	cmp    BYTE PTR [esp+0x3],dl
1000580d:	76 05                	jbe    10005814 <check_sbit.part.15+0xf1>
1000580f:	be 29 00 00 00       	mov    esi,0x29
10005814:	89 f0                	mov    eax,esi
10005816:	5a                   	pop    edx
10005817:	5b                   	pop    ebx
10005818:	5e                   	pop    esi
10005819:	5f                   	pop    edi
1000581a:	c3                   	ret    

1000581b <check_phys>:
1000581b:	ba 01 00 00 00       	mov    edx,0x1
10005820:	85 c0                	test   eax,eax
10005822:	74 19                	je     1000583d <check_phys+0x22>
10005824:	ba 37 00 00 00       	mov    edx,0x37
10005829:	80 78 08 01          	cmp    BYTE PTR [eax+0x8],0x1
1000582d:	77 0e                	ja     1000583d <check_phys+0x22>
1000582f:	83 38 00             	cmp    DWORD PTR [eax],0x0
10005832:	78 09                	js     1000583d <check_phys+0x22>
10005834:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10005837:	c1 fa 1f             	sar    edx,0x1f
1000583a:	83 e2 37             	and    edx,0x37
1000583d:	89 d0                	mov    eax,edx
1000583f:	c3                   	ret    

10005840 <check_time>:
10005840:	ba 01 00 00 00       	mov    edx,0x1
10005845:	85 c0                	test   eax,eax
10005847:	74 2c                	je     10005875 <check_time+0x35>
10005849:	8a 48 02             	mov    cl,BYTE PTR [eax+0x2]
1000584c:	49                   	dec    ecx
1000584d:	ba 01 00 00 00       	mov    edx,0x1
10005852:	80 f9 0b             	cmp    cl,0xb
10005855:	77 1e                	ja     10005875 <check_time+0x35>
10005857:	8a 48 03             	mov    cl,BYTE PTR [eax+0x3]
1000585a:	49                   	dec    ecx
1000585b:	80 f9 1e             	cmp    cl,0x1e
1000585e:	77 15                	ja     10005875 <check_time+0x35>
10005860:	80 78 04 17          	cmp    BYTE PTR [eax+0x4],0x17
10005864:	77 0f                	ja     10005875 <check_time+0x35>
10005866:	80 78 05 3b          	cmp    BYTE PTR [eax+0x5],0x3b
1000586a:	77 09                	ja     10005875 <check_time+0x35>
1000586c:	31 d2                	xor    edx,edx
1000586e:	80 78 06 3c          	cmp    BYTE PTR [eax+0x6],0x3c
10005872:	0f 97 c2             	seta   dl
10005875:	89 d0                	mov    eax,edx
10005877:	c3                   	ret    

10005878 <check_png_text>:
10005878:	85 c0                	test   eax,eax
1000587a:	74 33                	je     100058af <check_png_text+0x37>
1000587c:	85 d2                	test   edx,edx
1000587e:	74 2f                	je     100058af <check_png_text+0x37>
10005880:	56                   	push   esi
10005881:	53                   	push   ebx
10005882:	51                   	push   ecx
10005883:	89 c6                	mov    esi,eax
10005885:	31 db                	xor    ebx,ebx
10005887:	8a 0c 1e             	mov    cl,BYTE PTR [esi+ebx*1]
1000588a:	80 f9 a0             	cmp    cl,0xa0
1000588d:	0f 97 c0             	seta   al
10005890:	80 f9 0a             	cmp    cl,0xa
10005893:	0f 94 44 24 03       	sete   BYTE PTR [esp+0x3]
10005898:	0a 44 24 03          	or     al,BYTE PTR [esp+0x3]
1000589c:	75 08                	jne    100058a6 <check_png_text+0x2e>
1000589e:	83 e9 20             	sub    ecx,0x20
100058a1:	80 f9 5e             	cmp    cl,0x5e
100058a4:	77 0f                	ja     100058b5 <check_png_text+0x3d>
100058a6:	43                   	inc    ebx
100058a7:	39 da                	cmp    edx,ebx
100058a9:	75 dc                	jne    10005887 <check_png_text+0xf>
100058ab:	31 c0                	xor    eax,eax
100058ad:	eb 0b                	jmp    100058ba <check_png_text+0x42>
100058af:	b8 01 00 00 00       	mov    eax,0x1
100058b4:	c3                   	ret    
100058b5:	b8 01 00 00 00       	mov    eax,0x1
100058ba:	5a                   	pop    edx
100058bb:	5b                   	pop    ebx
100058bc:	5e                   	pop    esi
100058bd:	c3                   	ret    

100058be <read_chunk_bytes>:
100058be:	57                   	push   edi
100058bf:	56                   	push   esi
100058c0:	53                   	push   ebx
100058c1:	85 c0                	test   eax,eax
100058c3:	74 42                	je     10005907 <read_chunk_bytes+0x49>
100058c5:	8b 48 50             	mov    ecx,DWORD PTR [eax+0x50]
100058c8:	39 d1                	cmp    ecx,edx
100058ca:	0f 92 c3             	setb   bl
100058cd:	85 c9                	test   ecx,ecx
100058cf:	0f 94 c1             	sete   cl
100058d2:	08 cb                	or     bl,cl
100058d4:	75 31                	jne    10005907 <read_chunk_bytes+0x49>
100058d6:	85 d2                	test   edx,edx
100058d8:	74 2d                	je     10005907 <read_chunk_bytes+0x49>
100058da:	89 d6                	mov    esi,edx
100058dc:	89 c3                	mov    ebx,eax
100058de:	e8 bf fb ff ff       	call   100054a2 <read_data>
100058e3:	89 c7                	mov    edi,eax
100058e5:	85 c0                	test   eax,eax
100058e7:	75 23                	jne    1000590c <read_chunk_bytes+0x4e>
100058e9:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
100058ed:	75 13                	jne    10005902 <read_chunk_bytes+0x44>
100058ef:	50                   	push   eax
100058f0:	56                   	push   esi
100058f1:	ff 73 10             	push   DWORD PTR [ebx+0x10]
100058f4:	ff 73 54             	push   DWORD PTR [ebx+0x54]
100058f7:	e8 fc ff ff ff       	call   100058f8 <read_chunk_bytes+0x3a>	100058f8: R_386_PC32	crc32
100058fc:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100058ff:	83 c4 10             	add    esp,0x10
10005902:	29 73 50             	sub    DWORD PTR [ebx+0x50],esi
10005905:	eb 05                	jmp    1000590c <read_chunk_bytes+0x4e>
10005907:	bf 50 00 00 00       	mov    edi,0x50
1000590c:	89 f8                	mov    eax,edi
1000590e:	5b                   	pop    ebx
1000590f:	5e                   	pop    esi
10005910:	5f                   	pop    edi
10005911:	c3                   	ret    

10005912 <read_scanline_bytes>:
10005912:	85 d2                	test   edx,edx
10005914:	0f 84 c4 00 00 00    	je     100059de <read_scanline_bytes+0xcc>
1000591a:	85 c0                	test   eax,eax
1000591c:	0f 84 bc 00 00 00    	je     100059de <read_scanline_bytes+0xcc>
10005922:	55                   	push   ebp
10005923:	57                   	push   edi
10005924:	56                   	push   esi
10005925:	53                   	push   ebx
10005926:	83 ec 0c             	sub    esp,0xc
10005929:	89 c3                	mov    ebx,eax
1000592b:	8d b8 50 09 00 00    	lea    edi,[eax+0x950]
10005931:	89 88 60 09 00 00    	mov    DWORD PTR [eax+0x960],ecx
10005937:	89 90 5c 09 00 00    	mov    DWORD PTR [eax+0x95c],edx
1000593d:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
10005944:	0f 84 90 00 00 00    	je     100059da <read_scanline_bytes+0xc8>
1000594a:	52                   	push   edx
1000594b:	52                   	push   edx
1000594c:	6a 00                	push   0x0
1000594e:	57                   	push   edi
1000594f:	e8 fc ff ff ff       	call   10005950 <read_scanline_bytes+0x3e>	10005950: R_386_PC32	inflate
10005954:	83 c4 10             	add    esp,0x10
10005957:	85 c0                	test   eax,eax
10005959:	74 e2                	je     1000593d <read_scanline_bytes+0x2b>
1000595b:	83 f8 01             	cmp    eax,0x1
1000595e:	75 10                	jne    10005970 <read_scanline_bytes+0x5e>
10005960:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
10005967:	74 d4                	je     1000593d <read_scanline_bytes+0x2b>
10005969:	b8 3e 00 00 00       	mov    eax,0x3e
1000596e:	eb 79                	jmp    100059e9 <read_scanline_bytes+0xd7>
10005970:	83 f8 fb             	cmp    eax,0xfffffffb
10005973:	75 6f                	jne    100059e4 <read_scanline_bytes+0xd2>
10005975:	8d 73 48             	lea    esi,[ebx+0x48]
10005978:	50                   	push   eax
10005979:	6a 04                	push   0x4
1000597b:	68 6c d7 00 10       	push   0x1000d76c	1000597c: R_386_32	.text
10005980:	56                   	push   esi
10005981:	e8 fc ff ff ff       	call   10005982 <read_scanline_bytes+0x70>	10005982: R_386_PC32	memcmp
10005986:	83 c4 10             	add    esp,0x10
10005989:	85 c0                	test   eax,eax
1000598b:	75 dc                	jne    10005969 <read_scanline_bytes+0x57>
1000598d:	8b 6b 50             	mov    ebp,DWORD PTR [ebx+0x50]
10005990:	85 ed                	test   ebp,ebp
10005992:	75 0d                	jne    100059a1 <read_scanline_bytes+0x8f>
10005994:	89 d8                	mov    eax,ebx
10005996:	e8 da fb ff ff       	call   10005575 <read_header>
1000599b:	85 c0                	test   eax,eax
1000599d:	74 d9                	je     10005978 <read_scanline_bytes+0x66>
1000599f:	eb 48                	jmp    100059e9 <read_scanline_bytes+0xd7>
100059a1:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
100059a5:	74 0f                	je     100059b6 <read_scanline_bytes+0xa4>
100059a7:	81 fd ff 1f 00 00    	cmp    ebp,0x1fff
100059ad:	76 0a                	jbe    100059b9 <read_scanline_bytes+0xa7>
100059af:	bd 00 20 00 00       	mov    ebp,0x2000
100059b4:	eb 03                	jmp    100059b9 <read_scanline_bytes+0xa7>
100059b6:	8b 6b 44             	mov    ebp,DWORD PTR [ebx+0x44]
100059b9:	89 ea                	mov    edx,ebp
100059bb:	89 d8                	mov    eax,ebx
100059bd:	e8 fc fe ff ff       	call   100058be <read_chunk_bytes>
100059c2:	85 c0                	test   eax,eax
100059c4:	75 23                	jne    100059e9 <read_scanline_bytes+0xd7>
100059c6:	89 ab 54 09 00 00    	mov    DWORD PTR [ebx+0x954],ebp
100059cc:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100059cf:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
100059d5:	e9 63 ff ff ff       	jmp    1000593d <read_scanline_bytes+0x2b>
100059da:	31 c0                	xor    eax,eax
100059dc:	eb 0b                	jmp    100059e9 <read_scanline_bytes+0xd7>
100059de:	b8 50 00 00 00       	mov    eax,0x50
100059e3:	c3                   	ret    
100059e4:	b8 3f 00 00 00       	mov    eax,0x3f
100059e9:	83 c4 0c             	add    esp,0xc
100059ec:	5b                   	pop    ebx
100059ed:	5e                   	pop    esi
100059ee:	5f                   	pop    edi
100059ef:	5d                   	pop    ebp
100059f0:	c3                   	ret    

100059f1 <discard_chunk_bytes>:
100059f1:	85 c0                	test   eax,eax
100059f3:	74 3f                	je     10005a34 <discard_chunk_bytes+0x43>
100059f5:	57                   	push   edi
100059f6:	56                   	push   esi
100059f7:	53                   	push   ebx
100059f8:	89 d3                	mov    ebx,edx
100059fa:	85 d2                	test   edx,edx
100059fc:	75 04                	jne    10005a02 <discard_chunk_bytes+0x11>
100059fe:	31 c0                	xor    eax,eax
10005a00:	eb 38                	jmp    10005a3a <discard_chunk_bytes+0x49>
10005a02:	89 c6                	mov    esi,eax
10005a04:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005a08:	74 22                	je     10005a2c <discard_chunk_bytes+0x3b>
10005a0a:	bf 00 20 00 00       	mov    edi,0x2000
10005a0f:	81 fb ff 1f 00 00    	cmp    ebx,0x1fff
10005a15:	77 02                	ja     10005a19 <discard_chunk_bytes+0x28>
10005a17:	89 df                	mov    edi,ebx
10005a19:	89 fa                	mov    edx,edi
10005a1b:	89 f0                	mov    eax,esi
10005a1d:	e8 9c fe ff ff       	call   100058be <read_chunk_bytes>
10005a22:	85 c0                	test   eax,eax
10005a24:	75 14                	jne    10005a3a <discard_chunk_bytes+0x49>
10005a26:	29 fb                	sub    ebx,edi
10005a28:	75 e0                	jne    10005a0a <discard_chunk_bytes+0x19>
10005a2a:	eb d2                	jmp    100059fe <discard_chunk_bytes+0xd>
10005a2c:	5b                   	pop    ebx
10005a2d:	5e                   	pop    esi
10005a2e:	5f                   	pop    edi
10005a2f:	e9 8a fe ff ff       	jmp    100058be <read_chunk_bytes>
10005a34:	b8 50 00 00 00       	mov    eax,0x50
10005a39:	c3                   	ret    
10005a3a:	5b                   	pop    ebx
10005a3b:	5e                   	pop    esi
10005a3c:	5f                   	pop    edi
10005a3d:	c3                   	ret    

10005a3e <read_chunk_bytes2>:
10005a3e:	55                   	push   ebp
10005a3f:	57                   	push   edi
10005a40:	56                   	push   esi
10005a41:	53                   	push   ebx
10005a42:	83 ec 1c             	sub    esp,0x1c
10005a45:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
10005a49:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
10005a4d:	85 c0                	test   eax,eax
10005a4f:	0f 84 ad 00 00 00    	je     10005b02 <read_chunk_bytes2+0xc4>
10005a55:	89 c3                	mov    ebx,eax
10005a57:	8b 40 50             	mov    eax,DWORD PTR [eax+0x50]
10005a5a:	39 c8                	cmp    eax,ecx
10005a5c:	0f 92 c1             	setb   cl
10005a5f:	85 c0                	test   eax,eax
10005a61:	0f 94 c0             	sete   al
10005a64:	08 c1                	or     cl,al
10005a66:	0f 85 96 00 00 00    	jne    10005b02 <read_chunk_bytes2+0xc4>
10005a6c:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
10005a71:	0f 84 8b 00 00 00    	je     10005b02 <read_chunk_bytes2+0xc4>
10005a77:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005a7b:	74 0f                	je     10005a8c <read_chunk_bytes2+0x4e>
10005a7d:	b8 00 20 00 00       	mov    eax,0x2000
10005a82:	81 7c 24 04 00 20 00 00 	cmp    DWORD PTR [esp+0x4],0x2000
10005a8a:	77 04                	ja     10005a90 <read_chunk_bytes2+0x52>
10005a8c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10005a90:	89 c5                	mov    ebp,eax
10005a92:	3b 44 24 04          	cmp    eax,DWORD PTR [esp+0x4]
10005a96:	76 04                	jbe    10005a9c <read_chunk_bytes2+0x5e>
10005a98:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
10005a9c:	55                   	push   ebp
10005a9d:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10005aa1:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
10005aa4:	53                   	push   ebx
10005aa5:	ff 53 14             	call   DWORD PTR [ebx+0x14]
10005aa8:	89 c2                	mov    edx,eax
10005aaa:	83 c4 10             	add    esp,0x10
10005aad:	85 c0                	test   eax,eax
10005aaf:	75 5d                	jne    10005b0e <read_chunk_bytes2+0xd0>
10005ab1:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005ab5:	75 0b                	jne    10005ac2 <read_chunk_bytes2+0x84>
10005ab7:	8b 73 10             	mov    esi,DWORD PTR [ebx+0x10]
10005aba:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10005abe:	89 e9                	mov    ecx,ebp
10005ac0:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005ac2:	89 e8                	mov    eax,ebp
10005ac4:	03 43 04             	add    eax,DWORD PTR [ebx+0x4]
10005ac7:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10005aca:	72 3d                	jb     10005b09 <read_chunk_bytes2+0xcb>
10005acc:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
10005ad0:	75 1c                	jne    10005aee <read_chunk_bytes2+0xb0>
10005ad2:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10005ad6:	50                   	push   eax
10005ad7:	55                   	push   ebp
10005ad8:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10005adc:	ff 73 54             	push   DWORD PTR [ebx+0x54]
10005adf:	e8 fc ff ff ff       	call   10005ae0 <read_chunk_bytes2+0xa2>	10005ae0: R_386_PC32	crc32
10005ae4:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
10005ae7:	83 c4 10             	add    esp,0x10
10005aea:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10005aee:	29 6b 50             	sub    DWORD PTR [ebx+0x50],ebp
10005af1:	01 6c 24 08          	add    DWORD PTR [esp+0x8],ebp
10005af5:	b8 00 20 00 00       	mov    eax,0x2000
10005afa:	29 6c 24 04          	sub    DWORD PTR [esp+0x4],ebp
10005afe:	75 90                	jne    10005a90 <read_chunk_bytes2+0x52>
10005b00:	eb 0c                	jmp    10005b0e <read_chunk_bytes2+0xd0>
10005b02:	ba 50 00 00 00       	mov    edx,0x50
10005b07:	eb 05                	jmp    10005b0e <read_chunk_bytes2+0xd0>
10005b09:	ba 03 00 00 00       	mov    edx,0x3
10005b0e:	89 d0                	mov    eax,edx
10005b10:	83 c4 1c             	add    esp,0x1c
10005b13:	5b                   	pop    ebx
10005b14:	5e                   	pop    esi
10005b15:	5f                   	pop    edi
10005b16:	5d                   	pop    ebp
10005b17:	c3                   	ret    

10005b18 <file_read_fn>:
10005b18:	53                   	push   ebx
10005b19:	83 ec 08             	sub    esp,0x8
10005b1c:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10005b20:	53                   	push   ebx
10005b21:	6a 01                	push   0x1
10005b23:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10005b27:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10005b2b:	e8 fc ff ff ff       	call   10005b2c <file_read_fn+0x14>	10005b2c: R_386_PC32	fread
10005b30:	83 c4 10             	add    esp,0x10
10005b33:	48                   	dec    eax
10005b34:	74 0f                	je     10005b45 <file_read_fn+0x2d>
10005b36:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10005b39:	83 e0 20             	and    eax,0x20
10005b3c:	66 83 f8 01          	cmp    ax,0x1
10005b40:	19 d2                	sbb    edx,edx
10005b42:	4a                   	dec    edx
10005b43:	eb 02                	jmp    10005b47 <file_read_fn+0x2f>
10005b45:	31 d2                	xor    edx,edx
10005b47:	89 d0                	mov    eax,edx
10005b49:	83 c4 08             	add    esp,0x8
10005b4c:	5b                   	pop    ebx
10005b4d:	c3                   	ret    

10005b4e <require_bytes>:
10005b4e:	85 c0                	test   eax,eax
10005b50:	0f 84 9f 00 00 00    	je     10005bf5 <require_bytes+0xa7>
10005b56:	57                   	push   edi
10005b57:	56                   	push   esi
10005b58:	53                   	push   ebx
10005b59:	89 d6                	mov    esi,edx
10005b5b:	89 c3                	mov    ebx,eax
10005b5d:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005b61:	74 4a                	je     10005bad <require_bytes+0x5f>
10005b63:	8b 50 08             	mov    edx,DWORD PTR [eax+0x8]
10005b66:	31 c0                	xor    eax,eax
10005b68:	39 f2                	cmp    edx,esi
10005b6a:	0f 83 8b 00 00 00    	jae    10005bfb <require_bytes+0xad>
10005b70:	81 fa 0b 20 00 00    	cmp    edx,0x200b
10005b76:	77 0d                	ja     10005b85 <require_bytes+0x37>
10005b78:	b8 0c 20 00 00       	mov    eax,0x200c
10005b7d:	81 fe 0c 20 00 00    	cmp    esi,0x200c
10005b83:	76 02                	jbe    10005b87 <require_bytes+0x39>
10005b85:	89 f0                	mov    eax,esi
10005b87:	52                   	push   edx
10005b88:	52                   	push   edx
10005b89:	50                   	push   eax
10005b8a:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10005b8d:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005b90:	83 c4 10             	add    esp,0x10
10005b93:	85 c0                	test   eax,eax
10005b95:	75 0e                	jne    10005ba5 <require_bytes+0x57>
10005b97:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005b9e:	b8 02 00 00 00       	mov    eax,0x2
10005ba3:	eb 56                	jmp    10005bfb <require_bytes+0xad>
10005ba5:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10005ba8:	89 73 08             	mov    DWORD PTR [ebx+0x8],esi
10005bab:	eb 41                	jmp    10005bee <require_bytes+0xa0>
10005bad:	b8 03 00 00 00       	mov    eax,0x3
10005bb2:	03 73 3c             	add    esi,DWORD PTR [ebx+0x3c]
10005bb5:	72 44                	jb     10005bfb <require_bytes+0xad>
10005bb7:	8b 7b 38             	mov    edi,DWORD PTR [ebx+0x38]
10005bba:	31 c0                	xor    eax,eax
10005bbc:	39 fe                	cmp    esi,edi
10005bbe:	76 3b                	jbe    10005bfb <require_bytes+0xad>
10005bc0:	81 ff 00 40 00 00    	cmp    edi,0x4000
10005bc6:	73 05                	jae    10005bcd <require_bytes+0x7f>
10005bc8:	bf 00 40 00 00       	mov    edi,0x4000
10005bcd:	39 fe                	cmp    esi,edi
10005bcf:	76 04                	jbe    10005bd5 <require_bytes+0x87>
10005bd1:	01 ff                	add    edi,edi
10005bd3:	eb f8                	jmp    10005bcd <require_bytes+0x7f>
10005bd5:	50                   	push   eax
10005bd6:	50                   	push   eax
10005bd7:	57                   	push   edi
10005bd8:	ff 73 30             	push   DWORD PTR [ebx+0x30]
10005bdb:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005bde:	83 c4 10             	add    esp,0x10
10005be1:	85 c0                	test   eax,eax
10005be3:	74 b2                	je     10005b97 <require_bytes+0x49>
10005be5:	89 43 30             	mov    DWORD PTR [ebx+0x30],eax
10005be8:	89 7b 38             	mov    DWORD PTR [ebx+0x38],edi
10005beb:	03 43 3c             	add    eax,DWORD PTR [ebx+0x3c]
10005bee:	89 43 34             	mov    DWORD PTR [ebx+0x34],eax
10005bf1:	31 c0                	xor    eax,eax
10005bf3:	eb 06                	jmp    10005bfb <require_bytes+0xad>
10005bf5:	b8 50 00 00 00       	mov    eax,0x50
10005bfa:	c3                   	ret    
10005bfb:	5b                   	pop    ebx
10005bfc:	5e                   	pop    esi
10005bfd:	5f                   	pop    edi
10005bfe:	c3                   	ret    

10005bff <write_data.part.19>:
10005bff:	55                   	push   ebp
10005c00:	57                   	push   edi
10005c01:	56                   	push   esi
10005c02:	53                   	push   ebx
10005c03:	83 ec 0c             	sub    esp,0xc
10005c06:	89 c3                	mov    ebx,eax
10005c08:	89 d6                	mov    esi,edx
10005c0a:	89 cd                	mov    ebp,ecx
10005c0c:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005c10:	74 33                	je     10005c45 <write_data.part.19+0x46>
10005c12:	b8 50 00 00 00       	mov    eax,0x50
10005c17:	81 f9 00 20 00 00    	cmp    ecx,0x2000
10005c1d:	77 54                	ja     10005c73 <write_data.part.19+0x74>
10005c1f:	51                   	push   ecx
10005c20:	52                   	push   edx
10005c21:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
10005c24:	53                   	push   ebx
10005c25:	ff 53 18             	call   DWORD PTR [ebx+0x18]
10005c28:	83 c4 10             	add    esp,0x10
10005c2b:	85 c0                	test   eax,eax
10005c2d:	74 39                	je     10005c68 <write_data.part.19+0x69>
10005c2f:	8d 50 02             	lea    edx,[eax+0x2]
10005c32:	83 fa 02             	cmp    edx,0x2
10005c35:	76 05                	jbe    10005c3c <write_data.part.19+0x3d>
10005c37:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10005c3c:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005c43:	eb 2e                	jmp    10005c73 <write_data.part.19+0x74>
10005c45:	89 ca                	mov    edx,ecx
10005c47:	e8 02 ff ff ff       	call   10005b4e <require_bytes>
10005c4c:	85 c0                	test   eax,eax
10005c4e:	74 0e                	je     10005c5e <write_data.part.19+0x5f>
10005c50:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005c57:	b8 02 00 00 00       	mov    eax,0x2
10005c5c:	eb 15                	jmp    10005c73 <write_data.part.19+0x74>
10005c5e:	8b 7b 34             	mov    edi,DWORD PTR [ebx+0x34]
10005c61:	89 e9                	mov    ecx,ebp
10005c63:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005c65:	01 6b 34             	add    DWORD PTR [ebx+0x34],ebp
10005c68:	03 6b 3c             	add    ebp,DWORD PTR [ebx+0x3c]
10005c6b:	89 6b 3c             	mov    DWORD PTR [ebx+0x3c],ebp
10005c6e:	19 c0                	sbb    eax,eax
10005c70:	83 e0 03             	and    eax,0x3
10005c73:	83 c4 0c             	add    esp,0xc
10005c76:	5b                   	pop    ebx
10005c77:	5e                   	pop    esi
10005c78:	5f                   	pop    edi
10005c79:	5d                   	pop    ebp
10005c7a:	c3                   	ret    

10005c7b <write_header>:
10005c7b:	55                   	push   ebp
10005c7c:	57                   	push   edi
10005c7d:	56                   	push   esi
10005c7e:	53                   	push   ebx
10005c7f:	83 ec 0c             	sub    esp,0xc
10005c82:	bd 50 00 00 00       	mov    ebp,0x50
10005c87:	85 c0                	test   eax,eax
10005c89:	74 62                	je     10005ced <write_header+0x72>
10005c8b:	85 d2                	test   edx,edx
10005c8d:	74 5e                	je     10005ced <write_header+0x72>
10005c8f:	85 c9                	test   ecx,ecx
10005c91:	78 5a                	js     10005ced <write_header+0x72>
10005c93:	89 ce                	mov    esi,ecx
10005c95:	89 d7                	mov    edi,edx
10005c97:	89 c3                	mov    ebx,eax
10005c99:	8d 51 0c             	lea    edx,[ecx+0xc]
10005c9c:	e8 ad fe ff ff       	call   10005b4e <require_bytes>
10005ca1:	89 c5                	mov    ebp,eax
10005ca3:	85 c0                	test   eax,eax
10005ca5:	75 46                	jne    10005ced <write_header+0x72>
10005ca7:	50                   	push   eax
10005ca8:	6a 00                	push   0x0
10005caa:	6a 00                	push   0x0
10005cac:	6a 00                	push   0x0
10005cae:	e8 fc ff ff ff       	call   10005caf <write_header+0x34>	10005caf: R_386_PC32	crc32
10005cb3:	83 c4 0c             	add    esp,0xc
10005cb6:	6a 04                	push   0x4
10005cb8:	57                   	push   edi
10005cb9:	50                   	push   eax
10005cba:	e8 fc ff ff ff       	call   10005cbb <write_header+0x40>	10005cbb: R_386_PC32	crc32
10005cbf:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
10005cc2:	8b 07                	mov    eax,DWORD PTR [edi]
10005cc4:	89 43 48             	mov    DWORD PTR [ebx+0x48],eax
10005cc7:	89 73 44             	mov    DWORD PTR [ebx+0x44],esi
10005cca:	83 c4 10             	add    esp,0x10
10005ccd:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005cd1:	74 0e                	je     10005ce1 <write_header+0x66>
10005cd3:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10005cd6:	83 c0 08             	add    eax,0x8
10005cd9:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10005cdd:	89 06                	mov    DWORD PTR [esi],eax
10005cdf:	eb 0c                	jmp    10005ced <write_header+0x72>
10005ce1:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
10005ce4:	83 c0 08             	add    eax,0x8
10005ce7:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10005ceb:	89 07                	mov    DWORD PTR [edi],eax
10005ced:	89 e8                	mov    eax,ebp
10005cef:	83 c4 0c             	add    esp,0xc
10005cf2:	5b                   	pop    ebx
10005cf3:	5e                   	pop    esi
10005cf4:	5f                   	pop    edi
10005cf5:	5d                   	pop    ebp
10005cf6:	c3                   	ret    

10005cf7 <finish_chunk>:
10005cf7:	85 c0                	test   eax,eax
10005cf9:	0f 84 aa 00 00 00    	je     10005da9 <finish_chunk+0xb2>
10005cff:	55                   	push   ebp
10005d00:	57                   	push   edi
10005d01:	56                   	push   esi
10005d02:	53                   	push   ebx
10005d03:	83 ec 0c             	sub    esp,0xc
10005d06:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005d0a:	74 05                	je     10005d11 <finish_chunk+0x1a>
10005d0c:	8b 48 0c             	mov    ecx,DWORD PTR [eax+0xc]
10005d0f:	eb 03                	jmp    10005d14 <finish_chunk+0x1d>
10005d11:	8b 48 34             	mov    ecx,DWORD PTR [eax+0x34]
10005d14:	8d 71 08             	lea    esi,[ecx+0x8]
10005d17:	89 c3                	mov    ebx,eax
10005d19:	8b 50 44             	mov    edx,DWORD PTR [eax+0x44]
10005d1c:	89 c8                	mov    eax,ecx
10005d1e:	e8 c6 ec ff ff       	call   100049e9 <write_u32>
10005d23:	8b 43 48             	mov    eax,DWORD PTR [ebx+0x48]
10005d26:	89 41 04             	mov    DWORD PTR [ecx+0x4],eax
10005d29:	50                   	push   eax
10005d2a:	ff 73 44             	push   DWORD PTR [ebx+0x44]
10005d2d:	56                   	push   esi
10005d2e:	ff 73 4c             	push   DWORD PTR [ebx+0x4c]
10005d31:	e8 fc ff ff ff       	call   10005d32 <finish_chunk+0x3b>	10005d32: R_386_PC32	crc32
10005d36:	89 c2                	mov    edx,eax
10005d38:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
10005d3b:	8b 43 44             	mov    eax,DWORD PTR [ebx+0x44]
10005d3e:	01 f0                	add    eax,esi
10005d40:	e8 a4 ec ff ff       	call   100049e9 <write_u32>
10005d45:	83 c4 10             	add    esp,0x10
10005d48:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005d4c:	8b 73 44             	mov    esi,DWORD PTR [ebx+0x44]
10005d4f:	74 30                	je     10005d81 <finish_chunk+0x8a>
10005d51:	8b 7b 0c             	mov    edi,DWORD PTR [ebx+0xc]
10005d54:	83 c6 0c             	add    esi,0xc
10005d57:	31 ed                	xor    ebp,ebp
10005d59:	85 f6                	test   esi,esi
10005d5b:	74 48                	je     10005da5 <finish_chunk+0xae>
10005d5d:	01 ef                	add    edi,ebp
10005d5f:	bd 00 20 00 00       	mov    ebp,0x2000
10005d64:	81 fe ff 1f 00 00    	cmp    esi,0x1fff
10005d6a:	77 02                	ja     10005d6e <finish_chunk+0x77>
10005d6c:	89 f5                	mov    ebp,esi
10005d6e:	89 e9                	mov    ecx,ebp
10005d70:	89 fa                	mov    edx,edi
10005d72:	89 d8                	mov    eax,ebx
10005d74:	e8 86 fe ff ff       	call   10005bff <write_data.part.19>
10005d79:	85 c0                	test   eax,eax
10005d7b:	75 32                	jne    10005daf <finish_chunk+0xb8>
10005d7d:	29 ee                	sub    esi,ebp
10005d7f:	eb d8                	jmp    10005d59 <finish_chunk+0x62>
10005d81:	89 f0                	mov    eax,esi
10005d83:	03 43 3c             	add    eax,DWORD PTR [ebx+0x3c]
10005d86:	72 0d                	jb     10005d95 <finish_chunk+0x9e>
10005d88:	83 c0 0c             	add    eax,0xc
10005d8b:	89 43 3c             	mov    DWORD PTR [ebx+0x3c],eax
10005d8e:	83 f8 0b             	cmp    eax,0xb
10005d91:	77 0c                	ja     10005d9f <finish_chunk+0xa8>
10005d93:	eb 03                	jmp    10005d98 <finish_chunk+0xa1>
10005d95:	89 43 3c             	mov    DWORD PTR [ebx+0x3c],eax
10005d98:	b8 03 00 00 00       	mov    eax,0x3
10005d9d:	eb 10                	jmp    10005daf <finish_chunk+0xb8>
10005d9f:	83 c6 0c             	add    esi,0xc
10005da2:	01 73 34             	add    DWORD PTR [ebx+0x34],esi
10005da5:	31 c0                	xor    eax,eax
10005da7:	eb 06                	jmp    10005daf <finish_chunk+0xb8>
10005da9:	b8 50 00 00 00       	mov    eax,0x50
10005dae:	c3                   	ret    
10005daf:	83 c4 0c             	add    esp,0xc
10005db2:	5b                   	pop    ebx
10005db3:	5e                   	pop    esi
10005db4:	5f                   	pop    edi
10005db5:	5d                   	pop    ebp
10005db6:	c3                   	ret    

10005db7 <write_chunk>:
10005db7:	55                   	push   ebp
10005db8:	57                   	push   edi
10005db9:	56                   	push   esi
10005dba:	53                   	push   ebx
10005dbb:	83 ec 1c             	sub    esp,0x1c
10005dbe:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10005dc2:	85 c0                	test   eax,eax
10005dc4:	74 3e                	je     10005e04 <write_chunk+0x4d>
10005dc6:	89 c5                	mov    ebp,eax
10005dc8:	85 c9                	test   ecx,ecx
10005dca:	75 09                	jne    10005dd5 <write_chunk+0x1e>
10005dcc:	b8 50 00 00 00       	mov    eax,0x50
10005dd1:	85 db                	test   ebx,ebx
10005dd3:	75 34                	jne    10005e09 <write_chunk+0x52>
10005dd5:	89 ce                	mov    esi,ecx
10005dd7:	83 ec 0c             	sub    esp,0xc
10005dda:	8d 44 24 18          	lea    eax,[esp+0x18]
10005dde:	50                   	push   eax
10005ddf:	89 d9                	mov    ecx,ebx
10005de1:	89 e8                	mov    eax,ebp
10005de3:	e8 93 fe ff ff       	call   10005c7b <write_header>
10005de8:	83 c4 10             	add    esp,0x10
10005deb:	85 c0                	test   eax,eax
10005ded:	75 1a                	jne    10005e09 <write_chunk+0x52>
10005def:	85 db                	test   ebx,ebx
10005df1:	74 08                	je     10005dfb <write_chunk+0x44>
10005df3:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10005df7:	89 d9                	mov    ecx,ebx
10005df9:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005dfb:	89 e8                	mov    eax,ebp
10005dfd:	e8 f5 fe ff ff       	call   10005cf7 <finish_chunk>
10005e02:	eb 05                	jmp    10005e09 <write_chunk+0x52>
10005e04:	b8 50 00 00 00       	mov    eax,0x50
10005e09:	83 c4 1c             	add    esp,0x1c
10005e0c:	5b                   	pop    ebx
10005e0d:	5e                   	pop    esi
10005e0e:	5f                   	pop    edi
10005e0f:	5d                   	pop    ebp
10005e10:	c3                   	ret    

10005e11 <calculate_subimages>:
10005e11:	85 c0                	test   eax,eax
10005e13:	0f 84 2a 01 00 00    	je     10005f43 <calculate_subimages+0x132>
10005e19:	55                   	push   ebp
10005e1a:	57                   	push   edi
10005e1b:	56                   	push   esi
10005e1c:	53                   	push   ebx
10005e1d:	89 c1                	mov    ecx,eax
10005e1f:	8d b8 e0 08 00 00    	lea    edi,[eax+0x8e0]
10005e25:	8b 90 f0 00 00 00    	mov    edx,DWORD PTR [eax+0xf0]
10005e2b:	8b 80 f4 00 00 00    	mov    eax,DWORD PTR [eax+0xf4]
10005e31:	80 b9 fc 00 00 00 01 	cmp    BYTE PTR [ecx+0xfc],0x1
10005e38:	0f 85 94 00 00 00    	jne    10005ed2 <calculate_subimages+0xc1>
10005e3e:	8d 5a 07             	lea    ebx,[edx+0x7]
10005e41:	c1 eb 03             	shr    ebx,0x3
10005e44:	89 99 e0 08 00 00    	mov    DWORD PTR [ecx+0x8e0],ebx
10005e4a:	8d 70 07             	lea    esi,[eax+0x7]
10005e4d:	c1 ee 03             	shr    esi,0x3
10005e50:	89 b1 e4 08 00 00    	mov    DWORD PTR [ecx+0x8e4],esi
10005e56:	8d 5a 03             	lea    ebx,[edx+0x3]
10005e59:	89 dd                	mov    ebp,ebx
10005e5b:	c1 ed 03             	shr    ebp,0x3
10005e5e:	89 a9 f0 08 00 00    	mov    DWORD PTR [ecx+0x8f0],ebp
10005e64:	89 b1 f4 08 00 00    	mov    DWORD PTR [ecx+0x8f4],esi
10005e6a:	c1 eb 02             	shr    ebx,0x2
10005e6d:	89 99 00 09 00 00    	mov    DWORD PTR [ecx+0x900],ebx
10005e73:	8d 70 03             	lea    esi,[eax+0x3]
10005e76:	89 f3                	mov    ebx,esi
10005e78:	c1 eb 03             	shr    ebx,0x3
10005e7b:	89 99 04 09 00 00    	mov    DWORD PTR [ecx+0x904],ebx
10005e81:	8d 5a 01             	lea    ebx,[edx+0x1]
10005e84:	89 dd                	mov    ebp,ebx
10005e86:	c1 ed 02             	shr    ebp,0x2
10005e89:	89 a9 10 09 00 00    	mov    DWORD PTR [ecx+0x910],ebp
10005e8f:	c1 ee 02             	shr    esi,0x2
10005e92:	89 b1 14 09 00 00    	mov    DWORD PTR [ecx+0x914],esi
10005e98:	d1 eb                	shr    ebx,1
10005e9a:	89 99 20 09 00 00    	mov    DWORD PTR [ecx+0x920],ebx
10005ea0:	8d 58 01             	lea    ebx,[eax+0x1]
10005ea3:	89 de                	mov    esi,ebx
10005ea5:	c1 ee 02             	shr    esi,0x2
10005ea8:	89 b1 24 09 00 00    	mov    DWORD PTR [ecx+0x924],esi
10005eae:	89 d6                	mov    esi,edx
10005eb0:	d1 ee                	shr    esi,1
10005eb2:	89 b1 30 09 00 00    	mov    DWORD PTR [ecx+0x930],esi
10005eb8:	d1 eb                	shr    ebx,1
10005eba:	89 99 34 09 00 00    	mov    DWORD PTR [ecx+0x934],ebx
10005ec0:	89 91 40 09 00 00    	mov    DWORD PTR [ecx+0x940],edx
10005ec6:	d1 e8                	shr    eax,1
10005ec8:	89 81 44 09 00 00    	mov    DWORD PTR [ecx+0x944],eax
10005ece:	31 db                	xor    ebx,ebx
10005ed0:	eb 0e                	jmp    10005ee0 <calculate_subimages+0xcf>
10005ed2:	89 91 e0 08 00 00    	mov    DWORD PTR [ecx+0x8e0],edx
10005ed8:	89 81 e4 08 00 00    	mov    DWORD PTR [ecx+0x8e4],eax
10005ede:	eb ee                	jmp    10005ece <calculate_subimages+0xbd>
10005ee0:	89 de                	mov    esi,ebx
10005ee2:	c1 e6 04             	shl    esi,0x4
10005ee5:	8b 94 31 e0 08 00 00 	mov    edx,DWORD PTR [ecx+esi*1+0x8e0]
10005eec:	85 d2                	test   edx,edx
10005eee:	74 49                	je     10005f39 <calculate_subimages+0x128>
10005ef0:	83 bc 31 e4 08 00 00 00 	cmp    DWORD PTR [ecx+esi*1+0x8e4],0x0
10005ef8:	74 3f                	je     10005f39 <calculate_subimages+0x128>
10005efa:	0f b6 81 f8 00 00 00 	movzx  eax,BYTE PTR [ecx+0xf8]
10005f01:	0f af 81 b0 09 00 00 	imul   eax,DWORD PTR [ecx+0x9b0]
10005f08:	f7 e2                	mul    edx
10005f0a:	70 3d                	jo     10005f49 <calculate_subimages+0x138>
10005f0c:	83 c0 0f             	add    eax,0xf
10005f0f:	83 f8 0e             	cmp    eax,0xe
10005f12:	76 35                	jbe    10005f49 <calculate_subimages+0x138>
10005f14:	c1 e8 03             	shr    eax,0x3
10005f17:	89 84 31 ec 08 00 00 	mov    DWORD PTR [ecx+esi*1+0x8ec],eax
10005f1e:	8b 91 bc 09 00 00    	mov    edx,DWORD PTR [ecx+0x9bc]
10005f24:	c1 e2 04             	shl    edx,0x4
10005f27:	39 44 17 0c          	cmp    DWORD PTR [edi+edx*1+0xc],eax
10005f2b:	73 06                	jae    10005f33 <calculate_subimages+0x122>
10005f2d:	89 99 bc 09 00 00    	mov    DWORD PTR [ecx+0x9bc],ebx
10005f33:	89 99 c0 09 00 00    	mov    DWORD PTR [ecx+0x9c0],ebx
10005f39:	43                   	inc    ebx
10005f3a:	83 fb 07             	cmp    ebx,0x7
10005f3d:	75 a1                	jne    10005ee0 <calculate_subimages+0xcf>
10005f3f:	31 c0                	xor    eax,eax
10005f41:	eb 0b                	jmp    10005f4e <calculate_subimages+0x13d>
10005f43:	b8 50 00 00 00       	mov    eax,0x50
10005f48:	c3                   	ret    
10005f49:	b8 03 00 00 00       	mov    eax,0x3
10005f4e:	5b                   	pop    ebx
10005f4f:	5e                   	pop    esi
10005f50:	5f                   	pop    edi
10005f51:	5d                   	pop    ebp
10005f52:	c3                   	ret    

10005f53 <spng__inflate_stream>:
10005f53:	55                   	push   ebp
10005f54:	57                   	push   edi
10005f55:	56                   	push   esi
10005f56:	53                   	push   ebx
10005f57:	83 ec 2c             	sub    esp,0x2c
10005f5a:	89 c3                	mov    ebx,eax
10005f5c:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
10005f60:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
10005f64:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10005f68:	e8 6e f2 ff ff       	call   100051db <spng__inflate_init>
10005f6d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10005f71:	85 c0                	test   eax,eax
10005f73:	0f 85 c4 01 00 00    	jne    1000613d <spng__inflate_stream+0x1ea>
10005f79:	8b 83 e0 00 00 00    	mov    eax,DWORD PTR [ebx+0xe0]
10005f7f:	2b 83 e4 00 00 00    	sub    eax,DWORD PTR [ebx+0xe4]
10005f85:	8b b3 dc 00 00 00    	mov    esi,DWORD PTR [ebx+0xdc]
10005f8b:	39 c6                	cmp    esi,eax
10005f8d:	76 02                	jbe    10005f91 <spng__inflate_stream+0x3e>
10005f8f:	89 c6                	mov    esi,eax
10005f91:	39 74 24 40          	cmp    DWORD PTR [esp+0x40],esi
10005f95:	0f 87 90 01 00 00    	ja     1000612b <spng__inflate_stream+0x1d8>
10005f9b:	2b 74 24 40          	sub    esi,DWORD PTR [esp+0x40]
10005f9f:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10005fa2:	ba 00 20 00 00       	mov    edx,0x2000
10005fa7:	e8 5d f3 ff ff       	call   10005309 <spng__malloc.isra.0>
10005fac:	89 c5                	mov    ebp,eax
10005fae:	85 c0                	test   eax,eax
10005fb0:	0f 84 7f 01 00 00    	je     10006135 <spng__inflate_stream+0x1e2>
10005fb6:	8d 83 50 09 00 00    	lea    eax,[ebx+0x950]
10005fbc:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10005fc0:	83 7c 24 44 00       	cmp    DWORD PTR [esp+0x44],0x0
10005fc5:	74 16                	je     10005fdd <spng__inflate_stream+0x8a>
10005fc7:	85 ff                	test   edi,edi
10005fc9:	74 12                	je     10005fdd <spng__inflate_stream+0x8a>
10005fcb:	89 bb 54 09 00 00    	mov    DWORD PTR [ebx+0x954],edi
10005fd1:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10005fd5:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
10005fdb:	eb 14                	jmp    10005ff1 <spng__inflate_stream+0x9e>
10005fdd:	c7 83 54 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x954],0x0
10005fe7:	c7 83 50 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x950],0x0
10005ff1:	c7 83 60 09 00 00 00 20 00 00 	mov    DWORD PTR [ebx+0x960],0x2000
10005ffb:	89 ab 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],ebp
10006001:	d1 ee                	shr    esi,1
10006003:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10006007:	be 00 20 00 00       	mov    esi,0x2000
1000600c:	51                   	push   ecx
1000600d:	51                   	push   ecx
1000600e:	6a 00                	push   0x0
10006010:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10006014:	e8 fc ff ff ff       	call   10006015 <spng__inflate_stream+0xc2>	10006015: R_386_PC32	inflate
10006019:	83 c4 10             	add    esp,0x10
1000601c:	83 f8 01             	cmp    eax,0x1
1000601f:	0f 84 b2 00 00 00    	je     100060d7 <spng__inflate_stream+0x184>
10006025:	83 f8 fb             	cmp    eax,0xfffffffb
10006028:	74 08                	je     10006032 <spng__inflate_stream+0xdf>
1000602a:	85 c0                	test   eax,eax
1000602c:	0f 85 8a 00 00 00    	jne    100060bc <spng__inflate_stream+0x169>
10006032:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
10006039:	75 47                	jne    10006082 <spng__inflate_stream+0x12f>
1000603b:	83 c8 ff             	or     eax,0xffffffff
1000603e:	31 d2                	xor    edx,edx
10006040:	f7 f6                	div    esi
10006042:	48                   	dec    eax
10006043:	0f 84 cd 00 00 00    	je     10006116 <spng__inflate_stream+0x1c3>
10006049:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
1000604d:	0f 82 c3 00 00 00    	jb     10006116 <spng__inflate_stream+0x1c3>
10006053:	8d 3c 36             	lea    edi,[esi+esi*1]
10006056:	52                   	push   edx
10006057:	52                   	push   edx
10006058:	57                   	push   edi
10006059:	55                   	push   ebp
1000605a:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
1000605d:	83 c4 10             	add    esp,0x10
10006060:	85 c0                	test   eax,eax
10006062:	75 0a                	jne    1000606e <spng__inflate_stream+0x11b>
10006064:	bf 02 00 00 00       	mov    edi,0x2
10006069:	e9 ad 00 00 00       	jmp    1000611b <spng__inflate_stream+0x1c8>
1000606e:	89 b3 60 09 00 00    	mov    DWORD PTR [ebx+0x960],esi
10006074:	01 c6                	add    esi,eax
10006076:	89 b3 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],esi
1000607c:	89 c5                	mov    ebp,eax
1000607e:	89 fe                	mov    esi,edi
10006080:	eb 8a                	jmp    1000600c <spng__inflate_stream+0xb9>
10006082:	83 bb 54 09 00 00 00 	cmp    DWORD PTR [ebx+0x954],0x0
10006089:	75 81                	jne    1000600c <spng__inflate_stream+0xb9>
1000608b:	8b 4b 50             	mov    ecx,DWORD PTR [ebx+0x50]
1000608e:	81 f9 00 20 00 00    	cmp    ecx,0x2000
10006094:	76 0b                	jbe    100060a1 <spng__inflate_stream+0x14e>
10006096:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
1000609a:	74 05                	je     100060a1 <spng__inflate_stream+0x14e>
1000609c:	b9 00 20 00 00       	mov    ecx,0x2000
100060a1:	89 ca                	mov    edx,ecx
100060a3:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100060a7:	89 d8                	mov    eax,ebx
100060a9:	e8 10 f8 ff ff       	call   100058be <read_chunk_bytes>
100060ae:	89 c7                	mov    edi,eax
100060b0:	85 c0                	test   eax,eax
100060b2:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100060b6:	74 0b                	je     100060c3 <spng__inflate_stream+0x170>
100060b8:	85 c9                	test   ecx,ecx
100060ba:	75 5f                	jne    1000611b <spng__inflate_stream+0x1c8>
100060bc:	bf 40 00 00 00       	mov    edi,0x40
100060c1:	eb 58                	jmp    1000611b <spng__inflate_stream+0x1c8>
100060c3:	89 8b 54 09 00 00    	mov    DWORD PTR [ebx+0x954],ecx
100060c9:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100060cc:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
100060d2:	e9 35 ff ff ff       	jmp    1000600c <spng__inflate_stream+0xb9>
100060d7:	8b b3 64 09 00 00    	mov    esi,DWORD PTR [ebx+0x964]
100060dd:	85 f6                	test   esi,esi
100060df:	74 db                	je     100060bc <spng__inflate_stream+0x169>
100060e1:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
100060e5:	0f 82 79 ff ff ff    	jb     10006064 <spng__inflate_stream+0x111>
100060eb:	50                   	push   eax
100060ec:	50                   	push   eax
100060ed:	56                   	push   esi
100060ee:	55                   	push   ebp
100060ef:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
100060f2:	89 c7                	mov    edi,eax
100060f4:	83 c4 10             	add    esp,0x10
100060f7:	85 c0                	test   eax,eax
100060f9:	0f 84 65 ff ff ff    	je     10006064 <spng__inflate_stream+0x111>
100060ff:	89 f2                	mov    edx,esi
10006101:	89 d8                	mov    eax,ebx
10006103:	e8 3f f2 ff ff       	call   10005347 <increase_cache_usage>
10006108:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000610c:	89 38                	mov    DWORD PTR [eax],edi
1000610e:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10006112:	89 30                	mov    DWORD PTR [eax],esi
10006114:	eb 27                	jmp    1000613d <spng__inflate_stream+0x1ea>
10006116:	bf 4d 00 00 00       	mov    edi,0x4d
1000611b:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000611e:	89 ea                	mov    edx,ebp
10006120:	e8 0b f2 ff ff       	call   10005330 <spng__free.isra.3>
10006125:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10006129:	eb 12                	jmp    1000613d <spng__inflate_stream+0x1ea>
1000612b:	c7 44 24 08 4d 00 00 00 	mov    DWORD PTR [esp+0x8],0x4d
10006133:	eb 08                	jmp    1000613d <spng__inflate_stream+0x1ea>
10006135:	c7 44 24 08 02 00 00 00 	mov    DWORD PTR [esp+0x8],0x2
1000613d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10006141:	83 c4 2c             	add    esp,0x2c
10006144:	5b                   	pop    ebx
10006145:	5e                   	pop    esi
10006146:	5f                   	pop    edi
10006147:	5d                   	pop    ebp
10006148:	c3                   	ret    

10006149 <read_chunks>:
10006149:	85 c0                	test   eax,eax
1000614b:	0f 84 60 18 00 00    	je     100079b1 <read_chunks+0x1868>
10006151:	55                   	push   ebp
10006152:	89 e5                	mov    ebp,esp
10006154:	57                   	push   edi
10006155:	56                   	push   esi
10006156:	53                   	push   ebx
10006157:	83 ec 4c             	sub    esp,0x4c
1000615a:	8b 58 70             	mov    ebx,DWORD PTR [eax+0x70]
1000615d:	b9 46 00 00 00       	mov    ecx,0x46
10006162:	85 db                	test   ebx,ebx
10006164:	0f 84 b7 19 00 00    	je     10007b21 <read_chunks+0x19d8>
1000616a:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
1000616e:	75 16                	jne    10006186 <read_chunks+0x3d>
10006170:	b9 50 00 00 00       	mov    ecx,0x50
10006175:	f6 40 74 08          	test   BYTE PTR [eax+0x74],0x8
10006179:	0f 84 a2 19 00 00    	je     10007b21 <read_chunks+0x19d8>
1000617f:	31 c9                	xor    ecx,ecx
10006181:	e9 9b 19 00 00       	jmp    10007b21 <read_chunks+0x19d8>
10006186:	89 55 c0             	mov    DWORD PTR [ebp-0x40],edx
10006189:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000618c:	83 fb 02             	cmp    ebx,0x2
1000618f:	0f 85 fb 01 00 00    	jne    10006390 <read_chunks+0x247>
10006195:	c7 40 40 08 00 00 00 	mov    DWORD PTR [eax+0x40],0x8
1000619c:	c7 40 44 0d 00 00 00 	mov    DWORD PTR [eax+0x44],0xd
100061a3:	ba 1d 00 00 00       	mov    edx,0x1d
100061a8:	e8 f5 f2 ff ff       	call   100054a2 <read_data>
100061ad:	89 c1                	mov    ecx,eax
100061af:	85 c0                	test   eax,eax
100061b1:	0f 85 39 07 00 00    	jne    100068f0 <read_chunks+0x7a7>
100061b7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100061ba:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
100061bd:	53                   	push   ebx
100061be:	6a 08                	push   0x8
100061c0:	68 78 d7 00 10       	push   0x1000d778	100061c1: R_386_32	.text
100061c5:	57                   	push   edi
100061c6:	e8 fc ff ff ff       	call   100061c7 <read_chunks+0x7e>	100061c7: R_386_PC32	memcmp
100061cb:	83 c4 10             	add    esp,0x10
100061ce:	85 c0                	test   eax,eax
100061d0:	0f 85 74 01 00 00    	jne    1000634a <read_chunks+0x201>
100061d6:	8d 47 08             	lea    eax,[edi+0x8]
100061d9:	e8 01 e8 ff ff       	call   100049df <read_u32>
100061de:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
100061e1:	89 43 44             	mov    DWORD PTR [ebx+0x44],eax
100061e4:	8b 57 0c             	mov    edx,DWORD PTR [edi+0xc]
100061e7:	89 53 48             	mov    DWORD PTR [ebx+0x48],edx
100061ea:	83 f8 0d             	cmp    eax,0xd
100061ed:	0f 85 61 01 00 00    	jne    10006354 <read_chunks+0x20b>
100061f3:	51                   	push   ecx
100061f4:	6a 04                	push   0x4
100061f6:	68 74 d7 00 10       	push   0x1000d774	100061f7: R_386_32	.text
100061fb:	89 d8                	mov    eax,ebx
100061fd:	83 c0 48             	add    eax,0x48
10006200:	50                   	push   eax
10006201:	e8 fc ff ff ff       	call   10006202 <read_chunks+0xb9>	10006202: R_386_PC32	memcmp
10006206:	83 c4 10             	add    esp,0x10
10006209:	85 c0                	test   eax,eax
1000620b:	0f 85 4d 01 00 00    	jne    1000635e <read_chunks+0x215>
10006211:	52                   	push   edx
10006212:	6a 00                	push   0x0
10006214:	6a 00                	push   0x0
10006216:	6a 00                	push   0x0
10006218:	e8 fc ff ff ff       	call   10006219 <read_chunks+0xd0>	10006219: R_386_PC32	crc32
1000621d:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
10006220:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
10006223:	83 c4 0c             	add    esp,0xc
10006226:	6a 11                	push   0x11
10006228:	8d 57 0c             	lea    edx,[edi+0xc]
1000622b:	52                   	push   edx
1000622c:	50                   	push   eax
1000622d:	e8 fc ff ff ff       	call   1000622e <read_chunks+0xe5>	1000622e: R_386_PC32	crc32
10006232:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
10006235:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
10006238:	8d 47 10             	lea    eax,[edi+0x10]
1000623b:	e8 9f e7 ff ff       	call   100049df <read_u32>
10006240:	89 c1                	mov    ecx,eax
10006242:	89 8b f0 00 00 00    	mov    DWORD PTR [ebx+0xf0],ecx
10006248:	8d 47 14             	lea    eax,[edi+0x14]
1000624b:	e8 8f e7 ff ff       	call   100049df <read_u32>
10006250:	89 83 f4 00 00 00    	mov    DWORD PTR [ebx+0xf4],eax
10006256:	8a 57 18             	mov    dl,BYTE PTR [edi+0x18]
10006259:	88 93 f8 00 00 00    	mov    BYTE PTR [ebx+0xf8],dl
1000625f:	88 55 bc             	mov    BYTE PTR [ebp-0x44],dl
10006262:	8a 5f 19             	mov    bl,BYTE PTR [edi+0x19]
10006265:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10006268:	88 9a f9 00 00 00    	mov    BYTE PTR [edx+0xf9],bl
1000626e:	89 d6                	mov    esi,edx
10006270:	8a 57 1a             	mov    dl,BYTE PTR [edi+0x1a]
10006273:	88 96 fa 00 00 00    	mov    BYTE PTR [esi+0xfa],dl
10006279:	8a 57 1b             	mov    dl,BYTE PTR [edi+0x1b]
1000627c:	88 96 fb 00 00 00    	mov    BYTE PTR [esi+0xfb],dl
10006282:	8a 57 1c             	mov    dl,BYTE PTR [edi+0x1c]
10006285:	88 96 fc 00 00 00    	mov    BYTE PTR [esi+0xfc],dl
1000628b:	83 c4 10             	add    esp,0x10
1000628e:	85 c9                	test   ecx,ecx
10006290:	0f 8e d2 00 00 00    	jle    10006368 <read_chunks+0x21f>
10006296:	85 c0                	test   eax,eax
10006298:	0f 8e d4 00 00 00    	jle    10006372 <read_chunks+0x229>
1000629e:	3b 8e d4 00 00 00    	cmp    ecx,DWORD PTR [esi+0xd4]
100062a4:	0f 87 d2 00 00 00    	ja     1000637c <read_chunks+0x233>
100062aa:	3b 86 d8 00 00 00    	cmp    eax,DWORD PTR [esi+0xd8]
100062b0:	0f 87 d0 00 00 00    	ja     10006386 <read_chunks+0x23d>
100062b6:	89 f0                	mov    eax,esi
100062b8:	05 f0 00 00 00       	add    eax,0xf0
100062bd:	e8 9c f3 ff ff       	call   1000565e <check_ihdr.part.13>
100062c2:	89 c1                	mov    ecx,eax
100062c4:	85 c0                	test   eax,eax
100062c6:	0f 85 24 06 00 00    	jne    100068f0 <read_chunks+0x7a7>
100062cc:	80 8e a4 00 00 00 01 	or     BYTE PTR [esi+0xa4],0x1
100062d3:	80 8e ac 00 00 00 01 	or     BYTE PTR [esi+0xac],0x1
100062da:	b8 03 00 00 00       	mov    eax,0x3
100062df:	80 fb 02             	cmp    bl,0x2
100062e2:	8a 55 bc             	mov    dl,BYTE PTR [ebp-0x44]
100062e5:	74 16                	je     100062fd <read_chunks+0x1b4>
100062e7:	b8 02 00 00 00       	mov    eax,0x2
100062ec:	80 fb 04             	cmp    bl,0x4
100062ef:	74 0c                	je     100062fd <read_chunks+0x1b4>
100062f1:	31 c0                	xor    eax,eax
100062f3:	80 fb 06             	cmp    bl,0x6
100062f6:	0f 94 c0             	sete   al
100062f9:	8d 44 40 01          	lea    eax,[eax+eax*2+0x1]
100062fd:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006300:	89 86 b0 09 00 00    	mov    DWORD PTR [esi+0x9b0],eax
10006306:	b9 01 00 00 00       	mov    ecx,0x1
1000630b:	80 fa 07             	cmp    dl,0x7
1000630e:	76 09                	jbe    10006319 <read_chunks+0x1d0>
10006310:	c0 ea 03             	shr    dl,0x3
10006313:	0f b6 ca             	movzx  ecx,dl
10006316:	0f af c8             	imul   ecx,eax
10006319:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000631c:	89 88 b4 09 00 00    	mov    DWORD PTR [eax+0x9b4],ecx
10006322:	e8 ea fa ff ff       	call   10005e11 <calculate_subimages>
10006327:	89 c1                	mov    ecx,eax
10006329:	85 c0                	test   eax,eax
1000632b:	0f 85 bf 05 00 00    	jne    100068f0 <read_chunks+0x7a7>
10006331:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006334:	c7 40 70 03 00 00 00 	mov    DWORD PTR [eax+0x70],0x3
1000633b:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
1000633f:	0f 84 aa 00 00 00    	je     100063ef <read_chunks+0x2a6>
10006345:	e9 35 fe ff ff       	jmp    1000617f <read_chunks+0x36>
1000634a:	b9 04 00 00 00       	mov    ecx,0x4
1000634f:	e9 9c 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
10006354:	b9 0e 00 00 00       	mov    ecx,0xe
10006359:	e9 92 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
1000635e:	b9 0f 00 00 00       	mov    ecx,0xf
10006363:	e9 88 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
10006368:	b9 05 00 00 00       	mov    ecx,0x5
1000636d:	e9 7e 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
10006372:	b9 06 00 00 00       	mov    ecx,0x6
10006377:	e9 74 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
1000637c:	b9 07 00 00 00       	mov    ecx,0x7
10006381:	e9 6a 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
10006386:	b9 08 00 00 00       	mov    ecx,0x8
1000638b:	e9 60 05 00 00       	jmp    100068f0 <read_chunks+0x7a7>
10006390:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10006394:	0f 85 e5 fd ff ff    	jne    1000617f <read_chunks+0x36>
1000639a:	83 fb 06             	cmp    ebx,0x6
1000639d:	75 50                	jne    100063ef <read_chunks+0x2a6>
1000639f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063a2:	c7 40 70 08 00 00 00 	mov    DWORD PTR [eax+0x70],0x8
100063a9:	80 48 75 01          	or     BYTE PTR [eax+0x75],0x1
100063ad:	eb 40                	jmp    100063ef <read_chunks+0x2a6>
100063af:	83 78 70 03          	cmp    DWORD PTR [eax+0x70],0x3
100063b3:	0f 87 84 05 00 00    	ja     1000693d <read_chunks+0x7f4>
100063b9:	80 b8 f9 00 00 00 03 	cmp    BYTE PTR [eax+0xf9],0x3
100063c0:	0f 84 65 05 00 00    	je     1000692b <read_chunks+0x7e2>
100063c6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063c9:	8d b8 b4 00 00 00    	lea    edi,[eax+0xb4]
100063cf:	b9 04 00 00 00       	mov    ecx,0x4
100063d4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100063d6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063d9:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100063dc:	83 f8 03             	cmp    eax,0x3
100063df:	0f 87 03 15 00 00    	ja     100078e8 <read_chunks+0x179f>
100063e5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063e8:	c7 40 70 04 00 00 00 	mov    DWORD PTR [eax+0x70],0x4
100063ef:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063f2:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100063f5:	83 f8 08             	cmp    eax,0x8
100063f8:	0f 85 a5 15 00 00    	jne    100079a3 <read_chunks+0x185a>
100063fe:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006401:	80 60 74 df          	and    BYTE PTR [eax+0x74],0xdf
10006405:	c7 80 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xa0],0x0
1000640f:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [eax+0xac]
10006415:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006418:	89 86 b0 00 00 00    	mov    DWORD PTR [esi+0xb0],eax
1000641e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006421:	e8 4f f1 ff ff       	call   10005575 <read_header>
10006426:	89 c1                	mov    ecx,eax
10006428:	85 c0                	test   eax,eax
1000642a:	0f 85 d0 14 00 00    	jne    10007900 <read_chunks+0x17b7>
10006430:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006433:	f6 40 74 20          	test   BYTE PTR [eax+0x74],0x20
10006437:	0f 85 c2 04 00 00    	jne    100068ff <read_chunks+0x7b6>
1000643d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006440:	80 60 74 df          	and    BYTE PTR [eax+0x74],0xdf
10006444:	c7 80 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xa0],0x0
1000644e:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [eax+0xac]
10006454:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006457:	89 86 b0 00 00 00    	mov    DWORD PTR [esi+0xb0],eax
1000645d:	8d 7d d8             	lea    edi,[ebp-0x28]
10006460:	8d 76 40             	lea    esi,[esi+0x40]
10006463:	b9 04 00 00 00       	mov    ecx,0x4
10006468:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000646a:	50                   	push   eax
1000646b:	6a 04                	push   0x4
1000646d:	68 6c d7 00 10       	push   0x1000d76c	1000646e: R_386_32	.text
10006472:	8d 7d e0             	lea    edi,[ebp-0x20]
10006475:	57                   	push   edi
10006476:	e8 fc ff ff ff       	call   10006477 <read_chunks+0x32e>	10006477: R_386_PC32	memcmp
1000647b:	83 c4 10             	add    esp,0x10
1000647e:	85 c0                	test   eax,eax
10006480:	8d 75 d8             	lea    esi,[ebp-0x28]
10006483:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006486:	0f 84 23 ff ff ff    	je     100063af <read_chunks+0x266>
1000648c:	80 60 75 fe          	and    BYTE PTR [eax+0x75],0xfe
10006490:	50                   	push   eax
10006491:	6a 04                	push   0x4
10006493:	68 70 d7 00 10       	push   0x1000d770	10006494: R_386_32	.text
10006498:	57                   	push   edi
10006499:	e8 fc ff ff ff       	call   1000649a <read_chunks+0x351>	1000649a: R_386_PC32	memcmp
1000649e:	83 c4 10             	add    esp,0x10
100064a1:	85 c0                	test   eax,eax
100064a3:	0f 84 a9 04 00 00    	je     10006952 <read_chunks+0x809>
100064a9:	50                   	push   eax
100064aa:	6a 04                	push   0x4
100064ac:	68 60 d7 00 10       	push   0x1000d760	100064ad: R_386_32	.text
100064b1:	57                   	push   edi
100064b2:	e8 fc ff ff ff       	call   100064b3 <read_chunks+0x36a>	100064b3: R_386_PC32	memcmp
100064b7:	83 c4 10             	add    esp,0x10
100064ba:	85 c0                	test   eax,eax
100064bc:	0f 84 90 04 00 00    	je     10006952 <read_chunks+0x809>
100064c2:	50                   	push   eax
100064c3:	6a 04                	push   0x4
100064c5:	68 5c d7 00 10       	push   0x1000d75c	100064c6: R_386_32	.text
100064ca:	57                   	push   edi
100064cb:	e8 fc ff ff ff       	call   100064cc <read_chunks+0x383>	100064cc: R_386_PC32	memcmp
100064d0:	83 c4 10             	add    esp,0x10
100064d3:	85 c0                	test   eax,eax
100064d5:	0f 84 77 04 00 00    	je     10006952 <read_chunks+0x809>
100064db:	50                   	push   eax
100064dc:	6a 04                	push   0x4
100064de:	68 54 d7 00 10       	push   0x1000d754	100064df: R_386_32	.text
100064e3:	57                   	push   edi
100064e4:	e8 fc ff ff ff       	call   100064e5 <read_chunks+0x39c>	100064e5: R_386_PC32	memcmp
100064e9:	83 c4 10             	add    esp,0x10
100064ec:	85 c0                	test   eax,eax
100064ee:	0f 84 5e 04 00 00    	je     10006952 <read_chunks+0x809>
100064f4:	50                   	push   eax
100064f5:	6a 04                	push   0x4
100064f7:	68 50 d7 00 10       	push   0x1000d750	100064f8: R_386_32	.text
100064fc:	57                   	push   edi
100064fd:	e8 fc ff ff ff       	call   100064fe <read_chunks+0x3b5>	100064fe: R_386_PC32	memcmp
10006502:	83 c4 10             	add    esp,0x10
10006505:	85 c0                	test   eax,eax
10006507:	0f 84 45 04 00 00    	je     10006952 <read_chunks+0x809>
1000650d:	53                   	push   ebx
1000650e:	6a 04                	push   0x4
10006510:	68 40 d7 00 10       	push   0x1000d740	10006511: R_386_32	.text
10006515:	57                   	push   edi
10006516:	e8 fc ff ff ff       	call   10006517 <read_chunks+0x3ce>	10006517: R_386_PC32	memcmp
1000651b:	83 c4 10             	add    esp,0x10
1000651e:	85 c0                	test   eax,eax
10006520:	0f 84 2c 04 00 00    	je     10006952 <read_chunks+0x809>
10006526:	51                   	push   ecx
10006527:	6a 04                	push   0x4
10006529:	68 64 d7 00 10       	push   0x1000d764	1000652a: R_386_32	.text
1000652e:	57                   	push   edi
1000652f:	e8 fc ff ff ff       	call   10006530 <read_chunks+0x3e7>	10006530: R_386_PC32	memcmp
10006534:	83 c4 10             	add    esp,0x10
10006537:	85 c0                	test   eax,eax
10006539:	0f 84 13 04 00 00    	je     10006952 <read_chunks+0x809>
1000653f:	52                   	push   edx
10006540:	6a 04                	push   0x4
10006542:	68 3c d7 00 10       	push   0x1000d73c	10006543: R_386_32	.text
10006547:	57                   	push   edi
10006548:	e8 fc ff ff ff       	call   10006549 <read_chunks+0x400>	10006549: R_386_PC32	memcmp
1000654d:	83 c4 10             	add    esp,0x10
10006550:	85 c0                	test   eax,eax
10006552:	0f 84 fa 03 00 00    	je     10006952 <read_chunks+0x809>
10006558:	50                   	push   eax
10006559:	6a 04                	push   0x4
1000655b:	68 38 d7 00 10       	push   0x1000d738	1000655c: R_386_32	.text
10006560:	57                   	push   edi
10006561:	e8 fc ff ff ff       	call   10006562 <read_chunks+0x419>	10006562: R_386_PC32	memcmp
10006566:	83 c4 10             	add    esp,0x10
10006569:	85 c0                	test   eax,eax
1000656b:	0f 84 e1 03 00 00    	je     10006952 <read_chunks+0x809>
10006571:	50                   	push   eax
10006572:	6a 04                	push   0x4
10006574:	68 30 d7 00 10       	push   0x1000d730	10006575: R_386_32	.text
10006579:	57                   	push   edi
1000657a:	e8 fc ff ff ff       	call   1000657b <read_chunks+0x432>	1000657b: R_386_PC32	memcmp
1000657f:	83 c4 10             	add    esp,0x10
10006582:	85 c0                	test   eax,eax
10006584:	0f 84 c8 03 00 00    	je     10006952 <read_chunks+0x809>
1000658a:	50                   	push   eax
1000658b:	6a 04                	push   0x4
1000658d:	68 2c d7 00 10       	push   0x1000d72c	1000658e: R_386_32	.text
10006592:	57                   	push   edi
10006593:	e8 fc ff ff ff       	call   10006594 <read_chunks+0x44b>	10006594: R_386_PC32	memcmp
10006598:	83 c4 10             	add    esp,0x10
1000659b:	85 c0                	test   eax,eax
1000659d:	0f 84 af 03 00 00    	je     10006952 <read_chunks+0x809>
100065a3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100065a6:	8b 58 10             	mov    ebx,DWORD PTR [eax+0x10]
100065a9:	89 f0                	mov    eax,esi
100065ab:	e8 80 e5 ff ff       	call   10004b30 <is_critical_chunk>
100065b0:	85 c0                	test   eax,eax
100065b2:	0f 85 c9 03 00 00    	jne    10006981 <read_chunks+0x838>
100065b8:	56                   	push   esi
100065b9:	6a 04                	push   0x4
100065bb:	68 60 d7 00 10       	push   0x1000d760	100065bc: R_386_32	.text
100065c0:	57                   	push   edi
100065c1:	e8 fc ff ff ff       	call   100065c2 <read_chunks+0x479>	100065c2: R_386_PC32	memcmp
100065c6:	83 c4 10             	add    esp,0x10
100065c9:	85 c0                	test   eax,eax
100065cb:	0f 84 b2 04 00 00    	je     10006a83 <read_chunks+0x93a>
100065d1:	51                   	push   ecx
100065d2:	6a 04                	push   0x4
100065d4:	68 5c d7 00 10       	push   0x1000d75c	100065d5: R_386_32	.text
100065d9:	57                   	push   edi
100065da:	e8 fc ff ff ff       	call   100065db <read_chunks+0x492>	100065db: R_386_PC32	memcmp
100065df:	83 c4 10             	add    esp,0x10
100065e2:	85 c0                	test   eax,eax
100065e4:	0f 84 5b 05 00 00    	je     10006b45 <read_chunks+0x9fc>
100065ea:	52                   	push   edx
100065eb:	6a 04                	push   0x4
100065ed:	68 54 d7 00 10       	push   0x1000d754	100065ee: R_386_32	.text
100065f2:	57                   	push   edi
100065f3:	e8 fc ff ff ff       	call   100065f4 <read_chunks+0x4ab>	100065f4: R_386_PC32	memcmp
100065f8:	83 c4 10             	add    esp,0x10
100065fb:	85 c0                	test   eax,eax
100065fd:	0f 84 9e 05 00 00    	je     10006ba1 <read_chunks+0xa58>
10006603:	50                   	push   eax
10006604:	6a 04                	push   0x4
10006606:	68 50 d7 00 10       	push   0x1000d750	10006607: R_386_32	.text
1000660b:	57                   	push   edi
1000660c:	e8 fc ff ff ff       	call   1000660d <read_chunks+0x4c4>	1000660d: R_386_PC32	memcmp
10006611:	83 c4 10             	add    esp,0x10
10006614:	85 c0                	test   eax,eax
10006616:	0f 84 84 06 00 00    	je     10006ca0 <read_chunks+0xb57>
1000661c:	50                   	push   eax
1000661d:	6a 04                	push   0x4
1000661f:	68 40 d7 00 10       	push   0x1000d740	10006620: R_386_32	.text
10006624:	57                   	push   edi
10006625:	e8 fc ff ff ff       	call   10006626 <read_chunks+0x4dd>	10006626: R_386_PC32	memcmp
1000662a:	83 c4 10             	add    esp,0x10
1000662d:	85 c0                	test   eax,eax
1000662f:	0f 84 be 06 00 00    	je     10006cf3 <read_chunks+0xbaa>
10006635:	50                   	push   eax
10006636:	6a 04                	push   0x4
10006638:	68 64 d7 00 10       	push   0x1000d764	10006639: R_386_32	.text
1000663d:	57                   	push   edi
1000663e:	e8 fc ff ff ff       	call   1000663f <read_chunks+0x4f6>	1000663f: R_386_PC32	memcmp
10006643:	83 c4 10             	add    esp,0x10
10006646:	85 c0                	test   eax,eax
10006648:	0f 84 71 07 00 00    	je     10006dbf <read_chunks+0xc76>
1000664e:	50                   	push   eax
1000664f:	6a 04                	push   0x4
10006651:	68 3c d7 00 10       	push   0x1000d73c	10006652: R_386_32	.text
10006656:	57                   	push   edi
10006657:	e8 fc ff ff ff       	call   10006658 <read_chunks+0x50f>	10006658: R_386_PC32	memcmp
1000665c:	83 c4 10             	add    esp,0x10
1000665f:	85 c0                	test   eax,eax
10006661:	0f 84 44 08 00 00    	je     10006eab <read_chunks+0xd62>
10006667:	50                   	push   eax
10006668:	6a 04                	push   0x4
1000666a:	68 38 d7 00 10       	push   0x1000d738	1000666b: R_386_32	.text
1000666f:	57                   	push   edi
10006670:	e8 fc ff ff ff       	call   10006671 <read_chunks+0x528>	10006671: R_386_PC32	memcmp
10006675:	83 c4 10             	add    esp,0x10
10006678:	85 c0                	test   eax,eax
1000667a:	0f 84 96 08 00 00    	je     10006f16 <read_chunks+0xdcd>
10006680:	50                   	push   eax
10006681:	6a 04                	push   0x4
10006683:	68 30 d7 00 10       	push   0x1000d730	10006684: R_386_32	.text
10006688:	57                   	push   edi
10006689:	e8 fc ff ff ff       	call   1000668a <read_chunks+0x541>	1000668a: R_386_PC32	memcmp
1000668e:	83 c4 10             	add    esp,0x10
10006691:	85 c0                	test   eax,eax
10006693:	0f 84 f6 08 00 00    	je     10006f8f <read_chunks+0xe46>
10006699:	56                   	push   esi
1000669a:	6a 04                	push   0x4
1000669c:	68 2c d7 00 10       	push   0x1000d72c	1000669d: R_386_32	.text
100066a1:	57                   	push   edi
100066a2:	e8 fc ff ff ff       	call   100066a3 <read_chunks+0x55a>	100066a3: R_386_PC32	memcmp
100066a7:	83 c4 10             	add    esp,0x10
100066aa:	85 c0                	test   eax,eax
100066ac:	0f 84 72 09 00 00    	je     10007024 <read_chunks+0xedb>
100066b2:	53                   	push   ebx
100066b3:	6a 04                	push   0x4
100066b5:	68 28 d7 00 10       	push   0x1000d728	100066b6: R_386_32	.text
100066ba:	57                   	push   edi
100066bb:	e8 fc ff ff ff       	call   100066bc <read_chunks+0x573>	100066bc: R_386_PC32	memcmp
100066c0:	83 c4 10             	add    esp,0x10
100066c3:	85 c0                	test   eax,eax
100066c5:	0f 84 c6 09 00 00    	je     10007091 <read_chunks+0xf48>
100066cb:	51                   	push   ecx
100066cc:	6a 04                	push   0x4
100066ce:	68 58 d7 00 10       	push   0x1000d758	100066cf: R_386_32	.text
100066d3:	57                   	push   edi
100066d4:	e8 fc ff ff ff       	call   100066d5 <read_chunks+0x58c>	100066d5: R_386_PC32	memcmp
100066d9:	83 c4 10             	add    esp,0x10
100066dc:	85 c0                	test   eax,eax
100066de:	0f 84 71 0a 00 00    	je     10007155 <read_chunks+0x100c>
100066e4:	50                   	push   eax
100066e5:	6a 04                	push   0x4
100066e7:	68 4c d7 00 10       	push   0x1000d74c	100066e8: R_386_32	.text
100066ec:	57                   	push   edi
100066ed:	e8 fc ff ff ff       	call   100066ee <read_chunks+0x5a5>	100066ee: R_386_PC32	memcmp
100066f2:	83 c4 10             	add    esp,0x10
100066f5:	85 c0                	test   eax,eax
100066f7:	0f 84 61 0b 00 00    	je     1000725e <read_chunks+0x1115>
100066fd:	50                   	push   eax
100066fe:	6a 04                	push   0x4
10006700:	68 48 d7 00 10       	push   0x1000d748	10006701: R_386_32	.text
10006705:	57                   	push   edi
10006706:	e8 fc ff ff ff       	call   10006707 <read_chunks+0x5be>	10006707: R_386_PC32	memcmp
1000670b:	83 c4 10             	add    esp,0x10
1000670e:	85 c0                	test   eax,eax
10006710:	0f 84 48 0b 00 00    	je     1000725e <read_chunks+0x1115>
10006716:	56                   	push   esi
10006717:	6a 04                	push   0x4
10006719:	68 44 d7 00 10       	push   0x1000d744	1000671a: R_386_32	.text
1000671e:	57                   	push   edi
1000671f:	e8 fc ff ff ff       	call   10006720 <read_chunks+0x5d7>	10006720: R_386_PC32	memcmp
10006724:	83 c4 10             	add    esp,0x10
10006727:	85 c0                	test   eax,eax
10006729:	0f 84 2f 0b 00 00    	je     1000725e <read_chunks+0x1115>
1000672f:	56                   	push   esi
10006730:	6a 04                	push   0x4
10006732:	68 34 d7 00 10       	push   0x1000d734	10006733: R_386_32	.text
10006737:	57                   	push   edi
10006738:	e8 fc ff ff ff       	call   10006739 <read_chunks+0x5f0>	10006739: R_386_PC32	memcmp
1000673d:	83 c4 10             	add    esp,0x10
10006740:	85 c0                	test   eax,eax
10006742:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006745:	0f 85 37 10 00 00    	jne    10007782 <read_chunks+0x1639>
1000674b:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
1000674f:	0f 84 a4 13 00 00    	je     10007af9 <read_chunks+0x19b0>
10006755:	f6 80 a9 00 00 00 10 	test   BYTE PTR [eax+0xa9],0x10
1000675c:	0f 85 66 11 00 00    	jne    100078c8 <read_chunks+0x177f>
10006762:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10006765:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10006768:	85 c0                	test   eax,eax
1000676a:	0f 84 ce 0e 00 00    	je     1000763e <read_chunks+0x14f5>
10006770:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006773:	80 88 a5 00 00 00 10 	or     BYTE PTR [eax+0xa5],0x10
1000677a:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000677d:	8d 50 5c             	lea    edx,[eax+0x5c]
10006780:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006783:	e8 bf eb ff ff       	call   10005347 <increase_cache_usage>
10006788:	89 c6                	mov    esi,eax
1000678a:	85 c0                	test   eax,eax
1000678c:	0f 85 0d 13 00 00    	jne    10007a9f <read_chunks+0x1956>
10006792:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006795:	8b 80 b4 08 00 00    	mov    eax,DWORD PTR [eax+0x8b4]
1000679b:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000679e:	8d 48 01             	lea    ecx,[eax+0x1]
100067a1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100067a4:	89 88 b4 08 00 00    	mov    DWORD PTR [eax+0x8b4],ecx
100067aa:	85 c9                	test   ecx,ecx
100067ac:	0f 84 51 13 00 00    	je     10007b03 <read_chunks+0x19ba>
100067b2:	83 c8 ff             	or     eax,0xffffffff
100067b5:	31 d2                	xor    edx,edx
100067b7:	f7 f1                	div    ecx
100067b9:	83 f8 5b             	cmp    eax,0x5b
100067bc:	0f 86 41 13 00 00    	jbe    10007b03 <read_chunks+0x19ba>
100067c2:	53                   	push   ebx
100067c3:	53                   	push   ebx
100067c4:	6b c9 5c             	imul   ecx,ecx,0x5c
100067c7:	51                   	push   ecx
100067c8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100067cb:	ff b0 b8 08 00 00    	push   DWORD PTR [eax+0x8b8]
100067d1:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
100067d4:	83 c4 10             	add    esp,0x10
100067d7:	85 c0                	test   eax,eax
100067d9:	0f 84 20 10 00 00    	je     100077ff <read_chunks+0x16b6>
100067df:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
100067e2:	89 87 b8 08 00 00    	mov    DWORD PTR [edi+0x8b8],eax
100067e8:	6b 97 b4 08 00 00 5c 	imul   edx,DWORD PTR [edi+0x8b4],0x5c
100067ef:	8d 5c 10 a4          	lea    ebx,[eax+edx*1-0x5c]
100067f3:	b9 17 00 00 00       	mov    ecx,0x17
100067f8:	89 df                	mov    edi,ebx
100067fa:	89 f0                	mov    eax,esi
100067fc:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100067fe:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006801:	c7 80 a0 00 00 00 a7 53 00 10 	mov    DWORD PTR [eax+0xa0],0x100053a7	10006807: R_386_32	.text
1000680b:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
1000680e:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10006811:	e8 f3 ea ff ff       	call   10005309 <spng__malloc.isra.0>
10006816:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10006819:	85 c0                	test   eax,eax
1000681b:	0f 84 de 0f 00 00    	je     100077ff <read_chunks+0x16b6>
10006821:	89 43 58             	mov    DWORD PTR [ebx+0x58],eax
10006824:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
10006827:	89 c2                	mov    edx,eax
10006829:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000682c:	e8 0d f2 ff ff       	call   10005a3e <read_chunk_bytes2>
10006831:	89 c1                	mov    ecx,eax
10006833:	85 c0                	test   eax,eax
10006835:	0f 85 c5 10 00 00    	jne    10007900 <read_chunks+0x17b7>
1000683b:	51                   	push   ecx
1000683c:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000683f:	83 f8 50             	cmp    eax,0x50
10006842:	76 05                	jbe    10006849 <read_chunks+0x700>
10006844:	b8 50 00 00 00       	mov    eax,0x50
10006849:	50                   	push   eax
1000684a:	6a 00                	push   0x0
1000684c:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000684f:	e8 fc ff ff ff       	call   10006850 <read_chunks+0x707>	10006850: R_386_PC32	memchr
10006854:	83 c4 10             	add    esp,0x10
10006857:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000685a:	85 c0                	test   eax,eax
1000685c:	0f 84 e6 0d 00 00    	je     10007648 <read_chunks+0x14ff>
10006862:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10006865:	2b 45 c0             	sub    eax,DWORD PTR [ebp-0x40]
10006868:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
1000686b:	89 df                	mov    edi,ebx
1000686d:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
10006870:	89 c1                	mov    ecx,eax
10006872:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006874:	89 d8                	mov    eax,ebx
10006876:	e8 f3 e8 ff ff       	call   1000516e <check_png_keyword>
1000687b:	85 c0                	test   eax,eax
1000687d:	0f 85 c5 0d 00 00    	jne    10007648 <read_chunks+0x14ff>
10006883:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006886:	8b 80 b4 08 00 00    	mov    eax,DWORD PTR [eax+0x8b4]
1000688c:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
1000688f:	8d 78 ff             	lea    edi,[eax-0x1]
10006892:	31 f6                	xor    esi,esi
10006894:	39 fe                	cmp    esi,edi
10006896:	0f 82 b6 0d 00 00    	jb     10007652 <read_chunks+0x1509>
1000689c:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000689f:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
100068a2:	83 f8 02             	cmp    eax,0x2
100068a5:	0f 86 93 0d 00 00    	jbe    1000763e <read_chunks+0x14f5>
100068ab:	8b 7d b4             	mov    edi,DWORD PTR [ebp-0x4c]
100068ae:	8a 57 01             	mov    dl,BYTE PTR [edi+0x1]
100068b1:	88 53 50             	mov    BYTE PTR [ebx+0x50],dl
100068b4:	83 e8 02             	sub    eax,0x2
100068b7:	b9 0a 00 00 00       	mov    ecx,0xa
100068bc:	80 fa 10             	cmp    dl,0x10
100068bf:	0f 85 b3 0d 00 00    	jne    10007678 <read_chunks+0x152f>
100068c5:	31 d2                	xor    edx,edx
100068c7:	f7 f1                	div    ecx
100068c9:	85 d2                	test   edx,edx
100068cb:	0f 85 6d 0d 00 00    	jne    1000763e <read_chunks+0x14f5>
100068d1:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100068d4:	8b 53 54             	mov    edx,DWORD PTR [ebx+0x54]
100068d7:	85 d2                	test   edx,edx
100068d9:	0f 84 5f 0d 00 00    	je     1000763e <read_chunks+0x14f5>
100068df:	81 fa 99 99 99 19    	cmp    edx,0x19999999
100068e5:	0f 86 a0 0d 00 00    	jbe    1000768b <read_chunks+0x1542>
100068eb:	b9 03 00 00 00       	mov    ecx,0x3
100068f0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100068f3:	c7 40 70 00 00 00 00 	mov    DWORD PTR [eax+0x70],0x0
100068fa:	e9 22 12 00 00       	jmp    10007b21 <read_chunks+0x19d8>
100068ff:	8b 80 a0 00 00 00    	mov    eax,DWORD PTR [eax+0xa0]
10006905:	85 c0                	test   eax,eax
10006907:	74 0b                	je     10006914 <read_chunks+0x7cb>
10006909:	83 ec 0c             	sub    esp,0xc
1000690c:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000690f:	ff d0                	call   eax
10006911:	83 c4 10             	add    esp,0x10
10006914:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006917:	8b 80 b0 00 00 00    	mov    eax,DWORD PTR [eax+0xb0]
1000691d:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006920:	89 86 ac 00 00 00    	mov    DWORD PTR [esi+0xac],eax
10006926:	e9 12 fb ff ff       	jmp    1000643d <read_chunks+0x2f4>
1000692b:	f6 80 ac 00 00 00 02 	test   BYTE PTR [eax+0xac],0x2
10006932:	0f 85 8e fa ff ff    	jne    100063c6 <read_chunks+0x27d>
10006938:	e9 7c 10 00 00       	jmp    100079b9 <read_chunks+0x1870>
1000693d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006940:	f6 40 75 01          	test   BYTE PTR [eax+0x75],0x1
10006944:	0f 84 2f 01 00 00    	je     10006a79 <read_chunks+0x930>
1000694a:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
1000694d:	e9 7c 0f 00 00       	jmp    100078ce <read_chunks+0x1785>
10006952:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10006955:	85 d2                	test   edx,edx
10006957:	0f 84 e1 0c 00 00    	je     1000763e <read_chunks+0x14f5>
1000695d:	81 fa 00 03 00 00    	cmp    edx,0x300
10006963:	76 05                	jbe    1000696a <read_chunks+0x821>
10006965:	ba 00 03 00 00       	mov    edx,0x300
1000696a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000696d:	e8 4c ef ff ff       	call   100058be <read_chunk_bytes>
10006972:	89 c1                	mov    ecx,eax
10006974:	85 c0                	test   eax,eax
10006976:	0f 84 27 fc ff ff    	je     100065a3 <read_chunks+0x45a>
1000697c:	e9 7f 0f 00 00       	jmp    10007900 <read_chunks+0x17b7>
10006981:	50                   	push   eax
10006982:	6a 04                	push   0x4
10006984:	68 70 d7 00 10       	push   0x1000d770	10006985: R_386_32	.text
10006989:	57                   	push   edi
1000698a:	e8 fc ff ff ff       	call   1000698b <read_chunks+0x842>	1000698b: R_386_PC32	memcmp
1000698f:	83 c4 10             	add    esp,0x10
10006992:	85 c0                	test   eax,eax
10006994:	0f 85 89 00 00 00    	jne    10006a23 <read_chunks+0x8da>
1000699a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000699d:	f6 80 a5 00 00 00 07 	test   BYTE PTR [eax+0xa5],0x7
100069a4:	0f 85 cf 00 00 00    	jne    10006a79 <read_chunks+0x930>
100069aa:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100069ad:	b9 03 00 00 00       	mov    ecx,0x3
100069b2:	31 d2                	xor    edx,edx
100069b4:	f7 f1                	div    ecx
100069b6:	89 c6                	mov    esi,eax
100069b8:	85 d2                	test   edx,edx
100069ba:	0f 85 7e 0c 00 00    	jne    1000763e <read_chunks+0x14f5>
100069c0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100069c3:	89 b0 00 01 00 00    	mov    DWORD PTR [eax+0x100],esi
100069c9:	8d 90 f0 00 00 00    	lea    edx,[eax+0xf0]
100069cf:	05 00 01 00 00       	add    eax,0x100
100069d4:	e8 0e ed ff ff       	call   100056e7 <check_plte>
100069d9:	85 c0                	test   eax,eax
100069db:	0f 85 5d 0c 00 00    	jne    1000763e <read_chunks+0x14f5>
100069e1:	8b 4d c4             	mov    ecx,DWORD PTR [ebp-0x3c]
100069e4:	8d 14 b1             	lea    edx,[ecx+esi*4]
100069e7:	39 d1                	cmp    ecx,edx
100069e9:	74 22                	je     10006a0d <read_chunks+0x8c4>
100069eb:	8a 03                	mov    al,BYTE PTR [ebx]
100069ed:	88 81 04 01 00 00    	mov    BYTE PTR [ecx+0x104],al
100069f3:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
100069f6:	88 81 05 01 00 00    	mov    BYTE PTR [ecx+0x105],al
100069fc:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
100069ff:	88 81 06 01 00 00    	mov    BYTE PTR [ecx+0x106],al
10006a05:	83 c3 03             	add    ebx,0x3
10006a08:	83 c1 04             	add    ecx,0x4
10006a0b:	eb da                	jmp    100069e7 <read_chunks+0x89e>
10006a0d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a10:	80 88 a4 00 00 00 02 	or     BYTE PTR [eax+0xa4],0x2
10006a17:	80 88 ac 00 00 00 02 	or     BYTE PTR [eax+0xac],0x2
10006a1e:	e9 fb f9 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006a23:	50                   	push   eax
10006a24:	6a 04                	push   0x4
10006a26:	68 68 d7 00 10       	push   0x1000d768	10006a27: R_386_32	.text
10006a2b:	57                   	push   edi
10006a2c:	e8 fc ff ff ff       	call   10006a2d <read_chunks+0x8e4>	10006a2d: R_386_PC32	memcmp
10006a31:	83 c4 10             	add    esp,0x10
10006a34:	85 c0                	test   eax,eax
10006a36:	75 28                	jne    10006a60 <read_chunks+0x917>
10006a38:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a3b:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006a3f:	75 38                	jne    10006a79 <read_chunks+0x930>
10006a41:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
10006a45:	0f 85 f3 0b 00 00    	jne    1000763e <read_chunks+0x14f5>
10006a4b:	e8 b3 ea ff ff       	call   10005503 <read_and_check_crc>
10006a50:	89 c1                	mov    ecx,eax
10006a52:	83 f8 ff             	cmp    eax,0xffffffff
10006a55:	0f 85 83 0e 00 00    	jne    100078de <read_chunks+0x1795>
10006a5b:	e9 76 f9 ff ff       	jmp    100063d6 <read_chunks+0x28d>
10006a60:	50                   	push   eax
10006a61:	6a 04                	push   0x4
10006a63:	68 74 d7 00 10       	push   0x1000d774	10006a64: R_386_32	.text
10006a68:	57                   	push   edi
10006a69:	e8 fc ff ff ff       	call   10006a6a <read_chunks+0x921>	10006a6a: R_386_PC32	memcmp
10006a6e:	83 c4 10             	add    esp,0x10
10006a71:	85 c0                	test   eax,eax
10006a73:	0f 85 4a 0f 00 00    	jne    100079c3 <read_chunks+0x187a>
10006a79:	b9 10 00 00 00       	mov    ecx,0x10
10006a7e:	e9 ab 0e 00 00       	jmp    1000792e <read_chunks+0x17e5>
10006a83:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a86:	8a 88 a4 00 00 00    	mov    cl,BYTE PTR [eax+0xa4]
10006a8c:	f6 c1 02             	test   cl,0x2
10006a8f:	75 e8                	jne    10006a79 <read_chunks+0x930>
10006a91:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006a95:	74 e2                	je     10006a79 <read_chunks+0x930>
10006a97:	f6 c1 04             	test   cl,0x4
10006a9a:	0f 85 2d 0f 00 00    	jne    100079cd <read_chunks+0x1884>
10006aa0:	83 7d dc 20          	cmp    DWORD PTR [ebp-0x24],0x20
10006aa4:	0f 85 94 0b 00 00    	jne    1000763e <read_chunks+0x14f5>
10006aaa:	89 d8                	mov    eax,ebx
10006aac:	e8 2e df ff ff       	call   100049df <read_u32>
10006ab1:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006ab4:	89 86 04 05 00 00    	mov    DWORD PTR [esi+0x504],eax
10006aba:	8d 43 04             	lea    eax,[ebx+0x4]
10006abd:	e8 1d df ff ff       	call   100049df <read_u32>
10006ac2:	89 86 08 05 00 00    	mov    DWORD PTR [esi+0x508],eax
10006ac8:	8d 43 08             	lea    eax,[ebx+0x8]
10006acb:	e8 0f df ff ff       	call   100049df <read_u32>
10006ad0:	89 86 0c 05 00 00    	mov    DWORD PTR [esi+0x50c],eax
10006ad6:	8d 43 0c             	lea    eax,[ebx+0xc]
10006ad9:	e8 01 df ff ff       	call   100049df <read_u32>
10006ade:	89 86 10 05 00 00    	mov    DWORD PTR [esi+0x510],eax
10006ae4:	8d 43 10             	lea    eax,[ebx+0x10]
10006ae7:	e8 f3 de ff ff       	call   100049df <read_u32>
10006aec:	89 86 14 05 00 00    	mov    DWORD PTR [esi+0x514],eax
10006af2:	8d 43 14             	lea    eax,[ebx+0x14]
10006af5:	e8 e5 de ff ff       	call   100049df <read_u32>
10006afa:	89 86 18 05 00 00    	mov    DWORD PTR [esi+0x518],eax
10006b00:	8d 43 18             	lea    eax,[ebx+0x18]
10006b03:	e8 d7 de ff ff       	call   100049df <read_u32>
10006b08:	89 86 1c 05 00 00    	mov    DWORD PTR [esi+0x51c],eax
10006b0e:	8d 43 1c             	lea    eax,[ebx+0x1c]
10006b11:	e8 c9 de ff ff       	call   100049df <read_u32>
10006b16:	89 86 20 05 00 00    	mov    DWORD PTR [esi+0x520],eax
10006b1c:	89 f0                	mov    eax,esi
10006b1e:	05 04 05 00 00       	add    eax,0x504
10006b23:	e8 e7 e0 ff ff       	call   10004c0f <check_chrm_int>
10006b28:	85 c0                	test   eax,eax
10006b2a:	0f 85 a7 0e 00 00    	jne    100079d7 <read_chunks+0x188e>
10006b30:	83 c9 04             	or     ecx,0x4
10006b33:	88 8e a4 00 00 00    	mov    BYTE PTR [esi+0xa4],cl
10006b39:	80 8e ac 00 00 00 04 	or     BYTE PTR [esi+0xac],0x4
10006b40:	e9 d9 f8 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006b45:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b48:	8a 90 a4 00 00 00    	mov    dl,BYTE PTR [eax+0xa4]
10006b4e:	f6 c2 02             	test   dl,0x2
10006b51:	0f 85 22 ff ff ff    	jne    10006a79 <read_chunks+0x930>
10006b57:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006b5b:	0f 84 18 ff ff ff    	je     10006a79 <read_chunks+0x930>
10006b61:	f6 c2 10             	test   dl,0x10
10006b64:	0f 85 77 0e 00 00    	jne    100079e1 <read_chunks+0x1898>
10006b6a:	83 7d dc 04          	cmp    DWORD PTR [ebp-0x24],0x4
10006b6e:	0f 85 ca 0a 00 00    	jne    1000763e <read_chunks+0x14f5>
10006b74:	89 d8                	mov    eax,ebx
10006b76:	e8 64 de ff ff       	call   100049df <read_u32>
10006b7b:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006b7e:	89 86 7c 05 00 00    	mov    DWORD PTR [esi+0x57c],eax
10006b84:	85 c0                	test   eax,eax
10006b86:	0f 8e 5f 0e 00 00    	jle    100079eb <read_chunks+0x18a2>
10006b8c:	83 ca 10             	or     edx,0x10
10006b8f:	88 96 a4 00 00 00    	mov    BYTE PTR [esi+0xa4],dl
10006b95:	80 8e ac 00 00 00 10 	or     BYTE PTR [esi+0xac],0x10
10006b9c:	e9 7d f8 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006ba1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006ba4:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
10006baa:	a8 02                	test   al,0x2
10006bac:	0f 85 c7 fe ff ff    	jne    10006a79 <read_chunks+0x930>
10006bb2:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006bb5:	83 7f 70 08          	cmp    DWORD PTR [edi+0x70],0x8
10006bb9:	0f 84 ba fe ff ff    	je     10006a79 <read_chunks+0x930>
10006bbf:	a8 20                	test   al,0x20
10006bc1:	0f 85 2e 0e 00 00    	jne    100079f5 <read_chunks+0x18ac>
10006bc7:	8a 87 f9 00 00 00    	mov    al,BYTE PTR [edi+0xf9]
10006bcd:	84 c0                	test   al,al
10006bcf:	75 17                	jne    10006be8 <read_chunks+0xa9f>
10006bd1:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006bd5:	0f 85 63 0a 00 00    	jne    1000763e <read_chunks+0x14f5>
10006bdb:	8a 03                	mov    al,BYTE PTR [ebx]
10006bdd:	88 87 80 05 00 00    	mov    BYTE PTR [edi+0x580],al
10006be3:	e9 87 00 00 00       	jmp    10006c6f <read_chunks+0xb26>
10006be8:	8d 50 fe             	lea    edx,[eax-0x2]
10006beb:	80 fa 01             	cmp    dl,0x1
10006bee:	77 29                	ja     10006c19 <read_chunks+0xad0>
10006bf0:	83 7d dc 03          	cmp    DWORD PTR [ebp-0x24],0x3
10006bf4:	0f 85 44 0a 00 00    	jne    1000763e <read_chunks+0x14f5>
10006bfa:	8a 03                	mov    al,BYTE PTR [ebx]
10006bfc:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006bff:	88 87 81 05 00 00    	mov    BYTE PTR [edi+0x581],al
10006c05:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006c08:	88 87 82 05 00 00    	mov    BYTE PTR [edi+0x582],al
10006c0e:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
10006c11:	88 87 83 05 00 00    	mov    BYTE PTR [edi+0x583],al
10006c17:	eb 56                	jmp    10006c6f <read_chunks+0xb26>
10006c19:	3c 04                	cmp    al,0x4
10006c1b:	75 1c                	jne    10006c39 <read_chunks+0xaf0>
10006c1d:	83 7d dc 02          	cmp    DWORD PTR [ebp-0x24],0x2
10006c21:	0f 85 17 0a 00 00    	jne    1000763e <read_chunks+0x14f5>
10006c27:	8a 03                	mov    al,BYTE PTR [ebx]
10006c29:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006c2c:	88 86 80 05 00 00    	mov    BYTE PTR [esi+0x580],al
10006c32:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006c35:	89 f7                	mov    edi,esi
10006c37:	eb 30                	jmp    10006c69 <read_chunks+0xb20>
10006c39:	3c 06                	cmp    al,0x6
10006c3b:	75 32                	jne    10006c6f <read_chunks+0xb26>
10006c3d:	83 7d dc 04          	cmp    DWORD PTR [ebp-0x24],0x4
10006c41:	0f 85 f7 09 00 00    	jne    1000763e <read_chunks+0x14f5>
10006c47:	8a 03                	mov    al,BYTE PTR [ebx]
10006c49:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006c4c:	88 86 81 05 00 00    	mov    BYTE PTR [esi+0x581],al
10006c52:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006c55:	89 f7                	mov    edi,esi
10006c57:	88 86 82 05 00 00    	mov    BYTE PTR [esi+0x582],al
10006c5d:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
10006c60:	88 86 83 05 00 00    	mov    BYTE PTR [esi+0x583],al
10006c66:	8a 43 03             	mov    al,BYTE PTR [ebx+0x3]
10006c69:	88 87 84 05 00 00    	mov    BYTE PTR [edi+0x584],al
10006c6f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c72:	8d 90 f0 00 00 00    	lea    edx,[eax+0xf0]
10006c78:	05 80 05 00 00       	add    eax,0x580
10006c7d:	e8 a1 ea ff ff       	call   10005723 <check_sbit.part.15>
10006c82:	85 c0                	test   eax,eax
10006c84:	0f 85 75 0d 00 00    	jne    100079ff <read_chunks+0x18b6>
10006c8a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c8d:	80 88 a4 00 00 00 20 	or     BYTE PTR [eax+0xa4],0x20
10006c94:	80 88 ac 00 00 00 20 	or     BYTE PTR [eax+0xac],0x20
10006c9b:	e9 7e f7 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006ca0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006ca3:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
10006ca9:	a8 02                	test   al,0x2
10006cab:	0f 85 c8 fd ff ff    	jne    10006a79 <read_chunks+0x930>
10006cb1:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006cb4:	83 7e 70 08          	cmp    DWORD PTR [esi+0x70],0x8
10006cb8:	0f 84 bb fd ff ff    	je     10006a79 <read_chunks+0x930>
10006cbe:	a8 40                	test   al,0x40
10006cc0:	0f 85 43 0d 00 00    	jne    10007a09 <read_chunks+0x18c0>
10006cc6:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006cca:	0f 85 6e 09 00 00    	jne    1000763e <read_chunks+0x14f5>
10006cd0:	8a 03                	mov    al,BYTE PTR [ebx]
10006cd2:	88 86 85 05 00 00    	mov    BYTE PTR [esi+0x585],al
10006cd8:	3c 03                	cmp    al,0x3
10006cda:	0f 87 33 0d 00 00    	ja     10007a13 <read_chunks+0x18ca>
10006ce0:	80 8e a4 00 00 00 40 	or     BYTE PTR [esi+0xa4],0x40
10006ce7:	80 8e ac 00 00 00 40 	or     BYTE PTR [esi+0xac],0x40
10006cee:	e9 2b f7 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006cf3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006cf6:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006cfa:	0f 84 79 fd ff ff    	je     10006a79 <read_chunks+0x930>
10006d00:	f6 80 a5 00 00 00 01 	test   BYTE PTR [eax+0xa5],0x1
10006d07:	0f 85 10 0d 00 00    	jne    10007a1d <read_chunks+0x18d4>
10006d0d:	8a 80 f9 00 00 00    	mov    al,BYTE PTR [eax+0xf9]
10006d13:	88 c2                	mov    dl,al
10006d15:	80 e2 fb             	and    dl,0xfb
10006d18:	75 1b                	jne    10006d35 <read_chunks+0xbec>
10006d1a:	83 7d dc 02          	cmp    DWORD PTR [ebp-0x24],0x2
10006d1e:	0f 85 1a 09 00 00    	jne    1000763e <read_chunks+0x14f5>
10006d24:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006d27:	86 e0                	xchg   al,ah
10006d29:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006d2c:	66 89 86 90 05 00 00 	mov    WORD PTR [esi+0x590],ax
10006d33:	eb 71                	jmp    10006da6 <read_chunks+0xc5d>
10006d35:	80 fa 02             	cmp    dl,0x2
10006d38:	75 35                	jne    10006d6f <read_chunks+0xc26>
10006d3a:	83 7d dc 06          	cmp    DWORD PTR [ebp-0x24],0x6
10006d3e:	0f 85 fa 08 00 00    	jne    1000763e <read_chunks+0x14f5>
10006d44:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006d47:	86 e0                	xchg   al,ah
10006d49:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006d4c:	66 89 87 92 05 00 00 	mov    WORD PTR [edi+0x592],ax
10006d53:	66 8b 43 02          	mov    ax,WORD PTR [ebx+0x2]
10006d57:	86 e0                	xchg   al,ah
10006d59:	66 89 87 94 05 00 00 	mov    WORD PTR [edi+0x594],ax
10006d60:	66 8b 43 04          	mov    ax,WORD PTR [ebx+0x4]
10006d64:	86 e0                	xchg   al,ah
10006d66:	66 89 87 96 05 00 00 	mov    WORD PTR [edi+0x596],ax
10006d6d:	eb 37                	jmp    10006da6 <read_chunks+0xc5d>
10006d6f:	3c 03                	cmp    al,0x3
10006d71:	75 33                	jne    10006da6 <read_chunks+0xc5d>
10006d73:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006d77:	0f 85 c1 08 00 00    	jne    1000763e <read_chunks+0x14f5>
10006d7d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d80:	f6 80 a4 00 00 00 02 	test   BYTE PTR [eax+0xa4],0x2
10006d87:	0f 84 9a 0c 00 00    	je     10007a27 <read_chunks+0x18de>
10006d8d:	0f b6 13             	movzx  edx,BYTE PTR [ebx]
10006d90:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006d93:	66 89 96 98 05 00 00 	mov    WORD PTR [esi+0x598],dx
10006d9a:	3b 96 00 01 00 00    	cmp    edx,DWORD PTR [esi+0x100]
10006da0:	0f 83 8b 0c 00 00    	jae    10007a31 <read_chunks+0x18e8>
10006da6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006da9:	80 88 a5 00 00 00 01 	or     BYTE PTR [eax+0xa5],0x1
10006db0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006db3:	80 88 ad 00 00 00 01 	or     BYTE PTR [eax+0xad],0x1
10006dba:	e9 5f f6 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006dbf:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006dc2:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006dc6:	0f 84 ad fc ff ff    	je     10006a79 <read_chunks+0x930>
10006dcc:	f6 80 a5 00 00 00 04 	test   BYTE PTR [eax+0xa5],0x4
10006dd3:	0f 85 62 0c 00 00    	jne    10007a3b <read_chunks+0x18f2>
10006dd9:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10006ddc:	85 c0                	test   eax,eax
10006dde:	0f 84 5a 08 00 00    	je     1000763e <read_chunks+0x14f5>
10006de4:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006de7:	8a 96 f9 00 00 00    	mov    dl,BYTE PTR [esi+0xf9]
10006ded:	84 d2                	test   dl,dl
10006def:	75 1a                	jne    10006e0b <read_chunks+0xcc2>
10006df1:	83 f8 02             	cmp    eax,0x2
10006df4:	0f 85 44 08 00 00    	jne    1000763e <read_chunks+0x14f5>
10006dfa:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006dfd:	86 e0                	xchg   al,ah
10006dff:	66 89 86 9c 07 00 00 	mov    WORD PTR [esi+0x79c],ax
10006e06:	e9 87 00 00 00       	jmp    10006e92 <read_chunks+0xd49>
10006e0b:	80 fa 02             	cmp    dl,0x2
10006e0e:	75 34                	jne    10006e44 <read_chunks+0xcfb>
10006e10:	83 f8 06             	cmp    eax,0x6
10006e13:	0f 85 25 08 00 00    	jne    1000763e <read_chunks+0x14f5>
10006e19:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006e1c:	86 e0                	xchg   al,ah
10006e1e:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006e21:	66 89 86 9e 07 00 00 	mov    WORD PTR [esi+0x79e],ax
10006e28:	66 8b 43 02          	mov    ax,WORD PTR [ebx+0x2]
10006e2c:	86 e0                	xchg   al,ah
10006e2e:	66 89 86 a0 07 00 00 	mov    WORD PTR [esi+0x7a0],ax
10006e35:	66 8b 43 04          	mov    ax,WORD PTR [ebx+0x4]
10006e39:	86 e0                	xchg   al,ah
10006e3b:	66 89 86 a2 07 00 00 	mov    WORD PTR [esi+0x7a2],ax
10006e42:	eb 4e                	jmp    10006e92 <read_chunks+0xd49>
10006e44:	80 fa 03             	cmp    dl,0x3
10006e47:	75 35                	jne    10006e7e <read_chunks+0xd35>
10006e49:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006e4c:	3b 87 00 01 00 00    	cmp    eax,DWORD PTR [edi+0x100]
10006e52:	0f 87 e6 07 00 00    	ja     1000763e <read_chunks+0x14f5>
10006e58:	f6 87 a4 00 00 00 02 	test   BYTE PTR [edi+0xa4],0x2
10006e5f:	0f 84 e0 0b 00 00    	je     10007a45 <read_chunks+0x18fc>
10006e65:	8d 97 a8 07 00 00    	lea    edx,[edi+0x7a8]
10006e6b:	89 d7                	mov    edi,edx
10006e6d:	89 de                	mov    esi,ebx
10006e6f:	89 c1                	mov    ecx,eax
10006e71:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006e73:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006e76:	89 86 a4 07 00 00    	mov    DWORD PTR [esi+0x7a4],eax
10006e7c:	eb 14                	jmp    10006e92 <read_chunks+0xd49>
10006e7e:	80 fa 04             	cmp    dl,0x4
10006e81:	75 0a                	jne    10006e8d <read_chunks+0xd44>
10006e83:	b9 24 00 00 00       	mov    ecx,0x24
10006e88:	e9 a1 0a 00 00       	jmp    1000792e <read_chunks+0x17e5>
10006e8d:	80 fa 06             	cmp    dl,0x6
10006e90:	74 f1                	je     10006e83 <read_chunks+0xd3a>
10006e92:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e95:	80 88 a5 00 00 00 04 	or     BYTE PTR [eax+0xa5],0x4
10006e9c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e9f:	80 88 ad 00 00 00 04 	or     BYTE PTR [eax+0xad],0x4
10006ea6:	e9 73 f5 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006eab:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006eae:	f6 80 a4 00 00 00 02 	test   BYTE PTR [eax+0xa4],0x2
10006eb5:	0f 84 94 0b 00 00    	je     10007a4f <read_chunks+0x1906>
10006ebb:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006ebf:	0f 84 b4 fb ff ff    	je     10006a79 <read_chunks+0x930>
10006ec5:	f6 80 a5 00 00 00 02 	test   BYTE PTR [eax+0xa5],0x2
10006ecc:	0f 85 87 0b 00 00    	jne    10007a59 <read_chunks+0x1910>
10006ed2:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10006ed5:	d1 ea                	shr    edx,1
10006ed7:	3b 90 00 01 00 00    	cmp    edx,DWORD PTR [eax+0x100]
10006edd:	0f 85 5b 07 00 00    	jne    1000763e <read_chunks+0x14f5>
10006ee3:	31 c0                	xor    eax,eax
10006ee5:	39 c2                	cmp    edx,eax
10006ee7:	74 14                	je     10006efd <read_chunks+0xdb4>
10006ee9:	66 8b 0c 43          	mov    cx,WORD PTR [ebx+eax*2]
10006eed:	86 e9                	xchg   cl,ch
10006eef:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006ef2:	66 89 8c 47 9a 05 00 00 	mov    WORD PTR [edi+eax*2+0x59a],cx
10006efa:	40                   	inc    eax
10006efb:	eb e8                	jmp    10006ee5 <read_chunks+0xd9c>
10006efd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f00:	80 88 a5 00 00 00 02 	or     BYTE PTR [eax+0xa5],0x2
10006f07:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f0a:	80 88 ad 00 00 00 02 	or     BYTE PTR [eax+0xad],0x2
10006f11:	e9 08 f5 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006f16:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f19:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006f1d:	0f 84 56 fb ff ff    	je     10006a79 <read_chunks+0x930>
10006f23:	8a 88 a5 00 00 00    	mov    cl,BYTE PTR [eax+0xa5]
10006f29:	f6 c1 08             	test   cl,0x8
10006f2c:	0f 85 31 0b 00 00    	jne    10007a63 <read_chunks+0x191a>
10006f32:	83 7d dc 09          	cmp    DWORD PTR [ebp-0x24],0x9
10006f36:	0f 85 02 07 00 00    	jne    1000763e <read_chunks+0x14f5>
10006f3c:	89 d8                	mov    eax,ebx
10006f3e:	e8 9c da ff ff       	call   100049df <read_u32>
10006f43:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006f46:	89 86 a8 08 00 00    	mov    DWORD PTR [esi+0x8a8],eax
10006f4c:	8d 43 04             	lea    eax,[ebx+0x4]
10006f4f:	e8 8b da ff ff       	call   100049df <read_u32>
10006f54:	89 86 ac 08 00 00    	mov    DWORD PTR [esi+0x8ac],eax
10006f5a:	8a 43 08             	mov    al,BYTE PTR [ebx+0x8]
10006f5d:	88 86 b0 08 00 00    	mov    BYTE PTR [esi+0x8b0],al
10006f63:	89 f0                	mov    eax,esi
10006f65:	05 a8 08 00 00       	add    eax,0x8a8
10006f6a:	e8 ac e8 ff ff       	call   1000581b <check_phys>
10006f6f:	85 c0                	test   eax,eax
10006f71:	0f 85 f6 0a 00 00    	jne    10007a6d <read_chunks+0x1924>
10006f77:	83 c9 08             	or     ecx,0x8
10006f7a:	88 8e a5 00 00 00    	mov    BYTE PTR [esi+0xa5],cl
10006f80:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f83:	80 88 ad 00 00 00 08 	or     BYTE PTR [eax+0xad],0x8
10006f8a:	e9 8f f4 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10006f8f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f92:	0f b6 b0 a5 00 00 00 	movzx  esi,BYTE PTR [eax+0xa5]
10006f99:	f7 c6 20 00 00 00    	test   esi,0x20
10006f9f:	75 65                	jne    10007006 <read_chunks+0xebd>
10006fa1:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10006fa5:	75 69                	jne    10007010 <read_chunks+0xec7>
10006fa7:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006faa:	86 e0                	xchg   al,ah
10006fac:	66 89 45 d0          	mov    WORD PTR [ebp-0x30],ax
10006fb0:	8a 43 06             	mov    al,BYTE PTR [ebx+0x6]
10006fb3:	8b 53 02             	mov    edx,DWORD PTR [ebx+0x2]
10006fb6:	89 55 d2             	mov    DWORD PTR [ebp-0x2e],edx
10006fb9:	88 45 d6             	mov    BYTE PTR [ebp-0x2a],al
10006fbc:	8d 45 d0             	lea    eax,[ebp-0x30]
10006fbf:	e8 7c e8 ff ff       	call   10005840 <check_time>
10006fc4:	85 c0                	test   eax,eax
10006fc6:	75 52                	jne    1000701a <read_chunks+0xed1>
10006fc8:	89 f0                	mov    eax,esi
10006fca:	83 c8 20             	or     eax,0x20
10006fcd:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006fd0:	88 87 a5 00 00 00    	mov    BYTE PTR [edi+0xa5],al
10006fd6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006fd9:	f6 80 a9 00 00 00 20 	test   BYTE PTR [eax+0xa9],0x20
10006fe0:	75 15                	jne    10006ff7 <read_chunks+0xeae>
10006fe2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006fe5:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10006fe8:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006feb:	89 86 bc 08 00 00    	mov    DWORD PTR [esi+0x8bc],eax
10006ff1:	89 96 c0 08 00 00    	mov    DWORD PTR [esi+0x8c0],edx
10006ff7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006ffa:	80 88 ad 00 00 00 20 	or     BYTE PTR [eax+0xad],0x20
10007001:	e9 18 f4 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10007006:	b9 1f 00 00 00       	mov    ecx,0x1f
1000700b:	e9 1e 09 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007010:	b9 11 00 00 00       	mov    ecx,0x11
10007015:	e9 f0 08 00 00       	jmp    1000790a <read_chunks+0x17c1>
1000701a:	b9 3b 00 00 00       	mov    ecx,0x3b
1000701f:	e9 0a 09 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007024:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007027:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
1000702b:	0f 84 48 fa ff ff    	je     10006a79 <read_chunks+0x930>
10007031:	8a 90 a5 00 00 00    	mov    dl,BYTE PTR [eax+0xa5]
10007037:	f6 c2 40             	test   dl,0x40
1000703a:	0f 85 37 0a 00 00    	jne    10007a77 <read_chunks+0x192e>
10007040:	83 7d dc 09          	cmp    DWORD PTR [ebp-0x24],0x9
10007044:	0f 85 f4 05 00 00    	jne    1000763e <read_chunks+0x14f5>
1000704a:	89 d8                	mov    eax,ebx
1000704c:	e8 8e d9 ff ff       	call   100049df <read_u32>
10007051:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10007054:	89 87 c4 08 00 00    	mov    DWORD PTR [edi+0x8c4],eax
1000705a:	8d 43 04             	lea    eax,[ebx+0x4]
1000705d:	e8 7d d9 ff ff       	call   100049df <read_u32>
10007062:	89 87 c8 08 00 00    	mov    DWORD PTR [edi+0x8c8],eax
10007068:	8a 43 08             	mov    al,BYTE PTR [ebx+0x8]
1000706b:	88 87 cc 08 00 00    	mov    BYTE PTR [edi+0x8cc],al
10007071:	3c 01                	cmp    al,0x1
10007073:	0f 87 08 0a 00 00    	ja     10007a81 <read_chunks+0x1938>
10007079:	83 ca 40             	or     edx,0x40
1000707c:	88 97 a5 00 00 00    	mov    BYTE PTR [edi+0xa5],dl
10007082:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007085:	80 88 ad 00 00 00 40 	or     BYTE PTR [eax+0xad],0x40
1000708c:	e9 8d f3 ff ff       	jmp    1000641e <read_chunks+0x2d5>
10007091:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007094:	80 b8 a5 00 00 00 00 	cmp    BYTE PTR [eax+0xa5],0x0
1000709b:	0f 88 aa 00 00 00    	js     1000714b <read_chunks+0x1002>
100070a1:	80 88 a5 00 00 00 80 	or     BYTE PTR [eax+0xa5],0x80
100070a8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070ab:	80 b8 a9 00 00 00 00 	cmp    BYTE PTR [eax+0xa9],0x0
100070b2:	0f 88 10 08 00 00    	js     100078c8 <read_chunks+0x177f>
100070b8:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
100070bb:	89 f2                	mov    edx,esi
100070bd:	e8 85 e2 ff ff       	call   10005347 <increase_cache_usage>
100070c2:	85 c0                	test   eax,eax
100070c4:	0f 85 d5 09 00 00    	jne    10007a9f <read_chunks+0x1956>
100070ca:	89 75 d0             	mov    DWORD PTR [ebp-0x30],esi
100070cd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070d0:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
100070d3:	89 f2                	mov    edx,esi
100070d5:	e8 2f e2 ff ff       	call   10005309 <spng__malloc.isra.0>
100070da:	89 c3                	mov    ebx,eax
100070dc:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
100070df:	85 c0                	test   eax,eax
100070e1:	0f 84 c2 09 00 00    	je     10007aa9 <read_chunks+0x1960>
100070e7:	89 f1                	mov    ecx,esi
100070e9:	89 c2                	mov    edx,eax
100070eb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070ee:	e8 4b e9 ff ff       	call   10005a3e <read_chunk_bytes2>
100070f3:	85 c0                	test   eax,eax
100070f5:	74 10                	je     10007107 <read_chunks+0xfbe>
100070f7:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100070fa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070fd:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10007100:	89 da                	mov    edx,ebx
10007102:	e9 a7 07 00 00       	jmp    100078ae <read_chunks+0x1765>
10007107:	8d 45 d0             	lea    eax,[ebp-0x30]
1000710a:	e8 3a dc ff ff       	call   10004d49 <check_exif>
1000710f:	85 c0                	test   eax,eax
10007111:	74 17                	je     1000712a <read_chunks+0xfe1>
10007113:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007116:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10007119:	89 da                	mov    edx,ebx
1000711b:	e8 10 e2 ff ff       	call   10005330 <spng__free.isra.3>
10007120:	b9 3d 00 00 00       	mov    ecx,0x3d
10007125:	e9 04 08 00 00       	jmp    1000792e <read_chunks+0x17e5>
1000712a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000712d:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10007130:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10007133:	89 86 d0 08 00 00    	mov    DWORD PTR [esi+0x8d0],eax
10007139:	89 96 d4 08 00 00    	mov    DWORD PTR [esi+0x8d4],edx
1000713f:	80 8e ad 00 00 00 80 	or     BYTE PTR [esi+0xad],0x80
10007146:	e9 7d 07 00 00       	jmp    100078c8 <read_chunks+0x177f>
1000714b:	b9 21 00 00 00       	mov    ecx,0x21
10007150:	e9 d9 07 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007155:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007158:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
1000715e:	a8 02                	test   al,0x2
10007160:	0f 85 13 f9 ff ff    	jne    10006a79 <read_chunks+0x930>
10007166:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10007169:	83 7f 70 08          	cmp    DWORD PTR [edi+0x70],0x8
1000716d:	0f 84 06 f9 ff ff    	je     10006a79 <read_chunks+0x930>
10007173:	a8 08                	test   al,0x8
10007175:	0f 85 10 09 00 00    	jne    10007a8b <read_chunks+0x1942>
1000717b:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
1000717e:	89 75 c0             	mov    DWORD PTR [ebp-0x40],esi
10007181:	85 f6                	test   esi,esi
10007183:	0f 84 b5 04 00 00    	je     1000763e <read_chunks+0x14f5>
10007189:	83 c8 08             	or     eax,0x8
1000718c:	88 87 a4 00 00 00    	mov    BYTE PTR [edi+0xa4],al
10007192:	8b 5d c0             	mov    ebx,DWORD PTR [ebp-0x40]
10007195:	83 fb 51             	cmp    ebx,0x51
10007198:	76 05                	jbe    1000719f <read_chunks+0x1056>
1000719a:	bb 51 00 00 00       	mov    ebx,0x51
1000719f:	89 da                	mov    edx,ebx
100071a1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071a4:	e8 15 e7 ff ff       	call   100058be <read_chunk_bytes>
100071a9:	89 c1                	mov    ecx,eax
100071ab:	85 c0                	test   eax,eax
100071ad:	0f 85 4d 07 00 00    	jne    10007900 <read_chunks+0x17b7>
100071b3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071b6:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100071b9:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
100071bc:	52                   	push   edx
100071bd:	53                   	push   ebx
100071be:	6a 00                	push   0x0
100071c0:	50                   	push   eax
100071c1:	e8 fc ff ff ff       	call   100071c2 <read_chunks+0x1079>	100071c2: R_386_PC32	memchr
100071c6:	83 c4 10             	add    esp,0x10
100071c9:	85 c0                	test   eax,eax
100071cb:	75 0a                	jne    100071d7 <read_chunks+0x108e>
100071cd:	b9 27 00 00 00       	mov    ecx,0x27
100071d2:	e9 57 07 00 00       	jmp    1000792e <read_chunks+0x17e5>
100071d7:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100071da:	2b 45 bc             	sub    eax,DWORD PTR [ebp-0x44]
100071dd:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
100071e0:	83 f8 4f             	cmp    eax,0x4f
100071e3:	77 e8                	ja     100071cd <read_chunks+0x1084>
100071e5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071e8:	05 24 05 00 00       	add    eax,0x524
100071ed:	89 c7                	mov    edi,eax
100071ef:	8b 75 bc             	mov    esi,DWORD PTR [ebp-0x44]
100071f2:	8b 4d b8             	mov    ecx,DWORD PTR [ebp-0x48]
100071f5:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100071f7:	e8 72 df ff ff       	call   1000516e <check_png_keyword>
100071fc:	85 c0                	test   eax,eax
100071fe:	75 cd                	jne    100071cd <read_chunks+0x1084>
10007200:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10007203:	83 c0 02             	add    eax,0x2
10007206:	39 45 c0             	cmp    DWORD PTR [ebp-0x40],eax
10007209:	0f 82 2f 04 00 00    	jb     1000763e <read_chunks+0x14f5>
1000720f:	8b 55 b4             	mov    edx,DWORD PTR [ebp-0x4c]
10007212:	80 7a 01 00          	cmp    BYTE PTR [edx+0x1],0x0
10007216:	0f 85 79 08 00 00    	jne    10007a95 <read_chunks+0x194c>
1000721c:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
1000721f:	8d 8f 74 05 00 00    	lea    ecx,[edi+0x574]
10007225:	89 fe                	mov    esi,edi
10007227:	8d 97 78 05 00 00    	lea    edx,[edi+0x578]
1000722d:	57                   	push   edi
1000722e:	83 eb 02             	sub    ebx,0x2
10007231:	2b 5d b8             	sub    ebx,DWORD PTR [ebp-0x48]
10007234:	53                   	push   ebx
10007235:	03 45 bc             	add    eax,DWORD PTR [ebp-0x44]
10007238:	50                   	push   eax
10007239:	6a 00                	push   0x0
1000723b:	89 f0                	mov    eax,esi
1000723d:	e8 11 ed ff ff       	call   10005f53 <spng__inflate_stream>
10007242:	89 c1                	mov    ecx,eax
10007244:	83 c4 10             	add    esp,0x10
10007247:	85 c0                	test   eax,eax
10007249:	0f 85 b1 06 00 00    	jne    10007900 <read_chunks+0x17b7>
1000724f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007252:	80 88 ac 00 00 00 08 	or     BYTE PTR [eax+0xac],0x8
10007259:	e9 6a 06 00 00       	jmp    100078c8 <read_chunks+0x177f>
1000725e:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007261:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10007264:	85 c0                	test   eax,eax
10007266:	0f 84 d2 03 00 00    	je     1000763e <read_chunks+0x14f5>
1000726c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000726f:	80 88 a4 00 00 00 80 	or     BYTE PTR [eax+0xa4],0x80
10007276:	80 b8 a8 00 00 00 00 	cmp    BYTE PTR [eax+0xa8],0x0
1000727d:	0f 88 45 06 00 00    	js     100078c8 <read_chunks+0x177f>
10007283:	ba 70 00 00 00       	mov    edx,0x70
10007288:	e8 ba e0 ff ff       	call   10005347 <increase_cache_usage>
1000728d:	89 c6                	mov    esi,eax
1000728f:	85 c0                	test   eax,eax
10007291:	0f 85 08 08 00 00    	jne    10007a9f <read_chunks+0x1956>
10007297:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000729a:	8b 80 88 05 00 00    	mov    eax,DWORD PTR [eax+0x588]
100072a0:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100072a3:	8d 48 01             	lea    ecx,[eax+0x1]
100072a6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100072a9:	89 88 88 05 00 00    	mov    DWORD PTR [eax+0x588],ecx
100072af:	85 c9                	test   ecx,ecx
100072b1:	0f 84 4c 08 00 00    	je     10007b03 <read_chunks+0x19ba>
100072b7:	83 c8 ff             	or     eax,0xffffffff
100072ba:	31 d2                	xor    edx,edx
100072bc:	f7 f1                	div    ecx
100072be:	83 f8 6f             	cmp    eax,0x6f
100072c1:	0f 86 3c 08 00 00    	jbe    10007b03 <read_chunks+0x19ba>
100072c7:	53                   	push   ebx
100072c8:	53                   	push   ebx
100072c9:	6b c9 70             	imul   ecx,ecx,0x70
100072cc:	51                   	push   ecx
100072cd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100072d0:	ff b0 8c 05 00 00    	push   DWORD PTR [eax+0x58c]
100072d6:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
100072d9:	83 c4 10             	add    esp,0x10
100072dc:	85 c0                	test   eax,eax
100072de:	0f 84 c5 07 00 00    	je     10007aa9 <read_chunks+0x1960>
100072e4:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
100072e7:	89 87 8c 05 00 00    	mov    DWORD PTR [edi+0x58c],eax
100072ed:	6b 97 88 05 00 00 70 	imul   edx,DWORD PTR [edi+0x588],0x70
100072f4:	8d 5c 10 90          	lea    ebx,[eax+edx*1-0x70]
100072f8:	b9 1c 00 00 00       	mov    ecx,0x1c
100072fd:	89 df                	mov    edi,ebx
100072ff:	89 f0                	mov    eax,esi
10007301:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10007303:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007306:	c7 80 a0 00 00 00 f2 53 00 10 	mov    DWORD PTR [eax+0xa0],0x100053f2	1000730c: R_386_32	.text
10007310:	c7 45 c0 00 01 00 00 	mov    DWORD PTR [ebp-0x40],0x100
10007317:	81 7d bc ff 00 00 00 	cmp    DWORD PTR [ebp-0x44],0xff
1000731e:	77 06                	ja     10007326 <read_chunks+0x11dd>
10007320:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10007323:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10007326:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10007329:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000732c:	e8 8d e5 ff ff       	call   100058be <read_chunk_bytes>
10007331:	89 c1                	mov    ecx,eax
10007333:	85 c0                	test   eax,eax
10007335:	0f 85 c5 05 00 00    	jne    10007900 <read_chunks+0x17b7>
1000733b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000733e:	8b 70 10             	mov    esi,DWORD PTR [eax+0x10]
10007341:	52                   	push   edx
10007342:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10007345:	83 f8 50             	cmp    eax,0x50
10007348:	76 05                	jbe    1000734f <read_chunks+0x1206>
1000734a:	b8 50 00 00 00       	mov    eax,0x50
1000734f:	50                   	push   eax
10007350:	6a 00                	push   0x0
10007352:	56                   	push   esi
10007353:	e8 fc ff ff ff       	call   10007354 <read_chunks+0x120b>	10007354: R_386_PC32	memchr
10007358:	83 c4 10             	add    esp,0x10
1000735b:	89 c7                	mov    edi,eax
1000735d:	85 c0                	test   eax,eax
1000735f:	0f 84 8a 07 00 00    	je     10007aef <read_chunks+0x19a6>
10007365:	29 f0                	sub    eax,esi
10007367:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
1000736a:	50                   	push   eax
1000736b:	6a 04                	push   0x4
1000736d:	68 4c d7 00 10       	push   0x1000d74c	1000736e: R_386_32	.text
10007372:	8d 55 e0             	lea    edx,[ebp-0x20]
10007375:	52                   	push   edx
10007376:	e8 fc ff ff ff       	call   10007377 <read_chunks+0x122e>	10007377: R_386_PC32	memcmp
1000737b:	83 c4 10             	add    esp,0x10
1000737e:	85 c0                	test   eax,eax
10007380:	8d 55 e0             	lea    edx,[ebp-0x20]
10007383:	75 1f                	jne    100073a4 <read_chunks+0x125b>
10007385:	c7 03 01 00 00 00    	mov    DWORD PTR [ebx],0x1
1000738b:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000738e:	48                   	dec    eax
1000738f:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
10007392:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10007395:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10007398:	0f 84 04 01 00 00    	je     100074a2 <read_chunks+0x1359>
1000739e:	40                   	inc    eax
1000739f:	e9 fe 00 00 00       	jmp    100074a2 <read_chunks+0x1359>
100073a4:	50                   	push   eax
100073a5:	6a 04                	push   0x4
100073a7:	68 48 d7 00 10       	push   0x1000d748	100073a8: R_386_32	.text
100073ac:	52                   	push   edx
100073ad:	e8 fc ff ff ff       	call   100073ae <read_chunks+0x1265>	100073ae: R_386_PC32	memcmp
100073b2:	83 c4 10             	add    esp,0x10
100073b5:	85 c0                	test   eax,eax
100073b7:	8d 55 e0             	lea    edx,[ebp-0x20]
100073ba:	75 2e                	jne    100073ea <read_chunks+0x12a1>
100073bc:	c7 03 02 00 00 00    	mov    DWORD PTR [ebx],0x2
100073c2:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100073c5:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
100073c8:	83 f8 02             	cmp    eax,0x2
100073cb:	0f 86 e2 06 00 00    	jbe    10007ab3 <read_chunks+0x196a>
100073d1:	80 7f 01 00          	cmp    BYTE PTR [edi+0x1],0x0
100073d5:	0f 85 e2 06 00 00    	jne    10007abd <read_chunks+0x1974>
100073db:	c6 43 10 01          	mov    BYTE PTR [ebx+0x10],0x1
100073df:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100073e2:	83 c0 02             	add    eax,0x2
100073e5:	e9 b8 00 00 00       	jmp    100074a2 <read_chunks+0x1359>
100073ea:	50                   	push   eax
100073eb:	6a 04                	push   0x4
100073ed:	68 44 d7 00 10       	push   0x1000d744	100073ee: R_386_32	.text
100073f2:	52                   	push   edx
100073f3:	e8 fc ff ff ff       	call   100073f4 <read_chunks+0x12ab>	100073f4: R_386_PC32	memcmp
100073f8:	83 c4 10             	add    esp,0x10
100073fb:	85 c0                	test   eax,eax
100073fd:	0f 85 c4 06 00 00    	jne    10007ac7 <read_chunks+0x197e>
10007403:	c7 03 03 00 00 00    	mov    DWORD PTR [ebx],0x3
10007409:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
1000740c:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
1000740f:	83 f8 04             	cmp    eax,0x4
10007412:	77 0a                	ja     1000741e <read_chunks+0x12d5>
10007414:	b9 2f 00 00 00       	mov    ecx,0x2f
10007419:	e9 10 05 00 00       	jmp    1000792e <read_chunks+0x17e5>
1000741e:	8a 47 01             	mov    al,BYTE PTR [edi+0x1]
10007421:	88 43 10             	mov    BYTE PTR [ebx+0x10],al
10007424:	3c 01                	cmp    al,0x1
10007426:	0f 87 a5 06 00 00    	ja     10007ad1 <read_chunks+0x1988>
1000742c:	80 7f 02 00          	cmp    BYTE PTR [edi+0x2],0x0
10007430:	0f 85 a5 06 00 00    	jne    10007adb <read_chunks+0x1992>
10007436:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10007439:	83 c0 03             	add    eax,0x3
1000743c:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
1000743f:	50                   	push   eax
10007440:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10007443:	2b 45 ac             	sub    eax,DWORD PTR [ebp-0x54]
10007446:	50                   	push   eax
10007447:	6a 00                	push   0x0
10007449:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
1000744c:	01 f0                	add    eax,esi
1000744e:	50                   	push   eax
1000744f:	e8 fc ff ff ff       	call   10007450 <read_chunks+0x1307>	10007450: R_386_PC32	memchr
10007454:	83 c4 10             	add    esp,0x10
10007457:	85 c0                	test   eax,eax
10007459:	0f 84 86 06 00 00    	je     10007ae5 <read_chunks+0x199c>
1000745f:	8b 7d c0             	mov    edi,DWORD PTR [ebp-0x40]
10007462:	01 f7                	add    edi,esi
10007464:	89 fa                	mov    edx,edi
10007466:	29 c2                	sub    edx,eax
10007468:	4a                   	dec    edx
10007469:	7e a9                	jle    10007414 <read_chunks+0x12cb>
1000746b:	29 f0                	sub    eax,esi
1000746d:	40                   	inc    eax
1000746e:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
10007471:	50                   	push   eax
10007472:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10007475:	2b 45 b0             	sub    eax,DWORD PTR [ebp-0x50]
10007478:	50                   	push   eax
10007479:	6a 00                	push   0x0
1000747b:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
1000747e:	01 f0                	add    eax,esi
10007480:	50                   	push   eax
10007481:	e8 fc ff ff ff       	call   10007482 <read_chunks+0x1339>	10007482: R_386_PC32	memchr
10007486:	83 c4 10             	add    esp,0x10
10007489:	85 c0                	test   eax,eax
1000748b:	74 87                	je     10007414 <read_chunks+0x12cb>
1000748d:	39 c7                	cmp    edi,eax
1000748f:	74 83                	je     10007414 <read_chunks+0x12cb>
10007491:	29 f0                	sub    eax,esi
10007493:	40                   	inc    eax
10007494:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10007497:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000749a:	2b 45 b4             	sub    eax,DWORD PTR [ebp-0x4c]
1000749d:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
100074a0:	eb 11                	jmp    100074b3 <read_chunks+0x136a>
100074a2:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100074a5:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [ebp-0x50],0x0
100074ac:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [ebp-0x54],0x0
100074b3:	80 7b 10 00          	cmp    BYTE PTR [ebx+0x10],0x0
100074b7:	74 7c                	je     10007535 <read_chunks+0x13ec>
100074b9:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100074bc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100074bf:	e8 83 de ff ff       	call   10005347 <increase_cache_usage>
100074c4:	85 c0                	test   eax,eax
100074c6:	0f 85 d3 05 00 00    	jne    10007a9f <read_chunks+0x1956>
100074cc:	50                   	push   eax
100074cd:	50                   	push   eax
100074ce:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100074d1:	6a 01                	push   0x1
100074d3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100074d6:	ff 50 60             	call   DWORD PTR [eax+0x60]
100074d9:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100074dc:	83 c4 10             	add    esp,0x10
100074df:	85 c0                	test   eax,eax
100074e1:	0f 84 18 03 00 00    	je     100077ff <read_chunks+0x16b6>
100074e7:	89 c7                	mov    edi,eax
100074e9:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
100074ec:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100074ee:	8d 4b 0c             	lea    ecx,[ebx+0xc]
100074f1:	8d 53 08             	lea    edx,[ebx+0x8]
100074f4:	57                   	push   edi
100074f5:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100074f8:	2b 45 b4             	sub    eax,DWORD PTR [ebp-0x4c]
100074fb:	50                   	push   eax
100074fc:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100074ff:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10007502:	03 46 10             	add    eax,DWORD PTR [esi+0x10]
10007505:	50                   	push   eax
10007506:	6a 01                	push   0x1
10007508:	89 f0                	mov    eax,esi
1000750a:	e8 44 ea ff ff       	call   10005f53 <spng__inflate_stream>
1000750f:	89 c1                	mov    ecx,eax
10007511:	83 c4 10             	add    esp,0x10
10007514:	85 c0                	test   eax,eax
10007516:	0f 85 e4 03 00 00    	jne    10007900 <read_chunks+0x17b7>
1000751c:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000751f:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10007522:	c6 44 02 ff 00       	mov    BYTE PTR [edx+eax*1-0x1],0x0
10007527:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
1000752a:	03 53 0c             	add    edx,DWORD PTR [ebx+0xc]
1000752d:	89 53 1c             	mov    DWORD PTR [ebx+0x1c],edx
10007530:	e9 83 00 00 00       	jmp    100075b8 <read_chunks+0x146f>
10007535:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10007538:	40                   	inc    eax
10007539:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
1000753c:	89 c2                	mov    edx,eax
1000753e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007541:	e8 01 de ff ff       	call   10005347 <increase_cache_usage>
10007546:	85 c0                	test   eax,eax
10007548:	0f 85 51 05 00 00    	jne    10007a9f <read_chunks+0x1956>
1000754e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007551:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
10007554:	8b 55 a8             	mov    edx,DWORD PTR [ebp-0x58]
10007557:	e8 ad dd ff ff       	call   10005309 <spng__malloc.isra.0>
1000755c:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000755f:	85 c0                	test   eax,eax
10007561:	0f 84 98 02 00 00    	je     100077ff <read_chunks+0x16b6>
10007567:	89 c7                	mov    edi,eax
10007569:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
1000756c:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000756e:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
10007571:	39 75 bc             	cmp    DWORD PTR [ebp-0x44],esi
10007574:	77 23                	ja     10007599 <read_chunks+0x1450>
10007576:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10007579:	8b 75 b4             	mov    esi,DWORD PTR [ebp-0x4c]
1000757c:	8d 14 30             	lea    edx,[eax+esi*1]
1000757f:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10007582:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10007585:	29 f2                	sub    edx,esi
10007587:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
1000758a:	8b 75 bc             	mov    esi,DWORD PTR [ebp-0x44]
1000758d:	c6 04 30 00          	mov    BYTE PTR [eax+esi*1],0x0
10007591:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10007594:	89 43 1c             	mov    DWORD PTR [ebx+0x1c],eax
10007597:	eb 1f                	jmp    100075b8 <read_chunks+0x146f>
10007599:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
1000759c:	2b 4d c0             	sub    ecx,DWORD PTR [ebp-0x40]
1000759f:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100075a2:	03 53 04             	add    edx,DWORD PTR [ebx+0x4]
100075a5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075a8:	e8 91 e4 ff ff       	call   10005a3e <read_chunk_bytes2>
100075ad:	89 c1                	mov    ecx,eax
100075af:	85 c0                	test   eax,eax
100075b1:	74 c3                	je     10007576 <read_chunks+0x142d>
100075b3:	e9 48 03 00 00       	jmp    10007900 <read_chunks+0x17b7>
100075b8:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
100075bb:	89 f0                	mov    eax,esi
100075bd:	e8 ac db ff ff       	call   1000516e <check_png_keyword>
100075c2:	85 c0                	test   eax,eax
100075c4:	0f 85 25 05 00 00    	jne    10007aef <read_chunks+0x19a6>
100075ca:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
100075cd:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100075d0:	83 c9 ff             	or     ecx,0xffffffff
100075d3:	31 c0                	xor    eax,eax
100075d5:	8b 7d c0             	mov    edi,DWORD PTR [ebp-0x40]
100075d8:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100075da:	89 ca                	mov    edx,ecx
100075dc:	f7 d2                	not    edx
100075de:	8d 52 ff             	lea    edx,[edx-0x1]
100075e1:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
100075e4:	8b 3b                	mov    edi,DWORD PTR [ebx]
100075e6:	83 ff 03             	cmp    edi,0x3
100075e9:	74 26                	je     10007611 <read_chunks+0x14c8>
100075eb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075ee:	f6 40 74 10          	test   BYTE PTR [eax+0x74],0x10
100075f2:	74 25                	je     10007619 <read_chunks+0x14d0>
100075f4:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100075f7:	e8 7c e2 ff ff       	call   10005878 <check_png_text>
100075fc:	85 c0                	test   eax,eax
100075fe:	74 19                	je     10007619 <read_chunks+0x14d0>
10007600:	31 c9                	xor    ecx,ecx
10007602:	83 ff 02             	cmp    edi,0x2
10007605:	0f 94 c1             	sete   cl
10007608:	8d 4c 09 2b          	lea    ecx,[ecx+ecx*1+0x2b]
1000760c:	e9 1d 03 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007611:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
10007614:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10007617:	eb 06                	jmp    1000761f <read_chunks+0x14d6>
10007619:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
1000761c:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
1000761f:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10007622:	01 f0                	add    eax,esi
10007624:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10007627:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
1000762a:	01 f0                	add    eax,esi
1000762c:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
1000762f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007632:	80 88 ac 00 00 00 80 	or     BYTE PTR [eax+0xac],0x80
10007639:	e9 8a 02 00 00       	jmp    100078c8 <read_chunks+0x177f>
1000763e:	b9 11 00 00 00       	mov    ecx,0x11
10007643:	e9 e6 02 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007648:	b9 38 00 00 00       	mov    ecx,0x38
1000764d:	e9 dc 02 00 00       	jmp    1000792e <read_chunks+0x17e5>
10007652:	6b c6 5c             	imul   eax,esi,0x5c
10007655:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10007658:	03 82 b8 08 00 00    	add    eax,DWORD PTR [edx+0x8b8]
1000765e:	52                   	push   edx
1000765f:	52                   	push   edx
10007660:	53                   	push   ebx
10007661:	50                   	push   eax
10007662:	e8 fc ff ff ff       	call   10007663 <read_chunks+0x151a>	10007663: R_386_PC32	strcmp
10007667:	83 c4 10             	add    esp,0x10
1000766a:	85 c0                	test   eax,eax
1000766c:	0f 84 9b 04 00 00    	je     10007b0d <read_chunks+0x19c4>
10007672:	46                   	inc    esi
10007673:	e9 1c f2 ff ff       	jmp    10006894 <read_chunks+0x74b>
10007678:	80 fa 08             	cmp    dl,0x8
1000767b:	0f 85 96 04 00 00    	jne    10007b17 <read_chunks+0x19ce>
10007681:	b9 06 00 00 00       	mov    ecx,0x6
10007686:	e9 3a f2 ff ff       	jmp    100068c5 <read_chunks+0x77c>
1000768b:	6b f2 0a             	imul   esi,edx,0xa
1000768e:	89 f2                	mov    edx,esi
10007690:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007693:	e8 af dc ff ff       	call   10005347 <increase_cache_usage>
10007698:	85 c0                	test   eax,eax
1000769a:	0f 85 ff 03 00 00    	jne    10007a9f <read_chunks+0x1956>
100076a0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076a3:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
100076a6:	89 f2                	mov    edx,esi
100076a8:	e8 5c dc ff ff       	call   10005309 <spng__malloc.isra.0>
100076ad:	89 43 58             	mov    DWORD PTR [ebx+0x58],eax
100076b0:	85 c0                	test   eax,eax
100076b2:	75 13                	jne    100076c7 <read_chunks+0x157e>
100076b4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076b7:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
100076ba:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100076bd:	e8 6e dc ff ff       	call   10005330 <spng__free.isra.3>
100076c2:	e9 38 01 00 00       	jmp    100077ff <read_chunks+0x16b6>
100076c7:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
100076ca:	8b 7d b8             	mov    edi,DWORD PTR [ebp-0x48]
100076cd:	8d 54 3e 02          	lea    edx,[esi+edi*1+0x2]
100076d1:	8a 4b 50             	mov    cl,BYTE PTR [ebx+0x50]
100076d4:	80 f9 10             	cmp    cl,0x10
100076d7:	75 6a                	jne    10007743 <read_chunks+0x15fa>
100076d9:	6b 4b 54 0a          	imul   ecx,DWORD PTR [ebx+0x54],0xa
100076dd:	01 d1                	add    ecx,edx
100076df:	39 ca                	cmp    edx,ecx
100076e1:	74 38                	je     1000771b <read_chunks+0x15d2>
100076e3:	66 8b 1a             	mov    bx,WORD PTR [edx]
100076e6:	86 fb                	xchg   bl,bh
100076e8:	66 89 18             	mov    WORD PTR [eax],bx
100076eb:	66 8b 5a 02          	mov    bx,WORD PTR [edx+0x2]
100076ef:	86 fb                	xchg   bl,bh
100076f1:	66 89 58 02          	mov    WORD PTR [eax+0x2],bx
100076f5:	66 8b 5a 04          	mov    bx,WORD PTR [edx+0x4]
100076f9:	86 fb                	xchg   bl,bh
100076fb:	66 89 58 04          	mov    WORD PTR [eax+0x4],bx
100076ff:	66 8b 5a 06          	mov    bx,WORD PTR [edx+0x6]
10007703:	86 fb                	xchg   bl,bh
10007705:	66 89 58 06          	mov    WORD PTR [eax+0x6],bx
10007709:	66 8b 5a 08          	mov    bx,WORD PTR [edx+0x8]
1000770d:	86 fb                	xchg   bl,bh
1000770f:	66 89 58 08          	mov    WORD PTR [eax+0x8],bx
10007713:	83 c2 0a             	add    edx,0xa
10007716:	83 c0 0a             	add    eax,0xa
10007719:	eb c4                	jmp    100076df <read_chunks+0x1596>
1000771b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000771e:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10007721:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10007724:	e8 07 dc ff ff       	call   10005330 <spng__free.isra.3>
10007729:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
1000772c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000772f:	e8 46 dc ff ff       	call   1000537a <decrease_cache_usage>
10007734:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007737:	80 88 ad 00 00 00 10 	or     BYTE PTR [eax+0xad],0x10
1000773e:	e9 85 01 00 00       	jmp    100078c8 <read_chunks+0x177f>
10007743:	80 f9 08             	cmp    cl,0x8
10007746:	75 d3                	jne    1000771b <read_chunks+0x15d2>
10007748:	6b 4b 54 06          	imul   ecx,DWORD PTR [ebx+0x54],0x6
1000774c:	01 d1                	add    ecx,edx
1000774e:	39 ca                	cmp    edx,ecx
10007750:	74 c9                	je     1000771b <read_chunks+0x15d2>
10007752:	0f b6 1a             	movzx  ebx,BYTE PTR [edx]
10007755:	66 89 18             	mov    WORD PTR [eax],bx
10007758:	0f b6 5a 01          	movzx  ebx,BYTE PTR [edx+0x1]
1000775c:	66 89 58 02          	mov    WORD PTR [eax+0x2],bx
10007760:	0f b6 5a 02          	movzx  ebx,BYTE PTR [edx+0x2]
10007764:	66 89 58 04          	mov    WORD PTR [eax+0x4],bx
10007768:	0f b6 5a 03          	movzx  ebx,BYTE PTR [edx+0x3]
1000776c:	66 89 58 06          	mov    WORD PTR [eax+0x6],bx
10007770:	66 8b 5a 04          	mov    bx,WORD PTR [edx+0x4]
10007774:	86 fb                	xchg   bl,bh
10007776:	66 89 58 08          	mov    WORD PTR [eax+0x8],bx
1000777a:	83 c2 06             	add    edx,0x6
1000777d:	83 c0 0a             	add    eax,0xa
10007780:	eb cc                	jmp    1000774e <read_chunks+0x1605>
10007782:	80 88 a6 00 00 00 01 	or     BYTE PTR [eax+0xa6],0x1
10007789:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000778c:	80 78 74 00          	cmp    BYTE PTR [eax+0x74],0x0
10007790:	0f 89 32 01 00 00    	jns    100078c8 <read_chunks+0x177f>
10007796:	f6 80 aa 00 00 00 01 	test   BYTE PTR [eax+0xaa],0x1
1000779d:	0f 85 25 01 00 00    	jne    100078c8 <read_chunks+0x177f>
100077a3:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
100077a6:	8d 56 10             	lea    edx,[esi+0x10]
100077a9:	e8 99 db ff ff       	call   10005347 <increase_cache_usage>
100077ae:	85 c0                	test   eax,eax
100077b0:	0f 85 e9 02 00 00    	jne    10007a9f <read_chunks+0x1956>
100077b6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077b9:	8b 80 d8 08 00 00    	mov    eax,DWORD PTR [eax+0x8d8]
100077bf:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100077c2:	8d 48 01             	lea    ecx,[eax+0x1]
100077c5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077c8:	89 88 d8 08 00 00    	mov    DWORD PTR [eax+0x8d8],ecx
100077ce:	85 c9                	test   ecx,ecx
100077d0:	0f 84 15 f1 ff ff    	je     100068eb <read_chunks+0x7a2>
100077d6:	83 c8 ff             	or     eax,0xffffffff
100077d9:	31 d2                	xor    edx,edx
100077db:	f7 f1                	div    ecx
100077dd:	83 f8 0f             	cmp    eax,0xf
100077e0:	0f 86 05 f1 ff ff    	jbe    100068eb <read_chunks+0x7a2>
100077e6:	50                   	push   eax
100077e7:	50                   	push   eax
100077e8:	c1 e1 04             	shl    ecx,0x4
100077eb:	51                   	push   ecx
100077ec:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077ef:	ff b0 dc 08 00 00    	push   DWORD PTR [eax+0x8dc]
100077f5:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
100077f8:	83 c4 10             	add    esp,0x10
100077fb:	85 c0                	test   eax,eax
100077fd:	75 0a                	jne    10007809 <read_chunks+0x16c0>
100077ff:	b9 02 00 00 00       	mov    ecx,0x2
10007804:	e9 e7 f0 ff ff       	jmp    100068f0 <read_chunks+0x7a7>
10007809:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
1000780c:	89 87 dc 08 00 00    	mov    DWORD PTR [edi+0x8dc],eax
10007812:	8b bf d8 08 00 00    	mov    edi,DWORD PTR [edi+0x8d8]
10007818:	89 7d c0             	mov    DWORD PTR [ebp-0x40],edi
1000781b:	8d 9f ff ff ff 0f    	lea    ebx,[edi+0xfffffff]
10007821:	c1 e3 04             	shl    ebx,0x4
10007824:	01 c3                	add    ebx,eax
10007826:	8d 53 04             	lea    edx,[ebx+0x4]
10007829:	b9 03 00 00 00       	mov    ecx,0x3
1000782e:	31 c0                	xor    eax,eax
10007830:	89 d7                	mov    edi,edx
10007832:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10007834:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007837:	c7 80 a0 00 00 00 54 54 00 10 	mov    DWORD PTR [eax+0xa0],0x10005454	1000783d: R_386_32	.text
10007841:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007844:	89 03                	mov    DWORD PTR [ebx],eax
10007846:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007849:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
1000784c:	83 f8 03             	cmp    eax,0x3
1000784f:	77 1b                	ja     1000786c <read_chunks+0x1723>
10007851:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007854:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
1000785a:	88 45 c0             	mov    BYTE PTR [ebp-0x40],al
1000785d:	83 e0 02             	and    eax,0x2
10007860:	3c 01                	cmp    al,0x1
10007862:	19 c0                	sbb    eax,eax
10007864:	83 c0 02             	add    eax,0x2
10007867:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000786a:	eb 0c                	jmp    10007878 <read_chunks+0x172f>
1000786c:	83 f8 07             	cmp    eax,0x7
1000786f:	76 07                	jbe    10007878 <read_chunks+0x172f>
10007871:	c7 43 0c 08 00 00 00 	mov    DWORD PTR [ebx+0xc],0x8
10007878:	85 f6                	test   esi,esi
1000787a:	74 42                	je     100078be <read_chunks+0x1775>
1000787c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000787f:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
10007882:	89 f2                	mov    edx,esi
10007884:	e8 80 da ff ff       	call   10005309 <spng__malloc.isra.0>
10007889:	89 c7                	mov    edi,eax
1000788b:	85 c0                	test   eax,eax
1000788d:	0f 84 6c ff ff ff    	je     100077ff <read_chunks+0x16b6>
10007893:	89 f1                	mov    ecx,esi
10007895:	89 c2                	mov    edx,eax
10007897:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000789a:	e8 9f e1 ff ff       	call   10005a3e <read_chunk_bytes2>
1000789f:	85 c0                	test   eax,eax
100078a1:	74 15                	je     100078b8 <read_chunks+0x176f>
100078a3:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100078a6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100078a9:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
100078ac:	89 fa                	mov    edx,edi
100078ae:	e8 7d da ff ff       	call   10005330 <spng__free.isra.3>
100078b3:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
100078b6:	eb 48                	jmp    10007900 <read_chunks+0x17b7>
100078b8:	89 73 04             	mov    DWORD PTR [ebx+0x4],esi
100078bb:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
100078be:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100078c1:	80 88 ae 00 00 00 01 	or     BYTE PTR [eax+0xae],0x1
100078c8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100078cb:	8b 50 50             	mov    edx,DWORD PTR [eax+0x50]
100078ce:	e8 1e e1 ff ff       	call   100059f1 <discard_chunk_bytes>
100078d3:	89 c1                	mov    ecx,eax
100078d5:	85 c0                	test   eax,eax
100078d7:	75 27                	jne    10007900 <read_chunks+0x17b7>
100078d9:	e9 40 eb ff ff       	jmp    1000641e <read_chunks+0x2d5>
100078de:	85 c0                	test   eax,eax
100078e0:	0f 84 f0 ea ff ff    	je     100063d6 <read_chunks+0x28d>
100078e6:	eb 18                	jmp    10007900 <read_chunks+0x17b7>
100078e8:	83 f8 08             	cmp    eax,0x8
100078eb:	0f 85 fe ea ff ff    	jne    100063ef <read_chunks+0x2a6>
100078f1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100078f4:	c7 40 70 09 00 00 00 	mov    DWORD PTR [eax+0x70],0x9
100078fb:	e9 ef ea ff ff       	jmp    100063ef <read_chunks+0x2a6>
10007900:	83 f9 22             	cmp    ecx,0x22
10007903:	7f 12                	jg     10007917 <read_chunks+0x17ce>
10007905:	83 f9 15             	cmp    ecx,0x15
10007908:	7d 24                	jge    1000792e <read_chunks+0x17e5>
1000790a:	8d 41 f0             	lea    eax,[ecx-0x10]
1000790d:	83 f8 01             	cmp    eax,0x1
10007910:	76 1c                	jbe    1000792e <read_chunks+0x17e5>
10007912:	e9 d9 ef ff ff       	jmp    100068f0 <read_chunks+0x7a7>
10007917:	83 f9 24             	cmp    ecx,0x24
1000791a:	0f 8c d0 ef ff ff    	jl     100068f0 <read_chunks+0x7a7>
10007920:	83 f9 3d             	cmp    ecx,0x3d
10007923:	7e 09                	jle    1000792e <read_chunks+0x17e5>
10007925:	83 f9 40             	cmp    ecx,0x40
10007928:	0f 85 c2 ef ff ff    	jne    100068f0 <read_chunks+0x7a7>
1000792e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007931:	f6 40 74 10          	test   BYTE PTR [eax+0x74],0x10
10007935:	0f 85 b5 ef ff ff    	jne    100068f0 <read_chunks+0x7a7>
1000793b:	89 4d c0             	mov    DWORD PTR [ebp-0x40],ecx
1000793e:	83 c0 40             	add    eax,0x40
10007941:	e8 ea d1 ff ff       	call   10004b30 <is_critical_chunk>
10007946:	85 c0                	test   eax,eax
10007948:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
1000794b:	0f 85 9f ef ff ff    	jne    100068f0 <read_chunks+0x7a7>
10007951:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007954:	8b 50 50             	mov    edx,DWORD PTR [eax+0x50]
10007957:	e8 95 e0 ff ff       	call   100059f1 <discard_chunk_bytes>
1000795c:	89 c1                	mov    ecx,eax
1000795e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007961:	85 c9                	test   ecx,ecx
10007963:	0f 85 8a ef ff ff    	jne    100068f3 <read_chunks+0x7aa>
10007969:	8b 80 a0 00 00 00    	mov    eax,DWORD PTR [eax+0xa0]
1000796f:	85 c0                	test   eax,eax
10007971:	74 0b                	je     1000797e <read_chunks+0x1835>
10007973:	83 ec 0c             	sub    esp,0xc
10007976:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10007979:	ff d0                	call   eax
1000797b:	83 c4 10             	add    esp,0x10
1000797e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007981:	8b 80 b0 00 00 00    	mov    eax,DWORD PTR [eax+0xb0]
10007987:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
1000798a:	89 86 ac 00 00 00    	mov    DWORD PTR [esi+0xac],eax
10007990:	80 66 74 df          	and    BYTE PTR [esi+0x74],0xdf
10007994:	c7 86 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [esi+0xa0],0x0
1000799e:	e9 4c ea ff ff       	jmp    100063ef <read_chunks+0x2a6>
100079a3:	83 f8 03             	cmp    eax,0x3
100079a6:	0f 86 52 ea ff ff    	jbe    100063fe <read_chunks+0x2b5>
100079ac:	e9 ce e7 ff ff       	jmp    1000617f <read_chunks+0x36>
100079b1:	b9 50 00 00 00       	mov    ecx,0x50
100079b6:	89 c8                	mov    eax,ecx
100079b8:	c3                   	ret    
100079b9:	b9 4c 00 00 00       	mov    ecx,0x4c
100079be:	e9 2d ef ff ff       	jmp    100068f0 <read_chunks+0x7a7>
100079c3:	b9 14 00 00 00       	mov    ecx,0x14
100079c8:	e9 23 ef ff ff       	jmp    100068f0 <read_chunks+0x7a7>
100079cd:	b9 16 00 00 00       	mov    ecx,0x16
100079d2:	e9 57 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
100079d7:	b9 22 00 00 00       	mov    ecx,0x22
100079dc:	e9 4d ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
100079e1:	b9 17 00 00 00       	mov    ecx,0x17
100079e6:	e9 43 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
100079eb:	b9 26 00 00 00       	mov    ecx,0x26
100079f0:	e9 39 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
100079f5:	b9 19 00 00 00       	mov    ecx,0x19
100079fa:	e9 2f ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
100079ff:	b9 29 00 00 00       	mov    ecx,0x29
10007a04:	e9 25 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a09:	b9 1a 00 00 00       	mov    ecx,0x1a
10007a0e:	e9 1b ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a13:	b9 2a 00 00 00       	mov    ecx,0x2a
10007a18:	e9 11 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a1d:	b9 1b 00 00 00       	mov    ecx,0x1b
10007a22:	e9 07 ff ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a27:	b9 34 00 00 00       	mov    ecx,0x34
10007a2c:	e9 fd fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a31:	b9 35 00 00 00       	mov    ecx,0x35
10007a36:	e9 f3 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a3b:	b9 1d 00 00 00       	mov    ecx,0x1d
10007a40:	e9 e9 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a45:	b9 25 00 00 00       	mov    ecx,0x25
10007a4a:	e9 df fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a4f:	b9 36 00 00 00       	mov    ecx,0x36
10007a54:	e9 d5 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a59:	b9 1c 00 00 00       	mov    ecx,0x1c
10007a5e:	e9 cb fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a63:	b9 1e 00 00 00       	mov    ecx,0x1e
10007a68:	e9 c1 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a6d:	b9 37 00 00 00       	mov    ecx,0x37
10007a72:	e9 b7 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a77:	b9 20 00 00 00       	mov    ecx,0x20
10007a7c:	e9 ad fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a81:	b9 3c 00 00 00       	mov    ecx,0x3c
10007a86:	e9 a3 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a8b:	b9 18 00 00 00       	mov    ecx,0x18
10007a90:	e9 99 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a95:	b9 28 00 00 00       	mov    ecx,0x28
10007a9a:	e9 8f fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007a9f:	b9 4d 00 00 00       	mov    ecx,0x4d
10007aa4:	e9 47 ee ff ff       	jmp    100068f0 <read_chunks+0x7a7>
10007aa9:	b9 02 00 00 00       	mov    ecx,0x2
10007aae:	e9 57 fe ff ff       	jmp    1000790a <read_chunks+0x17c1>
10007ab3:	b9 2d 00 00 00       	mov    ecx,0x2d
10007ab8:	e9 71 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007abd:	b9 2e 00 00 00       	mov    ecx,0x2e
10007ac2:	e9 67 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007ac7:	b9 50 00 00 00       	mov    ecx,0x50
10007acc:	e9 1f ee ff ff       	jmp    100068f0 <read_chunks+0x7a7>
10007ad1:	b9 30 00 00 00       	mov    ecx,0x30
10007ad6:	e9 53 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007adb:	b9 31 00 00 00       	mov    ecx,0x31
10007ae0:	e9 49 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007ae5:	b9 32 00 00 00       	mov    ecx,0x32
10007aea:	e9 3f fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007aef:	b9 2c 00 00 00       	mov    ecx,0x2c
10007af4:	e9 35 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007af9:	b9 10 00 00 00       	mov    ecx,0x10
10007afe:	e9 07 fe ff ff       	jmp    1000790a <read_chunks+0x17c1>
10007b03:	b9 03 00 00 00       	mov    ecx,0x3
10007b08:	e9 fd fd ff ff       	jmp    1000790a <read_chunks+0x17c1>
10007b0d:	b9 39 00 00 00       	mov    ecx,0x39
10007b12:	e9 17 fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007b17:	b9 3a 00 00 00       	mov    ecx,0x3a
10007b1c:	e9 0d fe ff ff       	jmp    1000792e <read_chunks+0x17e5>
10007b21:	89 c8                	mov    eax,ecx
10007b23:	8d 65 f4             	lea    esp,[ebp-0xc]
10007b26:	5b                   	pop    ebx
10007b27:	5e                   	pop    esi
10007b28:	5f                   	pop    edi
10007b29:	5d                   	pop    ebp
10007b2a:	c3                   	ret    

10007b2b <spng_decode_scanline>:
10007b2b:	55                   	push   ebp
10007b2c:	57                   	push   edi
10007b2d:	56                   	push   esi
10007b2e:	53                   	push   ebx
10007b2f:	81 ec 8c 00 00 00    	sub    esp,0x8c
10007b35:	8b ac 24 a0 00 00 00 	mov    ebp,DWORD PTR [esp+0xa0]
10007b3c:	83 bc 24 a4 00 00 00 00 	cmp    DWORD PTR [esp+0xa4],0x0
10007b44:	0f 84 53 0e 00 00    	je     1000899d <spng_decode_scanline+0xe72>
10007b4a:	85 ed                	test   ebp,ebp
10007b4c:	0f 84 4b 0e 00 00    	je     1000899d <spng_decode_scanline+0xe72>
10007b52:	bb 4b 00 00 00       	mov    ebx,0x4b
10007b57:	83 7d 70 05          	cmp    DWORD PTR [ebp+0x70],0x5
10007b5b:	0f 87 4f 0e 00 00    	ja     100089b0 <spng_decode_scanline+0xe85>
10007b61:	8b 85 dc 0f 00 00    	mov    eax,DWORD PTR [ebp+0xfdc]
10007b67:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10007b6b:	8b 85 c4 09 00 00    	mov    eax,DWORD PTR [ebp+0x9c4]
10007b71:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10007b75:	8b 95 98 09 00 00    	mov    edx,DWORD PTR [ebp+0x998]
10007b7b:	0f b6 85 f8 00 00 00 	movzx  eax,BYTE PTR [ebp+0xf8]
10007b82:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10007b86:	bb 08 00 00 00       	mov    ebx,0x8
10007b8b:	29 c3                	sub    ebx,eax
10007b8d:	b8 01 00 00 00       	mov    eax,0x1
10007b92:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10007b96:	d3 e0                	shl    eax,cl
10007b98:	48                   	dec    eax
10007b99:	88 44 24 58          	mov    BYTE PTR [esp+0x58],al
10007b9d:	89 5c 24 5c          	mov    DWORD PTR [esp+0x5c],ebx
10007ba1:	89 5c 24 60          	mov    DWORD PTR [esp+0x60],ebx
10007ba5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10007ba9:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10007bad:	89 54 24 68          	mov    DWORD PTR [esp+0x68],edx
10007bb1:	8b 8d e8 0f 00 00    	mov    ecx,DWORD PTR [ebp+0xfe8]
10007bb7:	8b 45 6c             	mov    eax,DWORD PTR [ebp+0x6c]
10007bba:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10007bbe:	89 c8                	mov    eax,ecx
10007bc0:	c1 e0 04             	shl    eax,0x4
10007bc3:	8d 84 05 e0 08 00 00 	lea    eax,[ebp+eax*1+0x8e0]
10007bca:	8a 5c 24 2c          	mov    bl,BYTE PTR [esp+0x2c]
10007bce:	88 5c 24 47          	mov    BYTE PTR [esp+0x47],bl
10007bd2:	f6 44 24 2c 08       	test   BYTE PTR [esp+0x2c],0x8
10007bd7:	74 08                	je     10007be1 <spng_decode_scanline+0xb6>
10007bd9:	c7 44 24 0c 08 00 00 00 	mov    DWORD PTR [esp+0xc],0x8
10007be1:	c7 44 24 38 08 00 00 00 	mov    DWORD PTR [esp+0x38],0x8
10007be9:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
10007bee:	74 13                	je     10007c03 <spng_decode_scanline+0xd8>
10007bf0:	31 db                	xor    ebx,ebx
10007bf2:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
10007bf7:	0f 95 c3             	setne  bl
10007bfa:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10007bfe:	83 44 24 38 03       	add    DWORD PTR [esp+0x38],0x3
10007c03:	bb 42 00 00 00       	mov    ebx,0x42
10007c08:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10007c0b:	39 b4 24 a8 00 00 00 	cmp    DWORD PTR [esp+0xa8],esi
10007c12:	0f 82 98 0d 00 00    	jb     100089b0 <spng_decode_scanline+0xe85>
10007c18:	8b 78 0c             	mov    edi,DWORD PTR [eax+0xc]
10007c1b:	89 3c 24             	mov    DWORD PTR [esp],edi
10007c1e:	8b 30                	mov    esi,DWORD PTR [eax]
10007c20:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10007c24:	8b b5 e0 0f 00 00    	mov    esi,DWORD PTR [ebp+0xfe0]
10007c2a:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10007c2d:	48                   	dec    eax
10007c2e:	39 c6                	cmp    esi,eax
10007c30:	75 23                	jne    10007c55 <spng_decode_scanline+0x12a>
10007c32:	3b 8d c0 09 00 00    	cmp    ecx,DWORD PTR [ebp+0x9c0]
10007c38:	75 1b                	jne    10007c55 <spng_decode_scanline+0x12a>
10007c3a:	8d 4f ff             	lea    ecx,[edi-0x1]
10007c3d:	89 e8                	mov    eax,ebp
10007c3f:	e8 ce dc ff ff       	call   10005912 <read_scanline_bytes>
10007c44:	89 c3                	mov    ebx,eax
10007c46:	85 c0                	test   eax,eax
10007c48:	0f 85 5b 0d 00 00    	jne    100089a9 <spng_decode_scanline+0xe7e>
10007c4e:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
10007c53:	eb 33                	jmp    10007c88 <spng_decode_scanline+0x15d>
10007c55:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007c58:	89 e8                	mov    eax,ebp
10007c5a:	e8 b3 dc ff ff       	call   10005912 <read_scanline_bytes>
10007c5f:	89 c3                	mov    ebx,eax
10007c61:	85 c0                	test   eax,eax
10007c63:	0f 85 40 0d 00 00    	jne    100089a9 <spng_decode_scanline+0xe7e>
10007c69:	8b 85 98 09 00 00    	mov    eax,DWORD PTR [ebp+0x998]
10007c6f:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007c72:	8a 44 38 ff          	mov    al,BYTE PTR [eax+edi*1-0x1]
10007c76:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
10007c7a:	3c 04                	cmp    al,0x4
10007c7c:	76 0a                	jbe    10007c88 <spng_decode_scanline+0x15d>
10007c7e:	bb 41 00 00 00       	mov    ebx,0x41
10007c83:	e9 21 0d 00 00       	jmp    100089a9 <spng_decode_scanline+0xe7e>
10007c88:	85 f6                	test   esi,esi
10007c8a:	75 16                	jne    10007ca2 <spng_decode_scanline+0x177>
10007c8c:	80 bd ec 0f 00 00 01 	cmp    BYTE PTR [ebp+0xfec],0x1
10007c93:	76 0d                	jbe    10007ca2 <spng_decode_scanline+0x177>
10007c95:	31 c0                	xor    eax,eax
10007c97:	8b bd 9c 09 00 00    	mov    edi,DWORD PTR [ebp+0x99c]
10007c9d:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007ca0:	f3 aa                	rep stos BYTE PTR es:[edi],al
10007ca2:	8b 9d 98 09 00 00    	mov    ebx,DWORD PTR [ebp+0x998]
10007ca8:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10007caf:	74 23                	je     10007cd4 <spng_decode_scanline+0x1a9>
10007cb1:	8b b5 9c 09 00 00    	mov    esi,DWORD PTR [ebp+0x99c]
10007cb7:	85 f6                	test   esi,esi
10007cb9:	0f 94 c2             	sete   dl
10007cbc:	85 db                	test   ebx,ebx
10007cbe:	0f 94 c0             	sete   al
10007cc1:	08 c2                	or     dl,al
10007cc3:	0f 85 db 0c 00 00    	jne    100089a4 <spng_decode_scanline+0xe79>
10007cc9:	83 3c 24 00          	cmp    DWORD PTR [esp],0x0
10007ccd:	75 24                	jne    10007cf3 <spng_decode_scanline+0x1c8>
10007ccf:	e9 d0 0c 00 00       	jmp    100089a4 <spng_decode_scanline+0xe79>
10007cd4:	81 7d 6c 00 02 00 00 	cmp    DWORD PTR [ebp+0x6c],0x200
10007cdb:	74 d4                	je     10007cb1 <spng_decode_scanline+0x186>
10007cdd:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007ce0:	8d 50 ff             	lea    edx,[eax-0x1]
10007ce3:	d1 ea                	shr    edx,1
10007ce5:	31 c0                	xor    eax,eax
10007ce7:	39 c2                	cmp    edx,eax
10007ce9:	74 c6                	je     10007cb1 <spng_decode_scanline+0x186>
10007ceb:	66 c1 04 43 08       	rol    WORD PTR [ebx+eax*2],0x8
10007cf0:	40                   	inc    eax
10007cf1:	eb f4                	jmp    10007ce7 <spng_decode_scanline+0x1bc>
10007cf3:	0f b6 85 ec 0f 00 00 	movzx  eax,BYTE PTR [ebp+0xfec]
10007cfa:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
10007cfe:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007d01:	4f                   	dec    edi
10007d02:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10007d06:	85 c0                	test   eax,eax
10007d08:	0f 84 36 01 00 00    	je     10007e44 <spng_decode_scanline+0x319>
10007d0e:	83 f8 02             	cmp    eax,0x2
10007d11:	0f 84 af 00 00 00    	je     10007dc6 <spng_decode_scanline+0x29b>
10007d17:	8b bd b4 09 00 00    	mov    edi,DWORD PTR [ebp+0x9b4]
10007d1d:	89 3c 24             	mov    DWORD PTR [esp],edi
10007d20:	83 ff 04             	cmp    edi,0x4
10007d23:	75 47                	jne    10007d6c <spng_decode_scanline+0x241>
10007d25:	83 f8 01             	cmp    eax,0x1
10007d28:	75 10                	jne    10007d3a <spng_decode_scanline+0x20f>
10007d2a:	89 da                	mov    edx,ebx
10007d2c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007d30:	e8 8a d0 ff ff       	call   10004dbf <defilter_sub4>
10007d35:	e9 0a 01 00 00       	jmp    10007e44 <spng_decode_scanline+0x319>
10007d3a:	83 f8 03             	cmp    eax,0x3
10007d3d:	75 12                	jne    10007d51 <spng_decode_scanline+0x226>
10007d3f:	89 f1                	mov    ecx,esi
10007d41:	89 da                	mov    edx,ebx
10007d43:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007d47:	e8 f7 d0 ff ff       	call   10004e43 <defilter_avg4>
10007d4c:	e9 f3 00 00 00       	jmp    10007e44 <spng_decode_scanline+0x319>
10007d51:	83 f8 04             	cmp    eax,0x4
10007d54:	0f 85 24 ff ff ff    	jne    10007c7e <spng_decode_scanline+0x153>
10007d5a:	89 f1                	mov    ecx,esi
10007d5c:	89 da                	mov    edx,ebx
10007d5e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007d62:	e8 a5 d1 ff ff       	call   10004f0c <defilter_paeth4>
10007d67:	e9 d8 00 00 00       	jmp    10007e44 <spng_decode_scanline+0x319>
10007d6c:	83 3c 24 03          	cmp    DWORD PTR [esp],0x3
10007d70:	74 10                	je     10007d82 <spng_decode_scanline+0x257>
10007d72:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007d75:	f7 d8                	neg    eax
10007d77:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10007d7b:	31 ff                	xor    edi,edi
10007d7d:	e9 99 00 00 00       	jmp    10007e1b <spng_decode_scanline+0x2f0>
10007d82:	83 f8 01             	cmp    eax,0x1
10007d85:	75 10                	jne    10007d97 <spng_decode_scanline+0x26c>
10007d87:	89 da                	mov    edx,ebx
10007d89:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007d8d:	e8 6b d0 ff ff       	call   10004dfd <defilter_sub3>
10007d92:	e9 ad 00 00 00       	jmp    10007e44 <spng_decode_scanline+0x319>
10007d97:	83 f8 03             	cmp    eax,0x3
10007d9a:	75 12                	jne    10007dae <spng_decode_scanline+0x283>
10007d9c:	89 f1                	mov    ecx,esi
10007d9e:	89 da                	mov    edx,ebx
10007da0:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007da4:	e8 df d0 ff ff       	call   10004e88 <defilter_avg3>
10007da9:	e9 96 00 00 00       	jmp    10007e44 <spng_decode_scanline+0x319>
10007dae:	83 f8 04             	cmp    eax,0x4
10007db1:	0f 85 c7 fe ff ff    	jne    10007c7e <spng_decode_scanline+0x153>
10007db7:	89 f1                	mov    ecx,esi
10007db9:	89 da                	mov    edx,ebx
10007dbb:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007dbf:	e8 1e d2 ff ff       	call   10004fe2 <defilter_paeth3>
10007dc4:	eb 7e                	jmp    10007e44 <spng_decode_scanline+0x319>
10007dc6:	31 c0                	xor    eax,eax
10007dc8:	39 44 24 1c          	cmp    DWORD PTR [esp+0x1c],eax
10007dcc:	76 76                	jbe    10007e44 <spng_decode_scanline+0x319>
10007dce:	8a 14 06             	mov    dl,BYTE PTR [esi+eax*1]
10007dd1:	00 14 03             	add    BYTE PTR [ebx+eax*1],dl
10007dd4:	40                   	inc    eax
10007dd5:	eb f1                	jmp    10007dc8 <spng_decode_scanline+0x29d>
10007dd7:	8a 04 3e             	mov    al,BYTE PTR [esi+edi*1]
10007dda:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
10007dde:	39 3c 24             	cmp    DWORD PTR [esp],edi
10007de1:	77 40                	ja     10007e23 <spng_decode_scanline+0x2f8>
10007de3:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10007de7:	0f b6 04 03          	movzx  eax,BYTE PTR [ebx+eax*1]
10007deb:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10007def:	0f b6 0c 0e          	movzx  ecx,BYTE PTR [esi+ecx*1]
10007df3:	8a 14 3b             	mov    dl,BYTE PTR [ebx+edi*1]
10007df6:	88 54 24 24          	mov    BYTE PTR [esp+0x24],dl
10007dfa:	80 7c 24 10 03       	cmp    BYTE PTR [esp+0x10],0x3
10007dff:	74 28                	je     10007e29 <spng_decode_scanline+0x2fe>
10007e01:	80 7c 24 10 04       	cmp    BYTE PTR [esp+0x10],0x4
10007e06:	74 2c                	je     10007e34 <spng_decode_scanline+0x309>
10007e08:	80 7c 24 10 01       	cmp    BYTE PTR [esp+0x10],0x1
10007e0d:	74 2f                	je     10007e3e <spng_decode_scanline+0x313>
10007e0f:	8a 44 24 24          	mov    al,BYTE PTR [esp+0x24]
10007e13:	88 04 3b             	mov    BYTE PTR [ebx+edi*1],al
10007e16:	47                   	inc    edi
10007e17:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10007e1b:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
10007e1f:	77 b6                	ja     10007dd7 <spng_decode_scanline+0x2ac>
10007e21:	eb 21                	jmp    10007e44 <spng_decode_scanline+0x319>
10007e23:	31 c9                	xor    ecx,ecx
10007e25:	31 c0                	xor    eax,eax
10007e27:	eb ca                	jmp    10007df3 <spng_decode_scanline+0x2c8>
10007e29:	0f b6 54 24 26       	movzx  edx,BYTE PTR [esp+0x26]
10007e2e:	01 d0                	add    eax,edx
10007e30:	d1 f8                	sar    eax,1
10007e32:	eb 0a                	jmp    10007e3e <spng_decode_scanline+0x313>
10007e34:	0f b6 54 24 26       	movzx  edx,BYTE PTR [esp+0x26]
10007e39:	e8 06 cd ff ff       	call   10004b44 <paeth>
10007e3e:	00 44 24 24          	add    BYTE PTR [esp+0x24],al
10007e42:	eb cb                	jmp    10007e0f <spng_decode_scanline+0x2e4>
10007e44:	8d 85 d4 0b 00 00    	lea    eax,[ebp+0xbd4]
10007e4a:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10007e4e:	8a 44 24 20          	mov    al,BYTE PTR [esp+0x20]
10007e52:	88 85 ec 0f 00 00    	mov    BYTE PTR [ebp+0xfec],al
10007e58:	8b 85 98 09 00 00    	mov    eax,DWORD PTR [ebp+0x998]
10007e5e:	89 04 24             	mov    DWORD PTR [esp],eax
10007e61:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10007e68:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10007e6c:	89 c6                	mov    esi,eax
10007e6e:	66 c7 44 24 14 00 00 	mov    WORD PTR [esp+0x14],0x0
10007e75:	31 c9                	xor    ecx,ecx
10007e77:	66 c7 44 24 24 00 00 	mov    WORD PTR [esp+0x24],0x0
10007e7e:	31 ff                	xor    edi,edi
10007e80:	c6 44 24 44 00       	mov    BYTE PTR [esp+0x44],0x0
10007e85:	c6 44 24 26 00       	mov    BYTE PTR [esp+0x26],0x0
10007e8a:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
10007e8f:	c6 44 24 10 00       	mov    BYTE PTR [esp+0x10],0x0
10007e94:	31 db                	xor    ebx,ebx
10007e96:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007e9a:	0f 84 eb 04 00 00    	je     1000838b <spng_decode_scanline+0x860>
10007ea0:	f6 44 24 47 40       	test   BYTE PTR [esp+0x47],0x40
10007ea5:	74 20                	je     10007ec7 <spng_decode_scanline+0x39c>
10007ea7:	80 7c 24 2c 00       	cmp    BYTE PTR [esp+0x2c],0x0
10007eac:	0f 88 d9 04 00 00    	js     1000838b <spng_decode_scanline+0x860>
10007eb2:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
10007eb9:	8b 34 24             	mov    esi,DWORD PTR [esp]
10007ebc:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10007ec0:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007ec2:	e9 c4 04 00 00       	jmp    1000838b <spng_decode_scanline+0x860>
10007ec7:	66 f7 44 24 2c 00 01 	test   WORD PTR [esp+0x2c],0x100
10007ece:	0f 84 e8 00 00 00    	je     10007fbc <spng_decode_scanline+0x491>
10007ed4:	0f b6 8d f8 00 00 00 	movzx  ecx,BYTE PTR [ebp+0xf8]
10007edb:	ba 08 00 00 00       	mov    edx,0x8
10007ee0:	29 ca                	sub    edx,ecx
10007ee2:	b8 01 00 00 00       	mov    eax,0x1
10007ee7:	d3 e0                	shl    eax,cl
10007ee9:	48                   	dec    eax
10007eea:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
10007eee:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
10007ef2:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
10007ef6:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10007efa:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007efd:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
10007f01:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
10007f06:	74 3c                	je     10007f44 <spng_decode_scanline+0x419>
10007f08:	83 7c 24 04 20       	cmp    DWORD PTR [esp+0x4],0x20
10007f0d:	74 14                	je     10007f23 <spng_decode_scanline+0x3f8>
10007f0f:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10007f13:	03 9c 24 a4 00 00 00 	add    ebx,DWORD PTR [esp+0xa4]
10007f1a:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007f21:	eb 0b                	jmp    10007f2e <spng_decode_scanline+0x403>
10007f23:	31 db                	xor    ebx,ebx
10007f25:	83 f9 10             	cmp    ecx,0x10
10007f28:	75 67                	jne    10007f91 <spng_decode_scanline+0x466>
10007f2a:	31 c0                	xor    eax,eax
10007f2c:	eb 3d                	jmp    10007f6b <spng_decode_scanline+0x440>
10007f2e:	39 f3                	cmp    ebx,esi
10007f30:	0f 84 55 04 00 00    	je     1000838b <spng_decode_scanline+0x860>
10007f36:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007f3a:	e8 b4 ca ff ff       	call   100049f3 <get_sample>
10007f3f:	88 06                	mov    BYTE PTR [esi],al
10007f41:	46                   	inc    esi
10007f42:	eb ea                	jmp    10007f2e <spng_decode_scanline+0x403>
10007f44:	31 db                	xor    ebx,ebx
10007f46:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007f4a:	0f 84 3b 04 00 00    	je     1000838b <spng_decode_scanline+0x860>
10007f50:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007f54:	e8 9a ca ff ff       	call   100049f3 <get_sample>
10007f59:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007f60:	88 04 5e             	mov    BYTE PTR [esi+ebx*2],al
10007f63:	c6 44 5e 01 ff       	mov    BYTE PTR [esi+ebx*2+0x1],0xff
10007f68:	43                   	inc    ebx
10007f69:	eb db                	jmp    10007f46 <spng_decode_scanline+0x41b>
10007f6b:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
10007f6f:	0f 84 16 04 00 00    	je     1000838b <spng_decode_scanline+0x860>
10007f75:	8b 34 24             	mov    esi,DWORD PTR [esp]
10007f78:	66 8b 14 46          	mov    dx,WORD PTR [esi+eax*2]
10007f7c:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007f83:	66 89 14 86          	mov    WORD PTR [esi+eax*4],dx
10007f87:	66 c7 44 86 02 ff ff 	mov    WORD PTR [esi+eax*4+0x2],0xffff
10007f8e:	40                   	inc    eax
10007f8f:	eb da                	jmp    10007f6b <spng_decode_scanline+0x440>
10007f91:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007f95:	0f 84 f0 03 00 00    	je     1000838b <spng_decode_scanline+0x860>
10007f9b:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007f9f:	e8 4f ca ff ff       	call   100049f3 <get_sample>
10007fa4:	0f b6 c0             	movzx  eax,al
10007fa7:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
10007fae:	66 89 04 9f          	mov    WORD PTR [edi+ebx*4],ax
10007fb2:	66 c7 44 9f 02 ff ff 	mov    WORD PTR [edi+ebx*4+0x2],0xffff
10007fb9:	43                   	inc    ebx
10007fba:	eb d5                	jmp    10007f91 <spng_decode_scanline+0x466>
10007fbc:	8a 85 f9 00 00 00    	mov    al,BYTE PTR [ebp+0xf9]
10007fc2:	3c 02                	cmp    al,0x2
10007fc4:	0f 85 8d 00 00 00    	jne    10008057 <spng_decode_scanline+0x52c>
10007fca:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10007fd1:	75 24                	jne    10007ff7 <spng_decode_scanline+0x4cc>
10007fd3:	6b c3 06             	imul   eax,ebx,0x6
10007fd6:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007fd9:	66 8b 3c 07          	mov    di,WORD PTR [edi+eax*1]
10007fdd:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007fe0:	66 8b 4c 01 02       	mov    cx,WORD PTR [ecx+eax*1+0x2]
10007fe5:	66 89 4c 24 24       	mov    WORD PTR [esp+0x24],cx
10007fea:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007fed:	66 8b 4c 01 04       	mov    cx,WORD PTR [ecx+eax*1+0x4]
10007ff2:	e9 cd 02 00 00       	jmp    100082c4 <spng_decode_scanline+0x799>
10007ff7:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10007ffc:	75 31                	jne    1000802f <spng_decode_scanline+0x504>
10007ffe:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008001:	6b 5c 24 08 03       	imul   ebx,DWORD PTR [esp+0x8],0x3
10008006:	01 c3                	add    ebx,eax
10008008:	8b 8c 24 a4 00 00 00 	mov    ecx,DWORD PTR [esp+0xa4]
1000800f:	39 c3                	cmp    ebx,eax
10008011:	0f 84 74 03 00 00    	je     1000838b <spng_decode_scanline+0x860>
10008017:	66 8b 10             	mov    dx,WORD PTR [eax]
1000801a:	66 89 11             	mov    WORD PTR [ecx],dx
1000801d:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
10008020:	88 51 02             	mov    BYTE PTR [ecx+0x2],dl
10008023:	c6 41 03 ff          	mov    BYTE PTR [ecx+0x3],0xff
10008027:	83 c1 04             	add    ecx,0x4
1000802a:	83 c0 03             	add    eax,0x3
1000802d:	eb e0                	jmp    1000800f <spng_decode_scanline+0x4e4>
1000802f:	8d 04 5b             	lea    eax,[ebx+ebx*2]
10008032:	8b 14 24             	mov    edx,DWORD PTR [esp]
10008035:	8a 14 02             	mov    dl,BYTE PTR [edx+eax*1]
10008038:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
1000803c:	8b 14 24             	mov    edx,DWORD PTR [esp]
1000803f:	8a 54 02 01          	mov    dl,BYTE PTR [edx+eax*1+0x1]
10008043:	88 54 24 20          	mov    BYTE PTR [esp+0x20],dl
10008047:	8b 14 24             	mov    edx,DWORD PTR [esp]
1000804a:	8a 44 02 02          	mov    al,BYTE PTR [edx+eax*1+0x2]
1000804e:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
10008052:	e9 82 02 00 00       	jmp    100082d9 <spng_decode_scanline+0x7ae>
10008057:	3c 03                	cmp    al,0x3
10008059:	0f 85 4e 01 00 00    	jne    100081ad <spng_decode_scanline+0x682>
1000805f:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10008063:	83 e0 05             	and    eax,0x5
10008066:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
1000806a:	80 bd f8 00 00 00 08 	cmp    BYTE PTR [ebp+0xf8],0x8
10008071:	0f 85 9a 00 00 00    	jne    10008111 <spng_decode_scanline+0x5e6>
10008077:	85 c0                	test   eax,eax
10008079:	0f 84 8a 00 00 00    	je     10008109 <spng_decode_scanline+0x5de>
1000807f:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10008084:	75 3e                	jne    100080c4 <spng_decode_scanline+0x599>
10008086:	31 d2                	xor    edx,edx
10008088:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
1000808c:	0f 84 f9 02 00 00    	je     1000838b <spng_decode_scanline+0x860>
10008092:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008095:	0f b6 04 10          	movzx  eax,BYTE PTR [eax+edx*1]
10008099:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000809d:	8d 0c 87             	lea    ecx,[edi+eax*4]
100080a0:	8a 01                	mov    al,BYTE PTR [ecx]
100080a2:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
100080a9:	88 04 96             	mov    BYTE PTR [esi+edx*4],al
100080ac:	8a 41 01             	mov    al,BYTE PTR [ecx+0x1]
100080af:	88 44 96 01          	mov    BYTE PTR [esi+edx*4+0x1],al
100080b3:	8a 41 02             	mov    al,BYTE PTR [ecx+0x2]
100080b6:	88 44 96 02          	mov    BYTE PTR [esi+edx*4+0x2],al
100080ba:	8a 41 03             	mov    al,BYTE PTR [ecx+0x3]
100080bd:	88 44 96 03          	mov    BYTE PTR [esi+edx*4+0x3],al
100080c1:	42                   	inc    edx
100080c2:	eb c4                	jmp    10008088 <spng_decode_scanline+0x55d>
100080c4:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
100080c9:	0f 85 bc 02 00 00    	jne    1000838b <spng_decode_scanline+0x860>
100080cf:	8b 14 24             	mov    edx,DWORD PTR [esp]
100080d2:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
100080d6:	01 d3                	add    ebx,edx
100080d8:	89 df                	mov    edi,ebx
100080da:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100080e1:	39 d7                	cmp    edi,edx
100080e3:	0f 84 a2 02 00 00    	je     1000838b <spng_decode_scanline+0x860>
100080e9:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
100080ec:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100080f0:	8d 0c 8e             	lea    ecx,[esi+ecx*4]
100080f3:	8a 19                	mov    bl,BYTE PTR [ecx]
100080f5:	88 18                	mov    BYTE PTR [eax],bl
100080f7:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100080fa:	88 58 01             	mov    BYTE PTR [eax+0x1],bl
100080fd:	8a 49 02             	mov    cl,BYTE PTR [ecx+0x2]
10008100:	88 48 02             	mov    BYTE PTR [eax+0x2],cl
10008103:	42                   	inc    edx
10008104:	83 c0 03             	add    eax,0x3
10008107:	eb d8                	jmp    100080e1 <spng_decode_scanline+0x5b6>
10008109:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000810c:	8a 04 18             	mov    al,BYTE PTR [eax+ebx*1]
1000810f:	eb 45                	jmp    10008156 <spng_decode_scanline+0x62b>
10008111:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10008115:	8d 44 24 58          	lea    eax,[esp+0x58]
10008119:	e8 d5 c8 ff ff       	call   100049f3 <get_sample>
1000811e:	83 7c 24 48 00       	cmp    DWORD PTR [esp+0x48],0x0
10008123:	74 31                	je     10008156 <spng_decode_scanline+0x62b>
10008125:	0f b6 c0             	movzx  eax,al
10008128:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
1000812c:	8d 04 81             	lea    eax,[ecx+eax*4]
1000812f:	8a 10                	mov    dl,BYTE PTR [eax]
10008131:	88 16                	mov    BYTE PTR [esi],dl
10008133:	8a 50 01             	mov    dl,BYTE PTR [eax+0x1]
10008136:	88 56 01             	mov    BYTE PTR [esi+0x1],dl
10008139:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
1000813c:	88 56 02             	mov    BYTE PTR [esi+0x2],dl
1000813f:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10008144:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10008148:	0f 85 33 02 00 00    	jne    10008381 <spng_decode_scanline+0x856>
1000814e:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
10008151:	e9 e1 01 00 00       	jmp    10008337 <spng_decode_scanline+0x80c>
10008156:	0f b6 c0             	movzx  eax,al
10008159:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000815d:	8d 04 87             	lea    eax,[edi+eax*4]
10008160:	0f b6 38             	movzx  edi,BYTE PTR [eax]
10008163:	0f b6 48 01          	movzx  ecx,BYTE PTR [eax+0x1]
10008167:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
1000816a:	88 54 24 14          	mov    BYTE PTR [esp+0x14],dl
1000816e:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
10008172:	89 fa                	mov    edx,edi
10008174:	c1 e2 08             	shl    edx,0x8
10008177:	66 89 54 24 24       	mov    WORD PTR [esp+0x24],dx
1000817c:	89 fa                	mov    edx,edi
1000817e:	0f b6 fa             	movzx  edi,dl
10008181:	0b 7c 24 24          	or     edi,DWORD PTR [esp+0x24]
10008185:	89 ca                	mov    edx,ecx
10008187:	c1 e2 08             	shl    edx,0x8
1000818a:	09 d1                	or     ecx,edx
1000818c:	66 89 4c 24 24       	mov    WORD PTR [esp+0x24],cx
10008191:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10008195:	c1 e1 08             	shl    ecx,0x8
10008198:	89 ca                	mov    edx,ecx
1000819a:	0f b6 4c 24 14       	movzx  ecx,BYTE PTR [esp+0x14]
1000819f:	09 d1                	or     ecx,edx
100081a1:	89 c2                	mov    edx,eax
100081a3:	c1 e2 08             	shl    edx,0x8
100081a6:	09 d0                	or     eax,edx
100081a8:	e9 b8 01 00 00       	jmp    10008365 <spng_decode_scanline+0x83a>
100081ad:	3c 06                	cmp    al,0x6
100081af:	75 5e                	jne    1000820f <spng_decode_scanline+0x6e4>
100081b1:	8b 04 24             	mov    eax,DWORD PTR [esp]
100081b4:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
100081bb:	75 25                	jne    100081e2 <spng_decode_scanline+0x6b7>
100081bd:	66 8b 3c d8          	mov    di,WORD PTR [eax+ebx*8]
100081c1:	66 8b 44 d8 02       	mov    ax,WORD PTR [eax+ebx*8+0x2]
100081c6:	66 89 44 24 24       	mov    WORD PTR [esp+0x24],ax
100081cb:	8b 04 24             	mov    eax,DWORD PTR [esp]
100081ce:	66 8b 4c d8 04       	mov    cx,WORD PTR [eax+ebx*8+0x4]
100081d3:	66 8b 44 d8 06       	mov    ax,WORD PTR [eax+ebx*8+0x6]
100081d8:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
100081dd:	e9 fc 00 00 00       	jmp    100082de <spng_decode_scanline+0x7b3>
100081e2:	8a 04 98             	mov    al,BYTE PTR [eax+ebx*4]
100081e5:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
100081e9:	8b 04 24             	mov    eax,DWORD PTR [esp]
100081ec:	8a 44 98 01          	mov    al,BYTE PTR [eax+ebx*4+0x1]
100081f0:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
100081f4:	8b 04 24             	mov    eax,DWORD PTR [esp]
100081f7:	8a 44 98 02          	mov    al,BYTE PTR [eax+ebx*4+0x2]
100081fb:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
100081ff:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008202:	8a 44 98 03          	mov    al,BYTE PTR [eax+ebx*4+0x3]
10008206:	88 44 24 44          	mov    BYTE PTR [esp+0x44],al
1000820a:	e9 cf 00 00 00       	jmp    100082de <spng_decode_scanline+0x7b3>
1000820f:	84 c0                	test   al,al
10008211:	75 63                	jne    10008276 <spng_decode_scanline+0x74b>
10008213:	8a 44 24 47          	mov    al,BYTE PTR [esp+0x47]
10008217:	83 e0 01             	and    eax,0x1
1000821a:	88 44 24 48          	mov    BYTE PTR [esp+0x48],al
1000821e:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10008225:	75 22                	jne    10008249 <spng_decode_scanline+0x71e>
10008227:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000822a:	66 8b 3c 58          	mov    di,WORD PTR [eax+ebx*2]
1000822e:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10008233:	0f 84 84 00 00 00    	je     100082bd <spng_decode_scanline+0x792>
10008239:	31 c0                	xor    eax,eax
1000823b:	66 39 bd 9c 07 00 00 	cmp    WORD PTR [ebp+0x79c],di
10008242:	0f 95 c0             	setne  al
10008245:	f7 d8                	neg    eax
10008247:	eb 46                	jmp    1000828f <spng_decode_scanline+0x764>
10008249:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
1000824d:	8d 44 24 58          	lea    eax,[esp+0x58]
10008251:	e8 9d c7 ff ff       	call   100049f3 <get_sample>
10008256:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
1000825a:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
1000825f:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10008263:	74 68                	je     100082cd <spng_decode_scanline+0x7a2>
10008265:	0f b6 c0             	movzx  eax,al
10008268:	66 39 85 9c 07 00 00 	cmp    WORD PTR [ebp+0x79c],ax
1000826f:	0f 95 c0             	setne  al
10008272:	f7 d8                	neg    eax
10008274:	eb 35                	jmp    100082ab <spng_decode_scanline+0x780>
10008276:	3c 04                	cmp    al,0x4
10008278:	75 64                	jne    100082de <spng_decode_scanline+0x7b3>
1000827a:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000827d:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10008284:	75 17                	jne    1000829d <spng_decode_scanline+0x772>
10008286:	66 8b 3c 98          	mov    di,WORD PTR [eax+ebx*4]
1000828a:	66 8b 44 98 02       	mov    ax,WORD PTR [eax+ebx*4+0x2]
1000828f:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
10008294:	89 f9                	mov    ecx,edi
10008296:	66 89 7c 24 24       	mov    WORD PTR [esp+0x24],di
1000829b:	eb 41                	jmp    100082de <spng_decode_scanline+0x7b3>
1000829d:	8a 04 58             	mov    al,BYTE PTR [eax+ebx*2]
100082a0:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
100082a4:	8b 04 24             	mov    eax,DWORD PTR [esp]
100082a7:	8a 44 58 01          	mov    al,BYTE PTR [eax+ebx*2+0x1]
100082ab:	88 44 24 44          	mov    BYTE PTR [esp+0x44],al
100082af:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
100082b3:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
100082b7:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
100082bb:	eb 21                	jmp    100082de <spng_decode_scanline+0x7b3>
100082bd:	89 f9                	mov    ecx,edi
100082bf:	66 89 7c 24 24       	mov    WORD PTR [esp+0x24],di
100082c4:	66 c7 44 24 14 ff ff 	mov    WORD PTR [esp+0x14],0xffff
100082cb:	eb 11                	jmp    100082de <spng_decode_scanline+0x7b3>
100082cd:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
100082d1:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
100082d5:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
100082d9:	c6 44 24 44 ff       	mov    BYTE PTR [esp+0x44],0xff
100082de:	f6 44 24 04 05       	test   BYTE PTR [esp+0x4],0x5
100082e3:	74 57                	je     1000833c <spng_decode_scanline+0x811>
100082e5:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
100082ec:	75 2a                	jne    10008318 <spng_decode_scanline+0x7ed>
100082ee:	89 f8                	mov    eax,edi
100082f0:	0f b6 c4             	movzx  eax,ah
100082f3:	66 89 44 24 10       	mov    WORD PTR [esp+0x10],ax
100082f8:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100082fc:	0f b6 c4             	movzx  eax,ah
100082ff:	66 89 44 24 20       	mov    WORD PTR [esp+0x20],ax
10008304:	0f b6 c5             	movzx  eax,ch
10008307:	66 89 44 24 26       	mov    WORD PTR [esp+0x26],ax
1000830c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10008310:	0f b6 c4             	movzx  eax,ah
10008313:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
10008318:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
1000831c:	88 06                	mov    BYTE PTR [esi],al
1000831e:	8a 44 24 20          	mov    al,BYTE PTR [esp+0x20]
10008322:	88 46 01             	mov    BYTE PTR [esi+0x1],al
10008325:	8a 44 24 26          	mov    al,BYTE PTR [esp+0x26]
10008329:	88 46 02             	mov    BYTE PTR [esi+0x2],al
1000832c:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10008331:	75 4e                	jne    10008381 <spng_decode_scanline+0x856>
10008333:	8a 44 24 44          	mov    al,BYTE PTR [esp+0x44]
10008337:	88 46 03             	mov    BYTE PTR [esi+0x3],al
1000833a:	eb 45                	jmp    10008381 <spng_decode_scanline+0x856>
1000833c:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
10008341:	75 3e                	jne    10008381 <spng_decode_scanline+0x856>
10008343:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
1000834a:	74 1e                	je     1000836a <spng_decode_scanline+0x83f>
1000834c:	0f b6 7c 24 10       	movzx  edi,BYTE PTR [esp+0x10]
10008351:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
10008356:	66 89 44 24 24       	mov    WORD PTR [esp+0x24],ax
1000835b:	0f b6 4c 24 26       	movzx  ecx,BYTE PTR [esp+0x26]
10008360:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
10008365:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
1000836a:	66 89 3e             	mov    WORD PTR [esi],di
1000836d:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10008371:	66 89 46 02          	mov    WORD PTR [esi+0x2],ax
10008375:	66 89 4e 04          	mov    WORD PTR [esi+0x4],cx
10008379:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000837d:	66 89 46 06          	mov    WORD PTR [esi+0x6],ax
10008381:	43                   	inc    ebx
10008382:	03 74 24 38          	add    esi,DWORD PTR [esp+0x38]
10008386:	e9 0b fb ff ff       	jmp    10007e96 <spng_decode_scanline+0x36b>
1000838b:	f6 44 24 2c 01       	test   BYTE PTR [esp+0x2c],0x1
10008390:	0f 84 e4 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
10008396:	8d b5 cc 0b 00 00    	lea    esi,[ebp+0xbcc]
1000839c:	8b 9d b4 09 00 00    	mov    ebx,DWORD PTR [ebp+0x9b4]
100083a2:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
100083a7:	75 3e                	jne    100083e7 <spng_decode_scanline+0x8bc>
100083a9:	31 ff                	xor    edi,edi
100083ab:	80 bd f9 00 00 00 00 	cmp    BYTE PTR [ebp+0xf9],0x0
100083b2:	0f 84 c2 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
100083b8:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
100083bc:	0f 84 b8 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
100083c2:	50                   	push   eax
100083c3:	53                   	push   ebx
100083c4:	56                   	push   esi
100083c5:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100083c9:	e8 fc ff ff ff       	call   100083ca <spng_decode_scanline+0x89f>	100083ca: R_386_PC32	memcmp
100083ce:	83 c4 10             	add    esp,0x10
100083d1:	85 c0                	test   eax,eax
100083d3:	75 0c                	jne    100083e1 <spng_decode_scanline+0x8b6>
100083d5:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100083dc:	c6 44 b8 03 00       	mov    BYTE PTR [eax+edi*4+0x3],0x0
100083e1:	47                   	inc    edi
100083e2:	01 1c 24             	add    DWORD PTR [esp],ebx
100083e5:	eb d1                	jmp    100083b8 <spng_decode_scanline+0x88d>
100083e7:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
100083ec:	75 4a                	jne    10008438 <spng_decode_scanline+0x90d>
100083ee:	80 bd f9 00 00 00 00 	cmp    BYTE PTR [ebp+0xf9],0x0
100083f5:	0f 84 7f 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
100083fb:	31 ff                	xor    edi,edi
100083fd:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008404:	8d 50 06             	lea    edx,[eax+0x6]
10008407:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
1000840b:	0f 84 69 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
10008411:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10008415:	51                   	push   ecx
10008416:	53                   	push   ebx
10008417:	56                   	push   esi
10008418:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000841c:	e8 fc ff ff ff       	call   1000841d <spng_decode_scanline+0x8f2>	1000841d: R_386_PC32	memcmp
10008421:	83 c4 10             	add    esp,0x10
10008424:	85 c0                	test   eax,eax
10008426:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000842a:	75 06                	jne    10008432 <spng_decode_scanline+0x907>
1000842c:	66 c7 04 fa 00 00    	mov    WORD PTR [edx+edi*8],0x0
10008432:	47                   	inc    edi
10008433:	01 1c 24             	add    DWORD PTR [esp],ebx
10008436:	eb cf                	jmp    10008407 <spng_decode_scanline+0x8dc>
10008438:	0f b6 8d f8 00 00 00 	movzx  ecx,BYTE PTR [ebp+0xf8]
1000843f:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
10008444:	0f 85 94 00 00 00    	jne    100084de <spng_decode_scanline+0x9b3>
1000844a:	83 f9 10             	cmp    ecx,0x10
1000844d:	75 3b                	jne    1000848a <spng_decode_scanline+0x95f>
1000844f:	31 ff                	xor    edi,edi
10008451:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008458:	8d 50 01             	lea    edx,[eax+0x1]
1000845b:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
1000845f:	0f 84 15 01 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
10008465:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10008469:	52                   	push   edx
1000846a:	53                   	push   ebx
1000846b:	56                   	push   esi
1000846c:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10008470:	e8 fc ff ff ff       	call   10008471 <spng_decode_scanline+0x946>	10008471: R_386_PC32	memcmp
10008475:	83 c4 10             	add    esp,0x10
10008478:	85 c0                	test   eax,eax
1000847a:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000847e:	75 04                	jne    10008484 <spng_decode_scanline+0x959>
10008480:	c6 04 7a 00          	mov    BYTE PTR [edx+edi*2],0x0
10008484:	47                   	inc    edi
10008485:	01 1c 24             	add    DWORD PTR [esp],ebx
10008488:	eb d1                	jmp    1000845b <spng_decode_scanline+0x930>
1000848a:	ba 08 00 00 00       	mov    edx,0x8
1000848f:	29 ca                	sub    edx,ecx
10008491:	b8 01 00 00 00       	mov    eax,0x1
10008496:	d3 e0                	shl    eax,cl
10008498:	48                   	dec    eax
10008499:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
1000849d:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
100084a1:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
100084a5:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100084a9:	8b 04 24             	mov    eax,DWORD PTR [esp]
100084ac:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
100084b0:	31 f6                	xor    esi,esi
100084b2:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
100084b6:	0f 84 be 00 00 00    	je     1000857a <spng_decode_scanline+0xa4f>
100084bc:	8a 9d cc 0b 00 00    	mov    bl,BYTE PTR [ebp+0xbcc]
100084c2:	8d 44 24 6c          	lea    eax,[esp+0x6c]
100084c6:	e8 28 c5 ff ff       	call   100049f3 <get_sample>
100084cb:	38 c3                	cmp    bl,al
100084cd:	75 0c                	jne    100084db <spng_decode_scanline+0x9b0>
100084cf:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100084d6:	c6 44 70 01 00       	mov    BYTE PTR [eax+esi*2+0x1],0x0
100084db:	46                   	inc    esi
100084dc:	eb d4                	jmp    100084b2 <spng_decode_scanline+0x987>
100084de:	83 7c 24 04 20       	cmp    DWORD PTR [esp+0x4],0x20
100084e3:	0f 85 91 00 00 00    	jne    1000857a <spng_decode_scanline+0xa4f>
100084e9:	83 f9 10             	cmp    ecx,0x10
100084ec:	75 3a                	jne    10008528 <spng_decode_scanline+0x9fd>
100084ee:	31 ff                	xor    edi,edi
100084f0:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100084f7:	8d 50 02             	lea    edx,[eax+0x2]
100084fa:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
100084fe:	74 7a                	je     1000857a <spng_decode_scanline+0xa4f>
10008500:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10008504:	50                   	push   eax
10008505:	6a 02                	push   0x2
10008507:	56                   	push   esi
10008508:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000850c:	e8 fc ff ff ff       	call   1000850d <spng_decode_scanline+0x9e2>	1000850d: R_386_PC32	memcmp
10008511:	83 c4 10             	add    esp,0x10
10008514:	85 c0                	test   eax,eax
10008516:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000851a:	75 06                	jne    10008522 <spng_decode_scanline+0x9f7>
1000851c:	66 c7 04 ba 00 00    	mov    WORD PTR [edx+edi*4],0x0
10008522:	47                   	inc    edi
10008523:	01 1c 24             	add    DWORD PTR [esp],ebx
10008526:	eb d2                	jmp    100084fa <spng_decode_scanline+0x9cf>
10008528:	ba 08 00 00 00       	mov    edx,0x8
1000852d:	29 ca                	sub    edx,ecx
1000852f:	b8 01 00 00 00       	mov    eax,0x1
10008534:	d3 e0                	shl    eax,cl
10008536:	48                   	dec    eax
10008537:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
1000853b:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
1000853f:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
10008543:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10008547:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000854a:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
1000854e:	31 f6                	xor    esi,esi
10008550:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10008554:	74 24                	je     1000857a <spng_decode_scanline+0xa4f>
10008556:	8a 9d cc 0b 00 00    	mov    bl,BYTE PTR [ebp+0xbcc]
1000855c:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10008560:	e8 8e c4 ff ff       	call   100049f3 <get_sample>
10008565:	38 c3                	cmp    bl,al
10008567:	75 0e                	jne    10008577 <spng_decode_scanline+0xa4c>
10008569:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008570:	66 c7 44 b0 02 00 00 	mov    WORD PTR [eax+esi*4+0x2],0x0
10008577:	46                   	inc    esi
10008578:	eb d6                	jmp    10008550 <spng_decode_scanline+0xa25>
1000857a:	f6 44 24 2c 10       	test   BYTE PTR [esp+0x2c],0x10
1000857f:	0f 84 bb 02 00 00    	je     10008840 <spng_decode_scanline+0xd15>
10008585:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
1000858a:	0f 85 c7 00 00 00    	jne    10008657 <spng_decode_scanline+0xb2c>
10008590:	31 f6                	xor    esi,esi
10008592:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10008596:	0f 84 a4 02 00 00    	je     10008840 <spng_decode_scanline+0xd15>
1000859c:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100085a3:	8b 1c b0             	mov    ebx,DWORD PTR [eax+esi*4]
100085a6:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
100085ad:	0f b6 c3             	movzx  eax,bl
100085b0:	83 ec 0c             	sub    esp,0xc
100085b3:	6a 08                	push   0x8
100085b5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100085b9:	e8 ea c5 ff ff       	call   10004ba8 <sample_to_target>
100085be:	88 44 24 40          	mov    BYTE PTR [esp+0x40],al
100085c2:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
100085c9:	0f b6 c7             	movzx  eax,bh
100085cc:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
100085d3:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100085d7:	e8 cc c5 ff ff       	call   10004ba8 <sample_to_target>
100085dc:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100085e0:	88 c5                	mov    ch,al
100085e2:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
100085e6:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
100085ed:	89 d8                	mov    eax,ebx
100085ef:	c1 e8 10             	shr    eax,0x10
100085f2:	0f b6 c0             	movzx  eax,al
100085f5:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
100085fc:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10008600:	e8 a3 c5 ff ff       	call   10004ba8 <sample_to_target>
10008605:	0f b6 f8             	movzx  edi,al
10008608:	89 f8                	mov    eax,edi
1000860a:	c1 e0 10             	shl    eax,0x10
1000860d:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10008611:	81 e7 ff ff 00 ff    	and    edi,0xff00ffff
10008617:	09 c7                	or     edi,eax
10008619:	0f b6 8d d8 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd8]
10008620:	89 d8                	mov    eax,ebx
10008622:	c1 e8 18             	shr    eax,0x18
10008625:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000862c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10008630:	e8 73 c5 ff ff       	call   10004ba8 <sample_to_target>
10008635:	83 c4 10             	add    esp,0x10
10008638:	c1 e0 18             	shl    eax,0x18
1000863b:	81 e7 ff ff ff 00    	and    edi,0xffffff
10008641:	09 c7                	or     edi,eax
10008643:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10008647:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
1000864e:	89 3c b0             	mov    DWORD PTR [eax+esi*4],edi
10008651:	46                   	inc    esi
10008652:	e9 3b ff ff ff       	jmp    10008592 <spng_decode_scanline+0xa67>
10008657:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
1000865c:	0f 85 c5 00 00 00    	jne    10008727 <spng_decode_scanline+0xbfc>
10008662:	31 db                	xor    ebx,ebx
10008664:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10008668:	0f 84 d2 01 00 00    	je     10008840 <spng_decode_scanline+0xd15>
1000866e:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008675:	8b 3c d8             	mov    edi,DWORD PTR [eax+ebx*8]
10008678:	8b 74 d8 04          	mov    esi,DWORD PTR [eax+ebx*8+0x4]
1000867c:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
10008683:	0f b7 c7             	movzx  eax,di
10008686:	83 ec 0c             	sub    esp,0xc
10008689:	6a 10                	push   0x10
1000868b:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000868f:	e8 14 c5 ff ff       	call   10004ba8 <sample_to_target>
10008694:	66 89 44 24 4c       	mov    WORD PTR [esp+0x4c],ax
10008699:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
100086a0:	89 f8                	mov    eax,edi
100086a2:	c1 e8 10             	shr    eax,0x10
100086a5:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
100086ac:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100086b0:	e8 f3 c4 ff ff       	call   10004ba8 <sample_to_target>
100086b5:	c1 e0 10             	shl    eax,0x10
100086b8:	0f b7 54 24 4c       	movzx  edx,WORD PTR [esp+0x4c]
100086bd:	09 c2                	or     edx,eax
100086bf:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
100086c3:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
100086ca:	0f b7 c6             	movzx  eax,si
100086cd:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
100086d4:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100086d8:	e8 cb c4 ff ff       	call   10004ba8 <sample_to_target>
100086dd:	66 89 44 24 50       	mov    WORD PTR [esp+0x50],ax
100086e2:	0f b6 8d d8 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd8]
100086e9:	89 f0                	mov    eax,esi
100086eb:	c1 e8 10             	shr    eax,0x10
100086ee:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
100086f5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100086f9:	e8 aa c4 ff ff       	call   10004ba8 <sample_to_target>
100086fe:	83 c4 10             	add    esp,0x10
10008701:	c1 e0 10             	shl    eax,0x10
10008704:	0f b7 54 24 40       	movzx  edx,WORD PTR [esp+0x40]
10008709:	09 c2                	or     edx,eax
1000870b:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
1000870f:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008716:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000871a:	89 34 d8             	mov    DWORD PTR [eax+ebx*8],esi
1000871d:	89 54 d8 04          	mov    DWORD PTR [eax+ebx*8+0x4],edx
10008721:	43                   	inc    ebx
10008722:	e9 3d ff ff ff       	jmp    10008664 <spng_decode_scanline+0xb39>
10008727:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
1000872c:	0f 85 92 00 00 00    	jne    100087c4 <spng_decode_scanline+0xc99>
10008732:	6b 7c 24 08 03       	imul   edi,DWORD PTR [esp+0x8],0x3
10008737:	03 bc 24 a4 00 00 00 	add    edi,DWORD PTR [esp+0xa4]
1000873e:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10008745:	39 f7                	cmp    edi,esi
10008747:	0f 84 f3 00 00 00    	je     10008840 <spng_decode_scanline+0xd15>
1000874d:	66 8b 06             	mov    ax,WORD PTR [esi]
10008750:	66 89 44 24 6c       	mov    WORD PTR [esp+0x6c],ax
10008755:	8a 5e 02             	mov    bl,BYTE PTR [esi+0x2]
10008758:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
1000875f:	0f b6 c0             	movzx  eax,al
10008762:	83 ec 0c             	sub    esp,0xc
10008765:	6a 08                	push   0x8
10008767:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000876b:	e8 38 c4 ff ff       	call   10004ba8 <sample_to_target>
10008770:	88 44 24 7c          	mov    BYTE PTR [esp+0x7c],al
10008774:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
1000877b:	0f b6 44 24 7d       	movzx  eax,BYTE PTR [esp+0x7d]
10008780:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
10008787:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000878b:	e8 18 c4 ff ff       	call   10004ba8 <sample_to_target>
10008790:	88 44 24 7d          	mov    BYTE PTR [esp+0x7d],al
10008794:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
1000879b:	0f b6 c3             	movzx  eax,bl
1000879e:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
100087a5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100087a9:	e8 fa c3 ff ff       	call   10004ba8 <sample_to_target>
100087ae:	83 c4 10             	add    esp,0x10
100087b1:	88 44 24 6e          	mov    BYTE PTR [esp+0x6e],al
100087b5:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
100087b9:	66 89 16             	mov    WORD PTR [esi],dx
100087bc:	88 46 02             	mov    BYTE PTR [esi+0x2],al
100087bf:	83 c6 03             	add    esi,0x3
100087c2:	eb 81                	jmp    10008745 <spng_decode_scanline+0xc1a>
100087c4:	83 7c 24 04 40       	cmp    DWORD PTR [esp+0x4],0x40
100087c9:	75 36                	jne    10008801 <spng_decode_scanline+0xcd6>
100087cb:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
100087cf:	03 b4 24 a4 00 00 00 	add    esi,DWORD PTR [esp+0xa4]
100087d6:	8b 9c 24 a4 00 00 00 	mov    ebx,DWORD PTR [esp+0xa4]
100087dd:	39 de                	cmp    esi,ebx
100087df:	74 5f                	je     10008840 <spng_decode_scanline+0xd15>
100087e1:	0f b6 8d d4 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd4]
100087e8:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
100087eb:	83 ec 0c             	sub    esp,0xc
100087ee:	6a 08                	push   0x8
100087f0:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100087f4:	e8 af c3 ff ff       	call   10004ba8 <sample_to_target>
100087f9:	83 c4 10             	add    esp,0x10
100087fc:	88 03                	mov    BYTE PTR [ebx],al
100087fe:	43                   	inc    ebx
100087ff:	eb dc                	jmp    100087dd <spng_decode_scanline+0xcb2>
10008801:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
10008806:	75 38                	jne    10008840 <spng_decode_scanline+0xd15>
10008808:	31 db                	xor    ebx,ebx
1000880a:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
1000880e:	74 30                	je     10008840 <spng_decode_scanline+0xd15>
10008810:	0f b6 8d d4 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd4]
10008817:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
1000881e:	0f b6 04 58          	movzx  eax,BYTE PTR [eax+ebx*2]
10008822:	83 ec 0c             	sub    esp,0xc
10008825:	6a 08                	push   0x8
10008827:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000882b:	e8 78 c3 ff ff       	call   10004ba8 <sample_to_target>
10008830:	83 c4 10             	add    esp,0x10
10008833:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
1000883a:	88 04 5f             	mov    BYTE PTR [edi+ebx*2],al
1000883d:	43                   	inc    ebx
1000883e:	eb ca                	jmp    1000880a <spng_decode_scanline+0xcdf>
10008840:	f6 44 24 2c 02       	test   BYTE PTR [esp+0x2c],0x2
10008845:	75 2f                	jne    10008876 <spng_decode_scanline+0xd4b>
10008847:	8b 85 9c 09 00 00    	mov    eax,DWORD PTR [ebp+0x99c]
1000884d:	8b 95 98 09 00 00    	mov    edx,DWORD PTR [ebp+0x998]
10008853:	89 95 9c 09 00 00    	mov    DWORD PTR [ebp+0x99c],edx
10008859:	89 85 98 09 00 00    	mov    DWORD PTR [ebp+0x998],eax
1000885f:	89 e8                	mov    eax,ebp
10008861:	e8 ec c3 ff ff       	call   10004c52 <update_row_info>
10008866:	89 c3                	mov    ebx,eax
10008868:	83 f8 4b             	cmp    eax,0x4b
1000886b:	0f 85 3f 01 00 00    	jne    100089b0 <spng_decode_scanline+0xe85>
10008871:	e9 f8 00 00 00       	jmp    1000896e <spng_decode_scanline+0xe43>
10008876:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
1000887b:	75 47                	jne    100088c4 <spng_decode_scanline+0xd99>
1000887d:	31 c0                	xor    eax,eax
1000887f:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
10008883:	74 c2                	je     10008847 <spng_decode_scanline+0xd1c>
10008885:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
1000888c:	0f b6 14 86          	movzx  edx,BYTE PTR [esi+eax*4]
10008890:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10008894:	66 8b 14 57          	mov    dx,WORD PTR [edi+edx*2]
10008898:	88 14 86             	mov    BYTE PTR [esi+eax*4],dl
1000889b:	89 f7                	mov    edi,esi
1000889d:	0f b6 54 86 01       	movzx  edx,BYTE PTR [esi+eax*4+0x1]
100088a2:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100088a6:	66 8b 14 56          	mov    dx,WORD PTR [esi+edx*2]
100088aa:	88 54 87 01          	mov    BYTE PTR [edi+eax*4+0x1],dl
100088ae:	89 fe                	mov    esi,edi
100088b0:	0f b6 54 87 02       	movzx  edx,BYTE PTR [edi+eax*4+0x2]
100088b5:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100088b9:	66 8b 14 57          	mov    dx,WORD PTR [edi+edx*2]
100088bd:	88 54 86 02          	mov    BYTE PTR [esi+eax*4+0x2],dl
100088c1:	40                   	inc    eax
100088c2:	eb bb                	jmp    1000887f <spng_decode_scanline+0xd54>
100088c4:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
100088c9:	75 54                	jne    1000891f <spng_decode_scanline+0xdf4>
100088cb:	31 c0                	xor    eax,eax
100088cd:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
100088d1:	0f 84 70 ff ff ff    	je     10008847 <spng_decode_scanline+0xd1c>
100088d7:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
100088de:	8b 0c c6             	mov    ecx,DWORD PTR [esi+eax*8]
100088e1:	8b 7c c6 04          	mov    edi,DWORD PTR [esi+eax*8+0x4]
100088e5:	89 3c 24             	mov    DWORD PTR [esp],edi
100088e8:	89 fa                	mov    edx,edi
100088ea:	0f b7 d9             	movzx  ebx,cx
100088ed:	c1 e9 10             	shr    ecx,0x10
100088f0:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100088f4:	0f b7 0c 4e          	movzx  ecx,WORD PTR [esi+ecx*2]
100088f8:	89 ce                	mov    esi,ecx
100088fa:	c1 e6 10             	shl    esi,0x10
100088fd:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10008901:	0f b7 0c 5f          	movzx  ecx,WORD PTR [edi+ebx*2]
10008905:	09 f1                	or     ecx,esi
10008907:	0f b7 da             	movzx  ebx,dx
1000890a:	66 8b 14 5f          	mov    dx,WORD PTR [edi+ebx*2]
1000890e:	8b 9c 24 a4 00 00 00 	mov    ebx,DWORD PTR [esp+0xa4]
10008915:	89 0c c3             	mov    DWORD PTR [ebx+eax*8],ecx
10008918:	89 54 c3 04          	mov    DWORD PTR [ebx+eax*8+0x4],edx
1000891c:	40                   	inc    eax
1000891d:	eb ae                	jmp    100088cd <spng_decode_scanline+0xda2>
1000891f:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
10008924:	0f 85 1d ff ff ff    	jne    10008847 <spng_decode_scanline+0xd1c>
1000892a:	6b 44 24 08 03       	imul   eax,DWORD PTR [esp+0x8],0x3
1000892f:	03 84 24 a4 00 00 00 	add    eax,DWORD PTR [esp+0xa4]
10008936:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
1000893a:	0f 84 07 ff ff ff    	je     10008847 <spng_decode_scanline+0xd1c>
10008940:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10008944:	0f b6 16             	movzx  edx,BYTE PTR [esi]
10008947:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
1000894b:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
1000894f:	88 16                	mov    BYTE PTR [esi],dl
10008951:	0f b6 56 01          	movzx  edx,BYTE PTR [esi+0x1]
10008955:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
10008959:	88 56 01             	mov    BYTE PTR [esi+0x1],dl
1000895c:	0f b6 56 02          	movzx  edx,BYTE PTR [esi+0x2]
10008960:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
10008964:	88 56 02             	mov    BYTE PTR [esi+0x2],dl
10008967:	83 44 24 28 03       	add    DWORD PTR [esp+0x28],0x3
1000896c:	eb c8                	jmp    10008936 <spng_decode_scanline+0xe0b>
1000896e:	8b 55 50             	mov    edx,DWORD PTR [ebp+0x50]
10008971:	85 d2                	test   edx,edx
10008973:	74 16                	je     1000898b <spng_decode_scanline+0xe60>
10008975:	89 e8                	mov    eax,ebp
10008977:	e8 75 d0 ff ff       	call   100059f1 <discard_chunk_bytes>
1000897c:	85 c0                	test   eax,eax
1000897e:	74 0b                	je     1000898b <spng_decode_scanline+0xe60>
10008980:	c7 45 70 00 00 00 00 	mov    DWORD PTR [ebp+0x70],0x0
10008987:	89 c3                	mov    ebx,eax
10008989:	eb 25                	jmp    100089b0 <spng_decode_scanline+0xe85>
1000898b:	8d bd c4 00 00 00    	lea    edi,[ebp+0xc4]
10008991:	8d 75 40             	lea    esi,[ebp+0x40]
10008994:	b9 04 00 00 00       	mov    ecx,0x4
10008999:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000899b:	eb 13                	jmp    100089b0 <spng_decode_scanline+0xe85>
1000899d:	bb 01 00 00 00       	mov    ebx,0x1
100089a2:	eb 0c                	jmp    100089b0 <spng_decode_scanline+0xe85>
100089a4:	bb 50 00 00 00       	mov    ebx,0x50
100089a9:	c7 45 70 00 00 00 00 	mov    DWORD PTR [ebp+0x70],0x0
100089b0:	89 d8                	mov    eax,ebx
100089b2:	81 c4 8c 00 00 00    	add    esp,0x8c
100089b8:	5b                   	pop    ebx
100089b9:	5e                   	pop    esi
100089ba:	5f                   	pop    edi
100089bb:	5d                   	pop    ebp
100089bc:	c3                   	ret    

100089bd <spng_decode_row>:
100089bd:	55                   	push   ebp
100089be:	57                   	push   edi
100089bf:	56                   	push   esi
100089c0:	53                   	push   ebx
100089c1:	83 ec 3c             	sub    esp,0x3c
100089c4:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100089c8:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100089cc:	85 db                	test   ebx,ebx
100089ce:	0f 84 dc 01 00 00    	je     10008bb0 <spng_decode_row+0x1f3>
100089d4:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
100089d9:	0f 84 d1 01 00 00    	je     10008bb0 <spng_decode_row+0x1f3>
100089df:	b8 4b 00 00 00       	mov    eax,0x4b
100089e4:	83 7b 70 05          	cmp    DWORD PTR [ebx+0x70],0x5
100089e8:	0f 87 c7 01 00 00    	ja     10008bb5 <spng_decode_row+0x1f8>
100089ee:	8b 93 ac 09 00 00    	mov    edx,DWORD PTR [ebx+0x9ac]
100089f4:	b8 42 00 00 00       	mov    eax,0x42
100089f9:	39 d1                	cmp    ecx,edx
100089fb:	0f 82 b4 01 00 00    	jb     10008bb5 <spng_decode_row+0x1f8>
10008a01:	8b ab e8 0f 00 00    	mov    ebp,DWORD PTR [ebx+0xfe8]
10008a07:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
10008a0e:	74 05                	je     10008a15 <spng_decode_row+0x58>
10008a10:	83 fd 06             	cmp    ebp,0x6
10008a13:	75 14                	jne    10008a29 <spng_decode_row+0x6c>
10008a15:	52                   	push   edx
10008a16:	51                   	push   ecx
10008a17:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10008a1b:	53                   	push   ebx
10008a1c:	e8 fc ff ff ff       	call   10008a1d <spng_decode_row+0x60>	10008a1d: R_386_PC32	spng_decode_scanline
10008a21:	83 c4 10             	add    esp,0x10
10008a24:	e9 8c 01 00 00       	jmp    10008bb5 <spng_decode_row+0x1f8>
10008a29:	50                   	push   eax
10008a2a:	52                   	push   edx
10008a2b:	ff b3 a0 09 00 00    	push   DWORD PTR [ebx+0x9a0]
10008a31:	53                   	push   ebx
10008a32:	e8 fc ff ff ff       	call   10008a33 <spng_decode_row+0x76>	10008a33: R_386_PC32	spng_decode_scanline
10008a37:	83 c4 10             	add    esp,0x10
10008a3a:	85 c0                	test   eax,eax
10008a3c:	74 09                	je     10008a47 <spng_decode_row+0x8a>
10008a3e:	83 f8 4b             	cmp    eax,0x4b
10008a41:	0f 85 6e 01 00 00    	jne    10008bb5 <spng_decode_row+0x1f8>
10008a47:	8b 43 6c             	mov    eax,DWORD PTR [ebx+0x6c]
10008a4a:	83 f8 02             	cmp    eax,0x2
10008a4d:	0f 84 d8 00 00 00    	je     10008b2b <spng_decode_row+0x16e>
10008a53:	83 f8 04             	cmp    eax,0x4
10008a56:	0f 84 d6 00 00 00    	je     10008b32 <spng_decode_row+0x175>
10008a5c:	83 f8 40             	cmp    eax,0x40
10008a5f:	0f 84 d4 00 00 00    	je     10008b39 <spng_decode_row+0x17c>
10008a65:	83 f8 10             	cmp    eax,0x10
10008a68:	0f 84 d2 00 00 00    	je     10008b40 <spng_decode_row+0x183>
10008a6e:	f6 c4 03             	test   ah,0x3
10008a71:	0f 84 d0 00 00 00    	je     10008b47 <spng_decode_row+0x18a>
10008a77:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
10008a7d:	80 f9 07             	cmp    cl,0x7
10008a80:	0f 87 9d 00 00 00    	ja     10008b23 <spng_decode_row+0x166>
10008a86:	0f b6 f9             	movzx  edi,cl
10008a89:	b8 08 00 00 00       	mov    eax,0x8
10008a8e:	89 c2                	mov    edx,eax
10008a90:	29 fa                	sub    edx,edi
10008a92:	be 01 00 00 00       	mov    esi,0x1
10008a97:	d3 e6                	shl    esi,cl
10008a99:	8d 4e ff             	lea    ecx,[esi-0x1]
10008a9c:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10008aa0:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10008aa4:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
10008aa8:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10008aac:	8b b3 a0 09 00 00    	mov    esi,DWORD PTR [ebx+0x9a0]
10008ab2:	89 74 24 2c          	mov    DWORD PTR [esp+0x2c],esi
10008ab6:	99                   	cdq    
10008ab7:	f7 ff                	idiv   edi
10008ab9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10008abd:	31 f6                	xor    esi,esi
10008abf:	8d bd 8e 00 00 00    	lea    edi,[ebp+0x8e]
10008ac5:	c1 e7 04             	shl    edi,0x4
10008ac8:	8d 04 1f             	lea    eax,[edi+ebx*1]
10008acb:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10008acf:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10008ad3:	3b 30                	cmp    esi,DWORD PTR [eax]
10008ad5:	0f 83 d1 00 00 00    	jae    10008bac <spng_decode_row+0x1ef>
10008adb:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10008adf:	e8 0f bf ff ff       	call   100049f3 <get_sample>
10008ae4:	8b 14 ad 9c d7 00 10 	mov    edx,DWORD PTR [ebp*4+0x1000d79c]	10008ae7: R_386_32	.text
10008aeb:	0f af d6             	imul   edx,esi
10008aee:	03 14 ad d4 d7 00 10 	add    edx,DWORD PTR [ebp*4+0x1000d7d4]	10008af1: R_386_32	.text
10008af5:	0f b6 c0             	movzx  eax,al
10008af8:	0f b6 8b f8 00 00 00 	movzx  ecx,BYTE PTR [ebx+0xf8]
10008aff:	0f af ca             	imul   ecx,edx
10008b02:	83 e1 07             	and    ecx,0x7
10008b05:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10008b09:	29 cf                	sub    edi,ecx
10008b0b:	89 f9                	mov    ecx,edi
10008b0d:	d3 e0                	shl    eax,cl
10008b0f:	89 c1                	mov    ecx,eax
10008b11:	89 d0                	mov    eax,edx
10008b13:	31 d2                	xor    edx,edx
10008b15:	f7 74 24 04          	div    DWORD PTR [esp+0x4]
10008b19:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10008b1d:	08 0c 07             	or     BYTE PTR [edi+eax*1],cl
10008b20:	46                   	inc    esi
10008b21:	eb ac                	jmp    10008acf <spng_decode_row+0x112>
10008b23:	8b 83 b4 09 00 00    	mov    eax,DWORD PTR [ebx+0x9b4]
10008b29:	eb 21                	jmp    10008b4c <spng_decode_row+0x18f>
10008b2b:	b8 08 00 00 00       	mov    eax,0x8
10008b30:	eb 1a                	jmp    10008b4c <spng_decode_row+0x18f>
10008b32:	b8 03 00 00 00       	mov    eax,0x3
10008b37:	eb 13                	jmp    10008b4c <spng_decode_row+0x18f>
10008b39:	b8 01 00 00 00       	mov    eax,0x1
10008b3e:	eb 0c                	jmp    10008b4c <spng_decode_row+0x18f>
10008b40:	b8 02 00 00 00       	mov    eax,0x2
10008b45:	eb 05                	jmp    10008b4c <spng_decode_row+0x18f>
10008b47:	b8 04 00 00 00       	mov    eax,0x4
10008b4c:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
10008b54:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
10008b5c:	8d 95 8e 00 00 00    	lea    edx,[ebp+0x8e]
10008b62:	c1 e2 04             	shl    edx,0x4
10008b65:	8d 34 13             	lea    esi,[ebx+edx*1]
10008b68:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10008b6c:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10008b70:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10008b74:	3b 0f                	cmp    ecx,DWORD PTR [edi]
10008b76:	73 34                	jae    10008bac <spng_decode_row+0x1ef>
10008b78:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10008b7c:	0f af 14 ad 9c d7 00 10 	imul   edx,DWORD PTR [ebp*4+0x1000d79c]	10008b80: R_386_32	.text
10008b84:	03 14 ad d4 d7 00 10 	add    edx,DWORD PTR [ebp*4+0x1000d7d4]	10008b87: R_386_32	.text
10008b8b:	0f af d0             	imul   edx,eax
10008b8e:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10008b92:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
10008b96:	03 b3 a0 09 00 00    	add    esi,DWORD PTR [ebx+0x9a0]
10008b9c:	89 d7                	mov    edi,edx
10008b9e:	89 c1                	mov    ecx,eax
10008ba0:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008ba2:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10008ba6:	01 44 24 08          	add    DWORD PTR [esp+0x8],eax
10008baa:	eb c0                	jmp    10008b6c <spng_decode_row+0x1af>
10008bac:	31 c0                	xor    eax,eax
10008bae:	eb 05                	jmp    10008bb5 <spng_decode_row+0x1f8>
10008bb0:	b8 01 00 00 00       	mov    eax,0x1
10008bb5:	83 c4 3c             	add    esp,0x3c
10008bb8:	5b                   	pop    ebx
10008bb9:	5e                   	pop    esi
10008bba:	5f                   	pop    edi
10008bbb:	5d                   	pop    ebp
10008bbc:	c3                   	ret    

10008bbd <spng_get_row_info>:
10008bbd:	57                   	push   edi
10008bbe:	56                   	push   esi
10008bbf:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10008bc3:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10008bc7:	85 d2                	test   edx,edx
10008bc9:	74 2e                	je     10008bf9 <spng_get_row_info+0x3c>
10008bcb:	85 f6                	test   esi,esi
10008bcd:	74 2a                	je     10008bf9 <spng_get_row_info+0x3c>
10008bcf:	8b 4e 70             	mov    ecx,DWORD PTR [esi+0x70]
10008bd2:	b8 01 00 00 00       	mov    eax,0x1
10008bd7:	83 f9 04             	cmp    ecx,0x4
10008bda:	76 22                	jbe    10008bfe <spng_get_row_info+0x41>
10008bdc:	b8 4b 00 00 00       	mov    eax,0x4b
10008be1:	83 f9 05             	cmp    ecx,0x5
10008be4:	75 18                	jne    10008bfe <spng_get_row_info+0x41>
10008be6:	81 c6 e0 0f 00 00    	add    esi,0xfe0
10008bec:	b9 04 00 00 00       	mov    ecx,0x4
10008bf1:	89 d7                	mov    edi,edx
10008bf3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008bf5:	31 c0                	xor    eax,eax
10008bf7:	eb 05                	jmp    10008bfe <spng_get_row_info+0x41>
10008bf9:	b8 01 00 00 00       	mov    eax,0x1
10008bfe:	5e                   	pop    esi
10008bff:	5f                   	pop    edi
10008c00:	c3                   	ret    

10008c01 <spng_encode_chunks>:
10008c01:	55                   	push   ebp
10008c02:	57                   	push   edi
10008c03:	56                   	push   esi
10008c04:	53                   	push   ebx
10008c05:	83 ec 5c             	sub    esp,0x5c
10008c08:	8b 5c 24 70          	mov    ebx,DWORD PTR [esp+0x70]
10008c0c:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [esp+0x4],0x1
10008c14:	85 db                	test   ebx,ebx
10008c16:	0f 84 cc 0c 00 00    	je     100098e8 <spng_encode_chunks+0xce7>
10008c1c:	c7 44 24 04 51 00 00 00 	mov    DWORD PTR [esp+0x4],0x51
10008c24:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
10008c28:	0f 84 ba 0c 00 00    	je     100098e8 <spng_encode_chunks+0xce7>
10008c2e:	8b 43 70             	mov    eax,DWORD PTR [ebx+0x70]
10008c31:	83 f8 03             	cmp    eax,0x3
10008c34:	0f 87 05 0c 00 00    	ja     1000983f <spng_encode_chunks+0xc3e>
10008c3a:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
10008c41:	0f 84 d1 0b 00 00    	je     10009818 <spng_encode_chunks+0xc17>
10008c47:	b9 08 00 00 00       	mov    ecx,0x8
10008c4c:	ba 78 d7 00 10       	mov    edx,0x1000d778	10008c4d: R_386_32	.text
10008c51:	89 d8                	mov    eax,ebx
10008c53:	e8 a7 cf ff ff       	call   10005bff <write_data.part.19>
10008c58:	89 c7                	mov    edi,eax
10008c5a:	85 c0                	test   eax,eax
10008c5c:	0f 85 c1 0b 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10008c62:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008c68:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10008c6c:	8b 93 f0 00 00 00    	mov    edx,DWORD PTR [ebx+0xf0]
10008c72:	e8 72 bd ff ff       	call   100049e9 <write_u32>
10008c77:	8d 83 d8 0b 00 00    	lea    eax,[ebx+0xbd8]
10008c7d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10008c81:	8b 93 f4 00 00 00    	mov    edx,DWORD PTR [ebx+0xf4]
10008c87:	e8 5d bd ff ff       	call   100049e9 <write_u32>
10008c8c:	8a 83 fc 00 00 00    	mov    al,BYTE PTR [ebx+0xfc]
10008c92:	8b 93 f8 00 00 00    	mov    edx,DWORD PTR [ebx+0xf8]
10008c98:	89 93 dc 0b 00 00    	mov    DWORD PTR [ebx+0xbdc],edx
10008c9e:	88 83 e0 0b 00 00    	mov    BYTE PTR [ebx+0xbe0],al
10008ca4:	83 ec 0c             	sub    esp,0xc
10008ca7:	6a 0d                	push   0xd
10008ca9:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008caf:	ba 74 d7 00 10       	mov    edx,0x1000d774	10008cb0: R_386_32	.text
10008cb4:	89 d8                	mov    eax,ebx
10008cb6:	e8 fc d0 ff ff       	call   10005db7 <write_chunk>
10008cbb:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10008cbf:	83 c4 10             	add    esp,0x10
10008cc2:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
10008cc7:	0f 85 52 0b 00 00    	jne    1000981f <spng_encode_chunks+0xc1e>
10008ccd:	f6 83 ac 00 00 00 04 	test   BYTE PTR [ebx+0xac],0x4
10008cd4:	75 12                	jne    10008ce8 <spng_encode_chunks+0xe7>
10008cd6:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
10008cdd:	0f 84 eb 00 00 00    	je     10008dce <spng_encode_chunks+0x1cd>
10008ce3:	e9 b1 00 00 00       	jmp    10008d99 <spng_encode_chunks+0x198>
10008ce8:	8b 93 04 05 00 00    	mov    edx,DWORD PTR [ebx+0x504]
10008cee:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008cf4:	e8 f0 bc ff ff       	call   100049e9 <write_u32>
10008cf9:	8b 93 08 05 00 00    	mov    edx,DWORD PTR [ebx+0x508]
10008cff:	8d 83 d8 0b 00 00    	lea    eax,[ebx+0xbd8]
10008d05:	e8 df bc ff ff       	call   100049e9 <write_u32>
10008d0a:	8b 93 0c 05 00 00    	mov    edx,DWORD PTR [ebx+0x50c]
10008d10:	8d 83 dc 0b 00 00    	lea    eax,[ebx+0xbdc]
10008d16:	e8 ce bc ff ff       	call   100049e9 <write_u32>
10008d1b:	8b 93 10 05 00 00    	mov    edx,DWORD PTR [ebx+0x510]
10008d21:	8d 83 e0 0b 00 00    	lea    eax,[ebx+0xbe0]
10008d27:	e8 bd bc ff ff       	call   100049e9 <write_u32>
10008d2c:	8b 93 14 05 00 00    	mov    edx,DWORD PTR [ebx+0x514]
10008d32:	8d 83 e4 0b 00 00    	lea    eax,[ebx+0xbe4]
10008d38:	e8 ac bc ff ff       	call   100049e9 <write_u32>
10008d3d:	8b 93 18 05 00 00    	mov    edx,DWORD PTR [ebx+0x518]
10008d43:	8d 83 e8 0b 00 00    	lea    eax,[ebx+0xbe8]
10008d49:	e8 9b bc ff ff       	call   100049e9 <write_u32>
10008d4e:	8b 93 1c 05 00 00    	mov    edx,DWORD PTR [ebx+0x51c]
10008d54:	8d 83 ec 0b 00 00    	lea    eax,[ebx+0xbec]
10008d5a:	e8 8a bc ff ff       	call   100049e9 <write_u32>
10008d5f:	8b 93 20 05 00 00    	mov    edx,DWORD PTR [ebx+0x520]
10008d65:	8d 83 f0 0b 00 00    	lea    eax,[ebx+0xbf0]
10008d6b:	e8 79 bc ff ff       	call   100049e9 <write_u32>
10008d70:	83 ec 0c             	sub    esp,0xc
10008d73:	6a 20                	push   0x20
10008d75:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008d7b:	ba 60 d7 00 10       	mov    edx,0x1000d760	10008d7c: R_386_32	.text
10008d80:	89 d8                	mov    eax,ebx
10008d82:	e8 30 d0 ff ff       	call   10005db7 <write_chunk>
10008d87:	89 c7                	mov    edi,eax
10008d89:	83 c4 10             	add    esp,0x10
10008d8c:	85 c0                	test   eax,eax
10008d8e:	0f 84 42 ff ff ff    	je     10008cd6 <spng_encode_chunks+0xd5>
10008d94:	e9 8a 0a 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
10008d99:	8b 93 7c 05 00 00    	mov    edx,DWORD PTR [ebx+0x57c]
10008d9f:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008da5:	e8 3f bc ff ff       	call   100049e9 <write_u32>
10008daa:	83 ec 0c             	sub    esp,0xc
10008dad:	6a 04                	push   0x4
10008daf:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008db5:	ba 5c d7 00 10       	mov    edx,0x1000d75c	10008db6: R_386_32	.text
10008dba:	89 d8                	mov    eax,ebx
10008dbc:	e8 f6 cf ff ff       	call   10005db7 <write_chunk>
10008dc1:	89 c7                	mov    edi,eax
10008dc3:	83 c4 10             	add    esp,0x10
10008dc6:	85 c0                	test   eax,eax
10008dc8:	0f 85 55 0a 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10008dce:	f6 83 ac 00 00 00 08 	test   BYTE PTR [ebx+0xac],0x8
10008dd5:	0f 84 f8 00 00 00    	je     10008ed3 <spng_encode_chunks+0x2d2>
10008ddb:	83 ec 0c             	sub    esp,0xc
10008dde:	ff b3 74 05 00 00    	push   DWORD PTR [ebx+0x574]
10008de4:	e8 fc ff ff ff       	call   10008de5 <spng_encode_chunks+0x1e4>	10008de5: R_386_PC32	compressBound
10008de9:	89 c2                	mov    edx,eax
10008deb:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10008def:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10008df2:	e8 12 c5 ff ff       	call   10005309 <spng__malloc.isra.0>
10008df7:	89 c5                	mov    ebp,eax
10008df9:	83 c4 10             	add    esp,0x10
10008dfc:	85 c0                	test   eax,eax
10008dfe:	0f 84 44 09 00 00    	je     10009748 <spng_encode_chunks+0xb47>
10008e04:	83 ec 0c             	sub    esp,0xc
10008e07:	6a ff                	push   0xffffffff
10008e09:	ff b3 74 05 00 00    	push   DWORD PTR [ebx+0x574]
10008e0f:	ff b3 78 05 00 00    	push   DWORD PTR [ebx+0x578]
10008e15:	8d 44 24 54          	lea    eax,[esp+0x54]
10008e19:	50                   	push   eax
10008e1a:	55                   	push   ebp
10008e1b:	e8 fc ff ff ff       	call   10008e1c <spng_encode_chunks+0x21b>	10008e1c: R_386_PC32	compress2
10008e20:	83 c4 20             	add    esp,0x20
10008e23:	85 c0                	test   eax,eax
10008e25:	74 0a                	je     10008e31 <spng_encode_chunks+0x230>
10008e27:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008e2a:	89 ea                	mov    edx,ebp
10008e2c:	e9 6f 07 00 00       	jmp    100095a0 <spng_encode_chunks+0x99f>
10008e31:	8d b3 24 05 00 00    	lea    esi,[ebx+0x524]
10008e37:	83 c9 ff             	or     ecx,0xffffffff
10008e3a:	31 c0                	xor    eax,eax
10008e3c:	89 f7                	mov    edi,esi
10008e3e:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10008e40:	f7 d1                	not    ecx
10008e42:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10008e46:	89 c8                	mov    eax,ecx
10008e48:	48                   	dec    eax
10008e49:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10008e4d:	89 c8                	mov    eax,ecx
10008e4f:	40                   	inc    eax
10008e50:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10008e54:	89 c1                	mov    ecx,eax
10008e56:	03 4c 24 3c          	add    ecx,DWORD PTR [esp+0x3c]
10008e5a:	0f 82 9b 06 00 00    	jb     100094fb <spng_encode_chunks+0x8fa>
10008e60:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10008e68:	83 ec 0c             	sub    esp,0xc
10008e6b:	8d 44 24 4c          	lea    eax,[esp+0x4c]
10008e6f:	50                   	push   eax
10008e70:	ba 58 d7 00 10       	mov    edx,0x1000d758	10008e71: R_386_32	.text
10008e75:	89 d8                	mov    eax,ebx
10008e77:	e8 ff cd ff ff       	call   10005c7b <write_header>
10008e7c:	89 c7                	mov    edi,eax
10008e7e:	83 c4 10             	add    esp,0x10
10008e81:	85 c0                	test   eax,eax
10008e83:	74 0a                	je     10008e8f <spng_encode_chunks+0x28e>
10008e85:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008e88:	89 ea                	mov    edx,ebp
10008e8a:	e9 57 07 00 00       	jmp    100095e6 <spng_encode_chunks+0x9e5>
10008e8f:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10008e93:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10008e97:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008e99:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10008e9d:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10008ea1:	c6 44 30 01 00       	mov    BYTE PTR [eax+esi*1+0x1],0x0
10008ea6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10008eaa:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10008eae:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
10008eb2:	89 c7                	mov    edi,eax
10008eb4:	89 ee                	mov    esi,ebp
10008eb6:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008eb8:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008ebb:	89 ea                	mov    edx,ebp
10008ebd:	e8 6e c4 ff ff       	call   10005330 <spng__free.isra.3>
10008ec2:	89 d8                	mov    eax,ebx
10008ec4:	e8 2e ce ff ff       	call   10005cf7 <finish_chunk>
10008ec9:	89 c7                	mov    edi,eax
10008ecb:	85 c0                	test   eax,eax
10008ecd:	0f 85 50 09 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10008ed3:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
10008eda:	75 12                	jne    10008eee <spng_encode_chunks+0x2ed>
10008edc:	f6 83 ac 00 00 00 40 	test   BYTE PTR [ebx+0xac],0x40
10008ee3:	0f 84 d0 00 00 00    	je     10008fb9 <spng_encode_chunks+0x3b8>
10008ee9:	e9 a7 00 00 00       	jmp    10008f95 <spng_encode_chunks+0x394>
10008eee:	80 bb f9 00 00 00 06 	cmp    BYTE PTR [ebx+0xf9],0x6
10008ef5:	0f 87 1d 09 00 00    	ja     10009818 <spng_encode_chunks+0xc17>
10008efb:	0f b6 83 f9 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf9]
10008f02:	ff 24 85 ec d4 00 10 	jmp    DWORD PTR [eax*4+0x1000d4ec]	10008f05: R_386_32	.text
10008f09:	8a 83 80 05 00 00    	mov    al,BYTE PTR [ebx+0x580]
10008f0f:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10008f15:	b8 01 00 00 00       	mov    eax,0x1
10008f1a:	eb 51                	jmp    10008f6d <spng_encode_chunks+0x36c>
10008f1c:	8a 83 83 05 00 00    	mov    al,BYTE PTR [ebx+0x583]
10008f22:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
10008f29:	66 89 93 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],dx
10008f30:	88 83 d6 0b 00 00    	mov    BYTE PTR [ebx+0xbd6],al
10008f36:	b8 03 00 00 00       	mov    eax,0x3
10008f3b:	eb 30                	jmp    10008f6d <spng_encode_chunks+0x36c>
10008f3d:	8a 83 80 05 00 00    	mov    al,BYTE PTR [ebx+0x580]
10008f43:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10008f49:	8a 83 84 05 00 00    	mov    al,BYTE PTR [ebx+0x584]
10008f4f:	88 83 d5 0b 00 00    	mov    BYTE PTR [ebx+0xbd5],al
10008f55:	b8 02 00 00 00       	mov    eax,0x2
10008f5a:	eb 11                	jmp    10008f6d <spng_encode_chunks+0x36c>
10008f5c:	8b 83 81 05 00 00    	mov    eax,DWORD PTR [ebx+0x581]
10008f62:	89 83 d4 0b 00 00    	mov    DWORD PTR [ebx+0xbd4],eax
10008f68:	b8 04 00 00 00       	mov    eax,0x4
10008f6d:	83 ec 0c             	sub    esp,0xc
10008f70:	50                   	push   eax
10008f71:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008f77:	ba 54 d7 00 10       	mov    edx,0x1000d754	10008f78: R_386_32	.text
10008f7c:	89 d8                	mov    eax,ebx
10008f7e:	e8 34 ce ff ff       	call   10005db7 <write_chunk>
10008f83:	89 c7                	mov    edi,eax
10008f85:	83 c4 10             	add    esp,0x10
10008f88:	85 c0                	test   eax,eax
10008f8a:	0f 84 4c ff ff ff    	je     10008edc <spng_encode_chunks+0x2db>
10008f90:	e9 8e 08 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
10008f95:	8d 8b 85 05 00 00    	lea    ecx,[ebx+0x585]
10008f9b:	83 ec 0c             	sub    esp,0xc
10008f9e:	6a 01                	push   0x1
10008fa0:	ba 50 d7 00 10       	mov    edx,0x1000d750	10008fa1: R_386_32	.text
10008fa5:	89 d8                	mov    eax,ebx
10008fa7:	e8 0b ce ff ff       	call   10005db7 <write_chunk>
10008fac:	89 c7                	mov    edi,eax
10008fae:	83 c4 10             	add    esp,0x10
10008fb1:	85 c0                	test   eax,eax
10008fb3:	0f 85 6a 08 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10008fb9:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
10008fc0:	75 2f                	jne    10008ff1 <spng_encode_chunks+0x3f0>
10008fc2:	eb 1a                	jmp    10008fde <spng_encode_chunks+0x3dd>
10008fc4:	89 f2                	mov    edx,esi
10008fc6:	c1 e2 04             	shl    edx,0x4
10008fc9:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
10008fcf:	83 7a 0c 01          	cmp    DWORD PTR [edx+0xc],0x1
10008fd3:	74 20                	je     10008ff5 <spng_encode_chunks+0x3f4>
10008fd5:	46                   	inc    esi
10008fd6:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
10008fdc:	72 e6                	jb     10008fc4 <spng_encode_chunks+0x3c3>
10008fde:	f6 83 ac 00 00 00 02 	test   BYTE PTR [ebx+0xac],0x2
10008fe5:	74 50                	je     10009037 <spng_encode_chunks+0x436>
10008fe7:	8d 93 d4 0b 00 00    	lea    edx,[ebx+0xbd4]
10008fed:	31 c0                	xor    eax,eax
10008fef:	eb 51                	jmp    10009042 <spng_encode_chunks+0x441>
10008ff1:	31 f6                	xor    esi,esi
10008ff3:	eb e1                	jmp    10008fd6 <spng_encode_chunks+0x3d5>
10008ff5:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
10008ff8:	83 ec 0c             	sub    esp,0xc
10008ffb:	ff 72 04             	push   DWORD PTR [edx+0x4]
10008ffe:	89 d8                	mov    eax,ebx
10009000:	e8 b2 cd ff ff       	call   10005db7 <write_chunk>
10009005:	89 c7                	mov    edi,eax
10009007:	83 c4 10             	add    esp,0x10
1000900a:	85 c0                	test   eax,eax
1000900c:	74 c7                	je     10008fd5 <spng_encode_chunks+0x3d4>
1000900e:	e9 10 08 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
10009013:	83 ec 0c             	sub    esp,0xc
10009016:	8d 0c 49             	lea    ecx,[ecx+ecx*2]
10009019:	51                   	push   ecx
1000901a:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000901e:	ba 70 d7 00 10       	mov    edx,0x1000d770	1000901f: R_386_32	.text
10009023:	89 d8                	mov    eax,ebx
10009025:	e8 8d cd ff ff       	call   10005db7 <write_chunk>
1000902a:	89 c7                	mov    edi,eax
1000902c:	83 c4 10             	add    esp,0x10
1000902f:	85 c0                	test   eax,eax
10009031:	0f 85 ec 07 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10009037:	f6 83 ad 00 00 00 01 	test   BYTE PTR [ebx+0xad],0x1
1000903e:	75 77                	jne    100090b7 <spng_encode_chunks+0x4b6>
10009040:	eb 63                	jmp    100090a5 <spng_encode_chunks+0x4a4>
10009042:	8b 8b 00 01 00 00    	mov    ecx,DWORD PTR [ebx+0x100]
10009048:	39 c8                	cmp    eax,ecx
1000904a:	73 c7                	jae    10009013 <spng_encode_chunks+0x412>
1000904c:	8a 8c 83 04 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x104]
10009053:	88 0a                	mov    BYTE PTR [edx],cl
10009055:	8a 8c 83 05 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x105]
1000905c:	88 4a 01             	mov    BYTE PTR [edx+0x1],cl
1000905f:	8a 8c 83 06 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x106]
10009066:	88 4a 02             	mov    BYTE PTR [edx+0x2],cl
10009069:	40                   	inc    eax
1000906a:	83 c2 03             	add    edx,0x3
1000906d:	eb d3                	jmp    10009042 <spng_encode_chunks+0x441>
1000906f:	66 8b 83 90 05 00 00 	mov    ax,WORD PTR [ebx+0x590]
10009076:	86 e0                	xchg   al,ah
10009078:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
1000907f:	b8 02 00 00 00       	mov    eax,0x2
10009084:	83 ec 0c             	sub    esp,0xc
10009087:	50                   	push   eax
10009088:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000908c:	ba 40 d7 00 10       	mov    edx,0x1000d740	1000908d: R_386_32	.text
10009091:	89 d8                	mov    eax,ebx
10009093:	e8 1f cd ff ff       	call   10005db7 <write_chunk>
10009098:	89 c7                	mov    edi,eax
1000909a:	83 c4 10             	add    esp,0x10
1000909d:	85 c0                	test   eax,eax
1000909f:	0f 85 7e 07 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
100090a5:	f6 83 ad 00 00 00 02 	test   BYTE PTR [ebx+0xad],0x2
100090ac:	0f 85 9c 00 00 00    	jne    1000914e <spng_encode_chunks+0x54d>
100090b2:	e9 8c 00 00 00       	jmp    10009143 <spng_encode_chunks+0x542>
100090b7:	80 bb f9 00 00 00 06 	cmp    BYTE PTR [ebx+0xf9],0x6
100090be:	0f 87 54 07 00 00    	ja     10009818 <spng_encode_chunks+0xc17>
100090c4:	0f b6 83 f9 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf9]
100090cb:	ff 24 85 08 d5 00 10 	jmp    DWORD PTR [eax*4+0x1000d508]	100090ce: R_386_32	.text
100090d2:	66 8b 83 92 05 00 00 	mov    ax,WORD PTR [ebx+0x592]
100090d9:	86 e0                	xchg   al,ah
100090db:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
100090e2:	66 8b 83 94 05 00 00 	mov    ax,WORD PTR [ebx+0x594]
100090e9:	86 e0                	xchg   al,ah
100090eb:	66 89 83 d6 0b 00 00 	mov    WORD PTR [ebx+0xbd6],ax
100090f2:	66 8b 83 96 05 00 00 	mov    ax,WORD PTR [ebx+0x596]
100090f9:	86 e0                	xchg   al,ah
100090fb:	66 89 83 d8 0b 00 00 	mov    WORD PTR [ebx+0xbd8],ax
10009102:	b8 06 00 00 00       	mov    eax,0x6
10009107:	e9 78 ff ff ff       	jmp    10009084 <spng_encode_chunks+0x483>
1000910c:	8b 83 98 05 00 00    	mov    eax,DWORD PTR [ebx+0x598]
10009112:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10009118:	b8 01 00 00 00       	mov    eax,0x1
1000911d:	e9 62 ff ff ff       	jmp    10009084 <spng_encode_chunks+0x483>
10009122:	83 ec 0c             	sub    esp,0xc
10009125:	52                   	push   edx
10009126:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000912a:	ba 3c d7 00 10       	mov    edx,0x1000d73c	1000912b: R_386_32	.text
1000912f:	89 d8                	mov    eax,ebx
10009131:	e8 81 cc ff ff       	call   10005db7 <write_chunk>
10009136:	89 c7                	mov    edi,eax
10009138:	83 c4 10             	add    esp,0x10
1000913b:	85 c0                	test   eax,eax
1000913d:	0f 85 e0 06 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
10009143:	f6 83 ad 00 00 00 04 	test   BYTE PTR [ebx+0xad],0x4
1000914a:	75 39                	jne    10009185 <spng_encode_chunks+0x584>
1000914c:	eb 73                	jmp    100091c1 <spng_encode_chunks+0x5c0>
1000914e:	8b 83 00 01 00 00    	mov    eax,DWORD PTR [ebx+0x100]
10009154:	8d 14 00             	lea    edx,[eax+eax*1]
10009157:	31 c0                	xor    eax,eax
10009159:	3b 83 00 01 00 00    	cmp    eax,DWORD PTR [ebx+0x100]
1000915f:	73 c1                	jae    10009122 <spng_encode_chunks+0x521>
10009161:	66 8b 8c 43 9a 05 00 00 	mov    cx,WORD PTR [ebx+eax*2+0x59a]
10009169:	66 c1 e9 08          	shr    cx,0x8
1000916d:	88 8c 43 d4 0b 00 00 	mov    BYTE PTR [ebx+eax*2+0xbd4],cl
10009174:	8a 8c 43 9a 05 00 00 	mov    cl,BYTE PTR [ebx+eax*2+0x59a]
1000917b:	88 8c 43 d5 0b 00 00 	mov    BYTE PTR [ebx+eax*2+0xbd5],cl
10009182:	40                   	inc    eax
10009183:	eb d4                	jmp    10009159 <spng_encode_chunks+0x558>
10009185:	8a 83 f9 00 00 00    	mov    al,BYTE PTR [ebx+0xf9]
1000918b:	84 c0                	test   al,al
1000918d:	75 41                	jne    100091d0 <spng_encode_chunks+0x5cf>
1000918f:	66 8b 83 9c 07 00 00 	mov    ax,WORD PTR [ebx+0x79c]
10009196:	86 e0                	xchg   al,ah
10009198:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
1000919f:	83 ec 0c             	sub    esp,0xc
100091a2:	6a 02                	push   0x2
100091a4:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100091a8:	ba 64 d7 00 10       	mov    edx,0x1000d764	100091a9: R_386_32	.text
100091ad:	89 d8                	mov    eax,ebx
100091af:	e8 03 cc ff ff       	call   10005db7 <write_chunk>
100091b4:	89 c7                	mov    edi,eax
100091b6:	83 c4 10             	add    esp,0x10
100091b9:	85 c0                	test   eax,eax
100091bb:	0f 85 62 06 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
100091c1:	f6 83 ad 00 00 00 08 	test   BYTE PTR [ebx+0xad],0x8
100091c8:	0f 84 9e 00 00 00    	je     1000926c <spng_encode_chunks+0x66b>
100091ce:	eb 50                	jmp    10009220 <spng_encode_chunks+0x61f>
100091d0:	3c 02                	cmp    al,0x2
100091d2:	75 37                	jne    1000920b <spng_encode_chunks+0x60a>
100091d4:	66 8b 83 9e 07 00 00 	mov    ax,WORD PTR [ebx+0x79e]
100091db:	86 e0                	xchg   al,ah
100091dd:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
100091e4:	66 8b 83 a0 07 00 00 	mov    ax,WORD PTR [ebx+0x7a0]
100091eb:	86 e0                	xchg   al,ah
100091ed:	66 89 83 d6 0b 00 00 	mov    WORD PTR [ebx+0xbd6],ax
100091f4:	66 8b 83 a2 07 00 00 	mov    ax,WORD PTR [ebx+0x7a2]
100091fb:	86 e0                	xchg   al,ah
100091fd:	66 89 83 d8 0b 00 00 	mov    WORD PTR [ebx+0xbd8],ax
10009204:	83 ec 0c             	sub    esp,0xc
10009207:	6a 06                	push   0x6
10009209:	eb 99                	jmp    100091a4 <spng_encode_chunks+0x5a3>
1000920b:	3c 03                	cmp    al,0x3
1000920d:	75 b2                	jne    100091c1 <spng_encode_chunks+0x5c0>
1000920f:	8d 8b a8 07 00 00    	lea    ecx,[ebx+0x7a8]
10009215:	83 ec 0c             	sub    esp,0xc
10009218:	ff b3 a4 07 00 00    	push   DWORD PTR [ebx+0x7a4]
1000921e:	eb 88                	jmp    100091a8 <spng_encode_chunks+0x5a7>
10009220:	8b 93 a8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8a8]
10009226:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000922a:	e8 ba b7 ff ff       	call   100049e9 <write_u32>
1000922f:	8b 93 ac 08 00 00    	mov    edx,DWORD PTR [ebx+0x8ac]
10009235:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10009239:	e8 ab b7 ff ff       	call   100049e9 <write_u32>
1000923e:	8a 83 b0 08 00 00    	mov    al,BYTE PTR [ebx+0x8b0]
10009244:	88 83 dc 0b 00 00    	mov    BYTE PTR [ebx+0xbdc],al
1000924a:	83 ec 0c             	sub    esp,0xc
1000924d:	6a 09                	push   0x9
1000924f:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10009253:	ba 38 d7 00 10       	mov    edx,0x1000d738	10009254: R_386_32	.text
10009258:	89 d8                	mov    eax,ebx
1000925a:	e8 58 cb ff ff       	call   10005db7 <write_chunk>
1000925f:	89 c7                	mov    edi,eax
10009261:	83 c4 10             	add    esp,0x10
10009264:	85 c0                	test   eax,eax
10009266:	0f 85 b7 05 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
1000926c:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
10009273:	0f 84 b5 01 00 00    	je     1000942e <spng_encode_chunks+0x82d>
10009279:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10009281:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
10009289:	eb 15                	jmp    100092a0 <spng_encode_chunks+0x69f>
1000928b:	89 d8                	mov    eax,ebx
1000928d:	e8 65 ca ff ff       	call   10005cf7 <finish_chunk>
10009292:	89 c7                	mov    edi,eax
10009294:	85 c0                	test   eax,eax
10009296:	0f 85 87 05 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
1000929c:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
100092a0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100092a4:	3b 83 b4 08 00 00    	cmp    eax,DWORD PTR [ebx+0x8b4]
100092aa:	0f 83 7e 01 00 00    	jae    1000942e <spng_encode_chunks+0x82d>
100092b0:	6b 6c 24 10 5c       	imul   ebp,DWORD PTR [esp+0x10],0x5c
100092b5:	03 ab b8 08 00 00    	add    ebp,DWORD PTR [ebx+0x8b8]
100092bb:	83 c9 ff             	or     ecx,0xffffffff
100092be:	31 c0                	xor    eax,eax
100092c0:	89 ef                	mov    edi,ebp
100092c2:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100092c4:	f7 d1                	not    ecx
100092c6:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100092ca:	89 c8                	mov    eax,ecx
100092cc:	48                   	dec    eax
100092cd:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100092d1:	8a 45 50             	mov    al,BYTE PTR [ebp+0x50]
100092d4:	3c 08                	cmp    al,0x8
100092d6:	75 06                	jne    100092de <spng_encode_chunks+0x6dd>
100092d8:	6b 45 54 06          	imul   eax,DWORD PTR [ebp+0x54],0x6
100092dc:	eb 0c                	jmp    100092ea <spng_encode_chunks+0x6e9>
100092de:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100092e2:	3c 10                	cmp    al,0x10
100092e4:	75 08                	jne    100092ee <spng_encode_chunks+0x6ed>
100092e6:	6b 45 54 0a          	imul   eax,DWORD PTR [ebp+0x54],0xa
100092ea:	8d 4c 01 01          	lea    ecx,[ecx+eax*1+0x1]
100092ee:	83 ec 0c             	sub    esp,0xc
100092f1:	8d 44 24 4c          	lea    eax,[esp+0x4c]
100092f5:	50                   	push   eax
100092f6:	ba 34 d7 00 10       	mov    edx,0x1000d734	100092f7: R_386_32	.text
100092fb:	89 d8                	mov    eax,ebx
100092fd:	e8 79 c9 ff ff       	call   10005c7b <write_header>
10009302:	89 c7                	mov    edi,eax
10009304:	83 c4 10             	add    esp,0x10
10009307:	85 c0                	test   eax,eax
10009309:	0f 85 14 05 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
1000930f:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10009313:	89 ee                	mov    esi,ebp
10009315:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10009319:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000931b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000931f:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10009323:	8d 44 30 02          	lea    eax,[eax+esi*1+0x2]
10009327:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000932b:	8a 55 50             	mov    dl,BYTE PTR [ebp+0x50]
1000932e:	88 50 ff             	mov    BYTE PTR [eax-0x1],dl
10009331:	8a 45 50             	mov    al,BYTE PTR [ebp+0x50]
10009334:	3c 08                	cmp    al,0x8
10009336:	75 7e                	jne    100093b6 <spng_encode_chunks+0x7b5>
10009338:	31 c0                	xor    eax,eax
1000933a:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009342:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10009346:	3b 75 54             	cmp    esi,DWORD PTR [ebp+0x54]
10009349:	0f 83 3c ff ff ff    	jae    1000928b <spng_encode_chunks+0x68a>
1000934f:	6b 54 24 0c 0a       	imul   edx,DWORD PTR [esp+0xc],0xa
10009354:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
10009357:	66 8b 3c 16          	mov    di,WORD PTR [esi+edx*1]
1000935b:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000935f:	89 f9                	mov    ecx,edi
10009361:	88 0c 06             	mov    BYTE PTR [esi+eax*1],cl
10009364:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
10009367:	66 8b 7c 16 02       	mov    di,WORD PTR [esi+edx*1+0x2]
1000936c:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009370:	89 f9                	mov    ecx,edi
10009372:	88 4c 06 01          	mov    BYTE PTR [esi+eax*1+0x1],cl
10009376:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
10009379:	66 8b 7c 16 04       	mov    di,WORD PTR [esi+edx*1+0x4]
1000937e:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009382:	89 f9                	mov    ecx,edi
10009384:	88 4c 06 02          	mov    BYTE PTR [esi+eax*1+0x2],cl
10009388:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
1000938b:	66 8b 7c 16 06       	mov    di,WORD PTR [esi+edx*1+0x6]
10009390:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009394:	89 f9                	mov    ecx,edi
10009396:	88 4c 06 03          	mov    BYTE PTR [esi+eax*1+0x3],cl
1000939a:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
1000939d:	66 8b 54 16 08       	mov    dx,WORD PTR [esi+edx*1+0x8]
100093a2:	86 f2                	xchg   dl,dh
100093a4:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100093a8:	66 89 54 06 04       	mov    WORD PTR [esi+eax*1+0x4],dx
100093ad:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
100093b1:	83 c0 06             	add    eax,0x6
100093b4:	eb 8c                	jmp    10009342 <spng_encode_chunks+0x741>
100093b6:	3c 10                	cmp    al,0x10
100093b8:	0f 85 cd fe ff ff    	jne    1000928b <spng_encode_chunks+0x68a>
100093be:	31 c0                	xor    eax,eax
100093c0:	31 d2                	xor    edx,edx
100093c2:	3b 55 54             	cmp    edx,DWORD PTR [ebp+0x54]
100093c5:	0f 83 c0 fe ff ff    	jae    1000928b <spng_encode_chunks+0x68a>
100093cb:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
100093ce:	66 8b 0c 01          	mov    cx,WORD PTR [ecx+eax*1]
100093d2:	86 e9                	xchg   cl,ch
100093d4:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100093d8:	66 89 0c 06          	mov    WORD PTR [esi+eax*1],cx
100093dc:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
100093df:	66 8b 4c 01 02       	mov    cx,WORD PTR [ecx+eax*1+0x2]
100093e4:	86 e9                	xchg   cl,ch
100093e6:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100093ea:	66 89 4c 06 02       	mov    WORD PTR [esi+eax*1+0x2],cx
100093ef:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
100093f2:	66 8b 4c 01 04       	mov    cx,WORD PTR [ecx+eax*1+0x4]
100093f7:	86 e9                	xchg   cl,ch
100093f9:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100093fd:	66 89 4c 06 04       	mov    WORD PTR [esi+eax*1+0x4],cx
10009402:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
10009405:	66 8b 4c 01 06       	mov    cx,WORD PTR [ecx+eax*1+0x6]
1000940a:	86 e9                	xchg   cl,ch
1000940c:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009410:	66 89 4c 06 06       	mov    WORD PTR [esi+eax*1+0x6],cx
10009415:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
10009418:	66 8b 4c 01 08       	mov    cx,WORD PTR [ecx+eax*1+0x8]
1000941d:	86 e9                	xchg   cl,ch
1000941f:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009423:	66 89 4c 06 08       	mov    WORD PTR [esi+eax*1+0x8],cx
10009428:	42                   	inc    edx
10009429:	83 c0 0a             	add    eax,0xa
1000942c:	eb 94                	jmp    100093c2 <spng_encode_chunks+0x7c1>
1000942e:	f6 83 ad 00 00 00 20 	test   BYTE PTR [ebx+0xad],0x20
10009435:	75 32                	jne    10009469 <spng_encode_chunks+0x868>
10009437:	80 bb ac 00 00 00 00 	cmp    BYTE PTR [ebx+0xac],0x0
1000943e:	0f 89 0e 03 00 00    	jns    10009752 <spng_encode_chunks+0xb51>
10009444:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
1000944c:	8d 7c 24 40          	lea    edi,[esp+0x40]
10009450:	be dc d4 00 10       	mov    esi,0x1000d4dc	10009451: R_386_32	.text
10009455:	b9 04 00 00 00       	mov    ecx,0x4
1000945a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000945c:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
10009464:	e9 29 02 00 00       	jmp    10009692 <spng_encode_chunks+0xa91>
10009469:	66 8b 83 bc 08 00 00 	mov    ax,WORD PTR [ebx+0x8bc]
10009470:	86 e0                	xchg   al,ah
10009472:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
10009479:	8a 83 c2 08 00 00    	mov    al,BYTE PTR [ebx+0x8c2]
1000947f:	8b 93 be 08 00 00    	mov    edx,DWORD PTR [ebx+0x8be]
10009485:	89 93 d6 0b 00 00    	mov    DWORD PTR [ebx+0xbd6],edx
1000948b:	88 83 da 0b 00 00    	mov    BYTE PTR [ebx+0xbda],al
10009491:	83 ec 0c             	sub    esp,0xc
10009494:	6a 07                	push   0x7
10009496:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000949a:	ba 30 d7 00 10       	mov    edx,0x1000d730	1000949b: R_386_32	.text
1000949f:	89 d8                	mov    eax,ebx
100094a1:	e8 11 c9 ff ff       	call   10005db7 <write_chunk>
100094a6:	89 c7                	mov    edi,eax
100094a8:	83 c4 10             	add    esp,0x10
100094ab:	85 c0                	test   eax,eax
100094ad:	74 88                	je     10009437 <spng_encode_chunks+0x836>
100094af:	e9 6f 03 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
100094b4:	83 fe 03             	cmp    esi,0x3
100094b7:	0f 85 2f 02 00 00    	jne    100096ec <spng_encode_chunks+0xaeb>
100094bd:	8b 7d 14             	mov    edi,DWORD PTR [ebp+0x14]
100094c0:	85 ff                	test   edi,edi
100094c2:	0f 84 50 03 00 00    	je     10009818 <spng_encode_chunks+0xc17>
100094c8:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
100094cb:	85 f6                	test   esi,esi
100094cd:	0f 84 45 03 00 00    	je     10009818 <spng_encode_chunks+0xc17>
100094d3:	89 d1                	mov    ecx,edx
100094d5:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100094d7:	f7 d1                	not    ecx
100094d9:	8d 79 ff             	lea    edi,[ecx-0x1]
100094dc:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100094e0:	89 d1                	mov    ecx,edx
100094e2:	89 f7                	mov    edi,esi
100094e4:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100094e6:	89 c8                	mov    eax,ecx
100094e8:	f7 d0                	not    eax
100094ea:	48                   	dec    eax
100094eb:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100094ef:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100094f3:	03 74 24 18          	add    esi,DWORD PTR [esp+0x18]
100094f7:	01 c6                	add    esi,eax
100094f9:	73 0a                	jae    10009505 <spng_encode_chunks+0x904>
100094fb:	bf 03 00 00 00       	mov    edi,0x3
10009500:	e9 1e 03 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
10009505:	83 c6 04             	add    esi,0x4
10009508:	83 fe 03             	cmp    esi,0x3
1000950b:	76 ee                	jbe    100094fb <spng_encode_chunks+0x8fa>
1000950d:	80 7d 10 00          	cmp    BYTE PTR [ebp+0x10],0x0
10009511:	0f 84 ee 01 00 00    	je     10009705 <spng_encode_chunks+0xb04>
10009517:	8d 93 8c 00 00 00    	lea    edx,[ebx+0x8c]
1000951d:	89 d8                	mov    eax,ebx
1000951f:	e8 4d bd ff ff       	call   10005271 <spng__deflate_init>
10009524:	89 c7                	mov    edi,eax
10009526:	85 c0                	test   eax,eax
10009528:	0f 85 f5 02 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
1000952e:	8d bb 50 09 00 00    	lea    edi,[ebx+0x950]
10009534:	52                   	push   edx
10009535:	52                   	push   edx
10009536:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000953a:	57                   	push   edi
1000953b:	e8 fc ff ff ff       	call   1000953c <spng_encode_chunks+0x93b>	1000953c: R_386_PC32	deflateBound
10009540:	89 c1                	mov    ecx,eax
10009542:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10009545:	89 ca                	mov    edx,ecx
10009547:	89 4c 24 34          	mov    DWORD PTR [esp+0x34],ecx
1000954b:	e8 b9 bd ff ff       	call   10005309 <spng__malloc.isra.0>
10009550:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10009554:	83 c4 10             	add    esp,0x10
10009557:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
1000955c:	0f 84 e6 01 00 00    	je     10009748 <spng_encode_chunks+0xb47>
10009562:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10009565:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
1000956b:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000956f:	89 83 54 09 00 00    	mov    DWORD PTR [ebx+0x954],eax
10009575:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10009579:	89 83 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],eax
1000957f:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10009583:	89 8b 60 09 00 00    	mov    DWORD PTR [ebx+0x960],ecx
10009589:	50                   	push   eax
1000958a:	50                   	push   eax
1000958b:	6a 04                	push   0x4
1000958d:	57                   	push   edi
1000958e:	e8 fc ff ff ff       	call   1000958f <spng_encode_chunks+0x98e>	1000958f: R_386_PC32	deflate
10009593:	83 c4 10             	add    esp,0x10
10009596:	48                   	dec    eax
10009597:	74 16                	je     100095af <spng_encode_chunks+0x9ae>
10009599:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000959c:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100095a0:	e8 8b bd ff ff       	call   10005330 <spng__free.isra.3>
100095a5:	bf 40 00 00 00       	mov    edi,0x40
100095aa:	e9 74 02 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
100095af:	8b 83 64 09 00 00    	mov    eax,DWORD PTR [ebx+0x964]
100095b5:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100095b9:	01 c6                	add    esi,eax
100095bb:	0f 82 3a ff ff ff    	jb     100094fb <spng_encode_chunks+0x8fa>
100095c1:	83 ec 0c             	sub    esp,0xc
100095c4:	8d 44 24 48          	lea    eax,[esp+0x48]
100095c8:	50                   	push   eax
100095c9:	89 f1                	mov    ecx,esi
100095cb:	8b 54 24 3c          	mov    edx,DWORD PTR [esp+0x3c]
100095cf:	89 d8                	mov    eax,ebx
100095d1:	e8 a5 c6 ff ff       	call   10005c7b <write_header>
100095d6:	89 c7                	mov    edi,eax
100095d8:	83 c4 10             	add    esp,0x10
100095db:	85 c0                	test   eax,eax
100095dd:	74 11                	je     100095f0 <spng_encode_chunks+0x9ef>
100095df:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
100095e2:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100095e6:	e8 45 bd ff ff       	call   10005330 <spng__free.isra.3>
100095eb:	e9 33 02 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
100095f0:	8b 75 04             	mov    esi,DWORD PTR [ebp+0x4]
100095f3:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
100095f7:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100095fb:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100095fd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10009601:	03 4c 24 3c          	add    ecx,DWORD PTR [esp+0x3c]
10009605:	89 4c 24 3c          	mov    DWORD PTR [esp+0x3c],ecx
10009609:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000960c:	83 f8 03             	cmp    eax,0x3
1000960f:	0f 85 10 01 00 00    	jne    10009725 <spng_encode_chunks+0xb24>
10009615:	8a 45 10             	mov    al,BYTE PTR [ebp+0x10]
10009618:	88 01                	mov    BYTE PTR [ecx],al
1000961a:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000961e:	c6 40 01 00          	mov    BYTE PTR [eax+0x1],0x0
10009622:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10009626:	8d 50 02             	lea    edx,[eax+0x2]
10009629:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
1000962d:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009631:	40                   	inc    eax
10009632:	8b 75 14             	mov    esi,DWORD PTR [ebp+0x14]
10009635:	89 d7                	mov    edi,edx
10009637:	89 c1                	mov    ecx,eax
10009639:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000963b:	03 44 24 3c          	add    eax,DWORD PTR [esp+0x3c]
1000963f:	89 c2                	mov    edx,eax
10009641:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10009645:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10009649:	40                   	inc    eax
1000964a:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
1000964d:	89 d7                	mov    edi,edx
1000964f:	89 c1                	mov    ecx,eax
10009651:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009653:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10009657:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000965b:	80 7d 10 00          	cmp    BYTE PTR [ebp+0x10],0x0
1000965f:	0f 84 d5 00 00 00    	je     1000973a <spng_encode_chunks+0xb39>
10009665:	89 c7                	mov    edi,eax
10009667:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000966b:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
1000966f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009671:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10009674:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009678:	e8 b3 bc ff ff       	call   10005330 <spng__free.isra.3>
1000967d:	89 d8                	mov    eax,ebx
1000967f:	e8 73 c6 ff ff       	call   10005cf7 <finish_chunk>
10009684:	89 c7                	mov    edi,eax
10009686:	85 c0                	test   eax,eax
10009688:	0f 85 95 01 00 00    	jne    10009823 <spng_encode_chunks+0xc22>
1000968e:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10009692:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009696:	3b 83 88 05 00 00    	cmp    eax,DWORD PTR [ebx+0x588]
1000969c:	0f 83 b0 00 00 00    	jae    10009752 <spng_encode_chunks+0xb51>
100096a2:	6b 6c 24 20 70       	imul   ebp,DWORD PTR [esp+0x20],0x70
100096a7:	03 ab 8c 05 00 00    	add    ebp,DWORD PTR [ebx+0x58c]
100096ad:	8b 75 00             	mov    esi,DWORD PTR [ebp+0x0]
100096b0:	8b 44 b4 40          	mov    eax,DWORD PTR [esp+esi*4+0x40]
100096b4:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100096b8:	8b 7d 04             	mov    edi,DWORD PTR [ebp+0x4]
100096bb:	83 ca ff             	or     edx,0xffffffff
100096be:	31 c0                	xor    eax,eax
100096c0:	89 d1                	mov    ecx,edx
100096c2:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100096c4:	f7 d1                	not    ecx
100096c6:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
100096ca:	8b 7d 08             	mov    edi,DWORD PTR [ebp+0x8]
100096cd:	89 d1                	mov    ecx,edx
100096cf:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100096d1:	f7 d1                	not    ecx
100096d3:	8d 79 ff             	lea    edi,[ecx-0x1]
100096d6:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
100096da:	83 fe 02             	cmp    esi,0x2
100096dd:	0f 85 d1 fd ff ff    	jne    100094b4 <spng_encode_chunks+0x8b3>
100096e3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100096e7:	8d 70 01             	lea    esi,[eax+0x1]
100096ea:	eb 04                	jmp    100096f0 <spng_encode_chunks+0xaef>
100096ec:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100096f0:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
100096f8:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
10009700:	e9 08 fe ff ff       	jmp    1000950d <spng_encode_chunks+0x90c>
10009705:	31 c0                	xor    eax,eax
10009707:	03 74 24 14          	add    esi,DWORD PTR [esp+0x14]
1000970b:	0f 92 c0             	setb   al
1000970e:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10009712:	0f 82 e3 fd ff ff    	jb     100094fb <spng_encode_chunks+0x8fa>
10009718:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009720:	e9 9c fe ff ff       	jmp    100095c1 <spng_encode_chunks+0x9c0>
10009725:	83 f8 02             	cmp    eax,0x2
10009728:	0f 85 29 ff ff ff    	jne    10009657 <spng_encode_chunks+0xa56>
1000972e:	c6 01 00             	mov    BYTE PTR [ecx],0x0
10009731:	ff 44 24 3c          	inc    DWORD PTR [esp+0x3c]
10009735:	e9 1d ff ff ff       	jmp    10009657 <spng_encode_chunks+0xa56>
1000973a:	8b 75 08             	mov    esi,DWORD PTR [ebp+0x8]
1000973d:	89 c7                	mov    edi,eax
1000973f:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009743:	e9 27 ff ff ff       	jmp    1000966f <spng_encode_chunks+0xa6e>
10009748:	bf 02 00 00 00       	mov    edi,0x2
1000974d:	e9 d1 00 00 00       	jmp    10009823 <spng_encode_chunks+0xc22>
10009752:	f6 83 ad 00 00 00 40 	test   BYTE PTR [ebx+0xad],0x40
10009759:	75 0b                	jne    10009766 <spng_encode_chunks+0xb65>
1000975b:	80 bb ad 00 00 00 00 	cmp    BYTE PTR [ebx+0xad],0x0
10009762:	79 70                	jns    100097d4 <spng_encode_chunks+0xbd3>
10009764:	eb 4a                	jmp    100097b0 <spng_encode_chunks+0xbaf>
10009766:	8b 93 c4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8c4]
1000976c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10009770:	e8 74 b2 ff ff       	call   100049e9 <write_u32>
10009775:	8b 93 c8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8c8]
1000977b:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000977f:	e8 65 b2 ff ff       	call   100049e9 <write_u32>
10009784:	8a 83 cc 08 00 00    	mov    al,BYTE PTR [ebx+0x8cc]
1000978a:	88 83 dc 0b 00 00    	mov    BYTE PTR [ebx+0xbdc],al
10009790:	83 ec 0c             	sub    esp,0xc
10009793:	6a 09                	push   0x9
10009795:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10009799:	ba 2c d7 00 10       	mov    edx,0x1000d72c	1000979a: R_386_32	.text
1000979e:	89 d8                	mov    eax,ebx
100097a0:	e8 12 c6 ff ff       	call   10005db7 <write_chunk>
100097a5:	89 c7                	mov    edi,eax
100097a7:	83 c4 10             	add    esp,0x10
100097aa:	85 c0                	test   eax,eax
100097ac:	74 ad                	je     1000975b <spng_encode_chunks+0xb5a>
100097ae:	eb 73                	jmp    10009823 <spng_encode_chunks+0xc22>
100097b0:	8b 8b d4 08 00 00    	mov    ecx,DWORD PTR [ebx+0x8d4]
100097b6:	83 ec 0c             	sub    esp,0xc
100097b9:	ff b3 d0 08 00 00    	push   DWORD PTR [ebx+0x8d0]
100097bf:	ba 28 d7 00 10       	mov    edx,0x1000d728	100097c0: R_386_32	.text
100097c4:	89 d8                	mov    eax,ebx
100097c6:	e8 ec c5 ff ff       	call   10005db7 <write_chunk>
100097cb:	89 c7                	mov    edi,eax
100097cd:	83 c4 10             	add    esp,0x10
100097d0:	85 c0                	test   eax,eax
100097d2:	75 4f                	jne    10009823 <spng_encode_chunks+0xc22>
100097d4:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
100097db:	74 56                	je     10009833 <spng_encode_chunks+0xc32>
100097dd:	31 f6                	xor    esi,esi
100097df:	eb 12                	jmp    100097f3 <spng_encode_chunks+0xbf2>
100097e1:	89 f2                	mov    edx,esi
100097e3:	c1 e2 04             	shl    edx,0x4
100097e6:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
100097ec:	83 7a 0c 02          	cmp    DWORD PTR [edx+0xc],0x2
100097f0:	74 0b                	je     100097fd <spng_encode_chunks+0xbfc>
100097f2:	46                   	inc    esi
100097f3:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
100097f9:	72 e6                	jb     100097e1 <spng_encode_chunks+0xbe0>
100097fb:	eb 36                	jmp    10009833 <spng_encode_chunks+0xc32>
100097fd:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
10009800:	83 ec 0c             	sub    esp,0xc
10009803:	ff 72 04             	push   DWORD PTR [edx+0x4]
10009806:	89 d8                	mov    eax,ebx
10009808:	e8 aa c5 ff ff       	call   10005db7 <write_chunk>
1000980d:	89 c7                	mov    edi,eax
1000980f:	83 c4 10             	add    esp,0x10
10009812:	85 c0                	test   eax,eax
10009814:	74 dc                	je     100097f2 <spng_encode_chunks+0xbf1>
10009816:	eb 0b                	jmp    10009823 <spng_encode_chunks+0xc22>
10009818:	bf 50 00 00 00       	mov    edi,0x50
1000981d:	eb 04                	jmp    10009823 <spng_encode_chunks+0xc22>
1000981f:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10009823:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000982a:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000982e:	e9 b5 00 00 00       	jmp    100098e8 <spng_encode_chunks+0xce7>
10009833:	c7 43 70 04 00 00 00 	mov    DWORD PTR [ebx+0x70],0x4
1000983a:	e9 a9 00 00 00       	jmp    100098e8 <spng_encode_chunks+0xce7>
1000983f:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
10009847:	83 f8 04             	cmp    eax,0x4
1000984a:	0f 84 98 00 00 00    	je     100098e8 <spng_encode_chunks+0xce7>
10009850:	c7 44 24 04 54 00 00 00 	mov    DWORD PTR [esp+0x4],0x54
10009858:	83 f8 06             	cmp    eax,0x6
1000985b:	0f 85 87 00 00 00    	jne    100098e8 <spng_encode_chunks+0xce7>
10009861:	31 f6                	xor    esi,esi
10009863:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000986a:	75 44                	jne    100098b0 <spng_encode_chunks+0xcaf>
1000986c:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10009874:	c7 44 24 44 49 45 4e 44 	mov    DWORD PTR [esp+0x44],0x444e4549
1000987c:	c7 44 24 48 ae 42 60 82 	mov    DWORD PTR [esp+0x48],0x826042ae
10009884:	b9 0c 00 00 00       	mov    ecx,0xc
10009889:	8d 54 24 40          	lea    edx,[esp+0x40]
1000988d:	89 d8                	mov    eax,ebx
1000988f:	e8 6b c3 ff ff       	call   10005bff <write_data.part.19>
10009894:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10009898:	85 c0                	test   eax,eax
1000989a:	74 45                	je     100098e1 <spng_encode_chunks+0xce0>
1000989c:	eb 3a                	jmp    100098d8 <spng_encode_chunks+0xcd7>
1000989e:	89 f2                	mov    edx,esi
100098a0:	c1 e2 04             	shl    edx,0x4
100098a3:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
100098a9:	83 7a 0c 08          	cmp    DWORD PTR [edx+0xc],0x8
100098ad:	74 0b                	je     100098ba <spng_encode_chunks+0xcb9>
100098af:	46                   	inc    esi
100098b0:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
100098b6:	72 e6                	jb     1000989e <spng_encode_chunks+0xc9d>
100098b8:	eb b2                	jmp    1000986c <spng_encode_chunks+0xc6b>
100098ba:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
100098bd:	83 ec 0c             	sub    esp,0xc
100098c0:	ff 72 04             	push   DWORD PTR [edx+0x4]
100098c3:	89 d8                	mov    eax,ebx
100098c5:	e8 ed c4 ff ff       	call   10005db7 <write_chunk>
100098ca:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100098ce:	83 c4 10             	add    esp,0x10
100098d1:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
100098d6:	74 d7                	je     100098af <spng_encode_chunks+0xcae>
100098d8:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
100098df:	eb 07                	jmp    100098e8 <spng_encode_chunks+0xce7>
100098e1:	c7 43 70 09 00 00 00 	mov    DWORD PTR [ebx+0x70],0x9
100098e8:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100098ec:	83 c4 5c             	add    esp,0x5c
100098ef:	5b                   	pop    ebx
100098f0:	5e                   	pop    esi
100098f1:	5f                   	pop    edi
100098f2:	5d                   	pop    ebp
100098f3:	c3                   	ret    

100098f4 <encode_scanline>:
100098f4:	55                   	push   ebp
100098f5:	57                   	push   edi
100098f6:	56                   	push   esi
100098f7:	53                   	push   ebx
100098f8:	83 ec 5c             	sub    esp,0x5c
100098fb:	85 d2                	test   edx,edx
100098fd:	74 06                	je     10009905 <encode_scanline+0x11>
100098ff:	89 c3                	mov    ebx,eax
10009901:	85 c0                	test   eax,eax
10009903:	75 0a                	jne    1000990f <encode_scanline+0x1b>
10009905:	bf 50 00 00 00       	mov    edi,0x50
1000990a:	e9 90 04 00 00       	jmp    10009d9f <encode_scanline+0x4ab>
1000990f:	8b 80 f0 0f 00 00    	mov    eax,DWORD PTR [eax+0xff0]
10009915:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10009919:	8b 83 e8 0f 00 00    	mov    eax,DWORD PTR [ebx+0xfe8]
1000991f:	c1 e0 04             	shl    eax,0x4
10009922:	8b 84 03 ec 08 00 00 	mov    eax,DWORD PTR [ebx+eax*1+0x8ec]
10009929:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000992d:	48                   	dec    eax
1000992e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10009932:	39 c8                	cmp    eax,ecx
10009934:	77 cf                	ja     10009905 <encode_scanline+0x11>
10009936:	89 d6                	mov    esi,edx
10009938:	8b ab f4 0f 00 00    	mov    ebp,DWORD PTR [ebx+0xff4]
1000993e:	8b 83 a4 09 00 00    	mov    eax,DWORD PTR [ebx+0x9a4]
10009944:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10009948:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
1000994e:	39 d0                	cmp    eax,edx
10009950:	74 08                	je     1000995a <encode_scanline+0x66>
10009952:	89 c7                	mov    edi,eax
10009954:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10009958:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000995a:	f6 44 24 3c 04       	test   BYTE PTR [esp+0x3c],0x4
1000995f:	75 21                	jne    10009982 <encode_scanline+0x8e>
10009961:	f7 c5 e0 00 00 00    	test   ebp,0xe0
10009967:	74 48                	je     100099b1 <encode_scanline+0xbd>
10009969:	83 bb e0 0f 00 00 00 	cmp    DWORD PTR [ebx+0xfe0],0x0
10009970:	75 3f                	jne    100099b1 <encode_scanline+0xbd>
10009972:	31 c0                	xor    eax,eax
10009974:	8b bb 9c 09 00 00    	mov    edi,DWORD PTR [ebx+0x99c]
1000997a:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000997e:	f3 aa                	rep stos BYTE PTR es:[edi],al
10009980:	eb 2f                	jmp    100099b1 <encode_scanline+0xbd>
10009982:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
10009988:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000998c:	d1 ee                	shr    esi,1
1000998e:	31 c0                	xor    eax,eax
10009990:	39 c6                	cmp    esi,eax
10009992:	74 cd                	je     10009961 <encode_scanline+0x6d>
10009994:	66 8b 3c 42          	mov    di,WORD PTR [edx+eax*2]
10009998:	66 89 7c 24 0c       	mov    WORD PTR [esp+0xc],di
1000999d:	66 c1 ef 08          	shr    di,0x8
100099a1:	89 f9                	mov    ecx,edi
100099a3:	88 0c 42             	mov    BYTE PTR [edx+eax*2],cl
100099a6:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
100099aa:	88 4c 42 01          	mov    BYTE PTR [edx+eax*2+0x1],cl
100099ae:	40                   	inc    eax
100099af:	eb df                	jmp    10009990 <encode_scanline+0x9c>
100099b1:	89 de                	mov    esi,ebx
100099b3:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
100099b9:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100099bd:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100099c5:	85 ed                	test   ebp,ebp
100099c7:	0f 84 64 01 00 00    	je     10009b31 <encode_scanline+0x23d>
100099cd:	8d 45 ff             	lea    eax,[ebp-0x1]
100099d0:	21 e8                	and    eax,ebp
100099d2:	75 3f                	jne    10009a13 <encode_scanline+0x11f>
100099d4:	83 fd 08             	cmp    ebp,0x8
100099d7:	74 31                	je     10009a0a <encode_scanline+0x116>
100099d9:	83 fd 10             	cmp    ebp,0x10
100099dc:	74 19                	je     100099f7 <encode_scanline+0x103>
100099de:	83 fd 20             	cmp    ebp,0x20
100099e1:	74 1b                	je     100099fe <encode_scanline+0x10a>
100099e3:	83 fd 40             	cmp    ebp,0x40
100099e6:	74 1d                	je     10009a05 <encode_scanline+0x111>
100099e8:	b8 04 00 00 00       	mov    eax,0x4
100099ed:	81 fd 80 00 00 00    	cmp    ebp,0x80
100099f3:	75 1e                	jne    10009a13 <encode_scanline+0x11f>
100099f5:	eb 13                	jmp    10009a0a <encode_scanline+0x116>
100099f7:	b8 01 00 00 00       	mov    eax,0x1
100099fc:	eb 0c                	jmp    10009a0a <encode_scanline+0x116>
100099fe:	b8 02 00 00 00       	mov    eax,0x2
10009a03:	eb 05                	jmp    10009a0a <encode_scanline+0x116>
10009a05:	b8 03 00 00 00       	mov    eax,0x3
10009a0a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10009a0e:	e9 1e 01 00 00       	jmp    10009b31 <encode_scanline+0x23d>
10009a13:	8b 86 b4 09 00 00    	mov    eax,DWORD PTR [esi+0x9b4]
10009a19:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10009a1d:	8b 86 9c 09 00 00    	mov    eax,DWORD PTR [esi+0x99c]
10009a23:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10009a27:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009a2f:	c7 44 24 34 ff ff ff 7f 	mov    DWORD PTR [esp+0x34],0x7fffffff
10009a37:	31 ff                	xor    edi,edi
10009a39:	8d 47 03             	lea    eax,[edi+0x3]
10009a3c:	0f a3 c5             	bt     ebp,eax
10009a3f:	0f 83 e2 00 00 00    	jae    10009b27 <encode_scanline+0x233>
10009a45:	81 7c 24 10 ff ff ff 00 	cmp    DWORD PTR [esp+0x10],0xffffff
10009a4d:	0f 87 d4 00 00 00    	ja     10009b27 <encode_scanline+0x233>
10009a53:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10009a57:	f7 d8                	neg    eax
10009a59:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10009a5d:	c7 44 24 24 00 00 00 00 	mov    DWORD PTR [esp+0x24],0x0
10009a65:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10009a6d:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009a71:	39 4c 24 10          	cmp    DWORD PTR [esp+0x10],ecx
10009a75:	0f 86 96 00 00 00    	jbe    10009b11 <encode_scanline+0x21d>
10009a7b:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10009a7f:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009a83:	0f b6 14 08          	movzx  edx,BYTE PTR [eax+ecx*1]
10009a87:	39 4c 24 2c          	cmp    DWORD PTR [esp+0x2c],ecx
10009a8b:	77 1d                	ja     10009aaa <encode_scanline+0x1b6>
10009a8d:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009a91:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10009a95:	0f b6 04 08          	movzx  eax,BYTE PTR [eax+ecx*1]
10009a99:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10009a9d:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10009aa1:	8a 1c 19             	mov    bl,BYTE PTR [ecx+ebx*1]
10009aa4:	88 5c 24 3b          	mov    BYTE PTR [esp+0x3b],bl
10009aa8:	eb 07                	jmp    10009ab1 <encode_scanline+0x1bd>
10009aaa:	c6 44 24 3b 00       	mov    BYTE PTR [esp+0x3b],0x0
10009aaf:	31 c0                	xor    eax,eax
10009ab1:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10009ab5:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009ab9:	8a 1c 0b             	mov    bl,BYTE PTR [ebx+ecx*1]
10009abc:	83 ff 02             	cmp    edi,0x2
10009abf:	74 1f                	je     10009ae0 <encode_scanline+0x1ec>
10009ac1:	7f 07                	jg     10009aca <encode_scanline+0x1d6>
10009ac3:	83 ff 01             	cmp    edi,0x1
10009ac6:	74 20                	je     10009ae8 <encode_scanline+0x1f4>
10009ac8:	eb 20                	jmp    10009aea <encode_scanline+0x1f6>
10009aca:	83 ff 03             	cmp    edi,0x3
10009acd:	74 15                	je     10009ae4 <encode_scanline+0x1f0>
10009acf:	83 ff 04             	cmp    edi,0x4
10009ad2:	75 16                	jne    10009aea <encode_scanline+0x1f6>
10009ad4:	0f b6 4c 24 3b       	movzx  ecx,BYTE PTR [esp+0x3b]
10009ad9:	e8 66 b0 ff ff       	call   10004b44 <paeth>
10009ade:	eb 08                	jmp    10009ae8 <encode_scanline+0x1f4>
10009ae0:	29 d3                	sub    ebx,edx
10009ae2:	eb 06                	jmp    10009aea <encode_scanline+0x1f6>
10009ae4:	01 d0                	add    eax,edx
10009ae6:	d1 f8                	sar    eax,1
10009ae8:	29 c3                	sub    ebx,eax
10009aea:	0f b6 db             	movzx  ebx,bl
10009aed:	83 c3 80             	add    ebx,0xffffff80
10009af0:	89 d8                	mov    eax,ebx
10009af2:	c1 f8 1f             	sar    eax,0x1f
10009af5:	31 c3                	xor    ebx,eax
10009af7:	29 c3                	sub    ebx,eax
10009af9:	b8 80 00 00 00       	mov    eax,0x80
10009afe:	29 d8                	sub    eax,ebx
10009b00:	01 44 24 24          	add    DWORD PTR [esp+0x24],eax
10009b04:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10009b08:	ff 44 24 28          	inc    DWORD PTR [esp+0x28]
10009b0c:	e9 5c ff ff ff       	jmp    10009a6d <encode_scanline+0x179>
10009b11:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10009b15:	39 4c 24 24          	cmp    DWORD PTR [esp+0x24],ecx
10009b19:	7d 0c                	jge    10009b27 <encode_scanline+0x233>
10009b1b:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10009b1f:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10009b23:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10009b27:	47                   	inc    edi
10009b28:	83 ff 05             	cmp    edi,0x5
10009b2b:	0f 85 08 ff ff ff    	jne    10009a39 <encode_scanline+0x145>
10009b31:	8a 44 24 0c          	mov    al,BYTE PTR [esp+0xc]
10009b35:	84 c0                	test   al,al
10009b37:	75 08                	jne    10009b41 <encode_scanline+0x24d>
10009b39:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10009b3d:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
10009b41:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10009b45:	88 41 ff             	mov    BYTE PTR [ecx-0x1],al
10009b48:	84 c0                	test   al,al
10009b4a:	0f 84 c4 00 00 00    	je     10009c14 <encode_scanline+0x320>
10009b50:	8b 9e 98 09 00 00    	mov    ebx,DWORD PTR [esi+0x998]
10009b56:	8b ae 9c 09 00 00    	mov    ebp,DWORD PTR [esi+0x99c]
10009b5c:	85 db                	test   ebx,ebx
10009b5e:	0f 94 c2             	sete   dl
10009b61:	85 ed                	test   ebp,ebp
10009b63:	0f 94 c0             	sete   al
10009b66:	08 c2                	or     dl,al
10009b68:	0f 85 ad 00 00 00    	jne    10009c1b <encode_scanline+0x327>
10009b6e:	83 7c 24 1c 01       	cmp    DWORD PTR [esp+0x1c],0x1
10009b73:	0f 86 a2 00 00 00    	jbe    10009c1b <encode_scanline+0x327>
10009b79:	83 7c 24 0c 04       	cmp    DWORD PTR [esp+0xc],0x4
10009b7e:	0f 87 86 00 00 00    	ja     10009c0a <encode_scanline+0x316>
10009b84:	8b 86 b4 09 00 00    	mov    eax,DWORD PTR [esi+0x9b4]
10009b8a:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10009b8e:	f7 d8                	neg    eax
10009b90:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10009b94:	31 ff                	xor    edi,edi
10009b96:	39 7c 24 10          	cmp    DWORD PTR [esp+0x10],edi
10009b9a:	76 78                	jbe    10009c14 <encode_scanline+0x320>
10009b9c:	0f b6 54 3d 00       	movzx  edx,BYTE PTR [ebp+edi*1+0x0]
10009ba1:	39 7c 24 24          	cmp    DWORD PTR [esp+0x24],edi
10009ba5:	77 16                	ja     10009bbd <encode_scanline+0x2c9>
10009ba7:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009bab:	0f b6 04 03          	movzx  eax,BYTE PTR [ebx+eax*1]
10009baf:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10009bb3:	8a 4c 0d 00          	mov    cl,BYTE PTR [ebp+ecx*1+0x0]
10009bb7:	88 4c 24 28          	mov    BYTE PTR [esp+0x28],cl
10009bbb:	eb 07                	jmp    10009bc4 <encode_scanline+0x2d0>
10009bbd:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
10009bc2:	31 c0                	xor    eax,eax
10009bc4:	8a 0c 3b             	mov    cl,BYTE PTR [ebx+edi*1]
10009bc7:	88 4c 24 14          	mov    BYTE PTR [esp+0x14],cl
10009bcb:	83 7c 24 0c 03       	cmp    DWORD PTR [esp+0xc],0x3
10009bd0:	74 14                	je     10009be6 <encode_scanline+0x2f2>
10009bd2:	83 7c 24 0c 04       	cmp    DWORD PTR [esp+0xc],0x4
10009bd7:	74 13                	je     10009bec <encode_scanline+0x2f8>
10009bd9:	29 d1                	sub    ecx,edx
10009bdb:	88 ca                	mov    dl,cl
10009bdd:	83 7c 24 0c 02       	cmp    DWORD PTR [esp+0xc],0x2
10009be2:	75 12                	jne    10009bf6 <encode_scanline+0x302>
10009be4:	eb 16                	jmp    10009bfc <encode_scanline+0x308>
10009be6:	01 d0                	add    eax,edx
10009be8:	d1 f8                	sar    eax,1
10009bea:	eb 0a                	jmp    10009bf6 <encode_scanline+0x302>
10009bec:	0f b6 4c 24 28       	movzx  ecx,BYTE PTR [esp+0x28]
10009bf1:	e8 4e af ff ff       	call   10004b44 <paeth>
10009bf6:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10009bfa:	29 c2                	sub    edx,eax
10009bfc:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009c00:	88 14 38             	mov    BYTE PTR [eax+edi*1],dl
10009c03:	47                   	inc    edi
10009c04:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10009c08:	eb 8c                	jmp    10009b96 <encode_scanline+0x2a2>
10009c0a:	bf 41 00 00 00       	mov    edi,0x41
10009c0f:	e9 d0 00 00 00       	jmp    10009ce4 <encode_scanline+0x3f0>
10009c14:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009c18:	48                   	dec    eax
10009c19:	75 0a                	jne    10009c25 <encode_scanline+0x331>
10009c1b:	bf 50 00 00 00       	mov    edi,0x50
10009c20:	e9 bf 00 00 00       	jmp    10009ce4 <encode_scanline+0x3f0>
10009c25:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
10009c2d:	8d 9e 50 09 00 00    	lea    ebx,[esi+0x950]
10009c33:	89 86 50 09 00 00    	mov    DWORD PTR [esi+0x950],eax
10009c39:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10009c3d:	89 86 54 09 00 00    	mov    DWORD PTR [esi+0x954],eax
10009c43:	52                   	push   edx
10009c44:	52                   	push   edx
10009c45:	6a 00                	push   0x0
10009c47:	53                   	push   ebx
10009c48:	e8 fc ff ff ff       	call   10009c49 <encode_scanline+0x355>	10009c49: R_386_PC32	deflate
10009c4d:	89 c7                	mov    edi,eax
10009c4f:	83 c4 10             	add    esp,0x10
10009c52:	83 be 60 09 00 00 00 	cmp    DWORD PTR [esi+0x960],0x0
10009c59:	75 43                	jne    10009c9e <encode_scanline+0x3aa>
10009c5b:	89 f0                	mov    eax,esi
10009c5d:	e8 95 c0 ff ff       	call   10005cf7 <finish_chunk>
10009c62:	89 c7                	mov    edi,eax
10009c64:	85 c0                	test   eax,eax
10009c66:	75 7c                	jne    10009ce4 <encode_scanline+0x3f0>
10009c68:	83 ec 0c             	sub    esp,0xc
10009c6b:	8d 44 24 58          	lea    eax,[esp+0x58]
10009c6f:	50                   	push   eax
10009c70:	b9 00 20 00 00       	mov    ecx,0x2000
10009c75:	ba 6c d7 00 10       	mov    edx,0x1000d76c	10009c76: R_386_32	.text
10009c7a:	89 f0                	mov    eax,esi
10009c7c:	e8 fa bf ff ff       	call   10005c7b <write_header>
10009c81:	89 c7                	mov    edi,eax
10009c83:	83 c4 10             	add    esp,0x10
10009c86:	85 c0                	test   eax,eax
10009c88:	75 5a                	jne    10009ce4 <encode_scanline+0x3f0>
10009c8a:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10009c8e:	89 86 5c 09 00 00    	mov    DWORD PTR [esi+0x95c],eax
10009c94:	c7 86 60 09 00 00 00 20 00 00 	mov    DWORD PTR [esi+0x960],0x2000
10009c9e:	83 be 54 09 00 00 00 	cmp    DWORD PTR [esi+0x954],0x0
10009ca5:	75 9c                	jne    10009c43 <encode_scanline+0x34f>
10009ca7:	85 ff                	test   edi,edi
10009ca9:	75 34                	jne    10009cdf <encode_scanline+0x3eb>
10009cab:	8b 86 9c 09 00 00    	mov    eax,DWORD PTR [esi+0x99c]
10009cb1:	8b 96 98 09 00 00    	mov    edx,DWORD PTR [esi+0x998]
10009cb7:	89 96 9c 09 00 00    	mov    DWORD PTR [esi+0x99c],edx
10009cbd:	89 86 98 09 00 00    	mov    DWORD PTR [esi+0x998],eax
10009cc3:	89 f0                	mov    eax,esi
10009cc5:	e8 88 af ff ff       	call   10004c52 <update_row_info>
10009cca:	89 c7                	mov    edi,eax
10009ccc:	83 f8 4b             	cmp    eax,0x4b
10009ccf:	0f 85 ca 00 00 00    	jne    10009d9f <encode_scanline+0x4ab>
10009cd5:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
10009cdd:	eb 63                	jmp    10009d42 <encode_scanline+0x44e>
10009cdf:	bf 40 00 00 00       	mov    edi,0x40
10009ce4:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009ceb:	e9 af 00 00 00       	jmp    10009d9f <encode_scanline+0x4ab>
10009cf0:	83 f8 01             	cmp    eax,0x1
10009cf3:	74 63                	je     10009d58 <encode_scanline+0x464>
10009cf5:	83 f8 fb             	cmp    eax,0xfffffffb
10009cf8:	75 7e                	jne    10009d78 <encode_scanline+0x484>
10009cfa:	83 be 60 09 00 00 00 	cmp    DWORD PTR [esi+0x960],0x0
10009d01:	75 52                	jne    10009d55 <encode_scanline+0x461>
10009d03:	89 f0                	mov    eax,esi
10009d05:	e8 ed bf ff ff       	call   10005cf7 <finish_chunk>
10009d0a:	85 c0                	test   eax,eax
10009d0c:	75 6a                	jne    10009d78 <encode_scanline+0x484>
10009d0e:	83 ec 0c             	sub    esp,0xc
10009d11:	8d 44 24 58          	lea    eax,[esp+0x58]
10009d15:	50                   	push   eax
10009d16:	b9 00 20 00 00       	mov    ecx,0x2000
10009d1b:	ba 6c d7 00 10       	mov    edx,0x1000d76c	10009d1c: R_386_32	.text
10009d20:	89 f0                	mov    eax,esi
10009d22:	e8 54 bf ff ff       	call   10005c7b <write_header>
10009d27:	83 c4 10             	add    esp,0x10
10009d2a:	85 c0                	test   eax,eax
10009d2c:	75 4a                	jne    10009d78 <encode_scanline+0x484>
10009d2e:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10009d32:	89 86 5c 09 00 00    	mov    DWORD PTR [esi+0x95c],eax
10009d38:	c7 86 60 09 00 00 00 20 00 00 	mov    DWORD PTR [esi+0x960],0x2000
10009d42:	50                   	push   eax
10009d43:	50                   	push   eax
10009d44:	6a 04                	push   0x4
10009d46:	53                   	push   ebx
10009d47:	e8 fc ff ff ff       	call   10009d48 <encode_scanline+0x454>	10009d48: R_386_PC32	deflate
10009d4c:	83 c4 10             	add    esp,0x10
10009d4f:	85 c0                	test   eax,eax
10009d51:	74 a7                	je     10009cfa <encode_scanline+0x406>
10009d53:	eb 9b                	jmp    10009cf0 <encode_scanline+0x3fc>
10009d55:	48                   	dec    eax
10009d56:	75 ea                	jne    10009d42 <encode_scanline+0x44e>
10009d58:	b8 00 20 00 00       	mov    eax,0x2000
10009d5d:	2b 86 60 09 00 00    	sub    eax,DWORD PTR [esi+0x960]
10009d63:	78 13                	js     10009d78 <encode_scanline+0x484>
10009d65:	3b 46 44             	cmp    eax,DWORD PTR [esi+0x44]
10009d68:	77 0e                	ja     10009d78 <encode_scanline+0x484>
10009d6a:	89 46 44             	mov    DWORD PTR [esi+0x44],eax
10009d6d:	89 f0                	mov    eax,esi
10009d6f:	e8 83 bf ff ff       	call   10005cf7 <finish_chunk>
10009d74:	85 c0                	test   eax,eax
10009d76:	74 07                	je     10009d7f <encode_scanline+0x48b>
10009d78:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009d7f:	f6 44 24 3c 10       	test   BYTE PTR [esp+0x3c],0x10
10009d84:	74 19                	je     10009d9f <encode_scanline+0x4ab>
10009d86:	83 ec 0c             	sub    esp,0xc
10009d89:	56                   	push   esi
10009d8a:	e8 fc ff ff ff       	call   10009d8b <encode_scanline+0x497>	10009d8b: R_386_PC32	spng_encode_chunks
10009d8f:	83 c4 10             	add    esp,0x10
10009d92:	85 c0                	test   eax,eax
10009d94:	74 09                	je     10009d9f <encode_scanline+0x4ab>
10009d96:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009d9d:	89 c7                	mov    edi,eax
10009d9f:	89 f8                	mov    eax,edi
10009da1:	83 c4 5c             	add    esp,0x5c
10009da4:	5b                   	pop    ebx
10009da5:	5e                   	pop    esi
10009da6:	5f                   	pop    edi
10009da7:	5d                   	pop    ebp
10009da8:	c3                   	ret    

10009da9 <spng_encode_scanline>:
10009da9:	53                   	push   ebx
10009daa:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10009dae:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009db2:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10009db6:	85 c0                	test   eax,eax
10009db8:	74 28                	je     10009de2 <spng_encode_scanline+0x39>
10009dba:	85 d2                	test   edx,edx
10009dbc:	74 24                	je     10009de2 <spng_encode_scanline+0x39>
10009dbe:	83 78 70 05          	cmp    DWORD PTR [eax+0x70],0x5
10009dc2:	77 25                	ja     10009de9 <spng_encode_scanline+0x40>
10009dc4:	8b 98 e8 0f 00 00    	mov    ebx,DWORD PTR [eax+0xfe8]
10009dca:	81 c3 8e 00 00 00    	add    ebx,0x8e
10009dd0:	c1 e3 04             	shl    ebx,0x4
10009dd3:	8b 5c 18 0c          	mov    ebx,DWORD PTR [eax+ebx*1+0xc]
10009dd7:	4b                   	dec    ebx
10009dd8:	39 cb                	cmp    ebx,ecx
10009dda:	77 14                	ja     10009df0 <spng_encode_scanline+0x47>
10009ddc:	5b                   	pop    ebx
10009ddd:	e9 12 fb ff ff       	jmp    100098f4 <encode_scanline>
10009de2:	b8 01 00 00 00       	mov    eax,0x1
10009de7:	eb 0c                	jmp    10009df5 <spng_encode_scanline+0x4c>
10009de9:	b8 4b 00 00 00       	mov    eax,0x4b
10009dee:	eb 05                	jmp    10009df5 <spng_encode_scanline+0x4c>
10009df0:	b8 42 00 00 00       	mov    eax,0x42
10009df5:	5b                   	pop    ebx
10009df6:	c3                   	ret    

10009df7 <encode_row>:
10009df7:	55                   	push   ebp
10009df8:	57                   	push   edi
10009df9:	56                   	push   esi
10009dfa:	53                   	push   ebx
10009dfb:	83 ec 2c             	sub    esp,0x2c
10009dfe:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10009e02:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
10009e06:	85 c0                	test   eax,eax
10009e08:	0f 84 6a 01 00 00    	je     10009f78 <encode_row+0x181>
10009e0e:	85 d2                	test   edx,edx
10009e10:	0f 84 62 01 00 00    	je     10009f78 <encode_row+0x181>
10009e16:	89 c3                	mov    ebx,eax
10009e18:	8b a8 e8 0f 00 00    	mov    ebp,DWORD PTR [eax+0xfe8]
10009e1e:	80 b8 fc 00 00 00 00 	cmp    BYTE PTR [eax+0xfc],0x0
10009e25:	74 0a                	je     10009e31 <encode_row+0x3a>
10009e27:	83 fd 06             	cmp    ebp,0x6
10009e2a:	0f 94 44 24 18       	sete   BYTE PTR [esp+0x18]
10009e2f:	75 0d                	jne    10009e3e <encode_row+0x47>
10009e31:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009e35:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10009e39:	e9 2c 01 00 00       	jmp    10009f6a <encode_row+0x173>
10009e3e:	0f b6 80 f8 00 00 00 	movzx  eax,BYTE PTR [eax+0xf8]
10009e45:	89 04 24             	mov    DWORD PTR [esp],eax
10009e48:	83 f8 07             	cmp    eax,0x7
10009e4b:	76 28                	jbe    10009e75 <encode_row+0x7e>
10009e4d:	8b 83 b8 09 00 00    	mov    eax,DWORD PTR [ebx+0x9b8]
10009e53:	89 04 24             	mov    DWORD PTR [esp],eax
10009e56:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009e5e:	31 c0                	xor    eax,eax
10009e60:	8d 95 8e 00 00 00    	lea    edx,[ebp+0x8e]
10009e66:	c1 e2 04             	shl    edx,0x4
10009e69:	8d 3c 13             	lea    edi,[ebx+edx*1]
10009e6c:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10009e70:	e9 b5 00 00 00       	jmp    10009f2a <encode_row+0x133>
10009e75:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
10009e7b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10009e7f:	be 08 00 00 00       	mov    esi,0x8
10009e84:	89 f0                	mov    eax,esi
10009e86:	31 d2                	xor    edx,edx
10009e88:	f7 34 24             	div    DWORD PTR [esp]
10009e8b:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10009e8f:	b8 01 00 00 00       	mov    eax,0x1
10009e94:	8a 0c 24             	mov    cl,BYTE PTR [esp]
10009e97:	d3 e0                	shl    eax,cl
10009e99:	48                   	dec    eax
10009e9a:	88 44 24 17          	mov    BYTE PTR [esp+0x17],al
10009e9e:	2b 34 24             	sub    esi,DWORD PTR [esp]
10009ea1:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10009ea5:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10009ea9:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009ead:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10009eb1:	f3 aa                	rep stos BYTE PTR es:[edi],al
10009eb3:	31 ff                	xor    edi,edi
10009eb5:	8d 85 8e 00 00 00    	lea    eax,[ebp+0x8e]
10009ebb:	c1 e0 04             	shl    eax,0x4
10009ebe:	01 d8                	add    eax,ebx
10009ec0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10009ec4:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009ec8:	39 38                	cmp    DWORD PTR [eax],edi
10009eca:	76 56                	jbe    10009f22 <encode_row+0x12b>
10009ecc:	8b 0c ad 9c d7 00 10 	mov    ecx,DWORD PTR [ebp*4+0x1000d79c]	10009ecf: R_386_32	.text
10009ed3:	0f af cf             	imul   ecx,edi
10009ed6:	03 0c ad d4 d7 00 10 	add    ecx,DWORD PTR [ebp*4+0x1000d7d4]	10009ed9: R_386_32	.text
10009edd:	89 c8                	mov    eax,ecx
10009edf:	31 d2                	xor    edx,edx
10009ee1:	f7 74 24 1c          	div    DWORD PTR [esp+0x1c]
10009ee5:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10009ee9:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10009eed:	0f af 0c 24          	imul   ecx,DWORD PTR [esp]
10009ef1:	83 e1 07             	and    ecx,0x7
10009ef4:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10009ef8:	29 ca                	sub    edx,ecx
10009efa:	89 d1                	mov    ecx,edx
10009efc:	d3 f8                	sar    eax,cl
10009efe:	22 44 24 17          	and    al,BYTE PTR [esp+0x17]
10009f02:	0f b6 c0             	movzx  eax,al
10009f05:	89 f1                	mov    ecx,esi
10009f07:	d3 e0                	shl    eax,cl
10009f09:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009f0d:	08 02                	or     BYTE PTR [edx],al
10009f0f:	2b 34 24             	sub    esi,DWORD PTR [esp]
10009f12:	83 fe 07             	cmp    esi,0x7
10009f15:	76 08                	jbe    10009f1f <encode_row+0x128>
10009f17:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
10009f1b:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10009f1f:	47                   	inc    edi
10009f20:	eb a2                	jmp    10009ec4 <encode_row+0xcd>
10009f22:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
10009f28:	eb 3c                	jmp    10009f66 <encode_row+0x16f>
10009f2a:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
10009f30:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10009f34:	39 07                	cmp    DWORD PTR [edi],eax
10009f36:	76 2e                	jbe    10009f66 <encode_row+0x16f>
10009f38:	03 54 24 0c          	add    edx,DWORD PTR [esp+0xc]
10009f3c:	8b 34 ad 9c d7 00 10 	mov    esi,DWORD PTR [ebp*4+0x1000d79c]	10009f3f: R_386_32	.text
10009f43:	0f af f0             	imul   esi,eax
10009f46:	03 34 ad d4 d7 00 10 	add    esi,DWORD PTR [ebp*4+0x1000d7d4]	10009f49: R_386_32	.text
10009f4d:	0f af 34 24          	imul   esi,DWORD PTR [esp]
10009f51:	03 74 24 04          	add    esi,DWORD PTR [esp+0x4]
10009f55:	89 d7                	mov    edi,edx
10009f57:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10009f5a:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009f5c:	40                   	inc    eax
10009f5d:	8b 34 24             	mov    esi,DWORD PTR [esp]
10009f60:	01 74 24 0c          	add    DWORD PTR [esp+0xc],esi
10009f64:	eb c4                	jmp    10009f2a <encode_row+0x133>
10009f66:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009f6a:	89 d8                	mov    eax,ebx
10009f6c:	83 c4 2c             	add    esp,0x2c
10009f6f:	5b                   	pop    ebx
10009f70:	5e                   	pop    esi
10009f71:	5f                   	pop    edi
10009f72:	5d                   	pop    ebp
10009f73:	e9 7c f9 ff ff       	jmp    100098f4 <encode_scanline>
10009f78:	b8 50 00 00 00       	mov    eax,0x50
10009f7d:	83 c4 2c             	add    esp,0x2c
10009f80:	5b                   	pop    ebx
10009f81:	5e                   	pop    esi
10009f82:	5f                   	pop    edi
10009f83:	5d                   	pop    ebp
10009f84:	c3                   	ret    

10009f85 <spng_encode_row>:
10009f85:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10009f89:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10009f8d:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10009f91:	85 c0                	test   eax,eax
10009f93:	74 17                	je     10009fac <spng_encode_row+0x27>
10009f95:	85 d2                	test   edx,edx
10009f97:	74 13                	je     10009fac <spng_encode_row+0x27>
10009f99:	83 78 70 05          	cmp    DWORD PTR [eax+0x70],0x5
10009f9d:	77 13                	ja     10009fb2 <spng_encode_row+0x2d>
10009f9f:	39 88 ac 09 00 00    	cmp    DWORD PTR [eax+0x9ac],ecx
10009fa5:	77 11                	ja     10009fb8 <spng_encode_row+0x33>
10009fa7:	e9 4b fe ff ff       	jmp    10009df7 <encode_row>
10009fac:	b8 01 00 00 00       	mov    eax,0x1
10009fb1:	c3                   	ret    
10009fb2:	b8 4b 00 00 00       	mov    eax,0x4b
10009fb7:	c3                   	ret    
10009fb8:	b8 42 00 00 00       	mov    eax,0x42
10009fbd:	c3                   	ret    

10009fbe <spng_encode_image>:
10009fbe:	55                   	push   ebp
10009fbf:	57                   	push   edi
10009fc0:	56                   	push   esi
10009fc1:	53                   	push   ebx
10009fc2:	83 ec 2c             	sub    esp,0x2c
10009fc5:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
10009fc9:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
10009fcd:	85 db                	test   ebx,ebx
10009fcf:	75 0a                	jne    10009fdb <spng_encode_image+0x1d>
10009fd1:	b8 01 00 00 00       	mov    eax,0x1
10009fd6:	e9 1f 03 00 00       	jmp    1000a2fa <spng_encode_image+0x33c>
10009fdb:	b8 46 00 00 00       	mov    eax,0x46
10009fe0:	83 7b 70 00          	cmp    DWORD PTR [ebx+0x70],0x0
10009fe4:	0f 84 10 03 00 00    	je     1000a2fa <spng_encode_image+0x33c>
10009fea:	b8 51 00 00 00       	mov    eax,0x51
10009fef:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
10009ff3:	0f 84 01 03 00 00    	je     1000a2fa <spng_encode_image+0x33c>
10009ff9:	8a 8b ac 00 00 00    	mov    cl,BYTE PTR [ebx+0xac]
10009fff:	b8 0f 00 00 00       	mov    eax,0xf
1000a004:	f6 c1 01             	test   cl,0x1
1000a007:	0f 84 ed 02 00 00    	je     1000a2fa <spng_encode_image+0x33c>
1000a00d:	b8 47 00 00 00       	mov    eax,0x47
1000a012:	81 7c 24 4c 00 01 00 00 	cmp    DWORD PTR [esp+0x4c],0x100
1000a01a:	0f 85 da 02 00 00    	jne    1000a2fa <spng_encode_image+0x33c>
1000a020:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
1000a028:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000a02e:	80 fa 03             	cmp    dl,0x3
1000a031:	75 15                	jne    1000a048 <spng_encode_image+0x8a>
1000a033:	b8 4c 00 00 00       	mov    eax,0x4c
1000a038:	80 e1 02             	and    cl,0x2
1000a03b:	0f 84 b9 02 00 00    	je     1000a2fa <spng_encode_image+0x33c>
1000a041:	b8 01 00 00 00       	mov    eax,0x1
1000a046:	eb 20                	jmp    1000a068 <spng_encode_image+0xaa>
1000a048:	b8 03 00 00 00       	mov    eax,0x3
1000a04d:	80 fa 02             	cmp    dl,0x2
1000a050:	74 16                	je     1000a068 <spng_encode_image+0xaa>
1000a052:	b8 02 00 00 00       	mov    eax,0x2
1000a057:	80 fa 04             	cmp    dl,0x4
1000a05a:	74 0c                	je     1000a068 <spng_encode_image+0xaa>
1000a05c:	31 c0                	xor    eax,eax
1000a05e:	80 fa 06             	cmp    dl,0x6
1000a061:	0f 94 c0             	sete   al
1000a064:	8d 44 40 01          	lea    eax,[eax+eax*2+0x1]
1000a068:	89 83 b0 09 00 00    	mov    DWORD PTR [ebx+0x9b0],eax
1000a06e:	8d 4c 24 1c          	lea    ecx,[esp+0x1c]
1000a072:	ba 00 01 00 00       	mov    edx,0x100
1000a077:	89 d8                	mov    eax,ebx
1000a079:	e8 9c a9 ff ff       	call   10004a1a <calculate_image_size>
1000a07e:	85 c0                	test   eax,eax
1000a080:	0f 85 69 02 00 00    	jne    1000a2ef <spng_encode_image+0x331>
1000a086:	89 ef                	mov    edi,ebp
1000a088:	83 e7 01             	and    edi,0x1
1000a08b:	75 1e                	jne    1000a0ab <spng_encode_image+0xed>
1000a08d:	83 7c 24 44 00       	cmp    DWORD PTR [esp+0x44],0x0
1000a092:	0f 84 39 ff ff ff    	je     10009fd1 <spng_encode_image+0x13>
1000a098:	b8 42 00 00 00       	mov    eax,0x42
1000a09d:	8b 74 24 48          	mov    esi,DWORD PTR [esp+0x48]
1000a0a1:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
1000a0a5:	0f 85 4f 02 00 00    	jne    1000a2fa <spng_encode_image+0x33c>
1000a0ab:	83 ec 0c             	sub    esp,0xc
1000a0ae:	53                   	push   ebx
1000a0af:	e8 fc ff ff ff       	call   1000a0b0 <spng_encode_image+0xf2>	1000a0b0: R_386_PC32	spng_encode_chunks
1000a0b4:	83 c4 10             	add    esp,0x10
1000a0b7:	85 c0                	test   eax,eax
1000a0b9:	0f 85 30 02 00 00    	jne    1000a2ef <spng_encode_image+0x331>
1000a0bf:	89 d8                	mov    eax,ebx
1000a0c1:	e8 4b bd ff ff       	call   10005e11 <calculate_subimages>
1000a0c6:	85 c0                	test   eax,eax
1000a0c8:	0f 85 21 02 00 00    	jne    1000a2ef <spng_encode_image+0x331>
1000a0ce:	8a 93 f8 00 00 00    	mov    dl,BYTE PTR [ebx+0xf8]
1000a0d4:	b8 01 00 00 00       	mov    eax,0x1
1000a0d9:	80 fa 07             	cmp    dl,0x7
1000a0dc:	76 0f                	jbe    1000a0ed <spng_encode_image+0x12f>
1000a0de:	88 d0                	mov    al,dl
1000a0e0:	c0 e8 03             	shr    al,0x3
1000a0e3:	0f b6 c0             	movzx  eax,al
1000a0e6:	0f af 83 b0 09 00 00 	imul   eax,DWORD PTR [ebx+0x9b0]
1000a0ed:	89 83 b4 09 00 00    	mov    DWORD PTR [ebx+0x9b4],eax
1000a0f3:	83 7b 78 00          	cmp    DWORD PTR [ebx+0x78],0x0
1000a0f7:	75 0a                	jne    1000a103 <spng_encode_image+0x145>
1000a0f9:	c7 83 f4 0f 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xff4],0x0
1000a103:	80 bb f9 00 00 00 03 	cmp    BYTE PTR [ebx+0xf9],0x3
1000a10a:	74 0e                	je     1000a11a <spng_encode_image+0x15c>
1000a10c:	80 fa 07             	cmp    dl,0x7
1000a10f:	76 09                	jbe    1000a11a <spng_encode_image+0x15c>
1000a111:	83 bb f4 0f 00 00 08 	cmp    DWORD PTR [ebx+0xff4],0x8
1000a118:	75 0c                	jne    1000a126 <spng_encode_image+0x168>
1000a11a:	c7 83 f4 0f 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xff4],0x0
1000a124:	eb 09                	jmp    1000a12f <spng_encode_image+0x171>
1000a126:	83 bb f4 0f 00 00 00 	cmp    DWORD PTR [ebx+0xff4],0x0
1000a12d:	75 0a                	jne    1000a139 <spng_encode_image+0x17b>
1000a12f:	c7 83 84 00 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x84],0x0
1000a139:	8d 53 78             	lea    edx,[ebx+0x78]
1000a13c:	89 d8                	mov    eax,ebx
1000a13e:	e8 2e b1 ff ff       	call   10005271 <spng__deflate_init>
1000a143:	85 c0                	test   eax,eax
1000a145:	0f 85 a4 01 00 00    	jne    1000a2ef <spng_encode_image+0x331>
1000a14b:	8b 83 bc 09 00 00    	mov    eax,DWORD PTR [ebx+0x9bc]
1000a151:	05 8e 00 00 00       	add    eax,0x8e
1000a156:	c1 e0 04             	shl    eax,0x4
1000a159:	8b 74 03 0c          	mov    esi,DWORD PTR [ebx+eax*1+0xc]
1000a15d:	83 c6 20             	add    esi,0x20
1000a160:	b8 03 00 00 00       	mov    eax,0x3
1000a165:	83 fe 1f             	cmp    esi,0x1f
1000a168:	0f 86 8c 01 00 00    	jbe    1000a2fa <spng_encode_image+0x33c>
1000a16e:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a171:	89 f2                	mov    edx,esi
1000a173:	e8 91 b1 ff ff       	call   10005309 <spng__malloc.isra.0>
1000a178:	89 83 88 09 00 00    	mov    DWORD PTR [ebx+0x988],eax
1000a17e:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a181:	89 f2                	mov    edx,esi
1000a183:	e8 81 b1 ff ff       	call   10005309 <spng__malloc.isra.0>
1000a188:	89 83 8c 09 00 00    	mov    DWORD PTR [ebx+0x98c],eax
1000a18e:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000a194:	85 c0                	test   eax,eax
1000a196:	74 04                	je     1000a19c <spng_encode_image+0x1de>
1000a198:	85 d2                	test   edx,edx
1000a19a:	75 11                	jne    1000a1ad <spng_encode_image+0x1ef>
1000a19c:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000a1a3:	b8 02 00 00 00       	mov    eax,0x2
1000a1a8:	e9 4d 01 00 00       	jmp    1000a2fa <spng_encode_image+0x33c>
1000a1ad:	83 c2 10             	add    edx,0x10
1000a1b0:	89 93 98 09 00 00    	mov    DWORD PTR [ebx+0x998],edx
1000a1b6:	83 c0 10             	add    eax,0x10
1000a1b9:	89 83 9c 09 00 00    	mov    DWORD PTR [ebx+0x99c],eax
1000a1bf:	83 bb f4 0f 00 00 00 	cmp    DWORD PTR [ebx+0xff4],0x0
1000a1c6:	74 1d                	je     1000a1e5 <spng_encode_image+0x227>
1000a1c8:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a1cb:	89 f2                	mov    edx,esi
1000a1cd:	e8 37 b1 ff ff       	call   10005309 <spng__malloc.isra.0>
1000a1d2:	89 83 94 09 00 00    	mov    DWORD PTR [ebx+0x994],eax
1000a1d8:	85 c0                	test   eax,eax
1000a1da:	74 c0                	je     1000a19c <spng_encode_image+0x1de>
1000a1dc:	83 c0 10             	add    eax,0x10
1000a1df:	89 83 a4 09 00 00    	mov    DWORD PTR [ebx+0x9a4],eax
1000a1e5:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000a1e9:	8b 83 f4 00 00 00    	mov    eax,DWORD PTR [ebx+0xf4]
1000a1ef:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000a1f3:	c7 43 6c 00 01 00 00 	mov    DWORD PTR [ebx+0x6c],0x100
1000a1fa:	c7 83 60 09 00 00 00 20 00 00 	mov    DWORD PTR [ebx+0x960],0x2000
1000a204:	83 ec 0c             	sub    esp,0xc
1000a207:	8d 83 5c 09 00 00    	lea    eax,[ebx+0x95c]
1000a20d:	50                   	push   eax
1000a20e:	b9 00 20 00 00       	mov    ecx,0x2000
1000a213:	ba 6c d7 00 10       	mov    edx,0x1000d76c	1000a214: R_386_32	.text
1000a218:	89 d8                	mov    eax,ebx
1000a21a:	e8 5c ba ff ff       	call   10005c7b <write_header>
1000a21f:	83 c4 10             	add    esp,0x10
1000a222:	85 c0                	test   eax,eax
1000a224:	0f 85 c5 00 00 00    	jne    1000a2ef <spng_encode_image+0x331>
1000a22a:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
1000a231:	74 07                	je     1000a23a <spng_encode_image+0x27c>
1000a233:	80 8b f0 0f 00 00 01 	or     BYTE PTR [ebx+0xff0],0x1
1000a23a:	8a 93 f0 0f 00 00    	mov    dl,BYTE PTR [ebx+0xff0]
1000a240:	88 d1                	mov    cl,dl
1000a242:	83 c9 02             	or     ecx,0x2
1000a245:	88 8b f0 0f 00 00    	mov    BYTE PTR [ebx+0xff0],cl
1000a24b:	80 bb f8 00 00 00 10 	cmp    BYTE PTR [ebx+0xf8],0x10
1000a252:	75 09                	jne    1000a25d <spng_encode_image+0x29f>
1000a254:	83 ca 06             	or     edx,0x6
1000a257:	88 93 f0 0f 00 00    	mov    BYTE PTR [ebx+0xff0],dl
1000a25d:	83 e5 02             	and    ebp,0x2
1000a260:	74 07                	je     1000a269 <spng_encode_image+0x2ab>
1000a262:	80 8b f0 0f 00 00 10 	or     BYTE PTR [ebx+0xff0],0x10
1000a269:	8d ab e0 08 00 00    	lea    ebp,[ebx+0x8e0]
1000a26f:	8b 93 e8 0f 00 00    	mov    edx,DWORD PTR [ebx+0xfe8]
1000a275:	89 d1                	mov    ecx,edx
1000a277:	c1 e1 04             	shl    ecx,0x4
1000a27a:	01 e9                	add    ecx,ebp
1000a27c:	83 39 00             	cmp    DWORD PTR [ecx],0x0
1000a27f:	75 09                	jne    1000a28a <spng_encode_image+0x2cc>
1000a281:	42                   	inc    edx
1000a282:	89 93 e8 0f 00 00    	mov    DWORD PTR [ebx+0xfe8],edx
1000a288:	eb e5                	jmp    1000a26f <spng_encode_image+0x2b1>
1000a28a:	83 79 04 00          	cmp    DWORD PTR [ecx+0x4],0x0
1000a28e:	74 f1                	je     1000a281 <spng_encode_image+0x2c3>
1000a290:	f6 83 f0 0f 00 00 01 	test   BYTE PTR [ebx+0xff0],0x1
1000a297:	74 0d                	je     1000a2a6 <spng_encode_image+0x2e8>
1000a299:	8b 14 95 b8 d7 00 10 	mov    edx,DWORD PTR [edx*4+0x1000d7b8]	1000a29c: R_386_32	.text
1000a2a0:	89 93 e4 0f 00 00    	mov    DWORD PTR [ebx+0xfe4],edx
1000a2a6:	8b 93 b4 09 00 00    	mov    edx,DWORD PTR [ebx+0x9b4]
1000a2ac:	89 93 b8 09 00 00    	mov    DWORD PTR [ebx+0x9b8],edx
1000a2b2:	c7 43 70 05 00 00 00 	mov    DWORD PTR [ebx+0x70],0x5
1000a2b9:	85 ff                	test   edi,edi
1000a2bb:	74 09                	je     1000a2c6 <spng_encode_image+0x308>
1000a2bd:	80 8b f0 0f 00 00 08 	or     BYTE PTR [ebx+0xff0],0x8
1000a2c4:	eb 34                	jmp    1000a2fa <spng_encode_image+0x33c>
1000a2c6:	89 f0                	mov    eax,esi
1000a2c8:	31 d2                	xor    edx,edx
1000a2ca:	f7 74 24 0c          	div    DWORD PTR [esp+0xc]
1000a2ce:	89 c6                	mov    esi,eax
1000a2d0:	8b 93 e4 0f 00 00    	mov    edx,DWORD PTR [ebx+0xfe4]
1000a2d6:	0f af d6             	imul   edx,esi
1000a2d9:	03 54 24 44          	add    edx,DWORD PTR [esp+0x44]
1000a2dd:	89 f1                	mov    ecx,esi
1000a2df:	89 d8                	mov    eax,ebx
1000a2e1:	e8 11 fb ff ff       	call   10009df7 <encode_row>
1000a2e6:	85 c0                	test   eax,eax
1000a2e8:	74 e6                	je     1000a2d0 <spng_encode_image+0x312>
1000a2ea:	83 f8 4b             	cmp    eax,0x4b
1000a2ed:	74 09                	je     1000a2f8 <spng_encode_image+0x33a>
1000a2ef:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000a2f6:	eb 02                	jmp    1000a2fa <spng_encode_image+0x33c>
1000a2f8:	31 c0                	xor    eax,eax
1000a2fa:	83 c4 2c             	add    esp,0x2c
1000a2fd:	5b                   	pop    ebx
1000a2fe:	5e                   	pop    esi
1000a2ff:	5f                   	pop    edi
1000a300:	5d                   	pop    ebp
1000a301:	c3                   	ret    

1000a302 <spng_ctx_new2>:
1000a302:	57                   	push   edi
1000a303:	56                   	push   esi
1000a304:	53                   	push   ebx
1000a305:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a309:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000a30d:	85 f6                	test   esi,esi
1000a30f:	75 07                	jne    1000a318 <spng_ctx_new2+0x16>
1000a311:	31 c0                	xor    eax,eax
1000a313:	e9 b7 00 00 00       	jmp    1000a3cf <spng_ctx_new2+0xcd>
1000a318:	89 c3                	mov    ebx,eax
1000a31a:	83 e3 03             	and    ebx,0x3
1000a31d:	39 c3                	cmp    ebx,eax
1000a31f:	75 f0                	jne    1000a311 <spng_ctx_new2+0xf>
1000a321:	83 3e 00             	cmp    DWORD PTR [esi],0x0
1000a324:	74 eb                	je     1000a311 <spng_ctx_new2+0xf>
1000a326:	83 7e 04 00          	cmp    DWORD PTR [esi+0x4],0x0
1000a32a:	74 e5                	je     1000a311 <spng_ctx_new2+0xf>
1000a32c:	8b 46 08             	mov    eax,DWORD PTR [esi+0x8]
1000a32f:	85 c0                	test   eax,eax
1000a331:	74 de                	je     1000a311 <spng_ctx_new2+0xf>
1000a333:	83 7e 0c 00          	cmp    DWORD PTR [esi+0xc],0x0
1000a337:	74 d8                	je     1000a311 <spng_ctx_new2+0xf>
1000a339:	52                   	push   edx
1000a33a:	52                   	push   edx
1000a33b:	68 f8 0f 00 00       	push   0xff8
1000a340:	6a 01                	push   0x1
1000a342:	ff d0                	call   eax
1000a344:	83 c4 10             	add    esp,0x10
1000a347:	85 c0                	test   eax,eax
1000a349:	74 c6                	je     1000a311 <spng_ctx_new2+0xf>
1000a34b:	8d 78 58             	lea    edi,[eax+0x58]
1000a34e:	b9 04 00 00 00       	mov    ecx,0x4
1000a353:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a355:	c7 80 d4 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xd4],0x7fffffff
1000a35f:	c7 80 d8 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xd8],0x7fffffff
1000a369:	c7 80 dc 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xdc],0x7fffffff
1000a373:	c7 80 e0 00 00 00 ff ff ff ff 	mov    DWORD PTR [eax+0xe0],0xffffffff
1000a37d:	c7 40 70 01 00 00 00 	mov    DWORD PTR [eax+0x70],0x1
1000a384:	c7 80 e8 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xe8],0x0
1000a38e:	c7 80 ec 00 00 00 01 00 00 00 	mov    DWORD PTR [eax+0xec],0x1
1000a398:	8d 78 78             	lea    edi,[eax+0x78]
1000a39b:	be 14 d7 00 10       	mov    esi,0x1000d714	1000a39c: R_386_32	.text
1000a3a0:	b9 05 00 00 00       	mov    ecx,0x5
1000a3a5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a3a7:	8d b8 8c 00 00 00    	lea    edi,[eax+0x8c]
1000a3ad:	be 00 d7 00 10       	mov    esi,0x1000d700	1000a3ae: R_386_32	.text
1000a3b2:	b9 05 00 00 00       	mov    ecx,0x5
1000a3b7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a3b9:	c7 80 f4 0f 00 00 f8 00 00 00 	mov    DWORD PTR [eax+0xff4],0xf8
1000a3c3:	89 58 68             	mov    DWORD PTR [eax+0x68],ebx
1000a3c6:	80 e3 02             	and    bl,0x2
1000a3c9:	74 04                	je     1000a3cf <spng_ctx_new2+0xcd>
1000a3cb:	80 48 74 08          	or     BYTE PTR [eax+0x74],0x8
1000a3cf:	5b                   	pop    ebx
1000a3d0:	5e                   	pop    esi
1000a3d1:	5f                   	pop    edi
1000a3d2:	c3                   	ret    

1000a3d3 <spng_ctx_new>:
1000a3d3:	57                   	push   edi
1000a3d4:	56                   	push   esi
1000a3d5:	83 ec 14             	sub    esp,0x14
1000a3d8:	89 e7                	mov    edi,esp
1000a3da:	be 24 d5 00 10       	mov    esi,0x1000d524	1000a3db: R_386_32	.text
1000a3df:	b9 04 00 00 00       	mov    ecx,0x4
1000a3e4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a3e6:	50                   	push   eax
1000a3e7:	50                   	push   eax
1000a3e8:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000a3ec:	8d 44 24 0c          	lea    eax,[esp+0xc]
1000a3f0:	50                   	push   eax
1000a3f1:	e8 fc ff ff ff       	call   1000a3f2 <spng_ctx_new+0x1f>	1000a3f2: R_386_PC32	spng_ctx_new2
1000a3f6:	83 c4 24             	add    esp,0x24
1000a3f9:	5e                   	pop    esi
1000a3fa:	5f                   	pop    edi
1000a3fb:	c3                   	ret    

1000a3fc <spng_ctx_free>:
1000a3fc:	57                   	push   edi
1000a3fd:	56                   	push   esi
1000a3fe:	53                   	push   ebx
1000a3ff:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a403:	85 db                	test   ebx,ebx
1000a405:	0f 84 98 01 00 00    	je     1000a5a3 <spng_ctx_free+0x1a7>
1000a40b:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
1000a40f:	74 0f                	je     1000a420 <spng_ctx_free+0x24>
1000a411:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000a414:	85 d2                	test   edx,edx
1000a416:	74 08                	je     1000a420 <spng_ctx_free+0x24>
1000a418:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a41b:	e8 10 af ff ff       	call   10005330 <spng__free.isra.3>
1000a420:	80 bb a9 00 00 00 00 	cmp    BYTE PTR [ebx+0xa9],0x0
1000a427:	78 0e                	js     1000a437 <spng_ctx_free+0x3b>
1000a429:	8b 93 d4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d4]
1000a42f:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a432:	e8 f9 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a437:	f6 83 a8 00 00 00 08 	test   BYTE PTR [ebx+0xa8],0x8
1000a43e:	75 0e                	jne    1000a44e <spng_ctx_free+0x52>
1000a440:	8b 93 78 05 00 00    	mov    edx,DWORD PTR [ebx+0x578]
1000a446:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a449:	e8 e2 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a44e:	83 bb b8 08 00 00 00 	cmp    DWORD PTR [ebx+0x8b8],0x0
1000a455:	74 30                	je     1000a487 <spng_ctx_free+0x8b>
1000a457:	f6 83 a9 00 00 00 10 	test   BYTE PTR [ebx+0xa9],0x10
1000a45e:	75 27                	jne    1000a487 <spng_ctx_free+0x8b>
1000a460:	31 f6                	xor    esi,esi
1000a462:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
1000a468:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a46b:	39 b3 b4 08 00 00    	cmp    DWORD PTR [ebx+0x8b4],esi
1000a471:	76 0f                	jbe    1000a482 <spng_ctx_free+0x86>
1000a473:	6b ce 5c             	imul   ecx,esi,0x5c
1000a476:	8b 54 0a 58          	mov    edx,DWORD PTR [edx+ecx*1+0x58]
1000a47a:	e8 b1 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a47f:	46                   	inc    esi
1000a480:	eb e0                	jmp    1000a462 <spng_ctx_free+0x66>
1000a482:	e8 a9 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a487:	31 ff                	xor    edi,edi
1000a489:	83 bb 8c 05 00 00 00 	cmp    DWORD PTR [ebx+0x58c],0x0
1000a490:	74 45                	je     1000a4d7 <spng_ctx_free+0xdb>
1000a492:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
1000a498:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a49b:	39 bb 88 05 00 00    	cmp    DWORD PTR [ebx+0x588],edi
1000a4a1:	76 2f                	jbe    1000a4d2 <spng_ctx_free+0xd6>
1000a4a3:	80 bb a8 00 00 00 00 	cmp    BYTE PTR [ebx+0xa8],0x0
1000a4aa:	78 26                	js     1000a4d2 <spng_ctx_free+0xd6>
1000a4ac:	6b f7 70             	imul   esi,edi,0x70
1000a4af:	8b 54 32 04          	mov    edx,DWORD PTR [edx+esi*1+0x4]
1000a4b3:	e8 78 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a4b8:	03 b3 8c 05 00 00    	add    esi,DWORD PTR [ebx+0x58c]
1000a4be:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
1000a4c2:	74 0b                	je     1000a4cf <spng_ctx_free+0xd3>
1000a4c4:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
1000a4c7:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a4ca:	e8 61 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a4cf:	47                   	inc    edi
1000a4d0:	eb c0                	jmp    1000a492 <spng_ctx_free+0x96>
1000a4d2:	e8 59 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a4d7:	83 bb dc 08 00 00 00 	cmp    DWORD PTR [ebx+0x8dc],0x0
1000a4de:	74 32                	je     1000a512 <spng_ctx_free+0x116>
1000a4e0:	f6 83 aa 00 00 00 01 	test   BYTE PTR [ebx+0xaa],0x1
1000a4e7:	75 29                	jne    1000a512 <spng_ctx_free+0x116>
1000a4e9:	31 f6                	xor    esi,esi
1000a4eb:	8b 93 dc 08 00 00    	mov    edx,DWORD PTR [ebx+0x8dc]
1000a4f1:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a4f4:	39 b3 d8 08 00 00    	cmp    DWORD PTR [ebx+0x8d8],esi
1000a4fa:	76 11                	jbe    1000a50d <spng_ctx_free+0x111>
1000a4fc:	89 f1                	mov    ecx,esi
1000a4fe:	c1 e1 04             	shl    ecx,0x4
1000a501:	8b 54 0a 08          	mov    edx,DWORD PTR [edx+ecx*1+0x8]
1000a505:	e8 26 ae ff ff       	call   10005330 <spng__free.isra.3>
1000a50a:	46                   	inc    esi
1000a50b:	eb de                	jmp    1000a4eb <spng_ctx_free+0xef>
1000a50d:	e8 1e ae ff ff       	call   10005330 <spng__free.isra.3>
1000a512:	8d 83 50 09 00 00    	lea    eax,[ebx+0x950]
1000a518:	f6 43 74 04          	test   BYTE PTR [ebx+0x74],0x4
1000a51c:	74 0b                	je     1000a529 <spng_ctx_free+0x12d>
1000a51e:	83 ec 0c             	sub    esp,0xc
1000a521:	50                   	push   eax
1000a522:	e8 fc ff ff ff       	call   1000a523 <spng_ctx_free+0x127>	1000a523: R_386_PC32	deflateEnd
1000a527:	eb 09                	jmp    1000a532 <spng_ctx_free+0x136>
1000a529:	83 ec 0c             	sub    esp,0xc
1000a52c:	50                   	push   eax
1000a52d:	e8 fc ff ff ff       	call   1000a52e <spng_ctx_free+0x132>	1000a52e: R_386_PC32	inflateEnd
1000a532:	83 c4 10             	add    esp,0x10
1000a535:	83 7b 2c 00          	cmp    DWORD PTR [ebx+0x2c],0x0
1000a539:	75 0b                	jne    1000a546 <spng_ctx_free+0x14a>
1000a53b:	8b 53 30             	mov    edx,DWORD PTR [ebx+0x30]
1000a53e:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a541:	e8 ea ad ff ff       	call   10005330 <spng__free.isra.3>
1000a546:	8b 93 c8 09 00 00    	mov    edx,DWORD PTR [ebx+0x9c8]
1000a54c:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a54f:	e8 dc ad ff ff       	call   10005330 <spng__free.isra.3>
1000a554:	8b 93 90 09 00 00    	mov    edx,DWORD PTR [ebx+0x990]
1000a55a:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a55d:	e8 ce ad ff ff       	call   10005330 <spng__free.isra.3>
1000a562:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000a568:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a56b:	e8 c0 ad ff ff       	call   10005330 <spng__free.isra.3>
1000a570:	8b 93 8c 09 00 00    	mov    edx,DWORD PTR [ebx+0x98c]
1000a576:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a579:	e8 b2 ad ff ff       	call   10005330 <spng__free.isra.3>
1000a57e:	8b 93 94 09 00 00    	mov    edx,DWORD PTR [ebx+0x994]
1000a584:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a587:	e8 a4 ad ff ff       	call   10005330 <spng__free.isra.3>
1000a58c:	8b 53 64             	mov    edx,DWORD PTR [ebx+0x64]
1000a58f:	b9 fe 03 00 00       	mov    ecx,0x3fe
1000a594:	31 c0                	xor    eax,eax
1000a596:	89 df                	mov    edi,ebx
1000a598:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000a59a:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
1000a59e:	5b                   	pop    ebx
1000a59f:	5e                   	pop    esi
1000a5a0:	5f                   	pop    edi
1000a5a1:	ff e2                	jmp    edx
1000a5a3:	5b                   	pop    ebx
1000a5a4:	5e                   	pop    esi
1000a5a5:	5f                   	pop    edi
1000a5a6:	c3                   	ret    

1000a5a7 <spng_set_png_buffer>:
1000a5a7:	53                   	push   ebx
1000a5a8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a5ac:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a5b0:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a5b4:	85 d2                	test   edx,edx
1000a5b6:	74 42                	je     1000a5fa <spng_set_png_buffer+0x53>
1000a5b8:	85 c9                	test   ecx,ecx
1000a5ba:	74 3e                	je     1000a5fa <spng_set_png_buffer+0x53>
1000a5bc:	b8 46 00 00 00       	mov    eax,0x46
1000a5c1:	83 7a 70 00          	cmp    DWORD PTR [edx+0x70],0x0
1000a5c5:	74 38                	je     1000a5ff <spng_set_png_buffer+0x58>
1000a5c7:	b8 51 00 00 00       	mov    eax,0x51
1000a5cc:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a5d0:	75 2d                	jne    1000a5ff <spng_set_png_buffer+0x58>
1000a5d2:	b8 45 00 00 00       	mov    eax,0x45
1000a5d7:	83 7a 10 00          	cmp    DWORD PTR [edx+0x10],0x0
1000a5db:	75 22                	jne    1000a5ff <spng_set_png_buffer+0x58>
1000a5dd:	89 4a 10             	mov    DWORD PTR [edx+0x10],ecx
1000a5e0:	89 4a 20             	mov    DWORD PTR [edx+0x20],ecx
1000a5e3:	89 1a                	mov    DWORD PTR [edx],ebx
1000a5e5:	89 5a 24             	mov    DWORD PTR [edx+0x24],ebx
1000a5e8:	c7 42 14 00 4d 00 10 	mov    DWORD PTR [edx+0x14],0x10004d00	1000a5eb: R_386_32	.text
1000a5ef:	c7 42 70 02 00 00 00 	mov    DWORD PTR [edx+0x70],0x2
1000a5f6:	31 c0                	xor    eax,eax
1000a5f8:	eb 05                	jmp    1000a5ff <spng_set_png_buffer+0x58>
1000a5fa:	b8 01 00 00 00       	mov    eax,0x1
1000a5ff:	5b                   	pop    ebx
1000a600:	c3                   	ret    

1000a601 <spng_set_png_stream>:
1000a601:	56                   	push   esi
1000a602:	53                   	push   ebx
1000a603:	51                   	push   ecx
1000a604:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a608:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000a60c:	85 db                	test   ebx,ebx
1000a60e:	74 6c                	je     1000a67c <spng_set_png_stream+0x7b>
1000a610:	85 f6                	test   esi,esi
1000a612:	74 68                	je     1000a67c <spng_set_png_stream+0x7b>
1000a614:	8b 43 70             	mov    eax,DWORD PTR [ebx+0x70]
1000a617:	ba 46 00 00 00       	mov    edx,0x46
1000a61c:	85 c0                	test   eax,eax
1000a61e:	74 61                	je     1000a681 <spng_set_png_stream+0x80>
1000a620:	ba 45 00 00 00       	mov    edx,0x45
1000a625:	83 f8 01             	cmp    eax,0x1
1000a628:	77 57                	ja     1000a681 <spng_set_png_stream+0x80>
1000a62a:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000a62e:	74 11                	je     1000a641 <spng_set_png_stream+0x40>
1000a630:	83 7b 30 00          	cmp    DWORD PTR [ebx+0x30],0x0
1000a634:	75 4b                	jne    1000a681 <spng_set_png_stream+0x80>
1000a636:	89 73 18             	mov    DWORD PTR [ebx+0x18],esi
1000a639:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000a63c:	89 43 34             	mov    DWORD PTR [ebx+0x34],eax
1000a63f:	eb 25                	jmp    1000a666 <spng_set_png_stream+0x65>
1000a641:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a644:	ba 00 20 00 00       	mov    edx,0x2000
1000a649:	e8 bb ac ff ff       	call   10005309 <spng__malloc.isra.0>
1000a64e:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000a651:	ba 02 00 00 00       	mov    edx,0x2
1000a656:	85 c0                	test   eax,eax
1000a658:	74 27                	je     1000a681 <spng_set_png_stream+0x80>
1000a65a:	89 73 14             	mov    DWORD PTR [ebx+0x14],esi
1000a65d:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000a660:	c7 03 00 20 00 00    	mov    DWORD PTR [ebx],0x2000
1000a666:	c7 43 70 02 00 00 00 	mov    DWORD PTR [ebx+0x70],0x2
1000a66d:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000a671:	89 43 1c             	mov    DWORD PTR [ebx+0x1c],eax
1000a674:	80 4b 74 01          	or     BYTE PTR [ebx+0x74],0x1
1000a678:	31 d2                	xor    edx,edx
1000a67a:	eb 05                	jmp    1000a681 <spng_set_png_stream+0x80>
1000a67c:	ba 01 00 00 00       	mov    edx,0x1
1000a681:	89 d0                	mov    eax,edx
1000a683:	5a                   	pop    edx
1000a684:	5b                   	pop    ebx
1000a685:	5e                   	pop    esi
1000a686:	c3                   	ret    

1000a687 <spng_set_png_file>:
1000a687:	83 ec 0c             	sub    esp,0xc
1000a68a:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000a68e:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000a692:	b8 01 00 00 00       	mov    eax,0x1
1000a697:	85 c9                	test   ecx,ecx
1000a699:	74 1f                	je     1000a6ba <spng_set_png_file+0x33>
1000a69b:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a69f:	74 09                	je     1000a6aa <spng_set_png_file+0x23>
1000a6a1:	50                   	push   eax
1000a6a2:	51                   	push   ecx
1000a6a3:	68 e4 52 00 10       	push   0x100052e4	1000a6a4: R_386_32	.text
1000a6a8:	eb 07                	jmp    1000a6b1 <spng_set_png_file+0x2a>
1000a6aa:	50                   	push   eax
1000a6ab:	51                   	push   ecx
1000a6ac:	68 18 5b 00 10       	push   0x10005b18	1000a6ad: R_386_32	.text
1000a6b1:	52                   	push   edx
1000a6b2:	e8 fc ff ff ff       	call   1000a6b3 <spng_set_png_file+0x2c>	1000a6b3: R_386_PC32	spng_set_png_stream
1000a6b7:	83 c4 10             	add    esp,0x10
1000a6ba:	83 c4 0c             	add    esp,0xc
1000a6bd:	c3                   	ret    

1000a6be <spng_get_png_buffer>:
1000a6be:	53                   	push   ebx
1000a6bf:	83 ec 10             	sub    esp,0x10
1000a6c2:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000a6c6:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000a6ca:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000a6ce:	85 c0                	test   eax,eax
1000a6d0:	74 04                	je     1000a6d6 <spng_get_png_buffer+0x18>
1000a6d2:	85 db                	test   ebx,ebx
1000a6d4:	75 0e                	jne    1000a6e4 <spng_get_png_buffer+0x26>
1000a6d6:	31 c0                	xor    eax,eax
1000a6d8:	85 d2                	test   edx,edx
1000a6da:	74 5e                	je     1000a73a <spng_get_png_buffer+0x7c>
1000a6dc:	c7 02 01 00 00 00    	mov    DWORD PTR [edx],0x1
1000a6e2:	eb 56                	jmp    1000a73a <spng_get_png_buffer+0x7c>
1000a6e4:	85 d2                	test   edx,edx
1000a6e6:	75 04                	jne    1000a6ec <spng_get_png_buffer+0x2e>
1000a6e8:	8d 54 24 0c          	lea    edx,[esp+0xc]
1000a6ec:	f6 40 74 08          	test   BYTE PTR [eax+0x74],0x8
1000a6f0:	75 08                	jne    1000a6fa <spng_get_png_buffer+0x3c>
1000a6f2:	c7 02 51 00 00 00    	mov    DWORD PTR [edx],0x51
1000a6f8:	eb 0d                	jmp    1000a707 <spng_get_png_buffer+0x49>
1000a6fa:	8b 48 70             	mov    ecx,DWORD PTR [eax+0x70]
1000a6fd:	85 c9                	test   ecx,ecx
1000a6ff:	75 0a                	jne    1000a70b <spng_get_png_buffer+0x4d>
1000a701:	c7 02 46 00 00 00    	mov    DWORD PTR [edx],0x46
1000a707:	31 c0                	xor    eax,eax
1000a709:	eb 2f                	jmp    1000a73a <spng_get_png_buffer+0x7c>
1000a70b:	83 f9 09             	cmp    ecx,0x9
1000a70e:	74 15                	je     1000a725 <spng_get_png_buffer+0x67>
1000a710:	83 f9 04             	cmp    ecx,0x4
1000a713:	76 08                	jbe    1000a71d <spng_get_png_buffer+0x5f>
1000a715:	c7 02 55 00 00 00    	mov    DWORD PTR [edx],0x55
1000a71b:	eb ea                	jmp    1000a707 <spng_get_png_buffer+0x49>
1000a71d:	c7 02 54 00 00 00    	mov    DWORD PTR [edx],0x54
1000a723:	eb e2                	jmp    1000a707 <spng_get_png_buffer+0x49>
1000a725:	c7 02 00 00 00 00    	mov    DWORD PTR [edx],0x0
1000a72b:	c7 40 2c 01 00 00 00 	mov    DWORD PTR [eax+0x2c],0x1
1000a732:	8b 50 3c             	mov    edx,DWORD PTR [eax+0x3c]
1000a735:	89 13                	mov    DWORD PTR [ebx],edx
1000a737:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
1000a73a:	83 c4 10             	add    esp,0x10
1000a73d:	5b                   	pop    ebx
1000a73e:	c3                   	ret    

1000a73f <spng_set_image_limits>:
1000a73f:	53                   	push   ebx
1000a740:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a744:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
1000a748:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000a74c:	b8 01 00 00 00       	mov    eax,0x1
1000a751:	85 d2                	test   edx,edx
1000a753:	74 16                	je     1000a76b <spng_set_image_limits+0x2c>
1000a755:	85 db                	test   ebx,ebx
1000a757:	78 12                	js     1000a76b <spng_set_image_limits+0x2c>
1000a759:	85 c9                	test   ecx,ecx
1000a75b:	78 0e                	js     1000a76b <spng_set_image_limits+0x2c>
1000a75d:	89 9a d4 00 00 00    	mov    DWORD PTR [edx+0xd4],ebx
1000a763:	89 8a d8 00 00 00    	mov    DWORD PTR [edx+0xd8],ecx
1000a769:	31 c0                	xor    eax,eax
1000a76b:	5b                   	pop    ebx
1000a76c:	c3                   	ret    

1000a76d <spng_get_image_limits>:
1000a76d:	56                   	push   esi
1000a76e:	53                   	push   ebx
1000a76f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a773:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a777:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000a77b:	85 f6                	test   esi,esi
1000a77d:	0f 94 c3             	sete   bl
1000a780:	85 d2                	test   edx,edx
1000a782:	0f 94 c1             	sete   cl
1000a785:	08 cb                	or     bl,cl
1000a787:	75 18                	jne    1000a7a1 <spng_get_image_limits+0x34>
1000a789:	85 c0                	test   eax,eax
1000a78b:	74 14                	je     1000a7a1 <spng_get_image_limits+0x34>
1000a78d:	8b 88 d4 00 00 00    	mov    ecx,DWORD PTR [eax+0xd4]
1000a793:	89 0e                	mov    DWORD PTR [esi],ecx
1000a795:	8b 80 d8 00 00 00    	mov    eax,DWORD PTR [eax+0xd8]
1000a79b:	89 02                	mov    DWORD PTR [edx],eax
1000a79d:	31 c0                	xor    eax,eax
1000a79f:	eb 05                	jmp    1000a7a6 <spng_get_image_limits+0x39>
1000a7a1:	b8 01 00 00 00       	mov    eax,0x1
1000a7a6:	5b                   	pop    ebx
1000a7a7:	5e                   	pop    esi
1000a7a8:	c3                   	ret    

1000a7a9 <spng_set_chunk_limits>:
1000a7a9:	53                   	push   ebx
1000a7aa:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a7ae:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a7b2:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a7b6:	b8 01 00 00 00       	mov    eax,0x1
1000a7bb:	85 d2                	test   edx,edx
1000a7bd:	74 1d                	je     1000a7dc <spng_set_chunk_limits+0x33>
1000a7bf:	85 c9                	test   ecx,ecx
1000a7c1:	78 14                	js     1000a7d7 <spng_set_chunk_limits+0x2e>
1000a7c3:	39 d9                	cmp    ecx,ebx
1000a7c5:	77 10                	ja     1000a7d7 <spng_set_chunk_limits+0x2e>
1000a7c7:	89 8a dc 00 00 00    	mov    DWORD PTR [edx+0xdc],ecx
1000a7cd:	89 9a e0 00 00 00    	mov    DWORD PTR [edx+0xe0],ebx
1000a7d3:	31 c0                	xor    eax,eax
1000a7d5:	eb 05                	jmp    1000a7dc <spng_set_chunk_limits+0x33>
1000a7d7:	b8 01 00 00 00       	mov    eax,0x1
1000a7dc:	5b                   	pop    ebx
1000a7dd:	c3                   	ret    

1000a7de <spng_get_chunk_limits>:
1000a7de:	56                   	push   esi
1000a7df:	53                   	push   ebx
1000a7e0:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a7e4:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a7e8:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000a7ec:	85 f6                	test   esi,esi
1000a7ee:	0f 94 c3             	sete   bl
1000a7f1:	85 d2                	test   edx,edx
1000a7f3:	0f 94 c1             	sete   cl
1000a7f6:	08 cb                	or     bl,cl
1000a7f8:	75 18                	jne    1000a812 <spng_get_chunk_limits+0x34>
1000a7fa:	85 c0                	test   eax,eax
1000a7fc:	74 14                	je     1000a812 <spng_get_chunk_limits+0x34>
1000a7fe:	8b 88 dc 00 00 00    	mov    ecx,DWORD PTR [eax+0xdc]
1000a804:	89 0e                	mov    DWORD PTR [esi],ecx
1000a806:	8b 80 e0 00 00 00    	mov    eax,DWORD PTR [eax+0xe0]
1000a80c:	89 02                	mov    DWORD PTR [edx],eax
1000a80e:	31 c0                	xor    eax,eax
1000a810:	eb 05                	jmp    1000a817 <spng_get_chunk_limits+0x39>
1000a812:	b8 01 00 00 00       	mov    eax,0x1
1000a817:	5b                   	pop    ebx
1000a818:	5e                   	pop    esi
1000a819:	c3                   	ret    

1000a81a <spng_set_crc_action>:
1000a81a:	53                   	push   ebx
1000a81b:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a81f:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a823:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a827:	b8 01 00 00 00       	mov    eax,0x1
1000a82c:	85 d2                	test   edx,edx
1000a82e:	74 34                	je     1000a864 <spng_set_crc_action+0x4a>
1000a830:	b8 51 00 00 00       	mov    eax,0x51
1000a835:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a839:	75 29                	jne    1000a864 <spng_set_crc_action+0x4a>
1000a83b:	b8 01 00 00 00       	mov    eax,0x1
1000a840:	83 f9 02             	cmp    ecx,0x2
1000a843:	77 1f                	ja     1000a864 <spng_set_crc_action+0x4a>
1000a845:	83 f9 01             	cmp    ecx,0x1
1000a848:	74 15                	je     1000a85f <spng_set_crc_action+0x45>
1000a84a:	83 fb 02             	cmp    ebx,0x2
1000a84d:	77 10                	ja     1000a85f <spng_set_crc_action+0x45>
1000a84f:	89 8a e8 00 00 00    	mov    DWORD PTR [edx+0xe8],ecx
1000a855:	89 9a ec 00 00 00    	mov    DWORD PTR [edx+0xec],ebx
1000a85b:	31 c0                	xor    eax,eax
1000a85d:	eb 05                	jmp    1000a864 <spng_set_crc_action+0x4a>
1000a85f:	b8 01 00 00 00       	mov    eax,0x1
1000a864:	5b                   	pop    ebx
1000a865:	c3                   	ret    

1000a866 <spng_set_option>:
1000a866:	53                   	push   ebx
1000a867:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a86b:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000a86f:	b8 01 00 00 00       	mov    eax,0x1
1000a874:	85 d2                	test   edx,edx
1000a876:	74 7f                	je     1000a8f7 <spng_set_option+0x91>
1000a878:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a87c:	8d 58 ff             	lea    ebx,[eax-0x1]
1000a87f:	b8 01 00 00 00       	mov    eax,0x1
1000a884:	83 fb 09             	cmp    ebx,0x9
1000a887:	77 6e                	ja     1000a8f7 <spng_set_option+0x91>
1000a889:	ff 24 9d 34 d5 00 10 	jmp    DWORD PTR [ebx*4+0x1000d534]	1000a88c: R_386_32	.text
1000a890:	85 c9                	test   ecx,ecx
1000a892:	0f 95 c1             	setne  cl
1000a895:	c1 e1 07             	shl    ecx,0x7
1000a898:	8a 42 74             	mov    al,BYTE PTR [edx+0x74]
1000a89b:	83 e0 7f             	and    eax,0x7f
1000a89e:	09 c8                	or     eax,ecx
1000a8a0:	88 42 74             	mov    BYTE PTR [edx+0x74],al
1000a8a3:	eb 03                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8a5:	89 4a 78             	mov    DWORD PTR [edx+0x78],ecx
1000a8a8:	31 c0                	xor    eax,eax
1000a8aa:	eb 4b                	jmp    1000a8f7 <spng_set_option+0x91>
1000a8ac:	89 4a 7c             	mov    DWORD PTR [edx+0x7c],ecx
1000a8af:	eb f7                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8b1:	89 8a 80 00 00 00    	mov    DWORD PTR [edx+0x80],ecx
1000a8b7:	eb ef                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8b9:	89 8a 84 00 00 00    	mov    DWORD PTR [edx+0x84],ecx
1000a8bf:	eb e7                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8c1:	89 8a 8c 00 00 00    	mov    DWORD PTR [edx+0x8c],ecx
1000a8c7:	eb df                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8c9:	89 8a 90 00 00 00    	mov    DWORD PTR [edx+0x90],ecx
1000a8cf:	eb d7                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8d1:	89 8a 94 00 00 00    	mov    DWORD PTR [edx+0x94],ecx
1000a8d7:	eb cf                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8d9:	89 8a 98 00 00 00    	mov    DWORD PTR [edx+0x98],ecx
1000a8df:	eb c7                	jmp    1000a8a8 <spng_set_option+0x42>
1000a8e1:	89 c8                	mov    eax,ecx
1000a8e3:	25 07 ff ff ff       	and    eax,0xffffff07
1000a8e8:	75 08                	jne    1000a8f2 <spng_set_option+0x8c>
1000a8ea:	89 8a f4 0f 00 00    	mov    DWORD PTR [edx+0xff4],ecx
1000a8f0:	eb 05                	jmp    1000a8f7 <spng_set_option+0x91>
1000a8f2:	b8 01 00 00 00       	mov    eax,0x1
1000a8f7:	5b                   	pop    ebx
1000a8f8:	c3                   	ret    

1000a8f9 <spng_get_option>:
1000a8f9:	53                   	push   ebx
1000a8fa:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000a8fe:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000a902:	85 c9                	test   ecx,ecx
1000a904:	74 6d                	je     1000a973 <spng_get_option+0x7a>
1000a906:	85 d2                	test   edx,edx
1000a908:	74 69                	je     1000a973 <spng_get_option+0x7a>
1000a90a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a90e:	8d 58 ff             	lea    ebx,[eax-0x1]
1000a911:	b8 01 00 00 00       	mov    eax,0x1
1000a916:	83 fb 09             	cmp    ebx,0x9
1000a919:	77 5d                	ja     1000a978 <spng_get_option+0x7f>
1000a91b:	ff 24 9d 5c d5 00 10 	jmp    DWORD PTR [ebx*4+0x1000d55c]	1000a91e: R_386_32	.text
1000a922:	8a 41 74             	mov    al,BYTE PTR [ecx+0x74]
1000a925:	c0 e8 07             	shr    al,0x7
1000a928:	0f b6 c0             	movzx  eax,al
1000a92b:	eb 03                	jmp    1000a930 <spng_get_option+0x37>
1000a92d:	8b 41 78             	mov    eax,DWORD PTR [ecx+0x78]
1000a930:	89 02                	mov    DWORD PTR [edx],eax
1000a932:	31 c0                	xor    eax,eax
1000a934:	eb 42                	jmp    1000a978 <spng_get_option+0x7f>
1000a936:	8b 41 7c             	mov    eax,DWORD PTR [ecx+0x7c]
1000a939:	eb f5                	jmp    1000a930 <spng_get_option+0x37>
1000a93b:	8b 81 80 00 00 00    	mov    eax,DWORD PTR [ecx+0x80]
1000a941:	eb ed                	jmp    1000a930 <spng_get_option+0x37>
1000a943:	8b 81 84 00 00 00    	mov    eax,DWORD PTR [ecx+0x84]
1000a949:	eb e5                	jmp    1000a930 <spng_get_option+0x37>
1000a94b:	8b 81 8c 00 00 00    	mov    eax,DWORD PTR [ecx+0x8c]
1000a951:	eb dd                	jmp    1000a930 <spng_get_option+0x37>
1000a953:	8b 81 90 00 00 00    	mov    eax,DWORD PTR [ecx+0x90]
1000a959:	eb d5                	jmp    1000a930 <spng_get_option+0x37>
1000a95b:	8b 81 94 00 00 00    	mov    eax,DWORD PTR [ecx+0x94]
1000a961:	eb cd                	jmp    1000a930 <spng_get_option+0x37>
1000a963:	8b 81 98 00 00 00    	mov    eax,DWORD PTR [ecx+0x98]
1000a969:	eb c5                	jmp    1000a930 <spng_get_option+0x37>
1000a96b:	8b 81 f4 0f 00 00    	mov    eax,DWORD PTR [ecx+0xff4]
1000a971:	eb bd                	jmp    1000a930 <spng_get_option+0x37>
1000a973:	b8 01 00 00 00       	mov    eax,0x1
1000a978:	5b                   	pop    ebx
1000a979:	c3                   	ret    

1000a97a <spng_decoded_image_size>:
1000a97a:	57                   	push   edi
1000a97b:	56                   	push   esi
1000a97c:	53                   	push   ebx
1000a97d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a981:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000a985:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000a989:	85 db                	test   ebx,ebx
1000a98b:	74 22                	je     1000a9af <spng_decoded_image_size+0x35>
1000a98d:	85 f6                	test   esi,esi
1000a98f:	74 1e                	je     1000a9af <spng_decoded_image_size+0x35>
1000a991:	ba 01 00 00 00       	mov    edx,0x1
1000a996:	89 d8                	mov    eax,ebx
1000a998:	e8 ac b7 ff ff       	call   10006149 <read_chunks>
1000a99d:	85 c0                	test   eax,eax
1000a99f:	75 13                	jne    1000a9b4 <spng_decoded_image_size+0x3a>
1000a9a1:	89 f1                	mov    ecx,esi
1000a9a3:	89 fa                	mov    edx,edi
1000a9a5:	89 d8                	mov    eax,ebx
1000a9a7:	5b                   	pop    ebx
1000a9a8:	5e                   	pop    esi
1000a9a9:	5f                   	pop    edi
1000a9aa:	e9 6b a0 ff ff       	jmp    10004a1a <calculate_image_size>
1000a9af:	b8 01 00 00 00       	mov    eax,0x1
1000a9b4:	5b                   	pop    ebx
1000a9b5:	5e                   	pop    esi
1000a9b6:	5f                   	pop    edi
1000a9b7:	c3                   	ret    

1000a9b8 <spng_decode_image>:
1000a9b8:	55                   	push   ebp
1000a9b9:	57                   	push   edi
1000a9ba:	56                   	push   esi
1000a9bb:	53                   	push   ebx
1000a9bc:	83 ec 6c             	sub    esp,0x6c
1000a9bf:	8b 9c 24 80 00 00 00 	mov    ebx,DWORD PTR [esp+0x80]
1000a9c6:	85 db                	test   ebx,ebx
1000a9c8:	75 0a                	jne    1000a9d4 <spng_decode_image+0x1c>
1000a9ca:	bf 01 00 00 00       	mov    edi,0x1
1000a9cf:	e9 7d 0a 00 00       	jmp    1000b451 <spng_decode_image+0xa99>
1000a9d4:	bf 51 00 00 00       	mov    edi,0x51
1000a9d9:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000a9dd:	0f 85 6e 0a 00 00    	jne    1000b451 <spng_decode_image+0xa99>
1000a9e3:	bf 4b 00 00 00       	mov    edi,0x4b
1000a9e8:	83 7b 70 05          	cmp    DWORD PTR [ebx+0x70],0x5
1000a9ec:	0f 87 5f 0a 00 00    	ja     1000b451 <spng_decode_image+0xa99>
1000a9f2:	51                   	push   ecx
1000a9f3:	8d 83 a8 09 00 00    	lea    eax,[ebx+0x9a8]
1000a9f9:	50                   	push   eax
1000a9fa:	ff b4 24 94 00 00 00 	push   DWORD PTR [esp+0x94]
1000aa01:	53                   	push   ebx
1000aa02:	e8 fc ff ff ff       	call   1000aa03 <spng_decode_image+0x4b>	1000aa03: R_386_PC32	spng_decoded_image_size
1000aa07:	89 c7                	mov    edi,eax
1000aa09:	83 c4 10             	add    esp,0x10
1000aa0c:	85 c0                	test   eax,eax
1000aa0e:	0f 85 e0 09 00 00    	jne    1000b3f4 <spng_decode_image+0xa3c>
1000aa14:	31 d2                	xor    edx,edx
1000aa16:	89 d8                	mov    eax,ebx
1000aa18:	e8 2c b7 ff ff       	call   10006149 <read_chunks>
1000aa1d:	89 c7                	mov    edi,eax
1000aa1f:	85 c0                	test   eax,eax
1000aa21:	0f 85 2a 0a 00 00    	jne    1000b451 <spng_decode_image+0xa99>
1000aa27:	0f ba a4 24 90 00 00 00 08 	bt     DWORD PTR [esp+0x90],0x8
1000aa30:	72 22                	jb     1000aa54 <spng_decode_image+0x9c>
1000aa32:	83 bc 24 84 00 00 00 00 	cmp    DWORD PTR [esp+0x84],0x0
1000aa3a:	74 8e                	je     1000a9ca <spng_decode_image+0x12>
1000aa3c:	bf 42 00 00 00       	mov    edi,0x42
1000aa41:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
1000aa48:	39 83 a8 09 00 00    	cmp    DWORD PTR [ebx+0x9a8],eax
1000aa4e:	0f 87 fd 09 00 00    	ja     1000b451 <spng_decode_image+0xa99>
1000aa54:	8b 83 a8 09 00 00    	mov    eax,DWORD PTR [ebx+0x9a8]
1000aa5a:	31 d2                	xor    edx,edx
1000aa5c:	f7 b3 f4 00 00 00    	div    DWORD PTR [ebx+0xf4]
1000aa62:	89 83 ac 09 00 00    	mov    DWORD PTR [ebx+0x9ac],eax
1000aa68:	89 d8                	mov    eax,ebx
1000aa6a:	e8 6c a7 ff ff       	call   100051db <spng__inflate_init>
1000aa6f:	89 c7                	mov    edi,eax
1000aa71:	85 c0                	test   eax,eax
1000aa73:	0f 85 7b 09 00 00    	jne    1000b3f4 <spng_decode_image+0xa3c>
1000aa79:	c7 83 54 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x954],0x0
1000aa83:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000aa86:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
1000aa8c:	8b 83 bc 09 00 00    	mov    eax,DWORD PTR [ebx+0x9bc]
1000aa92:	05 8e 00 00 00       	add    eax,0x8e
1000aa97:	c1 e0 04             	shl    eax,0x4
1000aa9a:	8b 74 03 0c          	mov    esi,DWORD PTR [ebx+eax*1+0xc]
1000aa9e:	83 c6 20             	add    esi,0x20
1000aaa1:	bf 03 00 00 00       	mov    edi,0x3
1000aaa6:	83 fe 1f             	cmp    esi,0x1f
1000aaa9:	0f 86 a2 09 00 00    	jbe    1000b451 <spng_decode_image+0xa99>
1000aaaf:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000aab2:	89 f2                	mov    edx,esi
1000aab4:	e8 50 a8 ff ff       	call   10005309 <spng__malloc.isra.0>
1000aab9:	89 83 88 09 00 00    	mov    DWORD PTR [ebx+0x988],eax
1000aabf:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000aac2:	89 f2                	mov    edx,esi
1000aac4:	e8 40 a8 ff ff       	call   10005309 <spng__malloc.isra.0>
1000aac9:	89 83 8c 09 00 00    	mov    DWORD PTR [ebx+0x98c],eax
1000aacf:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000aad5:	89 93 98 09 00 00    	mov    DWORD PTR [ebx+0x998],edx
1000aadb:	89 83 9c 09 00 00    	mov    DWORD PTR [ebx+0x99c],eax
1000aae1:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
1000aae8:	89 43 6c             	mov    DWORD PTR [ebx+0x6c],eax
1000aaeb:	80 bb f9 00 00 00 03 	cmp    BYTE PTR [ebx+0xf9],0x3
1000aaf2:	0f 94 44 24 30       	sete   BYTE PTR [esp+0x30]
1000aaf7:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
1000aafd:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
1000ab01:	83 e6 01             	and    esi,0x1
1000ab04:	c1 e6 03             	shl    esi,0x3
1000ab07:	74 02                	je     1000ab0b <spng_decode_image+0x153>
1000ab09:	b1 08                	mov    cl,0x8
1000ab0b:	0f b6 c1             	movzx  eax,cl
1000ab0e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000ab12:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
1000ab17:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
1000ab1e:	74 34                	je     1000ab54 <spng_decode_image+0x19c>
1000ab20:	8b 93 ac 09 00 00    	mov    edx,DWORD PTR [ebx+0x9ac]
1000ab26:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000ab29:	e8 db a7 ff ff       	call   10005309 <spng__malloc.isra.0>
1000ab2e:	89 83 90 09 00 00    	mov    DWORD PTR [ebx+0x990],eax
1000ab34:	89 83 a0 09 00 00    	mov    DWORD PTR [ebx+0x9a0],eax
1000ab3a:	c6 44 24 20 01       	mov    BYTE PTR [esp+0x20],0x1
1000ab3f:	85 c0                	test   eax,eax
1000ab41:	75 11                	jne    1000ab54 <spng_decode_image+0x19c>
1000ab43:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000ab4a:	bf 02 00 00 00       	mov    edi,0x2
1000ab4f:	e9 fd 08 00 00       	jmp    1000b451 <spng_decode_image+0xa99>
1000ab54:	83 bb 98 09 00 00 00 	cmp    DWORD PTR [ebx+0x998],0x0
1000ab5b:	74 e6                	je     1000ab43 <spng_decode_image+0x18b>
1000ab5d:	83 bb 9c 09 00 00 00 	cmp    DWORD PTR [ebx+0x99c],0x0
1000ab64:	74 dd                	je     1000ab43 <spng_decode_image+0x18b>
1000ab66:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000ab6a:	83 e2 01             	and    edx,0x1
1000ab6d:	c1 e2 05             	shl    edx,0x5
1000ab70:	83 ce 10             	or     esi,0x10
1000ab73:	09 d6                	or     esi,edx
1000ab75:	89 f1                	mov    ecx,esi
1000ab77:	89 f0                	mov    eax,esi
1000ab79:	c0 e8 03             	shr    al,0x3
1000ab7c:	83 f0 01             	xor    eax,0x1
1000ab7f:	83 e0 01             	and    eax,0x1
1000ab82:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000ab86:	31 c0                	xor    eax,eax
1000ab88:	83 bc 24 8c 00 00 00 02 	cmp    DWORD PTR [esp+0x8c],0x2
1000ab90:	0f 94 c0             	sete   al
1000ab93:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
1000ab9a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000ab9e:	f6 84 24 90 00 00 00 01 	test   BYTE PTR [esp+0x90],0x1
1000aba6:	74 0e                	je     1000abb6 <spng_decode_image+0x1fe>
1000aba8:	c6 44 24 0c 01       	mov    BYTE PTR [esp+0xc],0x1
1000abad:	f6 83 ad 00 00 00 04 	test   BYTE PTR [ebx+0xad],0x4
1000abb4:	75 0d                	jne    1000abc3 <spng_decode_image+0x20b>
1000abb6:	83 a4 24 90 00 00 00 fe 	and    DWORD PTR [esp+0x90],0xfffffffe
1000abbe:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000abc3:	8a 83 f9 00 00 00    	mov    al,BYTE PTR [ebx+0xf9]
1000abc9:	88 c2                	mov    dl,al
1000abcb:	83 e2 fd             	and    edx,0xfffffffd
1000abce:	80 fa 04             	cmp    dl,0x4
1000abd1:	75 08                	jne    1000abdb <spng_decode_image+0x223>
1000abd3:	83 a4 24 90 00 00 00 fe 	and    DWORD PTR [esp+0x90],0xfffffffe
1000abdb:	f6 84 24 90 00 00 00 02 	test   BYTE PTR [esp+0x90],0x2
1000abe3:	74 0e                	je     1000abf3 <spng_decode_image+0x23b>
1000abe5:	c6 44 24 18 01       	mov    BYTE PTR [esp+0x18],0x1
1000abea:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000abf1:	75 0d                	jne    1000ac00 <spng_decode_image+0x248>
1000abf3:	83 a4 24 90 00 00 00 fd 	and    DWORD PTR [esp+0x90],0xfffffffd
1000abfb:	c6 44 24 18 00       	mov    BYTE PTR [esp+0x18],0x0
1000ac00:	f6 84 24 90 00 00 00 08 	test   BYTE PTR [esp+0x90],0x8
1000ac08:	74 0e                	je     1000ac18 <spng_decode_image+0x260>
1000ac0a:	c6 44 24 1c 01       	mov    BYTE PTR [esp+0x1c],0x1
1000ac0f:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
1000ac16:	75 0d                	jne    1000ac25 <spng_decode_image+0x26d>
1000ac18:	83 a4 24 90 00 00 00 f7 	and    DWORD PTR [esp+0x90],0xfffffff7
1000ac20:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
1000ac25:	8b bc 24 8c 00 00 00 	mov    edi,DWORD PTR [esp+0x8c]
1000ac2c:	83 e7 03             	and    edi,0x3
1000ac2f:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
1000ac33:	74 1f                	je     1000ac54 <spng_decode_image+0x29c>
1000ac35:	3c 06                	cmp    al,0x6
1000ac37:	0f 85 f5 00 00 00    	jne    1000ad32 <spng_decode_image+0x37a>
1000ac3d:	0f b6 83 f8 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf8]
1000ac44:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000ac48:	0f 94 c0             	sete   al
1000ac4b:	89 c5                	mov    ebp,eax
1000ac4d:	31 ff                	xor    edi,edi
1000ac4f:	e9 eb 00 00 00       	jmp    1000ad3f <spng_decode_image+0x387>
1000ac54:	83 bc 24 8c 00 00 00 04 	cmp    DWORD PTR [esp+0x8c],0x4
1000ac5c:	75 21                	jne    1000ac7f <spng_decode_image+0x2c7>
1000ac5e:	31 ff                	xor    edi,edi
1000ac60:	3c 02                	cmp    al,0x2
1000ac62:	0f 85 a5 00 00 00    	jne    1000ad0d <spng_decode_image+0x355>
1000ac68:	0f b6 83 f8 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf8]
1000ac6f:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000ac73:	0f 94 c0             	sete   al
1000ac76:	89 c5                	mov    ebp,eax
1000ac78:	31 ff                	xor    edi,edi
1000ac7a:	e9 a3 00 00 00       	jmp    1000ad22 <spng_decode_image+0x36a>
1000ac7f:	f7 84 24 8c 00 00 00 00 03 00 00 	test   DWORD PTR [esp+0x8c],0x300
1000ac8a:	0f 85 81 00 00 00    	jne    1000ad11 <spng_decode_image+0x359>
1000ac90:	83 bc 24 8c 00 00 00 40 	cmp    DWORD PTR [esp+0x8c],0x40
1000ac98:	75 28                	jne    1000acc2 <spng_decode_image+0x30a>
1000ac9a:	84 c0                	test   al,al
1000ac9c:	0f 85 90 00 00 00    	jne    1000ad32 <spng_decode_image+0x37a>
1000aca2:	8a 83 f8 00 00 00    	mov    al,BYTE PTR [ebx+0xf8]
1000aca8:	3c 08                	cmp    al,0x8
1000acaa:	0f 87 82 00 00 00    	ja     1000ad32 <spng_decode_image+0x37a>
1000acb0:	0f b6 d0             	movzx  edx,al
1000acb3:	3b 54 24 10          	cmp    edx,DWORD PTR [esp+0x10]
1000acb7:	74 70                	je     1000ad29 <spng_decode_image+0x371>
1000acb9:	3c 08                	cmp    al,0x8
1000acbb:	0f 95 c0             	setne  al
1000acbe:	89 c7                	mov    edi,eax
1000acc0:	eb 4b                	jmp    1000ad0d <spng_decode_image+0x355>
1000acc2:	84 c0                	test   al,al
1000acc4:	75 16                	jne    1000acdc <spng_decode_image+0x324>
1000acc6:	83 bc 24 8c 00 00 00 10 	cmp    DWORD PTR [esp+0x8c],0x10
1000acce:	75 0c                	jne    1000acdc <spng_decode_image+0x324>
1000acd0:	80 bb f8 00 00 00 09 	cmp    BYTE PTR [ebx+0xf8],0x9
1000acd7:	0f 92 c0             	setb   al
1000acda:	eb 2d                	jmp    1000ad09 <spng_decode_image+0x351>
1000acdc:	83 bc 24 8c 00 00 00 20 	cmp    DWORD PTR [esp+0x8c],0x20
1000ace4:	75 4c                	jne    1000ad32 <spng_decode_image+0x37a>
1000ace6:	66 83 bb f8 00 00 00 10 	cmp    WORD PTR [ebx+0xf8],0x10
1000acee:	75 42                	jne    1000ad32 <spng_decode_image+0x37a>
1000acf0:	8a 93 f8 00 00 00    	mov    dl,BYTE PTR [ebx+0xf8]
1000acf6:	3c 04                	cmp    al,0x4
1000acf8:	75 09                	jne    1000ad03 <spng_decode_image+0x34b>
1000acfa:	0f b6 c2             	movzx  eax,dl
1000acfd:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000ad01:	74 35                	je     1000ad38 <spng_decode_image+0x380>
1000ad03:	80 fa 10             	cmp    dl,0x10
1000ad06:	0f 94 c0             	sete   al
1000ad09:	89 c7                	mov    edi,eax
1000ad0b:	eb 27                	jmp    1000ad34 <spng_decode_image+0x37c>
1000ad0d:	31 ed                	xor    ebp,ebp
1000ad0f:	eb 11                	jmp    1000ad22 <spng_decode_image+0x36a>
1000ad11:	31 ff                	xor    edi,edi
1000ad13:	bd 01 00 00 00       	mov    ebp,0x1
1000ad18:	c6 44 24 14 00       	mov    BYTE PTR [esp+0x14],0x0
1000ad1d:	c6 44 24 18 00       	mov    BYTE PTR [esp+0x18],0x0
1000ad22:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000ad27:	eb 16                	jmp    1000ad3f <spng_decode_image+0x387>
1000ad29:	31 ff                	xor    edi,edi
1000ad2b:	bd 01 00 00 00       	mov    ebp,0x1
1000ad30:	eb f0                	jmp    1000ad22 <spng_decode_image+0x36a>
1000ad32:	31 ff                	xor    edi,edi
1000ad34:	31 ed                	xor    ebp,ebp
1000ad36:	eb 07                	jmp    1000ad3f <spng_decode_image+0x387>
1000ad38:	31 ff                	xor    edi,edi
1000ad3a:	bd 01 00 00 00       	mov    ebp,0x1
1000ad3f:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000ad43:	83 e6 01             	and    esi,0x1
1000ad46:	83 e1 fc             	and    ecx,0xfffffffc
1000ad49:	89 ca                	mov    edx,ecx
1000ad4b:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000ad4f:	83 e1 01             	and    ecx,0x1
1000ad52:	01 c9                	add    ecx,ecx
1000ad54:	09 f2                	or     edx,esi
1000ad56:	09 d1                	or     ecx,edx
1000ad58:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000ad5c:	83 e0 01             	and    eax,0x1
1000ad5f:	8d 34 85 00 00 00 00 	lea    esi,[eax*4+0x0]
1000ad66:	89 c8                	mov    eax,ecx
1000ad68:	83 e0 eb             	and    eax,0xffffffeb
1000ad6b:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000ad6f:	83 e2 01             	and    edx,0x1
1000ad72:	c1 e2 04             	shl    edx,0x4
1000ad75:	09 f0                	or     eax,esi
1000ad77:	09 c2                	or     edx,eax
1000ad79:	89 e9                	mov    ecx,ebp
1000ad7b:	83 e1 01             	and    ecx,0x1
1000ad7e:	c1 e1 06             	shl    ecx,0x6
1000ad81:	83 e2 bf             	and    edx,0xffffffbf
1000ad84:	09 ca                	or     edx,ecx
1000ad86:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
1000ad8a:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
1000ad8e:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
1000ad92:	80 e2 02             	and    dl,0x2
1000ad95:	75 38                	jne    1000adcf <spng_decode_image+0x417>
1000ad97:	8a 44 24 08          	mov    al,BYTE PTR [esp+0x8]
1000ad9b:	88 83 d5 0f 00 00    	mov    BYTE PTR [ebx+0xfd5],al
1000ada1:	88 83 d6 0f 00 00    	mov    BYTE PTR [ebx+0xfd6],al
1000ada7:	88 83 d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],al
1000adad:	88 83 d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],al
1000adb3:	88 83 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],al
1000adb9:	8a 83 f8 00 00 00    	mov    al,BYTE PTR [ebx+0xf8]
1000adbf:	f6 44 24 26 04       	test   BYTE PTR [esp+0x26],0x4
1000adc4:	0f 85 51 01 00 00    	jne    1000af1b <spng_decode_image+0x563>
1000adca:	e9 c7 01 00 00       	jmp    1000af96 <spng_decode_image+0x5de>
1000adcf:	8b 83 7c 05 00 00    	mov    eax,DWORD PTR [ebx+0x57c]
1000add5:	31 d2                	xor    edx,edx
1000add7:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000addb:	89 54 24 2c          	mov    DWORD PTR [esp+0x2c],edx
1000addf:	df 6c 24 28          	fild   QWORD PTR [esp+0x28]
1000ade3:	d8 35 08 d8 00 10    	fdiv   DWORD PTR ds:0x1000d808	1000ade5: R_386_32	.text
1000ade9:	f6 84 24 8c 00 00 00 05 	test   BYTE PTR [esp+0x8c],0x5
1000adf1:	74 1b                	je     1000ae0e <spng_decode_image+0x456>
1000adf3:	8d b3 cc 09 00 00    	lea    esi,[ebx+0x9cc]
1000adf9:	89 b3 c4 09 00 00    	mov    DWORD PTR [ebx+0x9c4],esi
1000adff:	b9 00 01 00 00       	mov    ecx,0x100
1000ae04:	d9 05 00 d8 00 10    	fld    DWORD PTR ds:0x1000d800	1000ae06: R_386_32	.text
1000ae0a:	d9 c9                	fxch   st(1)
1000ae0c:	eb 36                	jmp    1000ae44 <spng_decode_image+0x48c>
1000ae0e:	d9 5c 24 28          	fstp   DWORD PTR [esp+0x28]
1000ae12:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000ae15:	ba 00 00 02 00       	mov    edx,0x20000
1000ae1a:	e8 ea a4 ff ff       	call   10005309 <spng__malloc.isra.0>
1000ae1f:	89 c6                	mov    esi,eax
1000ae21:	89 83 c8 09 00 00    	mov    DWORD PTR [ebx+0x9c8],eax
1000ae27:	85 c0                	test   eax,eax
1000ae29:	0f 84 14 fd ff ff    	je     1000ab43 <spng_decode_image+0x18b>
1000ae2f:	89 83 c4 09 00 00    	mov    DWORD PTR [ebx+0x9c4],eax
1000ae35:	b9 00 00 01 00       	mov    ecx,0x10000
1000ae3a:	d9 05 04 d8 00 10    	fld    DWORD PTR ds:0x1000d804	1000ae3c: R_386_32	.text
1000ae40:	d9 44 24 28          	fld    DWORD PTR [esp+0x28]
1000ae44:	d8 0d 0c d8 00 10    	fmul   DWORD PTR ds:0x1000d80c	1000ae46: R_386_32	.text
1000ae4a:	dd e0                	fucom  st(0)
1000ae4c:	df e0                	fnstsw ax
1000ae4e:	9e                   	sahf   
1000ae4f:	7a 40                	jp     1000ae91 <spng_decode_image+0x4d9>
1000ae51:	d9 05 10 d8 00 10    	fld    DWORD PTR ds:0x1000d810	1000ae53: R_386_32	.text
1000ae57:	d9 c9                	fxch   st(1)
1000ae59:	dd e1                	fucom  st(1)
1000ae5b:	df e0                	fnstsw ax
1000ae5d:	dd d9                	fstp   st(1)
1000ae5f:	9e                   	sahf   
1000ae60:	77 2f                	ja     1000ae91 <spng_decode_image+0x4d9>
1000ae62:	d8 15 14 d8 00 10    	fcom   DWORD PTR ds:0x1000d814	1000ae64: R_386_32	.text
1000ae68:	df e0                	fnstsw ax
1000ae6a:	9e                   	sahf   
1000ae6b:	73 24                	jae    1000ae91 <spng_decode_image+0x4d9>
1000ae6d:	d9 ee                	fldz   
1000ae6f:	d9 c9                	fxch   st(1)
1000ae71:	dd e1                	fucom  st(1)
1000ae73:	df e0                	fnstsw ax
1000ae75:	dd d9                	fstp   st(1)
1000ae77:	9e                   	sahf   
1000ae78:	7a 17                	jp     1000ae91 <spng_decode_image+0x4d9>
1000ae7a:	75 15                	jne    1000ae91 <spng_decode_image+0x4d9>
1000ae7c:	dd d8                	fstp   st(0)
1000ae7e:	dd d8                	fstp   st(0)
1000ae80:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000ae87:	bf 26 00 00 00       	mov    edi,0x26
1000ae8c:	e9 c0 05 00 00       	jmp    1000b451 <spng_decode_image+0xa99>
1000ae91:	d9 e8                	fld1   
1000ae93:	de f1                	fdivrp st(1),st
1000ae95:	d9 5c 24 28          	fstp   DWORD PTR [esp+0x28]
1000ae99:	31 d2                	xor    edx,edx
1000ae9b:	89 4c 24 48          	mov    DWORD PTR [esp+0x48],ecx
1000ae9f:	d9 44 24 28          	fld    DWORD PTR [esp+0x28]
1000aea3:	83 ec 10             	sub    esp,0x10
1000aea6:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
1000aeaa:	d9 c0                	fld    st(0)
1000aeac:	d9 5c 24 54          	fstp   DWORD PTR [esp+0x54]
1000aeb0:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000aeb4:	89 54 24 50          	mov    DWORD PTR [esp+0x50],edx
1000aeb8:	da 7c 24 4c          	fidivr DWORD PTR [esp+0x4c]
1000aebc:	dd 1c 24             	fstp   QWORD PTR [esp]
1000aebf:	e8 fc ff ff ff       	call   1000aec0 <spng_decode_image+0x508>	1000aec0: R_386_PC32	pow
1000aec4:	d9 44 24 54          	fld    DWORD PTR [esp+0x54]
1000aec8:	dc c9                	fmul   st(1),st
1000aeca:	d9 c9                	fxch   st(1)
1000aecc:	d9 5c 24 6c          	fstp   DWORD PTR [esp+0x6c]
1000aed0:	d9 44 24 6c          	fld    DWORD PTR [esp+0x6c]
1000aed4:	83 c4 10             	add    esp,0x10
1000aed7:	d8 d1                	fcom   st(1)
1000aed9:	df e0                	fnstsw ax
1000aedb:	9e                   	sahf   
1000aedc:	8b 54 24 40          	mov    edx,DWORD PTR [esp+0x40]
1000aee0:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
1000aee4:	76 04                	jbe    1000aeea <spng_decode_image+0x532>
1000aee6:	dd d8                	fstp   st(0)
1000aee8:	d9 c0                	fld    st(0)
1000aeea:	d9 7c 24 5a          	fnstcw WORD PTR [esp+0x5a]
1000aeee:	66 8b 44 24 5a       	mov    ax,WORD PTR [esp+0x5a]
1000aef3:	80 cc 0c             	or     ah,0xc
1000aef6:	66 89 44 24 58       	mov    WORD PTR [esp+0x58],ax
1000aefb:	d9 6c 24 58          	fldcw  WORD PTR [esp+0x58]
1000aeff:	db 5c 24 54          	fistp  DWORD PTR [esp+0x54]
1000af03:	d9 6c 24 5a          	fldcw  WORD PTR [esp+0x5a]
1000af07:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000af0b:	66 89 04 56          	mov    WORD PTR [esi+edx*2],ax
1000af0f:	42                   	inc    edx
1000af10:	39 d1                	cmp    ecx,edx
1000af12:	75 87                	jne    1000ae9b <spng_decode_image+0x4e3>
1000af14:	dd d8                	fstp   st(0)
1000af16:	e9 7c fe ff ff       	jmp    1000ad97 <spng_decode_image+0x3df>
1000af1b:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000af21:	84 d2                	test   dl,dl
1000af23:	75 0e                	jne    1000af33 <spng_decode_image+0x57b>
1000af25:	8a 93 80 05 00 00    	mov    dl,BYTE PTR [ebx+0x580]
1000af2b:	88 93 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],dl
1000af31:	eb 22                	jmp    1000af55 <spng_decode_image+0x59d>
1000af33:	8d 4a fe             	lea    ecx,[edx-0x2]
1000af36:	80 f9 01             	cmp    cl,0x1
1000af39:	77 22                	ja     1000af5d <spng_decode_image+0x5a5>
1000af3b:	8a 8b 83 05 00 00    	mov    cl,BYTE PTR [ebx+0x583]
1000af41:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
1000af48:	66 89 93 d5 0f 00 00 	mov    WORD PTR [ebx+0xfd5],dx
1000af4f:	88 8b d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],cl
1000af55:	88 83 d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],al
1000af5b:	eb 39                	jmp    1000af96 <spng_decode_image+0x5de>
1000af5d:	8a 8b 84 05 00 00    	mov    cl,BYTE PTR [ebx+0x584]
1000af63:	80 fa 04             	cmp    dl,0x4
1000af66:	75 0e                	jne    1000af76 <spng_decode_image+0x5be>
1000af68:	8a 93 80 05 00 00    	mov    dl,BYTE PTR [ebx+0x580]
1000af6e:	88 93 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],dl
1000af74:	eb 1a                	jmp    1000af90 <spng_decode_image+0x5d8>
1000af76:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
1000af7d:	66 89 93 d5 0f 00 00 	mov    WORD PTR [ebx+0xfd5],dx
1000af84:	8a 93 83 05 00 00    	mov    dl,BYTE PTR [ebx+0x583]
1000af8a:	88 93 d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],dl
1000af90:	88 8b d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],cl
1000af96:	3c 10                	cmp    al,0x10
1000af98:	75 37                	jne    1000afd1 <spng_decode_image+0x619>
1000af9a:	f6 84 24 8c 00 00 00 05 	test   BYTE PTR [esp+0x8c],0x5
1000afa2:	74 2d                	je     1000afd1 <spng_decode_image+0x619>
1000afa4:	80 ab d5 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd5],0x8
1000afab:	80 ab d6 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd6],0x8
1000afb2:	80 ab d7 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd7],0x8
1000afb9:	80 ab d8 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd8],0x8
1000afc0:	80 ab d4 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd4],0x8
1000afc7:	c7 44 24 08 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x8
1000afcf:	eb 1b                	jmp    1000afec <spng_decode_image+0x634>
1000afd1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000afd5:	48                   	dec    eax
1000afd6:	83 f8 0f             	cmp    eax,0xf
1000afd9:	76 11                	jbe    1000afec <spng_decode_image+0x634>
1000afdb:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000afe2:	bf 29 00 00 00       	mov    edi,0x29
1000afe7:	e9 65 04 00 00       	jmp    1000b451 <spng_decode_image+0xa99>
1000afec:	0f b6 83 d4 0f 00 00 	movzx  eax,BYTE PTR [ebx+0xfd4]
1000aff3:	84 c0                	test   al,al
1000aff5:	74 e4                	je     1000afdb <spng_decode_image+0x623>
1000aff7:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000affb:	77 de                	ja     1000afdb <spng_decode_image+0x623>
1000affd:	0f b6 83 d8 0f 00 00 	movzx  eax,BYTE PTR [ebx+0xfd8]
1000b004:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
1000b008:	84 c0                	test   al,al
1000b00a:	74 cf                	je     1000afdb <spng_decode_image+0x623>
1000b00c:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000b010:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000b014:	77 c5                	ja     1000afdb <spng_decode_image+0x623>
1000b016:	8a 8b d5 0f 00 00    	mov    cl,BYTE PTR [ebx+0xfd5]
1000b01c:	84 c9                	test   cl,cl
1000b01e:	74 bb                	je     1000afdb <spng_decode_image+0x623>
1000b020:	0f b6 c1             	movzx  eax,cl
1000b023:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000b027:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000b02b:	77 ae                	ja     1000afdb <spng_decode_image+0x623>
1000b02d:	8a 93 d6 0f 00 00    	mov    dl,BYTE PTR [ebx+0xfd6]
1000b033:	84 d2                	test   dl,dl
1000b035:	74 a4                	je     1000afdb <spng_decode_image+0x623>
1000b037:	0f b6 c2             	movzx  eax,dl
1000b03a:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000b03e:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000b042:	77 97                	ja     1000afdb <spng_decode_image+0x623>
1000b044:	8a 83 d7 0f 00 00    	mov    al,BYTE PTR [ebx+0xfd7]
1000b04a:	84 c0                	test   al,al
1000b04c:	74 8d                	je     1000afdb <spng_decode_image+0x623>
1000b04e:	0f b6 f0             	movzx  esi,al
1000b051:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
1000b055:	3b 74 24 08          	cmp    esi,DWORD PTR [esp+0x8]
1000b059:	77 80                	ja     1000afdb <spng_decode_image+0x623>
1000b05b:	38 d1                	cmp    cl,dl
1000b05d:	0f 94 c1             	sete   cl
1000b060:	38 c2                	cmp    dl,al
1000b062:	0f 94 c2             	sete   dl
1000b065:	21 d1                	and    ecx,edx
1000b067:	38 44 24 26          	cmp    BYTE PTR [esp+0x26],al
1000b06b:	0f 94 c2             	sete   dl
1000b06e:	21 d1                	and    ecx,edx
1000b070:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
1000b074:	39 74 24 28          	cmp    DWORD PTR [esp+0x28],esi
1000b078:	0f 94 c0             	sete   al
1000b07b:	84 c1                	test   cl,al
1000b07d:	74 0b                	je     1000b08a <spng_decode_image+0x6d2>
1000b07f:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
1000b083:	75 05                	jne    1000b08a <spng_decode_image+0x6d2>
1000b085:	c6 44 24 14 00       	mov    BYTE PTR [esp+0x14],0x0
1000b08a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000b08e:	83 e0 01             	and    eax,0x1
1000b091:	c1 e0 04             	shl    eax,0x4
1000b094:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
1000b098:	83 e2 ef             	and    edx,0xffffffef
1000b09b:	09 c2                	or     edx,eax
1000b09d:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
1000b0a1:	80 e2 08             	and    dl,0x8
1000b0a4:	0f 84 52 01 00 00    	je     1000b1fc <spng_decode_image+0x844>
1000b0aa:	31 f6                	xor    esi,esi
1000b0ac:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000b0b0:	83 e0 01             	and    eax,0x1
1000b0b3:	c1 e0 02             	shl    eax,0x2
1000b0b6:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
1000b0ba:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000b0be:	83 e0 01             	and    eax,0x1
1000b0c1:	c1 e0 03             	shl    eax,0x3
1000b0c4:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000b0c8:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000b0cc:	83 e1 01             	and    ecx,0x1
1000b0cf:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000b0d3:	83 e0 fc             	and    eax,0xfffffffc
1000b0d6:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000b0da:	83 e2 01             	and    edx,0x1
1000b0dd:	01 d2                	add    edx,edx
1000b0df:	09 c8                	or     eax,ecx
1000b0e1:	09 d0                	or     eax,edx
1000b0e3:	83 e0 f3             	and    eax,0xfffffff3
1000b0e6:	0b 44 24 4c          	or     eax,DWORD PTR [esp+0x4c]
1000b0ea:	0b 44 24 50          	or     eax,DWORD PTR [esp+0x50]
1000b0ee:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000b0f2:	83 e1 01             	and    ecx,0x1
1000b0f5:	c1 e1 04             	shl    ecx,0x4
1000b0f8:	83 e0 cf             	and    eax,0xffffffcf
1000b0fb:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000b0ff:	83 e2 01             	and    edx,0x1
1000b102:	c1 e2 05             	shl    edx,0x5
1000b105:	09 c8                	or     eax,ecx
1000b107:	09 d0                	or     eax,edx
1000b109:	89 ea                	mov    edx,ebp
1000b10b:	83 e2 01             	and    edx,0x1
1000b10e:	c1 e2 06             	shl    edx,0x6
1000b111:	83 e0 bf             	and    eax,0xffffffbf
1000b114:	09 d0                	or     eax,edx
1000b116:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000b11a:	c6 44 24 10 ff       	mov    BYTE PTR [esp+0x10],0xff
1000b11f:	a8 01                	test   al,0x1
1000b121:	74 13                	je     1000b136 <spng_decode_image+0x77e>
1000b123:	39 b3 a4 07 00 00    	cmp    DWORD PTR [ebx+0x7a4],esi
1000b129:	76 0b                	jbe    1000b136 <spng_decode_image+0x77e>
1000b12b:	8a 84 33 a8 07 00 00 	mov    al,BYTE PTR [ebx+esi*1+0x7a8]
1000b132:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
1000b136:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
1000b13a:	88 84 b3 07 01 00 00 	mov    BYTE PTR [ebx+esi*4+0x107],al
1000b141:	0f b6 84 b3 04 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x104]
1000b149:	83 ec 0c             	sub    esp,0xc
1000b14c:	6a 08                	push   0x8
1000b14e:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000b152:	ba 08 00 00 00       	mov    edx,0x8
1000b157:	e8 4c 9a ff ff       	call   10004ba8 <sample_to_target>
1000b15c:	66 89 44 24 36       	mov    WORD PTR [esp+0x36],ax
1000b161:	0f b6 84 b3 05 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x105]
1000b169:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b170:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
1000b174:	ba 08 00 00 00       	mov    edx,0x8
1000b179:	e8 2a 9a ff ff       	call   10004ba8 <sample_to_target>
1000b17e:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000b183:	0f b6 84 b3 06 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x106]
1000b18b:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b192:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
1000b196:	ba 08 00 00 00       	mov    edx,0x8
1000b19b:	e8 08 9a ff ff       	call   10004ba8 <sample_to_target>
1000b1a0:	66 89 44 24 58       	mov    WORD PTR [esp+0x58],ax
1000b1a5:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
1000b1aa:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b1b1:	8b 4c 24 38          	mov    ecx,DWORD PTR [esp+0x38]
1000b1b5:	ba 08 00 00 00       	mov    edx,0x8
1000b1ba:	e8 e9 99 ff ff       	call   10004ba8 <sample_to_target>
1000b1bf:	83 c4 10             	add    esp,0x10
1000b1c2:	8a 4c 24 26          	mov    cl,BYTE PTR [esp+0x26]
1000b1c6:	88 8c b3 d4 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd4],cl
1000b1cd:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
1000b1d1:	88 8c b3 d5 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd5],cl
1000b1d8:	8a 4c 24 48          	mov    cl,BYTE PTR [esp+0x48]
1000b1dc:	88 8c b3 d6 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd6],cl
1000b1e3:	88 84 b3 d7 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd7],al
1000b1ea:	46                   	inc    esi
1000b1eb:	81 fe 00 01 00 00    	cmp    esi,0x100
1000b1f1:	0f 85 d1 fe ff ff    	jne    1000b0c8 <spng_decode_image+0x710>
1000b1f7:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000b1fc:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000b200:	83 e1 01             	and    ecx,0x1
1000b203:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000b207:	83 e2 fc             	and    edx,0xfffffffc
1000b20a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000b20e:	83 e0 01             	and    eax,0x1
1000b211:	01 c0                	add    eax,eax
1000b213:	09 ca                	or     edx,ecx
1000b215:	09 d0                	or     eax,edx
1000b217:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000b21b:	83 e6 01             	and    esi,0x1
1000b21e:	c1 e6 02             	shl    esi,0x2
1000b221:	83 e0 f3             	and    eax,0xfffffff3
1000b224:	8b 54 24 30          	mov    edx,DWORD PTR [esp+0x30]
1000b228:	83 e2 01             	and    edx,0x1
1000b22b:	c1 e2 03             	shl    edx,0x3
1000b22e:	09 f0                	or     eax,esi
1000b230:	09 d0                	or     eax,edx
1000b232:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000b236:	83 e2 01             	and    edx,0x1
1000b239:	c1 e2 04             	shl    edx,0x4
1000b23c:	83 e0 cf             	and    eax,0xffffffcf
1000b23f:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000b243:	83 e1 01             	and    ecx,0x1
1000b246:	c1 e1 05             	shl    ecx,0x5
1000b249:	09 d0                	or     eax,edx
1000b24b:	09 c8                	or     eax,ecx
1000b24d:	89 ea                	mov    edx,ebp
1000b24f:	83 e2 01             	and    edx,0x1
1000b252:	c1 e2 06             	shl    edx,0x6
1000b255:	83 e0 bf             	and    eax,0xffffffbf
1000b258:	09 d0                	or     eax,edx
1000b25a:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
1000b25e:	a8 01                	test   al,0x1
1000b260:	0f 84 a3 00 00 00    	je     1000b309 <spng_decode_image+0x951>
1000b266:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
1000b26c:	83 ce ff             	or     esi,0xffffffff
1000b26f:	80 f9 0f             	cmp    cl,0xf
1000b272:	77 08                	ja     1000b27c <spng_decode_image+0x8c4>
1000b274:	be 01 00 00 00       	mov    esi,0x1
1000b279:	d3 e6                	shl    esi,cl
1000b27b:	4e                   	dec    esi
1000b27c:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000b282:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000b287:	74 5f                	je     1000b2e8 <spng_decode_image+0x930>
1000b289:	80 fa 02             	cmp    dl,0x2
1000b28c:	75 7b                	jne    1000b309 <spng_decode_image+0x951>
1000b28e:	66 8b 93 9e 07 00 00 	mov    dx,WORD PTR [ebx+0x79e]
1000b295:	66 89 54 24 08       	mov    WORD PTR [esp+0x8],dx
1000b29a:	66 8b ab a0 07 00 00 	mov    bp,WORD PTR [ebx+0x7a0]
1000b2a1:	66 8b 93 a2 07 00 00 	mov    dx,WORD PTR [ebx+0x7a2]
1000b2a8:	80 f9 10             	cmp    cl,0x10
1000b2ab:	75 1b                	jne    1000b2c8 <spng_decode_image+0x910>
1000b2ad:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
1000b2b1:	66 89 b3 cc 0b 00 00 	mov    WORD PTR [ebx+0xbcc],si
1000b2b8:	66 89 ab ce 0b 00 00 	mov    WORD PTR [ebx+0xbce],bp
1000b2bf:	66 89 93 d0 0b 00 00 	mov    WORD PTR [ebx+0xbd0],dx
1000b2c6:	eb 41                	jmp    1000b309 <spng_decode_image+0x951>
1000b2c8:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
1000b2cc:	21 f1                	and    ecx,esi
1000b2ce:	88 8b cc 0b 00 00    	mov    BYTE PTR [ebx+0xbcc],cl
1000b2d4:	89 e9                	mov    ecx,ebp
1000b2d6:	21 f1                	and    ecx,esi
1000b2d8:	88 8b cd 0b 00 00    	mov    BYTE PTR [ebx+0xbcd],cl
1000b2de:	21 f2                	and    edx,esi
1000b2e0:	88 93 ce 0b 00 00    	mov    BYTE PTR [ebx+0xbce],dl
1000b2e6:	eb 21                	jmp    1000b309 <spng_decode_image+0x951>
1000b2e8:	84 d2                	test   dl,dl
1000b2ea:	75 1d                	jne    1000b309 <spng_decode_image+0x951>
1000b2ec:	66 8b 93 9c 07 00 00 	mov    dx,WORD PTR [ebx+0x79c]
1000b2f3:	80 f9 10             	cmp    cl,0x10
1000b2f6:	75 09                	jne    1000b301 <spng_decode_image+0x949>
1000b2f8:	66 89 93 cc 0b 00 00 	mov    WORD PTR [ebx+0xbcc],dx
1000b2ff:	eb 08                	jmp    1000b309 <spng_decode_image+0x951>
1000b301:	21 f2                	and    edx,esi
1000b303:	88 93 cc 0b 00 00    	mov    BYTE PTR [ebx+0xbcc],dl
1000b309:	89 fa                	mov    edx,edi
1000b30b:	83 e2 01             	and    edx,0x1
1000b30e:	c1 e2 08             	shl    edx,0x8
1000b311:	80 e4 fe             	and    ah,0xfe
1000b314:	09 c2                	or     edx,eax
1000b316:	89 93 dc 0f 00 00    	mov    DWORD PTR [ebx+0xfdc],edx
1000b31c:	c7 43 70 05 00 00 00 	mov    DWORD PTR [ebx+0x70],0x5
1000b323:	8d 8b e0 08 00 00    	lea    ecx,[ebx+0x8e0]
1000b329:	8b 83 e8 0f 00 00    	mov    eax,DWORD PTR [ebx+0xfe8]
1000b32f:	89 c2                	mov    edx,eax
1000b331:	c1 e2 04             	shl    edx,0x4
1000b334:	01 ca                	add    edx,ecx
1000b336:	83 3a 00             	cmp    DWORD PTR [edx],0x0
1000b339:	75 09                	jne    1000b344 <spng_decode_image+0x98c>
1000b33b:	40                   	inc    eax
1000b33c:	89 83 e8 0f 00 00    	mov    DWORD PTR [ebx+0xfe8],eax
1000b342:	eb e5                	jmp    1000b329 <spng_decode_image+0x971>
1000b344:	83 7a 04 00          	cmp    DWORD PTR [edx+0x4],0x0
1000b348:	74 f1                	je     1000b33b <spng_decode_image+0x983>
1000b34a:	f6 44 24 0c 20       	test   BYTE PTR [esp+0xc],0x20
1000b34f:	74 0d                	je     1000b35e <spng_decode_image+0x9a6>
1000b351:	8b 14 85 b8 d7 00 10 	mov    edx,DWORD PTR [eax*4+0x1000d7b8]	1000b354: R_386_32	.text
1000b358:	89 93 e4 0f 00 00    	mov    DWORD PTR [ebx+0xfe4],edx
1000b35e:	ba 08 00 00 00       	mov    edx,0x8
1000b363:	83 bc 24 8c 00 00 00 02 	cmp    DWORD PTR [esp+0x8c],0x2
1000b36b:	74 2f                	je     1000b39c <spng_decode_image+0x9e4>
1000b36d:	ba 03 00 00 00       	mov    edx,0x3
1000b372:	83 bc 24 8c 00 00 00 04 	cmp    DWORD PTR [esp+0x8c],0x4
1000b37a:	74 20                	je     1000b39c <spng_decode_image+0x9e4>
1000b37c:	ba 01 00 00 00       	mov    edx,0x1
1000b381:	83 bc 24 8c 00 00 00 40 	cmp    DWORD PTR [esp+0x8c],0x40
1000b389:	74 11                	je     1000b39c <spng_decode_image+0x9e4>
1000b38b:	31 d2                	xor    edx,edx
1000b38d:	83 bc 24 8c 00 00 00 10 	cmp    DWORD PTR [esp+0x8c],0x10
1000b395:	0f 95 c2             	setne  dl
1000b398:	8d 54 12 02          	lea    edx,[edx+edx*1+0x2]
1000b39c:	8b bb c0 09 00 00    	mov    edi,DWORD PTR [ebx+0x9c0]
1000b3a2:	8b ac 24 8c 00 00 00 	mov    ebp,DWORD PTR [esp+0x8c]
1000b3a9:	81 e5 00 03 00 00    	and    ebp,0x300
1000b3af:	39 c7                	cmp    edi,eax
1000b3b1:	7c 29                	jl     1000b3dc <spng_decode_image+0xa24>
1000b3b3:	89 c1                	mov    ecx,eax
1000b3b5:	c1 e1 04             	shl    ecx,0x4
1000b3b8:	8b b4 0b ec 08 00 00 	mov    esi,DWORD PTR [ebx+ecx*1+0x8ec]
1000b3bf:	85 f6                	test   esi,esi
1000b3c1:	74 16                	je     1000b3d9 <spng_decode_image+0xa21>
1000b3c3:	4e                   	dec    esi
1000b3c4:	85 ed                	test   ebp,ebp
1000b3c6:	75 0a                	jne    1000b3d2 <spng_decode_image+0xa1a>
1000b3c8:	8b b4 0b e0 08 00 00 	mov    esi,DWORD PTR [ebx+ecx*1+0x8e0]
1000b3cf:	0f af f2             	imul   esi,edx
1000b3d2:	89 b4 0b e8 08 00 00 	mov    DWORD PTR [ebx+ecx*1+0x8e8],esi
1000b3d9:	40                   	inc    eax
1000b3da:	eb d3                	jmp    1000b3af <spng_decode_image+0x9f7>
1000b3dc:	8d 93 ec 0f 00 00    	lea    edx,[ebx+0xfec]
1000b3e2:	b9 01 00 00 00       	mov    ecx,0x1
1000b3e7:	89 d8                	mov    eax,ebx
1000b3e9:	e8 24 a5 ff ff       	call   10005912 <read_scanline_bytes>
1000b3ee:	89 c7                	mov    edi,eax
1000b3f0:	85 c0                	test   eax,eax
1000b3f2:	74 09                	je     1000b3fd <spng_decode_image+0xa45>
1000b3f4:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b3fb:	eb 54                	jmp    1000b451 <spng_decode_image+0xa99>
1000b3fd:	80 bb ec 0f 00 00 04 	cmp    BYTE PTR [ebx+0xfec],0x4
1000b404:	76 0e                	jbe    1000b414 <spng_decode_image+0xa5c>
1000b406:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b40d:	bf 41 00 00 00       	mov    edi,0x41
1000b412:	eb 3d                	jmp    1000b451 <spng_decode_image+0xa99>
1000b414:	0f ba a4 24 90 00 00 00 08 	bt     DWORD PTR [esp+0x90],0x8
1000b41d:	72 32                	jb     1000b451 <spng_decode_image+0xa99>
1000b41f:	8b 83 ac 09 00 00    	mov    eax,DWORD PTR [ebx+0x9ac]
1000b425:	52                   	push   edx
1000b426:	50                   	push   eax
1000b427:	0f af 83 e4 0f 00 00 	imul   eax,DWORD PTR [ebx+0xfe4]
1000b42e:	03 84 24 8c 00 00 00 	add    eax,DWORD PTR [esp+0x8c]
1000b435:	50                   	push   eax
1000b436:	53                   	push   ebx
1000b437:	e8 fc ff ff ff       	call   1000b438 <spng_decode_image+0xa80>	1000b438: R_386_PC32	spng_decode_row
1000b43c:	83 c4 10             	add    esp,0x10
1000b43f:	85 c0                	test   eax,eax
1000b441:	74 dc                	je     1000b41f <spng_decode_image+0xa67>
1000b443:	83 f8 4b             	cmp    eax,0x4b
1000b446:	74 09                	je     1000b451 <spng_decode_image+0xa99>
1000b448:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b44f:	89 c7                	mov    edi,eax
1000b451:	89 f8                	mov    eax,edi
1000b453:	83 c4 6c             	add    esp,0x6c
1000b456:	5b                   	pop    ebx
1000b457:	5e                   	pop    esi
1000b458:	5f                   	pop    edi
1000b459:	5d                   	pop    ebp
1000b45a:	c3                   	ret    

1000b45b <spng_get_ihdr>:
1000b45b:	57                   	push   edi
1000b45c:	56                   	push   esi
1000b45d:	51                   	push   ecx
1000b45e:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b462:	85 f6                	test   esi,esi
1000b464:	75 07                	jne    1000b46d <spng_get_ihdr+0x12>
1000b466:	b8 01 00 00 00       	mov    eax,0x1
1000b46b:	eb 28                	jmp    1000b495 <spng_get_ihdr+0x3a>
1000b46d:	ba 01 00 00 00       	mov    edx,0x1
1000b472:	89 f0                	mov    eax,esi
1000b474:	e8 d0 ac ff ff       	call   10006149 <read_chunks>
1000b479:	85 c0                	test   eax,eax
1000b47b:	75 18                	jne    1000b495 <spng_get_ihdr+0x3a>
1000b47d:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b482:	74 e2                	je     1000b466 <spng_get_ihdr+0xb>
1000b484:	81 c6 f0 00 00 00    	add    esi,0xf0
1000b48a:	b9 04 00 00 00       	mov    ecx,0x4
1000b48f:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b493:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b495:	5a                   	pop    edx
1000b496:	5e                   	pop    esi
1000b497:	5f                   	pop    edi
1000b498:	c3                   	ret    

1000b499 <spng_get_plte>:
1000b499:	57                   	push   edi
1000b49a:	56                   	push   esi
1000b49b:	51                   	push   ecx
1000b49c:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b4a0:	85 f6                	test   esi,esi
1000b4a2:	75 07                	jne    1000b4ab <spng_get_plte+0x12>
1000b4a4:	b8 01 00 00 00       	mov    eax,0x1
1000b4a9:	eb 35                	jmp    1000b4e0 <spng_get_plte+0x47>
1000b4ab:	31 d2                	xor    edx,edx
1000b4ad:	89 f0                	mov    eax,esi
1000b4af:	e8 95 ac ff ff       	call   10006149 <read_chunks>
1000b4b4:	85 c0                	test   eax,eax
1000b4b6:	75 28                	jne    1000b4e0 <spng_get_plte+0x47>
1000b4b8:	f6 86 ac 00 00 00 02 	test   BYTE PTR [esi+0xac],0x2
1000b4bf:	74 1a                	je     1000b4db <spng_get_plte+0x42>
1000b4c1:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b4c6:	74 dc                	je     1000b4a4 <spng_get_plte+0xb>
1000b4c8:	81 c6 00 01 00 00    	add    esi,0x100
1000b4ce:	b9 01 01 00 00       	mov    ecx,0x101
1000b4d3:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b4d7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b4d9:	eb 05                	jmp    1000b4e0 <spng_get_plte+0x47>
1000b4db:	b8 49 00 00 00       	mov    eax,0x49
1000b4e0:	5a                   	pop    edx
1000b4e1:	5e                   	pop    esi
1000b4e2:	5f                   	pop    edi
1000b4e3:	c3                   	ret    

1000b4e4 <spng_get_trns>:
1000b4e4:	57                   	push   edi
1000b4e5:	56                   	push   esi
1000b4e6:	51                   	push   ecx
1000b4e7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b4eb:	85 f6                	test   esi,esi
1000b4ed:	75 07                	jne    1000b4f6 <spng_get_trns+0x12>
1000b4ef:	b8 01 00 00 00       	mov    eax,0x1
1000b4f4:	eb 35                	jmp    1000b52b <spng_get_trns+0x47>
1000b4f6:	31 d2                	xor    edx,edx
1000b4f8:	89 f0                	mov    eax,esi
1000b4fa:	e8 4a ac ff ff       	call   10006149 <read_chunks>
1000b4ff:	85 c0                	test   eax,eax
1000b501:	75 28                	jne    1000b52b <spng_get_trns+0x47>
1000b503:	f6 86 ad 00 00 00 04 	test   BYTE PTR [esi+0xad],0x4
1000b50a:	74 1a                	je     1000b526 <spng_get_trns+0x42>
1000b50c:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b511:	74 dc                	je     1000b4ef <spng_get_trns+0xb>
1000b513:	81 c6 9c 07 00 00    	add    esi,0x79c
1000b519:	b9 43 00 00 00       	mov    ecx,0x43
1000b51e:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b522:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b524:	eb 05                	jmp    1000b52b <spng_get_trns+0x47>
1000b526:	b8 49 00 00 00       	mov    eax,0x49
1000b52b:	5a                   	pop    edx
1000b52c:	5e                   	pop    esi
1000b52d:	5f                   	pop    edi
1000b52e:	c3                   	ret    

1000b52f <spng_get_chrm>:
1000b52f:	55                   	push   ebp
1000b530:	57                   	push   edi
1000b531:	56                   	push   esi
1000b532:	53                   	push   ebx
1000b533:	83 ec 1c             	sub    esp,0x1c
1000b536:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000b53a:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000b53e:	85 db                	test   ebx,ebx
1000b540:	75 0a                	jne    1000b54c <spng_get_chrm+0x1d>
1000b542:	b8 01 00 00 00       	mov    eax,0x1
1000b547:	e9 e9 00 00 00       	jmp    1000b635 <spng_get_chrm+0x106>
1000b54c:	31 d2                	xor    edx,edx
1000b54e:	89 d8                	mov    eax,ebx
1000b550:	e8 f4 ab ff ff       	call   10006149 <read_chunks>
1000b555:	85 c0                	test   eax,eax
1000b557:	0f 85 d8 00 00 00    	jne    1000b635 <spng_get_chrm+0x106>
1000b55d:	f6 83 ac 00 00 00 04 	test   BYTE PTR [ebx+0xac],0x4
1000b564:	0f 84 c6 00 00 00    	je     1000b630 <spng_get_chrm+0x101>
1000b56a:	85 ed                	test   ebp,ebp
1000b56c:	74 d4                	je     1000b542 <spng_get_chrm+0x13>
1000b56e:	8b b3 04 05 00 00    	mov    esi,DWORD PTR [ebx+0x504]
1000b574:	31 ff                	xor    edi,edi
1000b576:	89 34 24             	mov    DWORD PTR [esp],esi
1000b579:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b57d:	df 2c 24             	fild   QWORD PTR [esp]
1000b580:	d9 05 08 d8 00 10    	fld    DWORD PTR ds:0x1000d808	1000b582: R_386_32	.text
1000b586:	dc f9                	fdiv   st(1),st
1000b588:	d9 c9                	fxch   st(1)
1000b58a:	dd 5d 00             	fstp   QWORD PTR [ebp+0x0]
1000b58d:	8b b3 08 05 00 00    	mov    esi,DWORD PTR [ebx+0x508]
1000b593:	31 ff                	xor    edi,edi
1000b595:	89 34 24             	mov    DWORD PTR [esp],esi
1000b598:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b59c:	df 2c 24             	fild   QWORD PTR [esp]
1000b59f:	d8 f1                	fdiv   st,st(1)
1000b5a1:	dd 5d 08             	fstp   QWORD PTR [ebp+0x8]
1000b5a4:	8b b3 0c 05 00 00    	mov    esi,DWORD PTR [ebx+0x50c]
1000b5aa:	31 ff                	xor    edi,edi
1000b5ac:	89 34 24             	mov    DWORD PTR [esp],esi
1000b5af:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b5b3:	df 2c 24             	fild   QWORD PTR [esp]
1000b5b6:	d8 f1                	fdiv   st,st(1)
1000b5b8:	dd 5d 10             	fstp   QWORD PTR [ebp+0x10]
1000b5bb:	8b b3 10 05 00 00    	mov    esi,DWORD PTR [ebx+0x510]
1000b5c1:	31 ff                	xor    edi,edi
1000b5c3:	89 34 24             	mov    DWORD PTR [esp],esi
1000b5c6:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b5ca:	df 2c 24             	fild   QWORD PTR [esp]
1000b5cd:	d8 f1                	fdiv   st,st(1)
1000b5cf:	dd 5d 18             	fstp   QWORD PTR [ebp+0x18]
1000b5d2:	8b b3 20 05 00 00    	mov    esi,DWORD PTR [ebx+0x520]
1000b5d8:	31 ff                	xor    edi,edi
1000b5da:	89 34 24             	mov    DWORD PTR [esp],esi
1000b5dd:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b5e1:	df 2c 24             	fild   QWORD PTR [esp]
1000b5e4:	d8 f1                	fdiv   st,st(1)
1000b5e6:	dd 5d 38             	fstp   QWORD PTR [ebp+0x38]
1000b5e9:	8b b3 1c 05 00 00    	mov    esi,DWORD PTR [ebx+0x51c]
1000b5ef:	31 ff                	xor    edi,edi
1000b5f1:	89 34 24             	mov    DWORD PTR [esp],esi
1000b5f4:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b5f8:	df 2c 24             	fild   QWORD PTR [esp]
1000b5fb:	d8 f1                	fdiv   st,st(1)
1000b5fd:	dd 5d 30             	fstp   QWORD PTR [ebp+0x30]
1000b600:	8b b3 14 05 00 00    	mov    esi,DWORD PTR [ebx+0x514]
1000b606:	31 ff                	xor    edi,edi
1000b608:	89 34 24             	mov    DWORD PTR [esp],esi
1000b60b:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b60f:	df 2c 24             	fild   QWORD PTR [esp]
1000b612:	d8 f1                	fdiv   st,st(1)
1000b614:	dd 5d 20             	fstp   QWORD PTR [ebp+0x20]
1000b617:	8b 8b 18 05 00 00    	mov    ecx,DWORD PTR [ebx+0x518]
1000b61d:	31 db                	xor    ebx,ebx
1000b61f:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000b622:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
1000b626:	df 2c 24             	fild   QWORD PTR [esp]
1000b629:	de f1                	fdivrp st(1),st
1000b62b:	dd 5d 28             	fstp   QWORD PTR [ebp+0x28]
1000b62e:	eb 05                	jmp    1000b635 <spng_get_chrm+0x106>
1000b630:	b8 49 00 00 00       	mov    eax,0x49
1000b635:	83 c4 1c             	add    esp,0x1c
1000b638:	5b                   	pop    ebx
1000b639:	5e                   	pop    esi
1000b63a:	5f                   	pop    edi
1000b63b:	5d                   	pop    ebp
1000b63c:	c3                   	ret    

1000b63d <spng_get_chrm_int>:
1000b63d:	57                   	push   edi
1000b63e:	56                   	push   esi
1000b63f:	51                   	push   ecx
1000b640:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b644:	85 f6                	test   esi,esi
1000b646:	75 07                	jne    1000b64f <spng_get_chrm_int+0x12>
1000b648:	b8 01 00 00 00       	mov    eax,0x1
1000b64d:	eb 35                	jmp    1000b684 <spng_get_chrm_int+0x47>
1000b64f:	31 d2                	xor    edx,edx
1000b651:	89 f0                	mov    eax,esi
1000b653:	e8 f1 aa ff ff       	call   10006149 <read_chunks>
1000b658:	85 c0                	test   eax,eax
1000b65a:	75 28                	jne    1000b684 <spng_get_chrm_int+0x47>
1000b65c:	f6 86 ac 00 00 00 04 	test   BYTE PTR [esi+0xac],0x4
1000b663:	74 1a                	je     1000b67f <spng_get_chrm_int+0x42>
1000b665:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b66a:	74 dc                	je     1000b648 <spng_get_chrm_int+0xb>
1000b66c:	81 c6 04 05 00 00    	add    esi,0x504
1000b672:	b9 08 00 00 00       	mov    ecx,0x8
1000b677:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b67b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b67d:	eb 05                	jmp    1000b684 <spng_get_chrm_int+0x47>
1000b67f:	b8 49 00 00 00       	mov    eax,0x49
1000b684:	5a                   	pop    edx
1000b685:	5e                   	pop    esi
1000b686:	5f                   	pop    edi
1000b687:	c3                   	ret    

1000b688 <spng_get_gama>:
1000b688:	56                   	push   esi
1000b689:	53                   	push   ebx
1000b68a:	83 ec 14             	sub    esp,0x14
1000b68d:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000b691:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
1000b695:	85 db                	test   ebx,ebx
1000b697:	75 07                	jne    1000b6a0 <spng_get_gama+0x18>
1000b699:	b8 01 00 00 00       	mov    eax,0x1
1000b69e:	eb 3b                	jmp    1000b6db <spng_get_gama+0x53>
1000b6a0:	31 d2                	xor    edx,edx
1000b6a2:	89 d8                	mov    eax,ebx
1000b6a4:	e8 a0 aa ff ff       	call   10006149 <read_chunks>
1000b6a9:	85 c0                	test   eax,eax
1000b6ab:	75 2e                	jne    1000b6db <spng_get_gama+0x53>
1000b6ad:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000b6b4:	74 20                	je     1000b6d6 <spng_get_gama+0x4e>
1000b6b6:	85 f6                	test   esi,esi
1000b6b8:	74 df                	je     1000b699 <spng_get_gama+0x11>
1000b6ba:	8b 8b 7c 05 00 00    	mov    ecx,DWORD PTR [ebx+0x57c]
1000b6c0:	31 db                	xor    ebx,ebx
1000b6c2:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000b6c5:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
1000b6c9:	df 2c 24             	fild   QWORD PTR [esp]
1000b6cc:	d8 35 08 d8 00 10    	fdiv   DWORD PTR ds:0x1000d808	1000b6ce: R_386_32	.text
1000b6d2:	dd 1e                	fstp   QWORD PTR [esi]
1000b6d4:	eb 05                	jmp    1000b6db <spng_get_gama+0x53>
1000b6d6:	b8 49 00 00 00       	mov    eax,0x49
1000b6db:	83 c4 14             	add    esp,0x14
1000b6de:	5b                   	pop    ebx
1000b6df:	5e                   	pop    esi
1000b6e0:	c3                   	ret    

1000b6e1 <spng_get_gama_int>:
1000b6e1:	56                   	push   esi
1000b6e2:	53                   	push   ebx
1000b6e3:	51                   	push   ecx
1000b6e4:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b6e8:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b6ec:	85 db                	test   ebx,ebx
1000b6ee:	75 07                	jne    1000b6f7 <spng_get_gama_int+0x16>
1000b6f0:	b8 01 00 00 00       	mov    eax,0x1
1000b6f5:	eb 29                	jmp    1000b720 <spng_get_gama_int+0x3f>
1000b6f7:	31 d2                	xor    edx,edx
1000b6f9:	89 d8                	mov    eax,ebx
1000b6fb:	e8 49 aa ff ff       	call   10006149 <read_chunks>
1000b700:	85 c0                	test   eax,eax
1000b702:	75 1c                	jne    1000b720 <spng_get_gama_int+0x3f>
1000b704:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000b70b:	74 0e                	je     1000b71b <spng_get_gama_int+0x3a>
1000b70d:	85 f6                	test   esi,esi
1000b70f:	74 df                	je     1000b6f0 <spng_get_gama_int+0xf>
1000b711:	8b 93 7c 05 00 00    	mov    edx,DWORD PTR [ebx+0x57c]
1000b717:	89 16                	mov    DWORD PTR [esi],edx
1000b719:	eb 05                	jmp    1000b720 <spng_get_gama_int+0x3f>
1000b71b:	b8 49 00 00 00       	mov    eax,0x49
1000b720:	5a                   	pop    edx
1000b721:	5b                   	pop    ebx
1000b722:	5e                   	pop    esi
1000b723:	c3                   	ret    

1000b724 <spng_get_iccp>:
1000b724:	57                   	push   edi
1000b725:	56                   	push   esi
1000b726:	51                   	push   ecx
1000b727:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b72b:	85 f6                	test   esi,esi
1000b72d:	75 07                	jne    1000b736 <spng_get_iccp+0x12>
1000b72f:	b8 01 00 00 00       	mov    eax,0x1
1000b734:	eb 35                	jmp    1000b76b <spng_get_iccp+0x47>
1000b736:	31 d2                	xor    edx,edx
1000b738:	89 f0                	mov    eax,esi
1000b73a:	e8 0a aa ff ff       	call   10006149 <read_chunks>
1000b73f:	85 c0                	test   eax,eax
1000b741:	75 28                	jne    1000b76b <spng_get_iccp+0x47>
1000b743:	f6 86 ac 00 00 00 08 	test   BYTE PTR [esi+0xac],0x8
1000b74a:	74 1a                	je     1000b766 <spng_get_iccp+0x42>
1000b74c:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b751:	74 dc                	je     1000b72f <spng_get_iccp+0xb>
1000b753:	81 c6 24 05 00 00    	add    esi,0x524
1000b759:	b9 16 00 00 00       	mov    ecx,0x16
1000b75e:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b762:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b764:	eb 05                	jmp    1000b76b <spng_get_iccp+0x47>
1000b766:	b8 49 00 00 00       	mov    eax,0x49
1000b76b:	5a                   	pop    edx
1000b76c:	5e                   	pop    esi
1000b76d:	5f                   	pop    edi
1000b76e:	c3                   	ret    

1000b76f <spng_get_sbit>:
1000b76f:	56                   	push   esi
1000b770:	53                   	push   ebx
1000b771:	51                   	push   ecx
1000b772:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b776:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b77a:	85 db                	test   ebx,ebx
1000b77c:	75 07                	jne    1000b785 <spng_get_sbit+0x16>
1000b77e:	b8 01 00 00 00       	mov    eax,0x1
1000b783:	eb 32                	jmp    1000b7b7 <spng_get_sbit+0x48>
1000b785:	31 d2                	xor    edx,edx
1000b787:	89 d8                	mov    eax,ebx
1000b789:	e8 bb a9 ff ff       	call   10006149 <read_chunks>
1000b78e:	85 c0                	test   eax,eax
1000b790:	75 25                	jne    1000b7b7 <spng_get_sbit+0x48>
1000b792:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
1000b799:	74 17                	je     1000b7b2 <spng_get_sbit+0x43>
1000b79b:	85 f6                	test   esi,esi
1000b79d:	74 df                	je     1000b77e <spng_get_sbit+0xf>
1000b79f:	8b 93 80 05 00 00    	mov    edx,DWORD PTR [ebx+0x580]
1000b7a5:	89 16                	mov    DWORD PTR [esi],edx
1000b7a7:	8a 93 84 05 00 00    	mov    dl,BYTE PTR [ebx+0x584]
1000b7ad:	88 56 04             	mov    BYTE PTR [esi+0x4],dl
1000b7b0:	eb 05                	jmp    1000b7b7 <spng_get_sbit+0x48>
1000b7b2:	b8 49 00 00 00       	mov    eax,0x49
1000b7b7:	5a                   	pop    edx
1000b7b8:	5b                   	pop    ebx
1000b7b9:	5e                   	pop    esi
1000b7ba:	c3                   	ret    

1000b7bb <spng_get_srgb>:
1000b7bb:	56                   	push   esi
1000b7bc:	53                   	push   ebx
1000b7bd:	51                   	push   ecx
1000b7be:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b7c2:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b7c6:	85 db                	test   ebx,ebx
1000b7c8:	75 07                	jne    1000b7d1 <spng_get_srgb+0x16>
1000b7ca:	b8 01 00 00 00       	mov    eax,0x1
1000b7cf:	eb 29                	jmp    1000b7fa <spng_get_srgb+0x3f>
1000b7d1:	31 d2                	xor    edx,edx
1000b7d3:	89 d8                	mov    eax,ebx
1000b7d5:	e8 6f a9 ff ff       	call   10006149 <read_chunks>
1000b7da:	85 c0                	test   eax,eax
1000b7dc:	75 1c                	jne    1000b7fa <spng_get_srgb+0x3f>
1000b7de:	f6 83 ac 00 00 00 40 	test   BYTE PTR [ebx+0xac],0x40
1000b7e5:	74 0e                	je     1000b7f5 <spng_get_srgb+0x3a>
1000b7e7:	85 f6                	test   esi,esi
1000b7e9:	74 df                	je     1000b7ca <spng_get_srgb+0xf>
1000b7eb:	8a 93 85 05 00 00    	mov    dl,BYTE PTR [ebx+0x585]
1000b7f1:	88 16                	mov    BYTE PTR [esi],dl
1000b7f3:	eb 05                	jmp    1000b7fa <spng_get_srgb+0x3f>
1000b7f5:	b8 49 00 00 00       	mov    eax,0x49
1000b7fa:	5a                   	pop    edx
1000b7fb:	5b                   	pop    ebx
1000b7fc:	5e                   	pop    esi
1000b7fd:	c3                   	ret    

1000b7fe <spng_get_text>:
1000b7fe:	55                   	push   ebp
1000b7ff:	57                   	push   edi
1000b800:	56                   	push   esi
1000b801:	53                   	push   ebx
1000b802:	83 ec 1c             	sub    esp,0x1c
1000b805:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
1000b809:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000b80d:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
1000b811:	85 ed                	test   ebp,ebp
1000b813:	75 0a                	jne    1000b81f <spng_get_text+0x21>
1000b815:	bb 01 00 00 00       	mov    ebx,0x1
1000b81a:	e9 ae 00 00 00       	jmp    1000b8cd <spng_get_text+0xcf>
1000b81f:	31 d2                	xor    edx,edx
1000b821:	89 e8                	mov    eax,ebp
1000b823:	e8 21 a9 ff ff       	call   10006149 <read_chunks>
1000b828:	89 c3                	mov    ebx,eax
1000b82a:	85 c0                	test   eax,eax
1000b82c:	0f 85 9b 00 00 00    	jne    1000b8cd <spng_get_text+0xcf>
1000b832:	80 bd ac 00 00 00 00 	cmp    BYTE PTR [ebp+0xac],0x0
1000b839:	0f 89 89 00 00 00    	jns    1000b8c8 <spng_get_text+0xca>
1000b83f:	85 f6                	test   esi,esi
1000b841:	74 d2                	je     1000b815 <spng_get_text+0x17>
1000b843:	8b 85 88 05 00 00    	mov    eax,DWORD PTR [ebp+0x588]
1000b849:	85 ff                	test   edi,edi
1000b84b:	75 04                	jne    1000b851 <spng_get_text+0x53>
1000b84d:	89 06                	mov    DWORD PTR [esi],eax
1000b84f:	eb 7c                	jmp    1000b8cd <spng_get_text+0xcf>
1000b851:	39 06                	cmp    DWORD PTR [esi],eax
1000b853:	72 c0                	jb     1000b815 <spng_get_text+0x17>
1000b855:	89 fa                	mov    edx,edi
1000b857:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
1000b85f:	31 c0                	xor    eax,eax
1000b861:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
1000b865:	39 bd 88 05 00 00    	cmp    DWORD PTR [ebp+0x588],edi
1000b86b:	76 60                	jbe    1000b8cd <spng_get_text+0xcf>
1000b86d:	6b 7c 24 08 70       	imul   edi,DWORD PTR [esp+0x8],0x70
1000b872:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000b876:	8b 8d 8c 05 00 00    	mov    ecx,DWORD PTR [ebp+0x58c]
1000b87c:	01 f9                	add    ecx,edi
1000b87e:	8b 31                	mov    esi,DWORD PTR [ecx]
1000b880:	89 72 50             	mov    DWORD PTR [edx+0x50],esi
1000b883:	8b 71 04             	mov    esi,DWORD PTR [ecx+0x4]
1000b886:	83 c9 ff             	or     ecx,0xffffffff
1000b889:	89 f7                	mov    edi,esi
1000b88b:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000b88d:	f7 d1                	not    ecx
1000b88f:	89 d7                	mov    edi,edx
1000b891:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b893:	c6 42 5d 00          	mov    BYTE PTR [edx+0x5d],0x0
1000b897:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000b89b:	03 b5 8c 05 00 00    	add    esi,DWORD PTR [ebp+0x58c]
1000b8a1:	8a 4e 10             	mov    cl,BYTE PTR [esi+0x10]
1000b8a4:	88 4a 5c             	mov    BYTE PTR [edx+0x5c],cl
1000b8a7:	8b 4e 14             	mov    ecx,DWORD PTR [esi+0x14]
1000b8aa:	89 4a 60             	mov    DWORD PTR [edx+0x60],ecx
1000b8ad:	8b 4e 18             	mov    ecx,DWORD PTR [esi+0x18]
1000b8b0:	89 4a 64             	mov    DWORD PTR [edx+0x64],ecx
1000b8b3:	8b 4e 0c             	mov    ecx,DWORD PTR [esi+0xc]
1000b8b6:	89 4a 54             	mov    DWORD PTR [edx+0x54],ecx
1000b8b9:	8b 4e 08             	mov    ecx,DWORD PTR [esi+0x8]
1000b8bc:	89 4a 58             	mov    DWORD PTR [edx+0x58],ecx
1000b8bf:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
1000b8c3:	83 c2 68             	add    edx,0x68
1000b8c6:	eb 99                	jmp    1000b861 <spng_get_text+0x63>
1000b8c8:	bb 49 00 00 00       	mov    ebx,0x49
1000b8cd:	89 d8                	mov    eax,ebx
1000b8cf:	83 c4 1c             	add    esp,0x1c
1000b8d2:	5b                   	pop    ebx
1000b8d3:	5e                   	pop    esi
1000b8d4:	5f                   	pop    edi
1000b8d5:	5d                   	pop    ebp
1000b8d6:	c3                   	ret    

1000b8d7 <spng_get_bkgd>:
1000b8d7:	57                   	push   edi
1000b8d8:	56                   	push   esi
1000b8d9:	51                   	push   ecx
1000b8da:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b8de:	85 f6                	test   esi,esi
1000b8e0:	75 07                	jne    1000b8e9 <spng_get_bkgd+0x12>
1000b8e2:	b8 01 00 00 00       	mov    eax,0x1
1000b8e7:	eb 35                	jmp    1000b91e <spng_get_bkgd+0x47>
1000b8e9:	31 d2                	xor    edx,edx
1000b8eb:	89 f0                	mov    eax,esi
1000b8ed:	e8 57 a8 ff ff       	call   10006149 <read_chunks>
1000b8f2:	85 c0                	test   eax,eax
1000b8f4:	75 28                	jne    1000b91e <spng_get_bkgd+0x47>
1000b8f6:	f6 86 ad 00 00 00 01 	test   BYTE PTR [esi+0xad],0x1
1000b8fd:	74 1a                	je     1000b919 <spng_get_bkgd+0x42>
1000b8ff:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b904:	74 dc                	je     1000b8e2 <spng_get_bkgd+0xb>
1000b906:	81 c6 90 05 00 00    	add    esi,0x590
1000b90c:	b9 0a 00 00 00       	mov    ecx,0xa
1000b911:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b915:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b917:	eb 05                	jmp    1000b91e <spng_get_bkgd+0x47>
1000b919:	b8 49 00 00 00       	mov    eax,0x49
1000b91e:	5a                   	pop    edx
1000b91f:	5e                   	pop    esi
1000b920:	5f                   	pop    edi
1000b921:	c3                   	ret    

1000b922 <spng_get_hist>:
1000b922:	57                   	push   edi
1000b923:	56                   	push   esi
1000b924:	51                   	push   ecx
1000b925:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b929:	85 f6                	test   esi,esi
1000b92b:	75 07                	jne    1000b934 <spng_get_hist+0x12>
1000b92d:	b8 01 00 00 00       	mov    eax,0x1
1000b932:	eb 35                	jmp    1000b969 <spng_get_hist+0x47>
1000b934:	31 d2                	xor    edx,edx
1000b936:	89 f0                	mov    eax,esi
1000b938:	e8 0c a8 ff ff       	call   10006149 <read_chunks>
1000b93d:	85 c0                	test   eax,eax
1000b93f:	75 28                	jne    1000b969 <spng_get_hist+0x47>
1000b941:	f6 86 ad 00 00 00 02 	test   BYTE PTR [esi+0xad],0x2
1000b948:	74 1a                	je     1000b964 <spng_get_hist+0x42>
1000b94a:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b94f:	74 dc                	je     1000b92d <spng_get_hist+0xb>
1000b951:	81 c6 9a 05 00 00    	add    esi,0x59a
1000b957:	b9 80 00 00 00       	mov    ecx,0x80
1000b95c:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b960:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b962:	eb 05                	jmp    1000b969 <spng_get_hist+0x47>
1000b964:	b8 49 00 00 00       	mov    eax,0x49
1000b969:	5a                   	pop    edx
1000b96a:	5e                   	pop    esi
1000b96b:	5f                   	pop    edi
1000b96c:	c3                   	ret    

1000b96d <spng_get_phys>:
1000b96d:	57                   	push   edi
1000b96e:	56                   	push   esi
1000b96f:	51                   	push   ecx
1000b970:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b974:	85 f6                	test   esi,esi
1000b976:	75 07                	jne    1000b97f <spng_get_phys+0x12>
1000b978:	b8 01 00 00 00       	mov    eax,0x1
1000b97d:	eb 35                	jmp    1000b9b4 <spng_get_phys+0x47>
1000b97f:	31 d2                	xor    edx,edx
1000b981:	89 f0                	mov    eax,esi
1000b983:	e8 c1 a7 ff ff       	call   10006149 <read_chunks>
1000b988:	85 c0                	test   eax,eax
1000b98a:	75 28                	jne    1000b9b4 <spng_get_phys+0x47>
1000b98c:	f6 86 ad 00 00 00 08 	test   BYTE PTR [esi+0xad],0x8
1000b993:	74 1a                	je     1000b9af <spng_get_phys+0x42>
1000b995:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b99a:	74 dc                	je     1000b978 <spng_get_phys+0xb>
1000b99c:	81 c6 a8 08 00 00    	add    esi,0x8a8
1000b9a2:	b9 03 00 00 00       	mov    ecx,0x3
1000b9a7:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b9ab:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b9ad:	eb 05                	jmp    1000b9b4 <spng_get_phys+0x47>
1000b9af:	b8 49 00 00 00       	mov    eax,0x49
1000b9b4:	5a                   	pop    edx
1000b9b5:	5e                   	pop    esi
1000b9b6:	5f                   	pop    edi
1000b9b7:	c3                   	ret    

1000b9b8 <spng_get_splt>:
1000b9b8:	57                   	push   edi
1000b9b9:	56                   	push   esi
1000b9ba:	53                   	push   ebx
1000b9bb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b9bf:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000b9c3:	85 db                	test   ebx,ebx
1000b9c5:	75 07                	jne    1000b9ce <spng_get_splt+0x16>
1000b9c7:	b8 01 00 00 00       	mov    eax,0x1
1000b9cc:	eb 45                	jmp    1000ba13 <spng_get_splt+0x5b>
1000b9ce:	31 d2                	xor    edx,edx
1000b9d0:	89 d8                	mov    eax,ebx
1000b9d2:	e8 72 a7 ff ff       	call   10006149 <read_chunks>
1000b9d7:	85 c0                	test   eax,eax
1000b9d9:	75 38                	jne    1000ba13 <spng_get_splt+0x5b>
1000b9db:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
1000b9e2:	74 2a                	je     1000ba0e <spng_get_splt+0x56>
1000b9e4:	85 f6                	test   esi,esi
1000b9e6:	74 df                	je     1000b9c7 <spng_get_splt+0xf>
1000b9e8:	8b 8b b4 08 00 00    	mov    ecx,DWORD PTR [ebx+0x8b4]
1000b9ee:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b9f3:	75 04                	jne    1000b9f9 <spng_get_splt+0x41>
1000b9f5:	89 0e                	mov    DWORD PTR [esi],ecx
1000b9f7:	eb 1a                	jmp    1000ba13 <spng_get_splt+0x5b>
1000b9f9:	39 0e                	cmp    DWORD PTR [esi],ecx
1000b9fb:	72 ca                	jb     1000b9c7 <spng_get_splt+0xf>
1000b9fd:	6b c9 5c             	imul   ecx,ecx,0x5c
1000ba00:	8b b3 b8 08 00 00    	mov    esi,DWORD PTR [ebx+0x8b8]
1000ba06:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000ba0a:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000ba0c:	eb 05                	jmp    1000ba13 <spng_get_splt+0x5b>
1000ba0e:	b8 49 00 00 00       	mov    eax,0x49
1000ba13:	5b                   	pop    ebx
1000ba14:	5e                   	pop    esi
1000ba15:	5f                   	pop    edi
1000ba16:	c3                   	ret    

1000ba17 <spng_get_time>:
1000ba17:	56                   	push   esi
1000ba18:	53                   	push   ebx
1000ba19:	51                   	push   ecx
1000ba1a:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000ba1e:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000ba22:	85 f6                	test   esi,esi
1000ba24:	75 07                	jne    1000ba2d <spng_get_time+0x16>
1000ba26:	b8 01 00 00 00       	mov    eax,0x1
1000ba2b:	eb 32                	jmp    1000ba5f <spng_get_time+0x48>
1000ba2d:	31 d2                	xor    edx,edx
1000ba2f:	89 f0                	mov    eax,esi
1000ba31:	e8 13 a7 ff ff       	call   10006149 <read_chunks>
1000ba36:	85 c0                	test   eax,eax
1000ba38:	75 25                	jne    1000ba5f <spng_get_time+0x48>
1000ba3a:	f6 86 ad 00 00 00 20 	test   BYTE PTR [esi+0xad],0x20
1000ba41:	74 17                	je     1000ba5a <spng_get_time+0x43>
1000ba43:	85 db                	test   ebx,ebx
1000ba45:	74 df                	je     1000ba26 <spng_get_time+0xf>
1000ba47:	8b 96 bc 08 00 00    	mov    edx,DWORD PTR [esi+0x8bc]
1000ba4d:	8b 8e c0 08 00 00    	mov    ecx,DWORD PTR [esi+0x8c0]
1000ba53:	89 13                	mov    DWORD PTR [ebx],edx
1000ba55:	89 4b 04             	mov    DWORD PTR [ebx+0x4],ecx
1000ba58:	eb 05                	jmp    1000ba5f <spng_get_time+0x48>
1000ba5a:	b8 49 00 00 00       	mov    eax,0x49
1000ba5f:	5a                   	pop    edx
1000ba60:	5b                   	pop    ebx
1000ba61:	5e                   	pop    esi
1000ba62:	c3                   	ret    

1000ba63 <spng_get_unknown_chunks>:
1000ba63:	57                   	push   edi
1000ba64:	56                   	push   esi
1000ba65:	53                   	push   ebx
1000ba66:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000ba6a:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000ba6e:	85 db                	test   ebx,ebx
1000ba70:	75 07                	jne    1000ba79 <spng_get_unknown_chunks+0x16>
1000ba72:	b8 01 00 00 00       	mov    eax,0x1
1000ba77:	eb 47                	jmp    1000bac0 <spng_get_unknown_chunks+0x5d>
1000ba79:	31 d2                	xor    edx,edx
1000ba7b:	89 d8                	mov    eax,ebx
1000ba7d:	e8 c7 a6 ff ff       	call   10006149 <read_chunks>
1000ba82:	85 c0                	test   eax,eax
1000ba84:	75 3a                	jne    1000bac0 <spng_get_unknown_chunks+0x5d>
1000ba86:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000ba8d:	74 2c                	je     1000babb <spng_get_unknown_chunks+0x58>
1000ba8f:	85 f6                	test   esi,esi
1000ba91:	74 df                	je     1000ba72 <spng_get_unknown_chunks+0xf>
1000ba93:	8b 93 d8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d8]
1000ba99:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000ba9e:	75 04                	jne    1000baa4 <spng_get_unknown_chunks+0x41>
1000baa0:	89 16                	mov    DWORD PTR [esi],edx
1000baa2:	eb 1c                	jmp    1000bac0 <spng_get_unknown_chunks+0x5d>
1000baa4:	39 16                	cmp    DWORD PTR [esi],edx
1000baa6:	72 ca                	jb     1000ba72 <spng_get_unknown_chunks+0xf>
1000baa8:	8b b3 dc 08 00 00    	mov    esi,DWORD PTR [ebx+0x8dc]
1000baae:	b9 04 00 00 00       	mov    ecx,0x4
1000bab3:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000bab7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bab9:	eb 05                	jmp    1000bac0 <spng_get_unknown_chunks+0x5d>
1000babb:	b8 49 00 00 00       	mov    eax,0x49
1000bac0:	5b                   	pop    ebx
1000bac1:	5e                   	pop    esi
1000bac2:	5f                   	pop    edi
1000bac3:	c3                   	ret    

1000bac4 <spng_get_offs>:
1000bac4:	57                   	push   edi
1000bac5:	56                   	push   esi
1000bac6:	51                   	push   ecx
1000bac7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000bacb:	85 f6                	test   esi,esi
1000bacd:	75 07                	jne    1000bad6 <spng_get_offs+0x12>
1000bacf:	b8 01 00 00 00       	mov    eax,0x1
1000bad4:	eb 35                	jmp    1000bb0b <spng_get_offs+0x47>
1000bad6:	31 d2                	xor    edx,edx
1000bad8:	89 f0                	mov    eax,esi
1000bada:	e8 6a a6 ff ff       	call   10006149 <read_chunks>
1000badf:	85 c0                	test   eax,eax
1000bae1:	75 28                	jne    1000bb0b <spng_get_offs+0x47>
1000bae3:	f6 86 ad 00 00 00 40 	test   BYTE PTR [esi+0xad],0x40
1000baea:	74 1a                	je     1000bb06 <spng_get_offs+0x42>
1000baec:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000baf1:	74 dc                	je     1000bacf <spng_get_offs+0xb>
1000baf3:	81 c6 c4 08 00 00    	add    esi,0x8c4
1000baf9:	b9 03 00 00 00       	mov    ecx,0x3
1000bafe:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000bb02:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bb04:	eb 05                	jmp    1000bb0b <spng_get_offs+0x47>
1000bb06:	b8 49 00 00 00       	mov    eax,0x49
1000bb0b:	5a                   	pop    edx
1000bb0c:	5e                   	pop    esi
1000bb0d:	5f                   	pop    edi
1000bb0e:	c3                   	ret    

1000bb0f <spng_get_exif>:
1000bb0f:	56                   	push   esi
1000bb10:	53                   	push   ebx
1000bb11:	51                   	push   ecx
1000bb12:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000bb16:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000bb1a:	85 f6                	test   esi,esi
1000bb1c:	75 07                	jne    1000bb25 <spng_get_exif+0x16>
1000bb1e:	b8 01 00 00 00       	mov    eax,0x1
1000bb23:	eb 32                	jmp    1000bb57 <spng_get_exif+0x48>
1000bb25:	31 d2                	xor    edx,edx
1000bb27:	89 f0                	mov    eax,esi
1000bb29:	e8 1b a6 ff ff       	call   10006149 <read_chunks>
1000bb2e:	85 c0                	test   eax,eax
1000bb30:	75 25                	jne    1000bb57 <spng_get_exif+0x48>
1000bb32:	80 be ad 00 00 00 00 	cmp    BYTE PTR [esi+0xad],0x0
1000bb39:	79 17                	jns    1000bb52 <spng_get_exif+0x43>
1000bb3b:	85 db                	test   ebx,ebx
1000bb3d:	74 df                	je     1000bb1e <spng_get_exif+0xf>
1000bb3f:	8b 96 d0 08 00 00    	mov    edx,DWORD PTR [esi+0x8d0]
1000bb45:	8b 8e d4 08 00 00    	mov    ecx,DWORD PTR [esi+0x8d4]
1000bb4b:	89 13                	mov    DWORD PTR [ebx],edx
1000bb4d:	89 4b 04             	mov    DWORD PTR [ebx+0x4],ecx
1000bb50:	eb 05                	jmp    1000bb57 <spng_get_exif+0x48>
1000bb52:	b8 49 00 00 00       	mov    eax,0x49
1000bb57:	5a                   	pop    edx
1000bb58:	5b                   	pop    ebx
1000bb59:	5e                   	pop    esi
1000bb5a:	c3                   	ret    

1000bb5b <spng_set_ihdr>:
1000bb5b:	57                   	push   edi
1000bb5c:	56                   	push   esi
1000bb5d:	53                   	push   ebx
1000bb5e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bb62:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bb66:	85 f6                	test   esi,esi
1000bb68:	74 04                	je     1000bb6e <spng_set_ihdr+0x13>
1000bb6a:	85 db                	test   ebx,ebx
1000bb6c:	75 07                	jne    1000bb75 <spng_set_ihdr+0x1a>
1000bb6e:	b8 01 00 00 00       	mov    eax,0x1
1000bb73:	eb 7e                	jmp    1000bbf3 <spng_set_ihdr+0x98>
1000bb75:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bb79:	75 0b                	jne    1000bb86 <spng_set_ihdr+0x2b>
1000bb7b:	b8 52 00 00 00       	mov    eax,0x52
1000bb80:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bb84:	74 6d                	je     1000bbf3 <spng_set_ihdr+0x98>
1000bb86:	31 d2                	xor    edx,edx
1000bb88:	89 d8                	mov    eax,ebx
1000bb8a:	e8 ba a5 ff ff       	call   10006149 <read_chunks>
1000bb8f:	85 c0                	test   eax,eax
1000bb91:	75 60                	jne    1000bbf3 <spng_set_ihdr+0x98>
1000bb93:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
1000bb9a:	75 d2                	jne    1000bb6e <spng_set_ihdr+0x13>
1000bb9c:	8b 0e                	mov    ecx,DWORD PTR [esi]
1000bb9e:	b8 05 00 00 00       	mov    eax,0x5
1000bba3:	85 c9                	test   ecx,ecx
1000bba5:	7e 4c                	jle    1000bbf3 <spng_set_ihdr+0x98>
1000bba7:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
1000bbaa:	b8 06 00 00 00       	mov    eax,0x6
1000bbaf:	85 d2                	test   edx,edx
1000bbb1:	7e 40                	jle    1000bbf3 <spng_set_ihdr+0x98>
1000bbb3:	b8 07 00 00 00       	mov    eax,0x7
1000bbb8:	39 8b d4 00 00 00    	cmp    DWORD PTR [ebx+0xd4],ecx
1000bbbe:	72 33                	jb     1000bbf3 <spng_set_ihdr+0x98>
1000bbc0:	b8 08 00 00 00       	mov    eax,0x8
1000bbc5:	39 93 d8 00 00 00    	cmp    DWORD PTR [ebx+0xd8],edx
1000bbcb:	72 26                	jb     1000bbf3 <spng_set_ihdr+0x98>
1000bbcd:	89 f0                	mov    eax,esi
1000bbcf:	e8 8a 9a ff ff       	call   1000565e <check_ihdr.part.13>
1000bbd4:	85 c0                	test   eax,eax
1000bbd6:	75 1b                	jne    1000bbf3 <spng_set_ihdr+0x98>
1000bbd8:	8d bb f0 00 00 00    	lea    edi,[ebx+0xf0]
1000bbde:	b9 04 00 00 00       	mov    ecx,0x4
1000bbe3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bbe5:	80 8b ac 00 00 00 01 	or     BYTE PTR [ebx+0xac],0x1
1000bbec:	80 8b a8 00 00 00 01 	or     BYTE PTR [ebx+0xa8],0x1
1000bbf3:	5b                   	pop    ebx
1000bbf4:	5e                   	pop    esi
1000bbf5:	5f                   	pop    edi
1000bbf6:	c3                   	ret    

1000bbf7 <spng_set_plte>:
1000bbf7:	57                   	push   edi
1000bbf8:	56                   	push   esi
1000bbf9:	53                   	push   ebx
1000bbfa:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bbfe:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bc02:	85 f6                	test   esi,esi
1000bc04:	74 04                	je     1000bc0a <spng_set_plte+0x13>
1000bc06:	85 db                	test   ebx,ebx
1000bc08:	75 07                	jne    1000bc11 <spng_set_plte+0x1a>
1000bc0a:	b8 01 00 00 00       	mov    eax,0x1
1000bc0f:	eb 53                	jmp    1000bc64 <spng_set_plte+0x6d>
1000bc11:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bc15:	75 0b                	jne    1000bc22 <spng_set_plte+0x2b>
1000bc17:	b8 52 00 00 00       	mov    eax,0x52
1000bc1c:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bc20:	74 42                	je     1000bc64 <spng_set_plte+0x6d>
1000bc22:	31 d2                	xor    edx,edx
1000bc24:	89 d8                	mov    eax,ebx
1000bc26:	e8 1e a5 ff ff       	call   10006149 <read_chunks>
1000bc2b:	85 c0                	test   eax,eax
1000bc2d:	75 35                	jne    1000bc64 <spng_set_plte+0x6d>
1000bc2f:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
1000bc36:	74 d2                	je     1000bc0a <spng_set_plte+0x13>
1000bc38:	8d 93 f0 00 00 00    	lea    edx,[ebx+0xf0]
1000bc3e:	89 f0                	mov    eax,esi
1000bc40:	e8 a2 9a ff ff       	call   100056e7 <check_plte>
1000bc45:	85 c0                	test   eax,eax
1000bc47:	75 c1                	jne    1000bc0a <spng_set_plte+0x13>
1000bc49:	8d bb 00 01 00 00    	lea    edi,[ebx+0x100]
1000bc4f:	b9 01 01 00 00       	mov    ecx,0x101
1000bc54:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bc56:	80 8b ac 00 00 00 02 	or     BYTE PTR [ebx+0xac],0x2
1000bc5d:	80 8b a8 00 00 00 02 	or     BYTE PTR [ebx+0xa8],0x2
1000bc64:	5b                   	pop    ebx
1000bc65:	5e                   	pop    esi
1000bc66:	5f                   	pop    edi
1000bc67:	c3                   	ret    

1000bc68 <spng_set_trns>:
1000bc68:	57                   	push   edi
1000bc69:	56                   	push   esi
1000bc6a:	53                   	push   ebx
1000bc6b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bc6f:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bc73:	85 f6                	test   esi,esi
1000bc75:	74 04                	je     1000bc7b <spng_set_trns+0x13>
1000bc77:	85 db                	test   ebx,ebx
1000bc79:	75 0a                	jne    1000bc85 <spng_set_trns+0x1d>
1000bc7b:	b8 01 00 00 00       	mov    eax,0x1
1000bc80:	e9 bc 00 00 00       	jmp    1000bd41 <spng_set_trns+0xd9>
1000bc85:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bc89:	75 0f                	jne    1000bc9a <spng_set_trns+0x32>
1000bc8b:	b8 52 00 00 00       	mov    eax,0x52
1000bc90:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bc94:	0f 84 a7 00 00 00    	je     1000bd41 <spng_set_trns+0xd9>
1000bc9a:	31 d2                	xor    edx,edx
1000bc9c:	89 d8                	mov    eax,ebx
1000bc9e:	e8 a6 a4 ff ff       	call   10006149 <read_chunks>
1000bca3:	85 c0                	test   eax,eax
1000bca5:	0f 85 96 00 00 00    	jne    1000bd41 <spng_set_trns+0xd9>
1000bcab:	8a 8b ac 00 00 00    	mov    cl,BYTE PTR [ebx+0xac]
1000bcb1:	f6 c1 01             	test   cl,0x1
1000bcb4:	74 78                	je     1000bd2e <spng_set_trns+0xc6>
1000bcb6:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000bcbc:	84 d2                	test   dl,dl
1000bcbe:	75 0b                	jne    1000bccb <spng_set_trns+0x63>
1000bcc0:	8b 16                	mov    edx,DWORD PTR [esi]
1000bcc2:	66 89 93 9c 07 00 00 	mov    WORD PTR [ebx+0x79c],dx
1000bcc9:	eb 53                	jmp    1000bd1e <spng_set_trns+0xb6>
1000bccb:	80 fa 02             	cmp    dl,0x2
1000bcce:	75 22                	jne    1000bcf2 <spng_set_trns+0x8a>
1000bcd0:	66 8b 56 02          	mov    dx,WORD PTR [esi+0x2]
1000bcd4:	66 89 93 9e 07 00 00 	mov    WORD PTR [ebx+0x79e],dx
1000bcdb:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
1000bcde:	66 89 93 a0 07 00 00 	mov    WORD PTR [ebx+0x7a0],dx
1000bce5:	66 8b 56 06          	mov    dx,WORD PTR [esi+0x6]
1000bce9:	66 89 93 a2 07 00 00 	mov    WORD PTR [ebx+0x7a2],dx
1000bcf0:	eb 2c                	jmp    1000bd1e <spng_set_trns+0xb6>
1000bcf2:	80 fa 03             	cmp    dl,0x3
1000bcf5:	75 3e                	jne    1000bd35 <spng_set_trns+0xcd>
1000bcf7:	80 e1 02             	and    cl,0x2
1000bcfa:	74 40                	je     1000bd3c <spng_set_trns+0xd4>
1000bcfc:	8b 4e 08             	mov    ecx,DWORD PTR [esi+0x8]
1000bcff:	3b 8b 00 01 00 00    	cmp    ecx,DWORD PTR [ebx+0x100]
1000bd05:	0f 87 70 ff ff ff    	ja     1000bc7b <spng_set_trns+0x13>
1000bd0b:	89 8b a4 07 00 00    	mov    DWORD PTR [ebx+0x7a4],ecx
1000bd11:	8d 93 a8 07 00 00    	lea    edx,[ebx+0x7a8]
1000bd17:	83 c6 0c             	add    esi,0xc
1000bd1a:	89 d7                	mov    edi,edx
1000bd1c:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000bd1e:	80 8b ad 00 00 00 04 	or     BYTE PTR [ebx+0xad],0x4
1000bd25:	80 8b a9 00 00 00 04 	or     BYTE PTR [ebx+0xa9],0x4
1000bd2c:	eb 13                	jmp    1000bd41 <spng_set_trns+0xd9>
1000bd2e:	b8 0f 00 00 00       	mov    eax,0xf
1000bd33:	eb 0c                	jmp    1000bd41 <spng_set_trns+0xd9>
1000bd35:	b8 24 00 00 00       	mov    eax,0x24
1000bd3a:	eb 05                	jmp    1000bd41 <spng_set_trns+0xd9>
1000bd3c:	b8 25 00 00 00       	mov    eax,0x25
1000bd41:	5b                   	pop    ebx
1000bd42:	5e                   	pop    esi
1000bd43:	5f                   	pop    edi
1000bd44:	c3                   	ret    

1000bd45 <spng_set_chrm>:
1000bd45:	57                   	push   edi
1000bd46:	56                   	push   esi
1000bd47:	53                   	push   ebx
1000bd48:	83 ec 30             	sub    esp,0x30
1000bd4b:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
1000bd4f:	8b 74 24 44          	mov    esi,DWORD PTR [esp+0x44]
1000bd53:	85 f6                	test   esi,esi
1000bd55:	0f 84 26 01 00 00    	je     1000be81 <spng_set_chrm+0x13c>
1000bd5b:	85 db                	test   ebx,ebx
1000bd5d:	0f 84 1e 01 00 00    	je     1000be81 <spng_set_chrm+0x13c>
1000bd63:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bd67:	75 0f                	jne    1000bd78 <spng_set_chrm+0x33>
1000bd69:	b8 52 00 00 00       	mov    eax,0x52
1000bd6e:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bd72:	0f 84 15 01 00 00    	je     1000be8d <spng_set_chrm+0x148>
1000bd78:	31 d2                	xor    edx,edx
1000bd7a:	89 d8                	mov    eax,ebx
1000bd7c:	e8 c8 a3 ff ff       	call   10006149 <read_chunks>
1000bd81:	85 c0                	test   eax,eax
1000bd83:	0f 85 04 01 00 00    	jne    1000be8d <spng_set_chrm+0x148>
1000bd89:	d9 05 08 d8 00 10    	fld    DWORD PTR ds:0x1000d808	1000bd8b: R_386_32	.text
1000bd8f:	dd 06                	fld    QWORD PTR [esi]
1000bd91:	d8 c9                	fmul   st,st(1)
1000bd93:	d9 7c 24 0e          	fnstcw WORD PTR [esp+0xe]
1000bd97:	66 8b 44 24 0e       	mov    ax,WORD PTR [esp+0xe]
1000bd9c:	80 cc 0c             	or     ah,0xc
1000bd9f:	66 89 44 24 0c       	mov    WORD PTR [esp+0xc],ax
1000bda4:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bda8:	df 3c 24             	fistp  QWORD PTR [esp]
1000bdab:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bdaf:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bdb2:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000bdb6:	dd 46 08             	fld    QWORD PTR [esi+0x8]
1000bdb9:	d8 c9                	fmul   st,st(1)
1000bdbb:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bdbf:	df 3c 24             	fistp  QWORD PTR [esp]
1000bdc2:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bdc6:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bdc9:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000bdcd:	dd 46 10             	fld    QWORD PTR [esi+0x10]
1000bdd0:	d8 c9                	fmul   st,st(1)
1000bdd2:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bdd6:	df 3c 24             	fistp  QWORD PTR [esp]
1000bdd9:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bddd:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bde0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000bde4:	dd 46 18             	fld    QWORD PTR [esi+0x18]
1000bde7:	d8 c9                	fmul   st,st(1)
1000bde9:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bded:	df 3c 24             	fistp  QWORD PTR [esp]
1000bdf0:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bdf4:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bdf7:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000bdfb:	dd 46 20             	fld    QWORD PTR [esi+0x20]
1000bdfe:	d8 c9                	fmul   st,st(1)
1000be00:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000be04:	df 3c 24             	fistp  QWORD PTR [esp]
1000be07:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000be0b:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000be0e:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000be12:	dd 46 28             	fld    QWORD PTR [esi+0x28]
1000be15:	d8 c9                	fmul   st,st(1)
1000be17:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000be1b:	df 3c 24             	fistp  QWORD PTR [esp]
1000be1e:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000be22:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000be25:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000be29:	dd 46 30             	fld    QWORD PTR [esi+0x30]
1000be2c:	d8 c9                	fmul   st,st(1)
1000be2e:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000be32:	df 3c 24             	fistp  QWORD PTR [esp]
1000be35:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000be39:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000be3c:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000be40:	dc 4e 38             	fmul   QWORD PTR [esi+0x38]
1000be43:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000be47:	df 3c 24             	fistp  QWORD PTR [esp]
1000be4a:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000be4e:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000be51:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000be55:	8d 74 24 10          	lea    esi,[esp+0x10]
1000be59:	89 f0                	mov    eax,esi
1000be5b:	e8 af 8d ff ff       	call   10004c0f <check_chrm_int>
1000be60:	85 c0                	test   eax,eax
1000be62:	75 24                	jne    1000be88 <spng_set_chrm+0x143>
1000be64:	8d bb 04 05 00 00    	lea    edi,[ebx+0x504]
1000be6a:	b9 08 00 00 00       	mov    ecx,0x8
1000be6f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000be71:	80 8b ac 00 00 00 04 	or     BYTE PTR [ebx+0xac],0x4
1000be78:	80 8b a8 00 00 00 04 	or     BYTE PTR [ebx+0xa8],0x4
1000be7f:	eb 0c                	jmp    1000be8d <spng_set_chrm+0x148>
1000be81:	b8 01 00 00 00       	mov    eax,0x1
1000be86:	eb 05                	jmp    1000be8d <spng_set_chrm+0x148>
1000be88:	b8 22 00 00 00       	mov    eax,0x22
1000be8d:	83 c4 30             	add    esp,0x30
1000be90:	5b                   	pop    ebx
1000be91:	5e                   	pop    esi
1000be92:	5f                   	pop    edi
1000be93:	c3                   	ret    

1000be94 <spng_set_chrm_int>:
1000be94:	57                   	push   edi
1000be95:	56                   	push   esi
1000be96:	53                   	push   ebx
1000be97:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000be9b:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000be9f:	85 f6                	test   esi,esi
1000bea1:	74 4a                	je     1000beed <spng_set_chrm_int+0x59>
1000bea3:	85 db                	test   ebx,ebx
1000bea5:	74 46                	je     1000beed <spng_set_chrm_int+0x59>
1000bea7:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000beab:	75 0b                	jne    1000beb8 <spng_set_chrm_int+0x24>
1000bead:	b8 52 00 00 00       	mov    eax,0x52
1000beb2:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000beb6:	74 41                	je     1000bef9 <spng_set_chrm_int+0x65>
1000beb8:	31 d2                	xor    edx,edx
1000beba:	89 d8                	mov    eax,ebx
1000bebc:	e8 88 a2 ff ff       	call   10006149 <read_chunks>
1000bec1:	85 c0                	test   eax,eax
1000bec3:	75 34                	jne    1000bef9 <spng_set_chrm_int+0x65>
1000bec5:	89 f0                	mov    eax,esi
1000bec7:	e8 43 8d ff ff       	call   10004c0f <check_chrm_int>
1000becc:	85 c0                	test   eax,eax
1000bece:	75 24                	jne    1000bef4 <spng_set_chrm_int+0x60>
1000bed0:	8d bb 04 05 00 00    	lea    edi,[ebx+0x504]
1000bed6:	b9 08 00 00 00       	mov    ecx,0x8
1000bedb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bedd:	80 8b ac 00 00 00 04 	or     BYTE PTR [ebx+0xac],0x4
1000bee4:	80 8b a8 00 00 00 04 	or     BYTE PTR [ebx+0xa8],0x4
1000beeb:	eb 0c                	jmp    1000bef9 <spng_set_chrm_int+0x65>
1000beed:	b8 01 00 00 00       	mov    eax,0x1
1000bef2:	eb 05                	jmp    1000bef9 <spng_set_chrm_int+0x65>
1000bef4:	b8 22 00 00 00       	mov    eax,0x22
1000bef9:	5b                   	pop    ebx
1000befa:	5e                   	pop    esi
1000befb:	5f                   	pop    edi
1000befc:	c3                   	ret    

1000befd <spng_set_gama>:
1000befd:	57                   	push   edi
1000befe:	56                   	push   esi
1000beff:	53                   	push   ebx
1000bf00:	83 ec 20             	sub    esp,0x20
1000bf03:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000bf07:	dd 44 24 34          	fld    QWORD PTR [esp+0x34]
1000bf0b:	85 db                	test   ebx,ebx
1000bf0d:	75 09                	jne    1000bf18 <spng_set_gama+0x1b>
1000bf0f:	dd d8                	fstp   st(0)
1000bf11:	b8 01 00 00 00       	mov    eax,0x1
1000bf16:	eb 69                	jmp    1000bf81 <spng_set_gama+0x84>
1000bf18:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bf1c:	75 0b                	jne    1000bf29 <spng_set_gama+0x2c>
1000bf1e:	b8 52 00 00 00       	mov    eax,0x52
1000bf23:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bf27:	74 56                	je     1000bf7f <spng_set_gama+0x82>
1000bf29:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
1000bf2d:	31 d2                	xor    edx,edx
1000bf2f:	89 d8                	mov    eax,ebx
1000bf31:	e8 13 a2 ff ff       	call   10006149 <read_chunks>
1000bf36:	85 c0                	test   eax,eax
1000bf38:	75 47                	jne    1000bf81 <spng_set_gama+0x84>
1000bf3a:	dd 44 24 08          	fld    QWORD PTR [esp+0x8]
1000bf3e:	d8 0d 08 d8 00 10    	fmul   DWORD PTR ds:0x1000d808	1000bf40: R_386_32	.text
1000bf44:	d9 7c 24 1e          	fnstcw WORD PTR [esp+0x1e]
1000bf48:	66 8b 54 24 1e       	mov    dx,WORD PTR [esp+0x1e]
1000bf4d:	80 ce 0c             	or     dh,0xc
1000bf50:	66 89 54 24 1c       	mov    WORD PTR [esp+0x1c],dx
1000bf55:	d9 6c 24 1c          	fldcw  WORD PTR [esp+0x1c]
1000bf59:	df 7c 24 10          	fistp  QWORD PTR [esp+0x10]
1000bf5d:	d9 6c 24 1e          	fldcw  WORD PTR [esp+0x1e]
1000bf61:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000bf65:	85 f6                	test   esi,esi
1000bf67:	7e a8                	jle    1000bf11 <spng_set_gama+0x14>
1000bf69:	89 b3 7c 05 00 00    	mov    DWORD PTR [ebx+0x57c],esi
1000bf6f:	80 8b ac 00 00 00 10 	or     BYTE PTR [ebx+0xac],0x10
1000bf76:	80 8b a8 00 00 00 10 	or     BYTE PTR [ebx+0xa8],0x10
1000bf7d:	eb 02                	jmp    1000bf81 <spng_set_gama+0x84>
1000bf7f:	dd d8                	fstp   st(0)
1000bf81:	83 c4 20             	add    esp,0x20
1000bf84:	5b                   	pop    ebx
1000bf85:	5e                   	pop    esi
1000bf86:	5f                   	pop    edi
1000bf87:	c3                   	ret    

1000bf88 <spng_set_gama_int>:
1000bf88:	56                   	push   esi
1000bf89:	53                   	push   ebx
1000bf8a:	51                   	push   ecx
1000bf8b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bf8f:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bf93:	85 db                	test   ebx,ebx
1000bf95:	75 07                	jne    1000bf9e <spng_set_gama_int+0x16>
1000bf97:	b8 01 00 00 00       	mov    eax,0x1
1000bf9c:	eb 36                	jmp    1000bfd4 <spng_set_gama_int+0x4c>
1000bf9e:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bfa2:	75 0b                	jne    1000bfaf <spng_set_gama_int+0x27>
1000bfa4:	b8 52 00 00 00       	mov    eax,0x52
1000bfa9:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bfad:	74 25                	je     1000bfd4 <spng_set_gama_int+0x4c>
1000bfaf:	31 d2                	xor    edx,edx
1000bfb1:	89 d8                	mov    eax,ebx
1000bfb3:	e8 91 a1 ff ff       	call   10006149 <read_chunks>
1000bfb8:	85 c0                	test   eax,eax
1000bfba:	75 18                	jne    1000bfd4 <spng_set_gama_int+0x4c>
1000bfbc:	85 f6                	test   esi,esi
1000bfbe:	7e d7                	jle    1000bf97 <spng_set_gama_int+0xf>
1000bfc0:	89 b3 7c 05 00 00    	mov    DWORD PTR [ebx+0x57c],esi
1000bfc6:	80 8b ac 00 00 00 10 	or     BYTE PTR [ebx+0xac],0x10
1000bfcd:	80 8b a8 00 00 00 10 	or     BYTE PTR [ebx+0xa8],0x10
1000bfd4:	5a                   	pop    edx
1000bfd5:	5b                   	pop    ebx
1000bfd6:	5e                   	pop    esi
1000bfd7:	c3                   	ret    

1000bfd8 <spng_set_iccp>:
1000bfd8:	55                   	push   ebp
1000bfd9:	57                   	push   edi
1000bfda:	56                   	push   esi
1000bfdb:	53                   	push   ebx
1000bfdc:	83 ec 0c             	sub    esp,0xc
1000bfdf:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000bfe3:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
1000bfe7:	85 db                	test   ebx,ebx
1000bfe9:	74 04                	je     1000bfef <spng_set_iccp+0x17>
1000bfeb:	85 f6                	test   esi,esi
1000bfed:	75 07                	jne    1000bff6 <spng_set_iccp+0x1e>
1000bfef:	bd 01 00 00 00       	mov    ebp,0x1
1000bff4:	eb 70                	jmp    1000c066 <spng_set_iccp+0x8e>
1000bff6:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bffa:	75 0b                	jne    1000c007 <spng_set_iccp+0x2f>
1000bffc:	bd 52 00 00 00       	mov    ebp,0x52
1000c001:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c005:	74 5f                	je     1000c066 <spng_set_iccp+0x8e>
1000c007:	31 d2                	xor    edx,edx
1000c009:	89 d8                	mov    eax,ebx
1000c00b:	e8 39 a1 ff ff       	call   10006149 <read_chunks>
1000c010:	89 c5                	mov    ebp,eax
1000c012:	85 c0                	test   eax,eax
1000c014:	75 50                	jne    1000c066 <spng_set_iccp+0x8e>
1000c016:	89 f0                	mov    eax,esi
1000c018:	e8 51 91 ff ff       	call   1000516e <check_png_keyword>
1000c01d:	89 c5                	mov    ebp,eax
1000c01f:	85 c0                	test   eax,eax
1000c021:	75 3e                	jne    1000c061 <spng_set_iccp+0x89>
1000c023:	83 7e 50 00          	cmp    DWORD PTR [esi+0x50],0x0
1000c027:	74 c6                	je     1000bfef <spng_set_iccp+0x17>
1000c029:	8b 93 78 05 00 00    	mov    edx,DWORD PTR [ebx+0x578]
1000c02f:	85 d2                	test   edx,edx
1000c031:	74 11                	je     1000c044 <spng_set_iccp+0x6c>
1000c033:	f6 83 a8 00 00 00 08 	test   BYTE PTR [ebx+0xa8],0x8
1000c03a:	75 08                	jne    1000c044 <spng_set_iccp+0x6c>
1000c03c:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c03f:	e8 ec 92 ff ff       	call   10005330 <spng__free.isra.3>
1000c044:	8d bb 24 05 00 00    	lea    edi,[ebx+0x524]
1000c04a:	b9 16 00 00 00       	mov    ecx,0x16
1000c04f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c051:	80 8b ac 00 00 00 08 	or     BYTE PTR [ebx+0xac],0x8
1000c058:	80 8b a8 00 00 00 08 	or     BYTE PTR [ebx+0xa8],0x8
1000c05f:	eb 05                	jmp    1000c066 <spng_set_iccp+0x8e>
1000c061:	bd 27 00 00 00       	mov    ebp,0x27
1000c066:	89 e8                	mov    eax,ebp
1000c068:	83 c4 0c             	add    esp,0xc
1000c06b:	5b                   	pop    ebx
1000c06c:	5e                   	pop    esi
1000c06d:	5f                   	pop    edi
1000c06e:	5d                   	pop    ebp
1000c06f:	c3                   	ret    

1000c070 <spng_set_sbit>:
1000c070:	56                   	push   esi
1000c071:	53                   	push   ebx
1000c072:	51                   	push   ecx
1000c073:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c077:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c07b:	85 f6                	test   esi,esi
1000c07d:	74 04                	je     1000c083 <spng_set_sbit+0x13>
1000c07f:	85 db                	test   ebx,ebx
1000c081:	75 07                	jne    1000c08a <spng_set_sbit+0x1a>
1000c083:	b8 01 00 00 00       	mov    eax,0x1
1000c088:	eb 5b                	jmp    1000c0e5 <spng_set_sbit+0x75>
1000c08a:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c08e:	75 0b                	jne    1000c09b <spng_set_sbit+0x2b>
1000c090:	b8 52 00 00 00       	mov    eax,0x52
1000c095:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c099:	74 4a                	je     1000c0e5 <spng_set_sbit+0x75>
1000c09b:	31 d2                	xor    edx,edx
1000c09d:	89 d8                	mov    eax,ebx
1000c09f:	e8 a5 a0 ff ff       	call   10006149 <read_chunks>
1000c0a4:	85 c0                	test   eax,eax
1000c0a6:	75 3d                	jne    1000c0e5 <spng_set_sbit+0x75>
1000c0a8:	8d 93 f0 00 00 00    	lea    edx,[ebx+0xf0]
1000c0ae:	89 f0                	mov    eax,esi
1000c0b0:	e8 6e 96 ff ff       	call   10005723 <check_sbit.part.15>
1000c0b5:	85 c0                	test   eax,eax
1000c0b7:	75 ca                	jne    1000c083 <spng_set_sbit+0x13>
1000c0b9:	8a 93 ac 00 00 00    	mov    dl,BYTE PTR [ebx+0xac]
1000c0bf:	f6 c2 01             	test   dl,0x1
1000c0c2:	74 bf                	je     1000c083 <spng_set_sbit+0x13>
1000c0c4:	8b 0e                	mov    ecx,DWORD PTR [esi]
1000c0c6:	89 8b 80 05 00 00    	mov    DWORD PTR [ebx+0x580],ecx
1000c0cc:	8a 4e 04             	mov    cl,BYTE PTR [esi+0x4]
1000c0cf:	88 8b 84 05 00 00    	mov    BYTE PTR [ebx+0x584],cl
1000c0d5:	83 ca 20             	or     edx,0x20
1000c0d8:	88 93 ac 00 00 00    	mov    BYTE PTR [ebx+0xac],dl
1000c0de:	80 8b a8 00 00 00 20 	or     BYTE PTR [ebx+0xa8],0x20
1000c0e5:	5a                   	pop    edx
1000c0e6:	5b                   	pop    ebx
1000c0e7:	5e                   	pop    esi
1000c0e8:	c3                   	ret    

1000c0e9 <spng_set_srgb>:
1000c0e9:	53                   	push   ebx
1000c0ea:	83 ec 18             	sub    esp,0x18
1000c0ed:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000c0f1:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
1000c0f5:	85 db                	test   ebx,ebx
1000c0f7:	75 07                	jne    1000c100 <spng_set_srgb+0x17>
1000c0f9:	b8 01 00 00 00       	mov    eax,0x1
1000c0fe:	eb 3f                	jmp    1000c13f <spng_set_srgb+0x56>
1000c100:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c104:	75 0b                	jne    1000c111 <spng_set_srgb+0x28>
1000c106:	b8 52 00 00 00       	mov    eax,0x52
1000c10b:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c10f:	74 2e                	je     1000c13f <spng_set_srgb+0x56>
1000c111:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
1000c115:	31 d2                	xor    edx,edx
1000c117:	89 d8                	mov    eax,ebx
1000c119:	e8 2b a0 ff ff       	call   10006149 <read_chunks>
1000c11e:	85 c0                	test   eax,eax
1000c120:	75 1d                	jne    1000c13f <spng_set_srgb+0x56>
1000c122:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000c126:	80 f9 03             	cmp    cl,0x3
1000c129:	77 ce                	ja     1000c0f9 <spng_set_srgb+0x10>
1000c12b:	88 8b 85 05 00 00    	mov    BYTE PTR [ebx+0x585],cl
1000c131:	80 8b ac 00 00 00 40 	or     BYTE PTR [ebx+0xac],0x40
1000c138:	80 8b a8 00 00 00 40 	or     BYTE PTR [ebx+0xa8],0x40
1000c13f:	83 c4 18             	add    esp,0x18
1000c142:	5b                   	pop    ebx
1000c143:	c3                   	ret    

1000c144 <spng_set_text>:
1000c144:	55                   	push   ebp
1000c145:	57                   	push   edi
1000c146:	56                   	push   esi
1000c147:	53                   	push   ebx
1000c148:	83 ec 1c             	sub    esp,0x1c
1000c14b:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000c14f:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000c153:	85 ed                	test   ebp,ebp
1000c155:	0f 94 c2             	sete   dl
1000c158:	85 db                	test   ebx,ebx
1000c15a:	0f 94 c0             	sete   al
1000c15d:	08 c2                	or     dl,al
1000c15f:	75 07                	jne    1000c168 <spng_set_text+0x24>
1000c161:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c166:	75 0d                	jne    1000c175 <spng_set_text+0x31>
1000c168:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [esp+0x4],0x1
1000c170:	e9 11 02 00 00       	jmp    1000c386 <spng_set_text+0x242>
1000c175:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c179:	75 12                	jne    1000c18d <spng_set_text+0x49>
1000c17b:	c7 44 24 04 52 00 00 00 	mov    DWORD PTR [esp+0x4],0x52
1000c183:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c187:	0f 84 f9 01 00 00    	je     1000c386 <spng_set_text+0x242>
1000c18d:	31 d2                	xor    edx,edx
1000c18f:	89 d8                	mov    eax,ebx
1000c191:	e8 b3 9f ff ff       	call   10006149 <read_chunks>
1000c196:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000c19a:	85 c0                	test   eax,eax
1000c19c:	0f 85 e4 01 00 00    	jne    1000c386 <spng_set_text+0x242>
1000c1a2:	89 ee                	mov    esi,ebp
1000c1a4:	31 ff                	xor    edi,edi
1000c1a6:	89 f0                	mov    eax,esi
1000c1a8:	e8 c1 8f ff ff       	call   1000516e <check_png_keyword>
1000c1ad:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000c1b1:	85 c0                	test   eax,eax
1000c1b3:	0f 85 89 01 00 00    	jne    1000c342 <spng_set_text+0x1fe>
1000c1b9:	8b 56 54             	mov    edx,DWORD PTR [esi+0x54]
1000c1bc:	85 d2                	test   edx,edx
1000c1be:	74 a8                	je     1000c168 <spng_set_text+0x24>
1000c1c0:	8b 46 58             	mov    eax,DWORD PTR [esi+0x58]
1000c1c3:	85 c0                	test   eax,eax
1000c1c5:	74 a1                	je     1000c168 <spng_set_text+0x24>
1000c1c7:	8b 4e 50             	mov    ecx,DWORD PTR [esi+0x50]
1000c1ca:	83 f9 01             	cmp    ecx,0x1
1000c1cd:	75 11                	jne    1000c1e0 <spng_set_text+0x9c>
1000c1cf:	f6 43 74 10          	test   BYTE PTR [ebx+0x74],0x10
1000c1d3:	74 5f                	je     1000c234 <spng_set_text+0xf0>
1000c1d5:	e8 9e 96 ff ff       	call   10005878 <check_png_text>
1000c1da:	85 c0                	test   eax,eax
1000c1dc:	74 56                	je     1000c234 <spng_set_text+0xf0>
1000c1de:	eb 88                	jmp    1000c168 <spng_set_text+0x24>
1000c1e0:	83 f9 02             	cmp    ecx,0x2
1000c1e3:	75 1e                	jne    1000c203 <spng_set_text+0xbf>
1000c1e5:	f6 43 74 10          	test   BYTE PTR [ebx+0x74],0x10
1000c1e9:	74 0d                	je     1000c1f8 <spng_set_text+0xb4>
1000c1eb:	e8 88 96 ff ff       	call   10005878 <check_png_text>
1000c1f0:	85 c0                	test   eax,eax
1000c1f2:	0f 85 70 ff ff ff    	jne    1000c168 <spng_set_text+0x24>
1000c1f8:	80 7e 5d 00          	cmp    BYTE PTR [esi+0x5d],0x0
1000c1fc:	74 36                	je     1000c234 <spng_set_text+0xf0>
1000c1fe:	e9 49 01 00 00       	jmp    1000c34c <spng_set_text+0x208>
1000c203:	83 f9 03             	cmp    ecx,0x3
1000c206:	0f 85 5c ff ff ff    	jne    1000c168 <spng_set_text+0x24>
1000c20c:	80 7e 5c 01          	cmp    BYTE PTR [esi+0x5c],0x1
1000c210:	0f 87 40 01 00 00    	ja     1000c356 <spng_set_text+0x212>
1000c216:	80 7e 5d 00          	cmp    BYTE PTR [esi+0x5d],0x0
1000c21a:	0f 85 40 01 00 00    	jne    1000c360 <spng_set_text+0x21c>
1000c220:	83 7e 60 00          	cmp    DWORD PTR [esi+0x60],0x0
1000c224:	0f 84 40 01 00 00    	je     1000c36a <spng_set_text+0x226>
1000c22a:	83 7e 64 00          	cmp    DWORD PTR [esi+0x64],0x0
1000c22e:	0f 84 40 01 00 00    	je     1000c374 <spng_set_text+0x230>
1000c234:	47                   	inc    edi
1000c235:	83 c6 68             	add    esi,0x68
1000c238:	39 7c 24 38          	cmp    DWORD PTR [esp+0x38],edi
1000c23c:	0f 85 64 ff ff ff    	jne    1000c1a6 <spng_set_text+0x62>
1000c242:	50                   	push   eax
1000c243:	50                   	push   eax
1000c244:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
1000c248:	6a 70                	push   0x70
1000c24a:	ff 53 60             	call   DWORD PTR [ebx+0x60]
1000c24d:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000c251:	83 c4 10             	add    esp,0x10
1000c254:	83 7c 24 08 00       	cmp    DWORD PTR [esp+0x8],0x0
1000c259:	0f 84 1f 01 00 00    	je     1000c37e <spng_set_text+0x23a>
1000c25f:	31 ff                	xor    edi,edi
1000c261:	83 bb 8c 05 00 00 00 	cmp    DWORD PTR [ebx+0x58c],0x0
1000c268:	74 45                	je     1000c2af <spng_set_text+0x16b>
1000c26a:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
1000c270:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c273:	39 bb 88 05 00 00    	cmp    DWORD PTR [ebx+0x588],edi
1000c279:	76 2f                	jbe    1000c2aa <spng_set_text+0x166>
1000c27b:	80 bb a8 00 00 00 00 	cmp    BYTE PTR [ebx+0xa8],0x0
1000c282:	78 26                	js     1000c2aa <spng_set_text+0x166>
1000c284:	6b f7 70             	imul   esi,edi,0x70
1000c287:	8b 54 32 04          	mov    edx,DWORD PTR [edx+esi*1+0x4]
1000c28b:	e8 a0 90 ff ff       	call   10005330 <spng__free.isra.3>
1000c290:	03 b3 8c 05 00 00    	add    esi,DWORD PTR [ebx+0x58c]
1000c296:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
1000c29a:	74 0b                	je     1000c2a7 <spng_set_text+0x163>
1000c29c:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
1000c29f:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c2a2:	e8 89 90 ff ff       	call   10005330 <spng__free.isra.3>
1000c2a7:	47                   	inc    edi
1000c2a8:	eb c0                	jmp    1000c26a <spng_set_text+0x126>
1000c2aa:	e8 81 90 ff ff       	call   10005330 <spng__free.isra.3>
1000c2af:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000c2b3:	8d 50 20             	lea    edx,[eax+0x20]
1000c2b6:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000c2be:	31 c0                	xor    eax,eax
1000c2c0:	8b 4d 50             	mov    ecx,DWORD PTR [ebp+0x50]
1000c2c3:	89 4a e0             	mov    DWORD PTR [edx-0x20],ecx
1000c2c6:	89 52 e4             	mov    DWORD PTR [edx-0x1c],edx
1000c2c9:	83 c9 ff             	or     ecx,0xffffffff
1000c2cc:	89 ef                	mov    edi,ebp
1000c2ce:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000c2d0:	f7 d1                	not    ecx
1000c2d2:	49                   	dec    ecx
1000c2d3:	89 d7                	mov    edi,edx
1000c2d5:	89 ee                	mov    esi,ebp
1000c2d7:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000c2d9:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
1000c2dc:	89 4a e8             	mov    DWORD PTR [edx-0x18],ecx
1000c2df:	8b 4d 54             	mov    ecx,DWORD PTR [ebp+0x54]
1000c2e2:	89 4a ec             	mov    DWORD PTR [edx-0x14],ecx
1000c2e5:	8b 4d 50             	mov    ecx,DWORD PTR [ebp+0x50]
1000c2e8:	83 f9 02             	cmp    ecx,0x2
1000c2eb:	75 06                	jne    1000c2f3 <spng_set_text+0x1af>
1000c2ed:	c6 42 f0 01          	mov    BYTE PTR [edx-0x10],0x1
1000c2f1:	eb 17                	jmp    1000c30a <spng_set_text+0x1c6>
1000c2f3:	83 f9 03             	cmp    ecx,0x3
1000c2f6:	75 12                	jne    1000c30a <spng_set_text+0x1c6>
1000c2f8:	8a 4d 5c             	mov    cl,BYTE PTR [ebp+0x5c]
1000c2fb:	88 4a f0             	mov    BYTE PTR [edx-0x10],cl
1000c2fe:	8b 4d 60             	mov    ecx,DWORD PTR [ebp+0x60]
1000c301:	89 4a f4             	mov    DWORD PTR [edx-0xc],ecx
1000c304:	8b 4d 64             	mov    ecx,DWORD PTR [ebp+0x64]
1000c307:	89 4a f8             	mov    DWORD PTR [edx-0x8],ecx
1000c30a:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
1000c30e:	83 c5 68             	add    ebp,0x68
1000c311:	83 c2 70             	add    edx,0x70
1000c314:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
1000c318:	39 7c 24 38          	cmp    DWORD PTR [esp+0x38],edi
1000c31c:	77 a2                	ja     1000c2c0 <spng_set_text+0x17c>
1000c31e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000c322:	89 83 8c 05 00 00    	mov    DWORD PTR [ebx+0x58c],eax
1000c328:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c32c:	89 83 88 05 00 00    	mov    DWORD PTR [ebx+0x588],eax
1000c332:	80 8b ac 00 00 00 80 	or     BYTE PTR [ebx+0xac],0x80
1000c339:	80 8b a8 00 00 00 80 	or     BYTE PTR [ebx+0xa8],0x80
1000c340:	eb 44                	jmp    1000c386 <spng_set_text+0x242>
1000c342:	c7 44 24 04 2c 00 00 00 	mov    DWORD PTR [esp+0x4],0x2c
1000c34a:	eb 3a                	jmp    1000c386 <spng_set_text+0x242>
1000c34c:	c7 44 24 04 2e 00 00 00 	mov    DWORD PTR [esp+0x4],0x2e
1000c354:	eb 30                	jmp    1000c386 <spng_set_text+0x242>
1000c356:	c7 44 24 04 30 00 00 00 	mov    DWORD PTR [esp+0x4],0x30
1000c35e:	eb 26                	jmp    1000c386 <spng_set_text+0x242>
1000c360:	c7 44 24 04 31 00 00 00 	mov    DWORD PTR [esp+0x4],0x31
1000c368:	eb 1c                	jmp    1000c386 <spng_set_text+0x242>
1000c36a:	c7 44 24 04 32 00 00 00 	mov    DWORD PTR [esp+0x4],0x32
1000c372:	eb 12                	jmp    1000c386 <spng_set_text+0x242>
1000c374:	c7 44 24 04 33 00 00 00 	mov    DWORD PTR [esp+0x4],0x33
1000c37c:	eb 08                	jmp    1000c386 <spng_set_text+0x242>
1000c37e:	c7 44 24 04 02 00 00 00 	mov    DWORD PTR [esp+0x4],0x2
1000c386:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000c38a:	83 c4 1c             	add    esp,0x1c
1000c38d:	5b                   	pop    ebx
1000c38e:	5e                   	pop    esi
1000c38f:	5f                   	pop    edi
1000c390:	5d                   	pop    ebp
1000c391:	c3                   	ret    

1000c392 <spng_set_bkgd>:
1000c392:	57                   	push   edi
1000c393:	56                   	push   esi
1000c394:	53                   	push   ebx
1000c395:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c399:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c39d:	85 db                	test   ebx,ebx
1000c39f:	74 04                	je     1000c3a5 <spng_set_bkgd+0x13>
1000c3a1:	85 f6                	test   esi,esi
1000c3a3:	75 0a                	jne    1000c3af <spng_set_bkgd+0x1d>
1000c3a5:	b8 01 00 00 00       	mov    eax,0x1
1000c3aa:	e9 ae 00 00 00       	jmp    1000c45d <spng_set_bkgd+0xcb>
1000c3af:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c3b3:	75 0f                	jne    1000c3c4 <spng_set_bkgd+0x32>
1000c3b5:	b8 52 00 00 00       	mov    eax,0x52
1000c3ba:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c3be:	0f 84 99 00 00 00    	je     1000c45d <spng_set_bkgd+0xcb>
1000c3c4:	31 d2                	xor    edx,edx
1000c3c6:	89 d8                	mov    eax,ebx
1000c3c8:	e8 7c 9d ff ff       	call   10006149 <read_chunks>
1000c3cd:	85 c0                	test   eax,eax
1000c3cf:	0f 85 88 00 00 00    	jne    1000c45d <spng_set_bkgd+0xcb>
1000c3d5:	8b bb ac 00 00 00    	mov    edi,DWORD PTR [ebx+0xac]
1000c3db:	f7 c7 01 00 00 00    	test   edi,0x1
1000c3e1:	74 c2                	je     1000c3a5 <spng_set_bkgd+0x13>
1000c3e3:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000c3e9:	88 d1                	mov    cl,dl
1000c3eb:	80 e1 fb             	and    cl,0xfb
1000c3ee:	75 0c                	jne    1000c3fc <spng_set_bkgd+0x6a>
1000c3f0:	66 8b 16             	mov    dx,WORD PTR [esi]
1000c3f3:	66 89 93 90 05 00 00 	mov    WORD PTR [ebx+0x590],dx
1000c3fa:	eb 45                	jmp    1000c441 <spng_set_bkgd+0xaf>
1000c3fc:	80 f9 02             	cmp    cl,0x2
1000c3ff:	75 23                	jne    1000c424 <spng_set_bkgd+0x92>
1000c401:	66 8b 56 02          	mov    dx,WORD PTR [esi+0x2]
1000c405:	66 89 93 92 05 00 00 	mov    WORD PTR [ebx+0x592],dx
1000c40c:	66 8b 56 04          	mov    dx,WORD PTR [esi+0x4]
1000c410:	66 89 93 94 05 00 00 	mov    WORD PTR [ebx+0x594],dx
1000c417:	66 8b 56 06          	mov    dx,WORD PTR [esi+0x6]
1000c41b:	66 89 93 96 05 00 00 	mov    WORD PTR [ebx+0x596],dx
1000c422:	eb 1d                	jmp    1000c441 <spng_set_bkgd+0xaf>
1000c424:	80 fa 03             	cmp    dl,0x3
1000c427:	75 18                	jne    1000c441 <spng_set_bkgd+0xaf>
1000c429:	83 e7 02             	and    edi,0x2
1000c42c:	74 23                	je     1000c451 <spng_set_bkgd+0xbf>
1000c42e:	0f b7 4e 08          	movzx  ecx,WORD PTR [esi+0x8]
1000c432:	3b 8b 00 01 00 00    	cmp    ecx,DWORD PTR [ebx+0x100]
1000c438:	73 1e                	jae    1000c458 <spng_set_bkgd+0xc6>
1000c43a:	66 89 8b 98 05 00 00 	mov    WORD PTR [ebx+0x598],cx
1000c441:	80 8b ad 00 00 00 01 	or     BYTE PTR [ebx+0xad],0x1
1000c448:	80 8b a9 00 00 00 01 	or     BYTE PTR [ebx+0xa9],0x1
1000c44f:	eb 0c                	jmp    1000c45d <spng_set_bkgd+0xcb>
1000c451:	b8 34 00 00 00       	mov    eax,0x34
1000c456:	eb 05                	jmp    1000c45d <spng_set_bkgd+0xcb>
1000c458:	b8 35 00 00 00       	mov    eax,0x35
1000c45d:	5b                   	pop    ebx
1000c45e:	5e                   	pop    esi
1000c45f:	5f                   	pop    edi
1000c460:	c3                   	ret    

1000c461 <spng_set_hist>:
1000c461:	57                   	push   edi
1000c462:	56                   	push   esi
1000c463:	53                   	push   ebx
1000c464:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c468:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c46c:	85 f6                	test   esi,esi
1000c46e:	74 48                	je     1000c4b8 <spng_set_hist+0x57>
1000c470:	85 db                	test   ebx,ebx
1000c472:	74 44                	je     1000c4b8 <spng_set_hist+0x57>
1000c474:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c478:	75 0b                	jne    1000c485 <spng_set_hist+0x24>
1000c47a:	b8 52 00 00 00       	mov    eax,0x52
1000c47f:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c483:	74 3f                	je     1000c4c4 <spng_set_hist+0x63>
1000c485:	31 d2                	xor    edx,edx
1000c487:	89 d8                	mov    eax,ebx
1000c489:	e8 bb 9c ff ff       	call   10006149 <read_chunks>
1000c48e:	85 c0                	test   eax,eax
1000c490:	75 32                	jne    1000c4c4 <spng_set_hist+0x63>
1000c492:	f6 83 ac 00 00 00 02 	test   BYTE PTR [ebx+0xac],0x2
1000c499:	74 24                	je     1000c4bf <spng_set_hist+0x5e>
1000c49b:	8d bb 9a 05 00 00    	lea    edi,[ebx+0x59a]
1000c4a1:	b9 80 00 00 00       	mov    ecx,0x80
1000c4a6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c4a8:	80 8b ad 00 00 00 02 	or     BYTE PTR [ebx+0xad],0x2
1000c4af:	80 8b a9 00 00 00 02 	or     BYTE PTR [ebx+0xa9],0x2
1000c4b6:	eb 0c                	jmp    1000c4c4 <spng_set_hist+0x63>
1000c4b8:	b8 01 00 00 00       	mov    eax,0x1
1000c4bd:	eb 05                	jmp    1000c4c4 <spng_set_hist+0x63>
1000c4bf:	b8 36 00 00 00       	mov    eax,0x36
1000c4c4:	5b                   	pop    ebx
1000c4c5:	5e                   	pop    esi
1000c4c6:	5f                   	pop    edi
1000c4c7:	c3                   	ret    

1000c4c8 <spng_set_phys>:
1000c4c8:	57                   	push   edi
1000c4c9:	56                   	push   esi
1000c4ca:	53                   	push   ebx
1000c4cb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c4cf:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c4d3:	85 f6                	test   esi,esi
1000c4d5:	74 4a                	je     1000c521 <spng_set_phys+0x59>
1000c4d7:	85 db                	test   ebx,ebx
1000c4d9:	74 46                	je     1000c521 <spng_set_phys+0x59>
1000c4db:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c4df:	75 0b                	jne    1000c4ec <spng_set_phys+0x24>
1000c4e1:	b8 52 00 00 00       	mov    eax,0x52
1000c4e6:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c4ea:	74 41                	je     1000c52d <spng_set_phys+0x65>
1000c4ec:	31 d2                	xor    edx,edx
1000c4ee:	89 d8                	mov    eax,ebx
1000c4f0:	e8 54 9c ff ff       	call   10006149 <read_chunks>
1000c4f5:	85 c0                	test   eax,eax
1000c4f7:	75 34                	jne    1000c52d <spng_set_phys+0x65>
1000c4f9:	89 f0                	mov    eax,esi
1000c4fb:	e8 1b 93 ff ff       	call   1000581b <check_phys>
1000c500:	85 c0                	test   eax,eax
1000c502:	75 24                	jne    1000c528 <spng_set_phys+0x60>
1000c504:	8d bb a8 08 00 00    	lea    edi,[ebx+0x8a8]
1000c50a:	b9 03 00 00 00       	mov    ecx,0x3
1000c50f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c511:	80 8b ad 00 00 00 08 	or     BYTE PTR [ebx+0xad],0x8
1000c518:	80 8b a9 00 00 00 08 	or     BYTE PTR [ebx+0xa9],0x8
1000c51f:	eb 0c                	jmp    1000c52d <spng_set_phys+0x65>
1000c521:	b8 01 00 00 00       	mov    eax,0x1
1000c526:	eb 05                	jmp    1000c52d <spng_set_phys+0x65>
1000c528:	b8 37 00 00 00       	mov    eax,0x37
1000c52d:	5b                   	pop    ebx
1000c52e:	5e                   	pop    esi
1000c52f:	5f                   	pop    edi
1000c530:	c3                   	ret    

1000c531 <spng_set_splt>:
1000c531:	55                   	push   ebp
1000c532:	57                   	push   edi
1000c533:	56                   	push   esi
1000c534:	53                   	push   ebx
1000c535:	83 ec 1c             	sub    esp,0x1c
1000c538:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000c53c:	83 7c 24 34 00       	cmp    DWORD PTR [esp+0x34],0x0
1000c541:	0f 94 c2             	sete   dl
1000c544:	85 db                	test   ebx,ebx
1000c546:	0f 94 c0             	sete   al
1000c549:	08 c2                	or     dl,al
1000c54b:	0f 85 c7 00 00 00    	jne    1000c618 <spng_set_splt+0xe7>
1000c551:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c556:	0f 84 bc 00 00 00    	je     1000c618 <spng_set_splt+0xe7>
1000c55c:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c560:	75 0f                	jne    1000c571 <spng_set_splt+0x40>
1000c562:	be 52 00 00 00       	mov    esi,0x52
1000c567:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c56b:	0f 84 ba 00 00 00    	je     1000c62b <spng_set_splt+0xfa>
1000c571:	31 d2                	xor    edx,edx
1000c573:	89 d8                	mov    eax,ebx
1000c575:	e8 cf 9b ff ff       	call   10006149 <read_chunks>
1000c57a:	89 c6                	mov    esi,eax
1000c57c:	85 c0                	test   eax,eax
1000c57e:	0f 85 a7 00 00 00    	jne    1000c62b <spng_set_splt+0xfa>
1000c584:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000c588:	31 ed                	xor    ebp,ebp
1000c58a:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000c58e:	89 f8                	mov    eax,edi
1000c590:	e8 d9 8b ff ff       	call   1000516e <check_png_keyword>
1000c595:	89 c6                	mov    esi,eax
1000c597:	85 c0                	test   eax,eax
1000c599:	0f 85 80 00 00 00    	jne    1000c61f <spng_set_splt+0xee>
1000c59f:	83 c7 5c             	add    edi,0x5c
1000c5a2:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000c5a6:	8a 41 50             	mov    al,BYTE PTR [ecx+0x50]
1000c5a9:	83 e8 08             	sub    eax,0x8
1000c5ac:	a8 f7                	test   al,0xf7
1000c5ae:	75 76                	jne    1000c626 <spng_set_splt+0xf5>
1000c5b0:	45                   	inc    ebp
1000c5b1:	39 6c 24 38          	cmp    DWORD PTR [esp+0x38],ebp
1000c5b5:	75 d3                	jne    1000c58a <spng_set_splt+0x59>
1000c5b7:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
1000c5be:	74 34                	je     1000c5f4 <spng_set_splt+0xc3>
1000c5c0:	f6 83 a9 00 00 00 10 	test   BYTE PTR [ebx+0xa9],0x10
1000c5c7:	75 2b                	jne    1000c5f4 <spng_set_splt+0xc3>
1000c5c9:	31 ff                	xor    edi,edi
1000c5cb:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
1000c5d1:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c5d4:	39 bb b4 08 00 00    	cmp    DWORD PTR [ebx+0x8b4],edi
1000c5da:	76 13                	jbe    1000c5ef <spng_set_splt+0xbe>
1000c5dc:	6b cf 5c             	imul   ecx,edi,0x5c
1000c5df:	8b 54 0a 58          	mov    edx,DWORD PTR [edx+ecx*1+0x58]
1000c5e3:	85 d2                	test   edx,edx
1000c5e5:	74 05                	je     1000c5ec <spng_set_splt+0xbb>
1000c5e7:	e8 44 8d ff ff       	call   10005330 <spng__free.isra.3>
1000c5ec:	47                   	inc    edi
1000c5ed:	eb dc                	jmp    1000c5cb <spng_set_splt+0x9a>
1000c5ef:	e8 3c 8d ff ff       	call   10005330 <spng__free.isra.3>
1000c5f4:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000c5f8:	89 83 b8 08 00 00    	mov    DWORD PTR [ebx+0x8b8],eax
1000c5fe:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c602:	89 83 b4 08 00 00    	mov    DWORD PTR [ebx+0x8b4],eax
1000c608:	80 8b ad 00 00 00 10 	or     BYTE PTR [ebx+0xad],0x10
1000c60f:	80 8b a9 00 00 00 10 	or     BYTE PTR [ebx+0xa9],0x10
1000c616:	eb 13                	jmp    1000c62b <spng_set_splt+0xfa>
1000c618:	be 01 00 00 00       	mov    esi,0x1
1000c61d:	eb 0c                	jmp    1000c62b <spng_set_splt+0xfa>
1000c61f:	be 38 00 00 00       	mov    esi,0x38
1000c624:	eb 05                	jmp    1000c62b <spng_set_splt+0xfa>
1000c626:	be 3a 00 00 00       	mov    esi,0x3a
1000c62b:	89 f0                	mov    eax,esi
1000c62d:	83 c4 1c             	add    esp,0x1c
1000c630:	5b                   	pop    ebx
1000c631:	5e                   	pop    esi
1000c632:	5f                   	pop    edi
1000c633:	5d                   	pop    ebp
1000c634:	c3                   	ret    

1000c635 <spng_set_time>:
1000c635:	56                   	push   esi
1000c636:	53                   	push   ebx
1000c637:	51                   	push   ecx
1000c638:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c63c:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c640:	85 f6                	test   esi,esi
1000c642:	74 4e                	je     1000c692 <spng_set_time+0x5d>
1000c644:	85 db                	test   ebx,ebx
1000c646:	74 4a                	je     1000c692 <spng_set_time+0x5d>
1000c648:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c64c:	75 0b                	jne    1000c659 <spng_set_time+0x24>
1000c64e:	b8 52 00 00 00       	mov    eax,0x52
1000c653:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c657:	74 45                	je     1000c69e <spng_set_time+0x69>
1000c659:	31 d2                	xor    edx,edx
1000c65b:	89 d8                	mov    eax,ebx
1000c65d:	e8 e7 9a ff ff       	call   10006149 <read_chunks>
1000c662:	85 c0                	test   eax,eax
1000c664:	75 38                	jne    1000c69e <spng_set_time+0x69>
1000c666:	89 f0                	mov    eax,esi
1000c668:	e8 d3 91 ff ff       	call   10005840 <check_time>
1000c66d:	85 c0                	test   eax,eax
1000c66f:	75 28                	jne    1000c699 <spng_set_time+0x64>
1000c671:	8b 16                	mov    edx,DWORD PTR [esi]
1000c673:	8b 4e 04             	mov    ecx,DWORD PTR [esi+0x4]
1000c676:	89 93 bc 08 00 00    	mov    DWORD PTR [ebx+0x8bc],edx
1000c67c:	89 8b c0 08 00 00    	mov    DWORD PTR [ebx+0x8c0],ecx
1000c682:	80 8b ad 00 00 00 20 	or     BYTE PTR [ebx+0xad],0x20
1000c689:	80 8b a9 00 00 00 20 	or     BYTE PTR [ebx+0xa9],0x20
1000c690:	eb 0c                	jmp    1000c69e <spng_set_time+0x69>
1000c692:	b8 01 00 00 00       	mov    eax,0x1
1000c697:	eb 05                	jmp    1000c69e <spng_set_time+0x69>
1000c699:	b8 3b 00 00 00       	mov    eax,0x3b
1000c69e:	5a                   	pop    edx
1000c69f:	5b                   	pop    ebx
1000c6a0:	5e                   	pop    esi
1000c6a1:	c3                   	ret    

1000c6a2 <spng_set_unknown_chunks>:
1000c6a2:	55                   	push   ebp
1000c6a3:	57                   	push   edi
1000c6a4:	56                   	push   esi
1000c6a5:	53                   	push   ebx
1000c6a6:	83 ec 1c             	sub    esp,0x1c
1000c6a9:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000c6ad:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000c6b1:	85 ff                	test   edi,edi
1000c6b3:	0f 94 c2             	sete   dl
1000c6b6:	85 db                	test   ebx,ebx
1000c6b8:	0f 94 c0             	sete   al
1000c6bb:	08 c2                	or     dl,al
1000c6bd:	75 07                	jne    1000c6c6 <spng_set_unknown_chunks+0x24>
1000c6bf:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c6c4:	75 0a                	jne    1000c6d0 <spng_set_unknown_chunks+0x2e>
1000c6c6:	be 01 00 00 00       	mov    esi,0x1
1000c6cb:	e9 d0 00 00 00       	jmp    1000c7a0 <spng_set_unknown_chunks+0xfe>
1000c6d0:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c6d4:	75 0f                	jne    1000c6e5 <spng_set_unknown_chunks+0x43>
1000c6d6:	be 52 00 00 00       	mov    esi,0x52
1000c6db:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c6df:	0f 84 bb 00 00 00    	je     1000c7a0 <spng_set_unknown_chunks+0xfe>
1000c6e5:	31 d2                	xor    edx,edx
1000c6e7:	89 d8                	mov    eax,ebx
1000c6e9:	e8 5b 9a ff ff       	call   10006149 <read_chunks>
1000c6ee:	89 c6                	mov    esi,eax
1000c6f0:	85 c0                	test   eax,eax
1000c6f2:	0f 85 a8 00 00 00    	jne    1000c7a0 <spng_set_unknown_chunks+0xfe>
1000c6f8:	8d 47 04             	lea    eax,[edi+0x4]
1000c6fb:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000c703:	bd 01 00 00 00       	mov    ebp,0x1
1000c708:	83 38 00             	cmp    DWORD PTR [eax],0x0
1000c70b:	0f 88 8a 00 00 00    	js     1000c79b <spng_set_unknown_chunks+0xf9>
1000c711:	74 06                	je     1000c719 <spng_set_unknown_chunks+0x77>
1000c713:	83 78 04 00          	cmp    DWORD PTR [eax+0x4],0x0
1000c717:	74 ad                	je     1000c6c6 <spng_set_unknown_chunks+0x24>
1000c719:	8b 48 08             	mov    ecx,DWORD PTR [eax+0x8]
1000c71c:	83 f9 08             	cmp    ecx,0x8
1000c71f:	77 a5                	ja     1000c6c6 <spng_set_unknown_chunks+0x24>
1000c721:	83 c0 10             	add    eax,0x10
1000c724:	89 ea                	mov    edx,ebp
1000c726:	d3 e2                	shl    edx,cl
1000c728:	89 d1                	mov    ecx,edx
1000c72a:	81 e1 06 01 00 00    	and    ecx,0x106
1000c730:	74 94                	je     1000c6c6 <spng_set_unknown_chunks+0x24>
1000c732:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
1000c736:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000c73a:	39 4c 24 38          	cmp    DWORD PTR [esp+0x38],ecx
1000c73e:	75 c8                	jne    1000c708 <spng_set_unknown_chunks+0x66>
1000c740:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000c747:	74 32                	je     1000c77b <spng_set_unknown_chunks+0xd9>
1000c749:	f6 83 aa 00 00 00 01 	test   BYTE PTR [ebx+0xaa],0x1
1000c750:	75 29                	jne    1000c77b <spng_set_unknown_chunks+0xd9>
1000c752:	31 ed                	xor    ebp,ebp
1000c754:	8b 93 dc 08 00 00    	mov    edx,DWORD PTR [ebx+0x8dc]
1000c75a:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c75d:	39 ab d8 08 00 00    	cmp    DWORD PTR [ebx+0x8d8],ebp
1000c763:	76 11                	jbe    1000c776 <spng_set_unknown_chunks+0xd4>
1000c765:	89 e9                	mov    ecx,ebp
1000c767:	c1 e1 04             	shl    ecx,0x4
1000c76a:	8b 54 0a 08          	mov    edx,DWORD PTR [edx+ecx*1+0x8]
1000c76e:	e8 bd 8b ff ff       	call   10005330 <spng__free.isra.3>
1000c773:	45                   	inc    ebp
1000c774:	eb de                	jmp    1000c754 <spng_set_unknown_chunks+0xb2>
1000c776:	e8 b5 8b ff ff       	call   10005330 <spng__free.isra.3>
1000c77b:	89 bb dc 08 00 00    	mov    DWORD PTR [ebx+0x8dc],edi
1000c781:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c785:	89 83 d8 08 00 00    	mov    DWORD PTR [ebx+0x8d8],eax
1000c78b:	80 8b ae 00 00 00 01 	or     BYTE PTR [ebx+0xae],0x1
1000c792:	80 8b aa 00 00 00 01 	or     BYTE PTR [ebx+0xaa],0x1
1000c799:	eb 05                	jmp    1000c7a0 <spng_set_unknown_chunks+0xfe>
1000c79b:	be 4f 00 00 00       	mov    esi,0x4f
1000c7a0:	89 f0                	mov    eax,esi
1000c7a2:	83 c4 1c             	add    esp,0x1c
1000c7a5:	5b                   	pop    ebx
1000c7a6:	5e                   	pop    esi
1000c7a7:	5f                   	pop    edi
1000c7a8:	5d                   	pop    ebp
1000c7a9:	c3                   	ret    

1000c7aa <spng_set_offs>:
1000c7aa:	57                   	push   edi
1000c7ab:	56                   	push   esi
1000c7ac:	53                   	push   ebx
1000c7ad:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c7b1:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c7b5:	85 f6                	test   esi,esi
1000c7b7:	74 45                	je     1000c7fe <spng_set_offs+0x54>
1000c7b9:	85 db                	test   ebx,ebx
1000c7bb:	74 41                	je     1000c7fe <spng_set_offs+0x54>
1000c7bd:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c7c1:	75 0b                	jne    1000c7ce <spng_set_offs+0x24>
1000c7c3:	b8 52 00 00 00       	mov    eax,0x52
1000c7c8:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c7cc:	74 3c                	je     1000c80a <spng_set_offs+0x60>
1000c7ce:	31 d2                	xor    edx,edx
1000c7d0:	89 d8                	mov    eax,ebx
1000c7d2:	e8 72 99 ff ff       	call   10006149 <read_chunks>
1000c7d7:	85 c0                	test   eax,eax
1000c7d9:	75 2f                	jne    1000c80a <spng_set_offs+0x60>
1000c7db:	80 7e 08 01          	cmp    BYTE PTR [esi+0x8],0x1
1000c7df:	77 24                	ja     1000c805 <spng_set_offs+0x5b>
1000c7e1:	8d bb c4 08 00 00    	lea    edi,[ebx+0x8c4]
1000c7e7:	b9 03 00 00 00       	mov    ecx,0x3
1000c7ec:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c7ee:	80 8b ad 00 00 00 40 	or     BYTE PTR [ebx+0xad],0x40
1000c7f5:	80 8b a9 00 00 00 40 	or     BYTE PTR [ebx+0xa9],0x40
1000c7fc:	eb 0c                	jmp    1000c80a <spng_set_offs+0x60>
1000c7fe:	b8 01 00 00 00       	mov    eax,0x1
1000c803:	eb 05                	jmp    1000c80a <spng_set_offs+0x60>
1000c805:	b8 3c 00 00 00       	mov    eax,0x3c
1000c80a:	5b                   	pop    ebx
1000c80b:	5e                   	pop    esi
1000c80c:	5f                   	pop    edi
1000c80d:	c3                   	ret    

1000c80e <spng_set_exif>:
1000c80e:	57                   	push   edi
1000c80f:	56                   	push   esi
1000c810:	53                   	push   ebx
1000c811:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c815:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000c819:	85 db                	test   ebx,ebx
1000c81b:	74 6d                	je     1000c88a <spng_set_exif+0x7c>
1000c81d:	85 ff                	test   edi,edi
1000c81f:	74 69                	je     1000c88a <spng_set_exif+0x7c>
1000c821:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c825:	75 0b                	jne    1000c832 <spng_set_exif+0x24>
1000c827:	be 52 00 00 00       	mov    esi,0x52
1000c82c:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c830:	74 64                	je     1000c896 <spng_set_exif+0x88>
1000c832:	31 d2                	xor    edx,edx
1000c834:	89 d8                	mov    eax,ebx
1000c836:	e8 0e 99 ff ff       	call   10006149 <read_chunks>
1000c83b:	89 c6                	mov    esi,eax
1000c83d:	85 c0                	test   eax,eax
1000c83f:	75 55                	jne    1000c896 <spng_set_exif+0x88>
1000c841:	89 f8                	mov    eax,edi
1000c843:	e8 01 85 ff ff       	call   10004d49 <check_exif>
1000c848:	89 c6                	mov    esi,eax
1000c84a:	85 c0                	test   eax,eax
1000c84c:	75 43                	jne    1000c891 <spng_set_exif+0x83>
1000c84e:	8b 93 d4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d4]
1000c854:	85 d2                	test   edx,edx
1000c856:	74 11                	je     1000c869 <spng_set_exif+0x5b>
1000c858:	80 bb a9 00 00 00 00 	cmp    BYTE PTR [ebx+0xa9],0x0
1000c85f:	78 08                	js     1000c869 <spng_set_exif+0x5b>
1000c861:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c864:	e8 c7 8a ff ff       	call   10005330 <spng__free.isra.3>
1000c869:	8b 07                	mov    eax,DWORD PTR [edi]
1000c86b:	8b 57 04             	mov    edx,DWORD PTR [edi+0x4]
1000c86e:	89 83 d0 08 00 00    	mov    DWORD PTR [ebx+0x8d0],eax
1000c874:	89 93 d4 08 00 00    	mov    DWORD PTR [ebx+0x8d4],edx
1000c87a:	80 8b ad 00 00 00 80 	or     BYTE PTR [ebx+0xad],0x80
1000c881:	80 8b a9 00 00 00 80 	or     BYTE PTR [ebx+0xa9],0x80
1000c888:	eb 0c                	jmp    1000c896 <spng_set_exif+0x88>
1000c88a:	be 01 00 00 00       	mov    esi,0x1
1000c88f:	eb 05                	jmp    1000c896 <spng_set_exif+0x88>
1000c891:	be 3d 00 00 00       	mov    esi,0x3d
1000c896:	89 f0                	mov    eax,esi
1000c898:	5b                   	pop    ebx
1000c899:	5e                   	pop    esi
1000c89a:	5f                   	pop    edi
1000c89b:	c3                   	ret    

1000c89c <spng_strerror>:
1000c89c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000c8a0:	8d 50 02             	lea    edx,[eax+0x2]
1000c8a3:	b8 dd cc 00 10       	mov    eax,0x1000ccdd	1000c8a4: R_386_32	.text
1000c8a8:	83 fa 57             	cmp    edx,0x57
1000c8ab:	77 07                	ja     1000c8b4 <spng_strerror+0x18>
1000c8ad:	8b 04 95 a0 d5 00 10 	mov    eax,DWORD PTR [edx*4+0x1000d5a0]	1000c8b0: R_386_32	.text
1000c8b4:	c3                   	ret    

1000c8b5 <spng_version_string>:
1000c8b5:	b8 eb cc 00 10       	mov    eax,0x1000cceb	1000c8b6: R_386_32	.text
1000c8ba:	c3                   	ret    
1000c8bb:	90                   	nop

1000c8bc <List<NIWindow*>::insertAtHead(NIWindow*)>:
1000c8bc:	53                   	push   ebx
1000c8bd:	83 ec 14             	sub    esp,0x14
1000c8c0:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000c8c4:	6a 0c                	push   0xc
1000c8c6:	e8 fc ff ff ff       	call   1000c8c7 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	1000c8c7: R_386_PC32	malloc
1000c8cb:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
1000c8cf:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000c8d6:	89 10                	mov    DWORD PTR [eax],edx
1000c8d8:	83 c4 10             	add    esp,0x10
1000c8db:	8b 13                	mov    edx,DWORD PTR [ebx]
1000c8dd:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000c8e0:	85 d2                	test   edx,edx
1000c8e2:	74 05                	je     1000c8e9 <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
1000c8e4:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
1000c8e7:	eb 03                	jmp    1000c8ec <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
1000c8e9:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000c8ec:	89 03                	mov    DWORD PTR [ebx],eax
1000c8ee:	83 c4 08             	add    esp,0x8
1000c8f1:	5b                   	pop    ebx
1000c8f2:	c3                   	ret    
1000c8f3:	90                   	nop

1000c8f4 <List<NIWindow*>::deleteElement(NIWindow*&)>:
1000c8f4:	57                   	push   edi
1000c8f5:	56                   	push   esi
1000c8f6:	53                   	push   ebx
1000c8f7:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000c8fb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000c8ff:	8b 19                	mov    ebx,DWORD PTR [ecx]
1000c901:	85 db                	test   ebx,ebx
1000c903:	74 5e                	je     1000c963 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
1000c905:	8b 30                	mov    esi,DWORD PTR [eax]
1000c907:	89 da                	mov    edx,ebx
1000c909:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
1000c90c:	8b 3a                	mov    edi,DWORD PTR [edx]
1000c90e:	85 c0                	test   eax,eax
1000c910:	74 08                	je     1000c91a <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000c912:	39 f7                	cmp    edi,esi
1000c914:	73 04                	jae    1000c91a <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000c916:	89 c2                	mov    edx,eax
1000c918:	eb ef                	jmp    1000c909 <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
1000c91a:	39 f7                	cmp    edi,esi
1000c91c:	75 45                	jne    1000c963 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
1000c91e:	39 d3                	cmp    ebx,edx
1000c920:	75 18                	jne    1000c93a <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
1000c922:	89 01                	mov    DWORD PTR [ecx],eax
1000c924:	85 c0                	test   eax,eax
1000c926:	75 09                	jne    1000c931 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
1000c928:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
1000c92f:	eb 1e                	jmp    1000c94f <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c931:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000c938:	eb 15                	jmp    1000c94f <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c93a:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000c93d:	85 c0                	test   eax,eax
1000c93f:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000c942:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000c945:	74 05                	je     1000c94c <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
1000c947:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
1000c94a:	eb 03                	jmp    1000c94f <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c94c:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
1000c94f:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
1000c957:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
1000c95b:	5b                   	pop    ebx
1000c95c:	5e                   	pop    esi
1000c95d:	5f                   	pop    edi
1000c95e:	e9 fc ff ff ff       	jmp    1000c95f <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	1000c95f: R_386_PC32	operator delete(void*, unsigned long)
1000c963:	5b                   	pop    ebx
1000c964:	5e                   	pop    esi
1000c965:	5f                   	pop    edi
1000c966:	c3                   	ret    
1000c967:	43                   	inc    ebx
1000c968:	3a 2f                	cmp    ch,BYTE PTR [edi]
1000c96a:	42                   	inc    edx
1000c96b:	61                   	popa   
1000c96c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c96d:	61                   	popa   
1000c96e:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c96f:	61                   	popa   
1000c970:	2f                   	das    
1000c971:	53                   	push   ebx
1000c972:	79 73                	jns    1000c9e7 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
1000c974:	74 65                	je     1000c9db <List<NIWindow*>::deleteElement(NIWindow*&)+0xe7>
1000c976:	6d                   	ins    DWORD PTR es:[edi],dx
1000c977:	2f                   	das    
1000c978:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c979:	65 77 67             	gs ja  1000c9e3 <List<NIWindow*>::deleteElement(NIWindow*&)+0xef>
1000c97c:	75 69                	jne    1000c9e7 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
1000c97e:	2e 65 78 65          	cs gs js 1000c9e7 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
1000c982:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
1000c985:	4e                   	dec    esi
1000c986:	43                   	inc    ebx
1000c987:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
1000c98a:	4e                   	dec    esi
1000c98b:	32 00                	xor    al,BYTE PTR [eax]
1000c98d:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
1000c990:	53                   	push   ebx
1000c991:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
1000c994:	43                   	inc    ebx
1000c995:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c996:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c997:	74 65                	je     1000c9fe <List<NIWindow*>::deleteElement(NIWindow*&)+0x10a>
1000c999:	78 74                	js     1000ca0f <List<NIWindow*>::deleteElement(NIWindow*&)+0x11b>
1000c99b:	3a 3a                	cmp    bh,BYTE PTR [edx]
1000c99d:	64 72 76             	fs jb  1000ca16 <List<NIWindow*>::deleteElement(NIWindow*&)+0x122>
1000c9a0:	52                   	push   edx
1000c9a1:	65 6e                	outs   dx,BYTE PTR gs:[esi]
1000c9a3:	64 65 72 54          	fs gs jb 1000c9fb <List<NIWindow*>::deleteElement(NIWindow*&)+0x107>
1000c9a7:	54                   	push   esp
1000c9a8:	46                   	inc    esi
1000c9a9:	34 00                	xor    al,0x0
1000c9ab:	43                   	inc    ebx
1000c9ac:	3a 2f                	cmp    ch,BYTE PTR [edi]
1000c9ae:	42                   	inc    edx
1000c9af:	61                   	popa   
1000c9b0:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9b1:	61                   	popa   
1000c9b2:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9b3:	61                   	popa   
1000c9b4:	2f                   	das    
1000c9b5:	46                   	inc    esi
1000c9b6:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c9b7:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9b8:	74 73                	je     1000ca2d <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
1000c9ba:	2f                   	das    
1000c9bb:	53                   	push   ebx
1000c9bc:	46                   	inc    esi
1000c9bd:	4e                   	dec    esi
1000c9be:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000c9c1:	4e                   	dec    esi
1000c9c2:	4e                   	dec    esi
1000c9c3:	4f                   	dec    edi
1000c9c4:	54                   	push   esp
1000c9c5:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
1000c9c9:	44                   	inc    esp
1000c9ca:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
1000c9cd:	4e                   	dec    esi
1000c9ce:	54                   	push   esp
1000c9cf:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
1000c9d3:	45                   	inc    ebp
1000c9d4:	43                   	inc    ebx
1000c9d5:	54                   	push   esp
1000c9d6:	4f                   	dec    edi
1000c9d7:	52                   	push   edx
1000c9d8:	59                   	pop    ecx
1000c9d9:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
1000c9dc:	2f                   	das    
1000c9dd:	42                   	inc    edx
1000c9de:	61                   	popa   
1000c9df:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9e0:	61                   	popa   
1000c9e1:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9e2:	61                   	popa   
1000c9e3:	2f                   	das    
1000c9e4:	46                   	inc    esi
1000c9e5:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c9e6:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9e7:	74 73                	je     1000ca5c <List<NIWindow*>::deleteElement(NIWindow*&)+0x168>
1000c9e9:	2f                   	das    
1000c9ea:	53                   	push   ebx
1000c9eb:	46                   	inc    esi
1000c9ec:	4e                   	dec    esi
1000c9ed:	2f                   	das    
1000c9ee:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
1000c9f1:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c9f2:	74 20                	je     1000ca14 <List<NIWindow*>::deleteElement(NIWindow*&)+0x120>
1000c9f4:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
1000c9fb:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
1000ca02:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
1000ca06:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
1000ca0c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000ca0d:	74 3a                	je     1000ca49 <List<NIWindow*>::deleteElement(NIWindow*&)+0x155>
1000ca0f:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
1000ca15:	53                   	push   ebx
1000ca16:	46                   	inc    esi
1000ca17:	4e                   	dec    esi
1000ca18:	5f                   	pop    edi
1000ca19:	52                   	push   edx
1000ca1a:	45                   	inc    ebp
1000ca1b:	53                   	push   ebx
1000ca1c:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
1000ca22:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
1000ca25:	6d                   	ins    DWORD PTR es:[edi],dx
1000ca26:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000ca27:	72 79                	jb     1000caa2 <_ssfn__compute_huffman_codes::length_dezigzag+0x2>
1000ca29:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
1000ca2c:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca2d:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000ca2e:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
1000ca31:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
1000ca38:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000ca39:	72 00                	jb     1000ca3b <List<NIWindow*>::deleteElement(NIWindow*&)+0x147>
1000ca3b:	42                   	inc    edx
1000ca3c:	61                   	popa   
1000ca3d:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
1000ca41:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca42:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
1000ca46:	72 6d                	jb     1000cab5 <_ssfn__compute_huffman_codes::length_dezigzag+0x15>
1000ca48:	61                   	popa   
1000ca49:	74 00                	je     1000ca4b <List<NIWindow*>::deleteElement(NIWindow*&)+0x157>
1000ca4b:	4e                   	dec    esi
1000ca4c:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000ca4d:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000ca50:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000ca51:	74 20                	je     1000ca73 <List<NIWindow*>::deleteElement(NIWindow*&)+0x17f>
1000ca53:	66 61                	popaw  
1000ca55:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
1000ca58:	66 6f                	outs   dx,WORD PTR ds:[esi]
1000ca5a:	75 6e                	jne    1000caca <_ssfn__zdist_extra+0xa>
1000ca5c:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000ca60:	76 61                	jbe    1000cac3 <_ssfn__zdist_extra+0x3>
1000ca62:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca63:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
1000ca6b:	20 76 61             	and    BYTE PTR [esi+0x61],dh
1000ca6e:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca6f:	75 65                	jne    1000cad6 <_ssfn__zdist_extra+0x16>
1000ca71:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000ca74:	76 61                	jbe    1000cad7 <_ssfn__zdist_extra+0x17>
1000ca76:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca77:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
1000ca7f:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000ca82:	76 61                	jbe    1000cae5 <_ssfn__zdist_extra+0x25>
1000ca84:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca85:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
1000ca8d:	47                   	inc    edi
1000ca8e:	6c                   	ins    BYTE PTR es:[edi],dx
1000ca8f:	79 70                	jns    1000cb01 <_ssfn__zdist_extra+0x41>
1000ca91:	68 20 6e 6f 74       	push   0x746f6e20
1000ca96:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000ca99:	75 6e                	jne    1000cb09 <_ssfn__zdist_extra+0x49>
1000ca9b:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
1000ca9f:	90                   	nop

1000caa0 <_ssfn__compute_huffman_codes::length_dezigzag>:
1000caa0:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
1000cab0:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

1000cac0 <_ssfn__zdist_extra>:
	...
1000cad0:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
1000cae0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
1000caf0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
1000cb00:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
1000cb10:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
1000cb20:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
1000cb30:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

1000cb40 <_ssfn__zdist_base>:
1000cb40:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
1000cb50:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
1000cb60:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
1000cb70:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
1000cb80:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
1000cb90:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
1000cba0:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
1000cbb0:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

1000cbc0 <_ssfn__zlength_extra>:
	...
1000cbe0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
1000cbf0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
1000cc00:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
1000cc10:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
1000cc20:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

1000cc40 <_ssfn__zlength_base>:
1000cc40:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
1000cc50:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
1000cc60:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
1000cc70:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
1000cc80:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
1000cc90:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
1000cca0:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
1000ccb0:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
1000ccc0:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
1000ccd0:	29 2e 00 20 20 00 31 2e 32 2e 31 31 00 75 6e 6b     )..  .1.2.11.unk
1000cce0:	6e 6f 77 6e 20 65 72 72 6f 72 00 30 2e 37 2e 30     nown error.0.7.0
1000ccf0:	2d 72 63 33 00 65 6e 64 20 6f 66 20 73 74 72 65     -rc3.end of stre
1000cd00:	61 6d 00 73 75 63 63 65 73 73 00 69 6e 76 61 6c     am.success.inval
1000cd10:	69 64 20 61 72 67 75 6d 65 6e 74 00 6f 75 74 20     id argument.out 
1000cd20:	6f 66 20 6d 65 6d 6f 72 79 00 61 72 69 74 68 6d     of memory.arithm
1000cd30:	65 74 69 63 20 6f 76 65 72 66 6c 6f 77 00 69 6e     etic overflow.in
1000cd40:	76 61 6c 69 64 20 73 69 67 6e 61 74 75 72 65 00     valid signature.
1000cd50:	69 6e 76 61 6c 69 64 20 69 6d 61 67 65 20 77 69     invalid image wi
1000cd60:	64 74 68 00 69 6e 76 61 6c 69 64 20 69 6d 61 67     dth.invalid imag
1000cd70:	65 20 68 65 69 67 68 74 00 69 6d 61 67 65 20 77     e height.image w
1000cd80:	69 64 74 68 20 65 78 63 65 65 64 73 20 75 73 65     idth exceeds use
1000cd90:	72 20 6c 69 6d 69 74 00 69 6d 61 67 65 20 68 65     r limit.image he
1000cda0:	69 67 68 74 20 65 78 63 65 65 64 73 20 75 73 65     ight exceeds use
1000cdb0:	72 20 6c 69 6d 69 74 00 69 6e 76 61 6c 69 64 20     r limit.invalid 
1000cdc0:	62 69 74 20 64 65 70 74 68 00 69 6e 76 61 6c 69     bit depth.invali
1000cdd0:	64 20 63 6f 6c 6f 72 20 74 79 70 65 00 69 6e 76     d color type.inv
1000cde0:	61 6c 69 64 20 63 6f 6d 70 72 65 73 73 69 6f 6e     alid compression
1000cdf0:	20 6d 65 74 68 6f 64 00 69 6e 76 61 6c 69 64 20      method.invalid 
1000ce00:	66 69 6c 74 65 72 20 6d 65 74 68 6f 64 00 69 6e     filter method.in
1000ce10:	76 61 6c 69 64 20 69 6e 74 65 72 6c 61 63 65 20     valid interlace 
1000ce20:	6d 65 74 68 6f 64 00 69 6e 76 61 6c 69 64 20 49     method.invalid I
1000ce30:	48 44 52 20 63 68 75 6e 6b 20 73 69 7a 65 00 6d     HDR chunk size.m
1000ce40:	69 73 73 69 6e 67 20 49 48 44 52 20 63 68 75 6e     issing IHDR chun
1000ce50:	6b 00 69 6e 76 61 6c 69 64 20 63 68 75 6e 6b 20     k.invalid chunk 
1000ce60:	70 6f 73 69 74 69 6f 6e 00 69 6e 76 61 6c 69 64     position.invalid
1000ce70:	20 63 68 75 6e 6b 20 6c 65 6e 67 74 68 00 69 6e      chunk length.in
1000ce80:	76 61 6c 69 64 20 63 68 75 6e 6b 20 63 68 65 63     valid chunk chec
1000ce90:	6b 73 75 6d 00 69 6e 76 61 6c 69 64 20 63 68 75     ksum.invalid chu
1000cea0:	6e 6b 20 74 79 70 65 00 75 6e 6b 6e 6f 77 6e 20     nk type.unknown 
1000ceb0:	63 72 69 74 69 63 61 6c 20 63 68 75 6e 6b 00 64     critical chunk.d
1000cec0:	75 70 6c 69 63 61 74 65 20 50 4c 54 45 20 63 68     uplicate PLTE ch
1000ced0:	75 6e 6b 00 64 75 70 6c 69 63 61 74 65 20 63 48     unk.duplicate cH
1000cee0:	52 4d 20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61     RM chunk.duplica
1000cef0:	74 65 20 67 41 4d 41 20 63 68 75 6e 6b 00 64 75     te gAMA chunk.du
1000cf00:	70 6c 69 63 61 74 65 20 69 43 43 50 20 63 68 75     plicate iCCP chu
1000cf10:	6e 6b 00 64 75 70 6c 69 63 61 74 65 20 73 42 49     nk.duplicate sBI
1000cf20:	54 20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74     T chunk.duplicat
1000cf30:	65 20 73 52 47 42 20 63 68 75 6e 6b 00 64 75 70     e sRGB chunk.dup
1000cf40:	6c 69 63 61 74 65 20 62 4b 47 44 20 63 68 75 6e     licate bKGD chun
1000cf50:	6b 00 64 75 70 6c 69 63 61 74 65 20 68 49 53 54     k.duplicate hIST
1000cf60:	20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74 65      chunk.duplicate
1000cf70:	20 74 52 4e 53 20 63 68 75 6e 6b 00 64 75 70 6c      tRNS chunk.dupl
1000cf80:	69 63 61 74 65 20 70 48 59 73 20 63 68 75 6e 6b     icate pHYs chunk
1000cf90:	00 64 75 70 6c 69 63 61 74 65 20 74 49 4d 45 20     .duplicate tIME 
1000cfa0:	63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74 65 20     chunk.duplicate 
1000cfb0:	6f 46 46 73 20 63 68 75 6e 6b 00 64 75 70 6c 69     oFFs chunk.dupli
1000cfc0:	63 61 74 65 20 65 58 49 66 20 63 68 75 6e 6b 00     cate eXIf chunk.
1000cfd0:	69 6e 76 61 6c 69 64 20 63 48 52 4d 20 63 68 75     invalid cHRM chu
1000cfe0:	6e 6b 00 69 6e 76 61 6c 69 64 20 70 61 6c 65 74     nk.invalid palet
1000cff0:	74 65 20 28 50 4c 54 45 29 20 69 6e 64 65 78 00     te (PLTE) index.
1000d000:	74 52 4e 53 20 63 68 75 6e 6b 20 77 69 74 68 20     tRNS chunk with 
1000d010:	69 6e 63 6f 6d 70 61 74 69 62 6c 65 20 63 6f 6c     incompatible col
1000d020:	6f 72 20 74 79 70 65 00 6d 69 73 73 69 6e 67 20     or type.missing 
1000d030:	70 61 6c 65 74 74 65 20 28 50 4c 54 45 29 20 66     palette (PLTE) f
1000d040:	6f 72 20 74 52 4e 53 20 63 68 75 6e 6b 00 69 6e     or tRNS chunk.in
1000d050:	76 61 6c 69 64 20 67 41 4d 41 20 63 68 75 6e 6b     valid gAMA chunk
1000d060:	00 69 6e 76 61 6c 69 64 20 69 43 43 50 20 70 72     .invalid iCCP pr
1000d070:	6f 66 69 6c 65 20 6e 61 6d 65 00 69 6e 76 61 6c     ofile name.inval
1000d080:	69 64 20 69 43 43 50 20 63 6f 6d 70 72 65 73 73     id iCCP compress
1000d090:	69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76 61 6c     ion method.inval
1000d0a0:	69 64 20 73 42 49 54 20 63 68 75 6e 6b 00 69 6e     id sBIT chunk.in
1000d0b0:	76 61 6c 69 64 20 73 52 47 42 20 63 68 75 6e 6b     valid sRGB chunk
1000d0c0:	00 69 6e 76 61 6c 69 64 20 74 45 58 74 20 63 68     .invalid tEXt ch
1000d0d0:	75 6e 6b 00 69 6e 76 61 6c 69 64 20 74 45 58 74     unk.invalid tEXt
1000d0e0:	20 6b 65 79 77 6f 72 64 00 69 6e 76 61 6c 69 64      keyword.invalid
1000d0f0:	20 7a 54 58 74 20 63 68 75 6e 6b 00 69 6e 76 61      zTXt chunk.inva
1000d100:	6c 69 64 20 7a 54 58 74 20 63 6f 6d 70 72 65 73     lid zTXt compres
1000d110:	73 69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76 61     sion method.inva
1000d120:	6c 69 64 20 69 54 58 74 20 63 68 75 6e 6b 00 69     lid iTXt chunk.i
1000d130:	6e 76 61 6c 69 64 20 69 54 58 74 20 63 6f 6d 70     nvalid iTXt comp
1000d140:	72 65 73 73 69 6f 6e 20 66 6c 61 67 00 69 6e 76     ression flag.inv
1000d150:	61 6c 69 64 20 69 54 58 74 20 63 6f 6d 70 72 65     alid iTXt compre
1000d160:	73 73 69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76     ssion method.inv
1000d170:	61 6c 69 64 20 69 54 58 74 20 6c 61 6e 67 75 61     alid iTXt langua
1000d180:	67 65 20 74 61 67 00 69 6e 76 61 6c 69 64 20 69     ge tag.invalid i
1000d190:	54 58 74 20 74 72 61 6e 73 6c 61 74 65 64 20 6b     TXt translated k
1000d1a0:	65 79 00 6d 69 73 73 69 6e 67 20 70 61 6c 65 74     ey.missing palet
1000d1b0:	74 65 20 66 6f 72 20 62 4b 47 44 20 63 68 75 6e     te for bKGD chun
1000d1c0:	6b 00 69 6e 76 61 6c 69 64 20 70 61 6c 65 74 74     k.invalid palett
1000d1d0:	65 20 69 6e 64 65 78 20 66 6f 72 20 62 4b 47 44     e index for bKGD
1000d1e0:	20 63 68 75 6e 6b 00 6d 69 73 73 69 6e 67 20 70      chunk.missing p
1000d1f0:	61 6c 65 74 74 65 20 66 6f 72 20 68 49 53 54 20     alette for hIST 
1000d200:	63 68 75 6e 6b 00 69 6e 76 61 6c 69 64 20 70 48     chunk.invalid pH
1000d210:	59 73 20 63 68 75 6e 6b 00 69 6e 76 61 6c 69 64     Ys chunk.invalid
1000d220:	20 73 75 67 67 65 73 74 65 64 20 70 61 6c 65 74      suggested palet
1000d230:	74 65 20 6e 61 6d 65 00 64 75 70 6c 69 63 61 74     te name.duplicat
1000d240:	65 20 73 75 67 67 65 73 74 65 64 20 70 61 6c 65     e suggested pale
1000d250:	74 74 65 20 28 73 50 4c 54 29 20 6e 61 6d 65 00     tte (sPLT) name.
1000d260:	69 6e 76 61 6c 69 64 20 73 75 67 67 65 73 74 65     invalid suggeste
1000d270:	64 20 70 61 6c 65 74 74 65 20 28 73 50 4c 54 29     d palette (sPLT)
1000d280:	20 73 61 6d 70 6c 65 20 64 65 70 74 68 00 69 6e      sample depth.in
1000d290:	76 61 6c 69 64 20 74 49 4d 45 20 63 68 75 6e 6b     valid tIME chunk
1000d2a0:	00 69 6e 76 61 6c 69 64 20 6f 46 46 73 20 63 68     .invalid oFFs ch
1000d2b0:	75 6e 6b 00 69 6e 76 61 6c 69 64 20 65 58 49 66     unk.invalid eXIf
1000d2c0:	20 63 68 75 6e 6b 00 49 44 41 54 20 73 74 72 65      chunk.IDAT stre
1000d2d0:	61 6d 20 74 6f 6f 20 73 68 6f 72 74 00 49 44 41     am too short.IDA
1000d2e0:	54 20 73 74 72 65 61 6d 20 65 72 72 6f 72 00 7a     T stream error.z
1000d2f0:	6c 69 62 20 65 72 72 6f 72 00 69 6e 76 61 6c 69     lib error.invali
1000d300:	64 20 73 63 61 6e 6c 69 6e 65 20 66 69 6c 74 65     d scanline filte
1000d310:	72 00 6f 75 74 70 75 74 20 62 75 66 66 65 72 20     r.output buffer 
1000d320:	74 6f 6f 20 73 6d 61 6c 6c 00 69 2f 6f 20 65 72     too small.i/o er
1000d330:	72 6f 72 00 65 6e 64 20 6f 66 20 66 69 6c 65 00     ror.end of file.
1000d340:	62 75 66 66 65 72 20 61 6c 72 65 61 64 79 20 73     buffer already s
1000d350:	65 74 00 6e 6f 6e 2d 72 65 63 6f 76 65 72 61 62     et.non-recoverab
1000d360:	6c 65 20 73 74 61 74 65 00 69 6e 76 61 6c 69 64     le state.invalid
1000d370:	20 66 6f 72 6d 61 74 00 69 6e 76 61 6c 69 64 20      format.invalid 
1000d380:	66 6c 61 67 73 00 63 68 75 6e 6b 20 6e 6f 74 20     flags.chunk not 
1000d390:	61 76 61 69 6c 61 62 6c 65 00 65 6e 63 6f 64 65     available.encode
1000d3a0:	20 6f 6e 6c 79 20 63 6f 6e 74 65 78 74 00 72 65      only context.re
1000d3b0:	61 63 68 65 64 20 65 6e 64 2d 6f 66 2d 69 6d 61     ached end-of-ima
1000d3c0:	67 65 20 73 74 61 74 65 00 6d 69 73 73 69 6e 67     ge state.missing
1000d3d0:	20 50 4c 54 45 20 66 6f 72 20 69 6e 64 65 78 65      PLTE for indexe
1000d3e0:	64 20 69 6d 61 67 65 00 72 65 61 63 68 65 64 20     d image.reached 
1000d3f0:	63 68 75 6e 6b 2f 63 61 63 68 65 20 6c 69 6d 69     chunk/cache limi
1000d400:	74 73 00 7a 6c 69 62 20 69 6e 69 74 20 65 72 72     ts.zlib init err
1000d410:	6f 72 00 63 68 75 6e 6b 20 65 78 63 65 65 64 73     or.chunk exceeds
1000d420:	20 6d 61 78 69 6d 75 6d 20 73 74 61 6e 64 61 72      maximum standar
1000d430:	64 20 6c 65 6e 67 74 68 00 69 6e 74 65 72 6e 61     d length.interna
1000d440:	6c 20 65 72 72 6f 72 00 69 6e 76 61 6c 69 64 20     l error.invalid 
1000d450:	6f 70 65 72 61 74 69 6f 6e 20 66 6f 72 20 63 6f     operation for co
1000d460:	6e 74 65 78 74 20 74 79 70 65 00 73 6f 75 72 63     ntext type.sourc
1000d470:	65 20 50 4e 47 20 6e 6f 74 20 73 65 74 00 50 4e     e PNG not set.PN
1000d480:	47 20 6f 75 74 70 75 74 20 6e 6f 74 20 73 65 74     G output not set
1000d490:	00 69 6e 76 61 6c 69 64 20 6f 70 65 72 61 74 69     .invalid operati
1000d4a0:	6f 6e 20 66 6f 72 20 73 74 61 74 65 00 50 4e 47     on for state.PNG
1000d4b0:	20 6e 6f 74 20 66 69 6e 61 6c 69 7a 65 64 00 90      not finalized..
1000d4c0:	70 56 00 10 d6 56 00 10 89 56 00 10 9b 56 00 10     pV...V...V...V..	1000d4c0: R_386_32	.text
	1000d4c4: R_386_32	.text
	1000d4c8: R_386_32	.text
	1000d4cc: R_386_32	.text
1000d4d0:	89 56 00 10 d6 56 00 10 89 56 00 10 00 00 00 00     .V...V...V......	1000d4d0: R_386_32	.text
	1000d4d4: R_386_32	.text
	1000d4d8: R_386_32	.text
1000d4e0:	4c d7 00 10 48 d7 00 10 44 d7 00 10 09 8f 00 10     L...H...D.......	1000d4e0: R_386_32	.text
	1000d4e4: R_386_32	.text
	1000d4e8: R_386_32	.text
	1000d4ec: R_386_32	.text
1000d4f0:	18 98 00 10 1c 8f 00 10 1c 8f 00 10 3d 8f 00 10     ............=...	1000d4f0: R_386_32	.text
	1000d4f4: R_386_32	.text
	1000d4f8: R_386_32	.text
	1000d4fc: R_386_32	.text
1000d500:	18 98 00 10 5c 8f 00 10 6f 90 00 10 18 98 00 10     ....\...o.......	1000d500: R_386_32	.text
	1000d504: R_386_32	.text
	1000d508: R_386_32	.text
	1000d50c: R_386_32	.text
1000d510:	d2 90 00 10 0c 91 00 10 6f 90 00 10 18 98 00 10     ........o.......	1000d510: R_386_32	.text
	1000d514: R_386_32	.text
	1000d518: R_386_32	.text
	1000d51c: R_386_32	.text
1000d520:	d2 90 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................	1000d520: R_386_32	.text
	1000d524: R_386_32	malloc
	1000d528: R_386_32	realloc
	1000d52c: R_386_32	calloc
1000d530:	00 00 00 00 90 a8 00 10 a5 a8 00 10 ac a8 00 10     ................	1000d530: R_386_32	free
	1000d534: R_386_32	.text
	1000d538: R_386_32	.text
	1000d53c: R_386_32	.text
1000d540:	b1 a8 00 10 b9 a8 00 10 c1 a8 00 10 c9 a8 00 10     ................	1000d540: R_386_32	.text
	1000d544: R_386_32	.text
	1000d548: R_386_32	.text
	1000d54c: R_386_32	.text
1000d550:	d1 a8 00 10 d9 a8 00 10 e1 a8 00 10 22 a9 00 10     ............"...	1000d550: R_386_32	.text
	1000d554: R_386_32	.text
	1000d558: R_386_32	.text
	1000d55c: R_386_32	.text
1000d560:	2d a9 00 10 36 a9 00 10 3b a9 00 10 43 a9 00 10     -...6...;...C...	1000d560: R_386_32	.text
	1000d564: R_386_32	.text
	1000d568: R_386_32	.text
	1000d56c: R_386_32	.text
1000d570:	4b a9 00 10 53 a9 00 10 5b a9 00 10 63 a9 00 10     K...S...[...c...	1000d570: R_386_32	.text
	1000d574: R_386_32	.text
	1000d578: R_386_32	.text
	1000d57c: R_386_32	.text
1000d580:	6b a9 00 10 00 00 00 00 00 00 00 00 00 00 00 00     k...............	1000d580: R_386_32	.text
	...

1000d5a0 <CSWTCH.140>:
1000d5a0:	e2 d2 00 10 f5 cc 00 10 03 cd 00 10 0b cd 00 10     ................	1000d5a0: R_386_32	.text
	1000d5a4: R_386_32	.text
	1000d5a8: R_386_32	.text
	1000d5ac: R_386_32	.text
1000d5b0:	1c cd 00 10 2a cd 00 10 3e cd 00 10 50 cd 00 10     ....*...>...P...	1000d5b0: R_386_32	.text
	1000d5b4: R_386_32	.text
	1000d5b8: R_386_32	.text
	1000d5bc: R_386_32	.text
1000d5c0:	64 cd 00 10 79 cd 00 10 98 cd 00 10 b8 cd 00 10     d...y...........	1000d5c0: R_386_32	.text
	1000d5c4: R_386_32	.text
	1000d5c8: R_386_32	.text
	1000d5cc: R_386_32	.text
1000d5d0:	ca cd 00 10 dd cd 00 10 f8 cd 00 10 0e ce 00 10     ................	1000d5d0: R_386_32	.text
	1000d5d4: R_386_32	.text
	1000d5d8: R_386_32	.text
	1000d5dc: R_386_32	.text
1000d5e0:	27 ce 00 10 3f ce 00 10 52 ce 00 10 69 ce 00 10     '...?...R...i...	1000d5e0: R_386_32	.text
	1000d5e4: R_386_32	.text
	1000d5e8: R_386_32	.text
	1000d5ec: R_386_32	.text
1000d5f0:	7e ce 00 10 95 ce 00 10 a8 ce 00 10 bf ce 00 10     ~...............	1000d5f0: R_386_32	.text
	1000d5f4: R_386_32	.text
	1000d5f8: R_386_32	.text
	1000d5fc: R_386_32	.text
1000d600:	d4 ce 00 10 e9 ce 00 10 fe ce 00 10 13 cf 00 10     ................	1000d600: R_386_32	.text
	1000d604: R_386_32	.text
	1000d608: R_386_32	.text
	1000d60c: R_386_32	.text
1000d610:	28 cf 00 10 3d cf 00 10 52 cf 00 10 67 cf 00 10     (...=...R...g...	1000d610: R_386_32	.text
	1000d614: R_386_32	.text
	1000d618: R_386_32	.text
	1000d61c: R_386_32	.text
1000d620:	7c cf 00 10 91 cf 00 10 a6 cf 00 10 bb cf 00 10     |...............	1000d620: R_386_32	.text
	1000d624: R_386_32	.text
	1000d628: R_386_32	.text
	1000d62c: R_386_32	.text
1000d630:	d0 cf 00 10 e3 cf 00 10 00 d0 00 10 28 d0 00 10     ............(...	1000d630: R_386_32	.text
	1000d634: R_386_32	.text
	1000d638: R_386_32	.text
	1000d63c: R_386_32	.text
1000d640:	4e d0 00 10 61 d0 00 10 7b d0 00 10 9b d0 00 10     N...a...{.......	1000d640: R_386_32	.text
	1000d644: R_386_32	.text
	1000d648: R_386_32	.text
	1000d64c: R_386_32	.text
1000d650:	ae d0 00 10 c1 d0 00 10 d4 d0 00 10 e9 d0 00 10     ................	1000d650: R_386_32	.text
	1000d654: R_386_32	.text
	1000d658: R_386_32	.text
	1000d65c: R_386_32	.text
1000d660:	fc d0 00 10 1c d1 00 10 2f d1 00 10 4d d1 00 10     ......../...M...	1000d660: R_386_32	.text
	1000d664: R_386_32	.text
	1000d668: R_386_32	.text
	1000d66c: R_386_32	.text
1000d670:	6d d1 00 10 87 d1 00 10 a3 d1 00 10 c2 d1 00 10     m...............	1000d670: R_386_32	.text
	1000d674: R_386_32	.text
	1000d678: R_386_32	.text
	1000d67c: R_386_32	.text
1000d680:	e7 d1 00 10 06 d2 00 10 19 d2 00 10 38 d2 00 10     ............8...	1000d680: R_386_32	.text
	1000d684: R_386_32	.text
	1000d688: R_386_32	.text
	1000d68c: R_386_32	.text
1000d690:	60 d2 00 10 8e d2 00 10 a1 d2 00 10 b4 d2 00 10     `...............	1000d690: R_386_32	.text
	1000d694: R_386_32	.text
	1000d698: R_386_32	.text
	1000d69c: R_386_32	.text
1000d6a0:	c7 d2 00 10 dd d2 00 10 ef d2 00 10 fa d2 00 10     ................	1000d6a0: R_386_32	.text
	1000d6a4: R_386_32	.text
	1000d6a8: R_386_32	.text
	1000d6ac: R_386_32	.text
1000d6b0:	12 d3 00 10 2a d3 00 10 34 d3 00 10 40 d3 00 10     ....*...4...@...	1000d6b0: R_386_32	.text
	1000d6b4: R_386_32	.text
	1000d6b8: R_386_32	.text
	1000d6bc: R_386_32	.text
1000d6c0:	53 d3 00 10 69 d3 00 10 78 d3 00 10 86 d3 00 10     S...i...x.......	1000d6c0: R_386_32	.text
	1000d6c4: R_386_32	.text
	1000d6c8: R_386_32	.text
	1000d6cc: R_386_32	.text
1000d6d0:	9a d3 00 10 ae d3 00 10 c9 d3 00 10 e8 d3 00 10     ................	1000d6d0: R_386_32	.text
	1000d6d4: R_386_32	.text
	1000d6d8: R_386_32	.text
	1000d6dc: R_386_32	.text
1000d6e0:	03 d4 00 10 13 d4 00 10 39 d4 00 10 48 d4 00 10     ........9...H...	1000d6e0: R_386_32	.text
	1000d6e4: R_386_32	.text
	1000d6e8: R_386_32	.text
	1000d6ec: R_386_32	.text
1000d6f0:	6b d4 00 10 7e d4 00 10 91 d4 00 10 ad d4 00 10     k...~...........	1000d6f0: R_386_32	.text
	1000d6f4: R_386_32	.text
	1000d6f8: R_386_32	.text
	1000d6fc: R_386_32	.text

1000d700 <text_defaults.6014>:
1000d700:	ff ff ff ff 0f 00 00 00 08 00 00 00 00 00 00 00     ................
1000d710:	01 00 00 00                                         ....

1000d714 <image_defaults.6013>:
1000d714:	ff ff ff ff 0f 00 00 00 08 00 00 00 01 00 00 00     ................
1000d724:	00 00 00 00                                         ....

1000d728 <type_exif>:
1000d728:	65 58 49 66                                         eXIf

1000d72c <type_offs>:
1000d72c:	6f 46 46 73                                         oFFs

1000d730 <type_time>:
1000d730:	74 49 4d 45                                         tIME

1000d734 <type_splt>:
1000d734:	73 50 4c 54                                         sPLT

1000d738 <type_phys>:
1000d738:	70 48 59 73                                         pHYs

1000d73c <type_hist>:
1000d73c:	68 49 53 54                                         hIST

1000d740 <type_bkgd>:
1000d740:	62 4b 47 44                                         bKGD

1000d744 <type_itxt>:
1000d744:	69 54 58 74                                         iTXt

1000d748 <type_ztxt>:
1000d748:	7a 54 58 74                                         zTXt

1000d74c <type_text>:
1000d74c:	74 45 58 74                                         tEXt

1000d750 <type_srgb>:
1000d750:	73 52 47 42                                         sRGB

1000d754 <type_sbit>:
1000d754:	73 42 49 54                                         sBIT

1000d758 <type_iccp>:
1000d758:	69 43 43 50                                         iCCP

1000d75c <type_gama>:
1000d75c:	67 41 4d 41                                         gAMA

1000d760 <type_chrm>:
1000d760:	63 48 52 4d                                         cHRM

1000d764 <type_trns>:
1000d764:	74 52 4e 53                                         tRNS

1000d768 <type_iend>:
1000d768:	49 45 4e 44                                         IEND

1000d76c <type_idat>:
1000d76c:	49 44 41 54                                         IDAT

1000d770 <type_plte>:
1000d770:	50 4c 54 45                                         PLTE

1000d774 <type_ihdr>:
1000d774:	49 48 44 52                                         IHDR

1000d778 <png_signature>:
1000d778:	89 50 4e 47 0d 0a 1a 0a                             .PNG....

1000d780 <adam7_y_delta>:
1000d780:	08 00 00 00 08 00 00 00 08 00 00 00 04 00 00 00     ................
1000d790:	04 00 00 00 02 00 00 00 02 00 00 00                 ............

1000d79c <adam7_x_delta>:
1000d79c:	08 00 00 00 08 00 00 00 04 00 00 00 04 00 00 00     ................
1000d7ac:	02 00 00 00 02 00 00 00 01 00 00 00                 ............

1000d7b8 <adam7_y_start>:
	...
1000d7c0:	04 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00     ................
1000d7d0:	01 00 00 00                                         ....

1000d7d4 <adam7_x_start>:
1000d7d4:	00 00 00 00 04 00 00 00 00 00 00 00 02 00 00 00     ................
1000d7e4:	00 00 00 00 01 00 00 00 00 00 00 00 01 01 01 01     ................
1000d7f4:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 7f 43     ...............C
1000d804:	00 ff 7f 47 00 50 c3 47 cd cc 0c 40 ff ff 7f 7f     ...G.P.G...@....
1000d814:	00 00 80 00                                         ....
