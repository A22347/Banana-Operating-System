
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000009: R_386_32	screen
1000000d:	e8 fc ff ff ff       	call   1000000e <start(void*)+0xe>	1000000e: R_386_PC32	Video::getWidth()
10000012:	89 c3                	mov    ebx,eax
10000014:	58                   	pop    eax
10000015:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000017: R_386_32	screen
1000001b:	e8 fc ff ff ff       	call   1000001c <start(void*)+0x1c>	1000001c: R_386_PC32	Video::getHeight()
10000020:	5a                   	pop    edx
10000021:	89 c7                	mov    edi,eax
10000023:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000025: R_386_32	screen
10000029:	e8 fc ff ff ff       	call   1000002a <start(void*)+0x2a>	1000002a: R_386_PC32	Video::getWidth()
1000002e:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
10000035:	89 c5                	mov    ebp,eax
10000037:	e8 fc ff ff ff       	call   10000038 <start(void*)+0x38>	10000038: R_386_PC32	malloc
1000003c:	59                   	pop    ecx
1000003d:	89 c6                	mov    esi,eax
1000003f:	58                   	pop    eax
10000040:	6a 20                	push   0x20
10000042:	55                   	push   ebp
10000043:	57                   	push   edi
10000044:	53                   	push   ebx
10000045:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000047: R_386_32	screen
1000004b:	56                   	push   esi
1000004c:	e8 fc ff ff ff       	call   1000004d <start(void*)+0x4d>	1000004d: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000051:	83 c4 14             	add    esp,0x14
10000054:	6a 14                	push   0x14
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	malloc
1000005b:	89 c3                	mov    ebx,eax
1000005d:	58                   	pop    eax
1000005e:	5a                   	pop    edx
1000005f:	56                   	push   esi
10000060:	53                   	push   ebx
10000061:	e8 fc ff ff ff       	call   10000062 <start(void*)+0x62>	10000062: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000066:	c7 04 24 38 00 00 00 	mov    DWORD PTR [esp],0x38
1000006d:	e8 fc ff ff ff       	call   1000006e <start(void*)+0x6e>	1000006e: R_386_PC32	malloc
10000072:	5f                   	pop    edi
10000073:	5d                   	pop    ebp
10000074:	6a 01                	push   0x1
10000076:	6a 01                	push   0x1
10000078:	6a 00                	push   0x0
1000007a:	6a 00                	push   0x0
1000007c:	56                   	push   esi
1000007d:	50                   	push   eax
1000007e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000082:	e8 fc ff ff ff       	call   10000083 <start(void*)+0x83>	10000083: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000087:	83 c4 14             	add    esp,0x14
1000008a:	6a 38                	push   0x38
1000008c:	e8 fc ff ff ff       	call   1000008d <start(void*)+0x8d>	1000008d: R_386_PC32	malloc
10000091:	89 c2                	mov    edx,eax
10000093:	58                   	pop    eax
10000094:	59                   	pop    ecx
10000095:	68 40 01 00 00       	push   0x140
1000009a:	68 90 01 00 00       	push   0x190
1000009f:	6a 32                	push   0x32
100000a1:	6a 32                	push   0x32
100000a3:	56                   	push   esi
100000a4:	52                   	push   edx
100000a5:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000a9:	e8 fc ff ff ff       	call   100000aa <start(void*)+0xaa>	100000aa: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000ae:	83 c4 14             	add    esp,0x14
100000b1:	6a 38                	push   0x38
100000b3:	e8 fc ff ff ff       	call   100000b4 <start(void*)+0xb4>	100000b4: R_386_PC32	malloc
100000b8:	5f                   	pop    edi
100000b9:	89 c5                	mov    ebp,eax
100000bb:	58                   	pop    eax
100000bc:	68 7c 01 00 00       	push   0x17c
100000c1:	68 f4 01 00 00       	push   0x1f4
100000c6:	68 96 00 00 00       	push   0x96
100000cb:	68 c8 00 00 00       	push   0xc8
100000d0:	56                   	push   esi
100000d1:	55                   	push   ebp
100000d2:	e8 fc ff ff ff       	call   100000d3 <start(void*)+0xd3>	100000d3: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000d7:	83 c4 14             	add    esp,0x14
100000da:	6a 38                	push   0x38
100000dc:	e8 fc ff ff ff       	call   100000dd <start(void*)+0xdd>	100000dd: R_386_PC32	malloc
100000e1:	89 c7                	mov    edi,eax
100000e3:	58                   	pop    eax
100000e4:	5a                   	pop    edx
100000e5:	68 af 00 00 00       	push   0xaf
100000ea:	68 0e 01 00 00       	push   0x10e
100000ef:	68 90 01 00 00       	push   0x190
100000f4:	6a 7d                	push   0x7d
100000f6:	56                   	push   esi
100000f7:	57                   	push   edi
100000f8:	e8 fc ff ff ff       	call   100000f9 <start(void*)+0xf9>	100000f9: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000fd:	83 c4 18             	add    esp,0x18
10000100:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10000104:	51                   	push   ecx
10000105:	53                   	push   ebx
10000106:	e8 fc ff ff ff       	call   10000107 <start(void*)+0x107>	10000107: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000010b:	59                   	pop    ecx
1000010c:	5e                   	pop    esi
1000010d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000111:	52                   	push   edx
10000112:	53                   	push   ebx
10000113:	e8 fc ff ff ff       	call   10000114 <start(void*)+0x114>	10000114: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000118:	58                   	pop    eax
10000119:	5a                   	pop    edx
1000011a:	55                   	push   ebp
1000011b:	53                   	push   ebx
1000011c:	e8 fc ff ff ff       	call   1000011d <start(void*)+0x11d>	1000011d: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000121:	59                   	pop    ecx
10000122:	5e                   	pop    esi
10000123:	57                   	push   edi
10000124:	53                   	push   ebx
10000125:	e8 fc ff ff ff       	call   10000126 <start(void*)+0x126>	10000126: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012a:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000012d:	e8 fc ff ff ff       	call   1000012e <start(void*)+0x12e>	1000012e: R_386_PC32	NIDesktop::completeRefresh()
10000132:	83 c4 10             	add    esp,0x10
10000135:	83 ec 0c             	sub    esp,0xc
10000138:	6a 02                	push   0x2
1000013a:	e8 fc ff ff ff       	call   1000013b <start(void*)+0x13b>	1000013b: R_386_PC32	blockTask(TaskState)
1000013f:	eb f1                	jmp    10000132 <start(void*)+0x132>
10000141:	8d 76 00             	lea    esi,[esi+0x0]

10000144 <begin(void*)>:
10000144:	83 ec 18             	sub    esp,0x18
10000147:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000014b:	e8 fc ff ff ff       	call   1000014c <begin(void*)+0x8>	1000014c: R_386_PC32	start(void*)

10000150 <_ssfn__bitreverse16>:
10000150:	89 c2                	mov    edx,eax
10000152:	01 c0                	add    eax,eax
10000154:	d1 fa                	sar    edx,1
10000156:	25 aa aa 00 00       	and    eax,0xaaaa
1000015b:	81 e2 55 55 00 00    	and    edx,0x5555
10000161:	09 c2                	or     edx,eax
10000163:	89 d0                	mov    eax,edx
10000165:	c1 e2 02             	shl    edx,0x2
10000168:	c1 f8 02             	sar    eax,0x2
1000016b:	81 e2 cc cc 00 00    	and    edx,0xcccc
10000171:	25 33 33 00 00       	and    eax,0x3333
10000176:	09 d0                	or     eax,edx
10000178:	89 c2                	mov    edx,eax
1000017a:	c1 e0 04             	shl    eax,0x4
1000017d:	c1 fa 04             	sar    edx,0x4
10000180:	25 f0 f0 00 00       	and    eax,0xf0f0
10000185:	81 e2 0f 0f 00 00    	and    edx,0xf0f
1000018b:	09 c2                	or     edx,eax
1000018d:	89 d1                	mov    ecx,edx
1000018f:	c1 e2 08             	shl    edx,0x8
10000192:	c1 f9 08             	sar    ecx,0x8
10000195:	0f b7 c2             	movzx  eax,dx
10000198:	09 c8                	or     eax,ecx
1000019a:	c3                   	ret    

1000019b <_ssfn__zhuffman_decode>:
1000019b:	55                   	push   ebp
1000019c:	57                   	push   edi
1000019d:	56                   	push   esi
1000019e:	53                   	push   ebx
1000019f:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001a3:	7f 1d                	jg     100001c2 <_ssfn__zhuffman_decode+0x27>
100001a5:	8b 18                	mov    ebx,DWORD PTR [eax]
100001a7:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001aa:	89 08                	mov    DWORD PTR [eax],ecx
100001ac:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001af:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001b2:	d3 e3                	shl    ebx,cl
100001b4:	83 c1 08             	add    ecx,0x8
100001b7:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001ba:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001bd:	83 f9 18             	cmp    ecx,0x18
100001c0:	eb e1                	jmp    100001a3 <_ssfn__zhuffman_decode+0x8>
100001c2:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001c5:	89 f9                	mov    ecx,edi
100001c7:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001cd:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001d1:	89 cb                	mov    ebx,ecx
100001d3:	85 c9                	test   ecx,ecx
100001d5:	74 15                	je     100001ec <_ssfn__zhuffman_decode+0x51>
100001d7:	c1 f9 09             	sar    ecx,0x9
100001da:	89 da                	mov    edx,ebx
100001dc:	d3 ef                	shr    edi,cl
100001de:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001e1:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001e4:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001ea:	eb 58                	jmp    10000244 <_ssfn__zhuffman_decode+0xa9>
100001ec:	89 d5                	mov    ebp,edx
100001ee:	89 c3                	mov    ebx,eax
100001f0:	be 0a 00 00 00       	mov    esi,0xa
100001f5:	89 f8                	mov    eax,edi
100001f7:	e8 54 ff ff ff       	call   10000150 <_ssfn__bitreverse16>
100001fc:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
10000203:	7c 03                	jl     10000208 <_ssfn__zhuffman_decode+0x6d>
10000205:	46                   	inc    esi
10000206:	eb f4                	jmp    100001fc <_ssfn__zhuffman_decode+0x61>
10000208:	83 ca ff             	or     edx,0xffffffff
1000020b:	83 fe 10             	cmp    esi,0x10
1000020e:	74 34                	je     10000244 <_ssfn__zhuffman_decode+0xa9>
10000210:	8d 14 36             	lea    edx,[esi+esi*1]
10000213:	b9 10 00 00 00       	mov    ecx,0x10
10000218:	01 ea                	add    edx,ebp
1000021a:	29 f1                	sub    ecx,esi
1000021c:	d3 f8                	sar    eax,cl
1000021e:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000225:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
1000022c:	29 c8                	sub    eax,ecx
1000022e:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
10000231:	89 f1                	mov    ecx,esi
10000233:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
1000023a:	d3 ef                	shr    edi,cl
1000023c:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000023f:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000244:	5b                   	pop    ebx
10000245:	89 d0                	mov    eax,edx
10000247:	5e                   	pop    esi
10000248:	5f                   	pop    edi
10000249:	5d                   	pop    ebp
1000024a:	c3                   	ret    

1000024b <_ssfn__zexpand>:
1000024b:	55                   	push   ebp
1000024c:	57                   	push   edi
1000024d:	56                   	push   esi
1000024e:	53                   	push   ebx
1000024f:	83 ec 0c             	sub    esp,0xc
10000252:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000255:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000258:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
1000025b:	29 f9                	sub    ecx,edi
1000025d:	83 f9 08             	cmp    ecx,0x8
10000260:	74 04                	je     10000266 <_ssfn__zexpand+0x1b>
10000262:	31 c0                	xor    eax,eax
10000264:	eb 3c                	jmp    100002a2 <_ssfn__zexpand+0x57>
10000266:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000269:	75 f7                	jne    10000262 <_ssfn__zexpand+0x17>
1000026b:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000026f:	75 f1                	jne    10000262 <_ssfn__zexpand+0x17>
10000271:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000275:	75 eb                	jne    10000262 <_ssfn__zexpand+0x17>
10000277:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
1000027a:	89 c3                	mov    ebx,eax
1000027c:	89 d6                	mov    esi,edx
1000027e:	50                   	push   eax
1000027f:	50                   	push   eax
10000280:	55                   	push   ebp
10000281:	57                   	push   edi
10000282:	e8 fc ff ff ff       	call   10000283 <_ssfn__zexpand+0x38>	10000283: R_386_PC32	realloc
10000287:	83 c4 10             	add    esp,0x10
1000028a:	85 c0                	test   eax,eax
1000028c:	74 d4                	je     10000262 <_ssfn__zexpand+0x17>
1000028e:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10000291:	29 fe                	sub    esi,edi
10000293:	01 c6                	add    esi,eax
10000295:	01 e8                	add    eax,ebp
10000297:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
1000029a:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000029d:	b8 01 00 00 00       	mov    eax,0x1
100002a2:	83 c4 0c             	add    esp,0xc
100002a5:	5b                   	pop    ebx
100002a6:	5e                   	pop    esi
100002a7:	5f                   	pop    edi
100002a8:	5d                   	pop    ebp
100002a9:	c3                   	ret    

100002aa <_ssfn__zbuild_huffman>:
100002aa:	55                   	push   ebp
100002ab:	57                   	push   edi
100002ac:	56                   	push   esi
100002ad:	53                   	push   ebx
100002ae:	89 c3                	mov    ebx,eax
100002b0:	81 ec a0 00 00 00    	sub    esp,0xa0
100002b6:	31 c0                	xor    eax,eax
100002b8:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002bb:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002bf:	b9 11 00 00 00       	mov    ecx,0x11
100002c4:	89 ef                	mov    edi,ebp
100002c6:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002ca:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002cc:	b9 00 01 00 00       	mov    ecx,0x100
100002d1:	89 df                	mov    edi,ebx
100002d3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002d5:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002d8:	7d 0f                	jge    100002e9 <_ssfn__zbuild_huffman+0x3f>
100002da:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002de:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002e2:	40                   	inc    eax
100002e3:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002e7:	eb ec                	jmp    100002d5 <_ssfn__zbuild_huffman+0x2b>
100002e9:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002f1:	b9 01 00 00 00       	mov    ecx,0x1
100002f6:	b8 01 00 00 00       	mov    eax,0x1
100002fb:	89 c7                	mov    edi,eax
100002fd:	d3 e7                	shl    edi,cl
100002ff:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
10000303:	0f 8f 10 01 00 00    	jg     10000419 <_ssfn__zbuild_huffman+0x16f>
10000309:	41                   	inc    ecx
1000030a:	83 f9 10             	cmp    ecx,0x10
1000030d:	75 ec                	jne    100002fb <_ssfn__zbuild_huffman+0x51>
1000030f:	31 ff                	xor    edi,edi
10000311:	31 f6                	xor    esi,esi
10000313:	b8 01 00 00 00       	mov    eax,0x1
10000318:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
1000031c:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
10000320:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000328:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
10000330:	01 ef                	add    edi,ebp
10000332:	85 ed                	test   ebp,ebp
10000334:	74 11                	je     10000347 <_ssfn__zbuild_huffman+0x9d>
10000336:	ba 01 00 00 00       	mov    edx,0x1
1000033b:	88 c1                	mov    cl,al
1000033d:	d3 e2                	shl    edx,cl
1000033f:	39 fa                	cmp    edx,edi
10000341:	0f 8c d2 00 00 00    	jl     10000419 <_ssfn__zbuild_huffman+0x16f>
10000347:	89 fa                	mov    edx,edi
10000349:	b9 10 00 00 00       	mov    ecx,0x10
1000034e:	01 ff                	add    edi,edi
10000350:	29 c1                	sub    ecx,eax
10000352:	01 ee                	add    esi,ebp
10000354:	d3 e2                	shl    edx,cl
10000356:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
1000035d:	40                   	inc    eax
1000035e:	83 f8 10             	cmp    eax,0x10
10000361:	75 b5                	jne    10000318 <_ssfn__zbuild_huffman+0x6e>
10000363:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000366:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
10000370:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000374:	31 ff                	xor    edi,edi
10000376:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
1000037a:	0f 8d 9d 00 00 00    	jge    1000041d <_ssfn__zbuild_huffman+0x173>
10000380:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000384:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000388:	89 f2                	mov    edx,esi
1000038a:	85 f6                	test   esi,esi
1000038c:	0f 84 81 00 00 00    	je     10000413 <_ssfn__zbuild_huffman+0x169>
10000392:	8d 0c 36             	lea    ecx,[esi+esi*1]
10000395:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
10000399:	8d 04 19             	lea    eax,[ecx+ebx*1]
1000039c:	89 e9                	mov    ecx,ebp
1000039e:	89 04 24             	mov    DWORD PTR [esp],eax
100003a1:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003a8:	29 c1                	sub    ecx,eax
100003aa:	89 c8                	mov    eax,ecx
100003ac:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003af:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003b6:	01 c8                	add    eax,ecx
100003b8:	83 fe 09             	cmp    esi,0x9
100003bb:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003c2:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003ca:	7f 42                	jg     1000040e <_ssfn__zbuild_huffman+0x164>
100003cc:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003d0:	89 e8                	mov    eax,ebp
100003d2:	e8 79 fd ff ff       	call   10000150 <_ssfn__bitreverse16>
100003d7:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003db:	b9 10 00 00 00       	mov    ecx,0x10
100003e0:	29 f1                	sub    ecx,esi
100003e2:	d3 f8                	sar    eax,cl
100003e4:	88 d1                	mov    cl,dl
100003e6:	89 04 24             	mov    DWORD PTR [esp],eax
100003e9:	89 f2                	mov    edx,esi
100003eb:	b8 01 00 00 00       	mov    eax,0x1
100003f0:	c1 e2 09             	shl    edx,0x9
100003f3:	d3 e0                	shl    eax,cl
100003f5:	09 fa                	or     edx,edi
100003f7:	89 c1                	mov    ecx,eax
100003f9:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
10000400:	7f 0c                	jg     1000040e <_ssfn__zbuild_huffman+0x164>
10000402:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000405:	01 0c 24             	add    DWORD PTR [esp],ecx
10000408:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
1000040c:	eb eb                	jmp    100003f9 <_ssfn__zbuild_huffman+0x14f>
1000040e:	45                   	inc    ebp
1000040f:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
10000413:	47                   	inc    edi
10000414:	e9 5d ff ff ff       	jmp    10000376 <_ssfn__zbuild_huffman+0xcc>
10000419:	31 c0                	xor    eax,eax
1000041b:	eb 05                	jmp    10000422 <_ssfn__zbuild_huffman+0x178>
1000041d:	b8 01 00 00 00       	mov    eax,0x1
10000422:	81 c4 a0 00 00 00    	add    esp,0xa0
10000428:	5b                   	pop    ebx
10000429:	5e                   	pop    esi
1000042a:	5f                   	pop    edi
1000042b:	5d                   	pop    ebp
1000042c:	c3                   	ret    

1000042d <_ssfn_fc.part.1>:
1000042d:	55                   	push   ebp
1000042e:	57                   	push   edi
1000042f:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000435:	56                   	push   esi
10000436:	53                   	push   ebx
10000437:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
1000043d:	83 ec 0c             	sub    esp,0xc
10000440:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10000443:	74 5d                	je     100004a2 <_ssfn_fc.part.1+0x75>
10000445:	31 f6                	xor    esi,esi
10000447:	8b 03                	mov    eax,DWORD PTR [ebx]
10000449:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
1000044d:	74 35                	je     10000484 <_ssfn_fc.part.1+0x57>
1000044f:	31 ed                	xor    ebp,ebp
10000451:	8b 03                	mov    eax,DWORD PTR [ebx]
10000453:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000456:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000459:	85 c0                	test   eax,eax
1000045b:	74 0c                	je     10000469 <_ssfn_fc.part.1+0x3c>
1000045d:	83 ec 0c             	sub    esp,0xc
10000460:	50                   	push   eax
10000461:	e8 fc ff ff ff       	call   10000462 <_ssfn_fc.part.1+0x35>	10000462: R_386_PC32	free
10000466:	83 c4 10             	add    esp,0x10
10000469:	83 c5 04             	add    ebp,0x4
1000046c:	81 fd 00 04 00 00    	cmp    ebp,0x400
10000472:	75 dd                	jne    10000451 <_ssfn_fc.part.1+0x24>
10000474:	83 ec 0c             	sub    esp,0xc
10000477:	8b 03                	mov    eax,DWORD PTR [ebx]
10000479:	ff 34 30             	push   DWORD PTR [eax+esi*1]
1000047c:	e8 fc ff ff ff       	call   1000047d <_ssfn_fc.part.1+0x50>	1000047d: R_386_PC32	free
10000481:	83 c4 10             	add    esp,0x10
10000484:	83 c6 04             	add    esi,0x4
10000487:	81 fe 00 04 00 00    	cmp    esi,0x400
1000048d:	75 b8                	jne    10000447 <_ssfn_fc.part.1+0x1a>
1000048f:	83 ec 0c             	sub    esp,0xc
10000492:	ff 33                	push   DWORD PTR [ebx]
10000494:	e8 fc ff ff ff       	call   10000495 <_ssfn_fc.part.1+0x68>	10000495: R_386_PC32	free
10000499:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
1000049f:	83 c4 10             	add    esp,0x10
100004a2:	83 c3 04             	add    ebx,0x4
100004a5:	39 fb                	cmp    ebx,edi
100004a7:	75 97                	jne    10000440 <_ssfn_fc.part.1+0x13>
100004a9:	83 c4 0c             	add    esp,0xc
100004ac:	5b                   	pop    ebx
100004ad:	5e                   	pop    esi
100004ae:	5f                   	pop    edi
100004af:	5d                   	pop    ebp
100004b0:	c3                   	ret    

100004b1 <_ssfn_l>:
100004b1:	57                   	push   edi
100004b2:	56                   	push   esi
100004b3:	53                   	push   ebx
100004b4:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004b8:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004bc:	39 ce                	cmp    esi,ecx
100004be:	89 f3                	mov    ebx,esi
100004c0:	0f 9d c1             	setge  cl
100004c3:	c1 eb 1f             	shr    ebx,0x1f
100004c6:	09 d9                	or     ecx,ebx
100004c8:	89 fb                	mov    ebx,edi
100004ca:	c1 eb 1f             	shr    ebx,0x1f
100004cd:	08 d9                	or     cl,bl
100004cf:	0f 85 e9 00 00 00    	jne    100005be <_ssfn_l+0x10d>
100004d5:	39 d7                	cmp    edi,edx
100004d7:	0f 8d e1 00 00 00    	jge    100005be <_ssfn_l+0x10d>
100004dd:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004e3:	8d 51 08             	lea    edx,[ecx+0x8]
100004e6:	8d 4f 08             	lea    ecx,[edi+0x8]
100004e9:	c1 fa 04             	sar    edx,0x4
100004ec:	c1 f9 04             	sar    ecx,0x4
100004ef:	39 ca                	cmp    edx,ecx
100004f1:	75 1a                	jne    1000050d <_ssfn_l+0x5c>
100004f3:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
100004f9:	8d 4e 08             	lea    ecx,[esi+0x8]
100004fc:	83 c2 08             	add    edx,0x8
100004ff:	c1 f9 04             	sar    ecx,0x4
10000502:	c1 fa 04             	sar    edx,0x4
10000505:	39 ca                	cmp    edx,ecx
10000507:	0f 84 b1 00 00 00    	je     100005be <_ssfn_l+0x10d>
1000050d:	89 c3                	mov    ebx,eax
1000050f:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000515:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
1000051b:	7f 3e                	jg     1000055b <_ssfn_l+0xaa>
1000051d:	05 00 02 00 00       	add    eax,0x200
10000522:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000528:	52                   	push   edx
10000529:	01 c0                	add    eax,eax
1000052b:	52                   	push   edx
1000052c:	50                   	push   eax
1000052d:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
10000533:	e8 fc ff ff ff       	call   10000534 <_ssfn_l+0x83>	10000534: R_386_PC32	realloc
10000538:	83 c4 10             	add    esp,0x10
1000053b:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
10000541:	85 c0                	test   eax,eax
10000543:	75 16                	jne    1000055b <_ssfn_l+0xaa>
10000545:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000054f:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000559:	eb 63                	jmp    100005be <_ssfn_l+0x10d>
1000055b:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
10000562:	75 26                	jne    1000058a <_ssfn_l+0xd9>
10000564:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000056a:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
10000570:	66 89 10             	mov    WORD PTR [eax],dx
10000573:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000579:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000057f:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
10000583:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
1000058a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
10000590:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000596:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
1000059a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005a0:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005a6:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005ab:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005b1:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005b8:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005be:	5b                   	pop    ebx
100005bf:	5e                   	pop    esi
100005c0:	5f                   	pop    edi
100005c1:	c3                   	ret    

100005c2 <_ssfn_b>:
100005c2:	55                   	push   ebp
100005c3:	57                   	push   edi
100005c4:	56                   	push   esi
100005c5:	53                   	push   ebx
100005c6:	83 ec 4c             	sub    esp,0x4c
100005c9:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005cd:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005d1:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005d5:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005d9:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005dd:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005e1:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005e5:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005e9:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005ed:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005f1:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100005f5:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
100005f9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100005fd:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10000601:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000605:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
1000060c:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000610:	83 f8 04             	cmp    eax,0x4
10000613:	75 28                	jne    1000063d <_ssfn_b+0x7b>
10000615:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000619:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
1000061d:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10000621:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000625:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000629:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
1000062d:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000631:	83 c4 4c             	add    esp,0x4c
10000634:	5b                   	pop    ebx
10000635:	5e                   	pop    esi
10000636:	5f                   	pop    edi
10000637:	5d                   	pop    ebp
10000638:	e9 74 fe ff ff       	jmp    100004b1 <_ssfn_l>
1000063d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000641:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000645:	75 0e                	jne    10000655 <_ssfn_b+0x93>
10000647:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000064b:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000064f:	0f 84 19 01 00 00    	je     1000076e <_ssfn_b+0x1ac>
10000655:	be 02 00 00 00       	mov    esi,0x2
1000065a:	89 d8                	mov    eax,ebx
1000065c:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10000660:	99                   	cdq    
10000661:	f7 fe                	idiv   esi
10000663:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000667:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000066b:	89 e8                	mov    eax,ebp
1000066d:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000671:	99                   	cdq    
10000672:	f7 fe                	idiv   esi
10000674:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000678:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000067c:	89 f8                	mov    eax,edi
1000067e:	29 d8                	sub    eax,ebx
10000680:	99                   	cdq    
10000681:	f7 fe                	idiv   esi
10000683:	01 c3                	add    ebx,eax
10000685:	89 c8                	mov    eax,ecx
10000687:	29 e8                	sub    eax,ebp
10000689:	99                   	cdq    
1000068a:	f7 fe                	idiv   esi
1000068c:	01 e8                	add    eax,ebp
1000068e:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000692:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000696:	29 f8                	sub    eax,edi
10000698:	99                   	cdq    
10000699:	f7 fe                	idiv   esi
1000069b:	01 f8                	add    eax,edi
1000069d:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006a1:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006a5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006a9:	29 c8                	sub    eax,ecx
100006ab:	99                   	cdq    
100006ac:	f7 fe                	idiv   esi
100006ae:	01 c8                	add    eax,ecx
100006b0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006b4:	89 d8                	mov    eax,ebx
100006b6:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006ba:	99                   	cdq    
100006bb:	f7 fe                	idiv   esi
100006bd:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006c0:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006c4:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006c8:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006cc:	99                   	cdq    
100006cd:	f7 fe                	idiv   esi
100006cf:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006d2:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006d6:	29 d8                	sub    eax,ebx
100006d8:	99                   	cdq    
100006d9:	f7 fe                	idiv   esi
100006db:	83 ec 0c             	sub    esp,0xc
100006de:	01 d8                	add    eax,ebx
100006e0:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006e4:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006e8:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006ec:	99                   	cdq    
100006ed:	f7 fe                	idiv   esi
100006ef:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006f3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100006f7:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100006fb:	29 c8                	sub    eax,ecx
100006fd:	99                   	cdq    
100006fe:	f7 fe                	idiv   esi
10000700:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000703:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000707:	29 e8                	sub    eax,ebp
10000709:	99                   	cdq    
1000070a:	f7 fe                	idiv   esi
1000070c:	8d 34 28             	lea    esi,[eax+ebp*1]
1000070f:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000713:	8d 78 01             	lea    edi,[eax+0x1]
10000716:	57                   	push   edi
10000717:	56                   	push   esi
10000718:	53                   	push   ebx
10000719:	55                   	push   ebp
1000071a:	51                   	push   ecx
1000071b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000071f:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000723:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000727:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
1000072b:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000072f:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000733:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000737:	e8 86 fe ff ff       	call   100005c2 <_ssfn_b>
1000073c:	83 c4 24             	add    esp,0x24
1000073f:	57                   	push   edi
10000740:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000744:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000748:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000074c:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000750:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000754:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000758:	56                   	push   esi
10000759:	53                   	push   ebx
1000075a:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000075e:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000762:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000766:	e8 57 fe ff ff       	call   100005c2 <_ssfn_b>
1000076b:	83 c4 30             	add    esp,0x30
1000076e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10000773:	0f 85 9c fe ff ff    	jne    10000615 <_ssfn_b+0x53>
10000779:	83 c4 4c             	add    esp,0x4c
1000077c:	5b                   	pop    ebx
1000077d:	5e                   	pop    esi
1000077e:	5f                   	pop    edi
1000077f:	5d                   	pop    ebp
10000780:	c3                   	ret    

10000781 <_ssfn__zreceive>:
10000781:	56                   	push   esi
10000782:	53                   	push   ebx
10000783:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000786:	7d 1d                	jge    100007a5 <_ssfn__zreceive+0x24>
10000788:	8b 18                	mov    ebx,DWORD PTR [eax]
1000078a:	8d 4b 01             	lea    ecx,[ebx+0x1]
1000078d:	89 08                	mov    DWORD PTR [eax],ecx
1000078f:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
10000792:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000795:	d3 e3                	shl    ebx,cl
10000797:	83 c1 08             	add    ecx,0x8
1000079a:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
1000079d:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007a0:	83 f9 18             	cmp    ecx,0x18
100007a3:	7e e3                	jle    10000788 <_ssfn__zreceive+0x7>
100007a5:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007a8:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007ab:	89 f3                	mov    ebx,esi
100007ad:	88 d1                	mov    cl,dl
100007af:	d3 eb                	shr    ebx,cl
100007b1:	88 d1                	mov    cl,dl
100007b3:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007b6:	bb 01 00 00 00       	mov    ebx,0x1
100007bb:	d3 e3                	shl    ebx,cl
100007bd:	8d 43 ff             	lea    eax,[ebx-0x1]
100007c0:	5b                   	pop    ebx
100007c1:	21 f0                	and    eax,esi
100007c3:	5e                   	pop    esi
100007c4:	c3                   	ret    

100007c5 <ssfn_utf8>:
100007c5:	56                   	push   esi
100007c6:	53                   	push   ebx
100007c7:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007cb:	8b 11                	mov    edx,DWORD PTR [ecx]
100007cd:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007d0:	89 f0                	mov    eax,esi
100007d2:	84 c0                	test   al,al
100007d4:	0f be d8             	movsx  ebx,al
100007d7:	78 04                	js     100007dd <ssfn_utf8+0x18>
100007d9:	89 d8                	mov    eax,ebx
100007db:	eb 7d                	jmp    1000085a <ssfn_utf8+0x95>
100007dd:	f7 c6 20 00 00 00    	test   esi,0x20
100007e3:	75 14                	jne    100007f9 <ssfn_utf8+0x34>
100007e5:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007e8:	c1 e3 06             	shl    ebx,0x6
100007eb:	83 e0 3f             	and    eax,0x3f
100007ee:	81 e3 c0 07 00 00    	and    ebx,0x7c0
100007f4:	42                   	inc    edx
100007f5:	09 d8                	or     eax,ebx
100007f7:	eb 5f                	jmp    10000858 <ssfn_utf8+0x93>
100007f9:	f7 c6 10 00 00 00    	test   esi,0x10
100007ff:	75 20                	jne    10000821 <ssfn_utf8+0x5c>
10000801:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000805:	c1 e3 0c             	shl    ebx,0xc
10000808:	c1 e0 06             	shl    eax,0x6
1000080b:	0f b7 db             	movzx  ebx,bx
1000080e:	25 c0 0f 00 00       	and    eax,0xfc0
10000813:	83 c2 02             	add    edx,0x2
10000816:	09 d8                	or     eax,ebx
10000818:	8a 1a                	mov    bl,BYTE PTR [edx]
1000081a:	83 e3 3f             	and    ebx,0x3f
1000081d:	09 d8                	or     eax,ebx
1000081f:	eb 37                	jmp    10000858 <ssfn_utf8+0x93>
10000821:	31 c0                	xor    eax,eax
10000823:	83 e6 08             	and    esi,0x8
10000826:	75 32                	jne    1000085a <ssfn_utf8+0x95>
10000828:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
1000082c:	c1 e3 12             	shl    ebx,0x12
1000082f:	c1 e0 0c             	shl    eax,0xc
10000832:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000838:	25 00 f0 03 00       	and    eax,0x3f000
1000083d:	83 c2 03             	add    edx,0x3
10000840:	09 d8                	or     eax,ebx
10000842:	8a 1a                	mov    bl,BYTE PTR [edx]
10000844:	83 e3 3f             	and    ebx,0x3f
10000847:	09 d8                	or     eax,ebx
10000849:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
1000084d:	c1 e3 06             	shl    ebx,0x6
10000850:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000856:	09 d8                	or     eax,ebx
10000858:	89 11                	mov    DWORD PTR [ecx],edx
1000085a:	ff 01                	inc    DWORD PTR [ecx]
1000085c:	5b                   	pop    ebx
1000085d:	5e                   	pop    esi
1000085e:	c3                   	ret    

1000085f <_ssfn_c>:
1000085f:	55                   	push   ebp
10000860:	57                   	push   edi
10000861:	56                   	push   esi
10000862:	53                   	push   ebx
10000863:	83 ec 14             	sub    esp,0x14
10000866:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
1000086c:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000870:	85 c0                	test   eax,eax
10000872:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000878:	0f 84 e6 00 00 00    	je     10000964 <_ssfn_c+0x105>
1000087e:	31 ff                	xor    edi,edi
10000880:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000884:	0f 84 f3 00 00 00    	je     1000097d <_ssfn_c+0x11e>
1000088a:	85 d2                	test   edx,edx
1000088c:	0f 84 eb 00 00 00    	je     1000097d <_ssfn_c+0x11e>
10000892:	80 3a 00             	cmp    BYTE PTR [edx],0x0
10000895:	0f 84 e2 00 00 00    	je     1000097d <_ssfn_c+0x11e>
1000089b:	89 d6                	mov    esi,edx
1000089d:	89 cd                	mov    ebp,ecx
1000089f:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008a2:	89 c3                	mov    ebx,eax
100008a4:	85 d2                	test   edx,edx
100008a6:	74 38                	je     100008e0 <_ssfn_c+0x81>
100008a8:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008ab:	31 c0                	xor    eax,eax
100008ad:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008b0:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008b3:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008b7:	66 85 d2             	test   dx,dx
100008ba:	74 24                	je     100008e0 <_ssfn_c+0x81>
100008bc:	01 da                	add    edx,ebx
100008be:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008c2:	8a 0a                	mov    cl,BYTE PTR [edx]
100008c4:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008c8:	84 c9                	test   cl,cl
100008ca:	0f 84 9e 00 00 00    	je     1000096e <_ssfn_c+0x10f>
100008d0:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008d2:	0f 85 90 00 00 00    	jne    10000968 <_ssfn_c+0x109>
100008d8:	47                   	inc    edi
100008d9:	42                   	inc    edx
100008da:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008de:	eb e2                	jmp    100008c2 <_ssfn_c+0x63>
100008e0:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008e4:	8d 44 24 10          	lea    eax,[esp+0x10]
100008e8:	50                   	push   eax
100008e9:	e8 fc ff ff ff       	call   100008ea <_ssfn_c+0x8b>	100008ea: R_386_PC32	ssfn_utf8
100008ee:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008f2:	29 f2                	sub    edx,esi
100008f4:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
100008f7:	5a                   	pop    edx
100008f8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008fc:	89 06                	mov    DWORD PTR [esi],eax
100008fe:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
10000901:	89 df                	mov    edi,ebx
10000903:	31 db                	xor    ebx,ebx
10000905:	8a 17                	mov    dl,BYTE PTR [edi]
10000907:	80 fa ff             	cmp    dl,0xff
1000090a:	75 08                	jne    10000914 <_ssfn_c+0xb5>
1000090c:	81 c3 ff ff 00 00    	add    ebx,0xffff
10000912:	eb 2a                	jmp    1000093e <_ssfn_c+0xdf>
10000914:	88 d1                	mov    cl,dl
10000916:	83 e1 c0             	and    ecx,0xffffffc0
10000919:	80 f9 c0             	cmp    cl,0xc0
1000091c:	75 16                	jne    10000934 <_ssfn_c+0xd5>
1000091e:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000922:	c1 e2 08             	shl    edx,0x8
10000925:	83 c7 02             	add    edi,0x2
10000928:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000092e:	09 ca                	or     edx,ecx
10000930:	01 d3                	add    ebx,edx
10000932:	eb 27                	jmp    1000095b <_ssfn_c+0xfc>
10000934:	80 f9 80             	cmp    cl,0x80
10000937:	75 08                	jne    10000941 <_ssfn_c+0xe2>
10000939:	83 e2 3f             	and    edx,0x3f
1000093c:	01 d3                	add    ebx,edx
1000093e:	47                   	inc    edi
1000093f:	eb 1a                	jmp    1000095b <_ssfn_c+0xfc>
10000941:	39 d8                	cmp    eax,ebx
10000943:	74 38                	je     1000097d <_ssfn_c+0x11e>
10000945:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000949:	83 e2 40             	and    edx,0x40
1000094c:	80 fa 01             	cmp    dl,0x1
1000094f:	19 d2                	sbb    edx,edx
10000951:	83 c2 06             	add    edx,0x6
10000954:	0f af d1             	imul   edx,ecx
10000957:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
1000095b:	43                   	inc    ebx
1000095c:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
10000962:	76 a1                	jbe    10000905 <_ssfn_c+0xa6>
10000964:	31 ff                	xor    edi,edi
10000966:	eb 15                	jmp    1000097d <_ssfn_c+0x11e>
10000968:	40                   	inc    eax
10000969:	e9 42 ff ff ff       	jmp    100008b0 <_ssfn_c+0x51>
1000096e:	29 f7                	sub    edi,esi
10000970:	05 00 f0 00 00       	add    eax,0xf000
10000975:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000978:	e9 7b ff ff ff       	jmp    100008f8 <_ssfn_c+0x99>
1000097d:	83 c4 14             	add    esp,0x14
10000980:	89 f8                	mov    eax,edi
10000982:	5b                   	pop    ebx
10000983:	5e                   	pop    esi
10000984:	5f                   	pop    edi
10000985:	5d                   	pop    ebp
10000986:	c3                   	ret    

10000987 <_ssfn_zlib_decode>:
10000987:	55                   	push   ebp
10000988:	57                   	push   edi
10000989:	56                   	push   esi
1000098a:	53                   	push   ebx
1000098b:	81 ec c8 19 00 00    	sub    esp,0x19c8
10000991:	6a 08                	push   0x8
10000993:	e8 fc ff ff ff       	call   10000994 <_ssfn_zlib_decode+0xd>	10000994: R_386_PC32	malloc
10000998:	83 c4 10             	add    esp,0x10
1000099b:	89 c2                	mov    edx,eax
1000099d:	85 c0                	test   eax,eax
1000099f:	0f 84 eb 04 00 00    	je     10000e90 <_ssfn_zlib_decode+0x509>
100009a5:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009ac:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009b3:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009ba:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009c1:	31 c0                	xor    eax,eax
100009c3:	83 c2 08             	add    edx,0x8
100009c6:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009cd:	c6 80 a0 49 01 10 08 	mov    BYTE PTR [eax+0x100149a0],0x8	100009cf: R_386_32	.bss
100009d4:	40                   	inc    eax
100009d5:	3d 90 00 00 00       	cmp    eax,0x90
100009da:	75 f1                	jne    100009cd <_ssfn_zlib_decode+0x46>
100009dc:	c6 80 a0 49 01 10 09 	mov    BYTE PTR [eax+0x100149a0],0x9	100009de: R_386_32	.bss
100009e3:	40                   	inc    eax
100009e4:	3d 00 01 00 00       	cmp    eax,0x100
100009e9:	75 f1                	jne    100009dc <_ssfn_zlib_decode+0x55>
100009eb:	c6 80 a0 49 01 10 07 	mov    BYTE PTR [eax+0x100149a0],0x7	100009ed: R_386_32	.bss
100009f2:	40                   	inc    eax
100009f3:	3d 18 01 00 00       	cmp    eax,0x118
100009f8:	75 f1                	jne    100009eb <_ssfn_zlib_decode+0x64>
100009fa:	c7 05 b8 4a 01 10 08 08 08 08 	mov    DWORD PTR ds:0x10014ab8,0x8080808	100009fc: R_386_32	.bss
10000a04:	c7 05 bc 4a 01 10 08 08 08 08 	mov    DWORD PTR ds:0x10014abc,0x8080808	10000a06: R_386_32	.bss
10000a0e:	31 c0                	xor    eax,eax
10000a10:	c6 80 80 49 01 10 05 	mov    BYTE PTR [eax+0x10014980],0x5	10000a12: R_386_32	.bss
10000a17:	40                   	inc    eax
10000a18:	83 f8 20             	cmp    eax,0x20
10000a1b:	75 f3                	jne    10000a10 <_ssfn_zlib_decode+0x89>
10000a1d:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a28:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a33:	ba 01 00 00 00       	mov    edx,0x1
10000a38:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a3f:	e8 3d fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a44:	ba 02 00 00 00       	mov    edx,0x2
10000a49:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a4d:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a54:	e8 28 fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a59:	89 c6                	mov    esi,eax
10000a5b:	85 c0                	test   eax,eax
10000a5d:	0f 85 09 01 00 00    	jne    10000b6c <_ssfn_zlib_decode+0x1e5>
10000a63:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a6a:	83 e2 07             	and    edx,0x7
10000a6d:	74 0c                	je     10000a7b <_ssfn_zlib_decode+0xf4>
10000a6f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a76:	e8 06 fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a7b:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a82:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a89:	31 c0                	xor    eax,eax
10000a8b:	31 db                	xor    ebx,ebx
10000a8d:	85 d2                	test   edx,edx
10000a8f:	7f 14                	jg     10000aa5 <_ssfn_zlib_decode+0x11e>
10000a91:	84 db                	test   bl,bl
10000a93:	74 22                	je     10000ab7 <_ssfn_zlib_decode+0x130>
10000a95:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000a9c:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aa3:	eb 12                	jmp    10000ab7 <_ssfn_zlib_decode+0x130>
10000aa5:	40                   	inc    eax
10000aa6:	83 ea 08             	sub    edx,0x8
10000aa9:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000ab0:	b3 01                	mov    bl,0x1
10000ab2:	c1 e9 08             	shr    ecx,0x8
10000ab5:	eb d6                	jmp    10000a8d <_ssfn_zlib_decode+0x106>
10000ab7:	83 f8 04             	cmp    eax,0x4
10000aba:	74 1d                	je     10000ad9 <_ssfn_zlib_decode+0x152>
10000abc:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000ac3:	40                   	inc    eax
10000ac4:	8d 4a 01             	lea    ecx,[edx+0x1]
10000ac7:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ace:	8a 12                	mov    dl,BYTE PTR [edx]
10000ad0:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000ad7:	eb de                	jmp    10000ab7 <_ssfn_zlib_decode+0x130>
10000ad9:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000ae1:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000ae9:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000af1:	c1 e3 08             	shl    ebx,0x8
10000af4:	01 c3                	add    ebx,eax
10000af6:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000afe:	c1 e0 08             	shl    eax,0x8
10000b01:	01 d0                	add    eax,edx
10000b03:	89 da                	mov    edx,ebx
10000b05:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b0b:	39 d0                	cmp    eax,edx
10000b0d:	0f 85 69 03 00 00    	jne    10000e7c <_ssfn_zlib_decode+0x4f5>
10000b13:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b1a:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b1d:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b24:	73 14                	jae    10000b3a <_ssfn_zlib_decode+0x1b3>
10000b26:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b2d:	e8 19 f7 ff ff       	call   1000024b <_ssfn__zexpand>
10000b32:	85 c0                	test   eax,eax
10000b34:	0f 84 42 03 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b3a:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b41:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b48:	39 f3                	cmp    ebx,esi
10000b4a:	74 09                	je     10000b55 <_ssfn_zlib_decode+0x1ce>
10000b4c:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b4f:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b52:	46                   	inc    esi
10000b53:	eb e5                	jmp    10000b3a <_ssfn_zlib_decode+0x1b3>
10000b55:	01 da                	add    edx,ebx
10000b57:	01 c3                	add    ebx,eax
10000b59:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b60:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b67:	e9 fc 02 00 00       	jmp    10000e68 <_ssfn_zlib_decode+0x4e1>
10000b6c:	83 f8 03             	cmp    eax,0x3
10000b6f:	0f 84 07 03 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b75:	4e                   	dec    esi
10000b76:	75 2d                	jne    10000ba5 <_ssfn_zlib_decode+0x21e>
10000b78:	b9 20 01 00 00       	mov    ecx,0x120
10000b7d:	ba a0 49 01 10       	mov    edx,0x100149a0	10000b7e: R_386_32	.bss
10000b82:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b89:	e8 1c f7 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000b8e:	85 c0                	test   eax,eax
10000b90:	0f 84 e6 02 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b96:	b9 20 00 00 00       	mov    ecx,0x20
10000b9b:	ba 80 49 01 10       	mov    edx,0x10014980	10000b9c: R_386_32	.bss
10000ba0:	e9 78 01 00 00       	jmp    10000d1d <_ssfn_zlib_decode+0x396>
10000ba5:	ba 05 00 00 00       	mov    edx,0x5
10000baa:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bb1:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bb5:	e8 c7 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000bba:	89 df                	mov    edi,ebx
10000bbc:	ba 05 00 00 00       	mov    edx,0x5
10000bc1:	89 c5                	mov    ebp,eax
10000bc3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bca:	e8 b2 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000bcf:	ba 04 00 00 00       	mov    edx,0x4
10000bd4:	89 c6                	mov    esi,eax
10000bd6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bdd:	e8 9f fb ff ff       	call   10000781 <_ssfn__zreceive>
10000be2:	b9 13 00 00 00       	mov    ecx,0x13
10000be7:	83 c0 04             	add    eax,0x4
10000bea:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bee:	31 c0                	xor    eax,eax
10000bf0:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bf2:	31 ff                	xor    edi,edi
10000bf4:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000bf8:	7e 1f                	jle    10000c19 <_ssfn_zlib_decode+0x292>
10000bfa:	ba 03 00 00 00       	mov    edx,0x3
10000bff:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c06:	47                   	inc    edi
10000c07:	e8 75 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000c0c:	0f b6 97 5f 48 00 10 	movzx  edx,BYTE PTR [edi+0x1000485f]	10000c0f: R_386_32	.text
10000c13:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c17:	eb db                	jmp    10000bf4 <_ssfn_zlib_decode+0x26d>
10000c19:	b9 13 00 00 00       	mov    ecx,0x13
10000c1e:	89 da                	mov    edx,ebx
10000c20:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c27:	e8 7e f6 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000c2c:	85 c0                	test   eax,eax
10000c2e:	0f 84 48 02 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c34:	8d 46 01             	lea    eax,[esi+0x1]
10000c37:	81 c5 01 01 00 00    	add    ebp,0x101
10000c3d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c41:	31 f6                	xor    esi,esi
10000c43:	01 e8                	add    eax,ebp
10000c45:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c49:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c4d:	0f 8e 9f 00 00 00    	jle    10000cf2 <_ssfn_zlib_decode+0x36b>
10000c53:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c5a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c61:	e8 35 f5 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000c66:	83 f8 12             	cmp    eax,0x12
10000c69:	0f 87 0d 02 00 00    	ja     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c6f:	83 f8 0f             	cmp    eax,0xf
10000c72:	7f 07                	jg     10000c7b <_ssfn_zlib_decode+0x2f4>
10000c74:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c78:	46                   	inc    esi
10000c79:	eb ce                	jmp    10000c49 <_ssfn_zlib_decode+0x2c2>
10000c7b:	83 f8 10             	cmp    eax,0x10
10000c7e:	75 22                	jne    10000ca2 <_ssfn_zlib_decode+0x31b>
10000c80:	ba 02 00 00 00       	mov    edx,0x2
10000c85:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c8c:	e8 f0 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000c91:	85 f6                	test   esi,esi
10000c93:	8d 58 03             	lea    ebx,[eax+0x3]
10000c96:	0f 84 e0 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c9c:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000ca0:	eb 31                	jmp    10000cd3 <_ssfn_zlib_decode+0x34c>
10000ca2:	83 f8 11             	cmp    eax,0x11
10000ca5:	75 16                	jne    10000cbd <_ssfn_zlib_decode+0x336>
10000ca7:	ba 03 00 00 00       	mov    edx,0x3
10000cac:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cb3:	e8 c9 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000cb8:	8d 58 03             	lea    ebx,[eax+0x3]
10000cbb:	eb 14                	jmp    10000cd1 <_ssfn_zlib_decode+0x34a>
10000cbd:	ba 07 00 00 00       	mov    edx,0x7
10000cc2:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cc9:	e8 b3 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000cce:	8d 58 0b             	lea    ebx,[eax+0xb]
10000cd1:	31 c0                	xor    eax,eax
10000cd3:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000cd7:	29 f2                	sub    edx,esi
10000cd9:	39 da                	cmp    edx,ebx
10000cdb:	0f 8c 9b 01 00 00    	jl     10000e7c <_ssfn_zlib_decode+0x4f5>
10000ce1:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000ce5:	89 d9                	mov    ecx,ebx
10000ce7:	89 d7                	mov    edi,edx
10000ce9:	01 de                	add    esi,ebx
10000ceb:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000ced:	e9 57 ff ff ff       	jmp    10000c49 <_ssfn_zlib_decode+0x2c2>
10000cf2:	0f 85 84 01 00 00    	jne    10000e7c <_ssfn_zlib_decode+0x4f5>
10000cf8:	89 e9                	mov    ecx,ebp
10000cfa:	8d 54 24 25          	lea    edx,[esp+0x25]
10000cfe:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d05:	e8 a0 f5 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000d0a:	85 c0                	test   eax,eax
10000d0c:	0f 84 6a 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d12:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d16:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d1a:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d1d:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d24:	e8 81 f5 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000d29:	85 c0                	test   eax,eax
10000d2b:	0f 84 4b 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d31:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d38:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d3f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d46:	e8 50 f4 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000d4b:	89 c3                	mov    ebx,eax
10000d4d:	3d ff 00 00 00       	cmp    eax,0xff
10000d52:	7f 34                	jg     10000d88 <_ssfn_zlib_decode+0x401>
10000d54:	85 c0                	test   eax,eax
10000d56:	0f 88 20 01 00 00    	js     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d5c:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d63:	77 1d                	ja     10000d82 <_ssfn_zlib_decode+0x3fb>
10000d65:	89 ea                	mov    edx,ebp
10000d67:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d6e:	e8 d8 f4 ff ff       	call   1000024b <_ssfn__zexpand>
10000d73:	85 c0                	test   eax,eax
10000d75:	0f 84 01 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d7b:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d82:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d85:	45                   	inc    ebp
10000d86:	eb b0                	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000d88:	3d 00 01 00 00       	cmp    eax,0x100
10000d8d:	75 0c                	jne    10000d9b <_ssfn_zlib_decode+0x414>
10000d8f:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000d96:	e9 cd 00 00 00       	jmp    10000e68 <_ssfn_zlib_decode+0x4e1>
10000d9b:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000da1:	8b 14 85 80 49 00 10 	mov    edx,DWORD PTR [eax*4+0x10004980]	10000da4: R_386_32	.text
10000da8:	8b 1c 85 00 4a 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004a00]	10000dab: R_386_32	.text
10000daf:	85 d2                	test   edx,edx
10000db1:	74 0e                	je     10000dc1 <_ssfn_zlib_decode+0x43a>
10000db3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dba:	e8 c2 f9 ff ff       	call   10000781 <_ssfn__zreceive>
10000dbf:	01 c3                	add    ebx,eax
10000dc1:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000dc8:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dcf:	e8 c7 f3 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000dd4:	85 c0                	test   eax,eax
10000dd6:	0f 88 a0 00 00 00    	js     10000e7c <_ssfn_zlib_decode+0x4f5>
10000ddc:	8b 14 85 80 48 00 10 	mov    edx,DWORD PTR [eax*4+0x10004880]	10000ddf: R_386_32	.text
10000de3:	8b 3c 85 00 49 00 10 	mov    edi,DWORD PTR [eax*4+0x10004900]	10000de6: R_386_32	.text
10000dea:	85 d2                	test   edx,edx
10000dec:	74 0e                	je     10000dfc <_ssfn_zlib_decode+0x475>
10000dee:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000df5:	e8 87 f9 ff ff       	call   10000781 <_ssfn__zreceive>
10000dfa:	01 c7                	add    edi,eax
10000dfc:	89 e8                	mov    eax,ebp
10000dfe:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e05:	39 f8                	cmp    eax,edi
10000e07:	7c 73                	jl     10000e7c <_ssfn_zlib_decode+0x4f5>
10000e09:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e0d:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e14:	73 19                	jae    10000e2f <_ssfn_zlib_decode+0x4a8>
10000e16:	89 ea                	mov    edx,ebp
10000e18:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e1f:	e8 27 f4 ff ff       	call   1000024b <_ssfn__zexpand>
10000e24:	85 c0                	test   eax,eax
10000e26:	74 54                	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000e28:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e2f:	89 ee                	mov    esi,ebp
10000e31:	29 fe                	sub    esi,edi
10000e33:	4f                   	dec    edi
10000e34:	75 19                	jne    10000e4f <_ssfn_zlib_decode+0x4c8>
10000e36:	85 db                	test   ebx,ebx
10000e38:	0f 84 fa fe ff ff    	je     10000d38 <_ssfn_zlib_decode+0x3b1>
10000e3e:	8a 06                	mov    al,BYTE PTR [esi]
10000e40:	01 eb                	add    ebx,ebp
10000e42:	45                   	inc    ebp
10000e43:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e46:	39 dd                	cmp    ebp,ebx
10000e48:	75 f8                	jne    10000e42 <_ssfn_zlib_decode+0x4bb>
10000e4a:	e9 e9 fe ff ff       	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000e4f:	85 db                	test   ebx,ebx
10000e51:	0f 84 e1 fe ff ff    	je     10000d38 <_ssfn_zlib_decode+0x3b1>
10000e57:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e5a:	89 ef                	mov    edi,ebp
10000e5c:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e5d:	39 f0                	cmp    eax,esi
10000e5f:	75 fb                	jne    10000e5c <_ssfn_zlib_decode+0x4d5>
10000e61:	01 dd                	add    ebp,ebx
10000e63:	e9 d0 fe ff ff       	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000e68:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e6d:	0f 84 c0 fb ff ff    	je     10000a33 <_ssfn_zlib_decode+0xac>
10000e73:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e7a:	eb 14                	jmp    10000e90 <_ssfn_zlib_decode+0x509>
10000e7c:	83 ec 0c             	sub    esp,0xc
10000e7f:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e86:	e8 fc ff ff ff       	call   10000e87 <_ssfn_zlib_decode+0x500>	10000e87: R_386_PC32	free
10000e8b:	83 c4 10             	add    esp,0x10
10000e8e:	31 c0                	xor    eax,eax
10000e90:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000e96:	5b                   	pop    ebx
10000e97:	5e                   	pop    esi
10000e98:	5f                   	pop    edi
10000e99:	5d                   	pop    ebp
10000e9a:	c3                   	ret    

10000e9b <ssfn_load>:
10000e9b:	55                   	push   ebp
10000e9c:	57                   	push   edi
10000e9d:	56                   	push   esi
10000e9e:	53                   	push   ebx
10000e9f:	83 ec 1c             	sub    esp,0x1c
10000ea2:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000ea6:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000eaa:	85 ff                	test   edi,edi
10000eac:	0f 84 d0 01 00 00    	je     10001082 <ssfn_load+0x1e7>
10000eb2:	85 f6                	test   esi,esi
10000eb4:	0f 84 c8 01 00 00    	je     10001082 <ssfn_load+0x1e7>
10000eba:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ebd:	0f 85 a8 00 00 00    	jne    10000f6b <ssfn_load+0xd0>
10000ec3:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000ec7:	0f 85 9e 00 00 00    	jne    10000f6b <ssfn_load+0xd0>
10000ecd:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000ed1:	74 0a                	je     10000edd <ssfn_load+0x42>
10000ed3:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ed8:	e9 aa 01 00 00       	jmp    10001087 <ssfn_load+0x1ec>
10000edd:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000ee0:	a8 04                	test   al,0x4
10000ee2:	75 05                	jne    10000ee9 <ssfn_load+0x4e>
10000ee4:	83 c6 0a             	add    esi,0xa
10000ee7:	eb 08                	jmp    10000ef1 <ssfn_load+0x56>
10000ee9:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000eed:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000ef1:	a8 08                	test   al,0x8
10000ef3:	74 07                	je     10000efc <ssfn_load+0x61>
10000ef5:	46                   	inc    esi
10000ef6:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000efa:	eb f7                	jmp    10000ef3 <ssfn_load+0x58>
10000efc:	a8 10                	test   al,0x10
10000efe:	74 07                	je     10000f07 <ssfn_load+0x6c>
10000f00:	46                   	inc    esi
10000f01:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f05:	eb f7                	jmp    10000efe <ssfn_load+0x63>
10000f07:	83 ec 0c             	sub    esp,0xc
10000f0a:	56                   	push   esi
10000f0b:	e8 fc ff ff ff       	call   10000f0c <ssfn_load+0x71>	10000f0c: R_386_PC32	_ssfn_zlib_decode
10000f10:	83 c4 10             	add    esp,0x10
10000f13:	89 c6                	mov    esi,eax
10000f15:	85 c0                	test   eax,eax
10000f17:	74 ba                	je     10000ed3 <ssfn_load+0x38>
10000f19:	50                   	push   eax
10000f1a:	50                   	push   eax
10000f1b:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f21:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f28:	50                   	push   eax
10000f29:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f2f:	e8 fc ff ff ff       	call   10000f30 <ssfn_load+0x95>	10000f30: R_386_PC32	realloc
10000f34:	83 c4 10             	add    esp,0x10
10000f37:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f3d:	85 c0                	test   eax,eax
10000f3f:	75 0f                	jne    10000f50 <ssfn_load+0xb5>
10000f41:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f4b:	e9 1a 01 00 00       	jmp    1000106a <ssfn_load+0x1cf>
10000f50:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f56:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f59:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f5f:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f62:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f65:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f6b:	50                   	push   eax
10000f6c:	6a 04                	push   0x4
10000f6e:	68 3d 47 00 10       	push   0x1000473d	10000f6f: R_386_32	.text
10000f73:	56                   	push   esi
10000f74:	e8 fc ff ff ff       	call   10000f75 <ssfn_load+0xda>	10000f75: R_386_PC32	memcmp
10000f79:	83 c4 10             	add    esp,0x10
10000f7c:	89 c5                	mov    ebp,eax
10000f7e:	85 c0                	test   eax,eax
10000f80:	75 29                	jne    10000fab <ssfn_load+0x110>
10000f82:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f85:	01 f3                	add    ebx,esi
10000f87:	83 c6 08             	add    esi,0x8
10000f8a:	39 de                	cmp    esi,ebx
10000f8c:	0f 83 f5 00 00 00    	jae    10001087 <ssfn_load+0x1ec>
10000f92:	50                   	push   eax
10000f93:	50                   	push   eax
10000f94:	56                   	push   esi
10000f95:	57                   	push   edi
10000f96:	e8 fc ff ff ff       	call   10000f97 <ssfn_load+0xfc>	10000f97: R_386_PC32	ssfn_load
10000f9b:	83 c4 10             	add    esp,0x10
10000f9e:	85 c0                	test   eax,eax
10000fa0:	0f 85 e1 00 00 00    	jne    10001087 <ssfn_load+0x1ec>
10000fa6:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fa9:	eb df                	jmp    10000f8a <ssfn_load+0xef>
10000fab:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fae:	83 e0 0f             	and    eax,0xf
10000fb1:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fb5:	53                   	push   ebx
10000fb6:	6a 04                	push   0x4
10000fb8:	68 42 47 00 10       	push   0x10004742	10000fb9: R_386_32	.text
10000fbd:	56                   	push   esi
10000fbe:	e8 fc ff ff ff       	call   10000fbf <ssfn_load+0x124>	10000fbf: R_386_PC32	memcmp
10000fc3:	83 c4 10             	add    esp,0x10
10000fc6:	89 c5                	mov    ebp,eax
10000fc8:	85 c0                	test   eax,eax
10000fca:	0f 85 03 ff ff ff    	jne    10000ed3 <ssfn_load+0x38>
10000fd0:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fd3:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fd7:	51                   	push   ecx
10000fd8:	6a 04                	push   0x4
10000fda:	68 47 47 00 10       	push   0x10004747	10000fdb: R_386_32	.text
10000fdf:	50                   	push   eax
10000fe0:	e8 fc ff ff ff       	call   10000fe1 <ssfn_load+0x146>	10000fe1: R_386_PC32	memcmp
10000fe5:	83 c4 10             	add    esp,0x10
10000fe8:	85 c0                	test   eax,eax
10000fea:	0f 85 e3 fe ff ff    	jne    10000ed3 <ssfn_load+0x38>
10000ff0:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10000ff5:	0f 87 d8 fe ff ff    	ja     10000ed3 <ssfn_load+0x38>
10000ffb:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10000fff:	39 cb                	cmp    ebx,ecx
10001001:	0f 86 cc fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001007:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
1000100a:	39 c3                	cmp    ebx,eax
1000100c:	0f 86 c1 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001012:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001015:	0f 86 b8 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
1000101b:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000101e:	0f 86 af fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001024:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001027:	0f 86 a6 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
1000102d:	39 c1                	cmp    ecx,eax
1000102f:	0f 83 9e fe ff ff    	jae    10000ed3 <ssfn_load+0x38>
10001035:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
1000103a:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
1000103d:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
10001043:	40                   	inc    eax
10001044:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
1000104a:	52                   	push   edx
1000104b:	c1 e0 02             	shl    eax,0x2
1000104e:	52                   	push   edx
1000104f:	50                   	push   eax
10001050:	ff 33                	push   DWORD PTR [ebx]
10001052:	e8 fc ff ff ff       	call   10001053 <ssfn_load+0x1b8>	10001053: R_386_PC32	realloc
10001057:	83 c4 10             	add    esp,0x10
1000105a:	89 03                	mov    DWORD PTR [ebx],eax
1000105c:	85 c0                	test   eax,eax
1000105e:	75 0f                	jne    1000106f <ssfn_load+0x1d4>
10001060:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
1000106a:	83 cd ff             	or     ebp,0xffffffff
1000106d:	eb 18                	jmp    10001087 <ssfn_load+0x1ec>
1000106f:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001075:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001079:	89 f8                	mov    eax,edi
1000107b:	e8 ad f3 ff ff       	call   1000042d <_ssfn_fc.part.1>
10001080:	eb 05                	jmp    10001087 <ssfn_load+0x1ec>
10001082:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10001087:	83 c4 1c             	add    esp,0x1c
1000108a:	89 e8                	mov    eax,ebp
1000108c:	5b                   	pop    ebx
1000108d:	5e                   	pop    esi
1000108e:	5f                   	pop    edi
1000108f:	5d                   	pop    ebp
10001090:	c3                   	ret    

10001091 <ssfn_free>:
10001091:	57                   	push   edi
10001092:	56                   	push   esi
10001093:	53                   	push   ebx
10001094:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10001098:	85 db                	test   ebx,ebx
1000109a:	74 7e                	je     1000111a <ssfn_free+0x89>
1000109c:	89 d8                	mov    eax,ebx
1000109e:	e8 8a f3 ff ff       	call   1000042d <_ssfn_fc.part.1>
100010a3:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010aa:	74 32                	je     100010de <ssfn_free+0x4d>
100010ac:	31 f6                	xor    esi,esi
100010ae:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010b4:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010ba:	7e 16                	jle    100010d2 <ssfn_free+0x41>
100010bc:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010bf:	85 c0                	test   eax,eax
100010c1:	74 0c                	je     100010cf <ssfn_free+0x3e>
100010c3:	83 ec 0c             	sub    esp,0xc
100010c6:	50                   	push   eax
100010c7:	e8 fc ff ff ff       	call   100010c8 <ssfn_free+0x37>	100010c8: R_386_PC32	free
100010cc:	83 c4 10             	add    esp,0x10
100010cf:	46                   	inc    esi
100010d0:	eb dc                	jmp    100010ae <ssfn_free+0x1d>
100010d2:	83 ec 0c             	sub    esp,0xc
100010d5:	50                   	push   eax
100010d6:	e8 fc ff ff ff       	call   100010d7 <ssfn_free+0x46>	100010d7: R_386_PC32	free
100010db:	83 c4 10             	add    esp,0x10
100010de:	31 f6                	xor    esi,esi
100010e0:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010e3:	85 c0                	test   eax,eax
100010e5:	74 0c                	je     100010f3 <ssfn_free+0x62>
100010e7:	83 ec 0c             	sub    esp,0xc
100010ea:	50                   	push   eax
100010eb:	e8 fc ff ff ff       	call   100010ec <ssfn_free+0x5b>	100010ec: R_386_PC32	free
100010f0:	83 c4 10             	add    esp,0x10
100010f3:	46                   	inc    esi
100010f4:	83 fe 05             	cmp    esi,0x5
100010f7:	75 e7                	jne    100010e0 <ssfn_free+0x4f>
100010f9:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100010ff:	85 c0                	test   eax,eax
10001101:	74 0c                	je     1000110f <ssfn_free+0x7e>
10001103:	83 ec 0c             	sub    esp,0xc
10001106:	50                   	push   eax
10001107:	e8 fc ff ff ff       	call   10001108 <ssfn_free+0x77>	10001108: R_386_PC32	free
1000110c:	83 c4 10             	add    esp,0x10
1000110f:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001114:	31 c0                	xor    eax,eax
10001116:	89 df                	mov    edi,ebx
10001118:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000111a:	5b                   	pop    ebx
1000111b:	5e                   	pop    esi
1000111c:	5f                   	pop    edi
1000111d:	c3                   	ret    

1000111e <ssfn_mem>:
1000111e:	55                   	push   ebp
1000111f:	31 c0                	xor    eax,eax
10001121:	57                   	push   edi
10001122:	56                   	push   esi
10001123:	53                   	push   ebx
10001124:	83 ec 08             	sub    esp,0x8
10001127:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000112b:	85 d2                	test   edx,edx
1000112d:	0f 84 8e 00 00 00    	je     100011c1 <ssfn_mem+0xa3>
10001133:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001138:	31 c9                	xor    ecx,ecx
1000113a:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10001141:	41                   	inc    ecx
10001142:	8d 04 98             	lea    eax,[eax+ebx*4]
10001145:	83 f9 05             	cmp    ecx,0x5
10001148:	75 f0                	jne    1000113a <ssfn_mem+0x1c>
1000114a:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
10001150:	31 c9                	xor    ecx,ecx
10001152:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001159:	89 34 24             	mov    DWORD PTR [esp],esi
1000115c:	85 f6                	test   esi,esi
1000115e:	74 48                	je     100011a8 <ssfn_mem+0x8a>
10001160:	31 db                	xor    ebx,ebx
10001162:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001165:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001168:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000116c:	85 ff                	test   edi,edi
1000116e:	74 2a                	je     1000119a <ssfn_mem+0x7c>
10001170:	31 f6                	xor    esi,esi
10001172:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001176:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001179:	85 ed                	test   ebp,ebp
1000117b:	74 0f                	je     1000118c <ssfn_mem+0x6e>
1000117d:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
10001181:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001185:	0f af fd             	imul   edi,ebp
10001188:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
1000118c:	46                   	inc    esi
1000118d:	81 fe 00 01 00 00    	cmp    esi,0x100
10001193:	75 dd                	jne    10001172 <ssfn_mem+0x54>
10001195:	05 00 04 00 00       	add    eax,0x400
1000119a:	43                   	inc    ebx
1000119b:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011a1:	75 bf                	jne    10001162 <ssfn_mem+0x44>
100011a3:	05 00 04 00 00       	add    eax,0x400
100011a8:	41                   	inc    ecx
100011a9:	83 f9 11             	cmp    ecx,0x11
100011ac:	75 a4                	jne    10001152 <ssfn_mem+0x34>
100011ae:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011b5:	74 0a                	je     100011c1 <ssfn_mem+0xa3>
100011b7:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011bd:	01 d2                	add    edx,edx
100011bf:	01 d0                	add    eax,edx
100011c1:	83 c4 08             	add    esp,0x8
100011c4:	5b                   	pop    ebx
100011c5:	5e                   	pop    esi
100011c6:	5f                   	pop    edi
100011c7:	5d                   	pop    ebp
100011c8:	c3                   	ret    

100011c9 <ssfn_select>:
100011c9:	55                   	push   ebp
100011ca:	57                   	push   edi
100011cb:	56                   	push   esi
100011cc:	53                   	push   ebx
100011cd:	83 ec 1c             	sub    esp,0x1c
100011d0:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011d4:	85 db                	test   ebx,ebx
100011d6:	75 0a                	jne    100011e2 <ssfn_select+0x19>
100011d8:	be fc ff ff ff       	mov    esi,0xfffffffc
100011dd:	e9 13 01 00 00       	jmp    100012f5 <ssfn_select+0x12c>
100011e2:	89 d8                	mov    eax,ebx
100011e4:	e8 44 f2 ff ff       	call   1000042d <_ssfn_fc.part.1>
100011e9:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011ed:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011f3:	0f 85 e9 00 00 00    	jne    100012e2 <ssfn_select+0x119>
100011f9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100011fd:	83 e8 08             	sub    eax,0x8
10001200:	3d b8 00 00 00       	cmp    eax,0xb8
10001205:	0f 87 de 00 00 00    	ja     100012e9 <ssfn_select+0x120>
1000120b:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
10001213:	75 76                	jne    1000128b <ssfn_select+0xc2>
10001215:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000121a:	74 bc                	je     100011d8 <ssfn_select+0xf>
1000121c:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001220:	80 38 00             	cmp    BYTE PTR [eax],0x0
10001223:	74 b3                	je     100011d8 <ssfn_select+0xf>
10001225:	31 ed                	xor    ebp,ebp
10001227:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000122b:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000122f:	74 03                	je     10001234 <ssfn_select+0x6b>
10001231:	45                   	inc    ebp
10001232:	eb f3                	jmp    10001227 <ssfn_select+0x5e>
10001234:	8d 43 14             	lea    eax,[ebx+0x14]
10001237:	89 df                	mov    edi,ebx
10001239:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000123d:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
10001243:	31 d2                	xor    edx,edx
10001245:	89 04 24             	mov    DWORD PTR [esp],eax
10001248:	39 14 24             	cmp    DWORD PTR [esp],edx
1000124b:	7e 33                	jle    10001280 <ssfn_select+0xb7>
1000124d:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10001251:	8b 07                	mov    eax,DWORD PTR [edi]
10001253:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001256:	50                   	push   eax
10001257:	8d 41 20             	lea    eax,[ecx+0x20]
1000125a:	55                   	push   ebp
1000125b:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000125f:	50                   	push   eax
10001260:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001264:	e8 fc ff ff ff       	call   10001265 <ssfn_select+0x9c>	10001265: R_386_PC32	memcmp
10001269:	83 c4 10             	add    esp,0x10
1000126c:	85 c0                	test   eax,eax
1000126e:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10001272:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001276:	75 05                	jne    1000127d <ssfn_select+0xb4>
10001278:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
1000127b:	eb 34                	jmp    100012b1 <ssfn_select+0xe8>
1000127d:	42                   	inc    edx
1000127e:	eb c8                	jmp    10001248 <ssfn_select+0x7f>
10001280:	83 c7 04             	add    edi,0x4
10001283:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001287:	75 b4                	jne    1000123d <ssfn_select+0x74>
10001289:	eb 65                	jmp    100012f0 <ssfn_select+0x127>
1000128b:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
10001293:	74 15                	je     100012aa <ssfn_select+0xe1>
10001295:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
1000129a:	7f 54                	jg     100012f0 <ssfn_select+0x127>
1000129c:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012a0:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012a8:	74 46                	je     100012f0 <ssfn_select+0x127>
100012aa:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012b1:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012b5:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012bc:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012c2:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012cc:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012d0:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012d6:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012da:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012e0:	eb 13                	jmp    100012f5 <ssfn_select+0x12c>
100012e2:	be fb ff ff ff       	mov    esi,0xfffffffb
100012e7:	eb 0c                	jmp    100012f5 <ssfn_select+0x12c>
100012e9:	be fa ff ff ff       	mov    esi,0xfffffffa
100012ee:	eb 05                	jmp    100012f5 <ssfn_select+0x12c>
100012f0:	be fd ff ff ff       	mov    esi,0xfffffffd
100012f5:	83 c4 1c             	add    esp,0x1c
100012f8:	89 f0                	mov    eax,esi
100012fa:	5b                   	pop    ebx
100012fb:	5e                   	pop    esi
100012fc:	5f                   	pop    edi
100012fd:	5d                   	pop    ebp
100012fe:	c3                   	ret    

100012ff <ssfn_render>:
100012ff:	55                   	push   ebp
10001300:	57                   	push   edi
10001301:	56                   	push   esi
10001302:	53                   	push   ebx
10001303:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001309:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
10001310:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
1000131b:	85 ed                	test   ebp,ebp
1000131d:	0f 94 c2             	sete   dl
10001320:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001328:	0f 94 c0             	sete   al
1000132b:	08 c2                	or     dl,al
1000132d:	74 0a                	je     10001339 <ssfn_render+0x3a>
1000132f:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001334:	e9 14 1e 00 00       	jmp    1000314d <ssfn_render+0x1e4e>
10001339:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
10001340:	31 c9                	xor    ecx,ecx
10001342:	8a 00                	mov    al,BYTE PTR [eax]
10001344:	84 c0                	test   al,al
10001346:	0f 84 01 1e 00 00    	je     1000314d <ssfn_render+0x1e4e>
1000134c:	3c 0d                	cmp    al,0xd
1000134e:	75 0f                	jne    1000135f <ssfn_render+0x60>
10001350:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001357:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000135d:	eb 31                	jmp    10001390 <ssfn_render+0x91>
1000135f:	3c 0a                	cmp    al,0xa
10001361:	75 37                	jne    1000139a <ssfn_render+0x9b>
10001363:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000136a:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001370:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
10001373:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001379:	85 c0                	test   eax,eax
1000137b:	75 06                	jne    10001383 <ssfn_render+0x84>
1000137d:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
10001383:	01 d0                	add    eax,edx
10001385:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000138c:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
10001390:	b9 01 00 00 00       	mov    ecx,0x1
10001395:	e9 b3 1d 00 00       	jmp    1000314d <ssfn_render+0x1e4e>
1000139a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000139d:	85 c0                	test   eax,eax
1000139f:	74 3e                	je     100013df <ssfn_render+0xe0>
100013a1:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013a4:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
100013ab:	56                   	push   esi
100013ac:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013b3:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013ba:	e8 a0 f4 ff ff       	call   1000085f <_ssfn_c>
100013bf:	5b                   	pop    ebx
100013c0:	85 c0                	test   eax,eax
100013c2:	0f 85 71 02 00 00    	jne    10001639 <ssfn_render+0x33a>
100013c8:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013ce:	81 e2 00 01 00 00    	and    edx,0x100
100013d4:	0f 84 fd 01 00 00    	je     100015d7 <ssfn_render+0x2d8>
100013da:	e9 1d 02 00 00       	jmp    100015fc <ssfn_render+0x2fd>
100013df:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013e5:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013ec:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100013f0:	3d fd 00 00 00       	cmp    eax,0xfd
100013f5:	7f 08                	jg     100013ff <ssfn_render+0x100>
100013f7:	89 c3                	mov    ebx,eax
100013f9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100013fd:	eb 3f                	jmp    1000143e <ssfn_render+0x13f>
100013ff:	31 db                	xor    ebx,ebx
10001401:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001409:	eb 33                	jmp    1000143e <ssfn_render+0x13f>
1000140b:	85 c0                	test   eax,eax
1000140d:	0f 84 64 01 00 00    	je     10001577 <ssfn_render+0x278>
10001413:	43                   	inc    ebx
10001414:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001418:	7e 28                	jle    10001442 <ssfn_render+0x143>
1000141a:	85 c0                	test   eax,eax
1000141c:	0f 85 17 02 00 00    	jne    10001639 <ssfn_render+0x33a>
10001422:	31 db                	xor    ebx,ebx
10001424:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
1000142c:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001434:	74 92                	je     100013c8 <ssfn_render+0xc9>
10001436:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000143e:	31 c0                	xor    eax,eax
10001440:	eb d2                	jmp    10001414 <ssfn_render+0x115>
10001442:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001446:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
1000144d:	74 bc                	je     1000140b <ssfn_render+0x10c>
1000144f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000145a:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001461:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001468:	7e 50                	jle    100014ba <ssfn_render+0x1bb>
1000146a:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
1000146d:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
10001471:	c1 fa 04             	sar    edx,0x4
10001474:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
1000147a:	80 e2 03             	and    dl,0x3
1000147d:	75 32                	jne    100014b1 <ssfn_render+0x1b2>
1000147f:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
10001483:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001489:	75 26                	jne    100014b1 <ssfn_render+0x1b2>
1000148b:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
10001492:	50                   	push   eax
10001493:	89 f8                	mov    eax,edi
10001495:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000149c:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014a3:	e8 b7 f3 ff ff       	call   1000085f <_ssfn_c>
100014a8:	59                   	pop    ecx
100014a9:	85 c0                	test   eax,eax
100014ab:	0f 85 04 01 00 00    	jne    100015b5 <ssfn_render+0x2b6>
100014b1:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014b8:	eb a0                	jmp    1000145a <ssfn_render+0x15b>
100014ba:	85 c0                	test   eax,eax
100014bc:	0f 85 51 ff ff ff    	jne    10001413 <ssfn_render+0x114>
100014c2:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014cd:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014d4:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014db:	0f 8e f9 1b 00 00    	jle    100030da <ssfn_render+0x1ddb>
100014e1:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014e4:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014e8:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014ee:	74 09                	je     100014f9 <ssfn_render+0x1fa>
100014f0:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014f7:	eb d4                	jmp    100014cd <ssfn_render+0x1ce>
100014f9:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10001500:	57                   	push   edi
10001501:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001508:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000150f:	e8 4b f3 ff ff       	call   1000085f <_ssfn_c>
10001514:	5a                   	pop    edx
10001515:	85 c0                	test   eax,eax
10001517:	74 d7                	je     100014f0 <ssfn_render+0x1f1>
10001519:	e9 97 00 00 00       	jmp    100015b5 <ssfn_render+0x2b6>
1000151e:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001521:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001525:	c1 fa 04             	sar    edx,0x4
10001528:	31 ca                	xor    edx,ecx
1000152a:	80 e2 03             	and    dl,0x3
1000152d:	0f 84 b7 1b 00 00    	je     100030ea <ssfn_render+0x1deb>
10001533:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000153a:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001541:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10001547:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000154e:	7f ce                	jg     1000151e <ssfn_render+0x21f>
10001550:	83 e1 03             	and    ecx,0x3
10001553:	83 f9 03             	cmp    ecx,0x3
10001556:	75 1f                	jne    10001577 <ssfn_render+0x278>
10001558:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001563:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000156a:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001571:	0f 8f 9c 1b 00 00    	jg     10003113 <ssfn_render+0x1e14>
10001577:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001582:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001589:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001590:	7e 3e                	jle    100015d0 <ssfn_render+0x2d1>
10001592:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001595:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000159c:	57                   	push   edi
1000159d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100015a4:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100015ab:	e8 af f2 ff ff       	call   1000085f <_ssfn_c>
100015b0:	5a                   	pop    edx
100015b1:	85 c0                	test   eax,eax
100015b3:	74 12                	je     100015c7 <ssfn_render+0x2c8>
100015b5:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100015bc:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
100015bf:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
100015c2:	e9 4c fe ff ff       	jmp    10001413 <ssfn_render+0x114>
100015c7:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100015ce:	eb b2                	jmp    10001582 <ssfn_render+0x283>
100015d0:	31 c0                	xor    eax,eax
100015d2:	e9 3c fe ff ff       	jmp    10001413 <ssfn_render+0x114>
100015d7:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015dd:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015e8:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100015ee:	7f 16                	jg     10001606 <ssfn_render+0x307>
100015f0:	89 da                	mov    edx,ebx
100015f2:	31 c0                	xor    eax,eax
100015f4:	39 da                	cmp    edx,ebx
100015f6:	7e 15                	jle    1000160d <ssfn_render+0x30e>
100015f8:	85 c0                	test   eax,eax
100015fa:	75 3d                	jne    10001639 <ssfn_render+0x33a>
100015fc:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
10001601:	e9 47 1b 00 00       	jmp    1000314d <ssfn_render+0x1e4e>
10001606:	bb 04 00 00 00       	mov    ebx,0x4
1000160b:	eb e5                	jmp    100015f2 <ssfn_render+0x2f3>
1000160d:	85 c0                	test   eax,eax
1000160f:	75 28                	jne    10001639 <ssfn_render+0x33a>
10001611:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001619:	74 1b                	je     10001636 <ssfn_render+0x337>
1000161b:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
1000161f:	8b 09                	mov    ecx,DWORD PTR [ecx]
10001621:	85 c9                	test   ecx,ecx
10001623:	74 11                	je     10001636 <ssfn_render+0x337>
10001625:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001628:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
1000162c:	78 08                	js     10001636 <ssfn_render+0x337>
1000162e:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
10001631:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001634:	01 c8                	add    eax,ecx
10001636:	42                   	inc    edx
10001637:	eb bb                	jmp    100015f4 <ssfn_render+0x2f5>
10001639:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000163c:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
10001641:	85 d2                	test   edx,edx
10001643:	0f 84 04 1b 00 00    	je     1000314d <ssfn_render+0x1e4e>
10001649:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
1000164d:	0f 84 fa 1a 00 00    	je     1000314d <ssfn_render+0x1e4e>
10001653:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001659:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000165d:	85 ff                	test   edi,edi
1000165f:	0f 84 e8 1a 00 00    	je     1000314d <ssfn_render+0x1e4e>
10001665:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
1000166c:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10001670:	c1 ef 10             	shr    edi,0x10
10001673:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10001677:	83 ff 10             	cmp    edi,0x10
1000167a:	0f 87 af fc ff ff    	ja     1000132f <ssfn_render+0x30>
10001680:	8d 70 06             	lea    esi,[eax+0x6]
10001683:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001689:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
1000168d:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
10001693:	89 f7                	mov    edi,esi
10001695:	81 e7 00 02 00 00    	and    edi,0x200
1000169b:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000169f:	75 34                	jne    100016d5 <ssfn_render+0x3d6>
100016a1:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100016a5:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
100016ac:	85 c9                	test   ecx,ecx
100016ae:	74 25                	je     100016d5 <ssfn_render+0x3d6>
100016b0:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100016b4:	0f b6 ff             	movzx  edi,bh
100016b7:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016ba:	85 c9                	test   ecx,ecx
100016bc:	74 17                	je     100016d5 <ssfn_render+0x3d6>
100016be:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
100016c3:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016c6:	85 c9                	test   ecx,ecx
100016c8:	74 0b                	je     100016d5 <ssfn_render+0x3d6>
100016ca:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016d0:	e9 25 0d 00 00       	jmp    100023fa <ssfn_render+0x10fb>
100016d5:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016d9:	f7 c6 40 00 00 00    	test   esi,0x40
100016df:	75 1a                	jne    100016fb <ssfn_render+0x3fc>
100016e1:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016e5:	7e 10                	jle    100016f7 <ssfn_render+0x3f8>
100016e7:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016eb:	83 c7 04             	add    edi,0x4
100016ee:	83 e7 fc             	and    edi,0xfffffffc
100016f1:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100016f5:	eb 04                	jmp    100016fb <ssfn_render+0x3fc>
100016f7:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100016fb:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
10001700:	f7 c6 02 00 00 00    	test   esi,0x2
10001706:	74 14                	je     1000171c <ssfn_render+0x41d>
10001708:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
1000170b:	c0 eb 05             	shr    bl,0x5
1000170e:	89 df                	mov    edi,ebx
10001710:	83 f7 01             	xor    edi,0x1
10001713:	83 e7 01             	and    edi,0x1
10001716:	89 fb                	mov    ebx,edi
10001718:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
1000171c:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
10001721:	83 e6 01             	and    esi,0x1
10001724:	74 10                	je     10001736 <ssfn_render+0x437>
10001726:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
1000172a:	75 0a                	jne    10001736 <ssfn_render+0x437>
1000172c:	8d 51 40             	lea    edx,[ecx+0x40]
1000172f:	c1 fa 06             	sar    edx,0x6
10001732:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001736:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
1000173a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000173f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10001743:	99                   	cdq    
10001744:	f7 f9                	idiv   ecx
10001746:	89 c1                	mov    ecx,eax
10001748:	31 c0                	xor    eax,eax
1000174a:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000174f:	74 0c                	je     1000175d <ssfn_render+0x45e>
10001751:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001755:	be 04 00 00 00       	mov    esi,0x4
1000175a:	99                   	cdq    
1000175b:	f7 fe                	idiv   esi
1000175d:	01 c8                	add    eax,ecx
1000175f:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001764:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001769:	01 f0                	add    eax,esi
1000176b:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
1000176f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001773:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001777:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
1000177c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001780:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001785:	0f 8f c2 19 00 00    	jg     1000314d <ssfn_render+0x1e4e>
1000178b:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
10001790:	0f 85 f0 00 00 00    	jne    10001886 <ssfn_render+0x587>
10001796:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000179a:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
1000179e:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
100017a5:	75 2f                	jne    100017d6 <ssfn_render+0x4d7>
100017a7:	83 ec 0c             	sub    esp,0xc
100017aa:	68 00 04 00 00       	push   0x400
100017af:	e8 fc ff ff ff       	call   100017b0 <ssfn_render+0x4b1>	100017b0: R_386_PC32	malloc
100017b4:	83 c4 10             	add    esp,0x10
100017b7:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
100017bd:	85 c0                	test   eax,eax
100017bf:	75 08                	jne    100017c9 <ssfn_render+0x4ca>
100017c1:	83 c9 ff             	or     ecx,0xffffffff
100017c4:	e9 84 19 00 00       	jmp    1000314d <ssfn_render+0x1e4e>
100017c9:	89 c7                	mov    edi,eax
100017cb:	b9 00 01 00 00       	mov    ecx,0x100
100017d0:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017d4:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017d6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017da:	0f b6 dc             	movzx  ebx,ah
100017dd:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017e3:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017e6:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017e9:	75 3a                	jne    10001825 <ssfn_render+0x526>
100017eb:	83 ec 0c             	sub    esp,0xc
100017ee:	68 00 04 00 00       	push   0x400
100017f3:	e8 fc ff ff ff       	call   100017f4 <ssfn_render+0x4f5>	100017f4: R_386_PC32	malloc
100017f8:	89 03                	mov    DWORD PTR [ebx],eax
100017fa:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001801:	83 c4 10             	add    esp,0x10
10001804:	89 c2                	mov    edx,eax
10001806:	0f b6 c4             	movzx  eax,ah
10001809:	c1 ea 10             	shr    edx,0x10
1000180c:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001813:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
10001816:	85 d2                	test   edx,edx
10001818:	74 a7                	je     100017c1 <ssfn_render+0x4c2>
1000181a:	b9 00 01 00 00       	mov    ecx,0x100
1000181f:	31 c0                	xor    eax,eax
10001821:	89 d7                	mov    edi,edx
10001823:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001825:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
1000182c:	83 ec 0c             	sub    esp,0xc
1000182f:	0f b6 cc             	movzx  ecx,ah
10001832:	89 c2                	mov    edx,eax
10001834:	0f b6 c0             	movzx  eax,al
10001837:	c1 ea 10             	shr    edx,0x10
1000183a:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001841:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001844:	8d 1c 82             	lea    ebx,[edx+eax*4]
10001847:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000184b:	83 c0 08             	add    eax,0x8
1000184e:	50                   	push   eax
1000184f:	e8 fc ff ff ff       	call   10001850 <ssfn_render+0x551>	10001850: R_386_PC32	malloc
10001854:	89 03                	mov    DWORD PTR [ebx],eax
10001856:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000185c:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001863:	83 c4 10             	add    esp,0x10
10001866:	89 c2                	mov    edx,eax
10001868:	0f b6 cc             	movzx  ecx,ah
1000186b:	c1 ea 10             	shr    edx,0x10
1000186e:	0f b6 c0             	movzx  eax,al
10001871:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001878:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
1000187b:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000187f:	75 0e                	jne    1000188f <ssfn_render+0x590>
10001881:	e9 3b ff ff ff       	jmp    100017c1 <ssfn_render+0x4c2>
10001886:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001889:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000188f:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10001895:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10001899:	74 2a                	je     100018c5 <ssfn_render+0x5c6>
1000189b:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018a0:	74 23                	je     100018c5 <ssfn_render+0x5c6>
100018a2:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100018a5:	bb 04 00 00 00       	mov    ebx,0x4
100018aa:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100018ae:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
100018b2:	89 cf                	mov    edi,ecx
100018b4:	29 c7                	sub    edi,eax
100018b6:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100018ba:	0f af c7             	imul   eax,edi
100018bd:	99                   	cdq    
100018be:	f7 fb                	idiv   ebx
100018c0:	99                   	cdq    
100018c1:	f7 f9                	idiv   ecx
100018c3:	eb 02                	jmp    100018c7 <ssfn_render+0x5c8>
100018c5:	31 c0                	xor    eax,eax
100018c7:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018cd:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018d1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018d5:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018dd:	66 89 32             	mov    WORD PTR [edx],si
100018e0:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018e5:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018eb:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100018ee:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100018f4:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018fa:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
100018fd:	01 c3                	add    ebx,eax
100018ff:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
10001902:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001908:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
1000190e:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
10001911:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001914:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
1000191a:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001920:	8a 12                	mov    dl,BYTE PTR [edx]
10001922:	83 e2 3f             	and    edx,0x3f
10001925:	01 d0                	add    eax,edx
10001927:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
1000192a:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000192e:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001934:	8d 50 08             	lea    edx,[eax+0x8]
10001937:	b0 ff                	mov    al,0xff
10001939:	89 d7                	mov    edi,edx
1000193b:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000193d:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001943:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
10001947:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000194d:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
10001951:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001955:	c1 e0 04             	shl    eax,0x4
10001958:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000195c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001960:	c1 e0 04             	shl    eax,0x4
10001963:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001967:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000196d:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
10001971:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001975:	0f 8e 4d 0a 00 00    	jle    100023c8 <ssfn_render+0x10c9>
1000197b:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000197f:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001983:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001986:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001989:	8a 12                	mov    dl,BYTE PTR [edx]
1000198b:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000198f:	83 e2 40             	and    edx,0x40
10001992:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
10001996:	88 c2                	mov    dl,al
10001998:	21 ca                	and    edx,ecx
1000199a:	fe c2                	inc    dl
1000199c:	75 14                	jne    100019b2 <ssfn_render+0x6b3>
1000199e:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019a3:	19 c0                	sbb    eax,eax
100019a5:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
100019a9:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100019ad:	e9 09 0a 00 00       	jmp    100023bb <ssfn_render+0x10bc>
100019b2:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100019b6:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
100019b9:	c1 e0 04             	shl    eax,0x4
100019bc:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
100019c0:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019c5:	99                   	cdq    
100019c6:	f7 fe                	idiv   esi
100019c8:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100019cc:	0f b6 c1             	movzx  eax,cl
100019cf:	c1 e0 04             	shl    eax,0x4
100019d2:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019d7:	99                   	cdq    
100019d8:	f7 fe                	idiv   esi
100019da:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019de:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019e2:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019e6:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019ea:	c1 e2 10             	shl    edx,0x10
100019ed:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100019f2:	74 0e                	je     10001a02 <ssfn_render+0x703>
100019f4:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019f8:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
100019fd:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a00:	eb 0c                	jmp    10001a0e <ssfn_render+0x70f>
10001a02:	c1 e0 08             	shl    eax,0x8
10001a05:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a0a:	09 d0                	or     eax,edx
10001a0c:	09 c3                	or     ebx,eax
10001a0e:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a11:	8a 01                	mov    al,BYTE PTR [ecx]
10001a13:	84 c0                	test   al,al
10001a15:	0f 88 17 05 00 00    	js     10001f32 <ssfn_render+0xc33>
10001a1b:	89 c7                	mov    edi,eax
10001a1d:	83 e7 3f             	and    edi,0x3f
10001a20:	a8 40                	test   al,0x40
10001a22:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a26:	74 10                	je     10001a38 <ssfn_render+0x739>
10001a28:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a2c:	89 f8                	mov    eax,edi
10001a2e:	41                   	inc    ecx
10001a2f:	c1 e0 08             	shl    eax,0x8
10001a32:	09 c2                	or     edx,eax
10001a34:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a38:	8d 41 01             	lea    eax,[ecx+0x1]
10001a3b:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a45:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a49:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a54:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a58:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a5c:	83 c0 04             	add    eax,0x4
10001a5f:	c1 f8 02             	sar    eax,0x2
10001a62:	01 c7                	add    edi,eax
10001a64:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a6b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a6f:	0f 8f d7 01 00 00    	jg     10001c4c <ssfn_render+0x94d>
10001a75:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a78:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a7c:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a80:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a84:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a88:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a8b:	c1 e0 04             	shl    eax,0x4
10001a8e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a93:	99                   	cdq    
10001a94:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001a98:	01 c6                	add    esi,eax
10001a9a:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001a9e:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001aa2:	c1 e0 04             	shl    eax,0x4
10001aa5:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001aaa:	99                   	cdq    
10001aab:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001aaf:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001ab3:	01 c3                	add    ebx,eax
10001ab5:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001ab9:	89 c8                	mov    eax,ecx
10001abb:	01 c9                	add    ecx,ecx
10001abd:	c1 f8 02             	sar    eax,0x2
10001ac0:	83 e1 06             	and    ecx,0x6
10001ac3:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001ac7:	d3 f8                	sar    eax,cl
10001ac9:	83 e0 03             	and    eax,0x3
10001acc:	89 c1                	mov    ecx,eax
10001ace:	83 f8 02             	cmp    eax,0x2
10001ad1:	74 4a                	je     10001b1d <ssfn_render+0x81e>
10001ad3:	83 f8 03             	cmp    eax,0x3
10001ad6:	0f 84 e4 00 00 00    	je     10001bc0 <ssfn_render+0x8c1>
10001adc:	49                   	dec    ecx
10001add:	74 20                	je     10001aff <ssfn_render+0x800>
10001adf:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001ae5:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001aeb:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001af1:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001af7:	83 c7 02             	add    edi,0x2
10001afa:	e9 41 01 00 00       	jmp    10001c40 <ssfn_render+0x941>
10001aff:	83 c7 02             	add    edi,0x2
10001b02:	50                   	push   eax
10001b03:	50                   	push   eax
10001b04:	89 e8                	mov    eax,ebp
10001b06:	53                   	push   ebx
10001b07:	56                   	push   esi
10001b08:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b0c:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b10:	e8 9c e9 ff ff       	call   100004b1 <_ssfn_l>
10001b15:	83 c4 10             	add    esp,0x10
10001b18:	e9 23 01 00 00       	jmp    10001c40 <ssfn_render+0x941>
10001b1d:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b21:	83 c7 04             	add    edi,0x4
10001b24:	c1 e0 04             	shl    eax,0x4
10001b27:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b2c:	99                   	cdq    
10001b2d:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b31:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b35:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b39:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b3d:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b41:	c1 e0 04             	shl    eax,0x4
10001b44:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b49:	99                   	cdq    
10001b4a:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b4e:	83 ec 0c             	sub    esp,0xc
10001b51:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b55:	6a 00                	push   0x0
10001b57:	53                   	push   ebx
10001b58:	56                   	push   esi
10001b59:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b5d:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b61:	99                   	cdq    
10001b62:	f7 f9                	idiv   ecx
10001b64:	01 d8                	add    eax,ebx
10001b66:	50                   	push   eax
10001b67:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b6b:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b6f:	99                   	cdq    
10001b70:	f7 f9                	idiv   ecx
10001b72:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b76:	50                   	push   eax
10001b77:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b7b:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b7f:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b85:	99                   	cdq    
10001b86:	f7 f9                	idiv   ecx
10001b88:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b8e:	50                   	push   eax
10001b8f:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001b93:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001b99:	99                   	cdq    
10001b9a:	f7 f9                	idiv   ecx
10001b9c:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001ba2:	50                   	push   eax
10001ba3:	89 e8                	mov    eax,ebp
10001ba5:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bab:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bb1:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001bb5:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001bb9:	e8 04 ea ff ff       	call   100005c2 <_ssfn_b>
10001bbe:	eb 7d                	jmp    10001c3d <ssfn_render+0x93e>
10001bc0:	83 ec 0c             	sub    esp,0xc
10001bc3:	83 c7 06             	add    edi,0x6
10001bc6:	6a 00                	push   0x0
10001bc8:	53                   	push   ebx
10001bc9:	56                   	push   esi
10001bca:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001bce:	c1 e0 04             	shl    eax,0x4
10001bd1:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001bd6:	99                   	cdq    
10001bd7:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001bdb:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001bdf:	50                   	push   eax
10001be0:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001be4:	c1 e0 04             	shl    eax,0x4
10001be7:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001bec:	99                   	cdq    
10001bed:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001bf1:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001bf5:	50                   	push   eax
10001bf6:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001bfa:	c1 e0 04             	shl    eax,0x4
10001bfd:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c02:	99                   	cdq    
10001c03:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c07:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c0b:	50                   	push   eax
10001c0c:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c10:	c1 e0 04             	shl    eax,0x4
10001c13:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c18:	99                   	cdq    
10001c19:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c1d:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c21:	50                   	push   eax
10001c22:	89 e8                	mov    eax,ebp
10001c24:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c2a:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c30:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c34:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c38:	e8 85 e9 ff ff       	call   100005c2 <_ssfn_b>
10001c3d:	83 c4 30             	add    esp,0x30
10001c40:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c47:	e9 18 fe ff ff       	jmp    10001a64 <ssfn_render+0x765>
10001c4c:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c52:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c58:	75 0e                	jne    10001c68 <ssfn_render+0x969>
10001c5a:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c60:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c66:	74 2e                	je     10001c96 <ssfn_render+0x997>
10001c68:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c6e:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c74:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c78:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c7e:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c84:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c8a:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c8f:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001c96:	b3 fe                	mov    bl,0xfe
10001c98:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001c9f:	0f 8e 16 07 00 00    	jle    100023bb <ssfn_render+0x10bc>
10001ca5:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001cad:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001cb5:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001cbd:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001cc5:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001ccd:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001cd1:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001cd5:	0f 8d de 06 00 00    	jge    100023b9 <ssfn_render+0x10ba>
10001cdb:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001ce1:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001cec:	83 e8 03             	sub    eax,0x3
10001cef:	31 f6                	xor    esi,esi
10001cf1:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001cf5:	89 f8                	mov    eax,edi
10001cf7:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001cfb:	c1 f8 02             	sar    eax,0x2
10001cfe:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d02:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d09:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d0d:	0f 8e 16 01 00 00    	jle    10001e29 <ssfn_render+0xb2a>
10001d13:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d19:	8d 47 01             	lea    eax,[edi+0x1]
10001d1c:	01 c0                	add    eax,eax
10001d1e:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d22:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d26:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d2b:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d2f:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d33:	7d 0c                	jge    10001d41 <ssfn_render+0xa42>
10001d35:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d39:	0f 8f db 00 00 00    	jg     10001e1a <ssfn_render+0xb1b>
10001d3f:	eb 0a                	jmp    10001d4b <ssfn_render+0xa4c>
10001d41:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d45:	0f 8e cf 00 00 00    	jle    10001e1a <ssfn_render+0xb1b>
10001d4b:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d50:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d54:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d59:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d5d:	89 d8                	mov    eax,ebx
10001d5f:	c1 fa 04             	sar    edx,0x4
10001d62:	c1 f8 04             	sar    eax,0x4
10001d65:	39 c2                	cmp    edx,eax
10001d67:	75 0a                	jne    10001d73 <ssfn_render+0xa74>
10001d69:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d6d:	01 c8                	add    eax,ecx
10001d6f:	d1 f8                	sar    eax,1
10001d71:	eb 1a                	jmp    10001d8d <ssfn_render+0xa8e>
10001d73:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d77:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d7b:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d7f:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d83:	0f af c1             	imul   eax,ecx
10001d86:	99                   	cdq    
10001d87:	f7 fb                	idiv   ebx
10001d89:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d8d:	c1 f8 04             	sar    eax,0x4
10001d90:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001d95:	74 04                	je     10001d9b <ssfn_render+0xa9c>
10001d97:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001d9b:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001da0:	75 3f                	jne    10001de1 <ssfn_render+0xae2>
10001da2:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001da7:	74 38                	je     10001de1 <ssfn_render+0xae2>
10001da9:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dad:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001db3:	f7 db                	neg    ebx
10001db5:	01 c2                	add    edx,eax
10001db7:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001dbb:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dbf:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dc3:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001dc7:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001dcb:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001dcf:	74 10                	je     10001de1 <ssfn_render+0xae2>
10001dd1:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001dd5:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001dd9:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001ddd:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001de1:	31 d2                	xor    edx,edx
10001de3:	39 f2                	cmp    edx,esi
10001de5:	75 0b                	jne    10001df2 <ssfn_render+0xaf3>
10001de7:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001def:	46                   	inc    esi
10001df0:	eb 28                	jmp    10001e1a <ssfn_render+0xb1b>
10001df2:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001dfa:	39 c1                	cmp    ecx,eax
10001dfc:	7d 03                	jge    10001e01 <ssfn_render+0xb02>
10001dfe:	42                   	inc    edx
10001dff:	eb e2                	jmp    10001de3 <ssfn_render+0xae4>
10001e01:	89 f1                	mov    ecx,esi
10001e03:	49                   	dec    ecx
10001e04:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e0c:	39 d1                	cmp    ecx,edx
10001e0e:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e16:	7f eb                	jg     10001e03 <ssfn_render+0xb04>
10001e18:	eb cd                	jmp    10001de7 <ssfn_render+0xae8>
10001e1a:	8d 47 02             	lea    eax,[edi+0x2]
10001e1d:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e24:	e9 d9 fe ff ff       	jmp    10001d02 <ssfn_render+0xa03>
10001e29:	83 fe 01             	cmp    esi,0x1
10001e2c:	7e 1f                	jle    10001e4d <ssfn_render+0xb4e>
10001e2e:	f7 c6 01 00 00 00    	test   esi,0x1
10001e34:	74 24                	je     10001e5a <ssfn_render+0xb5b>
10001e36:	8d 46 ff             	lea    eax,[esi-0x1]
10001e39:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e41:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e49:	89 c6                	mov    esi,eax
10001e4b:	eb 0d                	jmp    10001e5a <ssfn_render+0xb5b>
10001e4d:	85 f6                	test   esi,esi
10001e4f:	0f 84 c7 00 00 00    	je     10001f1c <ssfn_render+0xc1d>
10001e55:	be 01 00 00 00       	mov    esi,0x1
10001e5a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e60:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e64:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e68:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e6c:	39 d1                	cmp    ecx,edx
10001e6e:	7d 0b                	jge    10001e7b <ssfn_render+0xb7c>
10001e70:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e74:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e78:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e7b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e86:	31 c0                	xor    eax,eax
10001e88:	31 d2                	xor    edx,edx
10001e8a:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e8d:	39 d1                	cmp    ecx,edx
10001e8f:	7e 7d                	jle    10001f0e <ssfn_render+0xc0f>
10001e91:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001e99:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001ea1:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ea5:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001ea9:	79 02                	jns    10001ead <ssfn_render+0xbae>
10001eab:	31 c0                	xor    eax,eax
10001ead:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001eb1:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001eb5:	39 cf                	cmp    edi,ecx
10001eb7:	7e 04                	jle    10001ebd <ssfn_render+0xbbe>
10001eb9:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001ebd:	85 d2                	test   edx,edx
10001ebf:	74 12                	je     10001ed3 <ssfn_render+0xbd4>
10001ec1:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001ec9:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ecd:	39 c8                	cmp    eax,ecx
10001ecf:	7d 02                	jge    10001ed3 <ssfn_render+0xbd4>
10001ed1:	89 c8                	mov    eax,ecx
10001ed3:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001ed7:	7d 2b                	jge    10001f04 <ssfn_render+0xc05>
10001ed9:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001edd:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001ee3:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001ee6:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001eea:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001eee:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001ef2:	75 05                	jne    10001ef9 <ssfn_render+0xbfa>
10001ef4:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001ef9:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001efd:	40                   	inc    eax
10001efe:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f02:	eb cf                	jmp    10001ed3 <ssfn_render+0xbd4>
10001f04:	83 c2 02             	add    edx,0x2
10001f07:	b0 01                	mov    al,0x1
10001f09:	e9 7c ff ff ff       	jmp    10001e8a <ssfn_render+0xb8b>
10001f0e:	83 e6 fe             	and    esi,0xfffffffe
10001f11:	84 c0                	test   al,al
10001f13:	74 07                	je     10001f1c <ssfn_render+0xc1d>
10001f15:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f1c:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f20:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f24:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f28:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f2d:	e9 9b fd ff ff       	jmp    10001ccd <ssfn_render+0x9ce>
10001f32:	88 c2                	mov    dl,al
10001f34:	80 e2 60             	and    dl,0x60
10001f37:	0f 85 95 02 00 00    	jne    100021d2 <ssfn_render+0xed3>
10001f3d:	83 e0 1f             	and    eax,0x1f
10001f40:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f44:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f4b:	c1 fb 04             	sar    ebx,0x4
10001f4e:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f52:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f56:	40                   	inc    eax
10001f57:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f5b:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f5f:	c1 f8 04             	sar    eax,0x4
10001f62:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f66:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f6a:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f6f:	99                   	cdq    
10001f70:	f7 fe                	idiv   esi
10001f72:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f76:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f7a:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f7f:	99                   	cdq    
10001f80:	f7 fe                	idiv   esi
10001f82:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f86:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f8c:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f90:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001f94:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f97:	39 d6                	cmp    esi,edx
10001f99:	7d 0a                	jge    10001fa5 <ssfn_render+0xca6>
10001f9b:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f9f:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fa2:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001fa5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001fa9:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001fb1:	0f af c3             	imul   eax,ebx
10001fb4:	31 ff                	xor    edi,edi
10001fb6:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fba:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001fbe:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001fc2:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001fc6:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fca:	29 d8                	sub    eax,ebx
10001fcc:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fd0:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fd4:	0f 8d b1 00 00 00    	jge    1000208b <ssfn_render+0xd8c>
10001fda:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001fde:	99                   	cdq    
10001fdf:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001fe3:	89 c6                	mov    esi,eax
10001fe5:	31 c0                	xor    eax,eax
10001fe7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001fec:	74 0e                	je     10001ffc <ssfn_render+0xcfd>
10001fee:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001ff2:	bb 04 00 00 00       	mov    ebx,0x4
10001ff7:	29 f8                	sub    eax,edi
10001ff9:	99                   	cdq    
10001ffa:	f7 fb                	idiv   ebx
10001ffc:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10002000:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000200b:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
1000200f:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002014:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000201b:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000201f:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002023:	39 d8                	cmp    eax,ebx
10002025:	7d 4e                	jge    10002075 <ssfn_render+0xd76>
10002027:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000202b:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10002030:	99                   	cdq    
10002031:	f7 fb                	idiv   ebx
10002033:	8d 14 06             	lea    edx,[esi+eax*1]
10002036:	83 e0 07             	and    eax,0x7
10002039:	c1 fa 03             	sar    edx,0x3
1000203c:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10002041:	0f a3 c2             	bt     edx,eax
10002044:	72 0e                	jb     10002054 <ssfn_render+0xd55>
10002046:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000204a:	43                   	inc    ebx
1000204b:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002052:	eb c0                	jmp    10002014 <ssfn_render+0xd15>
10002054:	31 c0                	xor    eax,eax
10002056:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000205a:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000205e:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002064:	40                   	inc    eax
10002065:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10002069:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
1000206d:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
10002071:	7d e3                	jge    10002056 <ssfn_render+0xd57>
10002073:	eb d1                	jmp    10002046 <ssfn_render+0xd47>
10002075:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002079:	47                   	inc    edi
1000207a:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000207e:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10002082:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
10002086:	e9 45 ff ff ff       	jmp    10001fd0 <ssfn_render+0xcd1>
1000208b:	b3 fe                	mov    bl,0xfe
1000208d:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
10002094:	0f 85 21 03 00 00    	jne    100023bb <ssfn_render+0x10bc>
1000209a:	31 c0                	xor    eax,eax
1000209c:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020a0:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
100020a5:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100020a9:	0f 95 c0             	setne  al
100020ac:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100020b0:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020b4:	4f                   	dec    edi
100020b5:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100020b9:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
100020c1:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100020c5:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100020cc:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020d0:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020d4:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020d8:	31 c0                	xor    eax,eax
100020da:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020dd:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020e1:	83 c1 04             	add    ecx,0x4
100020e4:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020e8:	0f 8d c0 02 00 00    	jge    100023ae <ssfn_render+0x10af>
100020ee:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100020f2:	8d 77 01             	lea    esi,[edi+0x1]
100020f5:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100020f9:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
100020fd:	4f                   	dec    edi
100020fe:	be 01 00 00 00       	mov    esi,0x1
10002103:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002107:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
1000210b:	7e 63                	jle    10002170 <ssfn_render+0xe71>
1000210d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002111:	b9 01 00 00 00       	mov    ecx,0x1
10002116:	89 ca                	mov    edx,ecx
10002118:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
1000211c:	7e 45                	jle    10002163 <ssfn_render+0xe64>
1000211e:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002124:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002129:	75 34                	jne    1000215f <ssfn_render+0xe60>
1000212b:	89 c7                	mov    edi,eax
1000212d:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002131:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002135:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002139:	74 0c                	je     10002147 <ssfn_render+0xe48>
1000213b:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000213f:	01 d7                	add    edi,edx
10002141:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002145:	75 18                	jne    1000215f <ssfn_render+0xe60>
10002147:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000214b:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
1000214f:	74 06                	je     10002157 <ssfn_render+0xe58>
10002151:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002155:	75 08                	jne    1000215f <ssfn_render+0xe60>
10002157:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
1000215b:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
1000215f:	41                   	inc    ecx
10002160:	40                   	inc    eax
10002161:	eb b3                	jmp    10002116 <ssfn_render+0xe17>
10002163:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002167:	46                   	inc    esi
10002168:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
1000216c:	b0 01                	mov    al,0x1
1000216e:	eb 97                	jmp    10002107 <ssfn_render+0xe08>
10002170:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002174:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002178:	bb 01 00 00 00       	mov    ebx,0x1
1000217d:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002181:	7e 3d                	jle    100021c0 <ssfn_render+0xec1>
10002183:	b8 01 00 00 00       	mov    eax,0x1
10002188:	89 c2                	mov    edx,eax
1000218a:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000218e:	7e 23                	jle    100021b3 <ssfn_render+0xeb4>
10002190:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10002194:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
1000219a:	8d 14 07             	lea    edx,[edi+eax*1]
1000219d:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021a2:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100021a6:	75 08                	jne    100021b0 <ssfn_render+0xeb1>
100021a8:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100021ac:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
100021b0:	40                   	inc    eax
100021b1:	eb d5                	jmp    10002188 <ssfn_render+0xe89>
100021b3:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100021b7:	43                   	inc    ebx
100021b8:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
100021bc:	b0 01                	mov    al,0x1
100021be:	eb bd                	jmp    1000217d <ssfn_render+0xe7e>
100021c0:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100021c3:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100021c7:	01 c9                	add    ecx,ecx
100021c9:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
100021cd:	e9 08 ff ff ff       	jmp    100020da <ssfn_render+0xddb>
100021d2:	b3 fe                	mov    bl,0xfe
100021d4:	80 fa 20             	cmp    dl,0x20
100021d7:	0f 85 de 01 00 00    	jne    100023bb <ssfn_render+0x10bc>
100021dd:	89 c3                	mov    ebx,eax
100021df:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021e3:	c1 e3 08             	shl    ebx,0x8
100021e6:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100021ec:	09 c3                	or     ebx,eax
100021ee:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100021f2:	43                   	inc    ebx
100021f3:	40                   	inc    eax
100021f4:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100021f8:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
100021fc:	40                   	inc    eax
100021fd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10002201:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002205:	c1 f8 04             	sar    eax,0x4
10002208:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
1000220c:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002210:	c1 f8 04             	sar    eax,0x4
10002213:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002217:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000221b:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10002220:	99                   	cdq    
10002221:	f7 fe                	idiv   esi
10002223:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002227:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000222b:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10002230:	99                   	cdq    
10002231:	f7 fe                	idiv   esi
10002233:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002237:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000223b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002241:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002245:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002249:	39 d6                	cmp    esi,edx
1000224b:	7d 0b                	jge    10002258 <ssfn_render+0xf59>
1000224d:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10002251:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002255:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002258:	83 c1 04             	add    ecx,0x4
1000225b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002266:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002269:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000226d:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
10002271:	72 35                	jb     100022a8 <ssfn_render+0xfa9>
10002273:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10002277:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000227b:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002280:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002284:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002288:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000228f:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
10002293:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
1000229b:	31 d2                	xor    edx,edx
1000229d:	31 ff                	xor    edi,edi
1000229f:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022a3:	e9 cc 00 00 00       	jmp    10002374 <ssfn_render+0x1075>
100022a8:	8a 11                	mov    dl,BYTE PTR [ecx]
100022aa:	89 d0                	mov    eax,edx
100022ac:	83 e0 7f             	and    eax,0x7f
100022af:	84 d2                	test   dl,dl
100022b1:	8d 78 01             	lea    edi,[eax+0x1]
100022b4:	78 09                	js     100022bf <ssfn_render+0xfc0>
100022b6:	41                   	inc    ecx
100022b7:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100022bb:	89 ca                	mov    edx,ecx
100022bd:	eb 3d                	jmp    100022fc <ssfn_render+0xffd>
100022bf:	48                   	dec    eax
100022c0:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100022c7:	83 f8 fe             	cmp    eax,0xfffffffe
100022ca:	74 16                	je     100022e2 <ssfn_render+0xfe3>
100022cc:	8d 5a 01             	lea    ebx,[edx+0x1]
100022cf:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022d6:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022d9:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022e0:	eb dd                	jmp    100022bf <ssfn_render+0xfc0>
100022e2:	83 c1 02             	add    ecx,0x2
100022e5:	eb 86                	jmp    1000226d <ssfn_render+0xf6e>
100022e7:	42                   	inc    edx
100022e8:	8d 73 01             	lea    esi,[ebx+0x1]
100022eb:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100022f2:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
100022f5:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
100022fc:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
10002300:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
10002307:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
1000230c:	75 d9                	jne    100022e7 <ssfn_render+0xfe8>
1000230e:	01 f9                	add    ecx,edi
10002310:	e9 58 ff ff ff       	jmp    1000226d <ssfn_render+0xf6e>
10002315:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002319:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
1000231d:	99                   	cdq    
1000231e:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
10002322:	0f af c8             	imul   ecx,eax
10002325:	31 c0                	xor    eax,eax
10002327:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000232c:	74 0e                	je     1000233c <ssfn_render+0x103d>
1000232e:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002332:	bb 04 00 00 00       	mov    ebx,0x4
10002337:	29 f8                	sub    eax,edi
10002339:	99                   	cdq    
1000233a:	f7 fb                	idiv   ebx
1000233c:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10002340:	31 db                	xor    ebx,ebx
10002342:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002346:	31 f6                	xor    esi,esi
10002348:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
1000234f:	01 c1                	add    ecx,eax
10002351:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002355:	7f 30                	jg     10002387 <ssfn_render+0x1088>
10002357:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000235b:	85 c0                	test   eax,eax
1000235d:	79 02                	jns    10002361 <ssfn_render+0x1062>
1000235f:	31 c0                	xor    eax,eax
10002361:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002365:	47                   	inc    edi
10002366:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
1000236a:	b2 01                	mov    dl,0x1
1000236c:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
10002370:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002374:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002378:	7c 9b                	jl     10002315 <ssfn_render+0x1016>
1000237a:	84 d2                	test   dl,dl
1000237c:	74 3b                	je     100023b9 <ssfn_render+0x10ba>
1000237e:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002385:	eb 32                	jmp    100023b9 <ssfn_render+0x10ba>
10002387:	89 d8                	mov    eax,ebx
10002389:	99                   	cdq    
1000238a:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000238e:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
10002395:	3c ff                	cmp    al,0xff
10002397:	74 0e                	je     100023a7 <ssfn_render+0x10a8>
10002399:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000239d:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023a3:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
100023a7:	46                   	inc    esi
100023a8:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
100023ac:	eb a3                	jmp    10002351 <ssfn_render+0x1052>
100023ae:	84 c0                	test   al,al
100023b0:	74 07                	je     100023b9 <ssfn_render+0x10ba>
100023b2:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
100023b9:	b3 fe                	mov    bl,0xfe
100023bb:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
100023bf:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
100023c3:	e9 9f f5 ff ff       	jmp    10001967 <ssfn_render+0x668>
100023c8:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100023ce:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023d1:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023d4:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023d7:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023dd:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023e1:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023e5:	89 f0                	mov    eax,esi
100023e7:	89 d9                	mov    ecx,ebx
100023e9:	43                   	inc    ebx
100023ea:	39 de                	cmp    esi,ebx
100023ec:	7e 08                	jle    100023f6 <ssfn_render+0x10f7>
100023ee:	48                   	dec    eax
100023ef:	29 c8                	sub    eax,ecx
100023f1:	88 42 07             	mov    BYTE PTR [edx+0x7],al
100023f4:	eb 04                	jmp    100023fa <ssfn_render+0x10fb>
100023f6:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
100023fa:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
10002402:	0f 84 c9 0c 00 00    	je     100030d1 <ssfn_render+0x1dd2>
10002408:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
1000240e:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002414:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002418:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
1000241b:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000241f:	0f ba e0 0c          	bt     eax,0xc
10002423:	72 22                	jb     10002447 <ssfn_render+0x1148>
10002425:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002428:	83 e0 0f             	and    eax,0xf
1000242b:	3c 03                	cmp    al,0x3
1000242d:	74 18                	je     10002447 <ssfn_render+0x1148>
1000242f:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
10002433:	84 c9                	test   cl,cl
10002435:	74 10                	je     10002447 <ssfn_render+0x1148>
10002437:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
1000243b:	0f af d7             	imul   edx,edi
1000243e:	89 d0                	mov    eax,edx
10002440:	99                   	cdq    
10002441:	f7 f9                	idiv   ecx
10002443:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002447:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000244b:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
10002451:	7d 06                	jge    10002459 <ssfn_render+0x115a>
10002453:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002459:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
1000245f:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
10002463:	0f b7 13             	movzx  edx,WORD PTR [ebx]
10002466:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
1000246b:	89 d0                	mov    eax,edx
1000246d:	99                   	cdq    
1000246e:	f7 f9                	idiv   ecx
10002470:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002474:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002478:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
1000247b:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000247f:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
10002483:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002487:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
1000248c:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002490:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002495:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002499:	99                   	cdq    
1000249a:	f7 f9                	idiv   ecx
1000249c:	31 d2                	xor    edx,edx
1000249e:	83 ff 10             	cmp    edi,0x10
100024a1:	0f 9f c2             	setg   dl
100024a4:	42                   	inc    edx
100024a5:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
100024a9:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
100024ad:	7d 08                	jge    100024b7 <ssfn_render+0x11b8>
100024af:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100024b3:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100024b7:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
100024bb:	39 c2                	cmp    edx,eax
100024bd:	7d 04                	jge    100024c3 <ssfn_render+0x11c4>
100024bf:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024c3:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
100024c8:	74 4c                	je     10002516 <ssfn_render+0x1217>
100024ca:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100024ce:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024d3:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024d7:	99                   	cdq    
100024d8:	f7 f9                	idiv   ecx
100024da:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024de:	81 e2 00 08 00 00    	and    edx,0x800
100024e4:	74 04                	je     100024ea <ssfn_render+0x11eb>
100024e6:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024ea:	01 d0                	add    eax,edx
100024ec:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024f2:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100024f6:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
100024fa:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
100024fe:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002503:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002507:	99                   	cdq    
10002508:	f7 f9                	idiv   ecx
1000250a:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000250e:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002514:	eb 22                	jmp    10002538 <ssfn_render+0x1239>
10002516:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000251a:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002524:	d1 f8                	sar    eax,1
10002526:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
1000252e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002532:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002538:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000253f:	8b 18                	mov    ebx,DWORD PTR [eax]
10002541:	85 db                	test   ebx,ebx
10002543:	0f 84 2e 09 00 00    	je     10002e77 <ssfn_render+0x1b78>
10002549:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
1000254d:	89 d1                	mov    ecx,edx
1000254f:	89 d0                	mov    eax,edx
10002551:	66 c1 f9 0b          	sar    cx,0xb
10002555:	c1 f8 1f             	sar    eax,0x1f
10002558:	31 c2                	xor    edx,eax
1000255a:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
1000255e:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
10002562:	88 c8                	mov    al,cl
10002564:	83 e0 10             	and    eax,0x10
10002567:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
1000256b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000256f:	83 c0 40             	add    eax,0x40
10002572:	c1 f8 06             	sar    eax,0x6
10002575:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
1000257c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002580:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002584:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002588:	7d 08                	jge    10002592 <ssfn_render+0x1293>
1000258a:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000258e:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002592:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002595:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
1000259d:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025a1:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
100025a9:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
100025ad:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100025b2:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100025b6:	99                   	cdq    
100025b7:	f7 f9                	idiv   ecx
100025b9:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100025bd:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025c4:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025c7:	0f b6 f4             	movzx  esi,ah
100025ca:	89 c2                	mov    edx,eax
100025cc:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025d0:	c1 ea 10             	shr    edx,0x10
100025d3:	0f b6 fa             	movzx  edi,dl
100025d6:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025da:	0f b6 f8             	movzx  edi,al
100025dd:	c1 e8 18             	shr    eax,0x18
100025e0:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025e4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025e8:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025ef:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100025f2:	0f b6 fc             	movzx  edi,ah
100025f5:	89 c2                	mov    edx,eax
100025f7:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
100025fe:	c1 ea 10             	shr    edx,0x10
10002601:	0f b6 c0             	movzx  eax,al
10002604:	0f b6 f2             	movzx  esi,dl
10002607:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000260e:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002615:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002619:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002620:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002627:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
1000262b:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000262f:	0f af c2             	imul   eax,edx
10002632:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002636:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
1000263a:	8d 04 90             	lea    eax,[eax+edx*4]
1000263d:	01 d8                	add    eax,ebx
1000263f:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
10002646:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
1000264a:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
10002651:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002656:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
1000265d:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002661:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002665:	0f 8d e2 04 00 00    	jge    10002b4d <ssfn_render+0x184e>
1000266b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002672:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002679:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
1000267d:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
10002681:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002685:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002689:	39 d0                	cmp    eax,edx
1000268b:	0f 8d bc 04 00 00    	jge    10002b4d <ssfn_render+0x184e>
10002691:	85 c0                	test   eax,eax
10002693:	0f 88 94 04 00 00    	js     10002b2d <ssfn_render+0x182e>
10002699:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000269f:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026a3:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100026a7:	c1 e1 08             	shl    ecx,0x8
100026aa:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100026b2:	89 c8                	mov    eax,ecx
100026b4:	0f af c3             	imul   eax,ebx
100026b7:	99                   	cdq    
100026b8:	f7 fe                	idiv   esi
100026ba:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100026c1:	c1 f8 08             	sar    eax,0x8
100026c4:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
100026cb:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026d1:	0f af c3             	imul   eax,ebx
100026d4:	99                   	cdq    
100026d5:	f7 fe                	idiv   esi
100026d7:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026db:	c1 f8 08             	sar    eax,0x8
100026de:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026e5:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026e9:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100026f0:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
100026f7:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100026fe:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002702:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002706:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000270a:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000270e:	0f 8d 19 04 00 00    	jge    10002b2d <ssfn_render+0x182e>
10002714:	85 c0                	test   eax,eax
10002716:	0f 88 ff 03 00 00    	js     10002b1b <ssfn_render+0x181c>
1000271c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002723:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002727:	75 42                	jne    1000276b <ssfn_render+0x146c>
10002729:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000272d:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002734:	b9 10 00 00 00       	mov    ecx,0x10
10002739:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000273c:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002743:	89 c2                	mov    edx,eax
10002745:	0f b6 fc             	movzx  edi,ah
10002748:	d3 ea                	shr    edx,cl
1000274a:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002751:	0f b6 f2             	movzx  esi,dl
10002754:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002758:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000275f:	d3 e8                	shr    eax,cl
10002761:	0f b6 c0             	movzx  eax,al
10002764:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
1000276b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002771:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002775:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002778:	c1 e1 08             	shl    ecx,0x8
1000277b:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
1000277f:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10002787:	89 c8                	mov    eax,ecx
10002789:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10002791:	0f af c3             	imul   eax,ebx
10002794:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
1000279c:	99                   	cdq    
1000279d:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
100027a5:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027a9:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100027b1:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
100027b8:	c1 f8 08             	sar    eax,0x8
100027bb:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100027c2:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100027c8:	0f af c3             	imul   eax,ebx
100027cb:	99                   	cdq    
100027cc:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027d0:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027d4:	c1 f8 08             	sar    eax,0x8
100027d7:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027de:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027e5:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027e9:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100027ed:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100027f1:	0f 8d 3b 02 00 00    	jge    10002a32 <ssfn_render+0x1733>
100027f7:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
100027fb:	c1 fa 08             	sar    edx,0x8
100027fe:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002805:	75 25                	jne    1000282c <ssfn_render+0x152d>
10002807:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
1000280c:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
10002813:	b8 00 01 00 00       	mov    eax,0x100
10002818:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
10002820:	29 c8                	sub    eax,ecx
10002822:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002826:	39 c7                	cmp    edi,eax
10002828:	7e 1c                	jle    10002846 <ssfn_render+0x1547>
1000282a:	eb 16                	jmp    10002842 <ssfn_render+0x1543>
1000282c:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002834:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
1000283b:	75 09                	jne    10002846 <ssfn_render+0x1547>
1000283d:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
10002842:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002846:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
1000284a:	0f b7 00             	movzx  eax,WORD PTR [eax]
1000284d:	0f af c2             	imul   eax,edx
10002850:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
10002857:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
1000285c:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10002861:	c1 f8 08             	sar    eax,0x8
10002864:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
1000286b:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
10002872:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002876:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
1000287a:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
1000287e:	0f 8d a1 01 00 00    	jge    10002a25 <ssfn_render+0x1726>
10002884:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002888:	c1 f8 08             	sar    eax,0x8
1000288b:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
10002892:	75 3b                	jne    100028cf <ssfn_render+0x15d0>
10002894:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
10002899:	ba 00 01 00 00       	mov    edx,0x100
1000289e:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
100028a6:	29 ca                	sub    edx,ecx
100028a8:	89 f1                	mov    ecx,esi
100028aa:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
100028b1:	39 d1                	cmp    ecx,edx
100028b3:	7c 0e                	jl     100028c3 <ssfn_render+0x15c4>
100028b5:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028b9:	81 fa 00 01 00 00    	cmp    edx,0x100
100028bf:	74 22                	je     100028e3 <ssfn_render+0x15e4>
100028c1:	89 d1                	mov    ecx,edx
100028c3:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
100028c8:	89 cf                	mov    edi,ecx
100028ca:	c1 ff 08             	sar    edi,0x8
100028cd:	eb 14                	jmp    100028e3 <ssfn_render+0x15e4>
100028cf:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028d6:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028dd:	74 04                	je     100028e3 <ssfn_render+0x15e4>
100028df:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028e3:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028e7:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028eb:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100028f2:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
100028f7:	81 fa ff 00 00 00    	cmp    edx,0xff
100028fd:	75 37                	jne    10002936 <ssfn_render+0x1637>
100028ff:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
10002906:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
1000290e:	0f af c7             	imul   eax,edi
10002911:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002915:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
1000291c:	0f af c7             	imul   eax,edi
1000291f:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002923:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
1000292a:	0f af c7             	imul   eax,edi
1000292d:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002931:	e9 e2 00 00 00       	jmp    10002a18 <ssfn_render+0x1719>
10002936:	81 fa fe 00 00 00    	cmp    edx,0xfe
1000293c:	74 2d                	je     1000296b <ssfn_render+0x166c>
1000293e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002941:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002944:	85 c9                	test   ecx,ecx
10002946:	74 23                	je     1000296b <ssfn_render+0x166c>
10002948:	01 c8                	add    eax,ecx
1000294a:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
1000294d:	89 d9                	mov    ecx,ebx
1000294f:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
10002956:	c1 e9 10             	shr    ecx,0x10
10002959:	0f b6 f7             	movzx  esi,bh
1000295c:	0f b6 c1             	movzx  eax,cl
1000295f:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002963:	0f b6 c3             	movzx  eax,bl
10002966:	c1 eb 18             	shr    ebx,0x18
10002969:	eb 14                	jmp    1000297f <ssfn_render+0x1680>
1000296b:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000296f:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10002973:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002977:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
1000297b:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000297f:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002985:	75 25                	jne    100029ac <ssfn_render+0x16ad>
10002987:	0f af c7             	imul   eax,edi
1000298a:	0f af f7             	imul   esi,edi
1000298d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002991:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002995:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
1000299b:	0f af cf             	imul   ecx,edi
1000299e:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029a2:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
100029a6:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
100029aa:	eb 6c                	jmp    10002a18 <ssfn_render+0x1719>
100029ac:	0f af f3             	imul   esi,ebx
100029af:	0f af c3             	imul   eax,ebx
100029b2:	b9 ff 00 00 00       	mov    ecx,0xff
100029b7:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
100029be:	29 d9                	sub    ecx,ebx
100029c0:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100029c4:	0f af d1             	imul   edx,ecx
100029c7:	b9 ff 00 00 00       	mov    ecx,0xff
100029cc:	01 d0                	add    eax,edx
100029ce:	0f af c7             	imul   eax,edi
100029d1:	99                   	cdq    
100029d2:	f7 f9                	idiv   ecx
100029d4:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029d8:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029dc:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029e4:	01 f0                	add    eax,esi
100029e6:	89 ce                	mov    esi,ecx
100029e8:	0f af c7             	imul   eax,edi
100029eb:	99                   	cdq    
100029ec:	f7 f9                	idiv   ecx
100029ee:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029f2:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100029f6:	0f af cb             	imul   ecx,ebx
100029f9:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029fd:	0f af df             	imul   ebx,edi
10002a00:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a08:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a0c:	01 c8                	add    eax,ecx
10002a0e:	0f af c7             	imul   eax,edi
10002a11:	99                   	cdq    
10002a12:	f7 fe                	idiv   esi
10002a14:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a18:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a20:	e9 51 fe ff ff       	jmp    10002876 <ssfn_render+0x1577>
10002a25:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a2d:	e9 b7 fd ff ff       	jmp    100027e9 <ssfn_render+0x14ea>
10002a32:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a37:	74 30                	je     10002a69 <ssfn_render+0x176a>
10002a39:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a3d:	31 d2                	xor    edx,edx
10002a3f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a43:	31 d2                	xor    edx,edx
10002a45:	89 c1                	mov    ecx,eax
10002a47:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a4b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a4f:	31 d2                	xor    edx,edx
10002a51:	89 c6                	mov    esi,eax
10002a53:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a57:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a5b:	31 d2                	xor    edx,edx
10002a5d:	89 c3                	mov    ebx,eax
10002a5f:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a63:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a67:	eb 1c                	jmp    10002a85 <ssfn_render+0x1786>
10002a69:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a6d:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a71:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a75:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a79:	c1 e9 08             	shr    ecx,0x8
10002a7c:	c1 ee 08             	shr    esi,0x8
10002a7f:	c1 eb 08             	shr    ebx,0x8
10002a82:	c1 e8 08             	shr    eax,0x8
10002a85:	83 f8 0f             	cmp    eax,0xf
10002a88:	0f 86 8d 00 00 00    	jbe    10002b1b <ssfn_render+0x181c>
10002a8e:	89 ca                	mov    edx,ecx
10002a90:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002a96:	76 05                	jbe    10002a9d <ssfn_render+0x179e>
10002a98:	ba ff 00 00 00       	mov    edx,0xff
10002a9d:	b9 10 00 00 00       	mov    ecx,0x10
10002aa2:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002aa9:	d3 e2                	shl    edx,cl
10002aab:	3d ff 00 00 00       	cmp    eax,0xff
10002ab0:	89 d1                	mov    ecx,edx
10002ab2:	76 05                	jbe    10002ab9 <ssfn_render+0x17ba>
10002ab4:	b8 ff 00 00 00       	mov    eax,0xff
10002ab9:	c1 e0 18             	shl    eax,0x18
10002abc:	09 c8                	or     eax,ecx
10002abe:	81 fe ff 00 00 00    	cmp    esi,0xff
10002ac4:	76 05                	jbe    10002acb <ssfn_render+0x17cc>
10002ac6:	be ff 00 00 00       	mov    esi,0xff
10002acb:	c1 e6 08             	shl    esi,0x8
10002ace:	09 f0                	or     eax,esi
10002ad0:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002ad6:	76 05                	jbe    10002add <ssfn_render+0x17de>
10002ad8:	bb ff 00 00 00       	mov    ebx,0xff
10002add:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ae1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002ae5:	d3 e3                	shl    ebx,cl
10002ae7:	09 c3                	or     ebx,eax
10002ae9:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002af0:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002af3:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002af7:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002afb:	75 1e                	jne    10002b1b <ssfn_render+0x181c>
10002afd:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b04:	7e 07                	jle    10002b0d <ssfn_render+0x180e>
10002b06:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b0d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b11:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b15:	7d 04                	jge    10002b1b <ssfn_render+0x181c>
10002b17:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b1b:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b1f:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b23:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b27:	0f 85 ca fb ff ff    	jne    100026f7 <ssfn_render+0x13f8>
10002b2d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b34:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b38:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b3c:	25 fc ff 00 00       	and    eax,0xfffc
10002b41:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b48:	e9 10 fb ff ff       	jmp    1000265d <ssfn_render+0x135e>
10002b4d:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b54:	0f 84 90 01 00 00    	je     10002cea <ssfn_render+0x19eb>
10002b5a:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b62:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b69:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b6d:	40                   	inc    eax
10002b6e:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b72:	29 c7                	sub    edi,eax
10002b74:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b78:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b7c:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b80:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b84:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b88:	7e 09                	jle    10002b93 <ssfn_render+0x1894>
10002b8a:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002b8e:	40                   	inc    eax
10002b8f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b93:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002b9a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ba1:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002ba5:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002ba9:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bad:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bb1:	0f af c2             	imul   eax,edx
10002bb4:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002bb8:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002bbc:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002bc0:	03 07                	add    eax,DWORD PTR [edi]
10002bc2:	89 c7                	mov    edi,eax
10002bc4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002bc8:	c1 e0 18             	shl    eax,0x18
10002bcb:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002bcf:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002bd3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002bd7:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002bdc:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002be0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002be4:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002be8:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002bec:	0f 8e f8 00 00 00    	jle    10002cea <ssfn_render+0x19eb>
10002bf2:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bf9:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c00:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c04:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c08:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c0c:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c10:	39 d0                	cmp    eax,edx
10002c12:	0f 8d d2 00 00 00    	jge    10002cea <ssfn_render+0x19eb>
10002c18:	31 db                	xor    ebx,ebx
10002c1a:	85 c0                	test   eax,eax
10002c1c:	79 23                	jns    10002c41 <ssfn_render+0x1942>
10002c1e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c25:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c29:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c2d:	25 fc ff 00 00       	and    eax,0xfffc
10002c32:	01 c7                	add    edi,eax
10002c34:	eb aa                	jmp    10002be0 <ssfn_render+0x18e1>
10002c36:	85 c0                	test   eax,eax
10002c38:	79 20                	jns    10002c5a <ssfn_render+0x195b>
10002c3a:	43                   	inc    ebx
10002c3b:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c3f:	7c dd                	jl     10002c1e <ssfn_render+0x191f>
10002c41:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c48:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c4c:	01 d8                	add    eax,ebx
10002c4e:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c52:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c56:	7c de                	jl     10002c36 <ssfn_render+0x1937>
10002c58:	eb c4                	jmp    10002c1e <ssfn_render+0x191f>
10002c5a:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c5e:	7e 06                	jle    10002c66 <ssfn_render+0x1967>
10002c60:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c64:	7f d4                	jg     10002c3a <ssfn_render+0x193b>
10002c66:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c69:	b8 10 00 00 00       	mov    eax,0x10
10002c6e:	0f b6 f6             	movzx  esi,dh
10002c71:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c75:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c79:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c7d:	89 d0                	mov    eax,edx
10002c7f:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c83:	d3 e8                	shr    eax,cl
10002c85:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c89:	0f b6 c0             	movzx  eax,al
10002c8c:	d3 ea                	shr    edx,cl
10002c8e:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002c92:	0f b6 f2             	movzx  esi,dl
10002c95:	29 c1                	sub    ecx,eax
10002c97:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002c9b:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002ca0:	29 f2                	sub    edx,esi
10002ca2:	c1 f9 08             	sar    ecx,0x8
10002ca5:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002caa:	01 c8                	add    eax,ecx
10002cac:	c1 fa 08             	sar    edx,0x8
10002caf:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cb3:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002cb7:	d3 e0                	shl    eax,cl
10002cb9:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cbd:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002cc1:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002cc5:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cc9:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cce:	d3 e6                	shl    esi,cl
10002cd0:	c1 fa 08             	sar    edx,0x8
10002cd3:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002cd7:	c1 e2 08             	shl    edx,0x8
10002cda:	09 d0                	or     eax,edx
10002cdc:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002ce0:	09 c6                	or     esi,eax
10002ce2:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002ce5:	e9 50 ff ff ff       	jmp    10002c3a <ssfn_render+0x193b>
10002cea:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002cf1:	0f 84 80 01 00 00    	je     10002e77 <ssfn_render+0x1b78>
10002cf7:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002cfb:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002cff:	d1 fa                	sar    edx,1
10002d01:	40                   	inc    eax
10002d02:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d06:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d0a:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d0e:	7e 09                	jle    10002d19 <ssfn_render+0x1a1a>
10002d10:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d14:	40                   	inc    eax
10002d15:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d19:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d20:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d27:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d2b:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d2f:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d33:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d37:	01 d0                	add    eax,edx
10002d39:	0f af c1             	imul   eax,ecx
10002d3c:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d40:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d44:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d48:	03 03                	add    eax,DWORD PTR [ebx]
10002d4a:	89 c7                	mov    edi,eax
10002d4c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d50:	c1 e0 18             	shl    eax,0x18
10002d53:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d57:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d5f:	01 d0                	add    eax,edx
10002d61:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d65:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d6a:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d6e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d72:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d76:	0f 8e fb 00 00 00    	jle    10002e77 <ssfn_render+0x1b78>
10002d7c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d83:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d87:	01 d8                	add    eax,ebx
10002d89:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d90:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d94:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002d98:	39 d0                	cmp    eax,edx
10002d9a:	0f 8d d7 00 00 00    	jge    10002e77 <ssfn_render+0x1b78>
10002da0:	31 f6                	xor    esi,esi
10002da2:	85 c0                	test   eax,eax
10002da4:	0f 89 ad 00 00 00    	jns    10002e57 <ssfn_render+0x1b58>
10002daa:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002db1:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002db5:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002db9:	25 fc ff 00 00       	and    eax,0xfffc
10002dbe:	01 c7                	add    edi,eax
10002dc0:	eb ac                	jmp    10002d6e <ssfn_render+0x1a6f>
10002dc2:	85 c0                	test   eax,eax
10002dc4:	0f 88 82 00 00 00    	js     10002e4c <ssfn_render+0x1b4d>
10002dca:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002dcd:	b8 10 00 00 00       	mov    eax,0x10
10002dd2:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002dd6:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002dda:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002dde:	89 d8                	mov    eax,ebx
10002de0:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002de4:	d3 e8                	shr    eax,cl
10002de6:	0f b6 cf             	movzx  ecx,bh
10002de9:	0f b6 c0             	movzx  eax,al
10002dec:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002df0:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002df4:	d3 eb                	shr    ebx,cl
10002df6:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002dfa:	0f b6 db             	movzx  ebx,bl
10002dfd:	29 c1                	sub    ecx,eax
10002dff:	29 da                	sub    edx,ebx
10002e01:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e06:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e0b:	c1 f9 08             	sar    ecx,0x8
10002e0e:	c1 fa 08             	sar    edx,0x8
10002e11:	01 c8                	add    eax,ecx
10002e13:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e17:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e1b:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e1f:	d3 e0                	shl    eax,cl
10002e21:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e25:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e29:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e2e:	c1 fa 08             	sar    edx,0x8
10002e31:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e35:	c1 e2 08             	shl    edx,0x8
10002e38:	09 d0                	or     eax,edx
10002e3a:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e3d:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e41:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e45:	d3 e2                	shl    edx,cl
10002e47:	09 c2                	or     edx,eax
10002e49:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e4c:	46                   	inc    esi
10002e4d:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e51:	0f 8c 53 ff ff ff    	jl     10002daa <ssfn_render+0x1aab>
10002e57:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e5e:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e62:	01 f0                	add    eax,esi
10002e64:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e68:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e6c:	0f 8c 50 ff ff ff    	jl     10002dc2 <ssfn_render+0x1ac3>
10002e72:	e9 33 ff ff ff       	jmp    10002daa <ssfn_render+0x1aab>
10002e77:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e7e:	74 04                	je     10002e84 <ssfn_render+0x1b85>
10002e80:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e84:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e88:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002e8c:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002e92:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e99:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002e9d:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002ea4:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ea7:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002eab:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002eb1:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002eb5:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002eba:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002ebe:	99                   	cdq    
10002ebf:	f7 f9                	idiv   ecx
10002ec1:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002ec5:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002ecb:	25 80 00 00 00       	and    eax,0x80
10002ed0:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002ed4:	0f 85 f7 01 00 00    	jne    100030d1 <ssfn_render+0x1dd2>
10002eda:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002edd:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002ee1:	0f 84 ea 01 00 00    	je     100030d1 <ssfn_render+0x1dd2>
10002ee7:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002eee:	83 ec 0c             	sub    esp,0xc
10002ef1:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002ef8:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002eff:	51                   	push   ecx
10002f00:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f07:	e8 53 d9 ff ff       	call   1000085f <_ssfn_c>
10002f0c:	83 c4 10             	add    esp,0x10
10002f0f:	85 c0                	test   eax,eax
10002f11:	0f 84 ba 01 00 00    	je     100030d1 <ssfn_render+0x1dd2>
10002f17:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f1f:	0f 86 ac 01 00 00    	jbe    100030d1 <ssfn_render+0x1dd2>
10002f25:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f2b:	8d 48 06             	lea    ecx,[eax+0x6]
10002f2e:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f34:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f38:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f3c:	0f 8e 8f 01 00 00    	jle    100030d1 <ssfn_render+0x1dd2>
10002f42:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f44:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f48:	8a 18                	mov    bl,BYTE PTR [eax]
10002f4a:	83 e3 40             	and    ebx,0x40
10002f4d:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f52:	75 14                	jne    10002f68 <ssfn_render+0x1c69>
10002f54:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f58:	75 0e                	jne    10002f68 <ssfn_render+0x1c69>
10002f5a:	80 fb 01             	cmp    bl,0x1
10002f5d:	19 c0                	sbb    eax,eax
10002f5f:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f63:	e9 60 01 00 00       	jmp    100030c8 <ssfn_render+0x1dc9>
10002f68:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f6c:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f70:	c1 e6 10             	shl    esi,0x10
10002f73:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f77:	84 db                	test   bl,bl
10002f79:	74 08                	je     10002f83 <ssfn_render+0x1c84>
10002f7b:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f7e:	83 c1 06             	add    ecx,0x6
10002f81:	eb 0c                	jmp    10002f8f <ssfn_render+0x1c90>
10002f83:	c1 e2 08             	shl    edx,0x8
10002f86:	83 c1 05             	add    ecx,0x5
10002f89:	89 d0                	mov    eax,edx
10002f8b:	09 f0                	or     eax,esi
10002f8d:	09 c7                	or     edi,eax
10002f8f:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f92:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002f96:	01 f8                	add    eax,edi
10002f98:	8a 10                	mov    dl,BYTE PTR [eax]
10002f9a:	88 d3                	mov    bl,dl
10002f9c:	83 e3 e0             	and    ebx,0xffffffe0
10002f9f:	80 fb c0             	cmp    bl,0xc0
10002fa2:	0f 85 20 01 00 00    	jne    100030c8 <ssfn_render+0x1dc9>
10002fa8:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002fac:	c1 e2 08             	shl    edx,0x8
10002faf:	83 c0 02             	add    eax,0x2
10002fb2:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002fb8:	09 da                	or     edx,ebx
10002fba:	8d 72 01             	lea    esi,[edx+0x1]
10002fbd:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002fc1:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002fc8:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002fcc:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fd1:	0f 84 f1 00 00 00    	je     100030c8 <ssfn_render+0x1dc9>
10002fd7:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fdb:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002fde:	c1 e3 10             	shl    ebx,0x10
10002fe1:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002fe7:	09 d3                	or     ebx,edx
10002fe9:	39 de                	cmp    esi,ebx
10002feb:	0f 82 cf 00 00 00    	jb     100030c0 <ssfn_render+0x1dc1>
10002ff1:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10002ff4:	89 d7                	mov    edi,edx
10002ff6:	c1 e7 10             	shl    edi,0x10
10002ff9:	81 e7 00 00 0f 00    	and    edi,0xf0000
10002fff:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10003003:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10003007:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
1000300b:	39 fe                	cmp    esi,edi
1000300d:	0f 87 ad 00 00 00    	ja     100030c0 <ssfn_render+0x1dc1>
10003013:	29 de                	sub    esi,ebx
10003015:	c0 ea 04             	shr    dl,0x4
10003018:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
1000301f:	0f b6 d2             	movzx  edx,dl
10003022:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10003026:	89 d3                	mov    ebx,edx
10003028:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
1000302c:	c1 e3 10             	shl    ebx,0x10
1000302f:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10003032:	09 da                	or     edx,ebx
10003034:	c0 e8 04             	shr    al,0x4
10003037:	c1 e0 18             	shl    eax,0x18
1000303a:	09 c2                	or     edx,eax
1000303c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003040:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
10003043:	01 c2                	add    edx,eax
10003045:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003048:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
1000304c:	39 d7                	cmp    edi,edx
1000304e:	76 78                	jbe    100030c8 <ssfn_render+0x1dc9>
10003050:	8a 1a                	mov    bl,BYTE PTR [edx]
10003052:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10003059:	89 de                	mov    esi,ebx
1000305b:	83 e6 7f             	and    esi,0x7f
1000305e:	39 c6                	cmp    esi,eax
10003060:	73 1d                	jae    1000307f <ssfn_render+0x1d80>
10003062:	48                   	dec    eax
10003063:	bb 02 00 00 00       	mov    ebx,0x2
10003068:	29 f0                	sub    eax,esi
1000306a:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
10003071:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10003074:	84 c0                	test   al,al
10003076:	78 03                	js     1000307b <ssfn_render+0x1d7c>
10003078:	8d 58 02             	lea    ebx,[eax+0x2]
1000307b:	01 da                	add    edx,ebx
1000307d:	eb cd                	jmp    1000304c <ssfn_render+0x1d4d>
1000307f:	be 01 00 00 00       	mov    esi,0x1
10003084:	84 db                	test   bl,bl
10003086:	78 03                	js     1000308b <ssfn_render+0x1d8c>
10003088:	8d 70 01             	lea    esi,[eax+0x1]
1000308b:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
1000308f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003093:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10003098:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
1000309c:	99                   	cdq    
1000309d:	f7 fb                	idiv   ebx
1000309f:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
100030a4:	74 0d                	je     100030b3 <ssfn_render+0x1db4>
100030a6:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100030ad:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
100030b1:	eb 15                	jmp    100030c8 <ssfn_render+0x1dc9>
100030b3:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
100030ba:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
100030be:	eb 08                	jmp    100030c8 <ssfn_render+0x1dc9>
100030c0:	83 c0 08             	add    eax,0x8
100030c3:	e9 00 ff ff ff       	jmp    10002fc8 <ssfn_render+0x1cc9>
100030c8:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100030cc:	e9 5d fe ff ff       	jmp    10002f2e <ssfn_render+0x1c2f>
100030d1:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030d8:	eb 73                	jmp    1000314d <ssfn_render+0x1e4e>
100030da:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030e5:	e9 50 e4 ff ff       	jmp    1000153a <ssfn_render+0x23b>
100030ea:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030f1:	57                   	push   edi
100030f2:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100030f9:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10003100:	e8 5a d7 ff ff       	call   1000085f <_ssfn_c>
10003105:	5f                   	pop    edi
10003106:	85 c0                	test   eax,eax
10003108:	0f 84 25 e4 ff ff    	je     10001533 <ssfn_render+0x234>
1000310e:	e9 a2 e4 ff ff       	jmp    100015b5 <ssfn_render+0x2b6>
10003113:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003116:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
1000311a:	75 0c                	jne    10003128 <ssfn_render+0x1e29>
1000311c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10003123:	e9 3b e4 ff ff       	jmp    10001563 <ssfn_render+0x264>
10003128:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000312f:	57                   	push   edi
10003130:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003137:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000313e:	e8 1c d7 ff ff       	call   1000085f <_ssfn_c>
10003143:	59                   	pop    ecx
10003144:	85 c0                	test   eax,eax
10003146:	74 d4                	je     1000311c <ssfn_render+0x1e1d>
10003148:	e9 68 e4 ff ff       	jmp    100015b5 <ssfn_render+0x2b6>
1000314d:	81 c4 dc 05 01 00    	add    esp,0x105dc
10003153:	89 c8                	mov    eax,ecx
10003155:	5b                   	pop    ebx
10003156:	5e                   	pop    esi
10003157:	5f                   	pop    edi
10003158:	5d                   	pop    ebp
10003159:	c3                   	ret    

1000315a <ssfn_bbox>:
1000315a:	55                   	push   ebp
1000315b:	57                   	push   edi
1000315c:	56                   	push   esi
1000315d:	53                   	push   ebx
1000315e:	83 ec 3c             	sub    esp,0x3c
10003161:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
10003166:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
1000316a:	0f 94 c0             	sete   al
1000316d:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
10003172:	0f 94 c2             	sete   dl
10003175:	09 d0                	or     eax,edx
10003177:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
1000317c:	0f 94 c2             	sete   dl
1000317f:	09 d0                	or     eax,edx
10003181:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
10003186:	0f 94 c2             	sete   dl
10003189:	09 d0                	or     eax,edx
1000318b:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
10003190:	0f 94 c2             	sete   dl
10003193:	08 d0                	or     al,dl
10003195:	0f 85 7c 01 00 00    	jne    10003317 <ssfn_bbox+0x1bd>
1000319b:	85 db                	test   ebx,ebx
1000319d:	0f 84 74 01 00 00    	je     10003317 <ssfn_bbox+0x1bd>
100031a3:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031a7:	31 f6                	xor    esi,esi
100031a9:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031af:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031b3:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031b9:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100031bd:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c3:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100031c7:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031cd:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031d1:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031d4:	0f 84 42 01 00 00    	je     1000331c <ssfn_bbox+0x1c2>
100031da:	8d 54 24 18          	lea    edx,[esp+0x18]
100031de:	b9 06 00 00 00       	mov    ecx,0x6
100031e3:	89 d7                	mov    edi,edx
100031e5:	89 f0                	mov    eax,esi
100031e7:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100031f1:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100031f3:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100031fb:	31 ff                	xor    edi,edi
100031fd:	bd 01 00 00 00       	mov    ebp,0x1
10003202:	50                   	push   eax
10003203:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003207:	8d 44 24 20          	lea    eax,[esp+0x20]
1000320b:	50                   	push   eax
1000320c:	53                   	push   ebx
1000320d:	e8 fc ff ff ff       	call   1000320e <ssfn_bbox+0xb4>	1000320e: R_386_PC32	ssfn_render
10003212:	83 c4 10             	add    esp,0x10
10003215:	89 c6                	mov    esi,eax
10003217:	85 c0                	test   eax,eax
10003219:	74 6f                	je     1000328a <ssfn_bbox+0x130>
1000321b:	0f 88 fb 00 00 00    	js     1000331c <ssfn_bbox+0x1c2>
10003221:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003227:	85 c0                	test   eax,eax
10003229:	0f 84 ed 00 00 00    	je     1000331c <ssfn_bbox+0x1c2>
1000322f:	85 ed                	test   ebp,ebp
10003231:	74 0b                	je     1000323e <ssfn_bbox+0xe4>
10003233:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003239:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000323e:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003242:	74 12                	je     10003256 <ssfn_bbox+0xfc>
10003244:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
1000324a:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000324e:	7d 2f                	jge    1000327f <ssfn_bbox+0x125>
10003250:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003254:	eb 29                	jmp    1000327f <ssfn_bbox+0x125>
10003256:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003259:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
1000325e:	39 cd                	cmp    ebp,ecx
10003260:	7d 05                	jge    10003267 <ssfn_bbox+0x10d>
10003262:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
10003267:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
1000326b:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
10003270:	84 d2                	test   dl,dl
10003272:	75 04                	jne    10003278 <ssfn_bbox+0x11e>
10003274:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003278:	01 ca                	add    edx,ecx
1000327a:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
1000327f:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10003283:	31 ed                	xor    ebp,ebp
10003285:	e9 78 ff ff ff       	jmp    10003202 <ssfn_bbox+0xa8>
1000328a:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
10003291:	74 23                	je     100032b6 <ssfn_bbox+0x15c>
10003293:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003296:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
1000329a:	75 1a                	jne    100032b6 <ssfn_bbox+0x15c>
1000329c:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032a2:	b9 04 00 00 00       	mov    ecx,0x4
100032a7:	99                   	cdq    
100032a8:	f7 f9                	idiv   ecx
100032aa:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
100032af:	29 f8                	sub    eax,edi
100032b1:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
100032b6:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100032bc:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100032c0:	74 29                	je     100032eb <ssfn_bbox+0x191>
100032c2:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100032c7:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100032cb:	89 01                	mov    DWORD PTR [ecx],eax
100032cd:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032d1:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032d7:	89 01                	mov    DWORD PTR [ecx],eax
100032d9:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032dd:	89 38                	mov    DWORD PTR [eax],edi
100032df:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032e3:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032e7:	89 38                	mov    DWORD PTR [eax],edi
100032e9:	eb 31                	jmp    1000331c <ssfn_bbox+0x1c2>
100032eb:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100032f0:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100032f4:	89 07                	mov    DWORD PTR [edi],eax
100032f6:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
100032fb:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
100032ff:	89 07                	mov    DWORD PTR [edi],eax
10003301:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003305:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000330b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000330f:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003315:	eb 05                	jmp    1000331c <ssfn_bbox+0x1c2>
10003317:	be fc ff ff ff       	mov    esi,0xfffffffc
1000331c:	83 c4 3c             	add    esp,0x3c
1000331f:	89 f0                	mov    eax,esi
10003321:	5b                   	pop    ebx
10003322:	5e                   	pop    esi
10003323:	5f                   	pop    edi
10003324:	5d                   	pop    ebp
10003325:	c3                   	ret    

10003326 <ssfn_text>:
10003326:	55                   	push   ebp
10003327:	57                   	push   edi
10003328:	56                   	push   esi
10003329:	53                   	push   ebx
1000332a:	83 ec 1c             	sub    esp,0x1c
1000332d:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10003331:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003335:	85 f6                	test   esi,esi
10003337:	0f 84 b2 00 00 00    	je     100033ef <ssfn_text+0xc9>
1000333d:	85 ed                	test   ebp,ebp
1000333f:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003344:	0f 84 a5 00 00 00    	je     100033ef <ssfn_text+0xc9>
1000334a:	83 ec 0c             	sub    esp,0xc
1000334d:	6a 18                	push   0x18
1000334f:	e8 fc ff ff ff       	call   10003350 <ssfn_text+0x2a>	10003350: R_386_PC32	malloc
10003354:	83 c4 10             	add    esp,0x10
10003357:	89 c3                	mov    ebx,eax
10003359:	85 c0                	test   eax,eax
1000335b:	0f 84 8e 00 00 00    	je     100033ef <ssfn_text+0xc9>
10003361:	31 c0                	xor    eax,eax
10003363:	b9 06 00 00 00       	mov    ecx,0x6
10003368:	89 df                	mov    edi,ebx
1000336a:	80 3e 00             	cmp    BYTE PTR [esi],0x0
1000336d:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000336f:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10003373:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003376:	74 79                	je     100033f1 <ssfn_text+0xcb>
10003378:	8d 43 0c             	lea    eax,[ebx+0xc]
1000337b:	52                   	push   edx
1000337c:	52                   	push   edx
1000337d:	50                   	push   eax
1000337e:	8d 43 0a             	lea    eax,[ebx+0xa]
10003381:	50                   	push   eax
10003382:	8d 43 06             	lea    eax,[ebx+0x6]
10003385:	50                   	push   eax
10003386:	8d 43 04             	lea    eax,[ebx+0x4]
10003389:	50                   	push   eax
1000338a:	56                   	push   esi
1000338b:	55                   	push   ebp
1000338c:	e8 fc ff ff ff       	call   1000338d <ssfn_text+0x67>	1000338d: R_386_PC32	ssfn_bbox
10003391:	83 c4 20             	add    esp,0x20
10003394:	85 c0                	test   eax,eax
10003396:	75 59                	jne    100033f1 <ssfn_text+0xcb>
10003398:	83 ec 0c             	sub    esp,0xc
1000339b:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
1000339f:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033a3:	0f af c8             	imul   ecx,eax
100033a6:	c1 e1 02             	shl    ecx,0x2
100033a9:	51                   	push   ecx
100033aa:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100033ae:	e8 fc ff ff ff       	call   100033af <ssfn_text+0x89>	100033af: R_386_PC32	malloc
100033b3:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033b7:	89 c7                	mov    edi,eax
100033b9:	89 03                	mov    DWORD PTR [ebx],eax
100033bb:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
100033bf:	83 c4 10             	add    esp,0x10
100033c2:	f3 aa                	rep stos BYTE PTR es:[edi],al
100033c4:	50                   	push   eax
100033c5:	56                   	push   esi
100033c6:	53                   	push   ebx
100033c7:	55                   	push   ebp
100033c8:	e8 fc ff ff ff       	call   100033c9 <ssfn_text+0xa3>	100033c9: R_386_PC32	ssfn_render
100033cd:	83 c4 10             	add    esp,0x10
100033d0:	85 c0                	test   eax,eax
100033d2:	7e 04                	jle    100033d8 <ssfn_text+0xb2>
100033d4:	01 c6                	add    esi,eax
100033d6:	eb ec                	jmp    100033c4 <ssfn_text+0x9e>
100033d8:	74 17                	je     100033f1 <ssfn_text+0xcb>
100033da:	83 ec 0c             	sub    esp,0xc
100033dd:	ff 33                	push   DWORD PTR [ebx]
100033df:	e8 fc ff ff ff       	call   100033e0 <ssfn_text+0xba>	100033e0: R_386_PC32	free
100033e4:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033e7:	e8 fc ff ff ff       	call   100033e8 <ssfn_text+0xc2>	100033e8: R_386_PC32	free
100033ec:	83 c4 10             	add    esp,0x10
100033ef:	31 db                	xor    ebx,ebx
100033f1:	83 c4 1c             	add    esp,0x1c
100033f4:	89 d8                	mov    eax,ebx
100033f6:	5b                   	pop    ebx
100033f7:	5e                   	pop    esi
100033f8:	5f                   	pop    edi
100033f9:	5d                   	pop    ebp
100033fa:	c3                   	ret    
100033fb:	90                   	nop

100033fc <NIContext::drvPutpixel4(int, int, unsigned int)>:
100033fc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003400:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003406:	8b 10                	mov    edx,DWORD PTR [eax]
10003408:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000340c:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
1000340f:	90                   	nop

10003410 <NIContext::drvDarken4(int, int, int)>:
10003410:	55                   	push   ebp
10003411:	57                   	push   edi
10003412:	56                   	push   esi
10003413:	53                   	push   ebx
10003414:	83 ec 20             	sub    esp,0x20
10003417:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000341b:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000341f:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10003423:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10003427:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
1000342d:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10003431:	8b 10                	mov    edx,DWORD PTR [eax]
10003433:	56                   	push   esi
10003434:	53                   	push   ebx
10003435:	50                   	push   eax
10003436:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003439:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000343d:	89 c2                	mov    edx,eax
1000343f:	0f b6 ec             	movzx  ebp,ah
10003442:	c1 ea 10             	shr    edx,0x10
10003445:	0f af e9             	imul   ebp,ecx
10003448:	0f b6 d2             	movzx  edx,dl
1000344b:	0f b6 c0             	movzx  eax,al
1000344e:	0f af d1             	imul   edx,ecx
10003451:	0f af c1             	imul   eax,ecx
10003454:	c1 ea 07             	shr    edx,0x7
10003457:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
1000345d:	c1 e8 07             	shr    eax,0x7
10003460:	8b 39                	mov    edi,DWORD PTR [ecx]
10003462:	c1 e2 10             	shl    edx,0x10
10003465:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003469:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
1000346d:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10003471:	c1 ed 07             	shr    ebp,0x7
10003474:	c1 e5 08             	shl    ebp,0x8
10003477:	09 ea                	or     edx,ebp
10003479:	09 c2                	or     edx,eax
1000347b:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000347f:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
10003482:	83 c4 2c             	add    esp,0x2c
10003485:	5b                   	pop    ebx
10003486:	5e                   	pop    esi
10003487:	5f                   	pop    edi
10003488:	5d                   	pop    ebp
10003489:	ff e0                	jmp    eax
1000348b:	90                   	nop

1000348c <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
1000348c:	55                   	push   ebp
1000348d:	b9 00 40 00 00       	mov    ecx,0x4000
10003492:	57                   	push   edi
10003493:	b0 ff                	mov    al,0xff
10003495:	56                   	push   esi
10003496:	53                   	push   ebx
10003497:	83 ec 3c             	sub    esp,0x3c
1000349a:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
1000349e:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034a2:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
100034a5:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100034a9:	f3 aa                	rep stos BYTE PTR es:[edi],al
100034ab:	85 db                	test   ebx,ebx
100034ad:	75 10                	jne    100034bf <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
100034af:	83 ec 0c             	sub    esp,0xc
100034b2:	68 4c 47 00 10       	push   0x1000474c	100034b3: R_386_32	.text
100034b7:	e8 fc ff ff ff       	call   100034b8 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	100034b8: R_386_PC32	KePanic(char const*)
100034bc:	83 c4 10             	add    esp,0x10
100034bf:	50                   	push   eax
100034c0:	50                   	push   eax
100034c1:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034c5:	50                   	push   eax
100034c6:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034ca:	50                   	push   eax
100034cb:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034cf:	50                   	push   eax
100034d0:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d4:	50                   	push   eax
100034d5:	56                   	push   esi
100034d6:	68 00 00 00 00       	push   0x0	100034d7: R_386_32	ssfn_ctx
100034db:	e8 fc ff ff ff       	call   100034dc <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034dc: R_386_PC32	ssfn_bbox
100034e0:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034e3:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034eb:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100034ef:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
100034f7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100034fb:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
10003500:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003504:	0d 00 00 00 ff       	or     eax,0xff000000
10003509:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
1000350d:	83 c4 1c             	add    esp,0x1c
10003510:	56                   	push   esi
10003511:	8d 44 24 20          	lea    eax,[esp+0x20]
10003515:	50                   	push   eax
10003516:	68 00 00 00 00       	push   0x0	10003517: R_386_32	ssfn_ctx
1000351b:	e8 fc ff ff ff       	call   1000351c <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	1000351c: R_386_PC32	ssfn_render
10003520:	83 c4 10             	add    esp,0x10
10003523:	89 03                	mov    DWORD PTR [ebx],eax
10003525:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003529:	31 db                	xor    ebx,ebx
1000352b:	89 f0                	mov    eax,esi
1000352d:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
10003531:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003535:	7e 3f                	jle    10003576 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003537:	31 ff                	xor    edi,edi
10003539:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000353e:	39 f8                	cmp    eax,edi
10003540:	7e 2c                	jle    1000356e <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
10003542:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003545:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003548:	83 f8 ff             	cmp    eax,0xffffffff
1000354b:	74 1d                	je     1000356a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
1000354d:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
10003553:	25 ff ff ff 00       	and    eax,0xffffff
10003558:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000355a:	50                   	push   eax
1000355b:	56                   	push   esi
1000355c:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003560:	01 f8                	add    eax,edi
10003562:	50                   	push   eax
10003563:	52                   	push   edx
10003564:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003567:	83 c4 10             	add    esp,0x10
1000356a:	43                   	inc    ebx
1000356b:	47                   	inc    edi
1000356c:	eb cb                	jmp    10003539 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
1000356e:	29 c3                	sub    ebx,eax
10003570:	46                   	inc    esi
10003571:	83 c3 40             	add    ebx,0x40
10003574:	eb b5                	jmp    1000352b <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
10003576:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000357b:	83 c4 3c             	add    esp,0x3c
1000357e:	5b                   	pop    ebx
1000357f:	5e                   	pop    esi
10003580:	5f                   	pop    edi
10003581:	5d                   	pop    ebp
10003582:	c3                   	ret    
10003583:	90                   	nop

10003584 <NIContext::~NIContext()>:
10003584:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003588: R_386_32	ssfn_ctx
1000358c:	e9 00 db ff ff       	jmp    10001091 <ssfn_free>
10003591:	90                   	nop

10003592 <NIContext::NIContext(Video*, int, int, int, int)>:
10003592:	55                   	push   ebp
10003593:	ba 00 00 00 00       	mov    edx,0x0	10003594: R_386_32	ssfn_ctx
10003598:	57                   	push   edi
10003599:	b9 72 3d 00 00       	mov    ecx,0x3d72
1000359e:	56                   	push   esi
1000359f:	89 d7                	mov    edi,edx
100035a1:	53                   	push   ebx
100035a2:	81 ec 48 02 00 00    	sub    esp,0x248
100035a8:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
100035af:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
100035b6:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
100035bc:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
100035c3:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
100035c9:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035d0:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035d6:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035dd:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035e3:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035ea:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100035f0:	31 c0                	xor    eax,eax
100035f2:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100035f4:	68 00 40 00 00       	push   0x4000
100035f9:	e8 fc ff ff ff       	call   100035fa <NIContext::NIContext(Video*, int, int, int, int)+0x68>	100035fa: R_386_PC32	malloc
100035fe:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003608:	89 03                	mov    DWORD PTR [ebx],eax
1000360a:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
10003611:	e8 fc ff ff ff       	call   10003612 <NIContext::NIContext(Video*, int, int, int, int)+0x80>	10003612: R_386_PC32	malloc
10003616:	83 c4 0c             	add    esp,0xc
10003619:	89 c6                	mov    esi,eax
1000361b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000361d: R_386_32	kernelProcess
10003621:	68 65 47 00 10       	push   0x10004765	10003622: R_386_32	.text
10003626:	50                   	push   eax
10003627:	e8 fc ff ff ff       	call   10003628 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003628: R_386_PC32	Directory::Directory(char const*, Process*)
1000362c:	83 c4 10             	add    esp,0x10
1000362f:	85 f6                	test   esi,esi
10003631:	75 10                	jne    10003643 <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
10003633:	83 ec 0c             	sub    esp,0xc
10003636:	68 79 47 00 10       	push   0x10004779	10003637: R_386_32	.text
1000363b:	e8 fc ff ff ff       	call   1000363c <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	1000363c: R_386_PC32	KePanic(char const*)
10003640:	83 c4 10             	add    esp,0x10
10003643:	83 ec 0c             	sub    esp,0xc
10003646:	56                   	push   esi
10003647:	e8 fc ff ff ff       	call   10003648 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003648: R_386_PC32	Directory::open()
1000364c:	83 c4 10             	add    esp,0x10
1000364f:	85 c0                	test   eax,eax
10003651:	75 e0                	jne    10003633 <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
10003653:	83 ec 0c             	sub    esp,0xc
10003656:	8b 06                	mov    eax,DWORD PTR [esi]
10003658:	8d 4c 24 20          	lea    ecx,[esp+0x20]
1000365c:	51                   	push   ecx
1000365d:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003664:	52                   	push   edx
10003665:	6a 00                	push   0x0
10003667:	68 10 01 00 00       	push   0x110
1000366c:	56                   	push   esi
1000366d:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003670:	83 c4 20             	add    esp,0x20
10003673:	85 c0                	test   eax,eax
10003675:	0f 85 a0 01 00 00    	jne    1000381b <NIContext::NIContext(Video*, int, int, int, int)+0x289>
1000367b:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
10003683:	0f 85 92 01 00 00    	jne    1000381b <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003689:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
10003690:	83 c9 ff             	or     ecx,0xffffffff
10003693:	83 ec 0c             	sub    esp,0xc
10003696:	89 ef                	mov    edi,ebp
10003698:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000369a:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036a0:	89 ca                	mov    edx,ecx
100036a2:	f7 d2                	not    edx
100036a4:	52                   	push   edx
100036a5:	e8 fc ff ff ff       	call   100036a6 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	100036a6: R_386_PC32	malloc
100036aa:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
100036ae:	47                   	inc    edi
100036af:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
100036b5:	5a                   	pop    edx
100036b6:	59                   	pop    ecx
100036b7:	55                   	push   ebp
100036b8:	50                   	push   eax
100036b9:	e8 fc ff ff ff       	call   100036ba <NIContext::NIContext(Video*, int, int, int, int)+0x128>	100036ba: R_386_PC32	strcpy
100036be:	5f                   	pop    edi
100036bf:	58                   	pop    eax
100036c0:	68 94 47 00 10       	push   0x10004794	100036c1: R_386_32	.text
100036c5:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
100036c9:	57                   	push   edi
100036ca:	e8 fc ff ff ff       	call   100036cb <NIContext::NIContext(Video*, int, int, int, int)+0x139>	100036cb: R_386_PC32	strcpy
100036cf:	58                   	pop    eax
100036d0:	5a                   	pop    edx
100036d1:	55                   	push   ebp
100036d2:	57                   	push   edi
100036d3:	e8 fc ff ff ff       	call   100036d4 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036d4: R_386_PC32	strcat
100036d8:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036df:	e8 fc ff ff ff       	call   100036e0 <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036e0: R_386_PC32	malloc
100036e4:	83 c4 0c             	add    esp,0xc
100036e7:	89 c5                	mov    ebp,eax
100036e9:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036eb: R_386_32	kernelProcess
100036ef:	57                   	push   edi
100036f0:	50                   	push   eax
100036f1:	e8 fc ff ff ff       	call   100036f2 <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100036f2: R_386_PC32	File::File(char const*, Process*)
100036f6:	83 c4 10             	add    esp,0x10
100036f9:	85 ed                	test   ebp,ebp
100036fb:	0f 84 52 ff ff ff    	je     10003653 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003701:	50                   	push   eax
10003702:	50                   	push   eax
10003703:	6a 01                	push   0x1
10003705:	55                   	push   ebp
10003706:	e8 fc ff ff ff       	call   10003707 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	10003707: R_386_PC32	File::open(FileOpenMode)
1000370b:	83 c4 10             	add    esp,0x10
1000370e:	85 c0                	test   eax,eax
10003710:	74 0c                	je     1000371e <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
10003712:	83 ec 0c             	sub    esp,0xc
10003715:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003718:	55                   	push   ebp
10003719:	e9 b4 00 00 00       	jmp    100037d2 <NIContext::NIContext(Video*, int, int, int, int)+0x240>
1000371e:	50                   	push   eax
1000371f:	8d 44 24 17          	lea    eax,[esp+0x17]
10003723:	50                   	push   eax
10003724:	8d 44 24 20          	lea    eax,[esp+0x20]
10003728:	50                   	push   eax
10003729:	55                   	push   ebp
1000372a:	e8 fc ff ff ff       	call   1000372b <NIContext::NIContext(Video*, int, int, int, int)+0x199>	1000372b: R_386_PC32	File::stat(unsigned long long*, bool*)
1000372f:	83 c4 10             	add    esp,0x10
10003732:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003737:	74 0e                	je     10003747 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003739:	83 ec 0c             	sub    esp,0xc
1000373c:	55                   	push   ebp
1000373d:	e8 fc ff ff ff       	call   1000373e <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000373e: R_386_PC32	File::close()
10003742:	e9 85 00 00 00       	jmp    100037cc <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
10003747:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000374b:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000374f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003753:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003757:	83 ec 0c             	sub    esp,0xc
1000375a:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000375e:	e8 fc ff ff ff       	call   1000375f <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	1000375f: R_386_PC32	malloc
10003763:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003767:	58                   	pop    eax
10003768:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000376b:	8d 54 24 20          	lea    edx,[esp+0x20]
1000376f:	52                   	push   edx
10003770:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003774:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003778:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000377c:	55                   	push   ebp
1000377d:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003780:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003784:	83 c4 1c             	add    esp,0x1c
10003787:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000378b:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000378f:	68 a9 47 00 10       	push   0x100047a9	10003790: R_386_32	.text
10003794:	e8 fc ff ff ff       	call   10003795 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	10003795: R_386_PC32	Dbg::kprintf(char const*, ...)
10003799:	83 c4 10             	add    esp,0x10
1000379c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037a0:	85 c0                	test   eax,eax
100037a2:	75 15                	jne    100037b9 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037a4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100037a8:	89 c1                	mov    ecx,eax
100037aa:	c1 f9 1f             	sar    ecx,0x1f
100037ad:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
100037b1:	75 06                	jne    100037b9 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037b3:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100037b7:	74 24                	je     100037dd <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
100037b9:	83 ec 0c             	sub    esp,0xc
100037bc:	55                   	push   ebp
100037bd:	e8 fc ff ff ff       	call   100037be <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	100037be: R_386_PC32	File::close()
100037c2:	58                   	pop    eax
100037c3:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100037c7:	e8 fc ff ff ff       	call   100037c8 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	100037c8: R_386_PC32	free
100037cc:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037cf:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037d2:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037d5:	83 c4 10             	add    esp,0x10
100037d8:	e9 76 fe ff ff       	jmp    10003653 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037dd:	50                   	push   eax
100037de:	50                   	push   eax
100037df:	57                   	push   edi
100037e0:	68 bd 47 00 10       	push   0x100047bd	100037e1: R_386_32	.text
100037e5:	e8 fc ff ff ff       	call   100037e6 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037e6: R_386_PC32	Dbg::kprintf(char const*, ...)
100037ea:	5a                   	pop    edx
100037eb:	59                   	pop    ecx
100037ec:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100037f0:	68 00 00 00 00       	push   0x0	100037f1: R_386_32	ssfn_ctx
100037f5:	e8 fc ff ff ff       	call   100037f6 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	100037f6: R_386_PC32	ssfn_load
100037fa:	5b                   	pop    ebx
100037fb:	5f                   	pop    edi
100037fc:	50                   	push   eax
100037fd:	68 ce 47 00 10       	push   0x100047ce	100037fe: R_386_32	.text
10003802:	e8 fc ff ff ff       	call   10003803 <NIContext::NIContext(Video*, int, int, int, int)+0x271>	10003803: R_386_PC32	Dbg::kprintf(char const*, ...)
10003807:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000380a:	e8 fc ff ff ff       	call   1000380b <NIContext::NIContext(Video*, int, int, int, int)+0x279>	1000380b: R_386_PC32	File::close()
1000380f:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003812:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003815:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003818:	83 c4 10             	add    esp,0x10
1000381b:	83 ec 0c             	sub    esp,0xc
1000381e:	56                   	push   esi
1000381f:	e8 fc ff ff ff       	call   10003820 <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	10003820: R_386_PC32	Directory::close()
10003824:	8b 06                	mov    eax,DWORD PTR [esi]
10003826:	89 34 24             	mov    DWORD PTR [esp],esi
10003829:	ff 50 08             	call   DWORD PTR [eax+0x8]
1000382c:	b8 00 00 00 00       	mov    eax,0x0	1000382d: R_386_32	ssfn_ctx
10003831:	e8 f7 cb ff ff       	call   1000042d <_ssfn_fc.part.1>
10003836:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003838: R_386_32	ssfn_ctx
10003840:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10003842: R_386_32	ssfn_ctx
1000384a:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	1000384c: R_386_32	ssfn_ctx
10003854:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	10003856: R_386_32	ssfn_ctx
1000385e:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	10003860: R_386_32	ssfn_ctx
10003868:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	1000386a: R_386_32	ssfn_ctx
10003872:	81 c4 4c 02 00 00    	add    esp,0x24c
10003878:	5b                   	pop    ebx
10003879:	5e                   	pop    esi
1000387a:	5f                   	pop    edi
1000387b:	5d                   	pop    ebp
1000387c:	c3                   	ret    
1000387d:	90                   	nop

1000387e <NIDesktop::NIDesktop(NIContext*)>:
1000387e:	53                   	push   ebx
1000387f:	83 ec 14             	sub    esp,0x14
10003882:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10003886:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000388a:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
10003891:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10003894:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
1000389b:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038a2:	6a 08                	push   0x8
100038a4:	e8 fc ff ff ff       	call   100038a5 <NIDesktop::NIDesktop(NIContext*)+0x27>	100038a5: R_386_PC32	malloc
100038a9:	89 03                	mov    DWORD PTR [ebx],eax
100038ab:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100038b2:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100038b8:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	100038ba: R_386_32	mouseDesktop
100038be:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100038c0: R_386_32	guiMouseHandler
	100038c4: R_386_32	clipdrawHandleMouse(int, int, int, int)
100038c8:	83 c4 18             	add    esp,0x18
100038cb:	5b                   	pop    ebx
100038cc:	c3                   	ret    
100038cd:	90                   	nop

100038ce <NIDesktop::getTopmostWindowAtPixel(int, int)>:
100038ce:	57                   	push   edi
100038cf:	56                   	push   esi
100038d0:	53                   	push   ebx
100038d1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100038d5:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100038d9:	8b 00                	mov    eax,DWORD PTR [eax]
100038db:	8b 00                	mov    eax,DWORD PTR [eax]
100038dd:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
100038e0:	85 db                	test   ebx,ebx
100038e2:	74 43                	je     10003927 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
100038e4:	8b 00                	mov    eax,DWORD PTR [eax]
100038e6:	85 c0                	test   eax,eax
100038e8:	74 3f                	je     10003929 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100038ea:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100038ed:	39 ca                	cmp    edx,ecx
100038ef:	7e 04                	jle    100038f5 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
100038f1:	89 d8                	mov    eax,ebx
100038f3:	eb e8                	jmp    100038dd <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
100038f5:	8b 70 20             	mov    esi,DWORD PTR [eax+0x20]
100038f8:	01 d6                	add    esi,edx
100038fa:	39 ce                	cmp    esi,ecx
100038fc:	7e f3                	jle    100038f1 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100038fe:	89 ce                	mov    esi,ecx
10003900:	29 d6                	sub    esi,edx
10003902:	8b 50 10             	mov    edx,DWORD PTR [eax+0x10]
10003905:	8d 34 f2             	lea    esi,[edx+esi*8]
10003908:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
1000390b:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000390e:	01 d7                	add    edi,edx
10003910:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
10003914:	7f db                	jg     100038f1 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003916:	03 50 1c             	add    edx,DWORD PTR [eax+0x1c]
10003919:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
1000391d:	29 f2                	sub    edx,esi
1000391f:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10003923:	7e cc                	jle    100038f1 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003925:	eb 02                	jmp    10003929 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003927:	31 c0                	xor    eax,eax
10003929:	5b                   	pop    ebx
1000392a:	5e                   	pop    esi
1000392b:	5f                   	pop    edi
1000392c:	c3                   	ret    
1000392d:	90                   	nop

1000392e <NIDesktop::renderScanline(int, int, int)>:
1000392e:	55                   	push   ebp
1000392f:	57                   	push   edi
10003930:	56                   	push   esi
10003931:	53                   	push   ebx
10003932:	83 ec 2c             	sub    esp,0x2c
10003935:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003939:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
1000393d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003941:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003945:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10003949:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000394b: R_386_32	render
1000394f:	31 c0                	xor    eax,eax
10003951:	89 d7                	mov    edi,edx
10003953:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003955:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003959:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000395d:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000395f: R_386_32	shadow
10003963:	b0 80                	mov    al,0x80
10003965:	89 d7                	mov    edi,edx
10003967:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003969:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000396d:	8b 00                	mov    eax,DWORD PTR [eax]
1000396f:	8b 00                	mov    eax,DWORD PTR [eax]
10003971:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003975:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003977: R_386_32	movingWin
1000397b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000397f:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003982:	85 c0                	test   eax,eax
10003984:	75 09                	jne    1000398f <NIDesktop::renderScanline(int, int, int)+0x61>
10003986:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000398a:	e9 c7 02 00 00       	jmp    10003c56 <NIDesktop::renderScanline(int, int, int)+0x328>
1000398f:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10003993:	8b 1e                	mov    ebx,DWORD PTR [esi]
10003995:	85 db                	test   ebx,ebx
10003997:	74 ed                	je     10003986 <NIDesktop::renderScanline(int, int, int)+0x58>
10003999:	39 da                	cmp    edx,ebx
1000399b:	75 06                	jne    100039a3 <NIDesktop::renderScanline(int, int, int)+0x75>
1000399d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100039a1:	eb d8                	jmp    1000397b <NIDesktop::renderScanline(int, int, int)+0x4d>
100039a3:	83 ec 0c             	sub    esp,0xc
100039a6:	53                   	push   ebx
100039a7:	e8 fc ff ff ff       	call   100039a8 <NIDesktop::renderScanline(int, int, int)+0x7a>	100039a8: R_386_PC32	NIWindow::request()
100039ac:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100039af:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
100039b2:	83 c4 10             	add    esp,0x10
100039b5:	01 c2                	add    edx,eax
100039b7:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
100039bb:	0f 8e ad 00 00 00    	jle    10003a6e <NIDesktop::renderScanline(int, int, int)+0x140>
100039c1:	80 7b 24 00          	cmp    BYTE PTR [ebx+0x24],0x0
100039c5:	0f 85 a3 00 00 00    	jne    10003a6e <NIDesktop::renderScanline(int, int, int)+0x140>
100039cb:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100039cf:	8b 53 14             	mov    edx,DWORD PTR [ebx+0x14]
100039d2:	83 c0 06             	add    eax,0x6
100039d5:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100039d9:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100039dc:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100039df:	01 c8                	add    eax,ecx
100039e1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100039e5:	39 d0                	cmp    eax,edx
100039e7:	0f 8e 40 01 00 00    	jle    10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
100039ed:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
100039f1:	7c 75                	jl     10003a68 <NIDesktop::renderScanline(int, int, int)+0x13a>
100039f3:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
100039f7:	0f 8f 30 01 00 00    	jg     10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
100039fd:	8b 73 18             	mov    esi,DWORD PTR [ebx+0x18]
10003a00:	89 d5                	mov    ebp,edx
10003a02:	6b fe f8             	imul   edi,esi,0xfffffff8
10003a05:	29 cd                	sub    ebp,ecx
10003a07:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a0b:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003a0f:	39 f0                	cmp    eax,esi
10003a11:	7c 1d                	jl     10003a30 <NIDesktop::renderScanline(int, int, int)+0x102>
10003a13:	8d 0c c7             	lea    ecx,[edi+eax*8]
10003a16:	03 4b 10             	add    ecx,DWORD PTR [ebx+0x10]
10003a19:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003a1c:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003a20:	7f 0e                	jg     10003a30 <NIDesktop::renderScanline(int, int, int)+0x102>
10003a22:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003a26:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
10003a2a:	29 cd                	sub    ebp,ecx
10003a2c:	39 d5                	cmp    ebp,edx
10003a2e:	7d 07                	jge    10003a37 <NIDesktop::renderScanline(int, int, int)+0x109>
10003a30:	40                   	inc    eax
10003a31:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003a35:	75 d8                	jne    10003a0f <NIDesktop::renderScanline(int, int, int)+0xe1>
10003a37:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003a3b:	48                   	dec    eax
10003a3c:	83 f8 03             	cmp    eax,0x3
10003a3f:	77 27                	ja     10003a68 <NIDesktop::renderScanline(int, int, int)+0x13a>
10003a41:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003a43: R_386_32	render
10003a48:	75 1e                	jne    10003a68 <NIDesktop::renderScanline(int, int, int)+0x13a>
10003a4a:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a51:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a54: R_386_32	shadow
10003a58:	0f af c1             	imul   eax,ecx
10003a5b:	d1 f9                	sar    ecx,1
10003a5d:	c1 f8 08             	sar    eax,0x8
10003a60:	01 c1                	add    ecx,eax
10003a62:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003a64: R_386_32	shadow
10003a68:	42                   	inc    edx
10003a69:	e9 6b ff ff ff       	jmp    100039d9 <NIDesktop::renderScanline(int, int, int)+0xab>
10003a6e:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003a72:	0f 8d b5 00 00 00    	jge    10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003a78:	80 7b 24 00          	cmp    BYTE PTR [ebx+0x24],0x0
10003a7c:	0f 85 ab 00 00 00    	jne    10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003a82:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003a86:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003a89:	8d 77 fa             	lea    esi,[edi-0x6]
10003a8c:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003a90:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10003a93:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003a96:	01 cf                	add    edi,ecx
10003a98:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10003a9c:	39 c7                	cmp    edi,eax
10003a9e:	0f 8e 89 00 00 00    	jle    10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003aa4:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003aa8:	7c 7d                	jl     10003b27 <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003aaa:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003aae:	7f 7d                	jg     10003b2d <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003ab0:	89 c6                	mov    esi,eax
10003ab2:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003ab6:	29 ce                	sub    esi,ecx
10003ab8:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10003abc:	4a                   	dec    edx
10003abd:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003ac1:	29 d1                	sub    ecx,edx
10003ac3:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003ac7:	74 32                	je     10003afb <NIDesktop::renderScanline(int, int, int)+0x1cd>
10003ac9:	8b 7b 18             	mov    edi,DWORD PTR [ebx+0x18]
10003acc:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003acf:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003ad2:	39 d5                	cmp    ebp,edx
10003ad4:	7e e6                	jle    10003abc <NIDesktop::renderScanline(int, int, int)+0x18e>
10003ad6:	89 d5                	mov    ebp,edx
10003ad8:	29 fd                	sub    ebp,edi
10003ada:	39 ee                	cmp    esi,ebp
10003adc:	7e 1d                	jle    10003afb <NIDesktop::renderScanline(int, int, int)+0x1cd>
10003ade:	8b 73 10             	mov    esi,DWORD PTR [ebx+0x10]
10003ae1:	8d 34 ee             	lea    esi,[esi+ebp*8]
10003ae4:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003ae7:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003aeb:	7f cf                	jg     10003abc <NIDesktop::renderScanline(int, int, int)+0x18e>
10003aed:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003af1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10003af5:	29 f7                	sub    edi,esi
10003af7:	39 c7                	cmp    edi,eax
10003af9:	7c c1                	jl     10003abc <NIDesktop::renderScanline(int, int, int)+0x18e>
10003afb:	83 f9 04             	cmp    ecx,0x4
10003afe:	77 27                	ja     10003b27 <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003b00:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b02: R_386_32	render
10003b07:	75 1e                	jne    10003b27 <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003b09:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003b10:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003b13: R_386_32	shadow
10003b17:	0f af d1             	imul   edx,ecx
10003b1a:	d1 f9                	sar    ecx,1
10003b1c:	c1 fa 08             	sar    edx,0x8
10003b1f:	01 d1                	add    ecx,edx
10003b21:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003b23: R_386_32	shadow
10003b27:	40                   	inc    eax
10003b28:	e9 63 ff ff ff       	jmp    10003a90 <NIDesktop::renderScanline(int, int, int)+0x162>
10003b2d:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003b30:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b34:	0f 8f fc 00 00 00    	jg     10003c36 <NIDesktop::renderScanline(int, int, int)+0x308>
10003b3a:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003b3d:	01 c2                	add    edx,eax
10003b3f:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003b43:	0f 8e ed 00 00 00    	jle    10003c36 <NIDesktop::renderScanline(int, int, int)+0x308>
10003b49:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b4d:	29 c2                	sub    edx,eax
10003b4f:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003b52:	80 7b 24 00          	cmp    BYTE PTR [ebx+0x24],0x0
10003b56:	8d 14 d0             	lea    edx,[eax+edx*8]
10003b59:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003b5c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003b60:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003b64:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003b68:	74 09                	je     10003b73 <NIDesktop::renderScanline(int, int, int)+0x245>
10003b6a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003b6e:	03 43 14             	add    eax,DWORD PTR [ebx+0x14]
10003b71:	eb 78                	jmp    10003beb <NIDesktop::renderScanline(int, int, int)+0x2bd>
10003b73:	31 c9                	xor    ecx,ecx
10003b75:	8b 53 14             	mov    edx,DWORD PTR [ebx+0x14]
10003b78:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003b7c:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003b80:	03 53 1c             	add    edx,DWORD PTR [ebx+0x1c]
10003b83:	01 cd                	add    ebp,ecx
10003b85:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003b89:	01 ca                	add    edx,ecx
10003b8b:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003b8d: R_386_32	render
10003b92:	75 1f                	jne    10003bb3 <NIDesktop::renderScanline(int, int, int)+0x285>
10003b94:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003b97: R_386_32	shadow
10003b9b:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003b9e:	83 c7 7d             	add    edi,0x7d
10003ba1:	0f af f7             	imul   esi,edi
10003ba4:	d1 ff                	sar    edi,1
10003ba6:	c1 fe 08             	sar    esi,0x8
10003ba9:	01 f7                	add    edi,esi
10003bab:	89 f8                	mov    eax,edi
10003bad:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003baf: R_386_32	shadow
10003bb3:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003bb5: R_386_32	render
10003bba:	75 20                	jne    10003bdc <NIDesktop::renderScanline(int, int, int)+0x2ae>
10003bbc:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003bc3:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003bc6: R_386_32	shadow
10003bca:	0f af f7             	imul   esi,edi
10003bcd:	d1 ff                	sar    edi,1
10003bcf:	c1 fe 08             	sar    esi,0x8
10003bd2:	01 f7                	add    edi,esi
10003bd4:	89 f8                	mov    eax,edi
10003bd6:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003bd8: R_386_32	shadow
10003bdc:	41                   	inc    ecx
10003bdd:	83 f9 04             	cmp    ecx,0x4
10003be0:	75 93                	jne    10003b75 <NIDesktop::renderScanline(int, int, int)+0x247>
10003be2:	eb 86                	jmp    10003b6a <NIDesktop::renderScanline(int, int, int)+0x23c>
10003be4:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003be8:	7d 11                	jge    10003bfb <NIDesktop::renderScanline(int, int, int)+0x2cd>
10003bea:	40                   	inc    eax
10003beb:	8b 53 1c             	mov    edx,DWORD PTR [ebx+0x1c]
10003bee:	03 53 14             	add    edx,DWORD PTR [ebx+0x14]
10003bf1:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003bf5:	39 c2                	cmp    edx,eax
10003bf7:	7f eb                	jg     10003be4 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003bf9:	eb 3b                	jmp    10003c36 <NIDesktop::renderScanline(int, int, int)+0x308>
10003bfb:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003bff:	7f 35                	jg     10003c36 <NIDesktop::renderScanline(int, int, int)+0x308>
10003c01:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c03: R_386_32	render
10003c08:	75 e0                	jne    10003bea <NIDesktop::renderScanline(int, int, int)+0x2bc>
10003c0a:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c0c: R_386_32	render
10003c11:	8b 74 24 44          	mov    esi,DWORD PTR [esp+0x44]
10003c15:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
10003c18:	2b 73 18             	sub    esi,DWORD PTR [ebx+0x18]
10003c1b:	89 c2                	mov    edx,eax
10003c1d:	8b 4c f1 04          	mov    ecx,DWORD PTR [ecx+esi*8+0x4]
10003c21:	2b 53 14             	sub    edx,DWORD PTR [ebx+0x14]
10003c24:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003c28:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003c2b:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003c2e: R_386_32	renderData
10003c32:	75 b6                	jne    10003bea <NIDesktop::renderScanline(int, int, int)+0x2bc>
10003c34:	eb 40                	jmp    10003c76 <NIDesktop::renderScanline(int, int, int)+0x348>
10003c36:	80 7b 24 00          	cmp    BYTE PTR [ebx+0x24],0x0
10003c3a:	0f 85 46 fd ff ff    	jne    10003986 <NIDesktop::renderScanline(int, int, int)+0x58>
10003c40:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003c44:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c47:	e9 25 fd ff ff       	jmp    10003971 <NIDesktop::renderScanline(int, int, int)+0x43>
10003c4c:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c4e: R_386_32	render
10003c53:	74 09                	je     10003c5e <NIDesktop::renderScanline(int, int, int)+0x330>
10003c55:	40                   	inc    eax
10003c56:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c5a:	7c f0                	jl     10003c4c <NIDesktop::renderScanline(int, int, int)+0x31e>
10003c5c:	eb 18                	jmp    10003c76 <NIDesktop::renderScanline(int, int, int)+0x348>
10003c5e:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c60: R_386_32	render
10003c65:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003c68: R_386_32	renderData
10003c70:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003c74:	75 df                	jne    10003c55 <NIDesktop::renderScanline(int, int, int)+0x327>
10003c76:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003c7a:	8b 00                	mov    eax,DWORD PTR [eax]
10003c7c:	8b 00                	mov    eax,DWORD PTR [eax]
10003c7e:	85 c0                	test   eax,eax
10003c80:	74 5e                	je     10003ce0 <NIDesktop::renderScanline(int, int, int)+0x3b2>
10003c82:	8b 00                	mov    eax,DWORD PTR [eax]
10003c84:	85 c0                	test   eax,eax
10003c86:	74 58                	je     10003ce0 <NIDesktop::renderScanline(int, int, int)+0x3b2>
10003c88:	80 78 24 00          	cmp    BYTE PTR [eax+0x24],0x0
10003c8c:	75 52                	jne    10003ce0 <NIDesktop::renderScanline(int, int, int)+0x3b2>
10003c8e:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003c92:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003c96:	7d 48                	jge    10003ce0 <NIDesktop::renderScanline(int, int, int)+0x3b2>
10003c98:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003c9a: R_386_32	shadow
10003c9e:	3c 80                	cmp    al,0x80
10003ca0:	74 3b                	je     10003cdd <NIDesktop::renderScanline(int, int, int)+0x3af>
10003ca2:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003ca5: R_386_32	renderData
10003ca9:	0f b6 f0             	movzx  esi,al
10003cac:	89 d1                	mov    ecx,edx
10003cae:	0f b6 c6             	movzx  eax,dh
10003cb1:	c1 e9 10             	shr    ecx,0x10
10003cb4:	0f af c6             	imul   eax,esi
10003cb7:	0f b6 c9             	movzx  ecx,cl
10003cba:	0f b6 d2             	movzx  edx,dl
10003cbd:	0f af ce             	imul   ecx,esi
10003cc0:	0f af d6             	imul   edx,esi
10003cc3:	c1 e9 07             	shr    ecx,0x7
10003cc6:	c1 e8 07             	shr    eax,0x7
10003cc9:	c1 e1 10             	shl    ecx,0x10
10003ccc:	c1 e0 08             	shl    eax,0x8
10003ccf:	c1 ea 07             	shr    edx,0x7
10003cd2:	09 c1                	or     ecx,eax
10003cd4:	09 ca                	or     edx,ecx
10003cd6:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003cd9: R_386_32	renderData
10003cdd:	43                   	inc    ebx
10003cde:	eb b2                	jmp    10003c92 <NIDesktop::renderScanline(int, int, int)+0x364>
10003ce0:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003ce4:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10003ce8:	7d 2f                	jge    10003d19 <NIDesktop::renderScanline(int, int, int)+0x3eb>
10003cea:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cee:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003cf2:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003cf5:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003cfb:	8b 10                	mov    edx,DWORD PTR [eax]
10003cfd:	ff 34 9d 00 00 00 00 	push   DWORD PTR [ebx*4+0x0]	10003d00: R_386_32	renderData
10003d04:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10003d08:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10003d0c:	50                   	push   eax
10003d0d:	ff 52 24             	call   DWORD PTR [edx+0x24]
10003d10:	ff 44 24 58          	inc    DWORD PTR [esp+0x58]
10003d14:	83 c4 10             	add    esp,0x10
10003d17:	eb c7                	jmp    10003ce0 <NIDesktop::renderScanline(int, int, int)+0x3b2>
10003d19:	83 c4 2c             	add    esp,0x2c
10003d1c:	5b                   	pop    ebx
10003d1d:	5e                   	pop    esi
10003d1e:	5f                   	pop    edi
10003d1f:	5d                   	pop    ebp
10003d20:	c3                   	ret    
10003d21:	90                   	nop

10003d22 <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d22:	53                   	push   ebx
10003d23:	83 ec 08             	sub    esp,0x8
10003d26:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d2a:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d2e:	7d 18                	jge    10003d48 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d30:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d34:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d38:	53                   	push   ebx
10003d39:	43                   	inc    ebx
10003d3a:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d3e:	e8 fc ff ff ff       	call   10003d3f <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d3f: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d43:	83 c4 10             	add    esp,0x10
10003d46:	eb e2                	jmp    10003d2a <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d48:	83 c4 08             	add    esp,0x8
10003d4b:	5b                   	pop    ebx
10003d4c:	c3                   	ret    
10003d4d:	90                   	nop

10003d4e <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d4e:	55                   	push   ebp
10003d4f:	ba 05 00 00 00       	mov    edx,0x5
10003d54:	57                   	push   edi
10003d55:	56                   	push   esi
10003d56:	53                   	push   ebx
10003d57:	83 ec 0c             	sub    esp,0xc
10003d5a:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003d5e:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003d61:	83 f8 05             	cmp    eax,0x5
10003d64:	7c 02                	jl     10003d68 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003d66:	89 c2                	mov    edx,eax
10003d68:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003d6c:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003d6f:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003d72:	83 ea 05             	sub    edx,0x5
10003d75:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003d7b:	8d 70 05             	lea    esi,[eax+0x5]
10003d7e:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003d81:	39 c5                	cmp    ebp,eax
10003d83:	7f 03                	jg     10003d88 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003d85:	8d 71 ff             	lea    esi,[ecx-0x1]
10003d88:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003d8b:	89 c1                	mov    ecx,eax
10003d8d:	83 f8 05             	cmp    eax,0x5
10003d90:	7d 05                	jge    10003d97 <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003d92:	b9 05 00 00 00       	mov    ecx,0x5
10003d97:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
10003d9a:	83 e9 05             	sub    ecx,0x5
10003d9d:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003da3:	8d 58 05             	lea    ebx,[eax+0x5]
10003da6:	8d 6f fb             	lea    ebp,[edi-0x5]
10003da9:	39 c5                	cmp    ebp,eax
10003dab:	7f 03                	jg     10003db0 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003dad:	8d 5f ff             	lea    ebx,[edi-0x1]
10003db0:	83 ec 0c             	sub    esp,0xc
10003db3:	53                   	push   ebx
10003db4:	51                   	push   ecx
10003db5:	56                   	push   esi
10003db6:	52                   	push   edx
10003db7:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003dbb:	e8 fc ff ff ff       	call   10003dbc <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003dbc: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003dc0:	83 c4 2c             	add    esp,0x2c
10003dc3:	5b                   	pop    ebx
10003dc4:	5e                   	pop    esi
10003dc5:	5f                   	pop    edi
10003dc6:	5d                   	pop    ebp
10003dc7:	c3                   	ret    

10003dc8 <NIDesktop::completeRefresh()>:
10003dc8:	56                   	push   esi
10003dc9:	53                   	push   ebx
10003dca:	31 f6                	xor    esi,esi
10003dcc:	50                   	push   eax
10003dcd:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003dd1:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003dd4:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003dda:	7e 15                	jle    10003df1 <NIDesktop::completeRefresh()+0x29>
10003ddc:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003de2:	6a 00                	push   0x0
10003de4:	56                   	push   esi
10003de5:	46                   	inc    esi
10003de6:	53                   	push   ebx
10003de7:	e8 fc ff ff ff       	call   10003de8 <NIDesktop::completeRefresh()+0x20>	10003de8: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003dec:	83 c4 10             	add    esp,0x10
10003def:	eb e0                	jmp    10003dd1 <NIDesktop::completeRefresh()+0x9>
10003df1:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003df7:	83 ec 0c             	sub    esp,0xc
10003dfa:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003dfc:	6a 00                	push   0x0
10003dfe:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e01:	05 00 00 00 00       	add    eax,0x0	10003e02: R_386_32	___mouse_data
10003e06:	50                   	push   eax
10003e07:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e0a:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e0d:	52                   	push   edx
10003e0e:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e11:	83 c4 24             	add    esp,0x24
10003e14:	5b                   	pop    ebx
10003e15:	5e                   	pop    esi
10003e16:	c3                   	ret    
10003e17:	90                   	nop

10003e18 <NIDesktop::addWindow(NIWindow*)>:
10003e18:	56                   	push   esi
10003e19:	53                   	push   ebx
10003e1a:	83 ec 0c             	sub    esp,0xc
10003e1d:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e21:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e25:	56                   	push   esi
10003e26:	ff 33                	push   DWORD PTR [ebx]
10003e28:	e8 fc ff ff ff       	call   10003e29 <NIDesktop::addWindow(NIWindow*)+0x11>	10003e29: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e2d:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e31:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e35:	83 c4 14             	add    esp,0x14
10003e38:	5b                   	pop    ebx
10003e39:	5e                   	pop    esi
10003e3a:	e9 0f ff ff ff       	jmp    10003d4e <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e3f:	90                   	nop

10003e40 <NIDesktop::raiseWindow(NIWindow*)>:
10003e40:	53                   	push   ebx
10003e41:	83 ec 10             	sub    esp,0x10
10003e44:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e48:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e4c:	50                   	push   eax
10003e4d:	ff 33                	push   DWORD PTR [ebx]
10003e4f:	e8 fc ff ff ff       	call   10003e50 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e50: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e54:	58                   	pop    eax
10003e55:	5a                   	pop    edx
10003e56:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e5a:	ff 33                	push   DWORD PTR [ebx]
10003e5c:	e8 fc ff ff ff       	call   10003e5d <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003e5d: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e61:	59                   	pop    ecx
10003e62:	58                   	pop    eax
10003e63:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e67:	53                   	push   ebx
10003e68:	e8 fc ff ff ff       	call   10003e69 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003e69: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003e6d:	83 c4 18             	add    esp,0x18
10003e70:	5b                   	pop    ebx
10003e71:	c3                   	ret    

10003e72 <NIDesktop::deleteWindow(NIWindow*)>:
10003e72:	53                   	push   ebx
10003e73:	83 ec 10             	sub    esp,0x10
10003e76:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e7a:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e7e:	50                   	push   eax
10003e7f:	ff 33                	push   DWORD PTR [ebx]
10003e81:	e8 fc ff ff ff       	call   10003e82 <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003e82: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e86:	58                   	pop    eax
10003e87:	5a                   	pop    edx
10003e88:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e8c:	53                   	push   ebx
10003e8d:	e8 fc ff ff ff       	call   10003e8e <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003e8e: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003e92:	83 c4 18             	add    esp,0x18
10003e95:	5b                   	pop    ebx
10003e96:	c3                   	ret    
10003e97:	90                   	nop

10003e98 <NIDesktop::handleMouse(int, int, int, int)>:
10003e98:	55                   	push   ebp
10003e99:	57                   	push   edi
10003e9a:	56                   	push   esi
10003e9b:	53                   	push   ebx
10003e9c:	83 ec 28             	sub    esp,0x28
10003e9f:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003ea3:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003ea6:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ea9:	8d 4a 20             	lea    ecx,[edx+0x20]
10003eac:	51                   	push   ecx
10003ead:	52                   	push   edx
10003eae:	8d 50 20             	lea    edx,[eax+0x20]
10003eb1:	52                   	push   edx
10003eb2:	50                   	push   eax
10003eb3:	53                   	push   ebx
10003eb4:	e8 fc ff ff ff       	call   10003eb5 <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003eb5: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003eb9:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003ebc:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003ec0:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ec3:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10003ec7:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003ecb:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003ecf:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003ed3:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003ed6:	83 c4 20             	add    esp,0x20
10003ed9:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003edc:	85 d2                	test   edx,edx
10003ede:	79 07                	jns    10003ee7 <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003ee0:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003ee7:	85 c0                	test   eax,eax
10003ee9:	79 07                	jns    10003ef2 <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003eeb:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003ef2:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003ef5:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003efb:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003efe:	7f 04                	jg     10003f04 <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f00:	48                   	dec    eax
10003f01:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f04:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f0a:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f0d:	7f 04                	jg     10003f13 <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003f0f:	48                   	dec    eax
10003f10:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f13:	50                   	push   eax
10003f14:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f17:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f1a:	53                   	push   ebx
10003f1b:	e8 fc ff ff ff       	call   10003f1c <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003f1c: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f20:	83 c4 10             	add    esp,0x10
10003f23:	89 c6                	mov    esi,eax
10003f25:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f29:	83 e0 01             	and    eax,0x1
10003f2c:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f2e: R_386_32	movingWin
10003f33:	0f 84 89 01 00 00    	je     100040c2 <NIDesktop::handleMouse(int, int, int, int)+0x22a>
10003f39:	c6 44 24 0f 00       	mov    BYTE PTR [esp+0xf],0x0
10003f3e:	85 c0                	test   eax,eax
10003f40:	75 0c                	jne    10003f4e <NIDesktop::handleMouse(int, int, int, int)+0xb6>
10003f42:	a0 f8 7a 01 10       	mov    al,ds:0x10017af8	10003f43: R_386_32	.bss
10003f47:	83 e0 01             	and    eax,0x1
10003f4a:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10003f4e:	bf 01 00 00 00       	mov    edi,0x1
10003f53:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003f55: R_386_32	movingWin
10003f59:	8b 42 20             	mov    eax,DWORD PTR [edx+0x20]
10003f5c:	48                   	dec    eax
10003f5d:	39 f8                	cmp    eax,edi
10003f5f:	0f 8e 8b 00 00 00    	jle    10003ff0 <NIDesktop::handleMouse(int, int, int, int)+0x158>
10003f65:	bd 01 00 00 00       	mov    ebp,0x1
10003f6a:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f6b: R_386_32	movingWin
10003f6f:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10003f72:	48                   	dec    eax
10003f73:	39 e8                	cmp    eax,ebp
10003f75:	7e 73                	jle    10003fea <NIDesktop::handleMouse(int, int, int, int)+0x152>
10003f77:	8d 04 2f             	lea    eax,[edi+ebp*1]
10003f7a:	89 fa                	mov    edx,edi
10003f7c:	83 e0 1f             	and    eax,0x1f
10003f7f:	83 e2 03             	and    edx,0x3
10003f82:	09 d0                	or     eax,edx
10003f84:	75 61                	jne    10003fe7 <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10003f86:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003f8a:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003f8e:	2b 15 f4 7a 01 10    	sub    edx,DWORD PTR ds:0x10017af4	10003f90: R_386_32	.bss
10003f94:	83 ec 0c             	sub    esp,0xc
10003f97:	01 ea                	add    edx,ebp
10003f99:	2b 05 f0 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af0	10003f9b: R_386_32	.bss
10003f9f:	8d 4a 01             	lea    ecx,[edx+0x1]
10003fa2:	01 f8                	add    eax,edi
10003fa4:	51                   	push   ecx
10003fa5:	52                   	push   edx
10003fa6:	8d 50 01             	lea    edx,[eax+0x1]
10003fa9:	52                   	push   edx
10003faa:	50                   	push   eax
10003fab:	53                   	push   ebx
10003fac:	e8 fc ff ff ff       	call   10003fad <NIDesktop::handleMouse(int, int, int, int)+0x115>	10003fad: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003fb1:	83 c4 20             	add    esp,0x20
10003fb4:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
10003fb9:	75 2c                	jne    10003fe7 <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10003fbb:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003fbe:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003fc4:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003fc6:	6a 00                	push   0x0
10003fc8:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003fcb:	01 f8                	add    eax,edi
10003fcd:	2b 05 f0 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af0	10003fcf: R_386_32	.bss
10003fd3:	50                   	push   eax
10003fd4:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003fd7:	01 e8                	add    eax,ebp
10003fd9:	2b 05 f4 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af4	10003fdb: R_386_32	.bss
10003fdf:	50                   	push   eax
10003fe0:	52                   	push   edx
10003fe1:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003fe4:	83 c4 10             	add    esp,0x10
10003fe7:	45                   	inc    ebp
10003fe8:	eb 80                	jmp    10003f6a <NIDesktop::handleMouse(int, int, int, int)+0xd2>
10003fea:	47                   	inc    edi
10003feb:	e9 63 ff ff ff       	jmp    10003f53 <NIDesktop::handleMouse(int, int, int, int)+0xbb>
10003ff0:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10003ff4:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003ff8:	8b 7a 1c             	mov    edi,DWORD PTR [edx+0x1c]
10003ffb:	83 ec 0c             	sub    esp,0xc
10003ffe:	2b 0d f4 7a 01 10    	sub    ecx,DWORD PTR ds:0x10017af4	10004000: R_386_32	.bss
10004004:	2b 05 f0 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af0	10004006: R_386_32	.bss
1000400a:	01 cf                	add    edi,ecx
1000400c:	8d 50 01             	lea    edx,[eax+0x1]
1000400f:	57                   	push   edi
10004010:	51                   	push   ecx
10004011:	52                   	push   edx
10004012:	50                   	push   eax
10004013:	53                   	push   ebx
10004014:	e8 fc ff ff ff       	call   10004015 <NIDesktop::handleMouse(int, int, int, int)+0x17d>	10004015: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004019:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000401d:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10004021:	2b 05 f4 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af4	10004023: R_386_32	.bss
10004027:	83 c4 14             	add    esp,0x14
1000402a:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000402c: R_386_32	movingWin
10004030:	2b 0d f0 7a 01 10    	sub    ecx,DWORD PTR ds:0x10017af0	10004032: R_386_32	.bss
10004036:	8b 7a 1c             	mov    edi,DWORD PTR [edx+0x1c]
10004039:	03 4a 20             	add    ecx,DWORD PTR [edx+0x20]
1000403c:	01 c7                	add    edi,eax
1000403e:	57                   	push   edi
1000403f:	50                   	push   eax
10004040:	51                   	push   ecx
10004041:	49                   	dec    ecx
10004042:	51                   	push   ecx
10004043:	53                   	push   ebx
10004044:	e8 fc ff ff ff       	call   10004045 <NIDesktop::handleMouse(int, int, int, int)+0x1ad>	10004045: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004049:	83 c4 20             	add    esp,0x20
1000404c:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
10004051:	0f 85 bb 01 00 00    	jne    10004212 <NIDesktop::handleMouse(int, int, int, int)+0x37a>
10004057:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000405a:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004060:	55                   	push   ebp
10004061:	a1 00 00 00 00       	mov    eax,ds:0x0	10004062: R_386_32	movingWin
10004066:	55                   	push   ebp
10004067:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004069:	6a 00                	push   0x0
1000406b:	6a 01                	push   0x1
1000406d:	ff 70 1c             	push   DWORD PTR [eax+0x1c]
10004070:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004073:	2b 05 f0 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af0	10004075: R_386_32	.bss
10004079:	50                   	push   eax
1000407a:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
1000407d:	2b 05 f4 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af4	1000407f: R_386_32	.bss
10004083:	50                   	push   eax
10004084:	52                   	push   edx
10004085:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004088:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000408b:	83 c4 18             	add    esp,0x18
1000408e:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004094:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004096: R_386_32	movingWin
1000409a:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000409c:	6a 00                	push   0x0
1000409e:	6a 01                	push   0x1
100040a0:	ff 77 1c             	push   DWORD PTR [edi+0x1c]
100040a3:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100040a6:	2b 05 f0 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af0	100040a8: R_386_32	.bss
100040ac:	03 47 20             	add    eax,DWORD PTR [edi+0x20]
100040af:	48                   	dec    eax
100040b0:	50                   	push   eax
100040b1:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
100040b4:	2b 05 f4 7a 01 10    	sub    eax,DWORD PTR ds:0x10017af4	100040b6: R_386_32	.bss
100040ba:	50                   	push   eax
100040bb:	52                   	push   edx
100040bc:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100040bf:	83 c4 20             	add    esp,0x20
100040c2:	85 f6                	test   esi,esi
100040c4:	0f 84 14 01 00 00    	je     100041de <NIDesktop::handleMouse(int, int, int, int)+0x346>
100040ca:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
100040cf:	0f 84 09 01 00 00    	je     100041de <NIDesktop::handleMouse(int, int, int, int)+0x346>
100040d5:	8b 0d f8 7a 01 10    	mov    ecx,DWORD PTR ds:0x10017af8	100040d7: R_386_32	.bss
100040db:	83 e1 01             	and    ecx,0x1
100040de:	0f 85 c3 00 00 00    	jne    100041a7 <NIDesktop::handleMouse(int, int, int, int)+0x30f>
100040e4:	a1 00 00 00 00       	mov    eax,ds:0x0	100040e5: R_386_32	milliTenthsSinceBoot
100040e9:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100040eb: R_386_32	milliTenthsSinceBoot
100040ef:	2b 05 e8 7a 01 10    	sub    eax,DWORD PTR ds:0x10017ae8	100040f1: R_386_32	.bss
100040f5:	bf b7 0b 00 00       	mov    edi,0xbb7
100040fa:	1b 15 ec 7a 01 10    	sbb    edx,DWORD PTR ds:0x10017aec	100040fc: R_386_32	.bss
10004100:	39 c7                	cmp    edi,eax
10004102:	19 d1                	sbb    ecx,edx
10004104:	72 75                	jb     1000417b <NIDesktop::handleMouse(int, int, int, int)+0x2e3>
10004106:	8a 46 24             	mov    al,BYTE PTR [esi+0x24]
10004109:	84 c0                	test   al,al
1000410b:	74 17                	je     10004124 <NIDesktop::handleMouse(int, int, int, int)+0x28c>
1000410d:	8b 56 28             	mov    edx,DWORD PTR [esi+0x28]
10004110:	89 56 14             	mov    DWORD PTR [esi+0x14],edx
10004113:	8b 56 2c             	mov    edx,DWORD PTR [esi+0x2c]
10004116:	89 56 18             	mov    DWORD PTR [esi+0x18],edx
10004119:	8b 56 30             	mov    edx,DWORD PTR [esi+0x30]
1000411c:	89 56 1c             	mov    DWORD PTR [esi+0x1c],edx
1000411f:	8b 56 34             	mov    edx,DWORD PTR [esi+0x34]
10004122:	eb 3b                	jmp    1000415f <NIDesktop::handleMouse(int, int, int, int)+0x2c7>
10004124:	8b 56 14             	mov    edx,DWORD PTR [esi+0x14]
10004127:	c7 46 14 00 00 00 00 	mov    DWORD PTR [esi+0x14],0x0
1000412e:	89 56 28             	mov    DWORD PTR [esi+0x28],edx
10004131:	8b 56 18             	mov    edx,DWORD PTR [esi+0x18]
10004134:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
1000413b:	89 56 2c             	mov    DWORD PTR [esi+0x2c],edx
1000413e:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
10004141:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004144:	8b 56 20             	mov    edx,DWORD PTR [esi+0x20]
10004147:	89 56 34             	mov    DWORD PTR [esi+0x34],edx
1000414a:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
1000414d:	8b 92 0c 04 00 00    	mov    edx,DWORD PTR [edx+0x40c]
10004153:	89 56 1c             	mov    DWORD PTR [esi+0x1c],edx
10004156:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004159:	8b 92 10 04 00 00    	mov    edx,DWORD PTR [edx+0x410]
1000415f:	83 ec 0c             	sub    esp,0xc
10004162:	89 56 20             	mov    DWORD PTR [esi+0x20],edx
10004165:	83 f0 01             	xor    eax,0x1
10004168:	88 46 24             	mov    BYTE PTR [esi+0x24],al
1000416b:	56                   	push   esi
1000416c:	e8 fc ff ff ff       	call   1000416d <NIDesktop::handleMouse(int, int, int, int)+0x2d5>	1000416d: R_386_PC32	NIWindow::rerender()
10004171:	89 1c 24             	mov    DWORD PTR [esp],ebx
10004174:	e8 fc ff ff ff       	call   10004175 <NIDesktop::handleMouse(int, int, int, int)+0x2dd>	10004175: R_386_PC32	NIDesktop::completeRefresh()
10004179:	eb 11                	jmp    1000418c <NIDesktop::handleMouse(int, int, int, int)+0x2f4>
1000417b:	8b 03                	mov    eax,DWORD PTR [ebx]
1000417d:	8b 00                	mov    eax,DWORD PTR [eax]
1000417f:	39 30                	cmp    DWORD PTR [eax],esi
10004181:	74 0c                	je     1000418f <NIDesktop::handleMouse(int, int, int, int)+0x2f7>
10004183:	57                   	push   edi
10004184:	57                   	push   edi
10004185:	56                   	push   esi
10004186:	53                   	push   ebx
10004187:	e8 fc ff ff ff       	call   10004188 <NIDesktop::handleMouse(int, int, int, int)+0x2f0>	10004188: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
1000418c:	83 c4 10             	add    esp,0x10
1000418f:	a1 00 00 00 00       	mov    eax,ds:0x0	10004190: R_386_32	milliTenthsSinceBoot
10004194:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	10004196: R_386_32	milliTenthsSinceBoot
1000419a:	a3 e8 7a 01 10       	mov    ds:0x10017ae8,eax	1000419b: R_386_32	.bss
1000419f:	89 15 ec 7a 01 10    	mov    DWORD PTR ds:0x10017aec,edx	100041a1: R_386_32	.bss
100041a5:	eb 37                	jmp    100041de <NIDesktop::handleMouse(int, int, int, int)+0x346>
100041a7:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100041a9: R_386_32	movingWin
100041ae:	75 2e                	jne    100041de <NIDesktop::handleMouse(int, int, int, int)+0x346>
100041b0:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041b3:	2b 46 18             	sub    eax,DWORD PTR [esi+0x18]
100041b6:	83 f8 18             	cmp    eax,0x18
100041b9:	7f 23                	jg     100041de <NIDesktop::handleMouse(int, int, int, int)+0x346>
100041bb:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100041be:	2b 56 14             	sub    edx,DWORD PTR [esi+0x14]
100041c1:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100041c3: R_386_32	movingWin
100041c7:	51                   	push   ecx
100041c8:	89 15 f4 7a 01 10    	mov    DWORD PTR ds:0x10017af4,edx	100041ca: R_386_32	.bss
100041ce:	51                   	push   ecx
100041cf:	a3 f0 7a 01 10       	mov    ds:0x10017af0,eax	100041d0: R_386_32	.bss
100041d4:	56                   	push   esi
100041d5:	53                   	push   ebx
100041d6:	e8 fc ff ff ff       	call   100041d7 <NIDesktop::handleMouse(int, int, int, int)+0x33f>	100041d7: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100041db:	83 c4 10             	add    esp,0x10
100041de:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100041e1:	83 ec 0c             	sub    esp,0xc
100041e4:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100041ea:	8b 0a                	mov    ecx,DWORD PTR [edx]
100041ec:	6a 00                	push   0x0
100041ee:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100041f1:	05 00 00 00 00       	add    eax,0x0	100041f2: R_386_32	___mouse_data
100041f6:	50                   	push   eax
100041f7:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
100041fa:	ff 73 08             	push   DWORD PTR [ebx+0x8]
100041fd:	52                   	push   edx
100041fe:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10004201:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10004205:	a3 f8 7a 01 10       	mov    ds:0x10017af8,eax	10004206: R_386_32	.bss
1000420a:	83 c4 3c             	add    esp,0x3c
1000420d:	5b                   	pop    ebx
1000420e:	5e                   	pop    esi
1000420f:	5f                   	pop    edi
10004210:	5d                   	pop    ebp
10004211:	c3                   	ret    
10004212:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004215:	a1 00 00 00 00       	mov    eax,ds:0x0	10004216: R_386_32	movingWin
1000421a:	2b 15 f4 7a 01 10    	sub    edx,DWORD PTR ds:0x10017af4	1000421c: R_386_32	.bss
10004220:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004222: R_386_32	movingWin
1000422a:	89 50 14             	mov    DWORD PTR [eax+0x14],edx
1000422d:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
10004230:	2b 15 f0 7a 01 10    	sub    edx,DWORD PTR ds:0x10017af0	10004232: R_386_32	.bss
10004236:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
10004239:	52                   	push   edx
1000423a:	52                   	push   edx
1000423b:	50                   	push   eax
1000423c:	53                   	push   ebx
1000423d:	e8 fc ff ff ff       	call   1000423e <NIDesktop::handleMouse(int, int, int, int)+0x3a6>	1000423e: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10004242:	83 c4 10             	add    esp,0x10
10004245:	e9 78 fe ff ff       	jmp    100040c2 <NIDesktop::handleMouse(int, int, int, int)+0x22a>

1000424a <clipdrawHandleMouse(int, int, int, int)>:
1000424a:	83 ec 18             	sub    esp,0x18
1000424d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004251:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004255:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004259:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000425d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000425f: R_386_32	mouseDesktop
10004263:	e8 fc ff ff ff       	call   10004264 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004264: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004268:	83 c4 2c             	add    esp,0x2c
1000426b:	c3                   	ret    

1000426c <NIWindow::invalidate()>:
1000426c:	56                   	push   esi
1000426d:	53                   	push   ebx
1000426e:	52                   	push   edx
1000426f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004273:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
10004277:	74 2e                	je     100042a7 <NIWindow::invalidate()+0x3b>
10004279:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000427d:	74 28                	je     100042a7 <NIWindow::invalidate()+0x3b>
1000427f:	31 f6                	xor    esi,esi
10004281:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10004284:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
10004287:	7e 12                	jle    1000429b <NIWindow::invalidate()+0x2f>
10004289:	83 ec 0c             	sub    esp,0xc
1000428c:	ff 74 f0 04          	push   DWORD PTR [eax+esi*8+0x4]
10004290:	46                   	inc    esi
10004291:	e8 fc ff ff ff       	call   10004292 <NIWindow::invalidate()+0x26>	10004292: R_386_PC32	free
10004296:	83 c4 10             	add    esp,0x10
10004299:	eb e6                	jmp    10004281 <NIWindow::invalidate()+0x15>
1000429b:	83 ec 0c             	sub    esp,0xc
1000429e:	50                   	push   eax
1000429f:	e8 fc ff ff ff       	call   100042a0 <NIWindow::invalidate()+0x34>	100042a0: R_386_PC32	free
100042a4:	83 c4 10             	add    esp,0x10
100042a7:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100042ae:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
100042b5:	c6 43 08 00          	mov    BYTE PTR [ebx+0x8],0x0
100042b9:	58                   	pop    eax
100042ba:	5b                   	pop    ebx
100042bb:	5e                   	pop    esi
100042bc:	c3                   	ret    
100042bd:	90                   	nop

100042be <NIWindow::putpixel(int, int, unsigned int)>:
100042be:	56                   	push   esi
100042bf:	53                   	push   ebx
100042c0:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100042c4:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100042c8:	8b 5a 04             	mov    ebx,DWORD PTR [edx+0x4]
100042cb:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100042cf:	8b 52 10             	mov    edx,DWORD PTR [edx+0x10]
100042d2:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100042d6:	8b 54 f2 04          	mov    edx,DWORD PTR [edx+esi*8+0x4]
100042da:	83 fb 04             	cmp    ebx,0x4
100042dd:	75 05                	jne    100042e4 <NIWindow::putpixel(int, int, unsigned int)+0x26>
100042df:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
100042e2:	eb 0e                	jmp    100042f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100042e4:	83 fb 02             	cmp    ebx,0x2
100042e7:	75 06                	jne    100042ef <NIWindow::putpixel(int, int, unsigned int)+0x31>
100042e9:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
100042ed:	eb 03                	jmp    100042f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100042ef:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
100042f2:	5b                   	pop    ebx
100042f3:	5e                   	pop    esi
100042f4:	c3                   	ret    
100042f5:	90                   	nop

100042f6 <NIWindow::rerender()>:
100042f6:	55                   	push   ebp
100042f7:	57                   	push   edi
100042f8:	56                   	push   esi
100042f9:	53                   	push   ebx
100042fa:	83 ec 0c             	sub    esp,0xc
100042fd:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004301:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
10004305:	74 0c                	je     10004313 <NIWindow::rerender()+0x1d>
10004307:	83 ec 0c             	sub    esp,0xc
1000430a:	53                   	push   ebx
1000430b:	e8 fc ff ff ff       	call   1000430c <NIWindow::rerender()+0x16>	1000430c: R_386_PC32	NIWindow::invalidate()
10004310:	83 c4 10             	add    esp,0x10
10004313:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10004316:	83 ec 0c             	sub    esp,0xc
10004319:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000431c:	31 f6                	xor    esi,esi
1000431e:	c1 e0 03             	shl    eax,0x3
10004321:	50                   	push   eax
10004322:	e8 fc ff ff ff       	call   10004323 <NIWindow::rerender()+0x2d>	10004323: R_386_PC32	malloc
10004327:	83 c4 10             	add    esp,0x10
1000432a:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000432d:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
10004330:	0f 8e 88 00 00 00    	jle    100043be <NIWindow::rerender()+0xc8>
10004336:	8d 04 f5 00 00 00 00 	lea    eax,[esi*8+0x0]
1000433d:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
10004340:	01 c1                	add    ecx,eax
10004342:	83 fe 06             	cmp    esi,0x6
10004345:	7f 1b                	jg     10004362 <NIWindow::rerender()+0x6c>
10004347:	8b 14 b5 00 00 00 00 	mov    edx,DWORD PTR [esi*4+0x0]	1000434a: R_386_32	curveLookup7
1000434e:	66 89 11             	mov    WORD PTR [ecx],dx
10004351:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10004354:	8b 0c b5 00 00 00 00 	mov    ecx,DWORD PTR [esi*4+0x0]	10004357: R_386_32	curveLookup7
1000435b:	66 89 4c 02 02       	mov    WORD PTR [edx+eax*1+0x2],cx
10004360:	eb 3b                	jmp    1000439d <NIWindow::rerender()+0xa7>
10004362:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10004365:	8d 7a fa             	lea    edi,[edx-0x6]
10004368:	39 f7                	cmp    edi,esi
1000436a:	7f 22                	jg     1000438e <NIWindow::rerender()+0x98>
1000436c:	29 f2                	sub    edx,esi
1000436e:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10004371: R_386_32	curveLookup7
10004375:	66 89 11             	mov    WORD PTR [ecx],dx
10004378:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
1000437b:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
1000437e:	29 f2                	sub    edx,esi
10004380:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10004383: R_386_32	curveLookup7
10004387:	66 89 54 01 02       	mov    WORD PTR [ecx+eax*1+0x2],dx
1000438c:	eb 0f                	jmp    1000439d <NIWindow::rerender()+0xa7>
1000438e:	66 c7 01 00 00       	mov    WORD PTR [ecx],0x0
10004393:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10004396:	66 c7 44 02 02 00 00 	mov    WORD PTR [edx+eax*1+0x2],0x0
1000439d:	03 43 10             	add    eax,DWORD PTR [ebx+0x10]
100043a0:	83 ec 0c             	sub    esp,0xc
100043a3:	89 c7                	mov    edi,eax
100043a5:	46                   	inc    esi
100043a6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100043a9:	0f af 43 04          	imul   eax,DWORD PTR [ebx+0x4]
100043ad:	50                   	push   eax
100043ae:	e8 fc ff ff ff       	call   100043af <NIWindow::rerender()+0xb9>	100043af: R_386_PC32	malloc
100043b3:	83 c4 10             	add    esp,0x10
100043b6:	89 47 04             	mov    DWORD PTR [edi+0x4],eax
100043b9:	e9 6f ff ff ff       	jmp    1000432d <NIWindow::rerender()+0x37>
100043be:	c6 43 08 01          	mov    BYTE PTR [ebx+0x8],0x1
100043c2:	31 ff                	xor    edi,edi
100043c4:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
100043c7:	7e 30                	jle    100043f9 <NIWindow::rerender()+0x103>
100043c9:	31 c0                	xor    eax,eax
100043cb:	83 ff 19             	cmp    edi,0x19
100043ce:	0f 9e c0             	setle  al
100043d1:	31 ed                	xor    ebp,ebp
100043d3:	89 c6                	mov    esi,eax
100043d5:	4e                   	dec    esi
100043d6:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
100043dc:	81 c6 ff ff ff 00    	add    esi,0xffffff
100043e2:	39 6b 1c             	cmp    DWORD PTR [ebx+0x1c],ebp
100043e5:	7e 0f                	jle    100043f6 <NIWindow::rerender()+0x100>
100043e7:	56                   	push   esi
100043e8:	57                   	push   edi
100043e9:	55                   	push   ebp
100043ea:	45                   	inc    ebp
100043eb:	53                   	push   ebx
100043ec:	e8 fc ff ff ff       	call   100043ed <NIWindow::rerender()+0xf7>	100043ed: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100043f1:	83 c4 10             	add    esp,0x10
100043f4:	eb ec                	jmp    100043e2 <NIWindow::rerender()+0xec>
100043f6:	47                   	inc    edi
100043f7:	eb cb                	jmp    100043c4 <NIWindow::rerender()+0xce>
100043f9:	83 c4 0c             	add    esp,0xc
100043fc:	5b                   	pop    ebx
100043fd:	5e                   	pop    esi
100043fe:	5f                   	pop    edi
100043ff:	5d                   	pop    ebp
10004400:	c3                   	ret    
10004401:	90                   	nop

10004402 <NIWindow::changeContext(NIContext*, int, int)>:
10004402:	55                   	push   ebp
10004403:	57                   	push   edi
10004404:	56                   	push   esi
10004405:	53                   	push   ebx
10004406:	83 ec 18             	sub    esp,0x18
10004409:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000440d:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004411:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10004415:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10004419:	53                   	push   ebx
1000441a:	e8 fc ff ff ff       	call   1000441b <NIWindow::changeContext(NIContext*, int, int)+0x19>	1000441b: R_386_PC32	NIWindow::invalidate()
1000441f:	89 33                	mov    DWORD PTR [ebx],esi
10004421:	89 6b 14             	mov    DWORD PTR [ebx+0x14],ebp
10004424:	89 7b 18             	mov    DWORD PTR [ebx+0x18],edi
10004427:	83 c4 10             	add    esp,0x10
1000442a:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004430:	83 f8 08             	cmp    eax,0x8
10004433:	7f 09                	jg     1000443e <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10004435:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
1000443c:	eb 15                	jmp    10004453 <NIWindow::changeContext(NIContext*, int, int)+0x51>
1000443e:	83 f8 10             	cmp    eax,0x10
10004441:	7f 09                	jg     1000444c <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004443:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
1000444a:	eb 07                	jmp    10004453 <NIWindow::changeContext(NIContext*, int, int)+0x51>
1000444c:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004453:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10004457:	83 c4 0c             	add    esp,0xc
1000445a:	5b                   	pop    ebx
1000445b:	5e                   	pop    esi
1000445c:	5f                   	pop    edi
1000445d:	5d                   	pop    ebp
1000445e:	e9 93 fe ff ff       	jmp    100042f6 <NIWindow::rerender()>
10004463:	90                   	nop

10004464 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10004464:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004468:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000446c:	c6 40 24 00          	mov    BYTE PTR [eax+0x24],0x0
10004470:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
10004473:	c6 40 08 00          	mov    BYTE PTR [eax+0x8],0x0
10004477:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000447b:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10004482:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004485:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
1000448c:	e9 71 ff ff ff       	jmp    10004402 <NIWindow::changeContext(NIContext*, int, int)>
10004491:	90                   	nop

10004492 <NIWindow::request()>:
10004492:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004496:	80 78 08 00          	cmp    BYTE PTR [eax+0x8],0x0
1000449a:	75 05                	jne    100044a1 <NIWindow::request()+0xf>
1000449c:	e9 55 fe ff ff       	jmp    100042f6 <NIWindow::rerender()>
100044a1:	c3                   	ret    

100044a2 <NIWindow::SHADOW_TEST()>:
100044a2:	55                   	push   ebp
100044a3:	57                   	push   edi
100044a4:	56                   	push   esi
100044a5:	53                   	push   ebx
100044a6:	83 ec 28             	sub    esp,0x28
100044a9:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
100044ad:	53                   	push   ebx
100044ae:	e8 fc ff ff ff       	call   100044af <NIWindow::SHADOW_TEST()+0xd>	100044af: R_386_PC32	NIWindow::request()
100044b3:	83 c4 10             	add    esp,0x10
100044b6:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
100044b9:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
100044bc:	74 10                	je     100044ce <NIWindow::SHADOW_TEST()+0x2c>
100044be:	83 ec 0c             	sub    esp,0xc
100044c1:	68 7c 4a 00 10       	push   0x10004a7c	100044c2: R_386_32	.text
100044c6:	e8 fc ff ff ff       	call   100044c7 <NIWindow::SHADOW_TEST()+0x25>	100044c7: R_386_PC32	KePanic(char const*)
100044cb:	83 c4 10             	add    esp,0x10
100044ce:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100044d2:	0f 85 28 01 00 00    	jne    10004600 <NIWindow::SHADOW_TEST()+0x15e>
100044d8:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
100044e0:	31 ff                	xor    edi,edi
100044e2:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
100044e5:	0f 8e 15 01 00 00    	jle    10004600 <NIWindow::SHADOW_TEST()+0x15e>
100044eb:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100044ee:	8d 04 f8             	lea    eax,[eax+edi*8]
100044f1:	0f b7 30             	movzx  esi,WORD PTR [eax]
100044f4:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
100044f8:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
100044fc:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004500:	89 34 24             	mov    DWORD PTR [esp],esi
10004503:	8b 6b 1c             	mov    ebp,DWORD PTR [ebx+0x1c]
10004506:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10004509:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
1000450d:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
10004510:	0f 8e d4 00 00 00    	jle    100045ea <NIWindow::SHADOW_TEST()+0x148>
10004516:	83 ff 05             	cmp    edi,0x5
10004519:	7e 1f                	jle    1000453a <NIWindow::SHADOW_TEST()+0x98>
1000451b:	8d 41 fb             	lea    eax,[ecx-0x5]
1000451e:	39 f8                	cmp    eax,edi
10004520:	7e 18                	jle    1000453a <NIWindow::SHADOW_TEST()+0x98>
10004522:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004526:	83 c0 05             	add    eax,0x5
10004529:	3b 04 24             	cmp    eax,DWORD PTR [esp]
1000452c:	7d 0c                	jge    1000453a <NIWindow::SHADOW_TEST()+0x98>
1000452e:	8d 45 fb             	lea    eax,[ebp-0x5]
10004531:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004534:	0f 8f a8 00 00 00    	jg     100045e2 <NIWindow::SHADOW_TEST()+0x140>
1000453a:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
1000453e:	be ea 01 00 00       	mov    esi,0x1ea
10004543:	29 f9                	sub    ecx,edi
10004545:	89 f0                	mov    eax,esi
10004547:	83 c1 04             	add    ecx,0x4
1000454a:	99                   	cdq    
1000454b:	f7 f9                	idiv   ecx
1000454d:	89 c1                	mov    ecx,eax
1000454f:	89 f0                	mov    eax,esi
10004551:	99                   	cdq    
10004552:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10004556:	83 f8 0a             	cmp    eax,0xa
10004559:	7d 05                	jge    10004560 <NIWindow::SHADOW_TEST()+0xbe>
1000455b:	b8 0a 00 00 00       	mov    eax,0xa
10004560:	39 c1                	cmp    ecx,eax
10004562:	7d 02                	jge    10004566 <NIWindow::SHADOW_TEST()+0xc4>
10004564:	89 c1                	mov    ecx,eax
10004566:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10004569:	b8 ea 01 00 00       	mov    eax,0x1ea
1000456e:	83 c5 04             	add    ebp,0x4
10004571:	99                   	cdq    
10004572:	f7 fd                	idiv   ebp
10004574:	89 c6                	mov    esi,eax
10004576:	83 f8 0a             	cmp    eax,0xa
10004579:	7d 05                	jge    10004580 <NIWindow::SHADOW_TEST()+0xde>
1000457b:	be 0a 00 00 00       	mov    esi,0xa
10004580:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004583:	8d 68 05             	lea    ebp,[eax+0x5]
10004586:	b8 ea 01 00 00       	mov    eax,0x1ea
1000458b:	99                   	cdq    
1000458c:	f7 fd                	idiv   ebp
1000458e:	39 c6                	cmp    esi,eax
10004590:	7d 02                	jge    10004594 <NIWindow::SHADOW_TEST()+0xf2>
10004592:	89 c6                	mov    esi,eax
10004594:	89 f0                	mov    eax,esi
10004596:	89 ca                	mov    edx,ecx
10004598:	0f af c6             	imul   eax,esi
1000459b:	0f af d1             	imul   edx,ecx
1000459e:	0f af f1             	imul   esi,ecx
100045a1:	01 d0                	add    eax,edx
100045a3:	8d 04 c6             	lea    eax,[esi+eax*8]
100045a6:	c1 f8 08             	sar    eax,0x8
100045a9:	83 f8 66             	cmp    eax,0x66
100045ac:	7e 46                	jle    100045f4 <NIWindow::SHADOW_TEST()+0x152>
100045ae:	8d 50 9a             	lea    edx,[eax-0x66]
100045b1:	d1 fa                	sar    edx,1
100045b3:	8d 42 66             	lea    eax,[edx+0x66]
100045b6:	83 f8 73             	cmp    eax,0x73
100045b9:	7e 39                	jle    100045f4 <NIWindow::SHADOW_TEST()+0x152>
100045bb:	83 ea 0d             	sub    edx,0xd
100045be:	c1 fa 02             	sar    edx,0x2
100045c1:	8d 42 73             	lea    eax,[edx+0x73]
100045c4:	83 f8 7f             	cmp    eax,0x7f
100045c7:	7f 19                	jg     100045e2 <NIWindow::SHADOW_TEST()+0x140>
100045c9:	50                   	push   eax
100045ca:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100045cd:	01 f8                	add    eax,edi
100045cf:	50                   	push   eax
100045d0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100045d4:	03 43 14             	add    eax,DWORD PTR [ebx+0x14]
100045d7:	50                   	push   eax
100045d8:	ff 33                	push   DWORD PTR [ebx]
100045da:	e8 fc ff ff ff       	call   100045db <NIWindow::SHADOW_TEST()+0x139>	100045db: R_386_PC32	NIContext::drvDarken4(int, int, int)
100045df:	83 c4 10             	add    esp,0x10
100045e2:	ff 04 24             	inc    DWORD PTR [esp]
100045e5:	e9 19 ff ff ff       	jmp    10004503 <NIWindow::SHADOW_TEST()+0x61>
100045ea:	47                   	inc    edi
100045eb:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
100045ef:	e9 ee fe ff ff       	jmp    100044e2 <NIWindow::SHADOW_TEST()+0x40>
100045f4:	83 f8 0a             	cmp    eax,0xa
100045f7:	7d d0                	jge    100045c9 <NIWindow::SHADOW_TEST()+0x127>
100045f9:	b8 0a 00 00 00       	mov    eax,0xa
100045fe:	eb c9                	jmp    100045c9 <NIWindow::SHADOW_TEST()+0x127>
10004600:	83 c4 1c             	add    esp,0x1c
10004603:	5b                   	pop    ebx
10004604:	5e                   	pop    esi
10004605:	5f                   	pop    edi
10004606:	5d                   	pop    ebp
10004607:	c3                   	ret    

10004608 <NIWindow::realdraw()>:
10004608:	55                   	push   ebp
10004609:	57                   	push   edi
1000460a:	56                   	push   esi
1000460b:	53                   	push   ebx
1000460c:	83 ec 28             	sub    esp,0x28
1000460f:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10004613:	53                   	push   ebx
10004614:	e8 fc ff ff ff       	call   10004615 <NIWindow::realdraw()+0xd>	10004615: R_386_PC32	NIWindow::request()
10004619:	83 c4 10             	add    esp,0x10
1000461c:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000461f:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10004622:	74 10                	je     10004634 <NIWindow::realdraw()+0x2c>
10004624:	83 ec 0c             	sub    esp,0xc
10004627:	68 7c 4a 00 10       	push   0x10004a7c	10004628: R_386_32	.text
1000462c:	e8 fc ff ff ff       	call   1000462d <NIWindow::realdraw()+0x25>	1000462d: R_386_PC32	KePanic(char const*)
10004631:	83 c4 10             	add    esp,0x10
10004634:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004638:	75 4f                	jne    10004689 <NIWindow::realdraw()+0x81>
1000463a:	31 f6                	xor    esi,esi
1000463c:	39 73 20             	cmp    DWORD PTR [ebx+0x20],esi
1000463f:	7e 48                	jle    10004689 <NIWindow::realdraw()+0x81>
10004641:	8d 2c f5 00 00 00 00 	lea    ebp,[esi*8+0x0]
10004648:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000464b:	01 e8                	add    eax,ebp
1000464d:	0f b7 38             	movzx  edi,WORD PTR [eax]
10004650:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10004654:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004658:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000465b:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
1000465f:	39 f8                	cmp    eax,edi
10004661:	7e 23                	jle    10004686 <NIWindow::realdraw()+0x7e>
10004663:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10004666:	8b 44 28 04          	mov    eax,DWORD PTR [eax+ebp*1+0x4]
1000466a:	ff 34 b8             	push   DWORD PTR [eax+edi*4]
1000466d:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10004670:	01 f0                	add    eax,esi
10004672:	50                   	push   eax
10004673:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004676:	01 f8                	add    eax,edi
10004678:	47                   	inc    edi
10004679:	50                   	push   eax
1000467a:	ff 33                	push   DWORD PTR [ebx]
1000467c:	e8 fc ff ff ff       	call   1000467d <NIWindow::realdraw()+0x75>	1000467d: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004681:	83 c4 10             	add    esp,0x10
10004684:	eb d2                	jmp    10004658 <NIWindow::realdraw()+0x50>
10004686:	46                   	inc    esi
10004687:	eb b3                	jmp    1000463c <NIWindow::realdraw()+0x34>
10004689:	83 c4 1c             	add    esp,0x1c
1000468c:	5b                   	pop    ebx
1000468d:	5e                   	pop    esi
1000468e:	5f                   	pop    edi
1000468f:	5d                   	pop    ebp
10004690:	c3                   	ret    
10004691:	90                   	nop

10004692 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004692:	53                   	push   ebx
10004693:	83 ec 14             	sub    esp,0x14
10004696:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000469a:	6a 0c                	push   0xc
1000469c:	e8 fc ff ff ff       	call   1000469d <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	1000469d: R_386_PC32	malloc
100046a1:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100046a5:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
100046ac:	89 10                	mov    DWORD PTR [eax],edx
100046ae:	83 c4 10             	add    esp,0x10
100046b1:	8b 13                	mov    edx,DWORD PTR [ebx]
100046b3:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100046b6:	85 d2                	test   edx,edx
100046b8:	74 05                	je     100046bf <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
100046ba:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
100046bd:	eb 03                	jmp    100046c2 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
100046bf:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100046c2:	89 03                	mov    DWORD PTR [ebx],eax
100046c4:	83 c4 08             	add    esp,0x8
100046c7:	5b                   	pop    ebx
100046c8:	c3                   	ret    
100046c9:	90                   	nop

100046ca <List<NIWindow*>::deleteElement(NIWindow*&)>:
100046ca:	57                   	push   edi
100046cb:	56                   	push   esi
100046cc:	53                   	push   ebx
100046cd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100046d1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100046d5:	8b 19                	mov    ebx,DWORD PTR [ecx]
100046d7:	85 db                	test   ebx,ebx
100046d9:	74 5e                	je     10004739 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100046db:	8b 30                	mov    esi,DWORD PTR [eax]
100046dd:	89 da                	mov    edx,ebx
100046df:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
100046e2:	8b 3a                	mov    edi,DWORD PTR [edx]
100046e4:	85 c0                	test   eax,eax
100046e6:	74 08                	je     100046f0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100046e8:	39 f7                	cmp    edi,esi
100046ea:	73 04                	jae    100046f0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100046ec:	89 c2                	mov    edx,eax
100046ee:	eb ef                	jmp    100046df <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
100046f0:	39 f7                	cmp    edi,esi
100046f2:	75 45                	jne    10004739 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100046f4:	39 d3                	cmp    ebx,edx
100046f6:	75 18                	jne    10004710 <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
100046f8:	89 01                	mov    DWORD PTR [ecx],eax
100046fa:	85 c0                	test   eax,eax
100046fc:	75 09                	jne    10004707 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
100046fe:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004705:	eb 1e                	jmp    10004725 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004707:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000470e:	eb 15                	jmp    10004725 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004710:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004713:	85 c0                	test   eax,eax
10004715:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004718:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000471b:	74 05                	je     10004722 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
1000471d:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10004720:	eb 03                	jmp    10004725 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004722:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004725:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
1000472d:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10004731:	5b                   	pop    ebx
10004732:	5e                   	pop    esi
10004733:	5f                   	pop    edi
10004734:	e9 fc ff ff ff       	jmp    10004735 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004735: R_386_PC32	operator delete(void*, unsigned long)
10004739:	5b                   	pop    ebx
1000473a:	5e                   	pop    esi
1000473b:	5f                   	pop    edi
1000473c:	c3                   	ret    
1000473d:	53                   	push   ebx
1000473e:	46                   	inc    esi
1000473f:	4e                   	dec    esi
10004740:	43                   	inc    ebx
10004741:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004744:	4e                   	dec    esi
10004745:	32 00                	xor    al,BYTE PTR [eax]
10004747:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
1000474a:	53                   	push   ebx
1000474b:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
1000474e:	43                   	inc    ebx
1000474f:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004750:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004751:	74 65                	je     100047b8 <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
10004753:	78 74                	js     100047c9 <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
10004755:	3a 3a                	cmp    bh,BYTE PTR [edx]
10004757:	64 72 76             	fs jb  100047d0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
1000475a:	52                   	push   edx
1000475b:	65 6e                	outs   dx,BYTE PTR gs:[esi]
1000475d:	64 65 72 54          	fs gs jb 100047b5 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
10004761:	54                   	push   esp
10004762:	46                   	inc    esi
10004763:	34 00                	xor    al,0x0
10004765:	43                   	inc    ebx
10004766:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004768:	42                   	inc    edx
10004769:	61                   	popa   
1000476a:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000476b:	61                   	popa   
1000476c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000476d:	61                   	popa   
1000476e:	2f                   	das    
1000476f:	46                   	inc    esi
10004770:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004771:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004772:	74 73                	je     100047e7 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
10004774:	2f                   	das    
10004775:	53                   	push   ebx
10004776:	46                   	inc    esi
10004777:	4e                   	dec    esi
10004778:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000477b:	4e                   	dec    esi
1000477c:	4e                   	dec    esi
1000477d:	4f                   	dec    edi
1000477e:	54                   	push   esp
1000477f:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004783:	44                   	inc    esp
10004784:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
10004787:	4e                   	dec    esi
10004788:	54                   	push   esp
10004789:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
1000478d:	45                   	inc    ebp
1000478e:	43                   	inc    ebx
1000478f:	54                   	push   esp
10004790:	4f                   	dec    edi
10004791:	52                   	push   edx
10004792:	59                   	pop    ecx
10004793:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
10004796:	2f                   	das    
10004797:	42                   	inc    edx
10004798:	61                   	popa   
10004799:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000479a:	61                   	popa   
1000479b:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000479c:	61                   	popa   
1000479d:	2f                   	das    
1000479e:	46                   	inc    esi
1000479f:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047a0:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047a1:	74 73                	je     10004816 <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
100047a3:	2f                   	das    
100047a4:	53                   	push   ebx
100047a5:	46                   	inc    esi
100047a6:	4e                   	dec    esi
100047a7:	2f                   	das    
100047a8:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
100047ab:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047ac:	74 20                	je     100047ce <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
100047ae:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
100047b5:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
100047bc:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
100047c0:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
100047c6:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047c7:	74 3a                	je     10004803 <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
100047c9:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
100047cf:	53                   	push   ebx
100047d0:	46                   	inc    esi
100047d1:	4e                   	dec    esi
100047d2:	5f                   	pop    edi
100047d3:	52                   	push   edx
100047d4:	45                   	inc    ebp
100047d5:	53                   	push   ebx
100047d6:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
100047dc:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
100047df:	6d                   	ins    DWORD PTR es:[edi],dx
100047e0:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047e1:	72 79                	jb     1000485c <List<NIWindow*>::deleteElement(NIWindow*&)+0x192>
100047e3:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
100047e6:	6c                   	ins    BYTE PTR es:[edi],dx
100047e7:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047e8:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
100047eb:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
100047f2:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047f3:	72 00                	jb     100047f5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
100047f5:	42                   	inc    edx
100047f6:	61                   	popa   
100047f7:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
100047fb:	6c                   	ins    BYTE PTR es:[edi],dx
100047fc:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004800:	72 6d                	jb     1000486f <_ssfn__compute_huffman_codes::length_dezigzag+0xf>
10004802:	61                   	popa   
10004803:	74 00                	je     10004805 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
10004805:	4e                   	dec    esi
10004806:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004807:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000480a:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000480b:	74 20                	je     1000482d <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
1000480d:	66 61                	popaw  
1000480f:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004812:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004814:	75 6e                	jne    10004884 <_ssfn__zdist_extra+0x4>
10004816:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000481a:	76 61                	jbe    1000487d <_ssfn__compute_huffman_codes::length_dezigzag+0x1d>
1000481c:	6c                   	ins    BYTE PTR es:[edi],dx
1000481d:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004825:	20 76 61             	and    BYTE PTR [esi+0x61],dh
10004828:	6c                   	ins    BYTE PTR es:[edi],dx
10004829:	75 65                	jne    10004890 <_ssfn__zdist_extra+0x10>
1000482b:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000482e:	76 61                	jbe    10004891 <_ssfn__zdist_extra+0x11>
10004830:	6c                   	ins    BYTE PTR es:[edi],dx
10004831:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
10004839:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000483c:	76 61                	jbe    1000489f <_ssfn__zdist_extra+0x1f>
1000483e:	6c                   	ins    BYTE PTR es:[edi],dx
1000483f:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
10004847:	47                   	inc    edi
10004848:	6c                   	ins    BYTE PTR es:[edi],dx
10004849:	79 70                	jns    100048bb <_ssfn__zdist_extra+0x3b>
1000484b:	68 20 6e 6f 74       	push   0x746f6e20
10004850:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004853:	75 6e                	jne    100048c3 <_ssfn__zdist_extra+0x43>
10004855:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
10004859:	66 90                	xchg   ax,ax
1000485b:	66 90                	xchg   ax,ax
1000485d:	66 90                	xchg   ax,ax
1000485f:	90                   	nop

10004860 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004860:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004870:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004880 <_ssfn__zdist_extra>:
	...
10004890:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
100048a0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
100048b0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
100048c0:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
100048d0:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
100048e0:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
100048f0:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004900 <_ssfn__zdist_base>:
10004900:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004910:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004920:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004930:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004940:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004950:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004960:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004970:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004980 <_ssfn__zlength_extra>:
	...
100049a0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
100049b0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
100049c0:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
100049d0:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
100049e0:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004a00 <_ssfn__zlength_base>:
10004a00:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004a10:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004a20:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004a30:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004a40:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004a50:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004a60:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004a70:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
10004a80:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
10004a90:	29 2e 00                                            )..
