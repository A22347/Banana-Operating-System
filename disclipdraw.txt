
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*) [clone .constprop.0]>:
10000000:	57                   	push   edi
10000001:	56                   	push   esi
10000002:	53                   	push   ebx
10000003:	81 ec fc 00 00 00    	sub    esp,0xfc
10000009:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000000b: R_386_32	screen
1000000f:	e8 fc ff ff ff       	call   10000010 <start(void*) [clone .constprop.0]+0x10>	10000010: R_386_PC32	Video::getWidth()
10000014:	5f                   	pop    edi
10000015:	89 c6                	mov    esi,eax
10000017:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000019: R_386_32	screen
1000001d:	31 ff                	xor    edi,edi
1000001f:	e8 fc ff ff ff       	call   10000020 <start(void*) [clone .constprop.0]+0x20>	10000020: R_386_PC32	Video::getHeight()
10000024:	89 c3                	mov    ebx,eax
10000026:	58                   	pop    eax
10000027:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000029: R_386_32	screen
1000002d:	e8 fc ff ff ff       	call   1000002e <start(void*) [clone .constprop.0]+0x2e>	1000002e: R_386_PC32	Video::getWidth()
10000032:	5a                   	pop    edx
10000033:	59                   	pop    ecx
10000034:	6a 20                	push   0x20
10000036:	56                   	push   esi
10000037:	53                   	push   ebx
10000038:	50                   	push   eax
10000039:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000003b: R_386_32	screen
1000003f:	8d 74 24 20          	lea    esi,[esp+0x20]
10000043:	56                   	push   esi
10000044:	e8 fc ff ff ff       	call   10000045 <start(void*) [clone .constprop.0]+0x45>	10000045: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000049:	83 c4 20             	add    esp,0x20
1000004c:	83 ec 0c             	sub    esp,0xc
1000004f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000051: R_386_32	screen
10000055:	e8 fc ff ff ff       	call   10000056 <start(void*) [clone .constprop.0]+0x56>	10000056: R_386_PC32	Video::getHeight()
1000005a:	83 c4 10             	add    esp,0x10
1000005d:	39 f8                	cmp    eax,edi
1000005f:	7e 2d                	jle    1000008e <start(void*) [clone .constprop.0]+0x8e>
10000061:	31 db                	xor    ebx,ebx
10000063:	eb 11                	jmp    10000076 <start(void*) [clone .constprop.0]+0x76>
10000065:	68 ff 80 55 00       	push   0x5580ff
1000006a:	57                   	push   edi
1000006b:	53                   	push   ebx
1000006c:	43                   	inc    ebx
1000006d:	56                   	push   esi
1000006e:	e8 fc ff ff ff       	call   1000006f <start(void*) [clone .constprop.0]+0x6f>	1000006f: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10000073:	83 c4 10             	add    esp,0x10
10000076:	83 ec 0c             	sub    esp,0xc
10000079:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000007b: R_386_32	screen
1000007f:	e8 fc ff ff ff       	call   10000080 <start(void*) [clone .constprop.0]+0x80>	10000080: R_386_PC32	Video::getWidth()
10000084:	83 c4 10             	add    esp,0x10
10000087:	39 d8                	cmp    eax,ebx
10000089:	7f da                	jg     10000065 <start(void*) [clone .constprop.0]+0x65>
1000008b:	47                   	inc    edi
1000008c:	eb be                	jmp    1000004c <start(void*) [clone .constprop.0]+0x4c>
1000008e:	83 ec 08             	sub    esp,0x8
10000091:	68 40 01 00 00       	push   0x140
10000096:	68 90 01 00 00       	push   0x190
1000009b:	6a 32                	push   0x32
1000009d:	6a 32                	push   0x32
1000009f:	56                   	push   esi
100000a0:	8d 5c 24 34          	lea    ebx,[esp+0x34]
100000a4:	53                   	push   ebx
100000a5:	e8 fc ff ff ff       	call   100000a6 <start(void*) [clone .constprop.0]+0xa6>	100000a6: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000aa:	83 c4 18             	add    esp,0x18
100000ad:	68 4a 01 00 00       	push   0x14a
100000b2:	68 9a 01 00 00       	push   0x19a
100000b7:	6a 2d                	push   0x2d
100000b9:	6a 2d                	push   0x2d
100000bb:	56                   	push   esi
100000bc:	8d 7c 24 58          	lea    edi,[esp+0x58]
100000c0:	57                   	push   edi
100000c1:	e8 fc ff ff ff       	call   100000c2 <start(void*) [clone .constprop.0]+0xc2>	100000c2: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000c6:	83 c4 14             	add    esp,0x14
100000c9:	57                   	push   edi
100000ca:	e8 fc ff ff ff       	call   100000cb <start(void*) [clone .constprop.0]+0xcb>	100000cb: R_386_PC32	NIWindow::SHADOW_TEST()
100000cf:	89 1c 24             	mov    DWORD PTR [esp],ebx
100000d2:	e8 fc ff ff ff       	call   100000d3 <start(void*) [clone .constprop.0]+0xd3>	100000d3: R_386_PC32	NIWindow::realdraw()
100000d7:	58                   	pop    eax
100000d8:	5a                   	pop    edx
100000d9:	68 7c 01 00 00       	push   0x17c
100000de:	68 f4 01 00 00       	push   0x1f4
100000e3:	68 96 00 00 00       	push   0x96
100000e8:	68 c8 00 00 00       	push   0xc8
100000ed:	56                   	push   esi
100000ee:	8d 5c 24 7c          	lea    ebx,[esp+0x7c]
100000f2:	53                   	push   ebx
100000f3:	e8 fc ff ff ff       	call   100000f4 <start(void*) [clone .constprop.0]+0xf4>	100000f4: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000f8:	83 c4 18             	add    esp,0x18
100000fb:	68 86 01 00 00       	push   0x186
10000100:	68 fe 01 00 00       	push   0x1fe
10000105:	68 91 00 00 00       	push   0x91
1000010a:	68 c3 00 00 00       	push   0xc3
1000010f:	56                   	push   esi
10000110:	8d bc 24 a0 00 00 00 	lea    edi,[esp+0xa0]
10000117:	57                   	push   edi
10000118:	e8 fc ff ff ff       	call   10000119 <start(void*) [clone .constprop.0]+0x119>	10000119: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000011d:	83 c4 14             	add    esp,0x14
10000120:	57                   	push   edi
10000121:	e8 fc ff ff ff       	call   10000122 <start(void*) [clone .constprop.0]+0x122>	10000122: R_386_PC32	NIWindow::SHADOW_TEST()
10000126:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000129:	e8 fc ff ff ff       	call   1000012a <start(void*) [clone .constprop.0]+0x12a>	1000012a: R_386_PC32	NIWindow::realdraw()
1000012e:	59                   	pop    ecx
1000012f:	5b                   	pop    ebx
10000130:	68 af 00 00 00       	push   0xaf
10000135:	68 0e 01 00 00       	push   0x10e
1000013a:	68 90 01 00 00       	push   0x190
1000013f:	6a 7d                	push   0x7d
10000141:	56                   	push   esi
10000142:	8d 9c 24 c4 00 00 00 	lea    ebx,[esp+0xc4]
10000149:	53                   	push   ebx
1000014a:	e8 fc ff ff ff       	call   1000014b <start(void*) [clone .constprop.0]+0x14b>	1000014b: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000014f:	83 c4 18             	add    esp,0x18
10000152:	68 b9 00 00 00       	push   0xb9
10000157:	68 18 01 00 00       	push   0x118
1000015c:	68 8b 01 00 00       	push   0x18b
10000161:	6a 78                	push   0x78
10000163:	56                   	push   esi
10000164:	8d b4 24 e8 00 00 00 	lea    esi,[esp+0xe8]
1000016b:	56                   	push   esi
1000016c:	e8 fc ff ff ff       	call   1000016d <start(void*) [clone .constprop.0]+0x16d>	1000016d: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000171:	83 c4 14             	add    esp,0x14
10000174:	56                   	push   esi
10000175:	e8 fc ff ff ff       	call   10000176 <start(void*) [clone .constprop.0]+0x176>	10000176: R_386_PC32	NIWindow::SHADOW_TEST()
1000017a:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000017d:	e8 fc ff ff ff       	call   1000017e <start(void*) [clone .constprop.0]+0x17e>	1000017e: R_386_PC32	NIWindow::realdraw()
10000182:	83 c4 10             	add    esp,0x10
10000185:	8d 76 00             	lea    esi,[esi+0x0]
10000188:	83 ec 0c             	sub    esp,0xc
1000018b:	6a 02                	push   0x2
1000018d:	e8 fc ff ff ff       	call   1000018e <start(void*) [clone .constprop.0]+0x18e>	1000018e: R_386_PC32	blockTask(TaskState)
10000192:	83 c4 10             	add    esp,0x10
10000195:	eb f1                	jmp    10000188 <start(void*) [clone .constprop.0]+0x188>

10000197 <begin(void*)>:
10000197:	83 ec 0c             	sub    esp,0xc
1000019a:	e8 61 fe ff ff       	call   10000000 <start(void*) [clone .constprop.0]>
1000019f:	90                   	nop

100001a0 <start(void*)>:
100001a0:	57                   	push   edi
100001a1:	56                   	push   esi
100001a2:	53                   	push   ebx
100001a3:	81 ec fc 00 00 00    	sub    esp,0xfc
100001a9:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100001ab: R_386_32	screen
100001af:	e8 fc ff ff ff       	call   100001b0 <start(void*)+0x10>	100001b0: R_386_PC32	Video::getWidth()
100001b4:	5f                   	pop    edi
100001b5:	89 c6                	mov    esi,eax
100001b7:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100001b9: R_386_32	screen
100001bd:	31 ff                	xor    edi,edi
100001bf:	e8 fc ff ff ff       	call   100001c0 <start(void*)+0x20>	100001c0: R_386_PC32	Video::getHeight()
100001c4:	89 c3                	mov    ebx,eax
100001c6:	58                   	pop    eax
100001c7:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100001c9: R_386_32	screen
100001cd:	e8 fc ff ff ff       	call   100001ce <start(void*)+0x2e>	100001ce: R_386_PC32	Video::getWidth()
100001d2:	5a                   	pop    edx
100001d3:	59                   	pop    ecx
100001d4:	6a 20                	push   0x20
100001d6:	56                   	push   esi
100001d7:	53                   	push   ebx
100001d8:	50                   	push   eax
100001d9:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100001db: R_386_32	screen
100001df:	8d 74 24 20          	lea    esi,[esp+0x20]
100001e3:	56                   	push   esi
100001e4:	e8 fc ff ff ff       	call   100001e5 <start(void*)+0x45>	100001e5: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
100001e9:	83 c4 20             	add    esp,0x20
100001ec:	83 ec 0c             	sub    esp,0xc
100001ef:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100001f1: R_386_32	screen
100001f5:	e8 fc ff ff ff       	call   100001f6 <start(void*)+0x56>	100001f6: R_386_PC32	Video::getHeight()
100001fa:	83 c4 10             	add    esp,0x10
100001fd:	39 f8                	cmp    eax,edi
100001ff:	7e 2d                	jle    1000022e <start(void*)+0x8e>
10000201:	31 db                	xor    ebx,ebx
10000203:	eb 11                	jmp    10000216 <start(void*)+0x76>
10000205:	68 ff 80 55 00       	push   0x5580ff
1000020a:	57                   	push   edi
1000020b:	53                   	push   ebx
1000020c:	43                   	inc    ebx
1000020d:	56                   	push   esi
1000020e:	e8 fc ff ff ff       	call   1000020f <start(void*)+0x6f>	1000020f: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10000213:	83 c4 10             	add    esp,0x10
10000216:	83 ec 0c             	sub    esp,0xc
10000219:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000021b: R_386_32	screen
1000021f:	e8 fc ff ff ff       	call   10000220 <start(void*)+0x80>	10000220: R_386_PC32	Video::getWidth()
10000224:	83 c4 10             	add    esp,0x10
10000227:	39 d8                	cmp    eax,ebx
10000229:	7f da                	jg     10000205 <start(void*)+0x65>
1000022b:	47                   	inc    edi
1000022c:	eb be                	jmp    100001ec <start(void*)+0x4c>
1000022e:	83 ec 08             	sub    esp,0x8
10000231:	68 40 01 00 00       	push   0x140
10000236:	68 90 01 00 00       	push   0x190
1000023b:	6a 32                	push   0x32
1000023d:	6a 32                	push   0x32
1000023f:	56                   	push   esi
10000240:	8d 5c 24 34          	lea    ebx,[esp+0x34]
10000244:	53                   	push   ebx
10000245:	e8 fc ff ff ff       	call   10000246 <start(void*)+0xa6>	10000246: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000024a:	83 c4 18             	add    esp,0x18
1000024d:	68 4a 01 00 00       	push   0x14a
10000252:	68 9a 01 00 00       	push   0x19a
10000257:	6a 2d                	push   0x2d
10000259:	6a 2d                	push   0x2d
1000025b:	56                   	push   esi
1000025c:	8d 7c 24 58          	lea    edi,[esp+0x58]
10000260:	57                   	push   edi
10000261:	e8 fc ff ff ff       	call   10000262 <start(void*)+0xc2>	10000262: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000266:	83 c4 14             	add    esp,0x14
10000269:	57                   	push   edi
1000026a:	e8 fc ff ff ff       	call   1000026b <start(void*)+0xcb>	1000026b: R_386_PC32	NIWindow::SHADOW_TEST()
1000026f:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000272:	e8 fc ff ff ff       	call   10000273 <start(void*)+0xd3>	10000273: R_386_PC32	NIWindow::realdraw()
10000277:	58                   	pop    eax
10000278:	5a                   	pop    edx
10000279:	68 7c 01 00 00       	push   0x17c
1000027e:	68 f4 01 00 00       	push   0x1f4
10000283:	68 96 00 00 00       	push   0x96
10000288:	68 c8 00 00 00       	push   0xc8
1000028d:	56                   	push   esi
1000028e:	8d 5c 24 7c          	lea    ebx,[esp+0x7c]
10000292:	53                   	push   ebx
10000293:	e8 fc ff ff ff       	call   10000294 <start(void*)+0xf4>	10000294: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000298:	83 c4 18             	add    esp,0x18
1000029b:	68 86 01 00 00       	push   0x186
100002a0:	68 fe 01 00 00       	push   0x1fe
100002a5:	68 91 00 00 00       	push   0x91
100002aa:	68 c3 00 00 00       	push   0xc3
100002af:	56                   	push   esi
100002b0:	8d bc 24 a0 00 00 00 	lea    edi,[esp+0xa0]
100002b7:	57                   	push   edi
100002b8:	e8 fc ff ff ff       	call   100002b9 <start(void*)+0x119>	100002b9: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100002bd:	83 c4 14             	add    esp,0x14
100002c0:	57                   	push   edi
100002c1:	e8 fc ff ff ff       	call   100002c2 <start(void*)+0x122>	100002c2: R_386_PC32	NIWindow::SHADOW_TEST()
100002c6:	89 1c 24             	mov    DWORD PTR [esp],ebx
100002c9:	e8 fc ff ff ff       	call   100002ca <start(void*)+0x12a>	100002ca: R_386_PC32	NIWindow::realdraw()
100002ce:	59                   	pop    ecx
100002cf:	5b                   	pop    ebx
100002d0:	68 af 00 00 00       	push   0xaf
100002d5:	68 0e 01 00 00       	push   0x10e
100002da:	68 90 01 00 00       	push   0x190
100002df:	6a 7d                	push   0x7d
100002e1:	56                   	push   esi
100002e2:	8d 9c 24 c4 00 00 00 	lea    ebx,[esp+0xc4]
100002e9:	53                   	push   ebx
100002ea:	e8 fc ff ff ff       	call   100002eb <start(void*)+0x14b>	100002eb: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100002ef:	83 c4 18             	add    esp,0x18
100002f2:	68 b9 00 00 00       	push   0xb9
100002f7:	68 18 01 00 00       	push   0x118
100002fc:	68 8b 01 00 00       	push   0x18b
10000301:	6a 78                	push   0x78
10000303:	56                   	push   esi
10000304:	8d b4 24 e8 00 00 00 	lea    esi,[esp+0xe8]
1000030b:	56                   	push   esi
1000030c:	e8 fc ff ff ff       	call   1000030d <start(void*)+0x16d>	1000030d: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000311:	83 c4 14             	add    esp,0x14
10000314:	56                   	push   esi
10000315:	e8 fc ff ff ff       	call   10000316 <start(void*)+0x176>	10000316: R_386_PC32	NIWindow::SHADOW_TEST()
1000031a:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000031d:	e8 fc ff ff ff       	call   1000031e <start(void*)+0x17e>	1000031e: R_386_PC32	NIWindow::realdraw()
10000322:	83 c4 10             	add    esp,0x10
10000325:	8d 76 00             	lea    esi,[esi+0x0]
10000328:	83 ec 0c             	sub    esp,0xc
1000032b:	6a 02                	push   0x2
1000032d:	e8 fc ff ff ff       	call   1000032e <start(void*)+0x18e>	1000032e: R_386_PC32	blockTask(TaskState)
10000332:	83 c4 10             	add    esp,0x10
10000335:	eb f1                	jmp    10000328 <start(void*)+0x188>
10000337:	90                   	nop

10000338 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10000338:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000033c:	8b 00                	mov    eax,DWORD PTR [eax]
1000033e:	8b 10                	mov    edx,DWORD PTR [eax]
10000340:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000344:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
10000347:	90                   	nop

10000348 <NIContext::drvDarken4(int, int, int)>:
10000348:	55                   	push   ebp
10000349:	57                   	push   edi
1000034a:	56                   	push   esi
1000034b:	53                   	push   ebx
1000034c:	83 ec 20             	sub    esp,0x20
1000034f:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10000353:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10000357:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000035b:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000035f:	8b 07                	mov    eax,DWORD PTR [edi]
10000361:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10000365:	8b 10                	mov    edx,DWORD PTR [eax]
10000367:	56                   	push   esi
10000368:	53                   	push   ebx
10000369:	50                   	push   eax
1000036a:	ff 52 34             	call   DWORD PTR [edx+0x34]
1000036d:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000371:	89 c2                	mov    edx,eax
10000373:	0f b6 ec             	movzx  ebp,ah
10000376:	c1 ea 10             	shr    edx,0x10
10000379:	0f af e9             	imul   ebp,ecx
1000037c:	0f b6 d2             	movzx  edx,dl
1000037f:	0f b6 c0             	movzx  eax,al
10000382:	0f af d1             	imul   edx,ecx
10000385:	0f af c1             	imul   eax,ecx
10000388:	c1 ea 07             	shr    edx,0x7
1000038b:	8b 0f                	mov    ecx,DWORD PTR [edi]
1000038d:	c1 e8 07             	shr    eax,0x7
10000390:	8b 39                	mov    edi,DWORD PTR [ecx]
10000392:	c1 e2 10             	shl    edx,0x10
10000395:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10000399:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
1000039d:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
100003a1:	c1 ed 07             	shr    ebp,0x7
100003a4:	c1 e5 08             	shl    ebp,0x8
100003a7:	09 ea                	or     edx,ebp
100003a9:	09 c2                	or     edx,eax
100003ab:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
100003af:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
100003b2:	83 c4 2c             	add    esp,0x2c
100003b5:	5b                   	pop    ebx
100003b6:	5e                   	pop    esi
100003b7:	5f                   	pop    edi
100003b8:	5d                   	pop    ebp
100003b9:	ff e0                	jmp    eax
100003bb:	90                   	nop

100003bc <NIContext::NIContext(Video*, int, int, int, int)>:
100003bc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100003c0:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100003c4:	89 10                	mov    DWORD PTR [eax],edx
100003c6:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100003ca:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100003cd:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100003d1:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
100003d4:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100003d8:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
100003db:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100003df:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
100003e2:	c3                   	ret    
100003e3:	90                   	nop

100003e4 <NIWindow::invalidate()>:
100003e4:	56                   	push   esi
100003e5:	53                   	push   ebx
100003e6:	52                   	push   edx
100003e7:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100003eb:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
100003ef:	74 2e                	je     1000041f <NIWindow::invalidate()+0x3b>
100003f1:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
100003f5:	74 28                	je     1000041f <NIWindow::invalidate()+0x3b>
100003f7:	31 f6                	xor    esi,esi
100003f9:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100003fc:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
100003ff:	7e 12                	jle    10000413 <NIWindow::invalidate()+0x2f>
10000401:	83 ec 0c             	sub    esp,0xc
10000404:	ff 74 f0 04          	push   DWORD PTR [eax+esi*8+0x4]
10000408:	46                   	inc    esi
10000409:	e8 fc ff ff ff       	call   1000040a <NIWindow::invalidate()+0x26>	1000040a: R_386_PC32	free
1000040e:	83 c4 10             	add    esp,0x10
10000411:	eb e6                	jmp    100003f9 <NIWindow::invalidate()+0x15>
10000413:	83 ec 0c             	sub    esp,0xc
10000416:	50                   	push   eax
10000417:	e8 fc ff ff ff       	call   10000418 <NIWindow::invalidate()+0x34>	10000418: R_386_PC32	free
1000041c:	83 c4 10             	add    esp,0x10
1000041f:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10000426:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
1000042d:	c6 43 08 00          	mov    BYTE PTR [ebx+0x8],0x0
10000431:	58                   	pop    eax
10000432:	5b                   	pop    ebx
10000433:	5e                   	pop    esi
10000434:	c3                   	ret    
10000435:	90                   	nop

10000436 <NIWindow::putpixel(int, int, unsigned int)>:
10000436:	56                   	push   esi
10000437:	53                   	push   ebx
10000438:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
1000043c:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000440:	8b 5a 04             	mov    ebx,DWORD PTR [edx+0x4]
10000443:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000447:	8b 52 10             	mov    edx,DWORD PTR [edx+0x10]
1000044a:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000044e:	8b 54 f2 04          	mov    edx,DWORD PTR [edx+esi*8+0x4]
10000452:	83 fb 04             	cmp    ebx,0x4
10000455:	75 05                	jne    1000045c <NIWindow::putpixel(int, int, unsigned int)+0x26>
10000457:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
1000045a:	eb 0e                	jmp    1000046a <NIWindow::putpixel(int, int, unsigned int)+0x34>
1000045c:	83 fb 02             	cmp    ebx,0x2
1000045f:	75 06                	jne    10000467 <NIWindow::putpixel(int, int, unsigned int)+0x31>
10000461:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10000465:	eb 03                	jmp    1000046a <NIWindow::putpixel(int, int, unsigned int)+0x34>
10000467:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
1000046a:	5b                   	pop    ebx
1000046b:	5e                   	pop    esi
1000046c:	c3                   	ret    
1000046d:	90                   	nop

1000046e <NIWindow::rerender()>:
1000046e:	55                   	push   ebp
1000046f:	57                   	push   edi
10000470:	56                   	push   esi
10000471:	53                   	push   ebx
10000472:	83 ec 0c             	sub    esp,0xc
10000475:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000479:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
1000047d:	74 0c                	je     1000048b <NIWindow::rerender()+0x1d>
1000047f:	83 ec 0c             	sub    esp,0xc
10000482:	53                   	push   ebx
10000483:	e8 fc ff ff ff       	call   10000484 <NIWindow::rerender()+0x16>	10000484: R_386_PC32	NIWindow::invalidate()
10000488:	83 c4 10             	add    esp,0x10
1000048b:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000048e:	83 ec 0c             	sub    esp,0xc
10000491:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10000494:	31 f6                	xor    esi,esi
10000496:	c1 e0 03             	shl    eax,0x3
10000499:	50                   	push   eax
1000049a:	e8 fc ff ff ff       	call   1000049b <NIWindow::rerender()+0x2d>	1000049b: R_386_PC32	malloc
1000049f:	83 c4 10             	add    esp,0x10
100004a2:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100004a5:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
100004a8:	0f 8e 88 00 00 00    	jle    10000536 <NIWindow::rerender()+0xc8>
100004ae:	8d 04 f5 00 00 00 00 	lea    eax,[esi*8+0x0]
100004b5:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
100004b8:	01 c1                	add    ecx,eax
100004ba:	83 fe 06             	cmp    esi,0x6
100004bd:	7f 1b                	jg     100004da <NIWindow::rerender()+0x6c>
100004bf:	8b 14 b5 00 00 00 00 	mov    edx,DWORD PTR [esi*4+0x0]	100004c2: R_386_32	curveLookup7
100004c6:	66 89 11             	mov    WORD PTR [ecx],dx
100004c9:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
100004cc:	8b 0c b5 00 00 00 00 	mov    ecx,DWORD PTR [esi*4+0x0]	100004cf: R_386_32	curveLookup7
100004d3:	66 89 4c 02 02       	mov    WORD PTR [edx+eax*1+0x2],cx
100004d8:	eb 3b                	jmp    10000515 <NIWindow::rerender()+0xa7>
100004da:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
100004dd:	8d 7a fa             	lea    edi,[edx-0x6]
100004e0:	39 f7                	cmp    edi,esi
100004e2:	7f 22                	jg     10000506 <NIWindow::rerender()+0x98>
100004e4:	29 f2                	sub    edx,esi
100004e6:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	100004e9: R_386_32	curveLookup7
100004ed:	66 89 11             	mov    WORD PTR [ecx],dx
100004f0:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
100004f3:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
100004f6:	29 f2                	sub    edx,esi
100004f8:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	100004fb: R_386_32	curveLookup7
100004ff:	66 89 54 01 02       	mov    WORD PTR [ecx+eax*1+0x2],dx
10000504:	eb 0f                	jmp    10000515 <NIWindow::rerender()+0xa7>
10000506:	66 c7 01 00 00       	mov    WORD PTR [ecx],0x0
1000050b:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
1000050e:	66 c7 44 02 02 00 00 	mov    WORD PTR [edx+eax*1+0x2],0x0
10000515:	03 43 10             	add    eax,DWORD PTR [ebx+0x10]
10000518:	83 ec 0c             	sub    esp,0xc
1000051b:	89 c7                	mov    edi,eax
1000051d:	46                   	inc    esi
1000051e:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10000521:	0f af 43 04          	imul   eax,DWORD PTR [ebx+0x4]
10000525:	50                   	push   eax
10000526:	e8 fc ff ff ff       	call   10000527 <NIWindow::rerender()+0xb9>	10000527: R_386_PC32	malloc
1000052b:	83 c4 10             	add    esp,0x10
1000052e:	89 47 04             	mov    DWORD PTR [edi+0x4],eax
10000531:	e9 6f ff ff ff       	jmp    100004a5 <NIWindow::rerender()+0x37>
10000536:	31 ff                	xor    edi,edi
10000538:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
1000053b:	7e 30                	jle    1000056d <NIWindow::rerender()+0xff>
1000053d:	31 c0                	xor    eax,eax
1000053f:	83 ff 19             	cmp    edi,0x19
10000542:	0f 9e c0             	setle  al
10000545:	31 ed                	xor    ebp,ebp
10000547:	89 c6                	mov    esi,eax
10000549:	4e                   	dec    esi
1000054a:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
10000550:	81 c6 ff ff ff 00    	add    esi,0xffffff
10000556:	39 6b 1c             	cmp    DWORD PTR [ebx+0x1c],ebp
10000559:	7e 0f                	jle    1000056a <NIWindow::rerender()+0xfc>
1000055b:	56                   	push   esi
1000055c:	57                   	push   edi
1000055d:	55                   	push   ebp
1000055e:	45                   	inc    ebp
1000055f:	53                   	push   ebx
10000560:	e8 fc ff ff ff       	call   10000561 <NIWindow::rerender()+0xf3>	10000561: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10000565:	83 c4 10             	add    esp,0x10
10000568:	eb ec                	jmp    10000556 <NIWindow::rerender()+0xe8>
1000056a:	47                   	inc    edi
1000056b:	eb cb                	jmp    10000538 <NIWindow::rerender()+0xca>
1000056d:	83 c4 0c             	add    esp,0xc
10000570:	5b                   	pop    ebx
10000571:	5e                   	pop    esi
10000572:	5f                   	pop    edi
10000573:	5d                   	pop    ebp
10000574:	c3                   	ret    
10000575:	90                   	nop

10000576 <NIWindow::changeContext(NIContext*, int, int)>:
10000576:	55                   	push   ebp
10000577:	57                   	push   edi
10000578:	56                   	push   esi
10000579:	53                   	push   ebx
1000057a:	83 ec 18             	sub    esp,0x18
1000057d:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10000581:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10000585:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10000589:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000058d:	53                   	push   ebx
1000058e:	e8 fc ff ff ff       	call   1000058f <NIWindow::changeContext(NIContext*, int, int)+0x19>	1000058f: R_386_PC32	NIWindow::invalidate()
10000593:	89 33                	mov    DWORD PTR [ebx],esi
10000595:	89 6b 14             	mov    DWORD PTR [ebx+0x14],ebp
10000598:	89 7b 18             	mov    DWORD PTR [ebx+0x18],edi
1000059b:	83 c4 10             	add    esp,0x10
1000059e:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
100005a1:	83 f8 08             	cmp    eax,0x8
100005a4:	7f 09                	jg     100005af <NIWindow::changeContext(NIContext*, int, int)+0x39>
100005a6:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
100005ad:	eb 15                	jmp    100005c4 <NIWindow::changeContext(NIContext*, int, int)+0x4e>
100005af:	83 f8 10             	cmp    eax,0x10
100005b2:	7f 09                	jg     100005bd <NIWindow::changeContext(NIContext*, int, int)+0x47>
100005b4:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
100005bb:	eb 07                	jmp    100005c4 <NIWindow::changeContext(NIContext*, int, int)+0x4e>
100005bd:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
100005c4:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
100005c8:	83 c4 0c             	add    esp,0xc
100005cb:	5b                   	pop    ebx
100005cc:	5e                   	pop    esi
100005cd:	5f                   	pop    edi
100005ce:	5d                   	pop    ebp
100005cf:	e9 9a fe ff ff       	jmp    1000046e <NIWindow::rerender()>

100005d4 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
100005d4:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100005d8:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100005dc:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
100005df:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100005e3:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
100005e6:	c6 40 08 00          	mov    BYTE PTR [eax+0x8],0x0
100005ea:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
100005f1:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
100005f8:	e9 79 ff ff ff       	jmp    10000576 <NIWindow::changeContext(NIContext*, int, int)>
100005fd:	90                   	nop

100005fe <NIWindow::request()>:
100005fe:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000602:	80 78 08 00          	cmp    BYTE PTR [eax+0x8],0x0
10000606:	75 05                	jne    1000060d <NIWindow::request()+0xf>
10000608:	e9 61 fe ff ff       	jmp    1000046e <NIWindow::rerender()>
1000060d:	c3                   	ret    

1000060e <NIWindow::SHADOW_TEST()>:
1000060e:	55                   	push   ebp
1000060f:	57                   	push   edi
10000610:	56                   	push   esi
10000611:	53                   	push   ebx
10000612:	83 ec 28             	sub    esp,0x28
10000615:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10000619:	53                   	push   ebx
1000061a:	e8 fc ff ff ff       	call   1000061b <NIWindow::SHADOW_TEST()+0xd>	1000061b: R_386_PC32	NIWindow::request()
1000061f:	83 c4 10             	add    esp,0x10
10000622:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10000625:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10000628:	74 10                	je     1000063a <NIWindow::SHADOW_TEST()+0x2c>
1000062a:	83 ec 0c             	sub    esp,0xc
1000062d:	68 fd 07 00 10       	push   0x100007fd	1000062e: R_386_32	.text
10000632:	e8 fc ff ff ff       	call   10000633 <NIWindow::SHADOW_TEST()+0x25>	10000633: R_386_PC32	KePanic(char const*)
10000637:	83 c4 10             	add    esp,0x10
1000063a:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
1000063e:	0f 85 28 01 00 00    	jne    1000076c <NIWindow::SHADOW_TEST()+0x15e>
10000644:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
1000064c:	31 ff                	xor    edi,edi
1000064e:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
10000651:	0f 8e 15 01 00 00    	jle    1000076c <NIWindow::SHADOW_TEST()+0x15e>
10000657:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000065a:	8d 04 f8             	lea    eax,[eax+edi*8]
1000065d:	0f b7 30             	movzx  esi,WORD PTR [eax]
10000660:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10000664:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10000668:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000066c:	89 34 24             	mov    DWORD PTR [esp],esi
1000066f:	8b 6b 1c             	mov    ebp,DWORD PTR [ebx+0x1c]
10000672:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10000675:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10000679:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
1000067c:	0f 8e d4 00 00 00    	jle    10000756 <NIWindow::SHADOW_TEST()+0x148>
10000682:	83 ff 05             	cmp    edi,0x5
10000685:	7e 1f                	jle    100006a6 <NIWindow::SHADOW_TEST()+0x98>
10000687:	8d 41 fb             	lea    eax,[ecx-0x5]
1000068a:	39 f8                	cmp    eax,edi
1000068c:	7e 18                	jle    100006a6 <NIWindow::SHADOW_TEST()+0x98>
1000068e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000692:	83 c0 05             	add    eax,0x5
10000695:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10000698:	7d 0c                	jge    100006a6 <NIWindow::SHADOW_TEST()+0x98>
1000069a:	8d 45 fb             	lea    eax,[ebp-0x5]
1000069d:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100006a0:	0f 8f a8 00 00 00    	jg     1000074e <NIWindow::SHADOW_TEST()+0x140>
100006a6:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
100006aa:	be ea 01 00 00       	mov    esi,0x1ea
100006af:	29 f9                	sub    ecx,edi
100006b1:	89 f0                	mov    eax,esi
100006b3:	83 c1 04             	add    ecx,0x4
100006b6:	99                   	cdq    
100006b7:	f7 f9                	idiv   ecx
100006b9:	89 c1                	mov    ecx,eax
100006bb:	89 f0                	mov    eax,esi
100006bd:	99                   	cdq    
100006be:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
100006c2:	83 f8 0a             	cmp    eax,0xa
100006c5:	7d 05                	jge    100006cc <NIWindow::SHADOW_TEST()+0xbe>
100006c7:	b8 0a 00 00 00       	mov    eax,0xa
100006cc:	39 c1                	cmp    ecx,eax
100006ce:	7d 02                	jge    100006d2 <NIWindow::SHADOW_TEST()+0xc4>
100006d0:	89 c1                	mov    ecx,eax
100006d2:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
100006d5:	b8 ea 01 00 00       	mov    eax,0x1ea
100006da:	83 c5 04             	add    ebp,0x4
100006dd:	99                   	cdq    
100006de:	f7 fd                	idiv   ebp
100006e0:	89 c6                	mov    esi,eax
100006e2:	83 f8 0a             	cmp    eax,0xa
100006e5:	7d 05                	jge    100006ec <NIWindow::SHADOW_TEST()+0xde>
100006e7:	be 0a 00 00 00       	mov    esi,0xa
100006ec:	8b 04 24             	mov    eax,DWORD PTR [esp]
100006ef:	8d 68 05             	lea    ebp,[eax+0x5]
100006f2:	b8 ea 01 00 00       	mov    eax,0x1ea
100006f7:	99                   	cdq    
100006f8:	f7 fd                	idiv   ebp
100006fa:	39 c6                	cmp    esi,eax
100006fc:	7d 02                	jge    10000700 <NIWindow::SHADOW_TEST()+0xf2>
100006fe:	89 c6                	mov    esi,eax
10000700:	89 f0                	mov    eax,esi
10000702:	89 ca                	mov    edx,ecx
10000704:	0f af c6             	imul   eax,esi
10000707:	0f af d1             	imul   edx,ecx
1000070a:	0f af f1             	imul   esi,ecx
1000070d:	01 d0                	add    eax,edx
1000070f:	8d 04 c6             	lea    eax,[esi+eax*8]
10000712:	c1 f8 08             	sar    eax,0x8
10000715:	83 f8 66             	cmp    eax,0x66
10000718:	7e 46                	jle    10000760 <NIWindow::SHADOW_TEST()+0x152>
1000071a:	8d 50 9a             	lea    edx,[eax-0x66]
1000071d:	d1 fa                	sar    edx,1
1000071f:	8d 42 66             	lea    eax,[edx+0x66]
10000722:	83 f8 73             	cmp    eax,0x73
10000725:	7e 39                	jle    10000760 <NIWindow::SHADOW_TEST()+0x152>
10000727:	83 ea 0d             	sub    edx,0xd
1000072a:	c1 fa 02             	sar    edx,0x2
1000072d:	8d 42 73             	lea    eax,[edx+0x73]
10000730:	83 f8 7f             	cmp    eax,0x7f
10000733:	7f 19                	jg     1000074e <NIWindow::SHADOW_TEST()+0x140>
10000735:	50                   	push   eax
10000736:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10000739:	01 f8                	add    eax,edi
1000073b:	50                   	push   eax
1000073c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000740:	03 43 14             	add    eax,DWORD PTR [ebx+0x14]
10000743:	50                   	push   eax
10000744:	ff 33                	push   DWORD PTR [ebx]
10000746:	e8 fc ff ff ff       	call   10000747 <NIWindow::SHADOW_TEST()+0x139>	10000747: R_386_PC32	NIContext::drvDarken4(int, int, int)
1000074b:	83 c4 10             	add    esp,0x10
1000074e:	ff 04 24             	inc    DWORD PTR [esp]
10000751:	e9 19 ff ff ff       	jmp    1000066f <NIWindow::SHADOW_TEST()+0x61>
10000756:	47                   	inc    edi
10000757:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000075b:	e9 ee fe ff ff       	jmp    1000064e <NIWindow::SHADOW_TEST()+0x40>
10000760:	83 f8 0a             	cmp    eax,0xa
10000763:	7d d0                	jge    10000735 <NIWindow::SHADOW_TEST()+0x127>
10000765:	b8 0a 00 00 00       	mov    eax,0xa
1000076a:	eb c9                	jmp    10000735 <NIWindow::SHADOW_TEST()+0x127>
1000076c:	83 c4 1c             	add    esp,0x1c
1000076f:	5b                   	pop    ebx
10000770:	5e                   	pop    esi
10000771:	5f                   	pop    edi
10000772:	5d                   	pop    ebp
10000773:	c3                   	ret    

10000774 <NIWindow::realdraw()>:
10000774:	55                   	push   ebp
10000775:	57                   	push   edi
10000776:	56                   	push   esi
10000777:	53                   	push   ebx
10000778:	83 ec 28             	sub    esp,0x28
1000077b:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
1000077f:	53                   	push   ebx
10000780:	e8 fc ff ff ff       	call   10000781 <NIWindow::realdraw()+0xd>	10000781: R_386_PC32	NIWindow::request()
10000785:	83 c4 10             	add    esp,0x10
10000788:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000078b:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
1000078e:	74 10                	je     100007a0 <NIWindow::realdraw()+0x2c>
10000790:	83 ec 0c             	sub    esp,0xc
10000793:	68 fd 07 00 10       	push   0x100007fd	10000794: R_386_32	.text
10000798:	e8 fc ff ff ff       	call   10000799 <NIWindow::realdraw()+0x25>	10000799: R_386_PC32	KePanic(char const*)
1000079d:	83 c4 10             	add    esp,0x10
100007a0:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100007a4:	75 4f                	jne    100007f5 <NIWindow::realdraw()+0x81>
100007a6:	31 f6                	xor    esi,esi
100007a8:	39 73 20             	cmp    DWORD PTR [ebx+0x20],esi
100007ab:	7e 48                	jle    100007f5 <NIWindow::realdraw()+0x81>
100007ad:	8d 2c f5 00 00 00 00 	lea    ebp,[esi*8+0x0]
100007b4:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100007b7:	01 e8                	add    eax,ebp
100007b9:	0f b7 38             	movzx  edi,WORD PTR [eax]
100007bc:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
100007c0:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100007c4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100007c7:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
100007cb:	39 f8                	cmp    eax,edi
100007cd:	7e 23                	jle    100007f2 <NIWindow::realdraw()+0x7e>
100007cf:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100007d2:	8b 44 28 04          	mov    eax,DWORD PTR [eax+ebp*1+0x4]
100007d6:	ff 34 b8             	push   DWORD PTR [eax+edi*4]
100007d9:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100007dc:	01 f0                	add    eax,esi
100007de:	50                   	push   eax
100007df:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100007e2:	01 f8                	add    eax,edi
100007e4:	47                   	inc    edi
100007e5:	50                   	push   eax
100007e6:	ff 33                	push   DWORD PTR [ebx]
100007e8:	e8 fc ff ff ff       	call   100007e9 <NIWindow::realdraw()+0x75>	100007e9: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
100007ed:	83 c4 10             	add    esp,0x10
100007f0:	eb d2                	jmp    100007c4 <NIWindow::realdraw()+0x50>
100007f2:	46                   	inc    esi
100007f3:	eb b3                	jmp    100007a8 <NIWindow::realdraw()+0x34>
100007f5:	83 c4 1c             	add    esp,0x1c
100007f8:	5b                   	pop    ebx
100007f9:	5e                   	pop    esi
100007fa:	5f                   	pop    edi
100007fb:	5d                   	pop    ebp
100007fc:	c3                   	ret    
100007fd:	41                   	inc    ecx
100007fe:	53                   	push   ebx
100007ff:	53                   	push   ebx
10000800:	45                   	inc    ebp
10000801:	52                   	push   edx
10000802:	54                   	push   esp
10000803:	49                   	dec    ecx
10000804:	4f                   	dec    edi
10000805:	4e                   	dec    esi
10000806:	20 46 41             	and    BYTE PTR [esi+0x41],al
10000809:	49                   	dec    ecx
1000080a:	4c                   	dec    esp
1000080b:	55                   	push   ebp
1000080c:	52                   	push   edx
1000080d:	45                   	inc    ebp
1000080e:	20 28                	and    BYTE PTR [eax],ch
10000810:	41                   	inc    ecx
10000811:	29 2e                	sub    DWORD PTR [esi],ebp
	...
