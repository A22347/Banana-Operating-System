
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <NiMain(void*)>:
10000000:	eb fe                	jmp    10000000 <NiMain(void*)>
10000002:	66 90                	xchg   ax,ax

10000004 <NiBegin(void*)>:
10000004:	ff 74 24 04          	push   DWORD PTR [esp+0x4]
10000008:	e8 fc ff ff ff       	call   10000009 <NiBegin(void*)+0x5>	10000009: R_386_PC32	NiMain(void*)
1000000d:	90                   	nop

1000000e <_ssfn__bitreverse16>:
1000000e:	89 c2                	mov    edx,eax
10000010:	01 c0                	add    eax,eax
10000012:	d1 fa                	sar    edx,1
10000014:	25 aa aa 00 00       	and    eax,0xaaaa
10000019:	81 e2 55 55 00 00    	and    edx,0x5555
1000001f:	09 c2                	or     edx,eax
10000021:	89 d0                	mov    eax,edx
10000023:	c1 e2 02             	shl    edx,0x2
10000026:	c1 f8 02             	sar    eax,0x2
10000029:	81 e2 cc cc 00 00    	and    edx,0xcccc
1000002f:	25 33 33 00 00       	and    eax,0x3333
10000034:	09 d0                	or     eax,edx
10000036:	89 c2                	mov    edx,eax
10000038:	c1 e0 04             	shl    eax,0x4
1000003b:	c1 fa 04             	sar    edx,0x4
1000003e:	25 f0 f0 00 00       	and    eax,0xf0f0
10000043:	81 e2 0f 0f 00 00    	and    edx,0xf0f
10000049:	09 c2                	or     edx,eax
1000004b:	89 d1                	mov    ecx,edx
1000004d:	c1 e2 08             	shl    edx,0x8
10000050:	c1 f9 08             	sar    ecx,0x8
10000053:	0f b7 c2             	movzx  eax,dx
10000056:	09 c8                	or     eax,ecx
10000058:	c3                   	ret    

10000059 <_ssfn__zhuffman_decode>:
10000059:	55                   	push   ebp
1000005a:	57                   	push   edi
1000005b:	56                   	push   esi
1000005c:	53                   	push   ebx
1000005d:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
10000061:	7f 1d                	jg     10000080 <_ssfn__zhuffman_decode+0x27>
10000063:	8b 18                	mov    ebx,DWORD PTR [eax]
10000065:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000068:	89 08                	mov    DWORD PTR [eax],ecx
1000006a:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000006d:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000070:	d3 e3                	shl    ebx,cl
10000072:	83 c1 08             	add    ecx,0x8
10000075:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
10000078:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
1000007b:	83 f9 18             	cmp    ecx,0x18
1000007e:	eb e1                	jmp    10000061 <_ssfn__zhuffman_decode+0x8>
10000080:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
10000083:	89 f9                	mov    ecx,edi
10000085:	81 e1 ff 01 00 00    	and    ecx,0x1ff
1000008b:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
1000008f:	89 cb                	mov    ebx,ecx
10000091:	85 c9                	test   ecx,ecx
10000093:	74 15                	je     100000aa <_ssfn__zhuffman_decode+0x51>
10000095:	c1 f9 09             	sar    ecx,0x9
10000098:	89 da                	mov    edx,ebx
1000009a:	d3 ef                	shr    edi,cl
1000009c:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
1000009f:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100000a2:	81 e2 ff 01 00 00    	and    edx,0x1ff
100000a8:	eb 58                	jmp    10000102 <_ssfn__zhuffman_decode+0xa9>
100000aa:	89 d5                	mov    ebp,edx
100000ac:	89 c3                	mov    ebx,eax
100000ae:	be 0a 00 00 00       	mov    esi,0xa
100000b3:	89 f8                	mov    eax,edi
100000b5:	e8 54 ff ff ff       	call   1000000e <_ssfn__bitreverse16>
100000ba:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
100000c1:	7c 03                	jl     100000c6 <_ssfn__zhuffman_decode+0x6d>
100000c3:	46                   	inc    esi
100000c4:	eb f4                	jmp    100000ba <_ssfn__zhuffman_decode+0x61>
100000c6:	83 ca ff             	or     edx,0xffffffff
100000c9:	83 fe 10             	cmp    esi,0x10
100000cc:	74 34                	je     10000102 <_ssfn__zhuffman_decode+0xa9>
100000ce:	8d 14 36             	lea    edx,[esi+esi*1]
100000d1:	b9 10 00 00 00       	mov    ecx,0x10
100000d6:	01 ea                	add    edx,ebp
100000d8:	29 f1                	sub    ecx,esi
100000da:	d3 f8                	sar    eax,cl
100000dc:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
100000e3:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
100000ea:	29 c8                	sub    eax,ecx
100000ec:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
100000ef:	89 f1                	mov    ecx,esi
100000f1:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
100000f8:	d3 ef                	shr    edi,cl
100000fa:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
100000fd:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000102:	5b                   	pop    ebx
10000103:	89 d0                	mov    eax,edx
10000105:	5e                   	pop    esi
10000106:	5f                   	pop    edi
10000107:	5d                   	pop    ebp
10000108:	c3                   	ret    

10000109 <_ssfn__zexpand>:
10000109:	55                   	push   ebp
1000010a:	57                   	push   edi
1000010b:	56                   	push   esi
1000010c:	53                   	push   ebx
1000010d:	83 ec 0c             	sub    esp,0xc
10000110:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000113:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000116:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
10000119:	29 f9                	sub    ecx,edi
1000011b:	83 f9 08             	cmp    ecx,0x8
1000011e:	74 04                	je     10000124 <_ssfn__zexpand+0x1b>
10000120:	31 c0                	xor    eax,eax
10000122:	eb 3c                	jmp    10000160 <_ssfn__zexpand+0x57>
10000124:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000127:	75 f7                	jne    10000120 <_ssfn__zexpand+0x17>
10000129:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000012d:	75 f1                	jne    10000120 <_ssfn__zexpand+0x17>
1000012f:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000133:	75 eb                	jne    10000120 <_ssfn__zexpand+0x17>
10000135:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
10000138:	89 c3                	mov    ebx,eax
1000013a:	89 d6                	mov    esi,edx
1000013c:	50                   	push   eax
1000013d:	50                   	push   eax
1000013e:	55                   	push   ebp
1000013f:	57                   	push   edi
10000140:	e8 fc ff ff ff       	call   10000141 <_ssfn__zexpand+0x38>	10000141: R_386_PC32	realloc
10000145:	83 c4 10             	add    esp,0x10
10000148:	85 c0                	test   eax,eax
1000014a:	74 d4                	je     10000120 <_ssfn__zexpand+0x17>
1000014c:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000014f:	29 fe                	sub    esi,edi
10000151:	01 c6                	add    esi,eax
10000153:	01 e8                	add    eax,ebp
10000155:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
10000158:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000015b:	b8 01 00 00 00       	mov    eax,0x1
10000160:	83 c4 0c             	add    esp,0xc
10000163:	5b                   	pop    ebx
10000164:	5e                   	pop    esi
10000165:	5f                   	pop    edi
10000166:	5d                   	pop    ebp
10000167:	c3                   	ret    

10000168 <_ssfn__zbuild_huffman>:
10000168:	55                   	push   ebp
10000169:	57                   	push   edi
1000016a:	56                   	push   esi
1000016b:	53                   	push   ebx
1000016c:	89 c3                	mov    ebx,eax
1000016e:	81 ec a0 00 00 00    	sub    esp,0xa0
10000174:	31 c0                	xor    eax,eax
10000176:	89 0c 24             	mov    DWORD PTR [esp],ecx
10000179:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
1000017d:	b9 11 00 00 00       	mov    ecx,0x11
10000182:	89 ef                	mov    edi,ebp
10000184:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10000188:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000018a:	b9 00 01 00 00       	mov    ecx,0x100
1000018f:	89 df                	mov    edi,ebx
10000191:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000193:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10000196:	7d 0f                	jge    100001a7 <_ssfn__zbuild_huffman+0x3f>
10000198:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000019c:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100001a0:	40                   	inc    eax
100001a1:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100001a5:	eb ec                	jmp    10000193 <_ssfn__zbuild_huffman+0x2b>
100001a7:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100001af:	b9 01 00 00 00       	mov    ecx,0x1
100001b4:	b8 01 00 00 00       	mov    eax,0x1
100001b9:	89 c7                	mov    edi,eax
100001bb:	d3 e7                	shl    edi,cl
100001bd:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
100001c1:	0f 8f 10 01 00 00    	jg     100002d7 <_ssfn__zbuild_huffman+0x16f>
100001c7:	41                   	inc    ecx
100001c8:	83 f9 10             	cmp    ecx,0x10
100001cb:	75 ec                	jne    100001b9 <_ssfn__zbuild_huffman+0x51>
100001cd:	31 ff                	xor    edi,edi
100001cf:	31 f6                	xor    esi,esi
100001d1:	b8 01 00 00 00       	mov    eax,0x1
100001d6:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
100001da:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
100001de:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
100001e6:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
100001ee:	01 ef                	add    edi,ebp
100001f0:	85 ed                	test   ebp,ebp
100001f2:	74 11                	je     10000205 <_ssfn__zbuild_huffman+0x9d>
100001f4:	ba 01 00 00 00       	mov    edx,0x1
100001f9:	88 c1                	mov    cl,al
100001fb:	d3 e2                	shl    edx,cl
100001fd:	39 fa                	cmp    edx,edi
100001ff:	0f 8c d2 00 00 00    	jl     100002d7 <_ssfn__zbuild_huffman+0x16f>
10000205:	89 fa                	mov    edx,edi
10000207:	b9 10 00 00 00       	mov    ecx,0x10
1000020c:	01 ff                	add    edi,edi
1000020e:	29 c1                	sub    ecx,eax
10000210:	01 ee                	add    esi,ebp
10000212:	d3 e2                	shl    edx,cl
10000214:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
1000021b:	40                   	inc    eax
1000021c:	83 f8 10             	cmp    eax,0x10
1000021f:	75 b5                	jne    100001d6 <_ssfn__zbuild_huffman+0x6e>
10000221:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000224:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
1000022e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000232:	31 ff                	xor    edi,edi
10000234:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10000238:	0f 8d 9d 00 00 00    	jge    100002db <_ssfn__zbuild_huffman+0x173>
1000023e:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000242:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000246:	89 f2                	mov    edx,esi
10000248:	85 f6                	test   esi,esi
1000024a:	0f 84 81 00 00 00    	je     100002d1 <_ssfn__zbuild_huffman+0x169>
10000250:	8d 0c 36             	lea    ecx,[esi+esi*1]
10000253:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
10000257:	8d 04 19             	lea    eax,[ecx+ebx*1]
1000025a:	89 e9                	mov    ecx,ebp
1000025c:	89 04 24             	mov    DWORD PTR [esp],eax
1000025f:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
10000266:	29 c1                	sub    ecx,eax
10000268:	89 c8                	mov    eax,ecx
1000026a:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000026d:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
10000274:	01 c8                	add    eax,ecx
10000276:	83 fe 09             	cmp    esi,0x9
10000279:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
10000280:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
10000288:	7f 42                	jg     100002cc <_ssfn__zbuild_huffman+0x164>
1000028a:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
1000028e:	89 e8                	mov    eax,ebp
10000290:	e8 79 fd ff ff       	call   1000000e <_ssfn__bitreverse16>
10000295:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
10000299:	b9 10 00 00 00       	mov    ecx,0x10
1000029e:	29 f1                	sub    ecx,esi
100002a0:	d3 f8                	sar    eax,cl
100002a2:	88 d1                	mov    cl,dl
100002a4:	89 04 24             	mov    DWORD PTR [esp],eax
100002a7:	89 f2                	mov    edx,esi
100002a9:	b8 01 00 00 00       	mov    eax,0x1
100002ae:	c1 e2 09             	shl    edx,0x9
100002b1:	d3 e0                	shl    eax,cl
100002b3:	09 fa                	or     edx,edi
100002b5:	89 c1                	mov    ecx,eax
100002b7:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
100002be:	7f 0c                	jg     100002cc <_ssfn__zbuild_huffman+0x164>
100002c0:	8b 04 24             	mov    eax,DWORD PTR [esp]
100002c3:	01 0c 24             	add    DWORD PTR [esp],ecx
100002c6:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
100002ca:	eb eb                	jmp    100002b7 <_ssfn__zbuild_huffman+0x14f>
100002cc:	45                   	inc    ebp
100002cd:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
100002d1:	47                   	inc    edi
100002d2:	e9 5d ff ff ff       	jmp    10000234 <_ssfn__zbuild_huffman+0xcc>
100002d7:	31 c0                	xor    eax,eax
100002d9:	eb 05                	jmp    100002e0 <_ssfn__zbuild_huffman+0x178>
100002db:	b8 01 00 00 00       	mov    eax,0x1
100002e0:	81 c4 a0 00 00 00    	add    esp,0xa0
100002e6:	5b                   	pop    ebx
100002e7:	5e                   	pop    esi
100002e8:	5f                   	pop    edi
100002e9:	5d                   	pop    ebp
100002ea:	c3                   	ret    

100002eb <_ssfn_fc.part.1>:
100002eb:	55                   	push   ebp
100002ec:	57                   	push   edi
100002ed:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
100002f3:	56                   	push   esi
100002f4:	53                   	push   ebx
100002f5:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
100002fb:	83 ec 0c             	sub    esp,0xc
100002fe:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10000301:	74 5d                	je     10000360 <_ssfn_fc.part.1+0x75>
10000303:	31 f6                	xor    esi,esi
10000305:	8b 03                	mov    eax,DWORD PTR [ebx]
10000307:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
1000030b:	74 35                	je     10000342 <_ssfn_fc.part.1+0x57>
1000030d:	31 ed                	xor    ebp,ebp
1000030f:	8b 03                	mov    eax,DWORD PTR [ebx]
10000311:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000314:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000317:	85 c0                	test   eax,eax
10000319:	74 0c                	je     10000327 <_ssfn_fc.part.1+0x3c>
1000031b:	83 ec 0c             	sub    esp,0xc
1000031e:	50                   	push   eax
1000031f:	e8 fc ff ff ff       	call   10000320 <_ssfn_fc.part.1+0x35>	10000320: R_386_PC32	free
10000324:	83 c4 10             	add    esp,0x10
10000327:	83 c5 04             	add    ebp,0x4
1000032a:	81 fd 00 04 00 00    	cmp    ebp,0x400
10000330:	75 dd                	jne    1000030f <_ssfn_fc.part.1+0x24>
10000332:	83 ec 0c             	sub    esp,0xc
10000335:	8b 03                	mov    eax,DWORD PTR [ebx]
10000337:	ff 34 30             	push   DWORD PTR [eax+esi*1]
1000033a:	e8 fc ff ff ff       	call   1000033b <_ssfn_fc.part.1+0x50>	1000033b: R_386_PC32	free
1000033f:	83 c4 10             	add    esp,0x10
10000342:	83 c6 04             	add    esi,0x4
10000345:	81 fe 00 04 00 00    	cmp    esi,0x400
1000034b:	75 b8                	jne    10000305 <_ssfn_fc.part.1+0x1a>
1000034d:	83 ec 0c             	sub    esp,0xc
10000350:	ff 33                	push   DWORD PTR [ebx]
10000352:	e8 fc ff ff ff       	call   10000353 <_ssfn_fc.part.1+0x68>	10000353: R_386_PC32	free
10000357:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
1000035d:	83 c4 10             	add    esp,0x10
10000360:	83 c3 04             	add    ebx,0x4
10000363:	39 fb                	cmp    ebx,edi
10000365:	75 97                	jne    100002fe <_ssfn_fc.part.1+0x13>
10000367:	83 c4 0c             	add    esp,0xc
1000036a:	5b                   	pop    ebx
1000036b:	5e                   	pop    esi
1000036c:	5f                   	pop    edi
1000036d:	5d                   	pop    ebp
1000036e:	c3                   	ret    

1000036f <_ssfn_l>:
1000036f:	57                   	push   edi
10000370:	56                   	push   esi
10000371:	53                   	push   ebx
10000372:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000376:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000037a:	39 ce                	cmp    esi,ecx
1000037c:	89 f3                	mov    ebx,esi
1000037e:	0f 9d c1             	setge  cl
10000381:	c1 eb 1f             	shr    ebx,0x1f
10000384:	09 d9                	or     ecx,ebx
10000386:	89 fb                	mov    ebx,edi
10000388:	c1 eb 1f             	shr    ebx,0x1f
1000038b:	08 d9                	or     cl,bl
1000038d:	0f 85 e9 00 00 00    	jne    1000047c <_ssfn_l+0x10d>
10000393:	39 d7                	cmp    edi,edx
10000395:	0f 8d e1 00 00 00    	jge    1000047c <_ssfn_l+0x10d>
1000039b:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100003a1:	8d 51 08             	lea    edx,[ecx+0x8]
100003a4:	8d 4f 08             	lea    ecx,[edi+0x8]
100003a7:	c1 fa 04             	sar    edx,0x4
100003aa:	c1 f9 04             	sar    ecx,0x4
100003ad:	39 ca                	cmp    edx,ecx
100003af:	75 1a                	jne    100003cb <_ssfn_l+0x5c>
100003b1:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
100003b7:	8d 4e 08             	lea    ecx,[esi+0x8]
100003ba:	83 c2 08             	add    edx,0x8
100003bd:	c1 f9 04             	sar    ecx,0x4
100003c0:	c1 fa 04             	sar    edx,0x4
100003c3:	39 ca                	cmp    edx,ecx
100003c5:	0f 84 b1 00 00 00    	je     1000047c <_ssfn_l+0x10d>
100003cb:	89 c3                	mov    ebx,eax
100003cd:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
100003d3:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
100003d9:	7f 3e                	jg     10000419 <_ssfn_l+0xaa>
100003db:	05 00 02 00 00       	add    eax,0x200
100003e0:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
100003e6:	52                   	push   edx
100003e7:	01 c0                	add    eax,eax
100003e9:	52                   	push   edx
100003ea:	50                   	push   eax
100003eb:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
100003f1:	e8 fc ff ff ff       	call   100003f2 <_ssfn_l+0x83>	100003f2: R_386_PC32	realloc
100003f6:	83 c4 10             	add    esp,0x10
100003f9:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
100003ff:	85 c0                	test   eax,eax
10000401:	75 16                	jne    10000419 <_ssfn_l+0xaa>
10000403:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000040d:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000417:	eb 63                	jmp    1000047c <_ssfn_l+0x10d>
10000419:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
10000420:	75 26                	jne    10000448 <_ssfn_l+0xd9>
10000422:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000428:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
1000042e:	66 89 10             	mov    WORD PTR [eax],dx
10000431:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000437:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000043d:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
10000441:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000448:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
1000044e:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000454:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
10000458:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
1000045e:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000464:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
10000469:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
1000046f:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000476:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
1000047c:	5b                   	pop    ebx
1000047d:	5e                   	pop    esi
1000047e:	5f                   	pop    edi
1000047f:	c3                   	ret    

10000480 <_ssfn_b>:
10000480:	55                   	push   ebp
10000481:	57                   	push   edi
10000482:	56                   	push   esi
10000483:	53                   	push   ebx
10000484:	83 ec 4c             	sub    esp,0x4c
10000487:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000048b:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
1000048f:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10000493:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
10000497:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000049b:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
1000049f:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100004a3:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100004a7:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100004ab:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100004af:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100004b3:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
100004b7:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100004bb:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
100004bf:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100004c3:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
100004ca:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100004ce:	83 f8 04             	cmp    eax,0x4
100004d1:	75 28                	jne    100004fb <_ssfn_b+0x7b>
100004d3:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004d7:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100004db:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100004df:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
100004e3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100004e7:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
100004eb:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100004ef:	83 c4 4c             	add    esp,0x4c
100004f2:	5b                   	pop    ebx
100004f3:	5e                   	pop    esi
100004f4:	5f                   	pop    edi
100004f5:	5d                   	pop    ebp
100004f6:	e9 74 fe ff ff       	jmp    1000036f <_ssfn_l>
100004fb:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100004ff:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000503:	75 0e                	jne    10000513 <_ssfn_b+0x93>
10000505:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000509:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000050d:	0f 84 19 01 00 00    	je     1000062c <_ssfn_b+0x1ac>
10000513:	be 02 00 00 00       	mov    esi,0x2
10000518:	89 d8                	mov    eax,ebx
1000051a:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
1000051e:	99                   	cdq    
1000051f:	f7 fe                	idiv   esi
10000521:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000525:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000529:	89 e8                	mov    eax,ebp
1000052b:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
1000052f:	99                   	cdq    
10000530:	f7 fe                	idiv   esi
10000532:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000536:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000053a:	89 f8                	mov    eax,edi
1000053c:	29 d8                	sub    eax,ebx
1000053e:	99                   	cdq    
1000053f:	f7 fe                	idiv   esi
10000541:	01 c3                	add    ebx,eax
10000543:	89 c8                	mov    eax,ecx
10000545:	29 e8                	sub    eax,ebp
10000547:	99                   	cdq    
10000548:	f7 fe                	idiv   esi
1000054a:	01 e8                	add    eax,ebp
1000054c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000550:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000554:	29 f8                	sub    eax,edi
10000556:	99                   	cdq    
10000557:	f7 fe                	idiv   esi
10000559:	01 f8                	add    eax,edi
1000055b:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
1000055f:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000563:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000567:	29 c8                	sub    eax,ecx
10000569:	99                   	cdq    
1000056a:	f7 fe                	idiv   esi
1000056c:	01 c8                	add    eax,ecx
1000056e:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10000572:	89 d8                	mov    eax,ebx
10000574:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10000578:	99                   	cdq    
10000579:	f7 fe                	idiv   esi
1000057b:	8d 0c 38             	lea    ecx,[eax+edi*1]
1000057e:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000582:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000586:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000058a:	99                   	cdq    
1000058b:	f7 fe                	idiv   esi
1000058d:	8d 2c 38             	lea    ebp,[eax+edi*1]
10000590:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000594:	29 d8                	sub    eax,ebx
10000596:	99                   	cdq    
10000597:	f7 fe                	idiv   esi
10000599:	83 ec 0c             	sub    esp,0xc
1000059c:	01 d8                	add    eax,ebx
1000059e:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100005a2:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100005a6:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100005aa:	99                   	cdq    
100005ab:	f7 fe                	idiv   esi
100005ad:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100005b1:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100005b5:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100005b9:	29 c8                	sub    eax,ecx
100005bb:	99                   	cdq    
100005bc:	f7 fe                	idiv   esi
100005be:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100005c1:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100005c5:	29 e8                	sub    eax,ebp
100005c7:	99                   	cdq    
100005c8:	f7 fe                	idiv   esi
100005ca:	8d 34 28             	lea    esi,[eax+ebp*1]
100005cd:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100005d1:	8d 78 01             	lea    edi,[eax+0x1]
100005d4:	57                   	push   edi
100005d5:	56                   	push   esi
100005d6:	53                   	push   ebx
100005d7:	55                   	push   ebp
100005d8:	51                   	push   ecx
100005d9:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
100005dd:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
100005e1:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
100005e5:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
100005e9:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100005ed:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100005f1:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100005f5:	e8 86 fe ff ff       	call   10000480 <_ssfn_b>
100005fa:	83 c4 24             	add    esp,0x24
100005fd:	57                   	push   edi
100005fe:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000602:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000606:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000060a:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000060e:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000612:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000616:	56                   	push   esi
10000617:	53                   	push   ebx
10000618:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000061c:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000620:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000624:	e8 57 fe ff ff       	call   10000480 <_ssfn_b>
10000629:	83 c4 30             	add    esp,0x30
1000062c:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10000631:	0f 85 9c fe ff ff    	jne    100004d3 <_ssfn_b+0x53>
10000637:	83 c4 4c             	add    esp,0x4c
1000063a:	5b                   	pop    ebx
1000063b:	5e                   	pop    esi
1000063c:	5f                   	pop    edi
1000063d:	5d                   	pop    ebp
1000063e:	c3                   	ret    

1000063f <_ssfn__zreceive>:
1000063f:	56                   	push   esi
10000640:	53                   	push   ebx
10000641:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000644:	7d 1d                	jge    10000663 <_ssfn__zreceive+0x24>
10000646:	8b 18                	mov    ebx,DWORD PTR [eax]
10000648:	8d 4b 01             	lea    ecx,[ebx+0x1]
1000064b:	89 08                	mov    DWORD PTR [eax],ecx
1000064d:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
10000650:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000653:	d3 e3                	shl    ebx,cl
10000655:	83 c1 08             	add    ecx,0x8
10000658:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
1000065b:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
1000065e:	83 f9 18             	cmp    ecx,0x18
10000661:	7e e3                	jle    10000646 <_ssfn__zreceive+0x7>
10000663:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10000666:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
10000669:	89 f3                	mov    ebx,esi
1000066b:	88 d1                	mov    cl,dl
1000066d:	d3 eb                	shr    ebx,cl
1000066f:	88 d1                	mov    cl,dl
10000671:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10000674:	bb 01 00 00 00       	mov    ebx,0x1
10000679:	d3 e3                	shl    ebx,cl
1000067b:	8d 43 ff             	lea    eax,[ebx-0x1]
1000067e:	5b                   	pop    ebx
1000067f:	21 f0                	and    eax,esi
10000681:	5e                   	pop    esi
10000682:	c3                   	ret    

10000683 <ssfn_utf8>:
10000683:	56                   	push   esi
10000684:	53                   	push   ebx
10000685:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000689:	8b 11                	mov    edx,DWORD PTR [ecx]
1000068b:	0f b6 32             	movzx  esi,BYTE PTR [edx]
1000068e:	89 f0                	mov    eax,esi
10000690:	84 c0                	test   al,al
10000692:	0f be d8             	movsx  ebx,al
10000695:	78 04                	js     1000069b <ssfn_utf8+0x18>
10000697:	89 d8                	mov    eax,ebx
10000699:	eb 7d                	jmp    10000718 <ssfn_utf8+0x95>
1000069b:	f7 c6 20 00 00 00    	test   esi,0x20
100006a1:	75 14                	jne    100006b7 <ssfn_utf8+0x34>
100006a3:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100006a6:	c1 e3 06             	shl    ebx,0x6
100006a9:	83 e0 3f             	and    eax,0x3f
100006ac:	81 e3 c0 07 00 00    	and    ebx,0x7c0
100006b2:	42                   	inc    edx
100006b3:	09 d8                	or     eax,ebx
100006b5:	eb 5f                	jmp    10000716 <ssfn_utf8+0x93>
100006b7:	f7 c6 10 00 00 00    	test   esi,0x10
100006bd:	75 20                	jne    100006df <ssfn_utf8+0x5c>
100006bf:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
100006c3:	c1 e3 0c             	shl    ebx,0xc
100006c6:	c1 e0 06             	shl    eax,0x6
100006c9:	0f b7 db             	movzx  ebx,bx
100006cc:	25 c0 0f 00 00       	and    eax,0xfc0
100006d1:	83 c2 02             	add    edx,0x2
100006d4:	09 d8                	or     eax,ebx
100006d6:	8a 1a                	mov    bl,BYTE PTR [edx]
100006d8:	83 e3 3f             	and    ebx,0x3f
100006db:	09 d8                	or     eax,ebx
100006dd:	eb 37                	jmp    10000716 <ssfn_utf8+0x93>
100006df:	31 c0                	xor    eax,eax
100006e1:	83 e6 08             	and    esi,0x8
100006e4:	75 32                	jne    10000718 <ssfn_utf8+0x95>
100006e6:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
100006ea:	c1 e3 12             	shl    ebx,0x12
100006ed:	c1 e0 0c             	shl    eax,0xc
100006f0:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
100006f6:	25 00 f0 03 00       	and    eax,0x3f000
100006fb:	83 c2 03             	add    edx,0x3
100006fe:	09 d8                	or     eax,ebx
10000700:	8a 1a                	mov    bl,BYTE PTR [edx]
10000702:	83 e3 3f             	and    ebx,0x3f
10000705:	09 d8                	or     eax,ebx
10000707:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
1000070b:	c1 e3 06             	shl    ebx,0x6
1000070e:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000714:	09 d8                	or     eax,ebx
10000716:	89 11                	mov    DWORD PTR [ecx],edx
10000718:	ff 01                	inc    DWORD PTR [ecx]
1000071a:	5b                   	pop    ebx
1000071b:	5e                   	pop    esi
1000071c:	c3                   	ret    

1000071d <_ssfn_c>:
1000071d:	55                   	push   ebp
1000071e:	57                   	push   edi
1000071f:	56                   	push   esi
10000720:	53                   	push   ebx
10000721:	83 ec 14             	sub    esp,0x14
10000724:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
1000072a:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
1000072e:	85 c0                	test   eax,eax
10000730:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000736:	0f 84 e6 00 00 00    	je     10000822 <_ssfn_c+0x105>
1000073c:	31 ff                	xor    edi,edi
1000073e:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000742:	0f 84 f3 00 00 00    	je     1000083b <_ssfn_c+0x11e>
10000748:	85 d2                	test   edx,edx
1000074a:	0f 84 eb 00 00 00    	je     1000083b <_ssfn_c+0x11e>
10000750:	80 3a 00             	cmp    BYTE PTR [edx],0x0
10000753:	0f 84 e2 00 00 00    	je     1000083b <_ssfn_c+0x11e>
10000759:	89 d6                	mov    esi,edx
1000075b:	89 cd                	mov    ebp,ecx
1000075d:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10000760:	89 c3                	mov    ebx,eax
10000762:	85 d2                	test   edx,edx
10000764:	74 38                	je     1000079e <_ssfn_c+0x81>
10000766:	8d 0c 13             	lea    ecx,[ebx+edx*1]
10000769:	31 c0                	xor    eax,eax
1000076b:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000076e:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10000771:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
10000775:	66 85 d2             	test   dx,dx
10000778:	74 24                	je     1000079e <_ssfn_c+0x81>
1000077a:	01 da                	add    edx,ebx
1000077c:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000780:	8a 0a                	mov    cl,BYTE PTR [edx]
10000782:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000786:	84 c9                	test   cl,cl
10000788:	0f 84 9e 00 00 00    	je     1000082c <_ssfn_c+0x10f>
1000078e:	3a 0f                	cmp    cl,BYTE PTR [edi]
10000790:	0f 85 90 00 00 00    	jne    10000826 <_ssfn_c+0x109>
10000796:	47                   	inc    edi
10000797:	42                   	inc    edx
10000798:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
1000079c:	eb e2                	jmp    10000780 <_ssfn_c+0x63>
1000079e:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100007a2:	8d 44 24 10          	lea    eax,[esp+0x10]
100007a6:	50                   	push   eax
100007a7:	e8 fc ff ff ff       	call   100007a8 <_ssfn_c+0x8b>	100007a8: R_386_PC32	ssfn_utf8
100007ac:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100007b0:	29 f2                	sub    edx,esi
100007b2:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
100007b5:	5a                   	pop    edx
100007b6:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100007ba:	89 06                	mov    DWORD PTR [esi],eax
100007bc:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
100007bf:	89 df                	mov    edi,ebx
100007c1:	31 db                	xor    ebx,ebx
100007c3:	8a 17                	mov    dl,BYTE PTR [edi]
100007c5:	80 fa ff             	cmp    dl,0xff
100007c8:	75 08                	jne    100007d2 <_ssfn_c+0xb5>
100007ca:	81 c3 ff ff 00 00    	add    ebx,0xffff
100007d0:	eb 2a                	jmp    100007fc <_ssfn_c+0xdf>
100007d2:	88 d1                	mov    cl,dl
100007d4:	83 e1 c0             	and    ecx,0xffffffc0
100007d7:	80 f9 c0             	cmp    cl,0xc0
100007da:	75 16                	jne    100007f2 <_ssfn_c+0xd5>
100007dc:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
100007e0:	c1 e2 08             	shl    edx,0x8
100007e3:	83 c7 02             	add    edi,0x2
100007e6:	81 e2 00 3f 00 00    	and    edx,0x3f00
100007ec:	09 ca                	or     edx,ecx
100007ee:	01 d3                	add    ebx,edx
100007f0:	eb 27                	jmp    10000819 <_ssfn_c+0xfc>
100007f2:	80 f9 80             	cmp    cl,0x80
100007f5:	75 08                	jne    100007ff <_ssfn_c+0xe2>
100007f7:	83 e2 3f             	and    edx,0x3f
100007fa:	01 d3                	add    ebx,edx
100007fc:	47                   	inc    edi
100007fd:	eb 1a                	jmp    10000819 <_ssfn_c+0xfc>
100007ff:	39 d8                	cmp    eax,ebx
10000801:	74 38                	je     1000083b <_ssfn_c+0x11e>
10000803:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000807:	83 e2 40             	and    edx,0x40
1000080a:	80 fa 01             	cmp    dl,0x1
1000080d:	19 d2                	sbb    edx,edx
1000080f:	83 c2 06             	add    edx,0x6
10000812:	0f af d1             	imul   edx,ecx
10000815:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
10000819:	43                   	inc    ebx
1000081a:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
10000820:	76 a1                	jbe    100007c3 <_ssfn_c+0xa6>
10000822:	31 ff                	xor    edi,edi
10000824:	eb 15                	jmp    1000083b <_ssfn_c+0x11e>
10000826:	40                   	inc    eax
10000827:	e9 42 ff ff ff       	jmp    1000076e <_ssfn_c+0x51>
1000082c:	29 f7                	sub    edi,esi
1000082e:	05 00 f0 00 00       	add    eax,0xf000
10000833:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000836:	e9 7b ff ff ff       	jmp    100007b6 <_ssfn_c+0x99>
1000083b:	83 c4 14             	add    esp,0x14
1000083e:	89 f8                	mov    eax,edi
10000840:	5b                   	pop    ebx
10000841:	5e                   	pop    esi
10000842:	5f                   	pop    edi
10000843:	5d                   	pop    ebp
10000844:	c3                   	ret    

10000845 <_ssfn_zlib_decode>:
10000845:	55                   	push   ebp
10000846:	57                   	push   edi
10000847:	56                   	push   esi
10000848:	53                   	push   ebx
10000849:	81 ec c8 19 00 00    	sub    esp,0x19c8
1000084f:	6a 08                	push   0x8
10000851:	e8 fc ff ff ff       	call   10000852 <_ssfn_zlib_decode+0xd>	10000852: R_386_PC32	malloc
10000856:	83 c4 10             	add    esp,0x10
10000859:	89 c2                	mov    edx,eax
1000085b:	85 c0                	test   eax,eax
1000085d:	0f 84 eb 04 00 00    	je     10000d4e <_ssfn_zlib_decode+0x509>
10000863:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
1000086a:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
10000871:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
10000878:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
1000087f:	31 c0                	xor    eax,eax
10000881:	83 c2 08             	add    edx,0x8
10000884:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
1000088b:	c6 80 20 55 03 10 08 	mov    BYTE PTR [eax+0x10035520],0x8	1000088d: R_386_32	.bss
10000892:	40                   	inc    eax
10000893:	3d 90 00 00 00       	cmp    eax,0x90
10000898:	75 f1                	jne    1000088b <_ssfn_zlib_decode+0x46>
1000089a:	c6 80 20 55 03 10 09 	mov    BYTE PTR [eax+0x10035520],0x9	1000089c: R_386_32	.bss
100008a1:	40                   	inc    eax
100008a2:	3d 00 01 00 00       	cmp    eax,0x100
100008a7:	75 f1                	jne    1000089a <_ssfn_zlib_decode+0x55>
100008a9:	c6 80 20 55 03 10 07 	mov    BYTE PTR [eax+0x10035520],0x7	100008ab: R_386_32	.bss
100008b0:	40                   	inc    eax
100008b1:	3d 18 01 00 00       	cmp    eax,0x118
100008b6:	75 f1                	jne    100008a9 <_ssfn_zlib_decode+0x64>
100008b8:	c7 05 38 56 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10035638,0x8080808	100008ba: R_386_32	.bss
100008c2:	c7 05 3c 56 03 10 08 08 08 08 	mov    DWORD PTR ds:0x1003563c,0x8080808	100008c4: R_386_32	.bss
100008cc:	31 c0                	xor    eax,eax
100008ce:	c6 80 00 55 03 10 05 	mov    BYTE PTR [eax+0x10035500],0x5	100008d0: R_386_32	.bss
100008d5:	40                   	inc    eax
100008d6:	83 f8 20             	cmp    eax,0x20
100008d9:	75 f3                	jne    100008ce <_ssfn_zlib_decode+0x89>
100008db:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
100008e6:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
100008f1:	ba 01 00 00 00       	mov    edx,0x1
100008f6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
100008fd:	e8 3d fd ff ff       	call   1000063f <_ssfn__zreceive>
10000902:	ba 02 00 00 00       	mov    edx,0x2
10000907:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000090b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000912:	e8 28 fd ff ff       	call   1000063f <_ssfn__zreceive>
10000917:	89 c6                	mov    esi,eax
10000919:	85 c0                	test   eax,eax
1000091b:	0f 85 09 01 00 00    	jne    10000a2a <_ssfn_zlib_decode+0x1e5>
10000921:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000928:	83 e2 07             	and    edx,0x7
1000092b:	74 0c                	je     10000939 <_ssfn_zlib_decode+0xf4>
1000092d:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000934:	e8 06 fd ff ff       	call   1000063f <_ssfn__zreceive>
10000939:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000940:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000947:	31 c0                	xor    eax,eax
10000949:	31 db                	xor    ebx,ebx
1000094b:	85 d2                	test   edx,edx
1000094d:	7f 14                	jg     10000963 <_ssfn_zlib_decode+0x11e>
1000094f:	84 db                	test   bl,bl
10000951:	74 22                	je     10000975 <_ssfn_zlib_decode+0x130>
10000953:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
1000095a:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000961:	eb 12                	jmp    10000975 <_ssfn_zlib_decode+0x130>
10000963:	40                   	inc    eax
10000964:	83 ea 08             	sub    edx,0x8
10000967:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
1000096e:	b3 01                	mov    bl,0x1
10000970:	c1 e9 08             	shr    ecx,0x8
10000973:	eb d6                	jmp    1000094b <_ssfn_zlib_decode+0x106>
10000975:	83 f8 04             	cmp    eax,0x4
10000978:	74 1d                	je     10000997 <_ssfn_zlib_decode+0x152>
1000097a:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000981:	40                   	inc    eax
10000982:	8d 4a 01             	lea    ecx,[edx+0x1]
10000985:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
1000098c:	8a 12                	mov    dl,BYTE PTR [edx]
1000098e:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000995:	eb de                	jmp    10000975 <_ssfn_zlib_decode+0x130>
10000997:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
1000099f:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
100009a7:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
100009af:	c1 e3 08             	shl    ebx,0x8
100009b2:	01 c3                	add    ebx,eax
100009b4:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
100009bc:	c1 e0 08             	shl    eax,0x8
100009bf:	01 d0                	add    eax,edx
100009c1:	89 da                	mov    edx,ebx
100009c3:	81 f2 ff ff 00 00    	xor    edx,0xffff
100009c9:	39 d0                	cmp    eax,edx
100009cb:	0f 85 69 03 00 00    	jne    10000d3a <_ssfn_zlib_decode+0x4f5>
100009d1:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
100009d8:	8d 04 1a             	lea    eax,[edx+ebx*1]
100009db:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
100009e2:	73 14                	jae    100009f8 <_ssfn_zlib_decode+0x1b3>
100009e4:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
100009eb:	e8 19 f7 ff ff       	call   10000109 <_ssfn__zexpand>
100009f0:	85 c0                	test   eax,eax
100009f2:	0f 84 42 03 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
100009f8:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
100009ff:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000a06:	39 f3                	cmp    ebx,esi
10000a08:	74 09                	je     10000a13 <_ssfn_zlib_decode+0x1ce>
10000a0a:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000a0d:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000a10:	46                   	inc    esi
10000a11:	eb e5                	jmp    100009f8 <_ssfn_zlib_decode+0x1b3>
10000a13:	01 da                	add    edx,ebx
10000a15:	01 c3                	add    ebx,eax
10000a17:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000a1e:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000a25:	e9 fc 02 00 00       	jmp    10000d26 <_ssfn_zlib_decode+0x4e1>
10000a2a:	83 f8 03             	cmp    eax,0x3
10000a2d:	0f 84 07 03 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000a33:	4e                   	dec    esi
10000a34:	75 2d                	jne    10000a63 <_ssfn_zlib_decode+0x21e>
10000a36:	b9 20 01 00 00       	mov    ecx,0x120
10000a3b:	ba 20 55 03 10       	mov    edx,0x10035520	10000a3c: R_386_32	.bss
10000a40:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000a47:	e8 1c f7 ff ff       	call   10000168 <_ssfn__zbuild_huffman>
10000a4c:	85 c0                	test   eax,eax
10000a4e:	0f 84 e6 02 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000a54:	b9 20 00 00 00       	mov    ecx,0x20
10000a59:	ba 00 55 03 10       	mov    edx,0x10035500	10000a5a: R_386_32	.bss
10000a5e:	e9 78 01 00 00       	jmp    10000bdb <_ssfn_zlib_decode+0x396>
10000a63:	ba 05 00 00 00       	mov    edx,0x5
10000a68:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a6f:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000a73:	e8 c7 fb ff ff       	call   1000063f <_ssfn__zreceive>
10000a78:	89 df                	mov    edi,ebx
10000a7a:	ba 05 00 00 00       	mov    edx,0x5
10000a7f:	89 c5                	mov    ebp,eax
10000a81:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a88:	e8 b2 fb ff ff       	call   1000063f <_ssfn__zreceive>
10000a8d:	ba 04 00 00 00       	mov    edx,0x4
10000a92:	89 c6                	mov    esi,eax
10000a94:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a9b:	e8 9f fb ff ff       	call   1000063f <_ssfn__zreceive>
10000aa0:	b9 13 00 00 00       	mov    ecx,0x13
10000aa5:	83 c0 04             	add    eax,0x4
10000aa8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000aac:	31 c0                	xor    eax,eax
10000aae:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000ab0:	31 ff                	xor    edi,edi
10000ab2:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000ab6:	7e 1f                	jle    10000ad7 <_ssfn_zlib_decode+0x292>
10000ab8:	ba 03 00 00 00       	mov    edx,0x3
10000abd:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ac4:	47                   	inc    edi
10000ac5:	e8 75 fb ff ff       	call   1000063f <_ssfn__zreceive>
10000aca:	0f b6 97 7f 50 00 10 	movzx  edx,BYTE PTR [edi+0x1000507f]	10000acd: R_386_32	.text
10000ad1:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000ad5:	eb db                	jmp    10000ab2 <_ssfn_zlib_decode+0x26d>
10000ad7:	b9 13 00 00 00       	mov    ecx,0x13
10000adc:	89 da                	mov    edx,ebx
10000ade:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000ae5:	e8 7e f6 ff ff       	call   10000168 <_ssfn__zbuild_huffman>
10000aea:	85 c0                	test   eax,eax
10000aec:	0f 84 48 02 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000af2:	8d 46 01             	lea    eax,[esi+0x1]
10000af5:	81 c5 01 01 00 00    	add    ebp,0x101
10000afb:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000aff:	31 f6                	xor    esi,esi
10000b01:	01 e8                	add    eax,ebp
10000b03:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000b07:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000b0b:	0f 8e 9f 00 00 00    	jle    10000bb0 <_ssfn_zlib_decode+0x36b>
10000b11:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000b18:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b1f:	e8 35 f5 ff ff       	call   10000059 <_ssfn__zhuffman_decode>
10000b24:	83 f8 12             	cmp    eax,0x12
10000b27:	0f 87 0d 02 00 00    	ja     10000d3a <_ssfn_zlib_decode+0x4f5>
10000b2d:	83 f8 0f             	cmp    eax,0xf
10000b30:	7f 07                	jg     10000b39 <_ssfn_zlib_decode+0x2f4>
10000b32:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000b36:	46                   	inc    esi
10000b37:	eb ce                	jmp    10000b07 <_ssfn_zlib_decode+0x2c2>
10000b39:	83 f8 10             	cmp    eax,0x10
10000b3c:	75 22                	jne    10000b60 <_ssfn_zlib_decode+0x31b>
10000b3e:	ba 02 00 00 00       	mov    edx,0x2
10000b43:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b4a:	e8 f0 fa ff ff       	call   1000063f <_ssfn__zreceive>
10000b4f:	85 f6                	test   esi,esi
10000b51:	8d 58 03             	lea    ebx,[eax+0x3]
10000b54:	0f 84 e0 01 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000b5a:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000b5e:	eb 31                	jmp    10000b91 <_ssfn_zlib_decode+0x34c>
10000b60:	83 f8 11             	cmp    eax,0x11
10000b63:	75 16                	jne    10000b7b <_ssfn_zlib_decode+0x336>
10000b65:	ba 03 00 00 00       	mov    edx,0x3
10000b6a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b71:	e8 c9 fa ff ff       	call   1000063f <_ssfn__zreceive>
10000b76:	8d 58 03             	lea    ebx,[eax+0x3]
10000b79:	eb 14                	jmp    10000b8f <_ssfn_zlib_decode+0x34a>
10000b7b:	ba 07 00 00 00       	mov    edx,0x7
10000b80:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b87:	e8 b3 fa ff ff       	call   1000063f <_ssfn__zreceive>
10000b8c:	8d 58 0b             	lea    ebx,[eax+0xb]
10000b8f:	31 c0                	xor    eax,eax
10000b91:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000b95:	29 f2                	sub    edx,esi
10000b97:	39 da                	cmp    edx,ebx
10000b99:	0f 8c 9b 01 00 00    	jl     10000d3a <_ssfn_zlib_decode+0x4f5>
10000b9f:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000ba3:	89 d9                	mov    ecx,ebx
10000ba5:	89 d7                	mov    edi,edx
10000ba7:	01 de                	add    esi,ebx
10000ba9:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bab:	e9 57 ff ff ff       	jmp    10000b07 <_ssfn_zlib_decode+0x2c2>
10000bb0:	0f 85 84 01 00 00    	jne    10000d3a <_ssfn_zlib_decode+0x4f5>
10000bb6:	89 e9                	mov    ecx,ebp
10000bb8:	8d 54 24 25          	lea    edx,[esp+0x25]
10000bbc:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000bc3:	e8 a0 f5 ff ff       	call   10000168 <_ssfn__zbuild_huffman>
10000bc8:	85 c0                	test   eax,eax
10000bca:	0f 84 6a 01 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000bd0:	8d 44 24 25          	lea    eax,[esp+0x25]
10000bd4:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000bd8:	8d 14 28             	lea    edx,[eax+ebp*1]
10000bdb:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000be2:	e8 81 f5 ff ff       	call   10000168 <_ssfn__zbuild_huffman>
10000be7:	85 c0                	test   eax,eax
10000be9:	0f 84 4b 01 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000bef:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000bf6:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000bfd:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c04:	e8 50 f4 ff ff       	call   10000059 <_ssfn__zhuffman_decode>
10000c09:	89 c3                	mov    ebx,eax
10000c0b:	3d ff 00 00 00       	cmp    eax,0xff
10000c10:	7f 34                	jg     10000c46 <_ssfn_zlib_decode+0x401>
10000c12:	85 c0                	test   eax,eax
10000c14:	0f 88 20 01 00 00    	js     10000d3a <_ssfn_zlib_decode+0x4f5>
10000c1a:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000c21:	77 1d                	ja     10000c40 <_ssfn_zlib_decode+0x3fb>
10000c23:	89 ea                	mov    edx,ebp
10000c25:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c2c:	e8 d8 f4 ff ff       	call   10000109 <_ssfn__zexpand>
10000c31:	85 c0                	test   eax,eax
10000c33:	0f 84 01 01 00 00    	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000c39:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000c40:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000c43:	45                   	inc    ebp
10000c44:	eb b0                	jmp    10000bf6 <_ssfn_zlib_decode+0x3b1>
10000c46:	3d 00 01 00 00       	cmp    eax,0x100
10000c4b:	75 0c                	jne    10000c59 <_ssfn_zlib_decode+0x414>
10000c4d:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000c54:	e9 cd 00 00 00       	jmp    10000d26 <_ssfn_zlib_decode+0x4e1>
10000c59:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000c5f:	8b 14 85 a0 51 00 10 	mov    edx,DWORD PTR [eax*4+0x100051a0]	10000c62: R_386_32	.text
10000c66:	8b 1c 85 20 52 00 10 	mov    ebx,DWORD PTR [eax*4+0x10005220]	10000c69: R_386_32	.text
10000c6d:	85 d2                	test   edx,edx
10000c6f:	74 0e                	je     10000c7f <_ssfn_zlib_decode+0x43a>
10000c71:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c78:	e8 c2 f9 ff ff       	call   1000063f <_ssfn__zreceive>
10000c7d:	01 c3                	add    ebx,eax
10000c7f:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000c86:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c8d:	e8 c7 f3 ff ff       	call   10000059 <_ssfn__zhuffman_decode>
10000c92:	85 c0                	test   eax,eax
10000c94:	0f 88 a0 00 00 00    	js     10000d3a <_ssfn_zlib_decode+0x4f5>
10000c9a:	8b 14 85 a0 50 00 10 	mov    edx,DWORD PTR [eax*4+0x100050a0]	10000c9d: R_386_32	.text
10000ca1:	8b 3c 85 20 51 00 10 	mov    edi,DWORD PTR [eax*4+0x10005120]	10000ca4: R_386_32	.text
10000ca8:	85 d2                	test   edx,edx
10000caa:	74 0e                	je     10000cba <_ssfn_zlib_decode+0x475>
10000cac:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cb3:	e8 87 f9 ff ff       	call   1000063f <_ssfn__zreceive>
10000cb8:	01 c7                	add    edi,eax
10000cba:	89 e8                	mov    eax,ebp
10000cbc:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000cc3:	39 f8                	cmp    eax,edi
10000cc5:	7c 73                	jl     10000d3a <_ssfn_zlib_decode+0x4f5>
10000cc7:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000ccb:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000cd2:	73 19                	jae    10000ced <_ssfn_zlib_decode+0x4a8>
10000cd4:	89 ea                	mov    edx,ebp
10000cd6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cdd:	e8 27 f4 ff ff       	call   10000109 <_ssfn__zexpand>
10000ce2:	85 c0                	test   eax,eax
10000ce4:	74 54                	je     10000d3a <_ssfn_zlib_decode+0x4f5>
10000ce6:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000ced:	89 ee                	mov    esi,ebp
10000cef:	29 fe                	sub    esi,edi
10000cf1:	4f                   	dec    edi
10000cf2:	75 19                	jne    10000d0d <_ssfn_zlib_decode+0x4c8>
10000cf4:	85 db                	test   ebx,ebx
10000cf6:	0f 84 fa fe ff ff    	je     10000bf6 <_ssfn_zlib_decode+0x3b1>
10000cfc:	8a 06                	mov    al,BYTE PTR [esi]
10000cfe:	01 eb                	add    ebx,ebp
10000d00:	45                   	inc    ebp
10000d01:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000d04:	39 dd                	cmp    ebp,ebx
10000d06:	75 f8                	jne    10000d00 <_ssfn_zlib_decode+0x4bb>
10000d08:	e9 e9 fe ff ff       	jmp    10000bf6 <_ssfn_zlib_decode+0x3b1>
10000d0d:	85 db                	test   ebx,ebx
10000d0f:	0f 84 e1 fe ff ff    	je     10000bf6 <_ssfn_zlib_decode+0x3b1>
10000d15:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000d18:	89 ef                	mov    edi,ebp
10000d1a:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000d1b:	39 f0                	cmp    eax,esi
10000d1d:	75 fb                	jne    10000d1a <_ssfn_zlib_decode+0x4d5>
10000d1f:	01 dd                	add    ebp,ebx
10000d21:	e9 d0 fe ff ff       	jmp    10000bf6 <_ssfn_zlib_decode+0x3b1>
10000d26:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000d2b:	0f 84 c0 fb ff ff    	je     100008f1 <_ssfn_zlib_decode+0xac>
10000d31:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000d38:	eb 14                	jmp    10000d4e <_ssfn_zlib_decode+0x509>
10000d3a:	83 ec 0c             	sub    esp,0xc
10000d3d:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000d44:	e8 fc ff ff ff       	call   10000d45 <_ssfn_zlib_decode+0x500>	10000d45: R_386_PC32	free
10000d49:	83 c4 10             	add    esp,0x10
10000d4c:	31 c0                	xor    eax,eax
10000d4e:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000d54:	5b                   	pop    ebx
10000d55:	5e                   	pop    esi
10000d56:	5f                   	pop    edi
10000d57:	5d                   	pop    ebp
10000d58:	c3                   	ret    

10000d59 <ssfn_load>:
10000d59:	55                   	push   ebp
10000d5a:	57                   	push   edi
10000d5b:	56                   	push   esi
10000d5c:	53                   	push   ebx
10000d5d:	83 ec 1c             	sub    esp,0x1c
10000d60:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000d64:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000d68:	85 ff                	test   edi,edi
10000d6a:	0f 84 d0 01 00 00    	je     10000f40 <ssfn_load+0x1e7>
10000d70:	85 f6                	test   esi,esi
10000d72:	0f 84 c8 01 00 00    	je     10000f40 <ssfn_load+0x1e7>
10000d78:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000d7b:	0f 85 a8 00 00 00    	jne    10000e29 <ssfn_load+0xd0>
10000d81:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000d85:	0f 85 9e 00 00 00    	jne    10000e29 <ssfn_load+0xd0>
10000d8b:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000d8f:	74 0a                	je     10000d9b <ssfn_load+0x42>
10000d91:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000d96:	e9 aa 01 00 00       	jmp    10000f45 <ssfn_load+0x1ec>
10000d9b:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000d9e:	a8 04                	test   al,0x4
10000da0:	75 05                	jne    10000da7 <ssfn_load+0x4e>
10000da2:	83 c6 0a             	add    esi,0xa
10000da5:	eb 08                	jmp    10000daf <ssfn_load+0x56>
10000da7:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000dab:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000daf:	a8 08                	test   al,0x8
10000db1:	74 07                	je     10000dba <ssfn_load+0x61>
10000db3:	46                   	inc    esi
10000db4:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000db8:	eb f7                	jmp    10000db1 <ssfn_load+0x58>
10000dba:	a8 10                	test   al,0x10
10000dbc:	74 07                	je     10000dc5 <ssfn_load+0x6c>
10000dbe:	46                   	inc    esi
10000dbf:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000dc3:	eb f7                	jmp    10000dbc <ssfn_load+0x63>
10000dc5:	83 ec 0c             	sub    esp,0xc
10000dc8:	56                   	push   esi
10000dc9:	e8 fc ff ff ff       	call   10000dca <ssfn_load+0x71>	10000dca: R_386_PC32	_ssfn_zlib_decode
10000dce:	83 c4 10             	add    esp,0x10
10000dd1:	89 c6                	mov    esi,eax
10000dd3:	85 c0                	test   eax,eax
10000dd5:	74 ba                	je     10000d91 <ssfn_load+0x38>
10000dd7:	50                   	push   eax
10000dd8:	50                   	push   eax
10000dd9:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000ddf:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000de6:	50                   	push   eax
10000de7:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000ded:	e8 fc ff ff ff       	call   10000dee <ssfn_load+0x95>	10000dee: R_386_PC32	realloc
10000df2:	83 c4 10             	add    esp,0x10
10000df5:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000dfb:	85 c0                	test   eax,eax
10000dfd:	75 0f                	jne    10000e0e <ssfn_load+0xb5>
10000dff:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000e09:	e9 1a 01 00 00       	jmp    10000f28 <ssfn_load+0x1cf>
10000e0e:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000e14:	8d 4a 01             	lea    ecx,[edx+0x1]
10000e17:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000e1d:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000e20:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000e23:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000e29:	50                   	push   eax
10000e2a:	6a 04                	push   0x4
10000e2c:	68 4f 4f 00 10       	push   0x10004f4f	10000e2d: R_386_32	.text
10000e31:	56                   	push   esi
10000e32:	e8 fc ff ff ff       	call   10000e33 <ssfn_load+0xda>	10000e33: R_386_PC32	memcmp
10000e37:	83 c4 10             	add    esp,0x10
10000e3a:	89 c5                	mov    ebp,eax
10000e3c:	85 c0                	test   eax,eax
10000e3e:	75 29                	jne    10000e69 <ssfn_load+0x110>
10000e40:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000e43:	01 f3                	add    ebx,esi
10000e45:	83 c6 08             	add    esi,0x8
10000e48:	39 de                	cmp    esi,ebx
10000e4a:	0f 83 f5 00 00 00    	jae    10000f45 <ssfn_load+0x1ec>
10000e50:	50                   	push   eax
10000e51:	50                   	push   eax
10000e52:	56                   	push   esi
10000e53:	57                   	push   edi
10000e54:	e8 fc ff ff ff       	call   10000e55 <ssfn_load+0xfc>	10000e55: R_386_PC32	ssfn_load
10000e59:	83 c4 10             	add    esp,0x10
10000e5c:	85 c0                	test   eax,eax
10000e5e:	0f 85 e1 00 00 00    	jne    10000f45 <ssfn_load+0x1ec>
10000e64:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000e67:	eb df                	jmp    10000e48 <ssfn_load+0xef>
10000e69:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000e6c:	83 e0 0f             	and    eax,0xf
10000e6f:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000e73:	53                   	push   ebx
10000e74:	6a 04                	push   0x4
10000e76:	68 54 4f 00 10       	push   0x10004f54	10000e77: R_386_32	.text
10000e7b:	56                   	push   esi
10000e7c:	e8 fc ff ff ff       	call   10000e7d <ssfn_load+0x124>	10000e7d: R_386_PC32	memcmp
10000e81:	83 c4 10             	add    esp,0x10
10000e84:	89 c5                	mov    ebp,eax
10000e86:	85 c0                	test   eax,eax
10000e88:	0f 85 03 ff ff ff    	jne    10000d91 <ssfn_load+0x38>
10000e8e:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000e91:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000e95:	51                   	push   ecx
10000e96:	6a 04                	push   0x4
10000e98:	68 59 4f 00 10       	push   0x10004f59	10000e99: R_386_32	.text
10000e9d:	50                   	push   eax
10000e9e:	e8 fc ff ff ff       	call   10000e9f <ssfn_load+0x146>	10000e9f: R_386_PC32	memcmp
10000ea3:	83 c4 10             	add    esp,0x10
10000ea6:	85 c0                	test   eax,eax
10000ea8:	0f 85 e3 fe ff ff    	jne    10000d91 <ssfn_load+0x38>
10000eae:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10000eb3:	0f 87 d8 fe ff ff    	ja     10000d91 <ssfn_load+0x38>
10000eb9:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10000ebd:	39 cb                	cmp    ebx,ecx
10000ebf:	0f 86 cc fe ff ff    	jbe    10000d91 <ssfn_load+0x38>
10000ec5:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10000ec8:	39 c3                	cmp    ebx,eax
10000eca:	0f 86 c1 fe ff ff    	jbe    10000d91 <ssfn_load+0x38>
10000ed0:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10000ed3:	0f 86 b8 fe ff ff    	jbe    10000d91 <ssfn_load+0x38>
10000ed9:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
10000edc:	0f 86 af fe ff ff    	jbe    10000d91 <ssfn_load+0x38>
10000ee2:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10000ee5:	0f 86 a6 fe ff ff    	jbe    10000d91 <ssfn_load+0x38>
10000eeb:	39 c1                	cmp    ecx,eax
10000eed:	0f 83 9e fe ff ff    	jae    10000d91 <ssfn_load+0x38>
10000ef3:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10000ef8:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10000efb:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
10000f01:	40                   	inc    eax
10000f02:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
10000f08:	52                   	push   edx
10000f09:	c1 e0 02             	shl    eax,0x2
10000f0c:	52                   	push   edx
10000f0d:	50                   	push   eax
10000f0e:	ff 33                	push   DWORD PTR [ebx]
10000f10:	e8 fc ff ff ff       	call   10000f11 <ssfn_load+0x1b8>	10000f11: R_386_PC32	realloc
10000f15:	83 c4 10             	add    esp,0x10
10000f18:	89 03                	mov    DWORD PTR [ebx],eax
10000f1a:	85 c0                	test   eax,eax
10000f1c:	75 0f                	jne    10000f2d <ssfn_load+0x1d4>
10000f1e:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
10000f28:	83 cd ff             	or     ebp,0xffffffff
10000f2b:	eb 18                	jmp    10000f45 <ssfn_load+0x1ec>
10000f2d:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10000f33:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10000f37:	89 f8                	mov    eax,edi
10000f39:	e8 ad f3 ff ff       	call   100002eb <_ssfn_fc.part.1>
10000f3e:	eb 05                	jmp    10000f45 <ssfn_load+0x1ec>
10000f40:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10000f45:	83 c4 1c             	add    esp,0x1c
10000f48:	89 e8                	mov    eax,ebp
10000f4a:	5b                   	pop    ebx
10000f4b:	5e                   	pop    esi
10000f4c:	5f                   	pop    edi
10000f4d:	5d                   	pop    ebp
10000f4e:	c3                   	ret    

10000f4f <ssfn_free>:
10000f4f:	57                   	push   edi
10000f50:	56                   	push   esi
10000f51:	53                   	push   ebx
10000f52:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10000f56:	85 db                	test   ebx,ebx
10000f58:	74 7e                	je     10000fd8 <ssfn_free+0x89>
10000f5a:	89 d8                	mov    eax,ebx
10000f5c:	e8 8a f3 ff ff       	call   100002eb <_ssfn_fc.part.1>
10000f61:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
10000f68:	74 32                	je     10000f9c <ssfn_free+0x4d>
10000f6a:	31 f6                	xor    esi,esi
10000f6c:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
10000f72:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
10000f78:	7e 16                	jle    10000f90 <ssfn_free+0x41>
10000f7a:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10000f7d:	85 c0                	test   eax,eax
10000f7f:	74 0c                	je     10000f8d <ssfn_free+0x3e>
10000f81:	83 ec 0c             	sub    esp,0xc
10000f84:	50                   	push   eax
10000f85:	e8 fc ff ff ff       	call   10000f86 <ssfn_free+0x37>	10000f86: R_386_PC32	free
10000f8a:	83 c4 10             	add    esp,0x10
10000f8d:	46                   	inc    esi
10000f8e:	eb dc                	jmp    10000f6c <ssfn_free+0x1d>
10000f90:	83 ec 0c             	sub    esp,0xc
10000f93:	50                   	push   eax
10000f94:	e8 fc ff ff ff       	call   10000f95 <ssfn_free+0x46>	10000f95: R_386_PC32	free
10000f99:	83 c4 10             	add    esp,0x10
10000f9c:	31 f6                	xor    esi,esi
10000f9e:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
10000fa1:	85 c0                	test   eax,eax
10000fa3:	74 0c                	je     10000fb1 <ssfn_free+0x62>
10000fa5:	83 ec 0c             	sub    esp,0xc
10000fa8:	50                   	push   eax
10000fa9:	e8 fc ff ff ff       	call   10000faa <ssfn_free+0x5b>	10000faa: R_386_PC32	free
10000fae:	83 c4 10             	add    esp,0x10
10000fb1:	46                   	inc    esi
10000fb2:	83 fe 05             	cmp    esi,0x5
10000fb5:	75 e7                	jne    10000f9e <ssfn_free+0x4f>
10000fb7:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000fbd:	85 c0                	test   eax,eax
10000fbf:	74 0c                	je     10000fcd <ssfn_free+0x7e>
10000fc1:	83 ec 0c             	sub    esp,0xc
10000fc4:	50                   	push   eax
10000fc5:	e8 fc ff ff ff       	call   10000fc6 <ssfn_free+0x77>	10000fc6: R_386_PC32	free
10000fca:	83 c4 10             	add    esp,0x10
10000fcd:	b9 72 3d 00 00       	mov    ecx,0x3d72
10000fd2:	31 c0                	xor    eax,eax
10000fd4:	89 df                	mov    edi,ebx
10000fd6:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000fd8:	5b                   	pop    ebx
10000fd9:	5e                   	pop    esi
10000fda:	5f                   	pop    edi
10000fdb:	c3                   	ret    

10000fdc <ssfn_mem>:
10000fdc:	55                   	push   ebp
10000fdd:	31 c0                	xor    eax,eax
10000fdf:	57                   	push   edi
10000fe0:	56                   	push   esi
10000fe1:	53                   	push   ebx
10000fe2:	83 ec 08             	sub    esp,0x8
10000fe5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000fe9:	85 d2                	test   edx,edx
10000feb:	0f 84 8e 00 00 00    	je     1000107f <ssfn_mem+0xa3>
10000ff1:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10000ff6:	31 c9                	xor    ecx,ecx
10000ff8:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10000fff:	41                   	inc    ecx
10001000:	8d 04 98             	lea    eax,[eax+ebx*4]
10001003:	83 f9 05             	cmp    ecx,0x5
10001006:	75 f0                	jne    10000ff8 <ssfn_mem+0x1c>
10001008:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
1000100e:	31 c9                	xor    ecx,ecx
10001010:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001017:	89 34 24             	mov    DWORD PTR [esp],esi
1000101a:	85 f6                	test   esi,esi
1000101c:	74 48                	je     10001066 <ssfn_mem+0x8a>
1000101e:	31 db                	xor    ebx,ebx
10001020:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001023:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001026:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000102a:	85 ff                	test   edi,edi
1000102c:	74 2a                	je     10001058 <ssfn_mem+0x7c>
1000102e:	31 f6                	xor    esi,esi
10001030:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001034:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001037:	85 ed                	test   ebp,ebp
10001039:	74 0f                	je     1000104a <ssfn_mem+0x6e>
1000103b:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
1000103f:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001043:	0f af fd             	imul   edi,ebp
10001046:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
1000104a:	46                   	inc    esi
1000104b:	81 fe 00 01 00 00    	cmp    esi,0x100
10001051:	75 dd                	jne    10001030 <ssfn_mem+0x54>
10001053:	05 00 04 00 00       	add    eax,0x400
10001058:	43                   	inc    ebx
10001059:	81 fb 00 01 00 00    	cmp    ebx,0x100
1000105f:	75 bf                	jne    10001020 <ssfn_mem+0x44>
10001061:	05 00 04 00 00       	add    eax,0x400
10001066:	41                   	inc    ecx
10001067:	83 f9 11             	cmp    ecx,0x11
1000106a:	75 a4                	jne    10001010 <ssfn_mem+0x34>
1000106c:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
10001073:	74 0a                	je     1000107f <ssfn_mem+0xa3>
10001075:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
1000107b:	01 d2                	add    edx,edx
1000107d:	01 d0                	add    eax,edx
1000107f:	83 c4 08             	add    esp,0x8
10001082:	5b                   	pop    ebx
10001083:	5e                   	pop    esi
10001084:	5f                   	pop    edi
10001085:	5d                   	pop    ebp
10001086:	c3                   	ret    

10001087 <ssfn_select>:
10001087:	55                   	push   ebp
10001088:	57                   	push   edi
10001089:	56                   	push   esi
1000108a:	53                   	push   ebx
1000108b:	83 ec 1c             	sub    esp,0x1c
1000108e:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10001092:	85 db                	test   ebx,ebx
10001094:	75 0a                	jne    100010a0 <ssfn_select+0x19>
10001096:	be fc ff ff ff       	mov    esi,0xfffffffc
1000109b:	e9 13 01 00 00       	jmp    100011b3 <ssfn_select+0x12c>
100010a0:	89 d8                	mov    eax,ebx
100010a2:	e8 44 f2 ff ff       	call   100002eb <_ssfn_fc.part.1>
100010a7:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100010ab:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100010b1:	0f 85 e9 00 00 00    	jne    100011a0 <ssfn_select+0x119>
100010b7:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100010bb:	83 e8 08             	sub    eax,0x8
100010be:	3d b8 00 00 00       	cmp    eax,0xb8
100010c3:	0f 87 de 00 00 00    	ja     100011a7 <ssfn_select+0x120>
100010c9:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
100010d1:	75 76                	jne    10001149 <ssfn_select+0xc2>
100010d3:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
100010d8:	74 bc                	je     10001096 <ssfn_select+0xf>
100010da:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100010de:	80 38 00             	cmp    BYTE PTR [eax],0x0
100010e1:	74 b3                	je     10001096 <ssfn_select+0xf>
100010e3:	31 ed                	xor    ebp,ebp
100010e5:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100010e9:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
100010ed:	74 03                	je     100010f2 <ssfn_select+0x6b>
100010ef:	45                   	inc    ebp
100010f0:	eb f3                	jmp    100010e5 <ssfn_select+0x5e>
100010f2:	8d 43 14             	lea    eax,[ebx+0x14]
100010f5:	89 df                	mov    edi,ebx
100010f7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100010fb:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
10001101:	31 d2                	xor    edx,edx
10001103:	89 04 24             	mov    DWORD PTR [esp],eax
10001106:	39 14 24             	cmp    DWORD PTR [esp],edx
10001109:	7e 33                	jle    1000113e <ssfn_select+0xb7>
1000110b:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
1000110f:	8b 07                	mov    eax,DWORD PTR [edi]
10001111:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001114:	50                   	push   eax
10001115:	8d 41 20             	lea    eax,[ecx+0x20]
10001118:	55                   	push   ebp
10001119:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000111d:	50                   	push   eax
1000111e:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001122:	e8 fc ff ff ff       	call   10001123 <ssfn_select+0x9c>	10001123: R_386_PC32	memcmp
10001127:	83 c4 10             	add    esp,0x10
1000112a:	85 c0                	test   eax,eax
1000112c:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10001130:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001134:	75 05                	jne    1000113b <ssfn_select+0xb4>
10001136:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
10001139:	eb 34                	jmp    1000116f <ssfn_select+0xe8>
1000113b:	42                   	inc    edx
1000113c:	eb c8                	jmp    10001106 <ssfn_select+0x7f>
1000113e:	83 c7 04             	add    edi,0x4
10001141:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001145:	75 b4                	jne    100010fb <ssfn_select+0x74>
10001147:	eb 65                	jmp    100011ae <ssfn_select+0x127>
10001149:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
10001151:	74 15                	je     10001168 <ssfn_select+0xe1>
10001153:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
10001158:	7f 54                	jg     100011ae <ssfn_select+0x127>
1000115a:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000115e:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
10001166:	74 46                	je     100011ae <ssfn_select+0x127>
10001168:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
1000116f:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001173:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
1000117a:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
10001180:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
1000118a:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000118e:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
10001194:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001198:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
1000119e:	eb 13                	jmp    100011b3 <ssfn_select+0x12c>
100011a0:	be fb ff ff ff       	mov    esi,0xfffffffb
100011a5:	eb 0c                	jmp    100011b3 <ssfn_select+0x12c>
100011a7:	be fa ff ff ff       	mov    esi,0xfffffffa
100011ac:	eb 05                	jmp    100011b3 <ssfn_select+0x12c>
100011ae:	be fd ff ff ff       	mov    esi,0xfffffffd
100011b3:	83 c4 1c             	add    esp,0x1c
100011b6:	89 f0                	mov    eax,esi
100011b8:	5b                   	pop    ebx
100011b9:	5e                   	pop    esi
100011ba:	5f                   	pop    edi
100011bb:	5d                   	pop    ebp
100011bc:	c3                   	ret    

100011bd <ssfn_render>:
100011bd:	55                   	push   ebp
100011be:	57                   	push   edi
100011bf:	56                   	push   esi
100011c0:	53                   	push   ebx
100011c1:	81 ec dc 05 01 00    	sub    esp,0x105dc
100011c7:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
100011ce:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
100011d9:	85 ed                	test   ebp,ebp
100011db:	0f 94 c2             	sete   dl
100011de:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
100011e6:	0f 94 c0             	sete   al
100011e9:	08 c2                	or     dl,al
100011eb:	74 0a                	je     100011f7 <ssfn_render+0x3a>
100011ed:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
100011f2:	e9 14 1e 00 00       	jmp    1000300b <ssfn_render+0x1e4e>
100011f7:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
100011fe:	31 c9                	xor    ecx,ecx
10001200:	8a 00                	mov    al,BYTE PTR [eax]
10001202:	84 c0                	test   al,al
10001204:	0f 84 01 1e 00 00    	je     1000300b <ssfn_render+0x1e4e>
1000120a:	3c 0d                	cmp    al,0xd
1000120c:	75 0f                	jne    1000121d <ssfn_render+0x60>
1000120e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001215:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000121b:	eb 31                	jmp    1000124e <ssfn_render+0x91>
1000121d:	3c 0a                	cmp    al,0xa
1000121f:	75 37                	jne    10001258 <ssfn_render+0x9b>
10001221:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001228:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000122e:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
10001231:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001237:	85 c0                	test   eax,eax
10001239:	75 06                	jne    10001241 <ssfn_render+0x84>
1000123b:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
10001241:	01 d0                	add    eax,edx
10001243:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000124a:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
1000124e:	b9 01 00 00 00       	mov    ecx,0x1
10001253:	e9 b3 1d 00 00       	jmp    1000300b <ssfn_render+0x1e4e>
10001258:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000125b:	85 c0                	test   eax,eax
1000125d:	74 3e                	je     1000129d <ssfn_render+0xe0>
1000125f:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
10001262:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
10001269:	56                   	push   esi
1000126a:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001271:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001278:	e8 a0 f4 ff ff       	call   1000071d <_ssfn_c>
1000127d:	5b                   	pop    ebx
1000127e:	85 c0                	test   eax,eax
10001280:	0f 85 71 02 00 00    	jne    100014f7 <ssfn_render+0x33a>
10001286:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
1000128c:	81 e2 00 01 00 00    	and    edx,0x100
10001292:	0f 84 fd 01 00 00    	je     10001495 <ssfn_render+0x2d8>
10001298:	e9 1d 02 00 00       	jmp    100014ba <ssfn_render+0x2fd>
1000129d:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100012a3:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100012aa:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100012ae:	3d fd 00 00 00       	cmp    eax,0xfd
100012b3:	7f 08                	jg     100012bd <ssfn_render+0x100>
100012b5:	89 c3                	mov    ebx,eax
100012b7:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100012bb:	eb 3f                	jmp    100012fc <ssfn_render+0x13f>
100012bd:	31 db                	xor    ebx,ebx
100012bf:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
100012c7:	eb 33                	jmp    100012fc <ssfn_render+0x13f>
100012c9:	85 c0                	test   eax,eax
100012cb:	0f 84 64 01 00 00    	je     10001435 <ssfn_render+0x278>
100012d1:	43                   	inc    ebx
100012d2:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
100012d6:	7e 28                	jle    10001300 <ssfn_render+0x143>
100012d8:	85 c0                	test   eax,eax
100012da:	0f 85 17 02 00 00    	jne    100014f7 <ssfn_render+0x33a>
100012e0:	31 db                	xor    ebx,ebx
100012e2:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
100012ea:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
100012f2:	74 92                	je     10001286 <ssfn_render+0xc9>
100012f4:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
100012fc:	31 c0                	xor    eax,eax
100012fe:	eb d2                	jmp    100012d2 <ssfn_render+0x115>
10001300:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001304:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
1000130b:	74 bc                	je     100012c9 <ssfn_render+0x10c>
1000130d:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001318:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000131f:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001326:	7e 50                	jle    10001378 <ssfn_render+0x1bb>
10001328:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
1000132b:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
1000132f:	c1 fa 04             	sar    edx,0x4
10001332:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
10001338:	80 e2 03             	and    dl,0x3
1000133b:	75 32                	jne    1000136f <ssfn_render+0x1b2>
1000133d:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
10001341:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001347:	75 26                	jne    1000136f <ssfn_render+0x1b2>
10001349:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
10001350:	50                   	push   eax
10001351:	89 f8                	mov    eax,edi
10001353:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000135a:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001361:	e8 b7 f3 ff ff       	call   1000071d <_ssfn_c>
10001366:	59                   	pop    ecx
10001367:	85 c0                	test   eax,eax
10001369:	0f 85 04 01 00 00    	jne    10001473 <ssfn_render+0x2b6>
1000136f:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001376:	eb a0                	jmp    10001318 <ssfn_render+0x15b>
10001378:	85 c0                	test   eax,eax
1000137a:	0f 85 51 ff ff ff    	jne    100012d1 <ssfn_render+0x114>
10001380:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000138b:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001392:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001399:	0f 8e f9 1b 00 00    	jle    10002f98 <ssfn_render+0x1ddb>
1000139f:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100013a2:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100013a6:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100013ac:	74 09                	je     100013b7 <ssfn_render+0x1fa>
100013ae:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100013b5:	eb d4                	jmp    1000138b <ssfn_render+0x1ce>
100013b7:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100013be:	57                   	push   edi
100013bf:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013c6:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013cd:	e8 4b f3 ff ff       	call   1000071d <_ssfn_c>
100013d2:	5a                   	pop    edx
100013d3:	85 c0                	test   eax,eax
100013d5:	74 d7                	je     100013ae <ssfn_render+0x1f1>
100013d7:	e9 97 00 00 00       	jmp    10001473 <ssfn_render+0x2b6>
100013dc:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100013df:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
100013e3:	c1 fa 04             	sar    edx,0x4
100013e6:	31 ca                	xor    edx,ecx
100013e8:	80 e2 03             	and    dl,0x3
100013eb:	0f 84 b7 1b 00 00    	je     10002fa8 <ssfn_render+0x1deb>
100013f1:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100013f8:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100013ff:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10001405:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000140c:	7f ce                	jg     100013dc <ssfn_render+0x21f>
1000140e:	83 e1 03             	and    ecx,0x3
10001411:	83 f9 03             	cmp    ecx,0x3
10001414:	75 1f                	jne    10001435 <ssfn_render+0x278>
10001416:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001421:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001428:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000142f:	0f 8f 9c 1b 00 00    	jg     10002fd1 <ssfn_render+0x1e14>
10001435:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001440:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001447:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000144e:	7e 3e                	jle    1000148e <ssfn_render+0x2d1>
10001450:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001453:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000145a:	57                   	push   edi
1000145b:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001462:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001469:	e8 af f2 ff ff       	call   1000071d <_ssfn_c>
1000146e:	5a                   	pop    edx
1000146f:	85 c0                	test   eax,eax
10001471:	74 12                	je     10001485 <ssfn_render+0x2c8>
10001473:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000147a:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
1000147d:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
10001480:	e9 4c fe ff ff       	jmp    100012d1 <ssfn_render+0x114>
10001485:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000148c:	eb b2                	jmp    10001440 <ssfn_render+0x283>
1000148e:	31 c0                	xor    eax,eax
10001490:	e9 3c fe ff ff       	jmp    100012d1 <ssfn_render+0x114>
10001495:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
1000149b:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100014a6:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100014ac:	7f 16                	jg     100014c4 <ssfn_render+0x307>
100014ae:	89 da                	mov    edx,ebx
100014b0:	31 c0                	xor    eax,eax
100014b2:	39 da                	cmp    edx,ebx
100014b4:	7e 15                	jle    100014cb <ssfn_render+0x30e>
100014b6:	85 c0                	test   eax,eax
100014b8:	75 3d                	jne    100014f7 <ssfn_render+0x33a>
100014ba:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
100014bf:	e9 47 1b 00 00       	jmp    1000300b <ssfn_render+0x1e4e>
100014c4:	bb 04 00 00 00       	mov    ebx,0x4
100014c9:	eb e5                	jmp    100014b0 <ssfn_render+0x2f3>
100014cb:	85 c0                	test   eax,eax
100014cd:	75 28                	jne    100014f7 <ssfn_render+0x33a>
100014cf:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
100014d7:	74 1b                	je     100014f4 <ssfn_render+0x337>
100014d9:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
100014dd:	8b 09                	mov    ecx,DWORD PTR [ecx]
100014df:	85 c9                	test   ecx,ecx
100014e1:	74 11                	je     100014f4 <ssfn_render+0x337>
100014e3:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
100014e6:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
100014ea:	78 08                	js     100014f4 <ssfn_render+0x337>
100014ec:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
100014ef:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
100014f2:	01 c8                	add    eax,ecx
100014f4:	42                   	inc    edx
100014f5:	eb bb                	jmp    100014b2 <ssfn_render+0x2f5>
100014f7:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100014fa:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
100014ff:	85 d2                	test   edx,edx
10001501:	0f 84 04 1b 00 00    	je     1000300b <ssfn_render+0x1e4e>
10001507:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
1000150b:	0f 84 fa 1a 00 00    	je     1000300b <ssfn_render+0x1e4e>
10001511:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001517:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000151b:	85 ff                	test   edi,edi
1000151d:	0f 84 e8 1a 00 00    	je     1000300b <ssfn_render+0x1e4e>
10001523:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
1000152a:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
1000152e:	c1 ef 10             	shr    edi,0x10
10001531:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10001535:	83 ff 10             	cmp    edi,0x10
10001538:	0f 87 af fc ff ff    	ja     100011ed <ssfn_render+0x30>
1000153e:	8d 70 06             	lea    esi,[eax+0x6]
10001541:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001547:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
1000154b:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
10001551:	89 f7                	mov    edi,esi
10001553:	81 e7 00 02 00 00    	and    edi,0x200
10001559:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000155d:	75 34                	jne    10001593 <ssfn_render+0x3d6>
1000155f:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001563:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
1000156a:	85 c9                	test   ecx,ecx
1000156c:	74 25                	je     10001593 <ssfn_render+0x3d6>
1000156e:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001572:	0f b6 ff             	movzx  edi,bh
10001575:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001578:	85 c9                	test   ecx,ecx
1000157a:	74 17                	je     10001593 <ssfn_render+0x3d6>
1000157c:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
10001581:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001584:	85 c9                	test   ecx,ecx
10001586:	74 0b                	je     10001593 <ssfn_render+0x3d6>
10001588:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
1000158e:	e9 25 0d 00 00       	jmp    100022b8 <ssfn_render+0x10fb>
10001593:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
10001597:	f7 c6 40 00 00 00    	test   esi,0x40
1000159d:	75 1a                	jne    100015b9 <ssfn_render+0x3fc>
1000159f:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100015a3:	7e 10                	jle    100015b5 <ssfn_render+0x3f8>
100015a5:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100015a9:	83 c7 04             	add    edi,0x4
100015ac:	83 e7 fc             	and    edi,0xfffffffc
100015af:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100015b3:	eb 04                	jmp    100015b9 <ssfn_render+0x3fc>
100015b5:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100015b9:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
100015be:	f7 c6 02 00 00 00    	test   esi,0x2
100015c4:	74 14                	je     100015da <ssfn_render+0x41d>
100015c6:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
100015c9:	c0 eb 05             	shr    bl,0x5
100015cc:	89 df                	mov    edi,ebx
100015ce:	83 f7 01             	xor    edi,0x1
100015d1:	83 e7 01             	and    edi,0x1
100015d4:	89 fb                	mov    ebx,edi
100015d6:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
100015da:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
100015df:	83 e6 01             	and    esi,0x1
100015e2:	74 10                	je     100015f4 <ssfn_render+0x437>
100015e4:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
100015e8:	75 0a                	jne    100015f4 <ssfn_render+0x437>
100015ea:	8d 51 40             	lea    edx,[ecx+0x40]
100015ed:	c1 fa 06             	sar    edx,0x6
100015f0:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
100015f4:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
100015f8:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100015fd:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10001601:	99                   	cdq    
10001602:	f7 f9                	idiv   ecx
10001604:	89 c1                	mov    ecx,eax
10001606:	31 c0                	xor    eax,eax
10001608:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000160d:	74 0c                	je     1000161b <ssfn_render+0x45e>
1000160f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001613:	be 04 00 00 00       	mov    esi,0x4
10001618:	99                   	cdq    
10001619:	f7 fe                	idiv   esi
1000161b:	01 c8                	add    eax,ecx
1000161d:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001622:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001627:	01 f0                	add    eax,esi
10001629:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
1000162d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001631:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001635:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
1000163a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000163e:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001643:	0f 8f c2 19 00 00    	jg     1000300b <ssfn_render+0x1e4e>
10001649:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
1000164e:	0f 85 f0 00 00 00    	jne    10001744 <ssfn_render+0x587>
10001654:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10001658:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
1000165c:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
10001663:	75 2f                	jne    10001694 <ssfn_render+0x4d7>
10001665:	83 ec 0c             	sub    esp,0xc
10001668:	68 00 04 00 00       	push   0x400
1000166d:	e8 fc ff ff ff       	call   1000166e <ssfn_render+0x4b1>	1000166e: R_386_PC32	malloc
10001672:	83 c4 10             	add    esp,0x10
10001675:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
1000167b:	85 c0                	test   eax,eax
1000167d:	75 08                	jne    10001687 <ssfn_render+0x4ca>
1000167f:	83 c9 ff             	or     ecx,0xffffffff
10001682:	e9 84 19 00 00       	jmp    1000300b <ssfn_render+0x1e4e>
10001687:	89 c7                	mov    edi,eax
10001689:	b9 00 01 00 00       	mov    ecx,0x100
1000168e:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001692:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001694:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001698:	0f b6 dc             	movzx  ebx,ah
1000169b:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100016a1:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100016a4:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100016a7:	75 3a                	jne    100016e3 <ssfn_render+0x526>
100016a9:	83 ec 0c             	sub    esp,0xc
100016ac:	68 00 04 00 00       	push   0x400
100016b1:	e8 fc ff ff ff       	call   100016b2 <ssfn_render+0x4f5>	100016b2: R_386_PC32	malloc
100016b6:	89 03                	mov    DWORD PTR [ebx],eax
100016b8:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
100016bf:	83 c4 10             	add    esp,0x10
100016c2:	89 c2                	mov    edx,eax
100016c4:	0f b6 c4             	movzx  eax,ah
100016c7:	c1 ea 10             	shr    edx,0x10
100016ca:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100016d1:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
100016d4:	85 d2                	test   edx,edx
100016d6:	74 a7                	je     1000167f <ssfn_render+0x4c2>
100016d8:	b9 00 01 00 00       	mov    ecx,0x100
100016dd:	31 c0                	xor    eax,eax
100016df:	89 d7                	mov    edi,edx
100016e1:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100016e3:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
100016ea:	83 ec 0c             	sub    esp,0xc
100016ed:	0f b6 cc             	movzx  ecx,ah
100016f0:	89 c2                	mov    edx,eax
100016f2:	0f b6 c0             	movzx  eax,al
100016f5:	c1 ea 10             	shr    edx,0x10
100016f8:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100016ff:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001702:	8d 1c 82             	lea    ebx,[edx+eax*4]
10001705:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001709:	83 c0 08             	add    eax,0x8
1000170c:	50                   	push   eax
1000170d:	e8 fc ff ff ff       	call   1000170e <ssfn_render+0x551>	1000170e: R_386_PC32	malloc
10001712:	89 03                	mov    DWORD PTR [ebx],eax
10001714:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000171a:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001721:	83 c4 10             	add    esp,0x10
10001724:	89 c2                	mov    edx,eax
10001726:	0f b6 cc             	movzx  ecx,ah
10001729:	c1 ea 10             	shr    edx,0x10
1000172c:	0f b6 c0             	movzx  eax,al
1000172f:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001736:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001739:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000173d:	75 0e                	jne    1000174d <ssfn_render+0x590>
1000173f:	e9 3b ff ff ff       	jmp    1000167f <ssfn_render+0x4c2>
10001744:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001747:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000174d:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10001753:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10001757:	74 2a                	je     10001783 <ssfn_render+0x5c6>
10001759:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000175e:	74 23                	je     10001783 <ssfn_render+0x5c6>
10001760:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001763:	bb 04 00 00 00       	mov    ebx,0x4
10001768:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000176c:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
10001770:	89 cf                	mov    edi,ecx
10001772:	29 c7                	sub    edi,eax
10001774:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001778:	0f af c7             	imul   eax,edi
1000177b:	99                   	cdq    
1000177c:	f7 fb                	idiv   ebx
1000177e:	99                   	cdq    
1000177f:	f7 f9                	idiv   ecx
10001781:	eb 02                	jmp    10001785 <ssfn_render+0x5c8>
10001783:	31 c0                	xor    eax,eax
10001785:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000178b:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
1000178f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10001793:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
1000179b:	66 89 32             	mov    WORD PTR [edx],si
1000179e:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100017a3:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100017a9:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100017ac:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100017b2:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100017b8:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
100017bb:	01 c3                	add    ebx,eax
100017bd:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
100017c0:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100017c6:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100017cc:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
100017cf:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
100017d2:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
100017d8:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
100017de:	8a 12                	mov    dl,BYTE PTR [edx]
100017e0:	83 e2 3f             	and    edx,0x3f
100017e3:	01 d0                	add    eax,edx
100017e5:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
100017e8:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100017ec:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100017f2:	8d 50 08             	lea    edx,[eax+0x8]
100017f5:	b0 ff                	mov    al,0xff
100017f7:	89 d7                	mov    edi,edx
100017f9:	f3 aa                	rep stos BYTE PTR es:[edi],al
100017fb:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001801:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
10001805:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000180b:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
1000180f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001813:	c1 e0 04             	shl    eax,0x4
10001816:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000181a:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000181e:	c1 e0 04             	shl    eax,0x4
10001821:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001825:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000182b:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
1000182f:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001833:	0f 8e 4d 0a 00 00    	jle    10002286 <ssfn_render+0x10c9>
10001839:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000183d:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001841:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001844:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001847:	8a 12                	mov    dl,BYTE PTR [edx]
10001849:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000184d:	83 e2 40             	and    edx,0x40
10001850:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
10001854:	88 c2                	mov    dl,al
10001856:	21 ca                	and    edx,ecx
10001858:	fe c2                	inc    dl
1000185a:	75 14                	jne    10001870 <ssfn_render+0x6b3>
1000185c:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
10001861:	19 c0                	sbb    eax,eax
10001863:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
10001867:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000186b:	e9 09 0a 00 00       	jmp    10002279 <ssfn_render+0x10bc>
10001870:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10001874:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
10001877:	c1 e0 04             	shl    eax,0x4
1000187a:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
1000187e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001883:	99                   	cdq    
10001884:	f7 fe                	idiv   esi
10001886:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000188a:	0f b6 c1             	movzx  eax,cl
1000188d:	c1 e0 04             	shl    eax,0x4
10001890:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001895:	99                   	cdq    
10001896:	f7 fe                	idiv   esi
10001898:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000189c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100018a0:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100018a4:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100018a8:	c1 e2 10             	shl    edx,0x10
100018ab:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100018b0:	74 0e                	je     100018c0 <ssfn_render+0x703>
100018b2:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100018b6:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
100018bb:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
100018be:	eb 0c                	jmp    100018cc <ssfn_render+0x70f>
100018c0:	c1 e0 08             	shl    eax,0x8
100018c3:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
100018c8:	09 d0                	or     eax,edx
100018ca:	09 c3                	or     ebx,eax
100018cc:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
100018cf:	8a 01                	mov    al,BYTE PTR [ecx]
100018d1:	84 c0                	test   al,al
100018d3:	0f 88 17 05 00 00    	js     10001df0 <ssfn_render+0xc33>
100018d9:	89 c7                	mov    edi,eax
100018db:	83 e7 3f             	and    edi,0x3f
100018de:	a8 40                	test   al,0x40
100018e0:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100018e4:	74 10                	je     100018f6 <ssfn_render+0x739>
100018e6:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
100018ea:	89 f8                	mov    eax,edi
100018ec:	41                   	inc    ecx
100018ed:	c1 e0 08             	shl    eax,0x8
100018f0:	09 c2                	or     edx,eax
100018f2:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
100018f6:	8d 41 01             	lea    eax,[ecx+0x1]
100018f9:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001903:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001907:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001912:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001916:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000191a:	83 c0 04             	add    eax,0x4
1000191d:	c1 f8 02             	sar    eax,0x2
10001920:	01 c7                	add    edi,eax
10001922:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001929:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
1000192d:	0f 8f d7 01 00 00    	jg     10001b0a <ssfn_render+0x94d>
10001933:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001936:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
1000193a:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
1000193e:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001942:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001946:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001949:	c1 e0 04             	shl    eax,0x4
1000194c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001951:	99                   	cdq    
10001952:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001956:	01 c6                	add    esi,eax
10001958:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000195c:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001960:	c1 e0 04             	shl    eax,0x4
10001963:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001968:	99                   	cdq    
10001969:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000196d:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001971:	01 c3                	add    ebx,eax
10001973:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001977:	89 c8                	mov    eax,ecx
10001979:	01 c9                	add    ecx,ecx
1000197b:	c1 f8 02             	sar    eax,0x2
1000197e:	83 e1 06             	and    ecx,0x6
10001981:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001985:	d3 f8                	sar    eax,cl
10001987:	83 e0 03             	and    eax,0x3
1000198a:	89 c1                	mov    ecx,eax
1000198c:	83 f8 02             	cmp    eax,0x2
1000198f:	74 4a                	je     100019db <ssfn_render+0x81e>
10001991:	83 f8 03             	cmp    eax,0x3
10001994:	0f 84 e4 00 00 00    	je     10001a7e <ssfn_render+0x8c1>
1000199a:	49                   	dec    ecx
1000199b:	74 20                	je     100019bd <ssfn_render+0x800>
1000199d:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
100019a3:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
100019a9:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
100019af:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
100019b5:	83 c7 02             	add    edi,0x2
100019b8:	e9 41 01 00 00       	jmp    10001afe <ssfn_render+0x941>
100019bd:	83 c7 02             	add    edi,0x2
100019c0:	50                   	push   eax
100019c1:	50                   	push   eax
100019c2:	89 e8                	mov    eax,ebp
100019c4:	53                   	push   ebx
100019c5:	56                   	push   esi
100019c6:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100019ca:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
100019ce:	e8 9c e9 ff ff       	call   1000036f <_ssfn_l>
100019d3:	83 c4 10             	add    esp,0x10
100019d6:	e9 23 01 00 00       	jmp    10001afe <ssfn_render+0x941>
100019db:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
100019df:	83 c7 04             	add    edi,0x4
100019e2:	c1 e0 04             	shl    eax,0x4
100019e5:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019ea:	99                   	cdq    
100019eb:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
100019ef:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
100019f3:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100019f7:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100019fb:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
100019ff:	c1 e0 04             	shl    eax,0x4
10001a02:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a07:	99                   	cdq    
10001a08:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001a0c:	83 ec 0c             	sub    esp,0xc
10001a0f:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001a13:	6a 00                	push   0x0
10001a15:	53                   	push   ebx
10001a16:	56                   	push   esi
10001a17:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001a1b:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001a1f:	99                   	cdq    
10001a20:	f7 f9                	idiv   ecx
10001a22:	01 d8                	add    eax,ebx
10001a24:	50                   	push   eax
10001a25:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001a29:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001a2d:	99                   	cdq    
10001a2e:	f7 f9                	idiv   ecx
10001a30:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001a34:	50                   	push   eax
10001a35:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001a39:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001a3d:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001a43:	99                   	cdq    
10001a44:	f7 f9                	idiv   ecx
10001a46:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001a4c:	50                   	push   eax
10001a4d:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001a51:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001a57:	99                   	cdq    
10001a58:	f7 f9                	idiv   ecx
10001a5a:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001a60:	50                   	push   eax
10001a61:	89 e8                	mov    eax,ebp
10001a63:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001a69:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001a6f:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001a73:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001a77:	e8 04 ea ff ff       	call   10000480 <_ssfn_b>
10001a7c:	eb 7d                	jmp    10001afb <ssfn_render+0x93e>
10001a7e:	83 ec 0c             	sub    esp,0xc
10001a81:	83 c7 06             	add    edi,0x6
10001a84:	6a 00                	push   0x0
10001a86:	53                   	push   ebx
10001a87:	56                   	push   esi
10001a88:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001a8c:	c1 e0 04             	shl    eax,0x4
10001a8f:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001a94:	99                   	cdq    
10001a95:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001a99:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001a9d:	50                   	push   eax
10001a9e:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001aa2:	c1 e0 04             	shl    eax,0x4
10001aa5:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001aaa:	99                   	cdq    
10001aab:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001aaf:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001ab3:	50                   	push   eax
10001ab4:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001ab8:	c1 e0 04             	shl    eax,0x4
10001abb:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001ac0:	99                   	cdq    
10001ac1:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001ac5:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001ac9:	50                   	push   eax
10001aca:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001ace:	c1 e0 04             	shl    eax,0x4
10001ad1:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001ad6:	99                   	cdq    
10001ad7:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001adb:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001adf:	50                   	push   eax
10001ae0:	89 e8                	mov    eax,ebp
10001ae2:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001ae8:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001aee:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001af2:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001af6:	e8 85 e9 ff ff       	call   10000480 <_ssfn_b>
10001afb:	83 c4 30             	add    esp,0x30
10001afe:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001b05:	e9 18 fe ff ff       	jmp    10001922 <ssfn_render+0x765>
10001b0a:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001b10:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001b16:	75 0e                	jne    10001b26 <ssfn_render+0x969>
10001b18:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001b1e:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001b24:	74 2e                	je     10001b54 <ssfn_render+0x997>
10001b26:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001b2c:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001b32:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001b36:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001b3c:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001b42:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001b48:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001b4d:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001b54:	b3 fe                	mov    bl,0xfe
10001b56:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001b5d:	0f 8e 16 07 00 00    	jle    10002279 <ssfn_render+0x10bc>
10001b63:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001b6b:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001b73:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001b7b:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001b83:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001b8b:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001b8f:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001b93:	0f 8d de 06 00 00    	jge    10002277 <ssfn_render+0x10ba>
10001b99:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001b9f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001baa:	83 e8 03             	sub    eax,0x3
10001bad:	31 f6                	xor    esi,esi
10001baf:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001bb3:	89 f8                	mov    eax,edi
10001bb5:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001bb9:	c1 f8 02             	sar    eax,0x2
10001bbc:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001bc0:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001bc7:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001bcb:	0f 8e 16 01 00 00    	jle    10001ce7 <ssfn_render+0xb2a>
10001bd1:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001bd7:	8d 47 01             	lea    eax,[edi+0x1]
10001bda:	01 c0                	add    eax,eax
10001bdc:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001be0:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001be4:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001be9:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001bed:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001bf1:	7d 0c                	jge    10001bff <ssfn_render+0xa42>
10001bf3:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001bf7:	0f 8f db 00 00 00    	jg     10001cd8 <ssfn_render+0xb1b>
10001bfd:	eb 0a                	jmp    10001c09 <ssfn_render+0xa4c>
10001bff:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001c03:	0f 8e cf 00 00 00    	jle    10001cd8 <ssfn_render+0xb1b>
10001c09:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001c0e:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001c12:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001c17:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001c1b:	89 d8                	mov    eax,ebx
10001c1d:	c1 fa 04             	sar    edx,0x4
10001c20:	c1 f8 04             	sar    eax,0x4
10001c23:	39 c2                	cmp    edx,eax
10001c25:	75 0a                	jne    10001c31 <ssfn_render+0xa74>
10001c27:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001c2b:	01 c8                	add    eax,ecx
10001c2d:	d1 f8                	sar    eax,1
10001c2f:	eb 1a                	jmp    10001c4b <ssfn_render+0xa8e>
10001c31:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001c35:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001c39:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001c3d:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001c41:	0f af c1             	imul   eax,ecx
10001c44:	99                   	cdq    
10001c45:	f7 fb                	idiv   ebx
10001c47:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001c4b:	c1 f8 04             	sar    eax,0x4
10001c4e:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001c53:	74 04                	je     10001c59 <ssfn_render+0xa9c>
10001c55:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001c59:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001c5e:	75 3f                	jne    10001c9f <ssfn_render+0xae2>
10001c60:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001c65:	74 38                	je     10001c9f <ssfn_render+0xae2>
10001c67:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001c6b:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001c71:	f7 db                	neg    ebx
10001c73:	01 c2                	add    edx,eax
10001c75:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001c79:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001c7d:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001c81:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001c85:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001c89:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001c8d:	74 10                	je     10001c9f <ssfn_render+0xae2>
10001c8f:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001c93:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001c97:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001c9b:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001c9f:	31 d2                	xor    edx,edx
10001ca1:	39 f2                	cmp    edx,esi
10001ca3:	75 0b                	jne    10001cb0 <ssfn_render+0xaf3>
10001ca5:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001cad:	46                   	inc    esi
10001cae:	eb 28                	jmp    10001cd8 <ssfn_render+0xb1b>
10001cb0:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001cb8:	39 c1                	cmp    ecx,eax
10001cba:	7d 03                	jge    10001cbf <ssfn_render+0xb02>
10001cbc:	42                   	inc    edx
10001cbd:	eb e2                	jmp    10001ca1 <ssfn_render+0xae4>
10001cbf:	89 f1                	mov    ecx,esi
10001cc1:	49                   	dec    ecx
10001cc2:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001cca:	39 d1                	cmp    ecx,edx
10001ccc:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001cd4:	7f eb                	jg     10001cc1 <ssfn_render+0xb04>
10001cd6:	eb cd                	jmp    10001ca5 <ssfn_render+0xae8>
10001cd8:	8d 47 02             	lea    eax,[edi+0x2]
10001cdb:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001ce2:	e9 d9 fe ff ff       	jmp    10001bc0 <ssfn_render+0xa03>
10001ce7:	83 fe 01             	cmp    esi,0x1
10001cea:	7e 1f                	jle    10001d0b <ssfn_render+0xb4e>
10001cec:	f7 c6 01 00 00 00    	test   esi,0x1
10001cf2:	74 24                	je     10001d18 <ssfn_render+0xb5b>
10001cf4:	8d 46 ff             	lea    eax,[esi-0x1]
10001cf7:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001cff:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001d07:	89 c6                	mov    esi,eax
10001d09:	eb 0d                	jmp    10001d18 <ssfn_render+0xb5b>
10001d0b:	85 f6                	test   esi,esi
10001d0d:	0f 84 c7 00 00 00    	je     10001dda <ssfn_render+0xc1d>
10001d13:	be 01 00 00 00       	mov    esi,0x1
10001d18:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001d1e:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001d22:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001d26:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001d2a:	39 d1                	cmp    ecx,edx
10001d2c:	7d 0b                	jge    10001d39 <ssfn_render+0xb7c>
10001d2e:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001d32:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001d36:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001d39:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001d44:	31 c0                	xor    eax,eax
10001d46:	31 d2                	xor    edx,edx
10001d48:	8d 4e ff             	lea    ecx,[esi-0x1]
10001d4b:	39 d1                	cmp    ecx,edx
10001d4d:	7e 7d                	jle    10001dcc <ssfn_render+0xc0f>
10001d4f:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001d57:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001d5f:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001d63:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001d67:	79 02                	jns    10001d6b <ssfn_render+0xbae>
10001d69:	31 c0                	xor    eax,eax
10001d6b:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001d6f:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001d73:	39 cf                	cmp    edi,ecx
10001d75:	7e 04                	jle    10001d7b <ssfn_render+0xbbe>
10001d77:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d7b:	85 d2                	test   edx,edx
10001d7d:	74 12                	je     10001d91 <ssfn_render+0xbd4>
10001d7f:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001d87:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001d8b:	39 c8                	cmp    eax,ecx
10001d8d:	7d 02                	jge    10001d91 <ssfn_render+0xbd4>
10001d8f:	89 c8                	mov    eax,ecx
10001d91:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001d95:	7d 2b                	jge    10001dc2 <ssfn_render+0xc05>
10001d97:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001d9b:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001da1:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001da4:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001da8:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001dac:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001db0:	75 05                	jne    10001db7 <ssfn_render+0xbfa>
10001db2:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001db7:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001dbb:	40                   	inc    eax
10001dbc:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001dc0:	eb cf                	jmp    10001d91 <ssfn_render+0xbd4>
10001dc2:	83 c2 02             	add    edx,0x2
10001dc5:	b0 01                	mov    al,0x1
10001dc7:	e9 7c ff ff ff       	jmp    10001d48 <ssfn_render+0xb8b>
10001dcc:	83 e6 fe             	and    esi,0xfffffffe
10001dcf:	84 c0                	test   al,al
10001dd1:	74 07                	je     10001dda <ssfn_render+0xc1d>
10001dd3:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001dda:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001dde:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001de2:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001de6:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001deb:	e9 9b fd ff ff       	jmp    10001b8b <ssfn_render+0x9ce>
10001df0:	88 c2                	mov    dl,al
10001df2:	80 e2 60             	and    dl,0x60
10001df5:	0f 85 95 02 00 00    	jne    10002090 <ssfn_render+0xed3>
10001dfb:	83 e0 1f             	and    eax,0x1f
10001dfe:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001e02:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001e09:	c1 fb 04             	sar    ebx,0x4
10001e0c:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001e10:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001e14:	40                   	inc    eax
10001e15:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001e19:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001e1d:	c1 f8 04             	sar    eax,0x4
10001e20:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001e24:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001e28:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001e2d:	99                   	cdq    
10001e2e:	f7 fe                	idiv   esi
10001e30:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001e34:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001e38:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001e3d:	99                   	cdq    
10001e3e:	f7 fe                	idiv   esi
10001e40:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001e44:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e4a:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001e4e:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001e52:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001e55:	39 d6                	cmp    esi,edx
10001e57:	7d 0a                	jge    10001e63 <ssfn_render+0xca6>
10001e59:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001e5d:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001e60:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e63:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001e67:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001e6f:	0f af c3             	imul   eax,ebx
10001e72:	31 ff                	xor    edi,edi
10001e74:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001e78:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001e7c:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001e80:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001e84:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001e88:	29 d8                	sub    eax,ebx
10001e8a:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001e8e:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001e92:	0f 8d b1 00 00 00    	jge    10001f49 <ssfn_render+0xd8c>
10001e98:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001e9c:	99                   	cdq    
10001e9d:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001ea1:	89 c6                	mov    esi,eax
10001ea3:	31 c0                	xor    eax,eax
10001ea5:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001eaa:	74 0e                	je     10001eba <ssfn_render+0xcfd>
10001eac:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001eb0:	bb 04 00 00 00       	mov    ebx,0x4
10001eb5:	29 f8                	sub    eax,edi
10001eb7:	99                   	cdq    
10001eb8:	f7 fb                	idiv   ebx
10001eba:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001ebe:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001ec9:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001ecd:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10001ed2:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001ed9:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10001edd:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001ee1:	39 d8                	cmp    eax,ebx
10001ee3:	7d 4e                	jge    10001f33 <ssfn_render+0xd76>
10001ee5:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001ee9:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10001eee:	99                   	cdq    
10001eef:	f7 fb                	idiv   ebx
10001ef1:	8d 14 06             	lea    edx,[esi+eax*1]
10001ef4:	83 e0 07             	and    eax,0x7
10001ef7:	c1 fa 03             	sar    edx,0x3
10001efa:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10001eff:	0f a3 c2             	bt     edx,eax
10001f02:	72 0e                	jb     10001f12 <ssfn_render+0xd55>
10001f04:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f08:	43                   	inc    ebx
10001f09:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10001f10:	eb c0                	jmp    10001ed2 <ssfn_render+0xd15>
10001f12:	31 c0                	xor    eax,eax
10001f14:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001f18:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001f1c:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10001f22:	40                   	inc    eax
10001f23:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10001f27:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10001f2b:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
10001f2f:	7d e3                	jge    10001f14 <ssfn_render+0xd57>
10001f31:	eb d1                	jmp    10001f04 <ssfn_render+0xd47>
10001f33:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10001f37:	47                   	inc    edi
10001f38:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10001f3c:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10001f40:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
10001f44:	e9 45 ff ff ff       	jmp    10001e8e <ssfn_render+0xcd1>
10001f49:	b3 fe                	mov    bl,0xfe
10001f4b:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
10001f52:	0f 85 21 03 00 00    	jne    10002279 <ssfn_render+0x10bc>
10001f58:	31 c0                	xor    eax,eax
10001f5a:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001f5e:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
10001f63:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001f67:	0f 95 c0             	setne  al
10001f6a:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10001f6e:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001f72:	4f                   	dec    edi
10001f73:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001f77:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
10001f7f:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10001f83:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001f8a:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001f8e:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
10001f92:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f96:	31 c0                	xor    eax,eax
10001f98:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10001f9b:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10001f9f:	83 c1 04             	add    ecx,0x4
10001fa2:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001fa6:	0f 8d c0 02 00 00    	jge    1000226c <ssfn_render+0x10af>
10001fac:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10001fb0:	8d 77 01             	lea    esi,[edi+0x1]
10001fb3:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fb7:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10001fbb:	4f                   	dec    edi
10001fbc:	be 01 00 00 00       	mov    esi,0x1
10001fc1:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10001fc5:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10001fc9:	7e 63                	jle    1000202e <ssfn_render+0xe71>
10001fcb:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001fcf:	b9 01 00 00 00       	mov    ecx,0x1
10001fd4:	89 ca                	mov    edx,ecx
10001fd6:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10001fda:	7e 45                	jle    10002021 <ssfn_render+0xe64>
10001fdc:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001fe2:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10001fe7:	75 34                	jne    1000201d <ssfn_render+0xe60>
10001fe9:	89 c7                	mov    edi,eax
10001feb:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001fef:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10001ff3:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10001ff7:	74 0c                	je     10002005 <ssfn_render+0xe48>
10001ff9:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001ffd:	01 d7                	add    edi,edx
10001fff:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002003:	75 18                	jne    1000201d <ssfn_render+0xe60>
10002005:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002009:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
1000200d:	74 06                	je     10002015 <ssfn_render+0xe58>
1000200f:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002013:	75 08                	jne    1000201d <ssfn_render+0xe60>
10002015:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
10002019:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
1000201d:	41                   	inc    ecx
1000201e:	40                   	inc    eax
1000201f:	eb b3                	jmp    10001fd4 <ssfn_render+0xe17>
10002021:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002025:	46                   	inc    esi
10002026:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
1000202a:	b0 01                	mov    al,0x1
1000202c:	eb 97                	jmp    10001fc5 <ssfn_render+0xe08>
1000202e:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002032:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002036:	bb 01 00 00 00       	mov    ebx,0x1
1000203b:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
1000203f:	7e 3d                	jle    1000207e <ssfn_render+0xec1>
10002041:	b8 01 00 00 00       	mov    eax,0x1
10002046:	89 c2                	mov    edx,eax
10002048:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000204c:	7e 23                	jle    10002071 <ssfn_render+0xeb4>
1000204e:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10002052:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
10002058:	8d 14 07             	lea    edx,[edi+eax*1]
1000205b:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
10002060:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002064:	75 08                	jne    1000206e <ssfn_render+0xeb1>
10002066:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
1000206a:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
1000206e:	40                   	inc    eax
1000206f:	eb d5                	jmp    10002046 <ssfn_render+0xe89>
10002071:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002075:	43                   	inc    ebx
10002076:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
1000207a:	b0 01                	mov    al,0x1
1000207c:	eb bd                	jmp    1000203b <ssfn_render+0xe7e>
1000207e:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10002081:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002085:	01 c9                	add    ecx,ecx
10002087:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
1000208b:	e9 08 ff ff ff       	jmp    10001f98 <ssfn_render+0xddb>
10002090:	b3 fe                	mov    bl,0xfe
10002092:	80 fa 20             	cmp    dl,0x20
10002095:	0f 85 de 01 00 00    	jne    10002279 <ssfn_render+0x10bc>
1000209b:	89 c3                	mov    ebx,eax
1000209d:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100020a1:	c1 e3 08             	shl    ebx,0x8
100020a4:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100020aa:	09 c3                	or     ebx,eax
100020ac:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100020b0:	43                   	inc    ebx
100020b1:	40                   	inc    eax
100020b2:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100020b6:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
100020ba:	40                   	inc    eax
100020bb:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100020bf:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100020c3:	c1 f8 04             	sar    eax,0x4
100020c6:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020ca:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100020ce:	c1 f8 04             	sar    eax,0x4
100020d1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100020d5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100020d9:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
100020de:	99                   	cdq    
100020df:	f7 fe                	idiv   esi
100020e1:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100020e5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100020e9:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
100020ee:	99                   	cdq    
100020ef:	f7 fe                	idiv   esi
100020f1:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100020f5:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020f9:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100020ff:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002103:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002107:	39 d6                	cmp    esi,edx
10002109:	7d 0b                	jge    10002116 <ssfn_render+0xf59>
1000210b:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
1000210f:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002113:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002116:	83 c1 04             	add    ecx,0x4
10002119:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002124:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002127:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000212b:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
1000212f:	72 35                	jb     10002166 <ssfn_render+0xfa9>
10002131:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10002135:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002139:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
1000213e:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002142:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002146:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000214d:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
10002151:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10002159:	31 d2                	xor    edx,edx
1000215b:	31 ff                	xor    edi,edi
1000215d:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
10002161:	e9 cc 00 00 00       	jmp    10002232 <ssfn_render+0x1075>
10002166:	8a 11                	mov    dl,BYTE PTR [ecx]
10002168:	89 d0                	mov    eax,edx
1000216a:	83 e0 7f             	and    eax,0x7f
1000216d:	84 d2                	test   dl,dl
1000216f:	8d 78 01             	lea    edi,[eax+0x1]
10002172:	78 09                	js     1000217d <ssfn_render+0xfc0>
10002174:	41                   	inc    ecx
10002175:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002179:	89 ca                	mov    edx,ecx
1000217b:	eb 3d                	jmp    100021ba <ssfn_render+0xffd>
1000217d:	48                   	dec    eax
1000217e:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002185:	83 f8 fe             	cmp    eax,0xfffffffe
10002188:	74 16                	je     100021a0 <ssfn_render+0xfe3>
1000218a:	8d 5a 01             	lea    ebx,[edx+0x1]
1000218d:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002194:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
10002197:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
1000219e:	eb dd                	jmp    1000217d <ssfn_render+0xfc0>
100021a0:	83 c1 02             	add    ecx,0x2
100021a3:	eb 86                	jmp    1000212b <ssfn_render+0xf6e>
100021a5:	42                   	inc    edx
100021a6:	8d 73 01             	lea    esi,[ebx+0x1]
100021a9:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100021b0:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
100021b3:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
100021ba:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
100021be:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
100021c5:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
100021ca:	75 d9                	jne    100021a5 <ssfn_render+0xfe8>
100021cc:	01 f9                	add    ecx,edi
100021ce:	e9 58 ff ff ff       	jmp    1000212b <ssfn_render+0xf6e>
100021d3:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100021d7:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
100021db:	99                   	cdq    
100021dc:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
100021e0:	0f af c8             	imul   ecx,eax
100021e3:	31 c0                	xor    eax,eax
100021e5:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100021ea:	74 0e                	je     100021fa <ssfn_render+0x103d>
100021ec:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100021f0:	bb 04 00 00 00       	mov    ebx,0x4
100021f5:	29 f8                	sub    eax,edi
100021f7:	99                   	cdq    
100021f8:	f7 fb                	idiv   ebx
100021fa:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100021fe:	31 db                	xor    ebx,ebx
10002200:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002204:	31 f6                	xor    esi,esi
10002206:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
1000220d:	01 c1                	add    ecx,eax
1000220f:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002213:	7f 30                	jg     10002245 <ssfn_render+0x1088>
10002215:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002219:	85 c0                	test   eax,eax
1000221b:	79 02                	jns    1000221f <ssfn_render+0x1062>
1000221d:	31 c0                	xor    eax,eax
1000221f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002223:	47                   	inc    edi
10002224:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
10002228:	b2 01                	mov    dl,0x1
1000222a:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
1000222e:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002232:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002236:	7c 9b                	jl     100021d3 <ssfn_render+0x1016>
10002238:	84 d2                	test   dl,dl
1000223a:	74 3b                	je     10002277 <ssfn_render+0x10ba>
1000223c:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002243:	eb 32                	jmp    10002277 <ssfn_render+0x10ba>
10002245:	89 d8                	mov    eax,ebx
10002247:	99                   	cdq    
10002248:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000224c:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
10002253:	3c ff                	cmp    al,0xff
10002255:	74 0e                	je     10002265 <ssfn_render+0x10a8>
10002257:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000225b:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002261:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
10002265:	46                   	inc    esi
10002266:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
1000226a:	eb a3                	jmp    1000220f <ssfn_render+0x1052>
1000226c:	84 c0                	test   al,al
1000226e:	74 07                	je     10002277 <ssfn_render+0x10ba>
10002270:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
10002277:	b3 fe                	mov    bl,0xfe
10002279:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
1000227d:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
10002281:	e9 9f f5 ff ff       	jmp    10001825 <ssfn_render+0x668>
10002286:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000228c:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000228f:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
10002292:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
10002295:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000229b:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
1000229f:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100022a3:	89 f0                	mov    eax,esi
100022a5:	89 d9                	mov    ecx,ebx
100022a7:	43                   	inc    ebx
100022a8:	39 de                	cmp    esi,ebx
100022aa:	7e 08                	jle    100022b4 <ssfn_render+0x10f7>
100022ac:	48                   	dec    eax
100022ad:	29 c8                	sub    eax,ecx
100022af:	88 42 07             	mov    BYTE PTR [edx+0x7],al
100022b2:	eb 04                	jmp    100022b8 <ssfn_render+0x10fb>
100022b4:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
100022b8:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
100022c0:	0f 84 c9 0c 00 00    	je     10002f8f <ssfn_render+0x1dd2>
100022c6:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
100022cc:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
100022d2:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100022d6:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
100022d9:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100022dd:	0f ba e0 0c          	bt     eax,0xc
100022e1:	72 22                	jb     10002305 <ssfn_render+0x1148>
100022e3:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
100022e6:	83 e0 0f             	and    eax,0xf
100022e9:	3c 03                	cmp    al,0x3
100022eb:	74 18                	je     10002305 <ssfn_render+0x1148>
100022ed:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
100022f1:	84 c9                	test   cl,cl
100022f3:	74 10                	je     10002305 <ssfn_render+0x1148>
100022f5:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
100022f9:	0f af d7             	imul   edx,edi
100022fc:	89 d0                	mov    eax,edx
100022fe:	99                   	cdq    
100022ff:	f7 f9                	idiv   ecx
10002301:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002305:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002309:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
1000230f:	7d 06                	jge    10002317 <ssfn_render+0x115a>
10002311:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002317:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
1000231d:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
10002321:	0f b7 13             	movzx  edx,WORD PTR [ebx]
10002324:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002329:	89 d0                	mov    eax,edx
1000232b:	99                   	cdq    
1000232c:	f7 f9                	idiv   ecx
1000232e:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002332:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002336:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
10002339:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000233d:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
10002341:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002345:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
1000234a:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000234e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002353:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002357:	99                   	cdq    
10002358:	f7 f9                	idiv   ecx
1000235a:	31 d2                	xor    edx,edx
1000235c:	83 ff 10             	cmp    edi,0x10
1000235f:	0f 9f c2             	setg   dl
10002362:	42                   	inc    edx
10002363:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
10002367:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
1000236b:	7d 08                	jge    10002375 <ssfn_render+0x11b8>
1000236d:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002371:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10002375:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10002379:	39 c2                	cmp    edx,eax
1000237b:	7d 04                	jge    10002381 <ssfn_render+0x11c4>
1000237d:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002381:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
10002386:	74 4c                	je     100023d4 <ssfn_render+0x1217>
10002388:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000238c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002391:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002395:	99                   	cdq    
10002396:	f7 f9                	idiv   ecx
10002398:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000239c:	81 e2 00 08 00 00    	and    edx,0x800
100023a2:	74 04                	je     100023a8 <ssfn_render+0x11eb>
100023a4:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100023a8:	01 d0                	add    eax,edx
100023aa:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100023b0:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100023b4:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
100023b8:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
100023bc:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100023c1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100023c5:	99                   	cdq    
100023c6:	f7 f9                	idiv   ecx
100023c8:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100023cc:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
100023d2:	eb 22                	jmp    100023f6 <ssfn_render+0x1239>
100023d4:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100023d8:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
100023e2:	d1 f8                	sar    eax,1
100023e4:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
100023ec:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100023f0:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100023f6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100023fd:	8b 18                	mov    ebx,DWORD PTR [eax]
100023ff:	85 db                	test   ebx,ebx
10002401:	0f 84 2e 09 00 00    	je     10002d35 <ssfn_render+0x1b78>
10002407:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
1000240b:	89 d1                	mov    ecx,edx
1000240d:	89 d0                	mov    eax,edx
1000240f:	66 c1 f9 0b          	sar    cx,0xb
10002413:	c1 f8 1f             	sar    eax,0x1f
10002416:	31 c2                	xor    edx,eax
10002418:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
1000241c:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
10002420:	88 c8                	mov    al,cl
10002422:	83 e0 10             	and    eax,0x10
10002425:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
10002429:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000242d:	83 c0 40             	add    eax,0x40
10002430:	c1 f8 06             	sar    eax,0x6
10002433:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
1000243a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000243e:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002442:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002446:	7d 08                	jge    10002450 <ssfn_render+0x1293>
10002448:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000244c:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002450:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002453:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
1000245b:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000245f:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
10002467:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
1000246b:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002470:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002474:	99                   	cdq    
10002475:	f7 f9                	idiv   ecx
10002477:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000247b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002482:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002485:	0f b6 f4             	movzx  esi,ah
10002488:	89 c2                	mov    edx,eax
1000248a:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
1000248e:	c1 ea 10             	shr    edx,0x10
10002491:	0f b6 fa             	movzx  edi,dl
10002494:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
10002498:	0f b6 f8             	movzx  edi,al
1000249b:	c1 e8 18             	shr    eax,0x18
1000249e:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100024a2:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100024a6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100024ad:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100024b0:	0f b6 fc             	movzx  edi,ah
100024b3:	89 c2                	mov    edx,eax
100024b5:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
100024bc:	c1 ea 10             	shr    edx,0x10
100024bf:	0f b6 c0             	movzx  eax,al
100024c2:	0f b6 f2             	movzx  esi,dl
100024c5:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100024cc:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
100024d3:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
100024d7:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100024de:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
100024e5:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
100024e9:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
100024ed:	0f af c2             	imul   eax,edx
100024f0:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
100024f4:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
100024f8:	8d 04 90             	lea    eax,[eax+edx*4]
100024fb:	01 d8                	add    eax,ebx
100024fd:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
10002504:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10002508:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
1000250f:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002514:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
1000251b:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000251f:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002523:	0f 8d e2 04 00 00    	jge    10002a0b <ssfn_render+0x184e>
10002529:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002530:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002537:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
1000253b:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
1000253f:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002543:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002547:	39 d0                	cmp    eax,edx
10002549:	0f 8d bc 04 00 00    	jge    10002a0b <ssfn_render+0x184e>
1000254f:	85 c0                	test   eax,eax
10002551:	0f 88 94 04 00 00    	js     100029eb <ssfn_render+0x182e>
10002557:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000255d:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10002561:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002565:	c1 e1 08             	shl    ecx,0x8
10002568:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
10002570:	89 c8                	mov    eax,ecx
10002572:	0f af c3             	imul   eax,ebx
10002575:	99                   	cdq    
10002576:	f7 fe                	idiv   esi
10002578:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
1000257f:	c1 f8 08             	sar    eax,0x8
10002582:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
10002589:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
1000258f:	0f af c3             	imul   eax,ebx
10002592:	99                   	cdq    
10002593:	f7 fe                	idiv   esi
10002595:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
10002599:	c1 f8 08             	sar    eax,0x8
1000259c:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100025a3:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100025a7:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100025ae:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
100025b5:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025bc:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
100025c0:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100025c4:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100025c8:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
100025cc:	0f 8d 19 04 00 00    	jge    100029eb <ssfn_render+0x182e>
100025d2:	85 c0                	test   eax,eax
100025d4:	0f 88 ff 03 00 00    	js     100029d9 <ssfn_render+0x181c>
100025da:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025e1:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
100025e5:	75 42                	jne    10002629 <ssfn_render+0x146c>
100025e7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100025eb:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
100025f2:	b9 10 00 00 00       	mov    ecx,0x10
100025f7:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100025fa:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002601:	89 c2                	mov    edx,eax
10002603:	0f b6 fc             	movzx  edi,ah
10002606:	d3 ea                	shr    edx,cl
10002608:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000260f:	0f b6 f2             	movzx  esi,dl
10002612:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002616:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000261d:	d3 e8                	shr    eax,cl
1000261f:	0f b6 c0             	movzx  eax,al
10002622:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002629:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000262f:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002633:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002636:	c1 e1 08             	shl    ecx,0x8
10002639:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
1000263d:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10002645:	89 c8                	mov    eax,ecx
10002647:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
1000264f:	0f af c3             	imul   eax,ebx
10002652:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
1000265a:	99                   	cdq    
1000265b:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10002663:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
10002667:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
1000266f:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
10002676:	c1 f8 08             	sar    eax,0x8
10002679:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
10002680:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
10002686:	0f af c3             	imul   eax,ebx
10002689:	99                   	cdq    
1000268a:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
1000268e:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
10002692:	c1 f8 08             	sar    eax,0x8
10002695:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
1000269c:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100026a3:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100026a7:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100026ab:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100026af:	0f 8d 3b 02 00 00    	jge    100028f0 <ssfn_render+0x1733>
100026b5:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
100026b9:	c1 fa 08             	sar    edx,0x8
100026bc:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
100026c3:	75 25                	jne    100026ea <ssfn_render+0x152d>
100026c5:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
100026ca:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
100026d1:	b8 00 01 00 00       	mov    eax,0x100
100026d6:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
100026de:	29 c8                	sub    eax,ecx
100026e0:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100026e4:	39 c7                	cmp    edi,eax
100026e6:	7e 1c                	jle    10002704 <ssfn_render+0x1547>
100026e8:	eb 16                	jmp    10002700 <ssfn_render+0x1543>
100026ea:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
100026f2:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
100026f9:	75 09                	jne    10002704 <ssfn_render+0x1547>
100026fb:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
10002700:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002704:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10002708:	0f b7 00             	movzx  eax,WORD PTR [eax]
1000270b:	0f af c2             	imul   eax,edx
1000270e:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
10002715:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
1000271a:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
1000271f:	c1 f8 08             	sar    eax,0x8
10002722:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
10002729:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
10002730:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002734:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
10002738:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
1000273c:	0f 8d a1 01 00 00    	jge    100028e3 <ssfn_render+0x1726>
10002742:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002746:	c1 f8 08             	sar    eax,0x8
10002749:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
10002750:	75 3b                	jne    1000278d <ssfn_render+0x15d0>
10002752:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
10002757:	ba 00 01 00 00       	mov    edx,0x100
1000275c:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
10002764:	29 ca                	sub    edx,ecx
10002766:	89 f1                	mov    ecx,esi
10002768:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
1000276f:	39 d1                	cmp    ecx,edx
10002771:	7c 0e                	jl     10002781 <ssfn_render+0x15c4>
10002773:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002777:	81 fa 00 01 00 00    	cmp    edx,0x100
1000277d:	74 22                	je     100027a1 <ssfn_render+0x15e4>
1000277f:	89 d1                	mov    ecx,edx
10002781:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
10002786:	89 cf                	mov    edi,ecx
10002788:	c1 ff 08             	sar    edi,0x8
1000278b:	eb 14                	jmp    100027a1 <ssfn_render+0x15e4>
1000278d:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
10002794:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
1000279b:	74 04                	je     100027a1 <ssfn_render+0x15e4>
1000279d:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100027a1:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100027a5:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100027a9:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100027b0:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
100027b5:	81 fa ff 00 00 00    	cmp    edx,0xff
100027bb:	75 37                	jne    100027f4 <ssfn_render+0x1637>
100027bd:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
100027c4:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
100027cc:	0f af c7             	imul   eax,edi
100027cf:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100027d3:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
100027da:	0f af c7             	imul   eax,edi
100027dd:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100027e1:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
100027e8:	0f af c7             	imul   eax,edi
100027eb:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
100027ef:	e9 e2 00 00 00       	jmp    100028d6 <ssfn_render+0x1719>
100027f4:	81 fa fe 00 00 00    	cmp    edx,0xfe
100027fa:	74 2d                	je     10002829 <ssfn_render+0x166c>
100027fc:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100027ff:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002802:	85 c9                	test   ecx,ecx
10002804:	74 23                	je     10002829 <ssfn_render+0x166c>
10002806:	01 c8                	add    eax,ecx
10002808:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
1000280b:	89 d9                	mov    ecx,ebx
1000280d:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
10002814:	c1 e9 10             	shr    ecx,0x10
10002817:	0f b6 f7             	movzx  esi,bh
1000281a:	0f b6 c1             	movzx  eax,cl
1000281d:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002821:	0f b6 c3             	movzx  eax,bl
10002824:	c1 eb 18             	shr    ebx,0x18
10002827:	eb 14                	jmp    1000283d <ssfn_render+0x1680>
10002829:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000282d:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10002831:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002835:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
10002839:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000283d:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002843:	75 25                	jne    1000286a <ssfn_render+0x16ad>
10002845:	0f af c7             	imul   eax,edi
10002848:	0f af f7             	imul   esi,edi
1000284b:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
1000284f:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002853:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
10002859:	0f af cf             	imul   ecx,edi
1000285c:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
10002860:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
10002864:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
10002868:	eb 6c                	jmp    100028d6 <ssfn_render+0x1719>
1000286a:	0f af f3             	imul   esi,ebx
1000286d:	0f af c3             	imul   eax,ebx
10002870:	b9 ff 00 00 00       	mov    ecx,0xff
10002875:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
1000287c:	29 d9                	sub    ecx,ebx
1000287e:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10002882:	0f af d1             	imul   edx,ecx
10002885:	b9 ff 00 00 00       	mov    ecx,0xff
1000288a:	01 d0                	add    eax,edx
1000288c:	0f af c7             	imul   eax,edi
1000288f:	99                   	cdq    
10002890:	f7 f9                	idiv   ecx
10002892:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002896:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
1000289a:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100028a2:	01 f0                	add    eax,esi
100028a4:	89 ce                	mov    esi,ecx
100028a6:	0f af c7             	imul   eax,edi
100028a9:	99                   	cdq    
100028aa:	f7 f9                	idiv   ecx
100028ac:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100028b0:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100028b4:	0f af cb             	imul   ecx,ebx
100028b7:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100028bb:	0f af df             	imul   ebx,edi
100028be:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
100028c6:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
100028ca:	01 c8                	add    eax,ecx
100028cc:	0f af c7             	imul   eax,edi
100028cf:	99                   	cdq    
100028d0:	f7 fe                	idiv   esi
100028d2:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
100028d6:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
100028de:	e9 51 fe ff ff       	jmp    10002734 <ssfn_render+0x1577>
100028e3:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
100028eb:	e9 b7 fd ff ff       	jmp    100026a7 <ssfn_render+0x14ea>
100028f0:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
100028f5:	74 30                	je     10002927 <ssfn_render+0x176a>
100028f7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100028fb:	31 d2                	xor    edx,edx
100028fd:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002901:	31 d2                	xor    edx,edx
10002903:	89 c1                	mov    ecx,eax
10002905:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002909:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
1000290d:	31 d2                	xor    edx,edx
1000290f:	89 c6                	mov    esi,eax
10002911:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002915:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002919:	31 d2                	xor    edx,edx
1000291b:	89 c3                	mov    ebx,eax
1000291d:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002921:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002925:	eb 1c                	jmp    10002943 <ssfn_render+0x1786>
10002927:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
1000292b:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
1000292f:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002933:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002937:	c1 e9 08             	shr    ecx,0x8
1000293a:	c1 ee 08             	shr    esi,0x8
1000293d:	c1 eb 08             	shr    ebx,0x8
10002940:	c1 e8 08             	shr    eax,0x8
10002943:	83 f8 0f             	cmp    eax,0xf
10002946:	0f 86 8d 00 00 00    	jbe    100029d9 <ssfn_render+0x181c>
1000294c:	89 ca                	mov    edx,ecx
1000294e:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002954:	76 05                	jbe    1000295b <ssfn_render+0x179e>
10002956:	ba ff 00 00 00       	mov    edx,0xff
1000295b:	b9 10 00 00 00       	mov    ecx,0x10
10002960:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002967:	d3 e2                	shl    edx,cl
10002969:	3d ff 00 00 00       	cmp    eax,0xff
1000296e:	89 d1                	mov    ecx,edx
10002970:	76 05                	jbe    10002977 <ssfn_render+0x17ba>
10002972:	b8 ff 00 00 00       	mov    eax,0xff
10002977:	c1 e0 18             	shl    eax,0x18
1000297a:	09 c8                	or     eax,ecx
1000297c:	81 fe ff 00 00 00    	cmp    esi,0xff
10002982:	76 05                	jbe    10002989 <ssfn_render+0x17cc>
10002984:	be ff 00 00 00       	mov    esi,0xff
10002989:	c1 e6 08             	shl    esi,0x8
1000298c:	09 f0                	or     eax,esi
1000298e:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002994:	76 05                	jbe    1000299b <ssfn_render+0x17de>
10002996:	bb ff 00 00 00       	mov    ebx,0xff
1000299b:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
1000299f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100029a3:	d3 e3                	shl    ebx,cl
100029a5:	09 c3                	or     ebx,eax
100029a7:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
100029ae:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
100029b1:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100029b5:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
100029b9:	75 1e                	jne    100029d9 <ssfn_render+0x181c>
100029bb:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
100029c2:	7e 07                	jle    100029cb <ssfn_render+0x180e>
100029c4:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
100029cb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100029cf:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
100029d3:	7d 04                	jge    100029d9 <ssfn_render+0x181c>
100029d5:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
100029d9:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
100029dd:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100029e1:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100029e5:	0f 85 ca fb ff ff    	jne    100025b5 <ssfn_render+0x13f8>
100029eb:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100029f2:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
100029f6:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
100029fa:	25 fc ff 00 00       	and    eax,0xfffc
100029ff:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002a06:	e9 10 fb ff ff       	jmp    1000251b <ssfn_render+0x135e>
10002a0b:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002a12:	0f 84 90 01 00 00    	je     10002ba8 <ssfn_render+0x19eb>
10002a18:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002a20:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002a27:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002a2b:	40                   	inc    eax
10002a2c:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002a30:	29 c7                	sub    edi,eax
10002a32:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002a36:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002a3a:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002a3e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002a42:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002a46:	7e 09                	jle    10002a51 <ssfn_render+0x1894>
10002a48:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a4c:	40                   	inc    eax
10002a4d:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002a51:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002a58:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002a5f:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002a63:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002a67:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002a6b:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002a6f:	0f af c2             	imul   eax,edx
10002a72:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002a76:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002a7a:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002a7e:	03 07                	add    eax,DWORD PTR [edi]
10002a80:	89 c7                	mov    edi,eax
10002a82:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002a86:	c1 e0 18             	shl    eax,0x18
10002a89:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002a8d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002a91:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002a95:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002a9a:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002a9e:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002aa2:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002aa6:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002aaa:	0f 8e f8 00 00 00    	jle    10002ba8 <ssfn_render+0x19eb>
10002ab0:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ab7:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002abe:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002ac2:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002ac6:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002aca:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002ace:	39 d0                	cmp    eax,edx
10002ad0:	0f 8d d2 00 00 00    	jge    10002ba8 <ssfn_render+0x19eb>
10002ad6:	31 db                	xor    ebx,ebx
10002ad8:	85 c0                	test   eax,eax
10002ada:	79 23                	jns    10002aff <ssfn_render+0x1942>
10002adc:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ae3:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002ae7:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002aeb:	25 fc ff 00 00       	and    eax,0xfffc
10002af0:	01 c7                	add    edi,eax
10002af2:	eb aa                	jmp    10002a9e <ssfn_render+0x18e1>
10002af4:	85 c0                	test   eax,eax
10002af6:	79 20                	jns    10002b18 <ssfn_render+0x195b>
10002af8:	43                   	inc    ebx
10002af9:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002afd:	7c dd                	jl     10002adc <ssfn_render+0x191f>
10002aff:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b06:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002b0a:	01 d8                	add    eax,ebx
10002b0c:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002b10:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002b14:	7c de                	jl     10002af4 <ssfn_render+0x1937>
10002b16:	eb c4                	jmp    10002adc <ssfn_render+0x191f>
10002b18:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002b1c:	7e 06                	jle    10002b24 <ssfn_render+0x1967>
10002b1e:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002b22:	7f d4                	jg     10002af8 <ssfn_render+0x193b>
10002b24:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002b27:	b8 10 00 00 00       	mov    eax,0x10
10002b2c:	0f b6 f6             	movzx  esi,dh
10002b2f:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002b33:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002b37:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002b3b:	89 d0                	mov    eax,edx
10002b3d:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002b41:	d3 e8                	shr    eax,cl
10002b43:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002b47:	0f b6 c0             	movzx  eax,al
10002b4a:	d3 ea                	shr    edx,cl
10002b4c:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002b50:	0f b6 f2             	movzx  esi,dl
10002b53:	29 c1                	sub    ecx,eax
10002b55:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002b59:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002b5e:	29 f2                	sub    edx,esi
10002b60:	c1 f9 08             	sar    ecx,0x8
10002b63:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002b68:	01 c8                	add    eax,ecx
10002b6a:	c1 fa 08             	sar    edx,0x8
10002b6d:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002b71:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002b75:	d3 e0                	shl    eax,cl
10002b77:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002b7b:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002b7f:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002b83:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002b87:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002b8c:	d3 e6                	shl    esi,cl
10002b8e:	c1 fa 08             	sar    edx,0x8
10002b91:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002b95:	c1 e2 08             	shl    edx,0x8
10002b98:	09 d0                	or     eax,edx
10002b9a:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002b9e:	09 c6                	or     esi,eax
10002ba0:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002ba3:	e9 50 ff ff ff       	jmp    10002af8 <ssfn_render+0x193b>
10002ba8:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002baf:	0f 84 80 01 00 00    	je     10002d35 <ssfn_render+0x1b78>
10002bb5:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002bb9:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002bbd:	d1 fa                	sar    edx,1
10002bbf:	40                   	inc    eax
10002bc0:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002bc4:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002bc8:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002bcc:	7e 09                	jle    10002bd7 <ssfn_render+0x1a1a>
10002bce:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002bd2:	40                   	inc    eax
10002bd3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002bd7:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002bde:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002be5:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002be9:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bed:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002bf1:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bf5:	01 d0                	add    eax,edx
10002bf7:	0f af c1             	imul   eax,ecx
10002bfa:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002bfe:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002c02:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002c06:	03 03                	add    eax,DWORD PTR [ebx]
10002c08:	89 c7                	mov    edi,eax
10002c0a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002c0e:	c1 e0 18             	shl    eax,0x18
10002c11:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c15:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002c1d:	01 d0                	add    eax,edx
10002c1f:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002c23:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002c28:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002c2c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002c30:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002c34:	0f 8e fb 00 00 00    	jle    10002d35 <ssfn_render+0x1b78>
10002c3a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c41:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c45:	01 d8                	add    eax,ebx
10002c47:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002c4e:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c52:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002c56:	39 d0                	cmp    eax,edx
10002c58:	0f 8d d7 00 00 00    	jge    10002d35 <ssfn_render+0x1b78>
10002c5e:	31 f6                	xor    esi,esi
10002c60:	85 c0                	test   eax,eax
10002c62:	0f 89 ad 00 00 00    	jns    10002d15 <ssfn_render+0x1b58>
10002c68:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c6f:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c73:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c77:	25 fc ff 00 00       	and    eax,0xfffc
10002c7c:	01 c7                	add    edi,eax
10002c7e:	eb ac                	jmp    10002c2c <ssfn_render+0x1a6f>
10002c80:	85 c0                	test   eax,eax
10002c82:	0f 88 82 00 00 00    	js     10002d0a <ssfn_render+0x1b4d>
10002c88:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002c8b:	b8 10 00 00 00       	mov    eax,0x10
10002c90:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002c94:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002c98:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002c9c:	89 d8                	mov    eax,ebx
10002c9e:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002ca2:	d3 e8                	shr    eax,cl
10002ca4:	0f b6 cf             	movzx  ecx,bh
10002ca7:	0f b6 c0             	movzx  eax,al
10002caa:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002cae:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cb2:	d3 eb                	shr    ebx,cl
10002cb4:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002cb8:	0f b6 db             	movzx  ebx,bl
10002cbb:	29 c1                	sub    ecx,eax
10002cbd:	29 da                	sub    edx,ebx
10002cbf:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cc4:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cc9:	c1 f9 08             	sar    ecx,0x8
10002ccc:	c1 fa 08             	sar    edx,0x8
10002ccf:	01 c8                	add    eax,ecx
10002cd1:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002cd5:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002cd9:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cdd:	d3 e0                	shl    eax,cl
10002cdf:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002ce3:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002ce7:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cec:	c1 fa 08             	sar    edx,0x8
10002cef:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002cf3:	c1 e2 08             	shl    edx,0x8
10002cf6:	09 d0                	or     eax,edx
10002cf8:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002cfb:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002cff:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002d03:	d3 e2                	shl    edx,cl
10002d05:	09 c2                	or     edx,eax
10002d07:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002d0a:	46                   	inc    esi
10002d0b:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002d0f:	0f 8c 53 ff ff ff    	jl     10002c68 <ssfn_render+0x1aab>
10002d15:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d1c:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002d20:	01 f0                	add    eax,esi
10002d22:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002d26:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002d2a:	0f 8c 50 ff ff ff    	jl     10002c80 <ssfn_render+0x1ac3>
10002d30:	e9 33 ff ff ff       	jmp    10002c68 <ssfn_render+0x1aab>
10002d35:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002d3c:	74 04                	je     10002d42 <ssfn_render+0x1b85>
10002d3e:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002d42:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d46:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d4a:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002d50:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d57:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002d5b:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002d62:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002d65:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002d69:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002d6f:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002d73:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002d78:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002d7c:	99                   	cdq    
10002d7d:	f7 f9                	idiv   ecx
10002d7f:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002d83:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002d89:	25 80 00 00 00       	and    eax,0x80
10002d8e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002d92:	0f 85 f7 01 00 00    	jne    10002f8f <ssfn_render+0x1dd2>
10002d98:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002d9b:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002d9f:	0f 84 ea 01 00 00    	je     10002f8f <ssfn_render+0x1dd2>
10002da5:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002dac:	83 ec 0c             	sub    esp,0xc
10002daf:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002db6:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002dbd:	51                   	push   ecx
10002dbe:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002dc5:	e8 53 d9 ff ff       	call   1000071d <_ssfn_c>
10002dca:	83 c4 10             	add    esp,0x10
10002dcd:	85 c0                	test   eax,eax
10002dcf:	0f 84 ba 01 00 00    	je     10002f8f <ssfn_render+0x1dd2>
10002dd5:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002ddd:	0f 86 ac 01 00 00    	jbe    10002f8f <ssfn_render+0x1dd2>
10002de3:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002de9:	8d 48 06             	lea    ecx,[eax+0x6]
10002dec:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002df2:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002df6:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002dfa:	0f 8e 8f 01 00 00    	jle    10002f8f <ssfn_render+0x1dd2>
10002e00:	8a 19                	mov    bl,BYTE PTR [ecx]
10002e02:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002e06:	8a 18                	mov    bl,BYTE PTR [eax]
10002e08:	83 e3 40             	and    ebx,0x40
10002e0b:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002e10:	75 14                	jne    10002e26 <ssfn_render+0x1c69>
10002e12:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002e16:	75 0e                	jne    10002e26 <ssfn_render+0x1c69>
10002e18:	80 fb 01             	cmp    bl,0x1
10002e1b:	19 c0                	sbb    eax,eax
10002e1d:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002e21:	e9 60 01 00 00       	jmp    10002f86 <ssfn_render+0x1dc9>
10002e26:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002e2a:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002e2e:	c1 e6 10             	shl    esi,0x10
10002e31:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002e35:	84 db                	test   bl,bl
10002e37:	74 08                	je     10002e41 <ssfn_render+0x1c84>
10002e39:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002e3c:	83 c1 06             	add    ecx,0x6
10002e3f:	eb 0c                	jmp    10002e4d <ssfn_render+0x1c90>
10002e41:	c1 e2 08             	shl    edx,0x8
10002e44:	83 c1 05             	add    ecx,0x5
10002e47:	89 d0                	mov    eax,edx
10002e49:	09 f0                	or     eax,esi
10002e4b:	09 c7                	or     edi,eax
10002e4d:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002e50:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002e54:	01 f8                	add    eax,edi
10002e56:	8a 10                	mov    dl,BYTE PTR [eax]
10002e58:	88 d3                	mov    bl,dl
10002e5a:	83 e3 e0             	and    ebx,0xffffffe0
10002e5d:	80 fb c0             	cmp    bl,0xc0
10002e60:	0f 85 20 01 00 00    	jne    10002f86 <ssfn_render+0x1dc9>
10002e66:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002e6a:	c1 e2 08             	shl    edx,0x8
10002e6d:	83 c0 02             	add    eax,0x2
10002e70:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002e76:	09 da                	or     edx,ebx
10002e78:	8d 72 01             	lea    esi,[edx+0x1]
10002e7b:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002e7f:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002e86:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002e8a:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002e8f:	0f 84 f1 00 00 00    	je     10002f86 <ssfn_render+0x1dc9>
10002e95:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002e99:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002e9c:	c1 e3 10             	shl    ebx,0x10
10002e9f:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002ea5:	09 d3                	or     ebx,edx
10002ea7:	39 de                	cmp    esi,ebx
10002ea9:	0f 82 cf 00 00 00    	jb     10002f7e <ssfn_render+0x1dc1>
10002eaf:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10002eb2:	89 d7                	mov    edi,edx
10002eb4:	c1 e7 10             	shl    edi,0x10
10002eb7:	81 e7 00 00 0f 00    	and    edi,0xf0000
10002ebd:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10002ec1:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10002ec5:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10002ec9:	39 fe                	cmp    esi,edi
10002ecb:	0f 87 ad 00 00 00    	ja     10002f7e <ssfn_render+0x1dc1>
10002ed1:	29 de                	sub    esi,ebx
10002ed3:	c0 ea 04             	shr    dl,0x4
10002ed6:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
10002edd:	0f b6 d2             	movzx  edx,dl
10002ee0:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002ee4:	89 d3                	mov    ebx,edx
10002ee6:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10002eea:	c1 e3 10             	shl    ebx,0x10
10002eed:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10002ef0:	09 da                	or     edx,ebx
10002ef2:	c0 e8 04             	shr    al,0x4
10002ef5:	c1 e0 18             	shl    eax,0x18
10002ef8:	09 c2                	or     edx,eax
10002efa:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002efe:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
10002f01:	01 c2                	add    edx,eax
10002f03:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002f06:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10002f0a:	39 d7                	cmp    edi,edx
10002f0c:	76 78                	jbe    10002f86 <ssfn_render+0x1dc9>
10002f0e:	8a 1a                	mov    bl,BYTE PTR [edx]
10002f10:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10002f17:	89 de                	mov    esi,ebx
10002f19:	83 e6 7f             	and    esi,0x7f
10002f1c:	39 c6                	cmp    esi,eax
10002f1e:	73 1d                	jae    10002f3d <ssfn_render+0x1d80>
10002f20:	48                   	dec    eax
10002f21:	bb 02 00 00 00       	mov    ebx,0x2
10002f26:	29 f0                	sub    eax,esi
10002f28:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
10002f2f:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10002f32:	84 c0                	test   al,al
10002f34:	78 03                	js     10002f39 <ssfn_render+0x1d7c>
10002f36:	8d 58 02             	lea    ebx,[eax+0x2]
10002f39:	01 da                	add    edx,ebx
10002f3b:	eb cd                	jmp    10002f0a <ssfn_render+0x1d4d>
10002f3d:	be 01 00 00 00       	mov    esi,0x1
10002f42:	84 db                	test   bl,bl
10002f44:	78 03                	js     10002f49 <ssfn_render+0x1d8c>
10002f46:	8d 70 01             	lea    esi,[eax+0x1]
10002f49:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
10002f4d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002f51:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002f56:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
10002f5a:	99                   	cdq    
10002f5b:	f7 fb                	idiv   ebx
10002f5d:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
10002f62:	74 0d                	je     10002f71 <ssfn_render+0x1db4>
10002f64:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002f6b:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
10002f6f:	eb 15                	jmp    10002f86 <ssfn_render+0x1dc9>
10002f71:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002f78:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
10002f7c:	eb 08                	jmp    10002f86 <ssfn_render+0x1dc9>
10002f7e:	83 c0 08             	add    eax,0x8
10002f81:	e9 00 ff ff ff       	jmp    10002e86 <ssfn_render+0x1cc9>
10002f86:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10002f8a:	e9 5d fe ff ff       	jmp    10002dec <ssfn_render+0x1c2f>
10002f8f:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
10002f96:	eb 73                	jmp    1000300b <ssfn_render+0x1e4e>
10002f98:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002fa3:	e9 50 e4 ff ff       	jmp    100013f8 <ssfn_render+0x23b>
10002fa8:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10002faf:	57                   	push   edi
10002fb0:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10002fb7:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10002fbe:	e8 5a d7 ff ff       	call   1000071d <_ssfn_c>
10002fc3:	5f                   	pop    edi
10002fc4:	85 c0                	test   eax,eax
10002fc6:	0f 84 25 e4 ff ff    	je     100013f1 <ssfn_render+0x234>
10002fcc:	e9 a2 e4 ff ff       	jmp    10001473 <ssfn_render+0x2b6>
10002fd1:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10002fd4:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10002fd8:	75 0c                	jne    10002fe6 <ssfn_render+0x1e29>
10002fda:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10002fe1:	e9 3b e4 ff ff       	jmp    10001421 <ssfn_render+0x264>
10002fe6:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10002fed:	57                   	push   edi
10002fee:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10002ff5:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10002ffc:	e8 1c d7 ff ff       	call   1000071d <_ssfn_c>
10003001:	59                   	pop    ecx
10003002:	85 c0                	test   eax,eax
10003004:	74 d4                	je     10002fda <ssfn_render+0x1e1d>
10003006:	e9 68 e4 ff ff       	jmp    10001473 <ssfn_render+0x2b6>
1000300b:	81 c4 dc 05 01 00    	add    esp,0x105dc
10003011:	89 c8                	mov    eax,ecx
10003013:	5b                   	pop    ebx
10003014:	5e                   	pop    esi
10003015:	5f                   	pop    edi
10003016:	5d                   	pop    ebp
10003017:	c3                   	ret    

10003018 <ssfn_bbox>:
10003018:	55                   	push   ebp
10003019:	57                   	push   edi
1000301a:	56                   	push   esi
1000301b:	53                   	push   ebx
1000301c:	83 ec 3c             	sub    esp,0x3c
1000301f:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
10003024:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10003028:	0f 94 c0             	sete   al
1000302b:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
10003030:	0f 94 c2             	sete   dl
10003033:	09 d0                	or     eax,edx
10003035:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
1000303a:	0f 94 c2             	sete   dl
1000303d:	09 d0                	or     eax,edx
1000303f:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
10003044:	0f 94 c2             	sete   dl
10003047:	09 d0                	or     eax,edx
10003049:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
1000304e:	0f 94 c2             	sete   dl
10003051:	08 d0                	or     al,dl
10003053:	0f 85 7c 01 00 00    	jne    100031d5 <ssfn_bbox+0x1bd>
10003059:	85 db                	test   ebx,ebx
1000305b:	0f 84 74 01 00 00    	je     100031d5 <ssfn_bbox+0x1bd>
10003061:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003065:	31 f6                	xor    esi,esi
10003067:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000306d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003071:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003077:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000307b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003081:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10003085:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000308b:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000308f:	80 38 00             	cmp    BYTE PTR [eax],0x0
10003092:	0f 84 42 01 00 00    	je     100031da <ssfn_bbox+0x1c2>
10003098:	8d 54 24 18          	lea    edx,[esp+0x18]
1000309c:	b9 06 00 00 00       	mov    ecx,0x6
100030a1:	89 d7                	mov    edi,edx
100030a3:	89 f0                	mov    eax,esi
100030a5:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100030af:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100030b1:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100030b9:	31 ff                	xor    edi,edi
100030bb:	bd 01 00 00 00       	mov    ebp,0x1
100030c0:	50                   	push   eax
100030c1:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
100030c5:	8d 44 24 20          	lea    eax,[esp+0x20]
100030c9:	50                   	push   eax
100030ca:	53                   	push   ebx
100030cb:	e8 fc ff ff ff       	call   100030cc <ssfn_bbox+0xb4>	100030cc: R_386_PC32	ssfn_render
100030d0:	83 c4 10             	add    esp,0x10
100030d3:	89 c6                	mov    esi,eax
100030d5:	85 c0                	test   eax,eax
100030d7:	74 6f                	je     10003148 <ssfn_bbox+0x130>
100030d9:	0f 88 fb 00 00 00    	js     100031da <ssfn_bbox+0x1c2>
100030df:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100030e5:	85 c0                	test   eax,eax
100030e7:	0f 84 ed 00 00 00    	je     100031da <ssfn_bbox+0x1c2>
100030ed:	85 ed                	test   ebp,ebp
100030ef:	74 0b                	je     100030fc <ssfn_bbox+0xe4>
100030f1:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
100030f7:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
100030fc:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003100:	74 12                	je     10003114 <ssfn_bbox+0xfc>
10003102:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
10003108:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000310c:	7d 2f                	jge    1000313d <ssfn_bbox+0x125>
1000310e:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003112:	eb 29                	jmp    1000313d <ssfn_bbox+0x125>
10003114:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003117:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
1000311c:	39 cd                	cmp    ebp,ecx
1000311e:	7d 05                	jge    10003125 <ssfn_bbox+0x10d>
10003120:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
10003125:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
10003129:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
1000312e:	84 d2                	test   dl,dl
10003130:	75 04                	jne    10003136 <ssfn_bbox+0x11e>
10003132:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003136:	01 ca                	add    edx,ecx
10003138:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
1000313d:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10003141:	31 ed                	xor    ebp,ebp
10003143:	e9 78 ff ff ff       	jmp    100030c0 <ssfn_bbox+0xa8>
10003148:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
1000314f:	74 23                	je     10003174 <ssfn_bbox+0x15c>
10003151:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003154:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
10003158:	75 1a                	jne    10003174 <ssfn_bbox+0x15c>
1000315a:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
10003160:	b9 04 00 00 00       	mov    ecx,0x4
10003165:	99                   	cdq    
10003166:	f7 f9                	idiv   ecx
10003168:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
1000316d:	29 f8                	sub    eax,edi
1000316f:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
10003174:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
1000317a:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000317e:	74 29                	je     100031a9 <ssfn_bbox+0x191>
10003180:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003185:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10003189:	89 01                	mov    DWORD PTR [ecx],eax
1000318b:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000318f:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
10003195:	89 01                	mov    DWORD PTR [ecx],eax
10003197:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000319b:	89 38                	mov    DWORD PTR [eax],edi
1000319d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031a1:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100031a5:	89 38                	mov    DWORD PTR [eax],edi
100031a7:	eb 31                	jmp    100031da <ssfn_bbox+0x1c2>
100031a9:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100031ae:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100031b2:	89 07                	mov    DWORD PTR [edi],eax
100031b4:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
100031b9:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
100031bd:	89 07                	mov    DWORD PTR [edi],eax
100031bf:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031c3:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c9:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031cd:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031d3:	eb 05                	jmp    100031da <ssfn_bbox+0x1c2>
100031d5:	be fc ff ff ff       	mov    esi,0xfffffffc
100031da:	83 c4 3c             	add    esp,0x3c
100031dd:	89 f0                	mov    eax,esi
100031df:	5b                   	pop    ebx
100031e0:	5e                   	pop    esi
100031e1:	5f                   	pop    edi
100031e2:	5d                   	pop    ebp
100031e3:	c3                   	ret    

100031e4 <ssfn_text>:
100031e4:	55                   	push   ebp
100031e5:	57                   	push   edi
100031e6:	56                   	push   esi
100031e7:	53                   	push   ebx
100031e8:	83 ec 1c             	sub    esp,0x1c
100031eb:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100031ef:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
100031f3:	85 f6                	test   esi,esi
100031f5:	0f 84 b2 00 00 00    	je     100032ad <ssfn_text+0xc9>
100031fb:	85 ed                	test   ebp,ebp
100031fd:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003202:	0f 84 a5 00 00 00    	je     100032ad <ssfn_text+0xc9>
10003208:	83 ec 0c             	sub    esp,0xc
1000320b:	6a 18                	push   0x18
1000320d:	e8 fc ff ff ff       	call   1000320e <ssfn_text+0x2a>	1000320e: R_386_PC32	malloc
10003212:	83 c4 10             	add    esp,0x10
10003215:	89 c3                	mov    ebx,eax
10003217:	85 c0                	test   eax,eax
10003219:	0f 84 8e 00 00 00    	je     100032ad <ssfn_text+0xc9>
1000321f:	31 c0                	xor    eax,eax
10003221:	b9 06 00 00 00       	mov    ecx,0x6
10003226:	89 df                	mov    edi,ebx
10003228:	80 3e 00             	cmp    BYTE PTR [esi],0x0
1000322b:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000322d:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10003231:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003234:	74 79                	je     100032af <ssfn_text+0xcb>
10003236:	8d 43 0c             	lea    eax,[ebx+0xc]
10003239:	52                   	push   edx
1000323a:	52                   	push   edx
1000323b:	50                   	push   eax
1000323c:	8d 43 0a             	lea    eax,[ebx+0xa]
1000323f:	50                   	push   eax
10003240:	8d 43 06             	lea    eax,[ebx+0x6]
10003243:	50                   	push   eax
10003244:	8d 43 04             	lea    eax,[ebx+0x4]
10003247:	50                   	push   eax
10003248:	56                   	push   esi
10003249:	55                   	push   ebp
1000324a:	e8 fc ff ff ff       	call   1000324b <ssfn_text+0x67>	1000324b: R_386_PC32	ssfn_bbox
1000324f:	83 c4 20             	add    esp,0x20
10003252:	85 c0                	test   eax,eax
10003254:	75 59                	jne    100032af <ssfn_text+0xcb>
10003256:	83 ec 0c             	sub    esp,0xc
10003259:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
1000325d:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
10003261:	0f af c8             	imul   ecx,eax
10003264:	c1 e1 02             	shl    ecx,0x2
10003267:	51                   	push   ecx
10003268:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
1000326c:	e8 fc ff ff ff       	call   1000326d <ssfn_text+0x89>	1000326d: R_386_PC32	malloc
10003271:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003275:	89 c7                	mov    edi,eax
10003277:	89 03                	mov    DWORD PTR [ebx],eax
10003279:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
1000327d:	83 c4 10             	add    esp,0x10
10003280:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003282:	50                   	push   eax
10003283:	56                   	push   esi
10003284:	53                   	push   ebx
10003285:	55                   	push   ebp
10003286:	e8 fc ff ff ff       	call   10003287 <ssfn_text+0xa3>	10003287: R_386_PC32	ssfn_render
1000328b:	83 c4 10             	add    esp,0x10
1000328e:	85 c0                	test   eax,eax
10003290:	7e 04                	jle    10003296 <ssfn_text+0xb2>
10003292:	01 c6                	add    esi,eax
10003294:	eb ec                	jmp    10003282 <ssfn_text+0x9e>
10003296:	74 17                	je     100032af <ssfn_text+0xcb>
10003298:	83 ec 0c             	sub    esp,0xc
1000329b:	ff 33                	push   DWORD PTR [ebx]
1000329d:	e8 fc ff ff ff       	call   1000329e <ssfn_text+0xba>	1000329e: R_386_PC32	free
100032a2:	89 1c 24             	mov    DWORD PTR [esp],ebx
100032a5:	e8 fc ff ff ff       	call   100032a6 <ssfn_text+0xc2>	100032a6: R_386_PC32	free
100032aa:	83 c4 10             	add    esp,0x10
100032ad:	31 db                	xor    ebx,ebx
100032af:	83 c4 1c             	add    esp,0x1c
100032b2:	89 d8                	mov    eax,ebx
100032b4:	5b                   	pop    ebx
100032b5:	5e                   	pop    esi
100032b6:	5f                   	pop    edi
100032b7:	5d                   	pop    ebp
100032b8:	c3                   	ret    
100032b9:	90                   	nop

100032ba <NIContext::drvPutpixel4(int, int, unsigned int)>:
100032ba:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100032be:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
100032c4:	8b 10                	mov    edx,DWORD PTR [eax]
100032c6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100032ca:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
100032cd:	90                   	nop

100032ce <NIContext::drvDarken4(int, int, int)>:
100032ce:	55                   	push   ebp
100032cf:	57                   	push   edi
100032d0:	56                   	push   esi
100032d1:	53                   	push   ebx
100032d2:	83 ec 20             	sub    esp,0x20
100032d5:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100032d9:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
100032dd:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100032e1:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100032e5:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
100032eb:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
100032ef:	8b 10                	mov    edx,DWORD PTR [eax]
100032f1:	56                   	push   esi
100032f2:	53                   	push   ebx
100032f3:	50                   	push   eax
100032f4:	ff 52 34             	call   DWORD PTR [edx+0x34]
100032f7:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100032fb:	89 c2                	mov    edx,eax
100032fd:	0f b6 ec             	movzx  ebp,ah
10003300:	c1 ea 10             	shr    edx,0x10
10003303:	0f af e9             	imul   ebp,ecx
10003306:	0f b6 d2             	movzx  edx,dl
10003309:	0f b6 c0             	movzx  eax,al
1000330c:	0f af d1             	imul   edx,ecx
1000330f:	0f af c1             	imul   eax,ecx
10003312:	c1 ea 07             	shr    edx,0x7
10003315:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
1000331b:	c1 e8 07             	shr    eax,0x7
1000331e:	8b 39                	mov    edi,DWORD PTR [ecx]
10003320:	c1 e2 10             	shl    edx,0x10
10003323:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003327:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
1000332b:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
1000332f:	c1 ed 07             	shr    ebp,0x7
10003332:	c1 e5 08             	shl    ebp,0x8
10003335:	09 ea                	or     edx,ebp
10003337:	09 c2                	or     edx,eax
10003339:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000333d:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
10003340:	83 c4 2c             	add    esp,0x2c
10003343:	5b                   	pop    ebx
10003344:	5e                   	pop    esi
10003345:	5f                   	pop    edi
10003346:	5d                   	pop    ebp
10003347:	ff e0                	jmp    eax
10003349:	90                   	nop

1000334a <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
1000334a:	55                   	push   ebp
1000334b:	b9 00 40 00 00       	mov    ecx,0x4000
10003350:	57                   	push   edi
10003351:	b0 ff                	mov    al,0xff
10003353:	56                   	push   esi
10003354:	53                   	push   ebx
10003355:	83 ec 3c             	sub    esp,0x3c
10003358:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
1000335c:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10003360:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
10003363:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10003367:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003369:	85 db                	test   ebx,ebx
1000336b:	75 10                	jne    1000337d <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
1000336d:	83 ec 0c             	sub    esp,0xc
10003370:	68 5e 4f 00 10       	push   0x10004f5e	10003371: R_386_32	.text
10003375:	e8 fc ff ff ff       	call   10003376 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	10003376: R_386_PC32	KePanic(char const*)
1000337a:	83 c4 10             	add    esp,0x10
1000337d:	50                   	push   eax
1000337e:	50                   	push   eax
1000337f:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003383:	50                   	push   eax
10003384:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003388:	50                   	push   eax
10003389:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000338d:	50                   	push   eax
1000338e:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003392:	50                   	push   eax
10003393:	56                   	push   esi
10003394:	68 00 00 00 00       	push   0x0	10003395: R_386_32	ssfn_ctx
10003399:	e8 fc ff ff ff       	call   1000339a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	1000339a: R_386_PC32	ssfn_bbox
1000339e:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100033a1:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100033a9:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100033ad:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
100033b5:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100033b9:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
100033be:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
100033c2:	0d 00 00 00 ff       	or     eax,0xff000000
100033c7:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100033cb:	83 c4 1c             	add    esp,0x1c
100033ce:	56                   	push   esi
100033cf:	8d 44 24 20          	lea    eax,[esp+0x20]
100033d3:	50                   	push   eax
100033d4:	68 00 00 00 00       	push   0x0	100033d5: R_386_32	ssfn_ctx
100033d9:	e8 fc ff ff ff       	call   100033da <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	100033da: R_386_PC32	ssfn_render
100033de:	83 c4 10             	add    esp,0x10
100033e1:	89 03                	mov    DWORD PTR [ebx],eax
100033e3:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100033e7:	31 db                	xor    ebx,ebx
100033e9:	89 f0                	mov    eax,esi
100033eb:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
100033ef:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100033f3:	7e 3f                	jle    10003434 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
100033f5:	31 ff                	xor    edi,edi
100033f7:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100033fc:	39 f8                	cmp    eax,edi
100033fe:	7e 2c                	jle    1000342c <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
10003400:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003403:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003406:	83 f8 ff             	cmp    eax,0xffffffff
10003409:	74 1d                	je     10003428 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
1000340b:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
10003411:	25 ff ff ff 00       	and    eax,0xffffff
10003416:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003418:	50                   	push   eax
10003419:	56                   	push   esi
1000341a:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000341e:	01 f8                	add    eax,edi
10003420:	50                   	push   eax
10003421:	52                   	push   edx
10003422:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003425:	83 c4 10             	add    esp,0x10
10003428:	43                   	inc    ebx
10003429:	47                   	inc    edi
1000342a:	eb cb                	jmp    100033f7 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
1000342c:	29 c3                	sub    ebx,eax
1000342e:	46                   	inc    esi
1000342f:	83 c3 40             	add    ebx,0x40
10003432:	eb b5                	jmp    100033e9 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
10003434:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003439:	83 c4 3c             	add    esp,0x3c
1000343c:	5b                   	pop    ebx
1000343d:	5e                   	pop    esi
1000343e:	5f                   	pop    edi
1000343f:	5d                   	pop    ebp
10003440:	c3                   	ret    
10003441:	90                   	nop

10003442 <NIContext::~NIContext()>:
10003442:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003446: R_386_32	ssfn_ctx
1000344a:	e9 00 db ff ff       	jmp    10000f4f <ssfn_free>
1000344f:	90                   	nop

10003450 <NIContext::NIContext(Video*, int, int, int, int)>:
10003450:	55                   	push   ebp
10003451:	ba 00 00 00 00       	mov    edx,0x0	10003452: R_386_32	ssfn_ctx
10003456:	57                   	push   edi
10003457:	b9 72 3d 00 00       	mov    ecx,0x3d72
1000345c:	56                   	push   esi
1000345d:	89 d7                	mov    edi,edx
1000345f:	53                   	push   ebx
10003460:	81 ec 48 02 00 00    	sub    esp,0x248
10003466:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
1000346d:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
10003474:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
1000347a:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
10003481:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
10003487:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
1000348e:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
10003494:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
1000349b:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100034a1:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100034a8:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100034ae:	31 c0                	xor    eax,eax
100034b0:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100034b2:	68 00 40 00 00       	push   0x4000
100034b7:	e8 fc ff ff ff       	call   100034b8 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	100034b8: R_386_PC32	malloc
100034bc:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
100034c6:	89 03                	mov    DWORD PTR [ebx],eax
100034c8:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100034cf:	e8 fc ff ff ff       	call   100034d0 <NIContext::NIContext(Video*, int, int, int, int)+0x80>	100034d0: R_386_PC32	malloc
100034d4:	83 c4 0c             	add    esp,0xc
100034d7:	89 c6                	mov    esi,eax
100034d9:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100034db: R_386_32	kernelProcess
100034df:	68 77 4f 00 10       	push   0x10004f77	100034e0: R_386_32	.text
100034e4:	50                   	push   eax
100034e5:	e8 fc ff ff ff       	call   100034e6 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	100034e6: R_386_PC32	Directory::Directory(char const*, Process*)
100034ea:	83 c4 10             	add    esp,0x10
100034ed:	85 f6                	test   esi,esi
100034ef:	75 10                	jne    10003501 <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
100034f1:	83 ec 0c             	sub    esp,0xc
100034f4:	68 8b 4f 00 10       	push   0x10004f8b	100034f5: R_386_32	.text
100034f9:	e8 fc ff ff ff       	call   100034fa <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	100034fa: R_386_PC32	KePanic(char const*)
100034fe:	83 c4 10             	add    esp,0x10
10003501:	83 ec 0c             	sub    esp,0xc
10003504:	56                   	push   esi
10003505:	e8 fc ff ff ff       	call   10003506 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003506: R_386_PC32	Directory::open()
1000350a:	83 c4 10             	add    esp,0x10
1000350d:	85 c0                	test   eax,eax
1000350f:	75 e0                	jne    100034f1 <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
10003511:	83 ec 0c             	sub    esp,0xc
10003514:	8b 06                	mov    eax,DWORD PTR [esi]
10003516:	8d 4c 24 20          	lea    ecx,[esp+0x20]
1000351a:	51                   	push   ecx
1000351b:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003522:	52                   	push   edx
10003523:	6a 00                	push   0x0
10003525:	68 10 01 00 00       	push   0x110
1000352a:	56                   	push   esi
1000352b:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000352e:	83 c4 20             	add    esp,0x20
10003531:	85 c0                	test   eax,eax
10003533:	0f 85 a0 01 00 00    	jne    100036d9 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003539:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
10003541:	0f 85 92 01 00 00    	jne    100036d9 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003547:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
1000354e:	83 c9 ff             	or     ecx,0xffffffff
10003551:	83 ec 0c             	sub    esp,0xc
10003554:	89 ef                	mov    edi,ebp
10003556:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10003558:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
1000355e:	89 ca                	mov    edx,ecx
10003560:	f7 d2                	not    edx
10003562:	52                   	push   edx
10003563:	e8 fc ff ff ff       	call   10003564 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	10003564: R_386_PC32	malloc
10003568:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
1000356c:	47                   	inc    edi
1000356d:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
10003573:	5a                   	pop    edx
10003574:	59                   	pop    ecx
10003575:	55                   	push   ebp
10003576:	50                   	push   eax
10003577:	e8 fc ff ff ff       	call   10003578 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	10003578: R_386_PC32	strcpy
1000357c:	5f                   	pop    edi
1000357d:	58                   	pop    eax
1000357e:	68 a6 4f 00 10       	push   0x10004fa6	1000357f: R_386_32	.text
10003583:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
10003587:	57                   	push   edi
10003588:	e8 fc ff ff ff       	call   10003589 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	10003589: R_386_PC32	strcpy
1000358d:	58                   	pop    eax
1000358e:	5a                   	pop    edx
1000358f:	55                   	push   ebp
10003590:	57                   	push   edi
10003591:	e8 fc ff ff ff       	call   10003592 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	10003592: R_386_PC32	strcat
10003596:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000359d:	e8 fc ff ff ff       	call   1000359e <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	1000359e: R_386_PC32	malloc
100035a2:	83 c4 0c             	add    esp,0xc
100035a5:	89 c5                	mov    ebp,eax
100035a7:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100035a9: R_386_32	kernelProcess
100035ad:	57                   	push   edi
100035ae:	50                   	push   eax
100035af:	e8 fc ff ff ff       	call   100035b0 <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100035b0: R_386_PC32	File::File(char const*, Process*)
100035b4:	83 c4 10             	add    esp,0x10
100035b7:	85 ed                	test   ebp,ebp
100035b9:	0f 84 52 ff ff ff    	je     10003511 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100035bf:	50                   	push   eax
100035c0:	50                   	push   eax
100035c1:	6a 01                	push   0x1
100035c3:	55                   	push   ebp
100035c4:	e8 fc ff ff ff       	call   100035c5 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	100035c5: R_386_PC32	File::open(FileOpenMode)
100035c9:	83 c4 10             	add    esp,0x10
100035cc:	85 c0                	test   eax,eax
100035ce:	74 0c                	je     100035dc <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
100035d0:	83 ec 0c             	sub    esp,0xc
100035d3:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100035d6:	55                   	push   ebp
100035d7:	e9 b4 00 00 00       	jmp    10003690 <NIContext::NIContext(Video*, int, int, int, int)+0x240>
100035dc:	50                   	push   eax
100035dd:	8d 44 24 17          	lea    eax,[esp+0x17]
100035e1:	50                   	push   eax
100035e2:	8d 44 24 20          	lea    eax,[esp+0x20]
100035e6:	50                   	push   eax
100035e7:	55                   	push   ebp
100035e8:	e8 fc ff ff ff       	call   100035e9 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	100035e9: R_386_PC32	File::stat(unsigned long long*, bool*)
100035ed:	83 c4 10             	add    esp,0x10
100035f0:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
100035f5:	74 0e                	je     10003605 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
100035f7:	83 ec 0c             	sub    esp,0xc
100035fa:	55                   	push   ebp
100035fb:	e8 fc ff ff ff       	call   100035fc <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	100035fc: R_386_PC32	File::close()
10003600:	e9 85 00 00 00       	jmp    1000368a <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
10003605:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10003609:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000360d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003611:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003615:	83 ec 0c             	sub    esp,0xc
10003618:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000361c:	e8 fc ff ff ff       	call   1000361d <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	1000361d: R_386_PC32	malloc
10003621:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003625:	58                   	pop    eax
10003626:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003629:	8d 54 24 20          	lea    edx,[esp+0x20]
1000362d:	52                   	push   edx
1000362e:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003632:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003636:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000363a:	55                   	push   ebp
1000363b:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000363e:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003642:	83 c4 1c             	add    esp,0x1c
10003645:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003649:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000364d:	68 bb 4f 00 10       	push   0x10004fbb	1000364e: R_386_32	.text
10003652:	e8 fc ff ff ff       	call   10003653 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	10003653: R_386_PC32	Dbg::kprintf(char const*, ...)
10003657:	83 c4 10             	add    esp,0x10
1000365a:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000365e:	85 c0                	test   eax,eax
10003660:	75 15                	jne    10003677 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003662:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003666:	89 c1                	mov    ecx,eax
10003668:	c1 f9 1f             	sar    ecx,0x1f
1000366b:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
1000366f:	75 06                	jne    10003677 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003671:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10003675:	74 24                	je     1000369b <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
10003677:	83 ec 0c             	sub    esp,0xc
1000367a:	55                   	push   ebp
1000367b:	e8 fc ff ff ff       	call   1000367c <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	1000367c: R_386_PC32	File::close()
10003680:	58                   	pop    eax
10003681:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10003685:	e8 fc ff ff ff       	call   10003686 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	10003686: R_386_PC32	free
1000368a:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000368d:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003690:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003693:	83 c4 10             	add    esp,0x10
10003696:	e9 76 fe ff ff       	jmp    10003511 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
1000369b:	50                   	push   eax
1000369c:	50                   	push   eax
1000369d:	57                   	push   edi
1000369e:	68 cf 4f 00 10       	push   0x10004fcf	1000369f: R_386_32	.text
100036a3:	e8 fc ff ff ff       	call   100036a4 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100036a4: R_386_PC32	Dbg::kprintf(char const*, ...)
100036a8:	5a                   	pop    edx
100036a9:	59                   	pop    ecx
100036aa:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100036ae:	68 00 00 00 00       	push   0x0	100036af: R_386_32	ssfn_ctx
100036b3:	e8 fc ff ff ff       	call   100036b4 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	100036b4: R_386_PC32	ssfn_load
100036b8:	5b                   	pop    ebx
100036b9:	5f                   	pop    edi
100036ba:	50                   	push   eax
100036bb:	68 e0 4f 00 10       	push   0x10004fe0	100036bc: R_386_32	.text
100036c0:	e8 fc ff ff ff       	call   100036c1 <NIContext::NIContext(Video*, int, int, int, int)+0x271>	100036c1: R_386_PC32	Dbg::kprintf(char const*, ...)
100036c5:	89 2c 24             	mov    DWORD PTR [esp],ebp
100036c8:	e8 fc ff ff ff       	call   100036c9 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	100036c9: R_386_PC32	File::close()
100036cd:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100036d0:	89 2c 24             	mov    DWORD PTR [esp],ebp
100036d3:	ff 50 08             	call   DWORD PTR [eax+0x8]
100036d6:	83 c4 10             	add    esp,0x10
100036d9:	83 ec 0c             	sub    esp,0xc
100036dc:	56                   	push   esi
100036dd:	e8 fc ff ff ff       	call   100036de <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	100036de: R_386_PC32	Directory::close()
100036e2:	8b 06                	mov    eax,DWORD PTR [esi]
100036e4:	89 34 24             	mov    DWORD PTR [esp],esi
100036e7:	ff 50 08             	call   DWORD PTR [eax+0x8]
100036ea:	b8 00 00 00 00       	mov    eax,0x0	100036eb: R_386_32	ssfn_ctx
100036ef:	e8 f7 cb ff ff       	call   100002eb <_ssfn_fc.part.1>
100036f4:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	100036f6: R_386_32	ssfn_ctx
100036fe:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10003700: R_386_32	ssfn_ctx
10003708:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	1000370a: R_386_32	ssfn_ctx
10003712:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	10003714: R_386_32	ssfn_ctx
1000371c:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	1000371e: R_386_32	ssfn_ctx
10003726:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	10003728: R_386_32	ssfn_ctx
10003730:	81 c4 4c 02 00 00    	add    esp,0x24c
10003736:	5b                   	pop    ebx
10003737:	5e                   	pop    esi
10003738:	5f                   	pop    edi
10003739:	5d                   	pop    ebp
1000373a:	c3                   	ret    
1000373b:	90                   	nop

1000373c <NiLoadCursors()>:
1000373c:	55                   	push   ebp
1000373d:	57                   	push   edi
1000373e:	56                   	push   esi
1000373f:	53                   	push   ebx
10003740:	83 ec 38             	sub    esp,0x38
10003743:	68 14 01 00 00       	push   0x114
10003748:	e8 fc ff ff ff       	call   10003749 <NiLoadCursors()+0xd>	10003749: R_386_PC32	malloc
1000374d:	83 c4 0c             	add    esp,0xc
10003750:	89 c5                	mov    ebp,eax
10003752:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003754: R_386_32	kernelProcess
10003758:	68 9c 52 00 10       	push   0x1000529c	10003759: R_386_32	.text
1000375d:	50                   	push   eax
1000375e:	e8 fc ff ff ff       	call   1000375f <NiLoadCursors()+0x23>	1000375f: R_386_PC32	File::File(char const*, Process*)
10003763:	58                   	pop    eax
10003764:	5a                   	pop    edx
10003765:	6a 01                	push   0x1
10003767:	55                   	push   ebp
10003768:	e8 fc ff ff ff       	call   10003769 <NiLoadCursors()+0x2d>	10003769: R_386_PC32	File::open(FileOpenMode)
1000376d:	83 c4 10             	add    esp,0x10
10003770:	85 c0                	test   eax,eax
10003772:	74 0a                	je     1000377e <NiLoadCursors()+0x42>
10003774:	83 ec 0c             	sub    esp,0xc
10003777:	68 bb 52 00 10       	push   0x100052bb	10003778: R_386_32	.text
1000377c:	eb 4c                	jmp    100037ca <NiLoadCursors()+0x8e>
1000377e:	53                   	push   ebx
1000377f:	8d 44 24 17          	lea    eax,[esp+0x17]
10003783:	50                   	push   eax
10003784:	8d 44 24 20          	lea    eax,[esp+0x20]
10003788:	50                   	push   eax
10003789:	55                   	push   ebp
1000378a:	e8 fc ff ff ff       	call   1000378b <NiLoadCursors()+0x4f>	1000378b: R_386_PC32	File::stat(unsigned long long*, bool*)
1000378f:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10003793:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10003797:	89 34 24             	mov    DWORD PTR [esp],esi
1000379a:	e8 fc ff ff ff       	call   1000379b <NiLoadCursors()+0x5f>	1000379b: R_386_PC32	malloc
1000379f:	89 c3                	mov    ebx,eax
100037a1:	58                   	pop    eax
100037a2:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037a5:	8d 54 24 20          	lea    edx,[esp+0x20]
100037a9:	52                   	push   edx
100037aa:	53                   	push   ebx
100037ab:	57                   	push   edi
100037ac:	56                   	push   esi
100037ad:	55                   	push   ebp
100037ae:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100037b1:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100037b5:	8b 54 24 3c          	mov    edx,DWORD PTR [esp+0x3c]
100037b9:	83 c4 20             	add    esp,0x20
100037bc:	39 44 24 14          	cmp    DWORD PTR [esp+0x14],eax
100037c0:	74 12                	je     100037d4 <NiLoadCursors()+0x98>
100037c2:	83 ec 0c             	sub    esp,0xc
100037c5:	68 cf 52 00 10       	push   0x100052cf	100037c6: R_386_32	.text
100037ca:	e8 fc ff ff ff       	call   100037cb <NiLoadCursors()+0x8f>	100037cb: R_386_PC32	Dbg::kprintf(char const*, ...)
100037cf:	e9 3d 01 00 00       	jmp    10003911 <NiLoadCursors()+0x1d5>
100037d4:	6a 00                	push   0x0
100037d6:	31 ed                	xor    ebp,ebp
100037d8:	68 04 01 00 00       	push   0x104
100037dd:	52                   	push   edx
100037de:	50                   	push   eax
100037df:	e8 fc ff ff ff       	call   100037e0 <NiLoadCursors()+0xa4>	100037e0: R_386_PC32	__udivdi3
100037e4:	5a                   	pop    edx
100037e5:	59                   	pop    ecx
100037e6:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100037ea:	50                   	push   eax
100037eb:	68 e3 52 00 10       	push   0x100052e3	100037ec: R_386_32	.text
100037f0:	e8 fc ff ff ff       	call   100037f1 <NiLoadCursors()+0xb5>	100037f1: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f5:	89 1c 24             	mov    DWORD PTR [esp],ebx
100037f8:	e8 fc ff ff ff       	call   100037f9 <NiLoadCursors()+0xbd>	100037f9: R_386_PC32	Dbg::kprintf(char const*, ...)
100037fd:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10003801:	8d 04 83             	lea    eax,[ebx+eax*4]
10003804:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003808:	83 c4 10             	add    esp,0x10
1000380b:	3b 6c 24 0c          	cmp    ebp,DWORD PTR [esp+0xc]
1000380f:	0f 8d f3 00 00 00    	jge    10003908 <NiLoadCursors()+0x1cc>
10003815:	8d 34 ab             	lea    esi,[ebx+ebp*4]
10003818:	50                   	push   eax
10003819:	6a 04                	push   0x4
1000381b:	68 f0 52 00 10       	push   0x100052f0	1000381c: R_386_32	.text
10003820:	56                   	push   esi
10003821:	e8 fc ff ff ff       	call   10003822 <NiLoadCursors()+0xe6>	10003822: R_386_PC32	memcmp
10003826:	83 c4 10             	add    esp,0x10
10003829:	85 c0                	test   eax,eax
1000382b:	0f 84 b8 00 00 00    	je     100038e9 <NiLoadCursors()+0x1ad>
10003831:	50                   	push   eax
10003832:	6a 04                	push   0x4
10003834:	68 f5 52 00 10       	push   0x100052f5	10003835: R_386_32	.text
10003839:	56                   	push   esi
1000383a:	e8 fc ff ff ff       	call   1000383b <NiLoadCursors()+0xff>	1000383b: R_386_PC32	memcmp
1000383f:	83 c4 10             	add    esp,0x10
10003842:	85 c0                	test   eax,eax
10003844:	74 7b                	je     100038c1 <NiLoadCursors()+0x185>
10003846:	50                   	push   eax
10003847:	6a 04                	push   0x4
10003849:	68 fa 52 00 10       	push   0x100052fa	1000384a: R_386_32	.text
1000384e:	56                   	push   esi
1000384f:	e8 fc ff ff ff       	call   10003850 <NiLoadCursors()+0x114>	10003850: R_386_PC32	memcmp
10003854:	83 c4 10             	add    esp,0x10
10003857:	85 c0                	test   eax,eax
10003859:	74 6d                	je     100038c8 <NiLoadCursors()+0x18c>
1000385b:	57                   	push   edi
1000385c:	6a 04                	push   0x4
1000385e:	68 ff 52 00 10       	push   0x100052ff	1000385f: R_386_32	.text
10003863:	56                   	push   esi
10003864:	e8 fc ff ff ff       	call   10003865 <NiLoadCursors()+0x129>	10003865: R_386_PC32	memcmp
10003869:	83 c4 10             	add    esp,0x10
1000386c:	85 c0                	test   eax,eax
1000386e:	74 5f                	je     100038cf <NiLoadCursors()+0x193>
10003870:	51                   	push   ecx
10003871:	6a 04                	push   0x4
10003873:	68 04 53 00 10       	push   0x10005304	10003874: R_386_32	.text
10003878:	56                   	push   esi
10003879:	e8 fc ff ff ff       	call   1000387a <NiLoadCursors()+0x13e>	1000387a: R_386_PC32	memcmp
1000387e:	83 c4 10             	add    esp,0x10
10003881:	85 c0                	test   eax,eax
10003883:	74 51                	je     100038d6 <NiLoadCursors()+0x19a>
10003885:	52                   	push   edx
10003886:	6a 04                	push   0x4
10003888:	68 09 53 00 10       	push   0x10005309	10003889: R_386_32	.text
1000388d:	56                   	push   esi
1000388e:	e8 fc ff ff ff       	call   1000388f <NiLoadCursors()+0x153>	1000388f: R_386_PC32	memcmp
10003893:	83 c4 10             	add    esp,0x10
10003896:	85 c0                	test   eax,eax
10003898:	74 43                	je     100038dd <NiLoadCursors()+0x1a1>
1000389a:	50                   	push   eax
1000389b:	6a 04                	push   0x4
1000389d:	68 0e 53 00 10       	push   0x1000530e	1000389e: R_386_32	.text
100038a2:	56                   	push   esi
100038a3:	e8 fc ff ff ff       	call   100038a4 <NiLoadCursors()+0x168>	100038a4: R_386_PC32	memcmp
100038a8:	83 c4 10             	add    esp,0x10
100038ab:	85 c0                	test   eax,eax
100038ad:	74 35                	je     100038e4 <NiLoadCursors()+0x1a8>
100038af:	83 ec 0c             	sub    esp,0xc
100038b2:	68 13 53 00 10       	push   0x10005313	100038b3: R_386_32	.text
100038b7:	e8 fc ff ff ff       	call   100038b8 <NiLoadCursors()+0x17c>	100038b8: R_386_PC32	Dbg::kprintf(char const*, ...)
100038bc:	83 c4 10             	add    esp,0x10
100038bf:	eb 47                	jmp    10003908 <NiLoadCursors()+0x1cc>
100038c1:	b8 00 02 00 00       	mov    eax,0x200
100038c6:	eb 21                	jmp    100038e9 <NiLoadCursors()+0x1ad>
100038c8:	b8 00 03 00 00       	mov    eax,0x300
100038cd:	eb 1a                	jmp    100038e9 <NiLoadCursors()+0x1ad>
100038cf:	b8 00 01 00 00       	mov    eax,0x100
100038d4:	eb 13                	jmp    100038e9 <NiLoadCursors()+0x1ad>
100038d6:	b8 00 04 00 00       	mov    eax,0x400
100038db:	eb 0c                	jmp    100038e9 <NiLoadCursors()+0x1ad>
100038dd:	b8 00 05 00 00       	mov    eax,0x500
100038e2:	eb 05                	jmp    100038e9 <NiLoadCursors()+0x1ad>
100038e4:	b8 00 06 00 00       	mov    eax,0x600
100038e9:	8d b8 00 00 00 00    	lea    edi,[eax+0x0]	100038eb: R_386_32	___mouse_data
100038ef:	b9 00 01 00 00       	mov    ecx,0x100
100038f4:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
100038f8:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100038fa:	45                   	inc    ebp
100038fb:	81 44 24 08 00 01 00 00 	add    DWORD PTR [esp+0x8],0x100
10003903:	e9 03 ff ff ff       	jmp    1000380b <NiLoadCursors()+0xcf>
10003908:	83 ec 0c             	sub    esp,0xc
1000390b:	53                   	push   ebx
1000390c:	e8 fc ff ff ff       	call   1000390d <NiLoadCursors()+0x1d1>	1000390d: R_386_PC32	free
10003911:	83 c4 10             	add    esp,0x10
10003914:	83 c4 2c             	add    esp,0x2c
10003917:	5b                   	pop    ebx
10003918:	5e                   	pop    esi
10003919:	5f                   	pop    edi
1000391a:	5d                   	pop    ebp
1000391b:	c3                   	ret    

1000391c <NIDesktop::NIDesktop(NIContext*)>:
1000391c:	53                   	push   ebx
1000391d:	83 ec 14             	sub    esp,0x14
10003920:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10003924:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10003928:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
1000392f:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10003932:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
10003939:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10003940:	6a 08                	push   0x8
10003942:	e8 fc ff ff ff       	call   10003943 <NIDesktop::NIDesktop(NIContext*)+0x27>	10003943: R_386_PC32	malloc
10003947:	89 03                	mov    DWORD PTR [ebx],eax
10003949:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003950:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003956:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10003958: R_386_32	mouseDesktop
1000395c:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000395e: R_386_32	guiMouseHandler
	10003962: R_386_32	NiHandleMouse(int, int, int, int)
10003966:	83 c4 18             	add    esp,0x18
10003969:	5b                   	pop    ebx
1000396a:	c3                   	ret    
1000396b:	90                   	nop

1000396c <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
1000396c:	53                   	push   ebx
1000396d:	83 ec 08             	sub    esp,0x8
10003970:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003974:	8b 00                	mov    eax,DWORD PTR [eax]
10003976:	8b 18                	mov    ebx,DWORD PTR [eax]
10003978:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
1000397c:	74 1d                	je     1000399b <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
1000397e:	8b 03                	mov    eax,DWORD PTR [ebx]
10003980:	85 c0                	test   eax,eax
10003982:	74 12                	je     10003996 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003984:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
10003988:	74 0c                	je     10003996 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
1000398a:	83 ec 0c             	sub    esp,0xc
1000398d:	50                   	push   eax
1000398e:	e8 fc ff ff ff       	call   1000398f <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	1000398f: R_386_PC32	NIWindow::invalidate()
10003993:	83 c4 10             	add    esp,0x10
10003996:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003999:	eb dd                	jmp    10003978 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
1000399b:	83 c4 08             	add    esp,0x8
1000399e:	5b                   	pop    ebx
1000399f:	c3                   	ret    

100039a0 <NIDesktop::getTopmostWindowAtPixel(int, int)>:
100039a0:	57                   	push   edi
100039a1:	56                   	push   esi
100039a2:	53                   	push   ebx
100039a3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100039a7:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100039ab:	8b 00                	mov    eax,DWORD PTR [eax]
100039ad:	8b 00                	mov    eax,DWORD PTR [eax]
100039af:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
100039b2:	85 db                	test   ebx,ebx
100039b4:	74 43                	je     100039f9 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
100039b6:	8b 00                	mov    eax,DWORD PTR [eax]
100039b8:	85 c0                	test   eax,eax
100039ba:	74 3f                	je     100039fb <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100039bc:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
100039bf:	39 ca                	cmp    edx,ecx
100039c1:	7e 04                	jle    100039c7 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
100039c3:	89 d8                	mov    eax,ebx
100039c5:	eb e8                	jmp    100039af <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
100039c7:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
100039ca:	01 d6                	add    esi,edx
100039cc:	39 ce                	cmp    esi,ecx
100039ce:	7e f3                	jle    100039c3 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039d0:	89 ce                	mov    esi,ecx
100039d2:	29 d6                	sub    esi,edx
100039d4:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100039d7:	8d 34 b2             	lea    esi,[edx+esi*4]
100039da:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100039dd:	0f b7 3e             	movzx  edi,WORD PTR [esi]
100039e0:	01 d7                	add    edi,edx
100039e2:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
100039e6:	7f db                	jg     100039c3 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039e8:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
100039eb:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
100039ef:	29 f2                	sub    edx,esi
100039f1:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
100039f5:	7e cc                	jle    100039c3 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039f7:	eb 02                	jmp    100039fb <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100039f9:	31 c0                	xor    eax,eax
100039fb:	5b                   	pop    ebx
100039fc:	5e                   	pop    esi
100039fd:	5f                   	pop    edi
100039fe:	c3                   	ret    
100039ff:	90                   	nop

10003a00 <NIDesktop::renderScanline(int, int, int)>:
10003a00:	55                   	push   ebp
10003a01:	57                   	push   edi
10003a02:	56                   	push   esi
10003a03:	53                   	push   ebx
10003a04:	83 ec 2c             	sub    esp,0x2c
10003a07:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003a0b:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10003a0f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003a13:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003a17:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003a1b:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	10003a1d: R_386_32	render
10003a21:	31 c0                	xor    eax,eax
10003a23:	89 d7                	mov    edi,edx
10003a25:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003a27:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003a2b:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003a2f:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	10003a31: R_386_32	shadow
10003a35:	b0 80                	mov    al,0x80
10003a37:	89 d7                	mov    edi,edx
10003a39:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003a3b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003a3f:	8b 00                	mov    eax,DWORD PTR [eax]
10003a41:	8b 00                	mov    eax,DWORD PTR [eax]
10003a43:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a47:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003a4b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003a4f:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003a51: R_386_32	movingWin
10003a55:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003a59:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003a5c:	85 c0                	test   eax,eax
10003a5e:	75 09                	jne    10003a69 <NIDesktop::renderScanline(int, int, int)+0x69>
10003a60:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003a64:	e9 cf 02 00 00       	jmp    10003d38 <NIDesktop::renderScanline(int, int, int)+0x338>
10003a69:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10003a6d:	8b 1f                	mov    ebx,DWORD PTR [edi]
10003a6f:	85 db                	test   ebx,ebx
10003a71:	74 ed                	je     10003a60 <NIDesktop::renderScanline(int, int, int)+0x60>
10003a73:	39 da                	cmp    edx,ebx
10003a75:	75 06                	jne    10003a7d <NIDesktop::renderScanline(int, int, int)+0x7d>
10003a77:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a7b:	eb d8                	jmp    10003a55 <NIDesktop::renderScanline(int, int, int)+0x55>
10003a7d:	83 ec 0c             	sub    esp,0xc
10003a80:	53                   	push   ebx
10003a81:	e8 fc ff ff ff       	call   10003a82 <NIDesktop::renderScanline(int, int, int)+0x82>	10003a82: R_386_PC32	NIWindow::request()
10003a86:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003a89:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003a8c:	83 c4 10             	add    esp,0x10
10003a8f:	01 c2                	add    edx,eax
10003a91:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a95:	0f 8e ad 00 00 00    	jle    10003b48 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a9b:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a9f:	0f 85 a3 00 00 00    	jne    10003b48 <NIDesktop::renderScanline(int, int, int)+0x148>
10003aa5:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003aa9:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003aac:	83 c0 06             	add    eax,0x6
10003aaf:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003ab3:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003ab6:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003ab9:	01 c8                	add    eax,ecx
10003abb:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003abf:	39 d0                	cmp    eax,edx
10003ac1:	0f 8e 40 01 00 00    	jle    10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ac7:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003acb:	7c 75                	jl     10003b42 <NIDesktop::renderScanline(int, int, int)+0x142>
10003acd:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003ad1:	0f 8f 30 01 00 00    	jg     10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ad7:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003ada:	89 d5                	mov    ebp,edx
10003adc:	6b fe fc             	imul   edi,esi,0xfffffffc
10003adf:	29 cd                	sub    ebp,ecx
10003ae1:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003ae5:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003ae9:	39 f0                	cmp    eax,esi
10003aeb:	7c 1d                	jl     10003b0a <NIDesktop::renderScanline(int, int, int)+0x10a>
10003aed:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003af0:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003af3:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003af6:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003afa:	7f 0e                	jg     10003b0a <NIDesktop::renderScanline(int, int, int)+0x10a>
10003afc:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003b00:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003b04:	29 cd                	sub    ebp,ecx
10003b06:	39 d5                	cmp    ebp,edx
10003b08:	7d 07                	jge    10003b11 <NIDesktop::renderScanline(int, int, int)+0x111>
10003b0a:	40                   	inc    eax
10003b0b:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003b0f:	75 d8                	jne    10003ae9 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003b11:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003b15:	48                   	dec    eax
10003b16:	83 f8 03             	cmp    eax,0x3
10003b19:	77 27                	ja     10003b42 <NIDesktop::renderScanline(int, int, int)+0x142>
10003b1b:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003b1d: R_386_32	render
10003b22:	75 1e                	jne    10003b42 <NIDesktop::renderScanline(int, int, int)+0x142>
10003b24:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003b2b:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003b2e: R_386_32	shadow
10003b32:	0f af c1             	imul   eax,ecx
10003b35:	d1 f9                	sar    ecx,1
10003b37:	c1 f8 08             	sar    eax,0x8
10003b3a:	01 c1                	add    ecx,eax
10003b3c:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003b3e: R_386_32	shadow
10003b42:	42                   	inc    edx
10003b43:	e9 6b ff ff ff       	jmp    10003ab3 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003b48:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b4c:	0f 8d b5 00 00 00    	jge    10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b52:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b56:	0f 85 ab 00 00 00    	jne    10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b5c:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003b60:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003b63:	8d 77 fa             	lea    esi,[edi-0x6]
10003b66:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003b6a:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003b6d:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003b70:	01 ce                	add    esi,ecx
10003b72:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003b76:	39 c6                	cmp    esi,eax
10003b78:	0f 8e 89 00 00 00    	jle    10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b7e:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003b82:	7c 7d                	jl     10003c01 <NIDesktop::renderScanline(int, int, int)+0x201>
10003b84:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003b88:	7f 7d                	jg     10003c07 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b8a:	89 c7                	mov    edi,eax
10003b8c:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b90:	29 cf                	sub    edi,ecx
10003b92:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b96:	4a                   	dec    edx
10003b97:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b9b:	29 d1                	sub    ecx,edx
10003b9d:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003ba1:	74 32                	je     10003bd5 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003ba3:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003ba6:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003ba9:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003bac:	39 d5                	cmp    ebp,edx
10003bae:	7e e6                	jle    10003b96 <NIDesktop::renderScanline(int, int, int)+0x196>
10003bb0:	89 d5                	mov    ebp,edx
10003bb2:	29 fd                	sub    ebp,edi
10003bb4:	39 ee                	cmp    esi,ebp
10003bb6:	7e 1d                	jle    10003bd5 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003bb8:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003bbb:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003bbe:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003bc1:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003bc5:	7f cf                	jg     10003b96 <NIDesktop::renderScanline(int, int, int)+0x196>
10003bc7:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003bcb:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003bcf:	29 f7                	sub    edi,esi
10003bd1:	39 c7                	cmp    edi,eax
10003bd3:	7c c1                	jl     10003b96 <NIDesktop::renderScanline(int, int, int)+0x196>
10003bd5:	83 f9 04             	cmp    ecx,0x4
10003bd8:	77 27                	ja     10003c01 <NIDesktop::renderScanline(int, int, int)+0x201>
10003bda:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003bdc: R_386_32	render
10003be1:	75 1e                	jne    10003c01 <NIDesktop::renderScanline(int, int, int)+0x201>
10003be3:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003bea:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003bed: R_386_32	shadow
10003bf1:	0f af d1             	imul   edx,ecx
10003bf4:	d1 f9                	sar    ecx,1
10003bf6:	c1 fa 08             	sar    edx,0x8
10003bf9:	01 d1                	add    ecx,edx
10003bfb:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003bfd: R_386_32	shadow
10003c01:	40                   	inc    eax
10003c02:	e9 63 ff ff ff       	jmp    10003b6a <NIDesktop::renderScanline(int, int, int)+0x16a>
10003c07:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003c0a:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003c0e:	0f 8f 00 01 00 00    	jg     10003d14 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c14:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003c17:	01 c2                	add    edx,eax
10003c19:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003c1d:	0f 8e f1 00 00 00    	jle    10003d14 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c23:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003c27:	29 c2                	sub    edx,eax
10003c29:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003c2c:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003c30:	8d 14 90             	lea    edx,[eax+edx*4]
10003c33:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003c36:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003c3a:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003c3e:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003c42:	74 09                	je     10003c4d <NIDesktop::renderScanline(int, int, int)+0x24d>
10003c44:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c48:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003c4b:	eb 78                	jmp    10003cc5 <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003c4d:	31 c9                	xor    ecx,ecx
10003c4f:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003c52:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c56:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003c5a:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003c5d:	01 cd                	add    ebp,ecx
10003c5f:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c63:	01 ca                	add    edx,ecx
10003c65:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003c67: R_386_32	render
10003c6c:	75 1f                	jne    10003c8d <NIDesktop::renderScanline(int, int, int)+0x28d>
10003c6e:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003c71: R_386_32	shadow
10003c75:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003c78:	83 c7 7d             	add    edi,0x7d
10003c7b:	0f af f7             	imul   esi,edi
10003c7e:	d1 ff                	sar    edi,1
10003c80:	c1 fe 08             	sar    esi,0x8
10003c83:	01 f7                	add    edi,esi
10003c85:	89 f8                	mov    eax,edi
10003c87:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003c89: R_386_32	shadow
10003c8d:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003c8f: R_386_32	render
10003c94:	75 20                	jne    10003cb6 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c96:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c9d:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003ca0: R_386_32	shadow
10003ca4:	0f af f7             	imul   esi,edi
10003ca7:	d1 ff                	sar    edi,1
10003ca9:	c1 fe 08             	sar    esi,0x8
10003cac:	01 f7                	add    edi,esi
10003cae:	89 f8                	mov    eax,edi
10003cb0:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003cb2: R_386_32	shadow
10003cb6:	41                   	inc    ecx
10003cb7:	83 f9 04             	cmp    ecx,0x4
10003cba:	75 93                	jne    10003c4f <NIDesktop::renderScanline(int, int, int)+0x24f>
10003cbc:	eb 86                	jmp    10003c44 <NIDesktop::renderScanline(int, int, int)+0x244>
10003cbe:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003cc2:	7d 11                	jge    10003cd5 <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003cc4:	40                   	inc    eax
10003cc5:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003cc8:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003ccb:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003ccf:	39 c2                	cmp    edx,eax
10003cd1:	7f eb                	jg     10003cbe <NIDesktop::renderScanline(int, int, int)+0x2be>
10003cd3:	eb 3f                	jmp    10003d14 <NIDesktop::renderScanline(int, int, int)+0x314>
10003cd5:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003cd9:	7f 39                	jg     10003d14 <NIDesktop::renderScanline(int, int, int)+0x314>
10003cdb:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003cdd: R_386_32	render
10003ce2:	75 e0                	jne    10003cc4 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003ce4:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003ce6: R_386_32	render
10003ceb:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003cef:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003cf2:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003cf5:	0f af ca             	imul   ecx,edx
10003cf8:	89 c2                	mov    edx,eax
10003cfa:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003cfd:	01 ca                	add    edx,ecx
10003cff:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003d02:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003d06:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003d09:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003d0c: R_386_32	renderData
10003d10:	75 b2                	jne    10003cc4 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003d12:	eb 44                	jmp    10003d58 <NIDesktop::renderScanline(int, int, int)+0x358>
10003d14:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003d18:	0f 85 42 fd ff ff    	jne    10003a60 <NIDesktop::renderScanline(int, int, int)+0x60>
10003d1e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003d22:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d25:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003d29:	e9 21 fd ff ff       	jmp    10003a4f <NIDesktop::renderScanline(int, int, int)+0x4f>
10003d2e:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003d30: R_386_32	render
10003d35:	74 09                	je     10003d40 <NIDesktop::renderScanline(int, int, int)+0x340>
10003d37:	40                   	inc    eax
10003d38:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003d3c:	7c f0                	jl     10003d2e <NIDesktop::renderScanline(int, int, int)+0x32e>
10003d3e:	eb 18                	jmp    10003d58 <NIDesktop::renderScanline(int, int, int)+0x358>
10003d40:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003d42: R_386_32	render
10003d47:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003d4a: R_386_32	renderData
10003d52:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003d56:	75 df                	jne    10003d37 <NIDesktop::renderScanline(int, int, int)+0x337>
10003d58:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d5c:	8b 00                	mov    eax,DWORD PTR [eax]
10003d5e:	8b 00                	mov    eax,DWORD PTR [eax]
10003d60:	85 c0                	test   eax,eax
10003d62:	74 5e                	je     10003dc2 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d64:	8b 00                	mov    eax,DWORD PTR [eax]
10003d66:	85 c0                	test   eax,eax
10003d68:	74 58                	je     10003dc2 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d6a:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003d6e:	75 52                	jne    10003dc2 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d70:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003d74:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003d78:	7d 48                	jge    10003dc2 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d7a:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003d7c: R_386_32	shadow
10003d80:	3c 80                	cmp    al,0x80
10003d82:	74 3b                	je     10003dbf <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003d84:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003d87: R_386_32	renderData
10003d8b:	0f b6 f0             	movzx  esi,al
10003d8e:	89 d1                	mov    ecx,edx
10003d90:	0f b6 c6             	movzx  eax,dh
10003d93:	c1 e9 10             	shr    ecx,0x10
10003d96:	0f af c6             	imul   eax,esi
10003d99:	0f b6 c9             	movzx  ecx,cl
10003d9c:	0f b6 d2             	movzx  edx,dl
10003d9f:	0f af ce             	imul   ecx,esi
10003da2:	0f af d6             	imul   edx,esi
10003da5:	c1 e9 07             	shr    ecx,0x7
10003da8:	c1 e8 07             	shr    eax,0x7
10003dab:	c1 e1 10             	shl    ecx,0x10
10003dae:	c1 e0 08             	shl    eax,0x8
10003db1:	c1 ea 07             	shr    edx,0x7
10003db4:	09 c1                	or     ecx,eax
10003db6:	09 ca                	or     edx,ecx
10003db8:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003dbb: R_386_32	renderData
10003dbf:	43                   	inc    ebx
10003dc0:	eb b2                	jmp    10003d74 <NIDesktop::renderScanline(int, int, int)+0x374>
10003dc2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003dc6:	83 ec 0c             	sub    esp,0xc
10003dc9:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003dcc:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003dd2:	8b 10                	mov    edx,DWORD PTR [eax]
10003dd4:	68 00 00 00 00       	push   0x0	10003dd5: R_386_32	renderData
10003dd9:	6a 00                	push   0x0
10003ddb:	6a 01                	push   0x1
10003ddd:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003de1:	6a 00                	push   0x0
10003de3:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003de7:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003deb:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003def:	50                   	push   eax
10003df0:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003df3:	83 c4 5c             	add    esp,0x5c
10003df6:	5b                   	pop    ebx
10003df7:	5e                   	pop    esi
10003df8:	5f                   	pop    edi
10003df9:	5d                   	pop    ebp
10003dfa:	c3                   	ret    
10003dfb:	90                   	nop

10003dfc <NIDesktop::rangeRefresh(int, int, int, int)>:
10003dfc:	53                   	push   ebx
10003dfd:	83 ec 08             	sub    esp,0x8
10003e00:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003e04:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003e08:	7d 18                	jge    10003e22 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003e0a:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003e0e:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003e12:	53                   	push   ebx
10003e13:	43                   	inc    ebx
10003e14:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e18:	e8 fc ff ff ff       	call   10003e19 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003e19: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e1d:	83 c4 10             	add    esp,0x10
10003e20:	eb e2                	jmp    10003e04 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003e22:	83 c4 08             	add    esp,0x8
10003e25:	5b                   	pop    ebx
10003e26:	c3                   	ret    
10003e27:	90                   	nop

10003e28 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003e28:	55                   	push   ebp
10003e29:	ba 05 00 00 00       	mov    edx,0x5
10003e2e:	57                   	push   edi
10003e2f:	56                   	push   esi
10003e30:	53                   	push   ebx
10003e31:	83 ec 0c             	sub    esp,0xc
10003e34:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003e38:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003e3b:	83 f8 05             	cmp    eax,0x5
10003e3e:	7c 02                	jl     10003e42 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003e40:	89 c2                	mov    edx,eax
10003e42:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003e46:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003e49:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003e4c:	83 ea 05             	sub    edx,0x5
10003e4f:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003e55:	8d 70 05             	lea    esi,[eax+0x5]
10003e58:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003e5b:	39 c5                	cmp    ebp,eax
10003e5d:	7f 03                	jg     10003e62 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003e5f:	8d 71 ff             	lea    esi,[ecx-0x1]
10003e62:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003e65:	89 c1                	mov    ecx,eax
10003e67:	83 f8 05             	cmp    eax,0x5
10003e6a:	7d 05                	jge    10003e71 <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003e6c:	b9 05 00 00 00       	mov    ecx,0x5
10003e71:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003e74:	83 e9 05             	sub    ecx,0x5
10003e77:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003e7d:	8d 58 05             	lea    ebx,[eax+0x5]
10003e80:	8d 6f fb             	lea    ebp,[edi-0x5]
10003e83:	39 c5                	cmp    ebp,eax
10003e85:	7f 03                	jg     10003e8a <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003e87:	8d 5f ff             	lea    ebx,[edi-0x1]
10003e8a:	83 ec 0c             	sub    esp,0xc
10003e8d:	53                   	push   ebx
10003e8e:	51                   	push   ecx
10003e8f:	56                   	push   esi
10003e90:	52                   	push   edx
10003e91:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e95:	e8 fc ff ff ff       	call   10003e96 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e96: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e9a:	83 c4 2c             	add    esp,0x2c
10003e9d:	5b                   	pop    ebx
10003e9e:	5e                   	pop    esi
10003e9f:	5f                   	pop    edi
10003ea0:	5d                   	pop    ebp
10003ea1:	c3                   	ret    

10003ea2 <NIDesktop::completeRefresh()>:
10003ea2:	56                   	push   esi
10003ea3:	53                   	push   ebx
10003ea4:	31 f6                	xor    esi,esi
10003ea6:	50                   	push   eax
10003ea7:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003eab:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003eae:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003eb4:	7e 15                	jle    10003ecb <NIDesktop::completeRefresh()+0x29>
10003eb6:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003ebc:	6a 00                	push   0x0
10003ebe:	56                   	push   esi
10003ebf:	46                   	inc    esi
10003ec0:	53                   	push   ebx
10003ec1:	e8 fc ff ff ff       	call   10003ec2 <NIDesktop::completeRefresh()+0x20>	10003ec2: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003ec6:	83 c4 10             	add    esp,0x10
10003ec9:	eb e0                	jmp    10003eab <NIDesktop::completeRefresh()+0x9>
10003ecb:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003ed1:	83 ec 0c             	sub    esp,0xc
10003ed4:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003ed6:	6a 00                	push   0x0
10003ed8:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003edb:	05 00 00 00 00       	add    eax,0x0	10003edc: R_386_32	___mouse_data
10003ee0:	50                   	push   eax
10003ee1:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003ee4:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003ee7:	52                   	push   edx
10003ee8:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003eeb:	83 c4 24             	add    esp,0x24
10003eee:	5b                   	pop    ebx
10003eef:	5e                   	pop    esi
10003ef0:	c3                   	ret    
10003ef1:	90                   	nop

10003ef2 <NIDesktop::addWindow(NIWindow*)>:
10003ef2:	56                   	push   esi
10003ef3:	53                   	push   ebx
10003ef4:	83 ec 0c             	sub    esp,0xc
10003ef7:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003efb:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003eff:	56                   	push   esi
10003f00:	ff 33                	push   DWORD PTR [ebx]
10003f02:	e8 fc ff ff ff       	call   10003f03 <NIDesktop::addWindow(NIWindow*)+0x11>	10003f03: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003f07:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003f0b:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003f0f:	83 c4 14             	add    esp,0x14
10003f12:	5b                   	pop    ebx
10003f13:	5e                   	pop    esi
10003f14:	e9 0f ff ff ff       	jmp    10003e28 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003f19:	90                   	nop

10003f1a <NIDesktop::raiseWindow(NIWindow*)>:
10003f1a:	53                   	push   ebx
10003f1b:	83 ec 10             	sub    esp,0x10
10003f1e:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003f22:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003f26:	50                   	push   eax
10003f27:	ff 33                	push   DWORD PTR [ebx]
10003f29:	e8 fc ff ff ff       	call   10003f2a <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003f2a: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003f2e:	58                   	pop    eax
10003f2f:	5a                   	pop    edx
10003f30:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003f34:	ff 33                	push   DWORD PTR [ebx]
10003f36:	e8 fc ff ff ff       	call   10003f37 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003f37: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003f3b:	59                   	pop    ecx
10003f3c:	58                   	pop    eax
10003f3d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003f41:	53                   	push   ebx
10003f42:	e8 fc ff ff ff       	call   10003f43 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003f43: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f47:	83 c4 18             	add    esp,0x18
10003f4a:	5b                   	pop    ebx
10003f4b:	c3                   	ret    

10003f4c <NIDesktop::deleteWindow(NIWindow*)>:
10003f4c:	53                   	push   ebx
10003f4d:	83 ec 10             	sub    esp,0x10
10003f50:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003f54:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003f58:	50                   	push   eax
10003f59:	ff 33                	push   DWORD PTR [ebx]
10003f5b:	e8 fc ff ff ff       	call   10003f5c <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003f5c: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003f60:	58                   	pop    eax
10003f61:	5a                   	pop    edx
10003f62:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003f66:	53                   	push   ebx
10003f67:	e8 fc ff ff ff       	call   10003f68 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003f68: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f6c:	83 c4 18             	add    esp,0x18
10003f6f:	5b                   	pop    ebx
10003f70:	c3                   	ret    
10003f71:	90                   	nop

10003f72 <NIDesktop::handleMouse(int, int, int, int)>:
10003f72:	55                   	push   ebp
10003f73:	57                   	push   edi
10003f74:	56                   	push   esi
10003f75:	53                   	push   ebx
10003f76:	83 ec 38             	sub    esp,0x38
10003f79:	8b 5c 24 4c          	mov    ebx,DWORD PTR [esp+0x4c]
10003f7d:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003f80:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f83:	8d 4a 20             	lea    ecx,[edx+0x20]
10003f86:	51                   	push   ecx
10003f87:	52                   	push   edx
10003f88:	8d 50 20             	lea    edx,[eax+0x20]
10003f8b:	52                   	push   edx
10003f8c:	50                   	push   eax
10003f8d:	53                   	push   ebx
10003f8e:	e8 fc ff ff ff       	call   10003f8f <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003f8f: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f93:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f96:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f9a:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f9d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10003fa1:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003fa5:	03 54 24 64          	add    edx,DWORD PTR [esp+0x64]
10003fa9:	03 44 24 68          	add    eax,DWORD PTR [esp+0x68]
10003fad:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003fb0:	83 c4 20             	add    esp,0x20
10003fb3:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003fb6:	85 d2                	test   edx,edx
10003fb8:	79 07                	jns    10003fc1 <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003fba:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003fc1:	85 c0                	test   eax,eax
10003fc3:	79 07                	jns    10003fcc <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003fc5:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003fcc:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003fcf:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003fd5:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003fd8:	7f 04                	jg     10003fde <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003fda:	48                   	dec    eax
10003fdb:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003fde:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003fe4:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003fe7:	7f 04                	jg     10003fed <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003fe9:	48                   	dec    eax
10003fea:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003fed:	50                   	push   eax
10003fee:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003ff1:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003ff4:	53                   	push   ebx
10003ff5:	e8 fc ff ff ff       	call   10003ff6 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003ff6: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003ffa:	83 c4 10             	add    esp,0x10
10003ffd:	89 c6                	mov    esi,eax
10003fff:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10004003:	83 e0 01             	and    eax,0x1
10004006:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10004008: R_386_32	movingWin
1000400d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004011:	0f 84 f0 01 00 00    	je     10004207 <NIDesktop::handleMouse(int, int, int, int)+0x295>
10004017:	83 3d 00 00 00 00 01 	cmp    DWORD PTR ds:0x0,0x1	10004019: R_386_32	movingType
1000401e:	0f 85 e3 01 00 00    	jne    10004207 <NIDesktop::handleMouse(int, int, int, int)+0x295>
10004024:	c6 04 24 00          	mov    BYTE PTR [esp],0x0
10004028:	85 c0                	test   eax,eax
1000402a:	75 0b                	jne    10004037 <NIDesktop::handleMouse(int, int, int, int)+0xc5>
1000402c:	a0 78 86 03 10       	mov    al,ds:0x10038678	1000402d: R_386_32	.bss
10004031:	83 e0 01             	and    eax,0x1
10004034:	88 04 24             	mov    BYTE PTR [esp],al
10004037:	bd 01 00 00 00       	mov    ebp,0x1
1000403c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000403d: R_386_32	movingWin
10004041:	8b 48 24             	mov    ecx,DWORD PTR [eax+0x24]
10004044:	8d 51 ff             	lea    edx,[ecx-0x1]
10004047:	39 ea                	cmp    edx,ebp
10004049:	0f 8e b1 00 00 00    	jle    10004100 <NIDesktop::handleMouse(int, int, int, int)+0x18e>
1000404f:	bf 01 00 00 00       	mov    edi,0x1
10004054:	a1 00 00 00 00       	mov    eax,ds:0x0	10004055: R_386_32	movingWin
10004059:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
1000405c:	48                   	dec    eax
1000405d:	39 f8                	cmp    eax,edi
1000405f:	0f 8e 95 00 00 00    	jle    100040fa <NIDesktop::handleMouse(int, int, int, int)+0x188>
10004065:	8d 44 3d 00          	lea    eax,[ebp+edi*1+0x0]
10004069:	89 ea                	mov    edx,ebp
1000406b:	83 e0 1f             	and    eax,0x1f
1000406e:	83 e2 03             	and    edx,0x3
10004071:	09 d0                	or     eax,edx
10004073:	75 7f                	jne    100040f4 <NIDesktop::handleMouse(int, int, int, int)+0x182>
10004075:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004079:	2b 05 74 86 03 10    	sub    eax,DWORD PTR ds:0x10038674	1000407b: R_386_32	.bss
1000407f:	01 f8                	add    eax,edi
10004081:	78 2d                	js     100040b0 <NIDesktop::handleMouse(int, int, int, int)+0x13e>
10004083:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004086:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
1000408c:	7d 22                	jge    100040b0 <NIDesktop::handleMouse(int, int, int, int)+0x13e>
1000408e:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10004092:	8d 48 01             	lea    ecx,[eax+0x1]
10004095:	83 ec 0c             	sub    esp,0xc
10004098:	2b 15 70 86 03 10    	sub    edx,DWORD PTR ds:0x10038670	1000409a: R_386_32	.bss
1000409e:	51                   	push   ecx
1000409f:	01 ea                	add    edx,ebp
100040a1:	50                   	push   eax
100040a2:	8d 42 01             	lea    eax,[edx+0x1]
100040a5:	50                   	push   eax
100040a6:	52                   	push   edx
100040a7:	53                   	push   ebx
100040a8:	e8 fc ff ff ff       	call   100040a9 <NIDesktop::handleMouse(int, int, int, int)+0x137>	100040a9: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100040ad:	83 c4 20             	add    esp,0x20
100040b0:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
100040b4:	75 3e                	jne    100040f4 <NIDesktop::handleMouse(int, int, int, int)+0x182>
100040b6:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
100040b9:	01 f8                	add    eax,edi
100040bb:	2b 05 74 86 03 10    	sub    eax,DWORD PTR ds:0x10038674	100040bd: R_386_32	.bss
100040c1:	78 31                	js     100040f4 <NIDesktop::handleMouse(int, int, int, int)+0x182>
100040c3:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
100040c6:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
100040cc:	7d 26                	jge    100040f4 <NIDesktop::handleMouse(int, int, int, int)+0x182>
100040ce:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
100040d4:	8b 11                	mov    edx,DWORD PTR [ecx]
100040d6:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100040da:	6a 00                	push   0x0
100040dc:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
100040df:	01 ea                	add    edx,ebp
100040e1:	2b 15 70 86 03 10    	sub    edx,DWORD PTR ds:0x10038670	100040e3: R_386_32	.bss
100040e7:	52                   	push   edx
100040e8:	50                   	push   eax
100040e9:	51                   	push   ecx
100040ea:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100040ee:	ff 50 24             	call   DWORD PTR [eax+0x24]
100040f1:	83 c4 10             	add    esp,0x10
100040f4:	47                   	inc    edi
100040f5:	e9 5a ff ff ff       	jmp    10004054 <NIDesktop::handleMouse(int, int, int, int)+0xe2>
100040fa:	45                   	inc    ebp
100040fb:	e9 3c ff ff ff       	jmp    1000403c <NIDesktop::handleMouse(int, int, int, int)+0xca>
10004100:	8b 15 74 86 03 10    	mov    edx,DWORD PTR ds:0x10038674	10004102: R_386_32	.bss
10004106:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
10004109:	29 d7                	sub    edi,edx
1000410b:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
1000410f:	0f 85 86 05 00 00    	jne    1000469b <NIDesktop::handleMouse(int, int, int, int)+0x729>
10004115:	89 3c 24             	mov    DWORD PTR [esp],edi
10004118:	85 ff                	test   edi,edi
1000411a:	79 07                	jns    10004123 <NIDesktop::handleMouse(int, int, int, int)+0x1b1>
1000411c:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
10004123:	8b 68 20             	mov    ebp,DWORD PTR [eax+0x20]
10004126:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004129:	01 ef                	add    edi,ebp
1000412b:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
10004131:	39 c7                	cmp    edi,eax
10004133:	7d 05                	jge    1000413a <NIDesktop::handleMouse(int, int, int, int)+0x1c8>
10004135:	2b 3c 24             	sub    edi,DWORD PTR [esp]
10004138:	eb 0b                	jmp    10004145 <NIDesktop::handleMouse(int, int, int, int)+0x1d3>
1000413a:	89 c7                	mov    edi,eax
1000413c:	2b 3c 24             	sub    edi,DWORD PTR [esp]
1000413f:	0f 88 c2 00 00 00    	js     10004207 <NIDesktop::handleMouse(int, int, int, int)+0x295>
10004145:	85 ff                	test   edi,edi
10004147:	0f 84 ba 00 00 00    	je     10004207 <NIDesktop::handleMouse(int, int, int, int)+0x295>
1000414d:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10004151:	29 d1                	sub    ecx,edx
10004153:	89 ca                	mov    edx,ecx
10004155:	79 02                	jns    10004159 <NIDesktop::handleMouse(int, int, int, int)+0x1e7>
10004157:	31 d2                	xor    edx,edx
10004159:	01 cd                	add    ebp,ecx
1000415b:	39 e8                	cmp    eax,ebp
1000415d:	7e 04                	jle    10004163 <NIDesktop::handleMouse(int, int, int, int)+0x1f1>
1000415f:	29 d5                	sub    ebp,edx
10004161:	eb 08                	jmp    1000416b <NIDesktop::handleMouse(int, int, int, int)+0x1f9>
10004163:	29 d0                	sub    eax,edx
10004165:	89 c5                	mov    ebp,eax
10004167:	79 02                	jns    1000416b <NIDesktop::handleMouse(int, int, int, int)+0x1f9>
10004169:	31 ed                	xor    ebp,ebp
1000416b:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000416f:	01 d5                	add    ebp,edx
10004171:	83 ec 0c             	sub    esp,0xc
10004174:	2b 05 70 86 03 10    	sub    eax,DWORD PTR ds:0x10038670	10004176: R_386_32	.bss
1000417a:	55                   	push   ebp
1000417b:	8d 48 01             	lea    ecx,[eax+0x1]
1000417e:	52                   	push   edx
1000417f:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
10004183:	51                   	push   ecx
10004184:	50                   	push   eax
10004185:	53                   	push   ebx
10004186:	e8 fc ff ff ff       	call   10004187 <NIDesktop::handleMouse(int, int, int, int)+0x215>	10004187: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000418b:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000418f:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10004191: R_386_32	movingWin
10004195:	83 c4 14             	add    esp,0x14
10004198:	2b 05 70 86 03 10    	sub    eax,DWORD PTR ds:0x10038670	1000419a: R_386_32	.bss
1000419e:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
100041a1:	55                   	push   ebp
100041a2:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
100041a6:	52                   	push   edx
100041a7:	50                   	push   eax
100041a8:	48                   	dec    eax
100041a9:	50                   	push   eax
100041aa:	53                   	push   ebx
100041ab:	e8 fc ff ff ff       	call   100041ac <NIDesktop::handleMouse(int, int, int, int)+0x23a>	100041ac: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100041b0:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100041b3:	83 c4 18             	add    esp,0x18
100041b6:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100041bc:	8b 0a                	mov    ecx,DWORD PTR [edx]
100041be:	6a 00                	push   0x0
100041c0:	6a 01                	push   0x1
100041c2:	57                   	push   edi
100041c3:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041c6:	2b 05 70 86 03 10    	sub    eax,DWORD PTR ds:0x10038670	100041c8: R_386_32	.bss
100041cc:	50                   	push   eax
100041cd:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100041d1:	52                   	push   edx
100041d2:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100041d5:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100041d8:	83 c4 18             	add    esp,0x18
100041db:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100041e1:	8b 0a                	mov    ecx,DWORD PTR [edx]
100041e3:	6a 00                	push   0x0
100041e5:	6a 01                	push   0x1
100041e7:	57                   	push   edi
100041e8:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	100041ea: R_386_32	movingWin
100041ee:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041f1:	2b 05 70 86 03 10    	sub    eax,DWORD PTR ds:0x10038670	100041f3: R_386_32	.bss
100041f7:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
100041fa:	48                   	dec    eax
100041fb:	50                   	push   eax
100041fc:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10004200:	52                   	push   edx
10004201:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004204:	83 c4 20             	add    esp,0x20
10004207:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004209: R_386_32	movingWin
1000420d:	85 d2                	test   edx,edx
1000420f:	0f 84 05 02 00 00    	je     1000441a <NIDesktop::handleMouse(int, int, int, int)+0x4a8>
10004215:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10004217: R_386_32	movingType
1000421b:	8d 41 fe             	lea    eax,[ecx-0x2]
1000421e:	83 f8 02             	cmp    eax,0x2
10004221:	0f 87 f3 01 00 00    	ja     1000441a <NIDesktop::handleMouse(int, int, int, int)+0x4a8>
10004227:	c6 44 24 10 00       	mov    BYTE PTR [esp+0x10],0x0
1000422c:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10004231:	75 0c                	jne    1000423f <NIDesktop::handleMouse(int, int, int, int)+0x2cd>
10004233:	a0 78 86 03 10       	mov    al,ds:0x10038678	10004234: R_386_32	.bss
10004238:	83 e0 01             	and    eax,0x1
1000423b:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
1000423f:	8b 42 20             	mov    eax,DWORD PTR [edx+0x20]
10004242:	8b 2d 74 86 03 10    	mov    ebp,DWORD PTR ds:0x10038674	10004244: R_386_32	.bss
10004248:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
1000424c:	8b 52 24             	mov    edx,DWORD PTR [edx+0x24]
1000424f:	01 c7                	add    edi,eax
10004251:	29 ef                	sub    edi,ebp
10004253:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10004257:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
1000425b:	01 d7                	add    edi,edx
1000425d:	2b 3d 70 86 03 10    	sub    edi,DWORD PTR ds:0x10038670	1000425f: R_386_32	.bss
10004263:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10004267:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
1000426a:	01 c7                	add    edi,eax
1000426c:	29 ef                	sub    edi,ebp
1000426e:	89 fd                	mov    ebp,edi
10004270:	8b 7b 0c             	mov    edi,DWORD PTR [ebx+0xc]
10004273:	01 d7                	add    edi,edx
10004275:	2b 3d 70 86 03 10    	sub    edi,DWORD PTR ds:0x10038670	10004277: R_386_32	.bss
1000427b:	83 f9 03             	cmp    ecx,0x3
1000427e:	89 3c 24             	mov    DWORD PTR [esp],edi
10004281:	74 0e                	je     10004291 <NIDesktop::handleMouse(int, int, int, int)+0x31f>
10004283:	83 f9 04             	cmp    ecx,0x4
10004286:	75 0f                	jne    10004297 <NIDesktop::handleMouse(int, int, int, int)+0x325>
10004288:	89 14 24             	mov    DWORD PTR [esp],edx
1000428b:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
1000428f:	eb 06                	jmp    10004297 <NIDesktop::handleMouse(int, int, int, int)+0x325>
10004291:	89 c5                	mov    ebp,eax
10004293:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004297:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000429b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000429f:	39 e8                	cmp    eax,ebp
100042a1:	7d 04                	jge    100042a7 <NIDesktop::handleMouse(int, int, int, int)+0x335>
100042a3:	89 6c 24 14          	mov    DWORD PTR [esp+0x14],ebp
100042a7:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100042ab:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100042af:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100042b2:	7d 07                	jge    100042bb <NIDesktop::handleMouse(int, int, int, int)+0x349>
100042b4:	8b 04 24             	mov    eax,DWORD PTR [esp]
100042b7:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100042bb:	bf 01 00 00 00       	mov    edi,0x1
100042c0:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
100042c4:	0f 8d ab 00 00 00    	jge    10004375 <NIDesktop::handleMouse(int, int, int, int)+0x403>
100042ca:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [esp+0x4],0x1
100042d2:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
100042d6:	39 4c 24 04          	cmp    DWORD PTR [esp+0x4],ecx
100042da:	0f 8d 8f 00 00 00    	jge    1000436f <NIDesktop::handleMouse(int, int, int, int)+0x3fd>
100042e0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100042e4:	89 fa                	mov    edx,edi
100042e6:	01 f8                	add    eax,edi
100042e8:	83 e2 03             	and    edx,0x3
100042eb:	83 e0 1f             	and    eax,0x1f
100042ee:	09 d0                	or     eax,edx
100042f0:	75 74                	jne    10004366 <NIDesktop::handleMouse(int, int, int, int)+0x3f4>
100042f2:	83 ec 0c             	sub    esp,0xc
100042f5:	a1 00 00 00 00       	mov    eax,ds:0x0	100042f6: R_386_32	movingWin
100042fa:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100042fe:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10004301:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10004304:	8d 4c 0a 01          	lea    ecx,[edx+ecx*1+0x1]
10004308:	51                   	push   ecx
10004309:	03 54 24 14          	add    edx,DWORD PTR [esp+0x14]
1000430d:	52                   	push   edx
1000430e:	8d 54 38 01          	lea    edx,[eax+edi*1+0x1]
10004312:	01 f8                	add    eax,edi
10004314:	52                   	push   edx
10004315:	50                   	push   eax
10004316:	53                   	push   ebx
10004317:	e8 fc ff ff ff       	call   10004318 <NIDesktop::handleMouse(int, int, int, int)+0x3a6>	10004318: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000431c:	8a 54 24 30          	mov    dl,BYTE PTR [esp+0x30]
10004320:	83 c4 20             	add    esp,0x20
10004323:	83 f2 01             	xor    edx,0x1
10004326:	39 3c 24             	cmp    DWORD PTR [esp],edi
10004329:	0f 9f c0             	setg   al
1000432c:	84 c2                	test   dl,al
1000432e:	74 36                	je     10004366 <NIDesktop::handleMouse(int, int, int, int)+0x3f4>
10004330:	39 6c 24 04          	cmp    DWORD PTR [esp+0x4],ebp
10004334:	7d 30                	jge    10004366 <NIDesktop::handleMouse(int, int, int, int)+0x3f4>
10004336:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004339:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
1000433f:	8b 08                	mov    ecx,DWORD PTR [eax]
10004341:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
10004345:	6a 00                	push   0x0
10004347:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10004349: R_386_32	movingWin
1000434d:	8b 51 1c             	mov    edx,DWORD PTR [ecx+0x1c]
10004350:	01 fa                	add    edx,edi
10004352:	52                   	push   edx
10004353:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10004357:	03 51 18             	add    edx,DWORD PTR [ecx+0x18]
1000435a:	52                   	push   edx
1000435b:	50                   	push   eax
1000435c:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10004360:	ff 50 24             	call   DWORD PTR [eax+0x24]
10004363:	83 c4 10             	add    esp,0x10
10004366:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000436a:	e9 63 ff ff ff       	jmp    100042d2 <NIDesktop::handleMouse(int, int, int, int)+0x360>
1000436f:	47                   	inc    edi
10004370:	e9 4b ff ff ff       	jmp    100042c0 <NIDesktop::handleMouse(int, int, int, int)+0x34e>
10004375:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004377: R_386_32	movingWin
1000437b:	80 7c 24 10 00       	cmp    BYTE PTR [esp+0x10],0x0
10004380:	0f 85 d8 02 00 00    	jne    1000465e <NIDesktop::handleMouse(int, int, int, int)+0x6ec>
10004386:	8b 57 18             	mov    edx,DWORD PTR [edi+0x18]
10004389:	8b 47 1c             	mov    eax,DWORD PTR [edi+0x1c]
1000438c:	83 ec 0c             	sub    esp,0xc
1000438f:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10004393:	01 d1                	add    ecx,edx
10004395:	51                   	push   ecx
10004396:	52                   	push   edx
10004397:	8d 50 01             	lea    edx,[eax+0x1]
1000439a:	52                   	push   edx
1000439b:	50                   	push   eax
1000439c:	53                   	push   ebx
1000439d:	e8 fc ff ff ff       	call   1000439e <NIDesktop::handleMouse(int, int, int, int)+0x42c>	1000439e: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100043a2:	83 c4 18             	add    esp,0x18
100043a5:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100043a8:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043aa: R_386_32	movingWin
100043ae:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
100043b4:	8b 08                	mov    ecx,DWORD PTR [eax]
100043b6:	6a 00                	push   0x0
100043b8:	6a 01                	push   0x1
100043ba:	55                   	push   ebp
100043bb:	ff 72 1c             	push   DWORD PTR [edx+0x1c]
100043be:	ff 72 18             	push   DWORD PTR [edx+0x18]
100043c1:	50                   	push   eax
100043c2:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100043c5:	83 c4 14             	add    esp,0x14
100043c8:	a1 00 00 00 00       	mov    eax,ds:0x0	100043c9: R_386_32	movingWin
100043cd:	8b 48 18             	mov    ecx,DWORD PTR [eax+0x18]
100043d0:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
100043d3:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100043d7:	01 c8                	add    eax,ecx
100043d9:	50                   	push   eax
100043da:	51                   	push   ecx
100043db:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100043df:	8d 44 02 01          	lea    eax,[edx+eax*1+0x1]
100043e3:	50                   	push   eax
100043e4:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
100043e8:	52                   	push   edx
100043e9:	53                   	push   ebx
100043ea:	e8 fc ff ff ff       	call   100043eb <NIDesktop::handleMouse(int, int, int, int)+0x479>	100043eb: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100043ef:	83 c4 18             	add    esp,0x18
100043f2:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100043f5:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043f7: R_386_32	movingWin
100043fb:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10004401:	8b 08                	mov    ecx,DWORD PTR [eax]
10004403:	6a 00                	push   0x0
10004405:	6a 01                	push   0x1
10004407:	55                   	push   ebp
10004408:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000440c:	03 7a 1c             	add    edi,DWORD PTR [edx+0x1c]
1000440f:	57                   	push   edi
10004410:	ff 72 18             	push   DWORD PTR [edx+0x18]
10004413:	50                   	push   eax
10004414:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004417:	83 c4 20             	add    esp,0x20
1000441a:	85 f6                	test   esi,esi
1000441c:	0f 84 08 02 00 00    	je     1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
10004422:	f6 44 24 4c 01       	test   BYTE PTR [esp+0x4c],0x1
10004427:	0f 84 fd 01 00 00    	je     1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
1000442d:	8b 0d 78 86 03 10    	mov    ecx,DWORD PTR ds:0x10038678	1000442f: R_386_32	.bss
10004433:	83 e1 01             	and    ecx,0x1
10004436:	0f 85 ea 00 00 00    	jne    10004526 <NIDesktop::handleMouse(int, int, int, int)+0x5b4>
1000443c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000443d: R_386_32	milliTenthsSinceBoot
10004441:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	10004443: R_386_32	milliTenthsSinceBoot
10004447:	2b 05 68 86 03 10    	sub    eax,DWORD PTR ds:0x10038668	10004449: R_386_32	.bss
1000444d:	bf b7 0b 00 00       	mov    edi,0xbb7
10004452:	1b 15 6c 86 03 10    	sbb    edx,DWORD PTR ds:0x1003866c	10004454: R_386_32	.bss
10004458:	39 c7                	cmp    edi,eax
1000445a:	19 d1                	sbb    ecx,edx
1000445c:	0f 82 95 00 00 00    	jb     100044f7 <NIDesktop::handleMouse(int, int, int, int)+0x585>
10004462:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
10004465:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004468:	29 d0                	sub    eax,edx
1000446a:	83 f8 18             	cmp    eax,0x18
1000446d:	0f 8f 84 00 00 00    	jg     100044f7 <NIDesktop::handleMouse(int, int, int, int)+0x585>
10004473:	f6 46 3c 01          	test   BYTE PTR [esi+0x3c],0x1
10004477:	75 7e                	jne    100044f7 <NIDesktop::handleMouse(int, int, int, int)+0x585>
10004479:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
1000447d:	74 26                	je     100044a5 <NIDesktop::handleMouse(int, int, int, int)+0x533>
1000447f:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
10004482:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
10004485:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004488:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
1000448b:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
1000448e:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
10004491:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
10004494:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004497:	50                   	push   eax
10004498:	50                   	push   eax
10004499:	56                   	push   esi
1000449a:	53                   	push   ebx
1000449b:	e8 fc ff ff ff       	call   1000449c <NIDesktop::handleMouse(int, int, int, int)+0x52a>	1000449c: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
100044a0:	83 c4 10             	add    esp,0x10
100044a3:	eb 3b                	jmp    100044e0 <NIDesktop::handleMouse(int, int, int, int)+0x56e>
100044a5:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
100044a8:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
100044af:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
100044b2:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
100044b9:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
100044bc:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
100044bf:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
100044c2:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
100044c5:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
100044c8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100044cb:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
100044d1:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
100044d4:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100044d7:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
100044dd:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
100044e0:	83 ec 0c             	sub    esp,0xc
100044e3:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
100044e7:	56                   	push   esi
100044e8:	e8 fc ff ff ff       	call   100044e9 <NIDesktop::handleMouse(int, int, int, int)+0x577>	100044e9: R_386_PC32	NIWindow::rerender()
100044ed:	89 1c 24             	mov    DWORD PTR [esp],ebx
100044f0:	e8 fc ff ff ff       	call   100044f1 <NIDesktop::handleMouse(int, int, int, int)+0x57f>	100044f1: R_386_PC32	NIDesktop::completeRefresh()
100044f5:	eb 11                	jmp    10004508 <NIDesktop::handleMouse(int, int, int, int)+0x596>
100044f7:	8b 03                	mov    eax,DWORD PTR [ebx]
100044f9:	8b 00                	mov    eax,DWORD PTR [eax]
100044fb:	39 30                	cmp    DWORD PTR [eax],esi
100044fd:	74 0c                	je     1000450b <NIDesktop::handleMouse(int, int, int, int)+0x599>
100044ff:	50                   	push   eax
10004500:	50                   	push   eax
10004501:	56                   	push   esi
10004502:	53                   	push   ebx
10004503:	e8 fc ff ff ff       	call   10004504 <NIDesktop::handleMouse(int, int, int, int)+0x592>	10004504: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
10004508:	83 c4 10             	add    esp,0x10
1000450b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000450c: R_386_32	milliTenthsSinceBoot
10004510:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	10004512: R_386_32	milliTenthsSinceBoot
10004516:	a3 68 86 03 10       	mov    ds:0x10038668,eax	10004517: R_386_32	.bss
1000451b:	89 15 6c 86 03 10    	mov    DWORD PTR ds:0x1003866c,edx	1000451d: R_386_32	.bss
10004521:	e9 04 01 00 00       	jmp    1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
10004526:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10004528: R_386_32	movingWin
1000452d:	0f 85 f7 00 00 00    	jne    1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
10004533:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
10004536:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
10004539:	89 d1                	mov    ecx,edx
1000453b:	83 e8 0e             	sub    eax,0xe
1000453e:	2b 4e 1c             	sub    ecx,DWORD PTR [esi+0x1c]
10004541:	39 c8                	cmp    eax,ecx
10004543:	7f 37                	jg     1000457c <NIDesktop::handleMouse(int, int, int, int)+0x60a>
10004545:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004549:	75 31                	jne    1000457c <NIDesktop::handleMouse(int, int, int, int)+0x60a>
1000454b:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
1000454e:	c7 43 10 00 04 00 00 	mov    DWORD PTR [ebx+0x10],0x400
10004555:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	10004557: R_386_32	movingWin
1000455b:	55                   	push   ebp
1000455c:	c7 05 00 00 00 00 03 00 00 00 	mov    DWORD PTR ds:0x0,0x3	1000455e: R_386_32	movingType
10004566:	55                   	push   ebp
10004567:	a3 74 86 03 10       	mov    ds:0x10038674,eax	10004568: R_386_32	.bss
1000456c:	56                   	push   esi
1000456d:	89 15 70 86 03 10    	mov    DWORD PTR ds:0x10038670,edx	1000456f: R_386_32	.bss
10004573:	53                   	push   ebx
10004574:	e8 fc ff ff ff       	call   10004575 <NIDesktop::handleMouse(int, int, int, int)+0x603>	10004575: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
10004579:	83 c4 10             	add    esp,0x10
1000457c:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000457f:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004582:	89 d1                	mov    ecx,edx
10004584:	83 e8 0e             	sub    eax,0xe
10004587:	2b 4e 18             	sub    ecx,DWORD PTR [esi+0x18]
1000458a:	39 c8                	cmp    eax,ecx
1000458c:	7f 55                	jg     100045e3 <NIDesktop::handleMouse(int, int, int, int)+0x671>
1000458e:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004592:	75 4f                	jne    100045e3 <NIDesktop::handleMouse(int, int, int, int)+0x671>
10004594:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10004596: R_386_32	movingWin
1000459b:	75 33                	jne    100045d0 <NIDesktop::handleMouse(int, int, int, int)+0x65e>
1000459d:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100045a0:	c7 43 10 00 05 00 00 	mov    DWORD PTR [ebx+0x10],0x500
100045a7:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100045a9: R_386_32	movingWin
100045ad:	57                   	push   edi
100045ae:	c7 05 00 00 00 00 04 00 00 00 	mov    DWORD PTR ds:0x0,0x4	100045b0: R_386_32	movingType
100045b8:	57                   	push   edi
100045b9:	89 15 74 86 03 10    	mov    DWORD PTR ds:0x10038674,edx	100045bb: R_386_32	.bss
100045bf:	56                   	push   esi
100045c0:	a3 70 86 03 10       	mov    ds:0x10038670,eax	100045c1: R_386_32	.bss
100045c5:	53                   	push   ebx
100045c6:	e8 fc ff ff ff       	call   100045c7 <NIDesktop::handleMouse(int, int, int, int)+0x655>	100045c7: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100045cb:	83 c4 10             	add    esp,0x10
100045ce:	eb 13                	jmp    100045e3 <NIDesktop::handleMouse(int, int, int, int)+0x671>
100045d0:	c7 05 00 00 00 00 02 00 00 00 	mov    DWORD PTR ds:0x0,0x2	100045d2: R_386_32	movingType
100045da:	c7 43 10 00 03 00 00 	mov    DWORD PTR [ebx+0x10],0x300
100045e1:	eb 47                	jmp    1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
100045e3:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100045e5: R_386_32	movingWin
100045ea:	75 3e                	jne    1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
100045ec:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100045ef:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
100045f2:	83 f8 18             	cmp    eax,0x18
100045f5:	7f 33                	jg     1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
100045f7:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100045fb:	75 2d                	jne    1000462a <NIDesktop::handleMouse(int, int, int, int)+0x6b8>
100045fd:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004600:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
10004603:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	10004605: R_386_32	movingWin
10004609:	51                   	push   ecx
1000460a:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	1000460c: R_386_32	movingType
10004614:	51                   	push   ecx
10004615:	89 15 74 86 03 10    	mov    DWORD PTR ds:0x10038674,edx	10004617: R_386_32	.bss
1000461b:	56                   	push   esi
1000461c:	a3 70 86 03 10       	mov    ds:0x10038670,eax	1000461d: R_386_32	.bss
10004621:	53                   	push   ebx
10004622:	e8 fc ff ff ff       	call   10004623 <NIDesktop::handleMouse(int, int, int, int)+0x6b1>	10004623: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
10004627:	83 c4 10             	add    esp,0x10
1000462a:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000462d:	83 ec 0c             	sub    esp,0xc
10004630:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004636:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004638:	6a 00                	push   0x0
1000463a:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000463d:	05 00 00 00 00       	add    eax,0x0	1000463e: R_386_32	___mouse_data
10004642:	50                   	push   eax
10004643:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10004646:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004649:	52                   	push   edx
1000464a:	ff 51 30             	call   DWORD PTR [ecx+0x30]
1000464d:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
10004651:	a3 78 86 03 10       	mov    ds:0x10038678,eax	10004652: R_386_32	.bss
10004656:	83 c4 4c             	add    esp,0x4c
10004659:	5b                   	pop    ebx
1000465a:	5e                   	pop    esi
1000465b:	5f                   	pop    edi
1000465c:	5d                   	pop    ebp
1000465d:	c3                   	ret    
1000465e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004661:	89 6f 20             	mov    DWORD PTR [edi+0x20],ebp
10004664:	83 ec 0c             	sub    esp,0xc
10004667:	89 47 24             	mov    DWORD PTR [edi+0x24],eax
1000466a:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000466c: R_386_32	movingWin
10004674:	57                   	push   edi
10004675:	e8 fc ff ff ff       	call   10004676 <NIDesktop::handleMouse(int, int, int, int)+0x704>	10004676: R_386_PC32	NIWindow::rerender()
1000467a:	59                   	pop    ecx
1000467b:	5d                   	pop    ebp
1000467c:	57                   	push   edi
1000467d:	53                   	push   ebx
1000467e:	e8 fc ff ff ff       	call   1000467f <NIDesktop::handleMouse(int, int, int, int)+0x70d>	1000467f: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10004683:	58                   	pop    eax
10004684:	5a                   	pop    edx
10004685:	57                   	push   edi
10004686:	53                   	push   ebx
10004687:	e8 fc ff ff ff       	call   10004688 <NIDesktop::handleMouse(int, int, int, int)+0x716>	10004688: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
1000468c:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10004693:	83 c4 10             	add    esp,0x10
10004696:	e9 7f fd ff ff       	jmp    1000441a <NIDesktop::handleMouse(int, int, int, int)+0x4a8>
1000469b:	89 78 18             	mov    DWORD PTR [eax+0x18],edi
1000469e:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100046a0: R_386_32	movingWin
100046a8:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
100046ab:	2b 15 70 86 03 10    	sub    edx,DWORD PTR ds:0x10038670	100046ad: R_386_32	.bss
100046b1:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
100046b4:	52                   	push   edx
100046b5:	52                   	push   edx
100046b6:	50                   	push   eax
100046b7:	53                   	push   ebx
100046b8:	e8 fc ff ff ff       	call   100046b9 <NIDesktop::handleMouse(int, int, int, int)+0x747>	100046b9: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100046bd:	83 c4 10             	add    esp,0x10
100046c0:	e9 42 fb ff ff       	jmp    10004207 <NIDesktop::handleMouse(int, int, int, int)+0x295>

100046c5 <NiHandleMouse(int, int, int, int)>:
100046c5:	83 ec 18             	sub    esp,0x18
100046c8:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100046cc:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100046d0:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100046d4:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100046d8:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100046da: R_386_32	mouseDesktop
100046de:	e8 fc ff ff ff       	call   100046df <NiHandleMouse(int, int, int, int)+0x1a>	100046df: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
100046e3:	83 c4 2c             	add    esp,0x2c
100046e6:	c3                   	ret    

100046e7 <drawVGAChar(int, int, int)>:
100046e7:	55                   	push   ebp
100046e8:	57                   	push   edi
100046e9:	56                   	push   esi
100046ea:	53                   	push   ebx
100046eb:	31 db                	xor    ebx,ebx
100046ed:	83 ec 1c             	sub    esp,0x1c
100046f0:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100046f4:	c1 e0 04             	shl    eax,0x4
100046f7:	89 04 24             	mov    DWORD PTR [esp],eax
100046fa:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100046fe:	c1 e0 04             	shl    eax,0x4
10004701:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004705:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10004709:	c1 e0 03             	shl    eax,0x3
1000470c:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004710:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004713:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10004717:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	1000471a: R_386_32	cp
1000471e:	8d 3c 19             	lea    edi,[ecx+ebx*1]
10004721:	31 f6                	xor    esi,esi
10004723:	84 c0                	test   al,al
10004725:	79 22                	jns    10004749 <drawVGAChar(int, int, int)+0x62>
10004727:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
1000472b:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000472d: R_386_32	screen
10004731:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004733:	6a 00                	push   0x0
10004735:	57                   	push   edi
10004736:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000473a:	8d 2c 06             	lea    ebp,[esi+eax*1]
1000473d:	55                   	push   ebp
1000473e:	52                   	push   edx
1000473f:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10004742:	83 c4 10             	add    esp,0x10
10004745:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
10004749:	d1 e0                	shl    eax,1
1000474b:	46                   	inc    esi
1000474c:	83 fe 08             	cmp    esi,0x8
1000474f:	75 d2                	jne    10004723 <drawVGAChar(int, int, int)+0x3c>
10004751:	43                   	inc    ebx
10004752:	83 fb 10             	cmp    ebx,0x10
10004755:	75 b9                	jne    10004710 <drawVGAChar(int, int, int)+0x29>
10004757:	83 c4 1c             	add    esp,0x1c
1000475a:	5b                   	pop    ebx
1000475b:	5e                   	pop    esi
1000475c:	5f                   	pop    edi
1000475d:	5d                   	pop    ebp
1000475e:	c3                   	ret    

1000475f <NiDisplayRAM(void*)>:
1000475f:	83 ec 0c             	sub    esp,0xc
10004762:	a1 00 00 00 00       	mov    eax,ds:0x0	10004763: R_386_32	irqDisableCounter
10004767:	48                   	dec    eax
10004768:	a3 00 00 00 00       	mov    ds:0x0,eax	10004769: R_386_32	irqDisableCounter
1000476d:	75 01                	jne    10004770 <NiDisplayRAM(void*)+0x11>
1000476f:	fb                   	sti    
10004770:	50                   	push   eax
10004771:	6a 3f                	push   0x3f
10004773:	6a 00                	push   0x0
10004775:	6a 00                	push   0x0
10004777:	e8 fc ff ff ff       	call   10004778 <NiDisplayRAM(void*)+0x19>	10004778: R_386_PC32	drawVGAChar(int, int, int)
1000477c:	83 c4 0c             	add    esp,0xc
1000477f:	6a 3f                	push   0x3f
10004781:	6a 00                	push   0x0
10004783:	6a 01                	push   0x1
10004785:	e8 fc ff ff ff       	call   10004786 <NiDisplayRAM(void*)+0x27>	10004786: R_386_PC32	drawVGAChar(int, int, int)
1000478a:	83 c4 0c             	add    esp,0xc
1000478d:	6a 25                	push   0x25
1000478f:	6a 00                	push   0x0
10004791:	6a 02                	push   0x2
10004793:	e8 fc ff ff ff       	call   10004794 <NiDisplayRAM(void*)+0x35>	10004794: R_386_PC32	drawVGAChar(int, int, int)
10004798:	83 c4 0c             	add    esp,0xc
1000479b:	6a 20                	push   0x20
1000479d:	6a 00                	push   0x0
1000479f:	6a 03                	push   0x3
100047a1:	e8 fc ff ff ff       	call   100047a2 <NiDisplayRAM(void*)+0x43>	100047a2: R_386_PC32	drawVGAChar(int, int, int)
100047a6:	83 c4 0c             	add    esp,0xc
100047a9:	6a 52                	push   0x52
100047ab:	6a 00                	push   0x0
100047ad:	6a 04                	push   0x4
100047af:	e8 fc ff ff ff       	call   100047b0 <NiDisplayRAM(void*)+0x51>	100047b0: R_386_PC32	drawVGAChar(int, int, int)
100047b4:	83 c4 0c             	add    esp,0xc
100047b7:	6a 41                	push   0x41
100047b9:	6a 00                	push   0x0
100047bb:	6a 05                	push   0x5
100047bd:	e8 fc ff ff ff       	call   100047be <NiDisplayRAM(void*)+0x5f>	100047be: R_386_PC32	drawVGAChar(int, int, int)
100047c2:	83 c4 0c             	add    esp,0xc
100047c5:	6a 4d                	push   0x4d
100047c7:	6a 00                	push   0x0
100047c9:	6a 06                	push   0x6
100047cb:	e8 fc ff ff ff       	call   100047cc <NiDisplayRAM(void*)+0x6d>	100047cc: R_386_PC32	drawVGAChar(int, int, int)
100047d0:	83 c4 0c             	add    esp,0xc
100047d3:	6a 20                	push   0x20
100047d5:	6a 00                	push   0x0
100047d7:	6a 07                	push   0x7
100047d9:	e8 fc ff ff ff       	call   100047da <NiDisplayRAM(void*)+0x7b>	100047da: R_386_PC32	drawVGAChar(int, int, int)
100047de:	83 c4 0c             	add    esp,0xc
100047e1:	6a 75                	push   0x75
100047e3:	6a 00                	push   0x0
100047e5:	6a 08                	push   0x8
100047e7:	e8 fc ff ff ff       	call   100047e8 <NiDisplayRAM(void*)+0x89>	100047e8: R_386_PC32	drawVGAChar(int, int, int)
100047ec:	83 c4 0c             	add    esp,0xc
100047ef:	6a 73                	push   0x73
100047f1:	6a 00                	push   0x0
100047f3:	6a 09                	push   0x9
100047f5:	e8 fc ff ff ff       	call   100047f6 <NiDisplayRAM(void*)+0x97>	100047f6: R_386_PC32	drawVGAChar(int, int, int)
100047fa:	83 c4 0c             	add    esp,0xc
100047fd:	6a 65                	push   0x65
100047ff:	6a 00                	push   0x0
10004801:	6a 0a                	push   0xa
10004803:	e8 fc ff ff ff       	call   10004804 <NiDisplayRAM(void*)+0xa5>	10004804: R_386_PC32	drawVGAChar(int, int, int)
10004808:	83 c4 0c             	add    esp,0xc
1000480b:	6a 64                	push   0x64
1000480d:	6a 00                	push   0x0
1000480f:	6a 0b                	push   0xb
10004811:	e8 fc ff ff ff       	call   10004812 <NiDisplayRAM(void*)+0xb3>	10004812: R_386_PC32	drawVGAChar(int, int, int)
10004816:	83 c4 10             	add    esp,0x10
10004819:	e9 52 ff ff ff       	jmp    10004770 <NiDisplayRAM(void*)+0x11>

1000481e <monikaBsod(char*)>:
1000481e:	55                   	push   ebp
1000481f:	57                   	push   edi
10004820:	31 ff                	xor    edi,edi
10004822:	56                   	push   esi
10004823:	53                   	push   ebx
10004824:	31 db                	xor    ebx,ebx
10004826:	83 ec 24             	sub    esp,0x24
10004829:	a1 00 00 00 00       	mov    eax,ds:0x0	1000482a: R_386_32	screen
1000482e:	8b 10                	mov    edx,DWORD PTR [eax]
10004830:	68 ff ff ff 00       	push   0xffffff
10004835:	50                   	push   eax
10004836:	ff 52 40             	call   DWORD PTR [edx+0x40]
10004839:	83 c4 10             	add    esp,0x10
1000483c:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	1000483e: R_386_32	justMonika
10004842:	8d 43 01             	lea    eax,[ebx+0x1]
10004845:	84 c9                	test   cl,cl
10004847:	79 0e                	jns    10004857 <monikaBsod(char*)+0x39>
10004849:	8d 51 80             	lea    edx,[ecx-0x80]
1000484c:	83 c3 02             	add    ebx,0x2
1000484f:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	10004851: R_386_32	justMonika
10004855:	eb 04                	jmp    1000485b <monikaBsod(char*)+0x3d>
10004857:	89 c3                	mov    ebx,eax
10004859:	b2 01                	mov    dl,0x1
1000485b:	0f b6 c1             	movzx  eax,cl
1000485e:	83 e1 03             	and    ecx,0x3
10004861:	89 c6                	mov    esi,eax
10004863:	6b c9 55             	imul   ecx,ecx,0x55
10004866:	c1 fe 05             	sar    esi,0x5
10004869:	c1 f8 02             	sar    eax,0x2
1000486c:	83 e6 03             	and    esi,0x3
1000486f:	83 e0 07             	and    eax,0x7
10004872:	6b f6 55             	imul   esi,esi,0x55
10004875:	6b c0 24             	imul   eax,eax,0x24
10004878:	c1 e6 10             	shl    esi,0x10
1000487b:	c1 e0 08             	shl    eax,0x8
1000487e:	09 f0                	or     eax,esi
10004880:	31 f6                	xor    esi,esi
10004882:	09 c8                	or     eax,ecx
10004884:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004888:	0f b6 c2             	movzx  eax,dl
1000488b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000488f:	8d 04 37             	lea    eax,[edi+esi*1]
10004892:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10004896:	7f 10                	jg     100048a8 <monikaBsod(char*)+0x8a>
10004898:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
1000489c:	81 ff ff af 04 00    	cmp    edi,0x4afff
100048a2:	7e 98                	jle    1000483c <monikaBsod(char*)+0x1e>
100048a4:	31 db                	xor    ebx,ebx
100048a6:	eb 25                	jmp    100048cd <monikaBsod(char*)+0xaf>
100048a8:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100048aa: R_386_32	screen
100048ae:	b9 80 02 00 00       	mov    ecx,0x280
100048b3:	8b 2a                	mov    ebp,DWORD PTR [edx]
100048b5:	46                   	inc    esi
100048b6:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100048ba:	99                   	cdq    
100048bb:	f7 f9                	idiv   ecx
100048bd:	50                   	push   eax
100048be:	52                   	push   edx
100048bf:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100048c1: R_386_32	screen
100048c5:	ff 55 24             	call   DWORD PTR [ebp+0x24]
100048c8:	83 c4 10             	add    esp,0x10
100048cb:	eb c2                	jmp    1000488f <monikaBsod(char*)+0x71>
100048cd:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100048d1:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
100048d5:	84 c0                	test   al,al
100048d7:	74 1d                	je     100048f6 <monikaBsod(char*)+0xd8>
100048d9:	b9 19 00 00 00       	mov    ecx,0x19
100048de:	52                   	push   edx
100048df:	50                   	push   eax
100048e0:	89 d8                	mov    eax,ebx
100048e2:	43                   	inc    ebx
100048e3:	99                   	cdq    
100048e4:	f7 f9                	idiv   ecx
100048e6:	83 c0 0a             	add    eax,0xa
100048e9:	42                   	inc    edx
100048ea:	50                   	push   eax
100048eb:	52                   	push   edx
100048ec:	e8 fc ff ff ff       	call   100048ed <monikaBsod(char*)+0xcf>	100048ed: R_386_PC32	drawVGAChar(int, int, int)
100048f1:	83 c4 10             	add    esp,0x10
100048f4:	eb d7                	jmp    100048cd <monikaBsod(char*)+0xaf>
100048f6:	f4                   	hlt    
100048f7:	eb fd                	jmp    100048f6 <monikaBsod(char*)+0xd8>

100048f9 <NiInstallSysHooks()>:
100048f9:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100048fb: R_386_32	guiPanicHandler
	100048ff: R_386_32	monikaBsod(char*)
10004903:	c7 05 bc 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xbc,0x0	10004905: R_386_32	systemCallHandlers
	10004909: R_386_32	NiSystemCallHandler(regs*)
1000490d:	c3                   	ret    

1000490e <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)>:
1000490e:	56                   	push   esi
1000490f:	53                   	push   ebx
10004910:	83 ec 10             	sub    esp,0x10
10004913:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004917:	68 27 53 00 10       	push   0x10005327	10004918: R_386_32	.text
1000491c:	e8 fc ff ff ff       	call   1000491d <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0xf>	1000491d: R_386_PC32	Dbg::kprintf(char const*, ...)
10004921:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
10004928:	e8 fc ff ff ff       	call   10004929 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x1b>	10004929: R_386_PC32	malloc
1000492d:	89 c6                	mov    esi,eax
1000492f:	58                   	pop    eax
10004930:	5a                   	pop    edx
10004931:	ff b3 b0 00 00 00    	push   DWORD PTR [ebx+0xb0]
10004937:	ff b3 ac 00 00 00    	push   DWORD PTR [ebx+0xac]
1000493d:	ff b3 a8 00 00 00    	push   DWORD PTR [ebx+0xa8]
10004943:	ff b3 a4 00 00 00    	push   DWORD PTR [ebx+0xa4]
10004949:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000494b: R_386_32	ctxt
1000494f:	56                   	push   esi
10004950:	e8 fc ff ff ff       	call   10004951 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x43>	10004951: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10004955:	83 c4 18             	add    esp,0x18
10004958:	56                   	push   esi
10004959:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000495b: R_386_32	desktop
1000495f:	e8 fc ff ff ff       	call   10004960 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x52>	10004960: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10004964:	59                   	pop    ecx
10004965:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004967: R_386_32	desktop
1000496b:	e8 fc ff ff ff       	call   1000496c <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x5e>	1000496c: R_386_PC32	NIDesktop::completeRefresh()
10004970:	89 b3 a0 00 00 00    	mov    DWORD PTR [ebx+0xa0],esi
10004976:	89 34 24             	mov    DWORD PTR [esp],esi
10004979:	e8 fc ff ff ff       	call   1000497a <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x6c>	1000497a: R_386_PC32	NIWindow::drawBasicWindow()
1000497e:	83 c4 14             	add    esp,0x14
10004981:	31 c0                	xor    eax,eax
10004983:	31 d2                	xor    edx,edx
10004985:	5b                   	pop    ebx
10004986:	5e                   	pop    esi
10004987:	c3                   	ret    

10004988 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)>:
10004988:	55                   	push   ebp
10004989:	57                   	push   edi
1000498a:	56                   	push   esi
1000498b:	31 f6                	xor    esi,esi
1000498d:	53                   	push   ebx
1000498e:	83 ec 28             	sub    esp,0x28
10004991:	8b 6c 24 40          	mov    ebp,DWORD PTR [esp+0x40]
10004995:	68 42 53 00 10       	push   0x10005342	10004996: R_386_32	.text
1000499a:	e8 fc ff ff ff       	call   1000499b <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x13>	1000499b: R_386_PC32	Dbg::kprintf(char const*, ...)
1000499f:	8b 9d a0 00 00 00    	mov    ebx,DWORD PTR [ebp+0xa0]
100049a5:	83 c4 10             	add    esp,0x10
100049a8:	31 c0                	xor    eax,eax
100049aa:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
100049ad:	7e 30                	jle    100049df <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x57>
100049af:	31 ff                	xor    edi,edi
100049b1:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
100049b4:	7e 26                	jle    100049dc <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x54>
100049b6:	8b 95 b8 00 00 00    	mov    edx,DWORD PTR [ebp+0xb8]
100049bc:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
100049bf:	83 fa ff             	cmp    edx,0xffffffff
100049c2:	74 14                	je     100049d8 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x50>
100049c4:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100049c8:	52                   	push   edx
100049c9:	56                   	push   esi
100049ca:	57                   	push   edi
100049cb:	53                   	push   ebx
100049cc:	e8 fc ff ff ff       	call   100049cd <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x45>	100049cd: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100049d1:	83 c4 10             	add    esp,0x10
100049d4:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100049d8:	40                   	inc    eax
100049d9:	47                   	inc    edi
100049da:	eb d5                	jmp    100049b1 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x29>
100049dc:	46                   	inc    esi
100049dd:	eb cb                	jmp    100049aa <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x22>
100049df:	50                   	push   eax
100049e0:	50                   	push   eax
100049e1:	53                   	push   ebx
100049e2:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100049e4: R_386_32	desktop
100049e8:	e8 fc ff ff ff       	call   100049e9 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x61>	100049e9: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
100049ed:	83 c4 2c             	add    esp,0x2c
100049f0:	31 c0                	xor    eax,eax
100049f2:	5b                   	pop    ebx
100049f3:	31 d2                	xor    edx,edx
100049f5:	5e                   	pop    esi
100049f6:	5f                   	pop    edi
100049f7:	5d                   	pop    ebp
100049f8:	c3                   	ret    

100049f9 <NiSystemCallHandler(regs*)>:
100049f9:	53                   	push   ebx
100049fa:	83 ec 14             	sub    esp,0x14
100049fd:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10004a01:	68 64 53 00 10       	push   0x10005364	10004a02: R_386_32	.text
10004a06:	e8 fc ff ff ff       	call   10004a07 <NiSystemCallHandler(regs*)+0xe>	10004a07: R_386_PC32	Dbg::kprintf(char const*, ...)
10004a0b:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10004a0e:	83 c4 10             	add    esp,0x10
10004a11:	83 f9 04             	cmp    ecx,0x4
10004a14:	74 1d                	je     10004a33 <NiSystemCallHandler(regs*)+0x3a>
10004a16:	83 f9 05             	cmp    ecx,0x5
10004a19:	74 2a                	je     10004a45 <NiSystemCallHandler(regs*)+0x4c>
10004a1b:	83 c8 ff             	or     eax,0xffffffff
10004a1e:	85 c9                	test   ecx,ecx
10004a20:	89 c2                	mov    edx,eax
10004a22:	75 44                	jne    10004a68 <NiSystemCallHandler(regs*)+0x6f>
10004a24:	50                   	push   eax
10004a25:	50                   	push   eax
10004a26:	ff 73 24             	push   DWORD PTR [ebx+0x24]
10004a29:	ff 73 28             	push   DWORD PTR [ebx+0x28]
10004a2c:	e8 fc ff ff ff       	call   10004a2d <NiSystemCallHandler(regs*)+0x34>	10004a2d: R_386_PC32	NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)
10004a31:	eb 0d                	jmp    10004a40 <NiSystemCallHandler(regs*)+0x47>
10004a33:	50                   	push   eax
10004a34:	50                   	push   eax
10004a35:	ff 73 24             	push   DWORD PTR [ebx+0x24]
10004a38:	ff 73 28             	push   DWORD PTR [ebx+0x28]
10004a3b:	e8 fc ff ff ff       	call   10004a3c <NiSystemCallHandler(regs*)+0x43>	10004a3c: R_386_PC32	NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)
10004a40:	83 c4 10             	add    esp,0x10
10004a43:	eb 23                	jmp    10004a68 <NiSystemCallHandler(regs*)+0x6f>
10004a45:	83 ec 0c             	sub    esp,0xc
10004a48:	8b 5b 24             	mov    ebx,DWORD PTR [ebx+0x24]
10004a4b:	68 79 53 00 10       	push   0x10005379	10004a4c: R_386_32	.text
10004a50:	e8 fc ff ff ff       	call   10004a51 <NiSystemCallHandler(regs*)+0x58>	10004a51: R_386_PC32	Dbg::kprintf(char const*, ...)
10004a55:	58                   	pop    eax
10004a56:	ff b3 a0 00 00 00    	push   DWORD PTR [ebx+0xa0]
10004a5c:	e8 fc ff ff ff       	call   10004a5d <NiSystemCallHandler(regs*)+0x64>	10004a5d: R_386_PC32	NIWindow::drawBasicWindow()
10004a61:	83 c4 10             	add    esp,0x10
10004a64:	31 c0                	xor    eax,eax
10004a66:	31 d2                	xor    edx,edx
10004a68:	83 c4 08             	add    esp,0x8
10004a6b:	5b                   	pop    ebx
10004a6c:	c3                   	ret    

10004a6d <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)>:
10004a6d:	83 ec 18             	sub    esp,0x18
10004a70:	68 79 53 00 10       	push   0x10005379	10004a71: R_386_32	.text
10004a75:	e8 fc ff ff ff       	call   10004a76 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x9>	10004a76: R_386_PC32	Dbg::kprintf(char const*, ...)
10004a7a:	58                   	pop    eax
10004a7b:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10004a7f:	ff b0 a0 00 00 00    	push   DWORD PTR [eax+0xa0]
10004a85:	e8 fc ff ff ff       	call   10004a86 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x19>	10004a86: R_386_PC32	NIWindow::drawBasicWindow()
10004a8a:	31 c0                	xor    eax,eax
10004a8c:	31 d2                	xor    edx,edx
10004a8e:	83 c4 1c             	add    esp,0x1c
10004a91:	c3                   	ret    

10004a92 <NIWindow::invalidate()>:
10004a92:	53                   	push   ebx
10004a93:	83 ec 08             	sub    esp,0x8
10004a96:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004a9a:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004a9e:	74 1d                	je     10004abd <NIWindow::invalidate()+0x2b>
10004aa0:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
10004aa4:	74 17                	je     10004abd <NIWindow::invalidate()+0x2b>
10004aa6:	83 ec 0c             	sub    esp,0xc
10004aa9:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004aac:	e8 fc ff ff ff       	call   10004aad <NIWindow::invalidate()+0x1b>	10004aad: R_386_PC32	free
10004ab1:	59                   	pop    ecx
10004ab2:	ff 73 14             	push   DWORD PTR [ebx+0x14]
10004ab5:	e8 fc ff ff ff       	call   10004ab6 <NIWindow::invalidate()+0x24>	10004ab6: R_386_PC32	free
10004aba:	83 c4 10             	add    esp,0x10
10004abd:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
10004ac4:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10004acb:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
10004acf:	83 c4 08             	add    esp,0x8
10004ad2:	5b                   	pop    ebx
10004ad3:	c3                   	ret    

10004ad4 <NIWindow::putpixel(int, int, unsigned int)>:
10004ad4:	56                   	push   esi
10004ad5:	53                   	push   ebx
10004ad6:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10004ada:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004ade:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
10004ae1:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
10004ae5:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10004ae9:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10004aed:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004af0:	83 fe 04             	cmp    esi,0x4
10004af3:	75 05                	jne    10004afa <NIWindow::putpixel(int, int, unsigned int)+0x26>
10004af5:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
10004af8:	eb 0e                	jmp    10004b08 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004afa:	83 fe 02             	cmp    esi,0x2
10004afd:	75 06                	jne    10004b05 <NIWindow::putpixel(int, int, unsigned int)+0x31>
10004aff:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10004b03:	eb 03                	jmp    10004b08 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004b05:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10004b08:	5b                   	pop    ebx
10004b09:	5e                   	pop    esi
10004b0a:	c3                   	ret    
10004b0b:	90                   	nop

10004b0c <NIWindow::drawBasicWindow()>:
10004b0c:	55                   	push   ebp
10004b0d:	57                   	push   edi
10004b0e:	56                   	push   esi
10004b0f:	31 f6                	xor    esi,esi
10004b11:	53                   	push   ebx
10004b12:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
10004b16:	39 75 24             	cmp    DWORD PTR [ebp+0x24],esi
10004b19:	7e 2e                	jle    10004b49 <NIWindow::drawBasicWindow()+0x3d>
10004b1b:	31 db                	xor    ebx,ebx
10004b1d:	83 fe 19             	cmp    esi,0x19
10004b20:	0f 9e c3             	setle  bl
10004b23:	31 ff                	xor    edi,edi
10004b25:	4b                   	dec    ebx
10004b26:	81 e3 d5 d4 d4 ff    	and    ebx,0xffd4d4d5
10004b2c:	81 c3 ff ff ff 00    	add    ebx,0xffffff
10004b32:	39 7d 20             	cmp    DWORD PTR [ebp+0x20],edi
10004b35:	7e 0f                	jle    10004b46 <NIWindow::drawBasicWindow()+0x3a>
10004b37:	53                   	push   ebx
10004b38:	56                   	push   esi
10004b39:	57                   	push   edi
10004b3a:	47                   	inc    edi
10004b3b:	55                   	push   ebp
10004b3c:	e8 fc ff ff ff       	call   10004b3d <NIWindow::drawBasicWindow()+0x31>	10004b3d: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10004b41:	83 c4 10             	add    esp,0x10
10004b44:	eb ec                	jmp    10004b32 <NIWindow::drawBasicWindow()+0x26>
10004b46:	46                   	inc    esi
10004b47:	eb cd                	jmp    10004b16 <NIWindow::drawBasicWindow()+0xa>
10004b49:	5b                   	pop    ebx
10004b4a:	5e                   	pop    esi
10004b4b:	5f                   	pop    edi
10004b4c:	5d                   	pop    ebp
10004b4d:	c3                   	ret    

10004b4e <NIWindow::rerender()>:
10004b4e:	57                   	push   edi
10004b4f:	56                   	push   esi
10004b50:	53                   	push   ebx
10004b51:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004b55:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004b59:	74 0c                	je     10004b67 <NIWindow::rerender()+0x19>
10004b5b:	83 ec 0c             	sub    esp,0xc
10004b5e:	53                   	push   ebx
10004b5f:	e8 fc ff ff ff       	call   10004b60 <NIWindow::rerender()+0x12>	10004b60: R_386_PC32	NIWindow::invalidate()
10004b64:	83 c4 10             	add    esp,0x10
10004b67:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10004b6a:	83 ec 0c             	sub    esp,0xc
10004b6d:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
10004b70:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004b77:	50                   	push   eax
10004b78:	e8 fc ff ff ff       	call   10004b79 <NIWindow::rerender()+0x2b>	10004b79: R_386_PC32	malloc
10004b7d:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
10004b81:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004b84:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004b88:	89 34 24             	mov    DWORD PTR [esp],esi
10004b8b:	e8 fc ff ff ff       	call   10004b8c <NIWindow::rerender()+0x3e>	10004b8c: R_386_PC32	malloc
10004b90:	83 c4 10             	add    esp,0x10
10004b93:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004b96:	31 c0                	xor    eax,eax
10004b98:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004b9b:	7e 6a                	jle    10004c07 <NIWindow::rerender()+0xb9>
10004b9d:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10004ba4:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004ba7:	01 d6                	add    esi,edx
10004ba9:	83 f8 06             	cmp    eax,0x6
10004bac:	7f 1b                	jg     10004bc9 <NIWindow::rerender()+0x7b>
10004bae:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	10004bb1: R_386_32	curveLookup7
10004bb5:	66 89 0e             	mov    WORD PTR [esi],cx
10004bb8:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004bbb:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	10004bbe: R_386_32	curveLookup7
10004bc2:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
10004bc7:	eb 3b                	jmp    10004c04 <NIWindow::rerender()+0xb6>
10004bc9:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004bcc:	8d 79 fa             	lea    edi,[ecx-0x6]
10004bcf:	39 c7                	cmp    edi,eax
10004bd1:	7f 22                	jg     10004bf5 <NIWindow::rerender()+0xa7>
10004bd3:	29 c1                	sub    ecx,eax
10004bd5:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004bd8: R_386_32	curveLookup7
10004bdc:	66 89 0e             	mov    WORD PTR [esi],cx
10004bdf:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004be2:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004be5:	29 c1                	sub    ecx,eax
10004be7:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004bea: R_386_32	curveLookup7
10004bee:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
10004bf3:	eb 0f                	jmp    10004c04 <NIWindow::rerender()+0xb6>
10004bf5:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
10004bfa:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004bfd:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
10004c04:	40                   	inc    eax
10004c05:	eb 91                	jmp    10004b98 <NIWindow::rerender()+0x4a>
10004c07:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
10004c0b:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
10004c0f:	5b                   	pop    ebx
10004c10:	5e                   	pop    esi
10004c11:	5f                   	pop    edi
10004c12:	e9 f5 fe ff ff       	jmp    10004b0c <NIWindow::drawBasicWindow()>
10004c17:	90                   	nop

10004c18 <NIWindow::changeContext(NIContext*, int, int)>:
10004c18:	55                   	push   ebp
10004c19:	57                   	push   edi
10004c1a:	56                   	push   esi
10004c1b:	53                   	push   ebx
10004c1c:	83 ec 18             	sub    esp,0x18
10004c1f:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004c23:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004c27:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10004c2b:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10004c2f:	53                   	push   ebx
10004c30:	e8 fc ff ff ff       	call   10004c31 <NIWindow::changeContext(NIContext*, int, int)+0x19>	10004c31: R_386_PC32	NIWindow::invalidate()
10004c35:	89 33                	mov    DWORD PTR [ebx],esi
10004c37:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
10004c3a:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
10004c3d:	83 c4 10             	add    esp,0x10
10004c40:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004c46:	83 f8 08             	cmp    eax,0x8
10004c49:	7f 09                	jg     10004c54 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10004c4b:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10004c52:	eb 15                	jmp    10004c69 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004c54:	83 f8 10             	cmp    eax,0x10
10004c57:	7f 09                	jg     10004c62 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004c59:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
10004c60:	eb 07                	jmp    10004c69 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004c62:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004c69:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10004c6d:	83 c4 0c             	add    esp,0xc
10004c70:	5b                   	pop    ebx
10004c71:	5e                   	pop    esi
10004c72:	5f                   	pop    edi
10004c73:	5d                   	pop    ebp
10004c74:	e9 d5 fe ff ff       	jmp    10004b4e <NIWindow::rerender()>
10004c79:	90                   	nop

10004c7a <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10004c7a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004c7e:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10004c82:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
10004c86:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004c89:	c7 40 3c 00 00 00 00 	mov    DWORD PTR [eax+0x3c],0x0
10004c90:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004c94:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
10004c98:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004c9b:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004ca2:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10004ca9:	e9 6a ff ff ff       	jmp    10004c18 <NIWindow::changeContext(NIContext*, int, int)>

10004cae <NIWindow::request()>:
10004cae:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004cb2:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
10004cb6:	75 05                	jne    10004cbd <NIWindow::request()+0xf>
10004cb8:	e9 91 fe ff ff       	jmp    10004b4e <NIWindow::rerender()>
10004cbd:	c3                   	ret    

10004cbe <NIWindow::SHADOW_TEST()>:
10004cbe:	55                   	push   ebp
10004cbf:	57                   	push   edi
10004cc0:	56                   	push   esi
10004cc1:	53                   	push   ebx
10004cc2:	83 ec 28             	sub    esp,0x28
10004cc5:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10004cc9:	53                   	push   ebx
10004cca:	e8 fc ff ff ff       	call   10004ccb <NIWindow::SHADOW_TEST()+0xd>	10004ccb: R_386_PC32	NIWindow::request()
10004ccf:	83 c4 10             	add    esp,0x10
10004cd2:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004cd5:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004cd8:	74 10                	je     10004cea <NIWindow::SHADOW_TEST()+0x2c>
10004cda:	83 ec 0c             	sub    esp,0xc
10004cdd:	68 98 53 00 10       	push   0x10005398	10004cde: R_386_32	.text
10004ce2:	e8 fc ff ff ff       	call   10004ce3 <NIWindow::SHADOW_TEST()+0x25>	10004ce3: R_386_PC32	KePanic(char const*)
10004ce7:	83 c4 10             	add    esp,0x10
10004cea:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004cee:	0f 85 28 01 00 00    	jne    10004e1c <NIWindow::SHADOW_TEST()+0x15e>
10004cf4:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
10004cfc:	31 ff                	xor    edi,edi
10004cfe:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
10004d01:	0f 8e 15 01 00 00    	jle    10004e1c <NIWindow::SHADOW_TEST()+0x15e>
10004d07:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004d0a:	8d 04 b8             	lea    eax,[eax+edi*4]
10004d0d:	0f b7 30             	movzx  esi,WORD PTR [eax]
10004d10:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10004d14:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10004d18:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004d1c:	89 34 24             	mov    DWORD PTR [esp],esi
10004d1f:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004d22:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004d25:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10004d29:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
10004d2c:	0f 8e d4 00 00 00    	jle    10004e06 <NIWindow::SHADOW_TEST()+0x148>
10004d32:	83 ff 05             	cmp    edi,0x5
10004d35:	7e 1f                	jle    10004d56 <NIWindow::SHADOW_TEST()+0x98>
10004d37:	8d 41 fb             	lea    eax,[ecx-0x5]
10004d3a:	39 f8                	cmp    eax,edi
10004d3c:	7e 18                	jle    10004d56 <NIWindow::SHADOW_TEST()+0x98>
10004d3e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004d42:	83 c0 05             	add    eax,0x5
10004d45:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004d48:	7d 0c                	jge    10004d56 <NIWindow::SHADOW_TEST()+0x98>
10004d4a:	8d 45 fb             	lea    eax,[ebp-0x5]
10004d4d:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004d50:	0f 8f a8 00 00 00    	jg     10004dfe <NIWindow::SHADOW_TEST()+0x140>
10004d56:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
10004d5a:	be ea 01 00 00       	mov    esi,0x1ea
10004d5f:	29 f9                	sub    ecx,edi
10004d61:	89 f0                	mov    eax,esi
10004d63:	83 c1 04             	add    ecx,0x4
10004d66:	99                   	cdq    
10004d67:	f7 f9                	idiv   ecx
10004d69:	89 c1                	mov    ecx,eax
10004d6b:	89 f0                	mov    eax,esi
10004d6d:	99                   	cdq    
10004d6e:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10004d72:	83 f8 0a             	cmp    eax,0xa
10004d75:	7d 05                	jge    10004d7c <NIWindow::SHADOW_TEST()+0xbe>
10004d77:	b8 0a 00 00 00       	mov    eax,0xa
10004d7c:	39 c1                	cmp    ecx,eax
10004d7e:	7d 02                	jge    10004d82 <NIWindow::SHADOW_TEST()+0xc4>
10004d80:	89 c1                	mov    ecx,eax
10004d82:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10004d85:	b8 ea 01 00 00       	mov    eax,0x1ea
10004d8a:	83 c5 04             	add    ebp,0x4
10004d8d:	99                   	cdq    
10004d8e:	f7 fd                	idiv   ebp
10004d90:	89 c6                	mov    esi,eax
10004d92:	83 f8 0a             	cmp    eax,0xa
10004d95:	7d 05                	jge    10004d9c <NIWindow::SHADOW_TEST()+0xde>
10004d97:	be 0a 00 00 00       	mov    esi,0xa
10004d9c:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004d9f:	8d 68 05             	lea    ebp,[eax+0x5]
10004da2:	b8 ea 01 00 00       	mov    eax,0x1ea
10004da7:	99                   	cdq    
10004da8:	f7 fd                	idiv   ebp
10004daa:	39 c6                	cmp    esi,eax
10004dac:	7d 02                	jge    10004db0 <NIWindow::SHADOW_TEST()+0xf2>
10004dae:	89 c6                	mov    esi,eax
10004db0:	89 f0                	mov    eax,esi
10004db2:	89 ca                	mov    edx,ecx
10004db4:	0f af c6             	imul   eax,esi
10004db7:	0f af d1             	imul   edx,ecx
10004dba:	0f af f1             	imul   esi,ecx
10004dbd:	01 d0                	add    eax,edx
10004dbf:	8d 04 c6             	lea    eax,[esi+eax*8]
10004dc2:	c1 f8 08             	sar    eax,0x8
10004dc5:	83 f8 66             	cmp    eax,0x66
10004dc8:	7e 46                	jle    10004e10 <NIWindow::SHADOW_TEST()+0x152>
10004dca:	8d 50 9a             	lea    edx,[eax-0x66]
10004dcd:	d1 fa                	sar    edx,1
10004dcf:	8d 42 66             	lea    eax,[edx+0x66]
10004dd2:	83 f8 73             	cmp    eax,0x73
10004dd5:	7e 39                	jle    10004e10 <NIWindow::SHADOW_TEST()+0x152>
10004dd7:	83 ea 0d             	sub    edx,0xd
10004dda:	c1 fa 02             	sar    edx,0x2
10004ddd:	8d 42 73             	lea    eax,[edx+0x73]
10004de0:	83 f8 7f             	cmp    eax,0x7f
10004de3:	7f 19                	jg     10004dfe <NIWindow::SHADOW_TEST()+0x140>
10004de5:	50                   	push   eax
10004de6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004de9:	01 f8                	add    eax,edi
10004deb:	50                   	push   eax
10004dec:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004df0:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10004df3:	50                   	push   eax
10004df4:	ff 33                	push   DWORD PTR [ebx]
10004df6:	e8 fc ff ff ff       	call   10004df7 <NIWindow::SHADOW_TEST()+0x139>	10004df7: R_386_PC32	NIContext::drvDarken4(int, int, int)
10004dfb:	83 c4 10             	add    esp,0x10
10004dfe:	ff 04 24             	inc    DWORD PTR [esp]
10004e01:	e9 19 ff ff ff       	jmp    10004d1f <NIWindow::SHADOW_TEST()+0x61>
10004e06:	47                   	inc    edi
10004e07:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10004e0b:	e9 ee fe ff ff       	jmp    10004cfe <NIWindow::SHADOW_TEST()+0x40>
10004e10:	83 f8 0a             	cmp    eax,0xa
10004e13:	7d d0                	jge    10004de5 <NIWindow::SHADOW_TEST()+0x127>
10004e15:	b8 0a 00 00 00       	mov    eax,0xa
10004e1a:	eb c9                	jmp    10004de5 <NIWindow::SHADOW_TEST()+0x127>
10004e1c:	83 c4 1c             	add    esp,0x1c
10004e1f:	5b                   	pop    ebx
10004e20:	5e                   	pop    esi
10004e21:	5f                   	pop    edi
10004e22:	5d                   	pop    ebp
10004e23:	c3                   	ret    

10004e24 <NIWindow::realdraw()>:
10004e24:	55                   	push   ebp
10004e25:	57                   	push   edi
10004e26:	56                   	push   esi
10004e27:	53                   	push   ebx
10004e28:	83 ec 18             	sub    esp,0x18
10004e2b:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004e2f:	53                   	push   ebx
10004e30:	e8 fc ff ff ff       	call   10004e31 <NIWindow::realdraw()+0xd>	10004e31: R_386_PC32	NIWindow::request()
10004e35:	83 c4 10             	add    esp,0x10
10004e38:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004e3b:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004e3e:	74 10                	je     10004e50 <NIWindow::realdraw()+0x2c>
10004e40:	83 ec 0c             	sub    esp,0xc
10004e43:	68 98 53 00 10       	push   0x10005398	10004e44: R_386_32	.text
10004e48:	e8 fc ff ff ff       	call   10004e49 <NIWindow::realdraw()+0x25>	10004e49: R_386_PC32	KePanic(char const*)
10004e4d:	83 c4 10             	add    esp,0x10
10004e50:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004e54:	75 46                	jne    10004e9c <NIWindow::realdraw()+0x78>
10004e56:	31 f6                	xor    esi,esi
10004e58:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
10004e5b:	7e 3f                	jle    10004e9c <NIWindow::realdraw()+0x78>
10004e5d:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004e60:	8d 04 b0             	lea    eax,[eax+esi*4]
10004e63:	0f b7 28             	movzx  ebp,WORD PTR [eax]
10004e66:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
10004e6a:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10004e6d:	89 c2                	mov    edx,eax
10004e6f:	29 fa                	sub    edx,edi
10004e71:	39 ea                	cmp    edx,ebp
10004e73:	7e 24                	jle    10004e99 <NIWindow::realdraw()+0x75>
10004e75:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004e78:	0f af c6             	imul   eax,esi
10004e7b:	01 e8                	add    eax,ebp
10004e7d:	ff 34 82             	push   DWORD PTR [edx+eax*4]
10004e80:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004e83:	01 f0                	add    eax,esi
10004e85:	50                   	push   eax
10004e86:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10004e89:	01 e8                	add    eax,ebp
10004e8b:	45                   	inc    ebp
10004e8c:	50                   	push   eax
10004e8d:	ff 33                	push   DWORD PTR [ebx]
10004e8f:	e8 fc ff ff ff       	call   10004e90 <NIWindow::realdraw()+0x6c>	10004e90: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004e94:	83 c4 10             	add    esp,0x10
10004e97:	eb d1                	jmp    10004e6a <NIWindow::realdraw()+0x46>
10004e99:	46                   	inc    esi
10004e9a:	eb bc                	jmp    10004e58 <NIWindow::realdraw()+0x34>
10004e9c:	83 c4 0c             	add    esp,0xc
10004e9f:	5b                   	pop    ebx
10004ea0:	5e                   	pop    esi
10004ea1:	5f                   	pop    edi
10004ea2:	5d                   	pop    ebp
10004ea3:	c3                   	ret    

10004ea4 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004ea4:	53                   	push   ebx
10004ea5:	83 ec 14             	sub    esp,0x14
10004ea8:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10004eac:	6a 0c                	push   0xc
10004eae:	e8 fc ff ff ff       	call   10004eaf <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	10004eaf: R_386_PC32	malloc
10004eb3:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10004eb7:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004ebe:	89 10                	mov    DWORD PTR [eax],edx
10004ec0:	83 c4 10             	add    esp,0x10
10004ec3:	8b 13                	mov    edx,DWORD PTR [ebx]
10004ec5:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10004ec8:	85 d2                	test   edx,edx
10004eca:	74 05                	je     10004ed1 <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
10004ecc:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
10004ecf:	eb 03                	jmp    10004ed4 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
10004ed1:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004ed4:	89 03                	mov    DWORD PTR [ebx],eax
10004ed6:	83 c4 08             	add    esp,0x8
10004ed9:	5b                   	pop    ebx
10004eda:	c3                   	ret    
10004edb:	90                   	nop

10004edc <List<NIWindow*>::deleteElement(NIWindow*&)>:
10004edc:	57                   	push   edi
10004edd:	56                   	push   esi
10004ede:	53                   	push   ebx
10004edf:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10004ee3:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004ee7:	8b 19                	mov    ebx,DWORD PTR [ecx]
10004ee9:	85 db                	test   ebx,ebx
10004eeb:	74 5e                	je     10004f4b <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004eed:	8b 30                	mov    esi,DWORD PTR [eax]
10004eef:	89 da                	mov    edx,ebx
10004ef1:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
10004ef4:	8b 3a                	mov    edi,DWORD PTR [edx]
10004ef6:	85 c0                	test   eax,eax
10004ef8:	74 08                	je     10004f02 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004efa:	39 f7                	cmp    edi,esi
10004efc:	73 04                	jae    10004f02 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004efe:	89 c2                	mov    edx,eax
10004f00:	eb ef                	jmp    10004ef1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
10004f02:	39 f7                	cmp    edi,esi
10004f04:	75 45                	jne    10004f4b <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004f06:	39 d3                	cmp    ebx,edx
10004f08:	75 18                	jne    10004f22 <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
10004f0a:	89 01                	mov    DWORD PTR [ecx],eax
10004f0c:	85 c0                	test   eax,eax
10004f0e:	75 09                	jne    10004f19 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
10004f10:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004f17:	eb 1e                	jmp    10004f37 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004f19:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004f20:	eb 15                	jmp    10004f37 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004f22:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004f25:	85 c0                	test   eax,eax
10004f27:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004f2a:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004f2d:	74 05                	je     10004f34 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
10004f2f:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10004f32:	eb 03                	jmp    10004f37 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004f34:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004f37:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
10004f3f:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10004f43:	5b                   	pop    ebx
10004f44:	5e                   	pop    esi
10004f45:	5f                   	pop    edi
10004f46:	e9 fc ff ff ff       	jmp    10004f47 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004f47: R_386_PC32	operator delete(void*, unsigned long)
10004f4b:	5b                   	pop    ebx
10004f4c:	5e                   	pop    esi
10004f4d:	5f                   	pop    edi
10004f4e:	c3                   	ret    
10004f4f:	53                   	push   ebx
10004f50:	46                   	inc    esi
10004f51:	4e                   	dec    esi
10004f52:	43                   	inc    ebx
10004f53:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004f56:	4e                   	dec    esi
10004f57:	32 00                	xor    al,BYTE PTR [eax]
10004f59:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
10004f5c:	53                   	push   ebx
10004f5d:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
10004f60:	43                   	inc    ebx
10004f61:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004f62:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004f63:	74 65                	je     10004fca <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
10004f65:	78 74                	js     10004fdb <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
10004f67:	3a 3a                	cmp    bh,BYTE PTR [edx]
10004f69:	64 72 76             	fs jb  10004fe2 <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
10004f6c:	52                   	push   edx
10004f6d:	65 6e                	outs   dx,BYTE PTR gs:[esi]
10004f6f:	64 65 72 54          	fs gs jb 10004fc7 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
10004f73:	54                   	push   esp
10004f74:	46                   	inc    esi
10004f75:	34 00                	xor    al,0x0
10004f77:	43                   	inc    ebx
10004f78:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004f7a:	42                   	inc    edx
10004f7b:	61                   	popa   
10004f7c:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004f7d:	61                   	popa   
10004f7e:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004f7f:	61                   	popa   
10004f80:	2f                   	das    
10004f81:	46                   	inc    esi
10004f82:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004f83:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004f84:	74 73                	je     10004ff9 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
10004f86:	2f                   	das    
10004f87:	53                   	push   ebx
10004f88:	46                   	inc    esi
10004f89:	4e                   	dec    esi
10004f8a:	00 43 41             	add    BYTE PTR [ebx+0x41],al
10004f8d:	4e                   	dec    esi
10004f8e:	4e                   	dec    esi
10004f8f:	4f                   	dec    edi
10004f90:	54                   	push   esp
10004f91:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004f95:	44                   	inc    esp
10004f96:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
10004f99:	4e                   	dec    esi
10004f9a:	54                   	push   esp
10004f9b:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
10004f9f:	45                   	inc    ebp
10004fa0:	43                   	inc    ebx
10004fa1:	54                   	push   esp
10004fa2:	4f                   	dec    edi
10004fa3:	52                   	push   edx
10004fa4:	59                   	pop    ecx
10004fa5:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
10004fa8:	2f                   	das    
10004fa9:	42                   	inc    edx
10004faa:	61                   	popa   
10004fab:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004fac:	61                   	popa   
10004fad:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004fae:	61                   	popa   
10004faf:	2f                   	das    
10004fb0:	46                   	inc    esi
10004fb1:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004fb2:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004fb3:	74 73                	je     10005028 <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
10004fb5:	2f                   	das    
10004fb6:	53                   	push   ebx
10004fb7:	46                   	inc    esi
10004fb8:	4e                   	dec    esi
10004fb9:	2f                   	das    
10004fba:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
10004fbd:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004fbe:	74 20                	je     10004fe0 <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
10004fc0:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
10004fc7:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
10004fce:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
10004fd2:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
10004fd8:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004fd9:	74 3a                	je     10005015 <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
10004fdb:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
10004fe1:	53                   	push   ebx
10004fe2:	46                   	inc    esi
10004fe3:	4e                   	dec    esi
10004fe4:	5f                   	pop    edi
10004fe5:	52                   	push   edx
10004fe6:	45                   	inc    ebp
10004fe7:	53                   	push   ebx
10004fe8:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
10004fee:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
10004ff1:	6d                   	ins    DWORD PTR es:[edi],dx
10004ff2:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004ff3:	72 79                	jb     1000506e <List<NIWindow*>::deleteElement(NIWindow*&)+0x192>
10004ff5:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
10004ff8:	6c                   	ins    BYTE PTR es:[edi],dx
10004ff9:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004ffa:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
10004ffd:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
10005004:	6f                   	outs   dx,DWORD PTR ds:[esi]
10005005:	72 00                	jb     10005007 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
10005007:	42                   	inc    edx
10005008:	61                   	popa   
10005009:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
1000500d:	6c                   	ins    BYTE PTR es:[edi],dx
1000500e:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10005012:	72 6d                	jb     10005081 <_ssfn__compute_huffman_codes::length_dezigzag+0x1>
10005014:	61                   	popa   
10005015:	74 00                	je     10005017 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
10005017:	4e                   	dec    esi
10005018:	6f                   	outs   dx,DWORD PTR ds:[esi]
10005019:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000501c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000501d:	74 20                	je     1000503f <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
1000501f:	66 61                	popaw  
10005021:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10005024:	66 6f                	outs   dx,WORD PTR ds:[esi]
10005026:	75 6e                	jne    10005096 <_ssfn__compute_huffman_codes::length_dezigzag+0x16>
10005028:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000502c:	76 61                	jbe    1000508f <_ssfn__compute_huffman_codes::length_dezigzag+0xf>
1000502e:	6c                   	ins    BYTE PTR es:[edi],dx
1000502f:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10005037:	20 76 61             	and    BYTE PTR [esi+0x61],dh
1000503a:	6c                   	ins    BYTE PTR es:[edi],dx
1000503b:	75 65                	jne    100050a2 <_ssfn__zdist_extra+0x2>
1000503d:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10005040:	76 61                	jbe    100050a3 <_ssfn__zdist_extra+0x3>
10005042:	6c                   	ins    BYTE PTR es:[edi],dx
10005043:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
1000504b:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000504e:	76 61                	jbe    100050b1 <_ssfn__zdist_extra+0x11>
10005050:	6c                   	ins    BYTE PTR es:[edi],dx
10005051:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
10005059:	47                   	inc    edi
1000505a:	6c                   	ins    BYTE PTR es:[edi],dx
1000505b:	79 70                	jns    100050cd <_ssfn__zdist_extra+0x2d>
1000505d:	68 20 6e 6f 74       	push   0x746f6e20
10005062:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10005065:	75 6e                	jne    100050d5 <_ssfn__zdist_extra+0x35>
10005067:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
1000506b:	66 90                	xchg   ax,ax
1000506d:	66 90                	xchg   ax,ax
1000506f:	66 90                	xchg   ax,ax
10005071:	66 90                	xchg   ax,ax
10005073:	66 90                	xchg   ax,ax
10005075:	66 90                	xchg   ax,ax
10005077:	66 90                	xchg   ax,ax
10005079:	66 90                	xchg   ax,ax
1000507b:	66 90                	xchg   ax,ax
1000507d:	66 90                	xchg   ax,ax
1000507f:	90                   	nop

10005080 <_ssfn__compute_huffman_codes::length_dezigzag>:
10005080:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10005090:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

100050a0 <_ssfn__zdist_extra>:
	...
100050b0:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
100050c0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
100050d0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
100050e0:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
100050f0:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10005100:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10005110:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10005120 <_ssfn__zdist_base>:
10005120:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10005130:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10005140:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10005150:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10005160:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10005170:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10005180:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10005190:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

100051a0 <_ssfn__zlength_extra>:
	...
100051c0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
100051d0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
100051e0:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
100051f0:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10005200:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10005220 <_ssfn__zlength_base>:
10005220:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10005230:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10005240:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10005250:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10005260:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10005270:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10005280:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10005290:	02 01 00 00 00 00 00 00 00 00 00 00 43 3a 2f 42     ............C:/B
100052a0:	61 6e 61 6e 61 2f 43 75 72 73 6f 72 73 2f 53 54     anana/Cursors/ST
100052b0:	41 4e 44 41 52 44 2e 43 55 52 00 43 55 52 53 4f     ANDARD.CUR.CURSO
100052c0:	52 20 4c 4f 41 44 3a 20 42 41 44 20 31 0a 00 43     R LOAD: BAD 1..C
100052d0:	55 52 53 4f 52 20 4c 4f 41 44 3a 20 42 41 44 20     URSOR LOAD: BAD 
100052e0:	32 0a 00 43 55 52 53 4f 52 53 3a 20 25 64 0a 00     2..CURSORS: %d..
100052f0:	4e 52 4d 4c 00 57 41 49 54 00 54 4c 44 52 00 54     NRML.WAIT.TLDR.T
10005300:	45 58 54 00 56 45 52 54 00 48 4f 52 5a 00 48 41     EXT.VERT.HORZ.HA
10005310:	4e 44 00 43 55 52 53 4f 52 20 4c 4f 41 44 3a 20     ND.CURSOR LOAD: 
10005320:	42 41 44 20 33 0a 00 4e 69 4c 69 6e 6b 43 6f 6d     BAD 3..NiLinkCom
10005330:	6d 61 6e 64 43 72 65 61 74 65 57 69 6e 64 6f 77     mandCreateWindow
10005340:	0a 00 4e 69 4c 69 6e 6b 43 6f 6d 6d 61 6e 64 52     ..NiLinkCommandR
10005350:	65 73 75 70 70 6c 79 46 72 61 6d 65 62 75 66 66     esupplyFramebuff
10005360:	65 72 0a 00 4e 69 53 79 73 74 65 6d 43 61 6c 6c     er..NiSystemCall
10005370:	48 61 6e 64 6c 65 72 0a 00 4e 69 4c 69 6e 6b 43     Handler..NiLinkC
10005380:	6f 6d 6d 61 6e 64 43 6c 65 61 72 46 72 61 6d 65     ommandClearFrame
10005390:	62 75 66 66 65 72 0a 00 41 53 53 45 52 54 49 4f     buffer..ASSERTIO
100053a0:	4e 20 46 41 49 4c 55 52 45 20 28 41 29 2e 00        N FAILURE (A)..
