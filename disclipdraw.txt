
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000009: R_386_32	screen
1000000d:	e8 fc ff ff ff       	call   1000000e <start(void*)+0xe>	1000000e: R_386_PC32	Video::getWidth()
10000012:	89 c3                	mov    ebx,eax
10000014:	58                   	pop    eax
10000015:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000017: R_386_32	screen
1000001b:	e8 fc ff ff ff       	call   1000001c <start(void*)+0x1c>	1000001c: R_386_PC32	Video::getHeight()
10000020:	5a                   	pop    edx
10000021:	89 c7                	mov    edi,eax
10000023:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000025: R_386_32	screen
10000029:	e8 fc ff ff ff       	call   1000002a <start(void*)+0x2a>	1000002a: R_386_PC32	Video::getWidth()
1000002e:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
10000035:	89 c5                	mov    ebp,eax
10000037:	e8 fc ff ff ff       	call   10000038 <start(void*)+0x38>	10000038: R_386_PC32	malloc
1000003c:	59                   	pop    ecx
1000003d:	89 c6                	mov    esi,eax
1000003f:	58                   	pop    eax
10000040:	6a 20                	push   0x20
10000042:	55                   	push   ebp
10000043:	57                   	push   edi
10000044:	53                   	push   ebx
10000045:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000047: R_386_32	screen
1000004b:	56                   	push   esi
1000004c:	e8 fc ff ff ff       	call   1000004d <start(void*)+0x4d>	1000004d: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000051:	83 c4 14             	add    esp,0x14
10000054:	6a 14                	push   0x14
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	malloc
1000005b:	89 c3                	mov    ebx,eax
1000005d:	58                   	pop    eax
1000005e:	5a                   	pop    edx
1000005f:	56                   	push   esi
10000060:	53                   	push   ebx
10000061:	e8 fc ff ff ff       	call   10000062 <start(void*)+0x62>	10000062: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000066:	c7 04 24 24 00 00 00 	mov    DWORD PTR [esp],0x24
1000006d:	e8 fc ff ff ff       	call   1000006e <start(void*)+0x6e>	1000006e: R_386_PC32	malloc
10000072:	59                   	pop    ecx
10000073:	5f                   	pop    edi
10000074:	68 40 01 00 00       	push   0x140
10000079:	68 90 01 00 00       	push   0x190
1000007e:	6a 32                	push   0x32
10000080:	6a 32                	push   0x32
10000082:	56                   	push   esi
10000083:	50                   	push   eax
10000084:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000088:	e8 fc ff ff ff       	call   10000089 <start(void*)+0x89>	10000089: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000008d:	83 c4 14             	add    esp,0x14
10000090:	6a 24                	push   0x24
10000092:	e8 fc ff ff ff       	call   10000093 <start(void*)+0x93>	10000093: R_386_PC32	malloc
10000097:	89 c5                	mov    ebp,eax
10000099:	58                   	pop    eax
1000009a:	5a                   	pop    edx
1000009b:	68 7c 01 00 00       	push   0x17c
100000a0:	68 f4 01 00 00       	push   0x1f4
100000a5:	68 96 00 00 00       	push   0x96
100000aa:	68 c8 00 00 00       	push   0xc8
100000af:	56                   	push   esi
100000b0:	55                   	push   ebp
100000b1:	e8 fc ff ff ff       	call   100000b2 <start(void*)+0xb2>	100000b2: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000b6:	83 c4 14             	add    esp,0x14
100000b9:	6a 24                	push   0x24
100000bb:	e8 fc ff ff ff       	call   100000bc <start(void*)+0xbc>	100000bc: R_386_PC32	malloc
100000c0:	59                   	pop    ecx
100000c1:	89 c7                	mov    edi,eax
100000c3:	58                   	pop    eax
100000c4:	68 af 00 00 00       	push   0xaf
100000c9:	68 0e 01 00 00       	push   0x10e
100000ce:	68 90 01 00 00       	push   0x190
100000d3:	6a 7d                	push   0x7d
100000d5:	56                   	push   esi
100000d6:	57                   	push   edi
100000d7:	e8 fc ff ff ff       	call   100000d8 <start(void*)+0xd8>	100000d8: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000dc:	83 c4 18             	add    esp,0x18
100000df:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100000e3:	52                   	push   edx
100000e4:	53                   	push   ebx
100000e5:	e8 fc ff ff ff       	call   100000e6 <start(void*)+0xe6>	100000e6: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100000ea:	58                   	pop    eax
100000eb:	5a                   	pop    edx
100000ec:	55                   	push   ebp
100000ed:	53                   	push   ebx
100000ee:	e8 fc ff ff ff       	call   100000ef <start(void*)+0xef>	100000ef: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100000f3:	59                   	pop    ecx
100000f4:	5e                   	pop    esi
100000f5:	57                   	push   edi
100000f6:	53                   	push   ebx
100000f7:	e8 fc ff ff ff       	call   100000f8 <start(void*)+0xf8>	100000f8: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100000fc:	89 1c 24             	mov    DWORD PTR [esp],ebx
100000ff:	e8 fc ff ff ff       	call   10000100 <start(void*)+0x100>	10000100: R_386_PC32	NIDesktop::completeRefresh()
10000104:	83 c4 10             	add    esp,0x10
10000107:	83 ec 0c             	sub    esp,0xc
1000010a:	6a 02                	push   0x2
1000010c:	e8 fc ff ff ff       	call   1000010d <start(void*)+0x10d>	1000010d: R_386_PC32	blockTask(TaskState)
10000111:	eb f1                	jmp    10000104 <start(void*)+0x104>
10000113:	90                   	nop

10000114 <begin(void*)>:
10000114:	83 ec 18             	sub    esp,0x18
10000117:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000011b:	e8 fc ff ff ff       	call   1000011c <begin(void*)+0x8>	1000011c: R_386_PC32	start(void*)

10000120 <_ssfn__bitreverse16>:
10000120:	89 c2                	mov    edx,eax
10000122:	01 c0                	add    eax,eax
10000124:	d1 fa                	sar    edx,1
10000126:	25 aa aa 00 00       	and    eax,0xaaaa
1000012b:	81 e2 55 55 00 00    	and    edx,0x5555
10000131:	09 c2                	or     edx,eax
10000133:	89 d0                	mov    eax,edx
10000135:	c1 e2 02             	shl    edx,0x2
10000138:	c1 f8 02             	sar    eax,0x2
1000013b:	81 e2 cc cc 00 00    	and    edx,0xcccc
10000141:	25 33 33 00 00       	and    eax,0x3333
10000146:	09 d0                	or     eax,edx
10000148:	89 c2                	mov    edx,eax
1000014a:	c1 e0 04             	shl    eax,0x4
1000014d:	c1 fa 04             	sar    edx,0x4
10000150:	25 f0 f0 00 00       	and    eax,0xf0f0
10000155:	81 e2 0f 0f 00 00    	and    edx,0xf0f
1000015b:	09 c2                	or     edx,eax
1000015d:	89 d1                	mov    ecx,edx
1000015f:	c1 e2 08             	shl    edx,0x8
10000162:	c1 f9 08             	sar    ecx,0x8
10000165:	0f b7 c2             	movzx  eax,dx
10000168:	09 c8                	or     eax,ecx
1000016a:	c3                   	ret    

1000016b <_ssfn__zhuffman_decode>:
1000016b:	55                   	push   ebp
1000016c:	57                   	push   edi
1000016d:	56                   	push   esi
1000016e:	53                   	push   ebx
1000016f:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
10000173:	7f 1d                	jg     10000192 <_ssfn__zhuffman_decode+0x27>
10000175:	8b 18                	mov    ebx,DWORD PTR [eax]
10000177:	8d 4b 01             	lea    ecx,[ebx+0x1]
1000017a:	89 08                	mov    DWORD PTR [eax],ecx
1000017c:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000017f:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000182:	d3 e3                	shl    ebx,cl
10000184:	83 c1 08             	add    ecx,0x8
10000187:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
1000018a:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
1000018d:	83 f9 18             	cmp    ecx,0x18
10000190:	eb e1                	jmp    10000173 <_ssfn__zhuffman_decode+0x8>
10000192:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
10000195:	89 f9                	mov    ecx,edi
10000197:	81 e1 ff 01 00 00    	and    ecx,0x1ff
1000019d:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001a1:	89 cb                	mov    ebx,ecx
100001a3:	85 c9                	test   ecx,ecx
100001a5:	74 15                	je     100001bc <_ssfn__zhuffman_decode+0x51>
100001a7:	c1 f9 09             	sar    ecx,0x9
100001aa:	89 da                	mov    edx,ebx
100001ac:	d3 ef                	shr    edi,cl
100001ae:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001b1:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001b4:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001ba:	eb 58                	jmp    10000214 <_ssfn__zhuffman_decode+0xa9>
100001bc:	89 d5                	mov    ebp,edx
100001be:	89 c3                	mov    ebx,eax
100001c0:	be 0a 00 00 00       	mov    esi,0xa
100001c5:	89 f8                	mov    eax,edi
100001c7:	e8 54 ff ff ff       	call   10000120 <_ssfn__bitreverse16>
100001cc:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
100001d3:	7c 03                	jl     100001d8 <_ssfn__zhuffman_decode+0x6d>
100001d5:	46                   	inc    esi
100001d6:	eb f4                	jmp    100001cc <_ssfn__zhuffman_decode+0x61>
100001d8:	83 ca ff             	or     edx,0xffffffff
100001db:	83 fe 10             	cmp    esi,0x10
100001de:	74 34                	je     10000214 <_ssfn__zhuffman_decode+0xa9>
100001e0:	8d 14 36             	lea    edx,[esi+esi*1]
100001e3:	b9 10 00 00 00       	mov    ecx,0x10
100001e8:	01 ea                	add    edx,ebp
100001ea:	29 f1                	sub    ecx,esi
100001ec:	d3 f8                	sar    eax,cl
100001ee:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
100001f5:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
100001fc:	29 c8                	sub    eax,ecx
100001fe:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
10000201:	89 f1                	mov    ecx,esi
10000203:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
1000020a:	d3 ef                	shr    edi,cl
1000020c:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000020f:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000214:	5b                   	pop    ebx
10000215:	89 d0                	mov    eax,edx
10000217:	5e                   	pop    esi
10000218:	5f                   	pop    edi
10000219:	5d                   	pop    ebp
1000021a:	c3                   	ret    

1000021b <_ssfn__zexpand>:
1000021b:	55                   	push   ebp
1000021c:	57                   	push   edi
1000021d:	56                   	push   esi
1000021e:	53                   	push   ebx
1000021f:	83 ec 0c             	sub    esp,0xc
10000222:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000225:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000228:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
1000022b:	29 f9                	sub    ecx,edi
1000022d:	83 f9 08             	cmp    ecx,0x8
10000230:	74 04                	je     10000236 <_ssfn__zexpand+0x1b>
10000232:	31 c0                	xor    eax,eax
10000234:	eb 3c                	jmp    10000272 <_ssfn__zexpand+0x57>
10000236:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000239:	75 f7                	jne    10000232 <_ssfn__zexpand+0x17>
1000023b:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000023f:	75 f1                	jne    10000232 <_ssfn__zexpand+0x17>
10000241:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000245:	75 eb                	jne    10000232 <_ssfn__zexpand+0x17>
10000247:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
1000024a:	89 c3                	mov    ebx,eax
1000024c:	89 d6                	mov    esi,edx
1000024e:	50                   	push   eax
1000024f:	50                   	push   eax
10000250:	55                   	push   ebp
10000251:	57                   	push   edi
10000252:	e8 fc ff ff ff       	call   10000253 <_ssfn__zexpand+0x38>	10000253: R_386_PC32	realloc
10000257:	83 c4 10             	add    esp,0x10
1000025a:	85 c0                	test   eax,eax
1000025c:	74 d4                	je     10000232 <_ssfn__zexpand+0x17>
1000025e:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10000261:	29 fe                	sub    esi,edi
10000263:	01 c6                	add    esi,eax
10000265:	01 e8                	add    eax,ebp
10000267:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
1000026a:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000026d:	b8 01 00 00 00       	mov    eax,0x1
10000272:	83 c4 0c             	add    esp,0xc
10000275:	5b                   	pop    ebx
10000276:	5e                   	pop    esi
10000277:	5f                   	pop    edi
10000278:	5d                   	pop    ebp
10000279:	c3                   	ret    

1000027a <_ssfn__zbuild_huffman>:
1000027a:	55                   	push   ebp
1000027b:	57                   	push   edi
1000027c:	56                   	push   esi
1000027d:	53                   	push   ebx
1000027e:	89 c3                	mov    ebx,eax
10000280:	81 ec a0 00 00 00    	sub    esp,0xa0
10000286:	31 c0                	xor    eax,eax
10000288:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000028b:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
1000028f:	b9 11 00 00 00       	mov    ecx,0x11
10000294:	89 ef                	mov    edi,ebp
10000296:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
1000029a:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000029c:	b9 00 01 00 00       	mov    ecx,0x100
100002a1:	89 df                	mov    edi,ebx
100002a3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002a5:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002a8:	7d 0f                	jge    100002b9 <_ssfn__zbuild_huffman+0x3f>
100002aa:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002ae:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002b2:	40                   	inc    eax
100002b3:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002b7:	eb ec                	jmp    100002a5 <_ssfn__zbuild_huffman+0x2b>
100002b9:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002c1:	b9 01 00 00 00       	mov    ecx,0x1
100002c6:	b8 01 00 00 00       	mov    eax,0x1
100002cb:	89 c7                	mov    edi,eax
100002cd:	d3 e7                	shl    edi,cl
100002cf:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
100002d3:	0f 8f 10 01 00 00    	jg     100003e9 <_ssfn__zbuild_huffman+0x16f>
100002d9:	41                   	inc    ecx
100002da:	83 f9 10             	cmp    ecx,0x10
100002dd:	75 ec                	jne    100002cb <_ssfn__zbuild_huffman+0x51>
100002df:	31 ff                	xor    edi,edi
100002e1:	31 f6                	xor    esi,esi
100002e3:	b8 01 00 00 00       	mov    eax,0x1
100002e8:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
100002ec:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
100002f0:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
100002f8:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
10000300:	01 ef                	add    edi,ebp
10000302:	85 ed                	test   ebp,ebp
10000304:	74 11                	je     10000317 <_ssfn__zbuild_huffman+0x9d>
10000306:	ba 01 00 00 00       	mov    edx,0x1
1000030b:	88 c1                	mov    cl,al
1000030d:	d3 e2                	shl    edx,cl
1000030f:	39 fa                	cmp    edx,edi
10000311:	0f 8c d2 00 00 00    	jl     100003e9 <_ssfn__zbuild_huffman+0x16f>
10000317:	89 fa                	mov    edx,edi
10000319:	b9 10 00 00 00       	mov    ecx,0x10
1000031e:	01 ff                	add    edi,edi
10000320:	29 c1                	sub    ecx,eax
10000322:	01 ee                	add    esi,ebp
10000324:	d3 e2                	shl    edx,cl
10000326:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
1000032d:	40                   	inc    eax
1000032e:	83 f8 10             	cmp    eax,0x10
10000331:	75 b5                	jne    100002e8 <_ssfn__zbuild_huffman+0x6e>
10000333:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000336:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
10000340:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000344:	31 ff                	xor    edi,edi
10000346:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
1000034a:	0f 8d 9d 00 00 00    	jge    100003ed <_ssfn__zbuild_huffman+0x173>
10000350:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000354:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000358:	89 f2                	mov    edx,esi
1000035a:	85 f6                	test   esi,esi
1000035c:	0f 84 81 00 00 00    	je     100003e3 <_ssfn__zbuild_huffman+0x169>
10000362:	8d 0c 36             	lea    ecx,[esi+esi*1]
10000365:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
10000369:	8d 04 19             	lea    eax,[ecx+ebx*1]
1000036c:	89 e9                	mov    ecx,ebp
1000036e:	89 04 24             	mov    DWORD PTR [esp],eax
10000371:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
10000378:	29 c1                	sub    ecx,eax
1000037a:	89 c8                	mov    eax,ecx
1000037c:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000037f:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
10000386:	01 c8                	add    eax,ecx
10000388:	83 fe 09             	cmp    esi,0x9
1000038b:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
10000392:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
1000039a:	7f 42                	jg     100003de <_ssfn__zbuild_huffman+0x164>
1000039c:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003a0:	89 e8                	mov    eax,ebp
100003a2:	e8 79 fd ff ff       	call   10000120 <_ssfn__bitreverse16>
100003a7:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003ab:	b9 10 00 00 00       	mov    ecx,0x10
100003b0:	29 f1                	sub    ecx,esi
100003b2:	d3 f8                	sar    eax,cl
100003b4:	88 d1                	mov    cl,dl
100003b6:	89 04 24             	mov    DWORD PTR [esp],eax
100003b9:	89 f2                	mov    edx,esi
100003bb:	b8 01 00 00 00       	mov    eax,0x1
100003c0:	c1 e2 09             	shl    edx,0x9
100003c3:	d3 e0                	shl    eax,cl
100003c5:	09 fa                	or     edx,edi
100003c7:	89 c1                	mov    ecx,eax
100003c9:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
100003d0:	7f 0c                	jg     100003de <_ssfn__zbuild_huffman+0x164>
100003d2:	8b 04 24             	mov    eax,DWORD PTR [esp]
100003d5:	01 0c 24             	add    DWORD PTR [esp],ecx
100003d8:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
100003dc:	eb eb                	jmp    100003c9 <_ssfn__zbuild_huffman+0x14f>
100003de:	45                   	inc    ebp
100003df:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
100003e3:	47                   	inc    edi
100003e4:	e9 5d ff ff ff       	jmp    10000346 <_ssfn__zbuild_huffman+0xcc>
100003e9:	31 c0                	xor    eax,eax
100003eb:	eb 05                	jmp    100003f2 <_ssfn__zbuild_huffman+0x178>
100003ed:	b8 01 00 00 00       	mov    eax,0x1
100003f2:	81 c4 a0 00 00 00    	add    esp,0xa0
100003f8:	5b                   	pop    ebx
100003f9:	5e                   	pop    esi
100003fa:	5f                   	pop    edi
100003fb:	5d                   	pop    ebp
100003fc:	c3                   	ret    

100003fd <_ssfn_fc.part.1>:
100003fd:	55                   	push   ebp
100003fe:	57                   	push   edi
100003ff:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000405:	56                   	push   esi
10000406:	53                   	push   ebx
10000407:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
1000040d:	83 ec 0c             	sub    esp,0xc
10000410:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10000413:	74 5d                	je     10000472 <_ssfn_fc.part.1+0x75>
10000415:	31 f6                	xor    esi,esi
10000417:	8b 03                	mov    eax,DWORD PTR [ebx]
10000419:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
1000041d:	74 35                	je     10000454 <_ssfn_fc.part.1+0x57>
1000041f:	31 ed                	xor    ebp,ebp
10000421:	8b 03                	mov    eax,DWORD PTR [ebx]
10000423:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000426:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000429:	85 c0                	test   eax,eax
1000042b:	74 0c                	je     10000439 <_ssfn_fc.part.1+0x3c>
1000042d:	83 ec 0c             	sub    esp,0xc
10000430:	50                   	push   eax
10000431:	e8 fc ff ff ff       	call   10000432 <_ssfn_fc.part.1+0x35>	10000432: R_386_PC32	free
10000436:	83 c4 10             	add    esp,0x10
10000439:	83 c5 04             	add    ebp,0x4
1000043c:	81 fd 00 04 00 00    	cmp    ebp,0x400
10000442:	75 dd                	jne    10000421 <_ssfn_fc.part.1+0x24>
10000444:	83 ec 0c             	sub    esp,0xc
10000447:	8b 03                	mov    eax,DWORD PTR [ebx]
10000449:	ff 34 30             	push   DWORD PTR [eax+esi*1]
1000044c:	e8 fc ff ff ff       	call   1000044d <_ssfn_fc.part.1+0x50>	1000044d: R_386_PC32	free
10000451:	83 c4 10             	add    esp,0x10
10000454:	83 c6 04             	add    esi,0x4
10000457:	81 fe 00 04 00 00    	cmp    esi,0x400
1000045d:	75 b8                	jne    10000417 <_ssfn_fc.part.1+0x1a>
1000045f:	83 ec 0c             	sub    esp,0xc
10000462:	ff 33                	push   DWORD PTR [ebx]
10000464:	e8 fc ff ff ff       	call   10000465 <_ssfn_fc.part.1+0x68>	10000465: R_386_PC32	free
10000469:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
1000046f:	83 c4 10             	add    esp,0x10
10000472:	83 c3 04             	add    ebx,0x4
10000475:	39 fb                	cmp    ebx,edi
10000477:	75 97                	jne    10000410 <_ssfn_fc.part.1+0x13>
10000479:	83 c4 0c             	add    esp,0xc
1000047c:	5b                   	pop    ebx
1000047d:	5e                   	pop    esi
1000047e:	5f                   	pop    edi
1000047f:	5d                   	pop    ebp
10000480:	c3                   	ret    

10000481 <_ssfn_l>:
10000481:	57                   	push   edi
10000482:	56                   	push   esi
10000483:	53                   	push   ebx
10000484:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000488:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000048c:	39 ce                	cmp    esi,ecx
1000048e:	89 f3                	mov    ebx,esi
10000490:	0f 9d c1             	setge  cl
10000493:	c1 eb 1f             	shr    ebx,0x1f
10000496:	09 d9                	or     ecx,ebx
10000498:	89 fb                	mov    ebx,edi
1000049a:	c1 eb 1f             	shr    ebx,0x1f
1000049d:	08 d9                	or     cl,bl
1000049f:	0f 85 e9 00 00 00    	jne    1000058e <_ssfn_l+0x10d>
100004a5:	39 d7                	cmp    edi,edx
100004a7:	0f 8d e1 00 00 00    	jge    1000058e <_ssfn_l+0x10d>
100004ad:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004b3:	8d 51 08             	lea    edx,[ecx+0x8]
100004b6:	8d 4f 08             	lea    ecx,[edi+0x8]
100004b9:	c1 fa 04             	sar    edx,0x4
100004bc:	c1 f9 04             	sar    ecx,0x4
100004bf:	39 ca                	cmp    edx,ecx
100004c1:	75 1a                	jne    100004dd <_ssfn_l+0x5c>
100004c3:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
100004c9:	8d 4e 08             	lea    ecx,[esi+0x8]
100004cc:	83 c2 08             	add    edx,0x8
100004cf:	c1 f9 04             	sar    ecx,0x4
100004d2:	c1 fa 04             	sar    edx,0x4
100004d5:	39 ca                	cmp    edx,ecx
100004d7:	0f 84 b1 00 00 00    	je     1000058e <_ssfn_l+0x10d>
100004dd:	89 c3                	mov    ebx,eax
100004df:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
100004e5:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
100004eb:	7f 3e                	jg     1000052b <_ssfn_l+0xaa>
100004ed:	05 00 02 00 00       	add    eax,0x200
100004f2:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
100004f8:	52                   	push   edx
100004f9:	01 c0                	add    eax,eax
100004fb:	52                   	push   edx
100004fc:	50                   	push   eax
100004fd:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
10000503:	e8 fc ff ff ff       	call   10000504 <_ssfn_l+0x83>	10000504: R_386_PC32	realloc
10000508:	83 c4 10             	add    esp,0x10
1000050b:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
10000511:	85 c0                	test   eax,eax
10000513:	75 16                	jne    1000052b <_ssfn_l+0xaa>
10000515:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000051f:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000529:	eb 63                	jmp    1000058e <_ssfn_l+0x10d>
1000052b:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
10000532:	75 26                	jne    1000055a <_ssfn_l+0xd9>
10000534:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000053a:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
10000540:	66 89 10             	mov    WORD PTR [eax],dx
10000543:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000549:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000054f:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
10000553:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
1000055a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
10000560:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000566:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
1000056a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
10000570:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000576:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
1000057b:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
10000581:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000588:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
1000058e:	5b                   	pop    ebx
1000058f:	5e                   	pop    esi
10000590:	5f                   	pop    edi
10000591:	c3                   	ret    

10000592 <_ssfn_b>:
10000592:	55                   	push   ebp
10000593:	57                   	push   edi
10000594:	56                   	push   esi
10000595:	53                   	push   ebx
10000596:	83 ec 4c             	sub    esp,0x4c
10000599:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000059d:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005a1:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005a5:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005a9:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005ad:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005b1:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005b5:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005b9:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005bd:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005c1:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100005c5:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
100005c9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100005cd:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
100005d1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100005d5:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
100005dc:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100005e0:	83 f8 04             	cmp    eax,0x4
100005e3:	75 28                	jne    1000060d <_ssfn_b+0x7b>
100005e5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100005e9:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100005ed:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100005f1:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
100005f5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100005f9:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
100005fd:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000601:	83 c4 4c             	add    esp,0x4c
10000604:	5b                   	pop    ebx
10000605:	5e                   	pop    esi
10000606:	5f                   	pop    edi
10000607:	5d                   	pop    ebp
10000608:	e9 74 fe ff ff       	jmp    10000481 <_ssfn_l>
1000060d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000611:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000615:	75 0e                	jne    10000625 <_ssfn_b+0x93>
10000617:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000061b:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000061f:	0f 84 19 01 00 00    	je     1000073e <_ssfn_b+0x1ac>
10000625:	be 02 00 00 00       	mov    esi,0x2
1000062a:	89 d8                	mov    eax,ebx
1000062c:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10000630:	99                   	cdq    
10000631:	f7 fe                	idiv   esi
10000633:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000637:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000063b:	89 e8                	mov    eax,ebp
1000063d:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000641:	99                   	cdq    
10000642:	f7 fe                	idiv   esi
10000644:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000648:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000064c:	89 f8                	mov    eax,edi
1000064e:	29 d8                	sub    eax,ebx
10000650:	99                   	cdq    
10000651:	f7 fe                	idiv   esi
10000653:	01 c3                	add    ebx,eax
10000655:	89 c8                	mov    eax,ecx
10000657:	29 e8                	sub    eax,ebp
10000659:	99                   	cdq    
1000065a:	f7 fe                	idiv   esi
1000065c:	01 e8                	add    eax,ebp
1000065e:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000662:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000666:	29 f8                	sub    eax,edi
10000668:	99                   	cdq    
10000669:	f7 fe                	idiv   esi
1000066b:	01 f8                	add    eax,edi
1000066d:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10000671:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000675:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000679:	29 c8                	sub    eax,ecx
1000067b:	99                   	cdq    
1000067c:	f7 fe                	idiv   esi
1000067e:	01 c8                	add    eax,ecx
10000680:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10000684:	89 d8                	mov    eax,ebx
10000686:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
1000068a:	99                   	cdq    
1000068b:	f7 fe                	idiv   esi
1000068d:	8d 0c 38             	lea    ecx,[eax+edi*1]
10000690:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000694:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000698:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000069c:	99                   	cdq    
1000069d:	f7 fe                	idiv   esi
1000069f:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006a2:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006a6:	29 d8                	sub    eax,ebx
100006a8:	99                   	cdq    
100006a9:	f7 fe                	idiv   esi
100006ab:	83 ec 0c             	sub    esp,0xc
100006ae:	01 d8                	add    eax,ebx
100006b0:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006b4:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006b8:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006bc:	99                   	cdq    
100006bd:	f7 fe                	idiv   esi
100006bf:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006c3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100006c7:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100006cb:	29 c8                	sub    eax,ecx
100006cd:	99                   	cdq    
100006ce:	f7 fe                	idiv   esi
100006d0:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100006d3:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100006d7:	29 e8                	sub    eax,ebp
100006d9:	99                   	cdq    
100006da:	f7 fe                	idiv   esi
100006dc:	8d 34 28             	lea    esi,[eax+ebp*1]
100006df:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100006e3:	8d 78 01             	lea    edi,[eax+0x1]
100006e6:	57                   	push   edi
100006e7:	56                   	push   esi
100006e8:	53                   	push   ebx
100006e9:	55                   	push   ebp
100006ea:	51                   	push   ecx
100006eb:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
100006ef:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
100006f3:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
100006f7:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
100006fb:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100006ff:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000703:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000707:	e8 86 fe ff ff       	call   10000592 <_ssfn_b>
1000070c:	83 c4 24             	add    esp,0x24
1000070f:	57                   	push   edi
10000710:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000714:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000718:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000071c:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000720:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000724:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000728:	56                   	push   esi
10000729:	53                   	push   ebx
1000072a:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000072e:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000732:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000736:	e8 57 fe ff ff       	call   10000592 <_ssfn_b>
1000073b:	83 c4 30             	add    esp,0x30
1000073e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10000743:	0f 85 9c fe ff ff    	jne    100005e5 <_ssfn_b+0x53>
10000749:	83 c4 4c             	add    esp,0x4c
1000074c:	5b                   	pop    ebx
1000074d:	5e                   	pop    esi
1000074e:	5f                   	pop    edi
1000074f:	5d                   	pop    ebp
10000750:	c3                   	ret    

10000751 <_ssfn__zreceive>:
10000751:	56                   	push   esi
10000752:	53                   	push   ebx
10000753:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000756:	7d 1d                	jge    10000775 <_ssfn__zreceive+0x24>
10000758:	8b 18                	mov    ebx,DWORD PTR [eax]
1000075a:	8d 4b 01             	lea    ecx,[ebx+0x1]
1000075d:	89 08                	mov    DWORD PTR [eax],ecx
1000075f:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
10000762:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000765:	d3 e3                	shl    ebx,cl
10000767:	83 c1 08             	add    ecx,0x8
1000076a:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
1000076d:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
10000770:	83 f9 18             	cmp    ecx,0x18
10000773:	7e e3                	jle    10000758 <_ssfn__zreceive+0x7>
10000775:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10000778:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
1000077b:	89 f3                	mov    ebx,esi
1000077d:	88 d1                	mov    cl,dl
1000077f:	d3 eb                	shr    ebx,cl
10000781:	88 d1                	mov    cl,dl
10000783:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10000786:	bb 01 00 00 00       	mov    ebx,0x1
1000078b:	d3 e3                	shl    ebx,cl
1000078d:	8d 43 ff             	lea    eax,[ebx-0x1]
10000790:	5b                   	pop    ebx
10000791:	21 f0                	and    eax,esi
10000793:	5e                   	pop    esi
10000794:	c3                   	ret    

10000795 <ssfn_utf8>:
10000795:	56                   	push   esi
10000796:	53                   	push   ebx
10000797:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000079b:	8b 11                	mov    edx,DWORD PTR [ecx]
1000079d:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007a0:	89 f0                	mov    eax,esi
100007a2:	84 c0                	test   al,al
100007a4:	0f be d8             	movsx  ebx,al
100007a7:	78 04                	js     100007ad <ssfn_utf8+0x18>
100007a9:	89 d8                	mov    eax,ebx
100007ab:	eb 7d                	jmp    1000082a <ssfn_utf8+0x95>
100007ad:	f7 c6 20 00 00 00    	test   esi,0x20
100007b3:	75 14                	jne    100007c9 <ssfn_utf8+0x34>
100007b5:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007b8:	c1 e3 06             	shl    ebx,0x6
100007bb:	83 e0 3f             	and    eax,0x3f
100007be:	81 e3 c0 07 00 00    	and    ebx,0x7c0
100007c4:	42                   	inc    edx
100007c5:	09 d8                	or     eax,ebx
100007c7:	eb 5f                	jmp    10000828 <ssfn_utf8+0x93>
100007c9:	f7 c6 10 00 00 00    	test   esi,0x10
100007cf:	75 20                	jne    100007f1 <ssfn_utf8+0x5c>
100007d1:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
100007d5:	c1 e3 0c             	shl    ebx,0xc
100007d8:	c1 e0 06             	shl    eax,0x6
100007db:	0f b7 db             	movzx  ebx,bx
100007de:	25 c0 0f 00 00       	and    eax,0xfc0
100007e3:	83 c2 02             	add    edx,0x2
100007e6:	09 d8                	or     eax,ebx
100007e8:	8a 1a                	mov    bl,BYTE PTR [edx]
100007ea:	83 e3 3f             	and    ebx,0x3f
100007ed:	09 d8                	or     eax,ebx
100007ef:	eb 37                	jmp    10000828 <ssfn_utf8+0x93>
100007f1:	31 c0                	xor    eax,eax
100007f3:	83 e6 08             	and    esi,0x8
100007f6:	75 32                	jne    1000082a <ssfn_utf8+0x95>
100007f8:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
100007fc:	c1 e3 12             	shl    ebx,0x12
100007ff:	c1 e0 0c             	shl    eax,0xc
10000802:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000808:	25 00 f0 03 00       	and    eax,0x3f000
1000080d:	83 c2 03             	add    edx,0x3
10000810:	09 d8                	or     eax,ebx
10000812:	8a 1a                	mov    bl,BYTE PTR [edx]
10000814:	83 e3 3f             	and    ebx,0x3f
10000817:	09 d8                	or     eax,ebx
10000819:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
1000081d:	c1 e3 06             	shl    ebx,0x6
10000820:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000826:	09 d8                	or     eax,ebx
10000828:	89 11                	mov    DWORD PTR [ecx],edx
1000082a:	ff 01                	inc    DWORD PTR [ecx]
1000082c:	5b                   	pop    ebx
1000082d:	5e                   	pop    esi
1000082e:	c3                   	ret    

1000082f <_ssfn_c>:
1000082f:	55                   	push   ebp
10000830:	57                   	push   edi
10000831:	56                   	push   esi
10000832:	53                   	push   ebx
10000833:	83 ec 14             	sub    esp,0x14
10000836:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
1000083c:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000840:	85 c0                	test   eax,eax
10000842:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000848:	0f 84 e6 00 00 00    	je     10000934 <_ssfn_c+0x105>
1000084e:	31 ff                	xor    edi,edi
10000850:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000854:	0f 84 f3 00 00 00    	je     1000094d <_ssfn_c+0x11e>
1000085a:	85 d2                	test   edx,edx
1000085c:	0f 84 eb 00 00 00    	je     1000094d <_ssfn_c+0x11e>
10000862:	80 3a 00             	cmp    BYTE PTR [edx],0x0
10000865:	0f 84 e2 00 00 00    	je     1000094d <_ssfn_c+0x11e>
1000086b:	89 d6                	mov    esi,edx
1000086d:	89 cd                	mov    ebp,ecx
1000086f:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10000872:	89 c3                	mov    ebx,eax
10000874:	85 d2                	test   edx,edx
10000876:	74 38                	je     100008b0 <_ssfn_c+0x81>
10000878:	8d 0c 13             	lea    ecx,[ebx+edx*1]
1000087b:	31 c0                	xor    eax,eax
1000087d:	89 0c 24             	mov    DWORD PTR [esp],ecx
10000880:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10000883:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
10000887:	66 85 d2             	test   dx,dx
1000088a:	74 24                	je     100008b0 <_ssfn_c+0x81>
1000088c:	01 da                	add    edx,ebx
1000088e:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000892:	8a 0a                	mov    cl,BYTE PTR [edx]
10000894:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000898:	84 c9                	test   cl,cl
1000089a:	0f 84 9e 00 00 00    	je     1000093e <_ssfn_c+0x10f>
100008a0:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008a2:	0f 85 90 00 00 00    	jne    10000938 <_ssfn_c+0x109>
100008a8:	47                   	inc    edi
100008a9:	42                   	inc    edx
100008aa:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008ae:	eb e2                	jmp    10000892 <_ssfn_c+0x63>
100008b0:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008b4:	8d 44 24 10          	lea    eax,[esp+0x10]
100008b8:	50                   	push   eax
100008b9:	e8 fc ff ff ff       	call   100008ba <_ssfn_c+0x8b>	100008ba: R_386_PC32	ssfn_utf8
100008be:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008c2:	29 f2                	sub    edx,esi
100008c4:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
100008c7:	5a                   	pop    edx
100008c8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008cc:	89 06                	mov    DWORD PTR [esi],eax
100008ce:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
100008d1:	89 df                	mov    edi,ebx
100008d3:	31 db                	xor    ebx,ebx
100008d5:	8a 17                	mov    dl,BYTE PTR [edi]
100008d7:	80 fa ff             	cmp    dl,0xff
100008da:	75 08                	jne    100008e4 <_ssfn_c+0xb5>
100008dc:	81 c3 ff ff 00 00    	add    ebx,0xffff
100008e2:	eb 2a                	jmp    1000090e <_ssfn_c+0xdf>
100008e4:	88 d1                	mov    cl,dl
100008e6:	83 e1 c0             	and    ecx,0xffffffc0
100008e9:	80 f9 c0             	cmp    cl,0xc0
100008ec:	75 16                	jne    10000904 <_ssfn_c+0xd5>
100008ee:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
100008f2:	c1 e2 08             	shl    edx,0x8
100008f5:	83 c7 02             	add    edi,0x2
100008f8:	81 e2 00 3f 00 00    	and    edx,0x3f00
100008fe:	09 ca                	or     edx,ecx
10000900:	01 d3                	add    ebx,edx
10000902:	eb 27                	jmp    1000092b <_ssfn_c+0xfc>
10000904:	80 f9 80             	cmp    cl,0x80
10000907:	75 08                	jne    10000911 <_ssfn_c+0xe2>
10000909:	83 e2 3f             	and    edx,0x3f
1000090c:	01 d3                	add    ebx,edx
1000090e:	47                   	inc    edi
1000090f:	eb 1a                	jmp    1000092b <_ssfn_c+0xfc>
10000911:	39 d8                	cmp    eax,ebx
10000913:	74 38                	je     1000094d <_ssfn_c+0x11e>
10000915:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000919:	83 e2 40             	and    edx,0x40
1000091c:	80 fa 01             	cmp    dl,0x1
1000091f:	19 d2                	sbb    edx,edx
10000921:	83 c2 06             	add    edx,0x6
10000924:	0f af d1             	imul   edx,ecx
10000927:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
1000092b:	43                   	inc    ebx
1000092c:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
10000932:	76 a1                	jbe    100008d5 <_ssfn_c+0xa6>
10000934:	31 ff                	xor    edi,edi
10000936:	eb 15                	jmp    1000094d <_ssfn_c+0x11e>
10000938:	40                   	inc    eax
10000939:	e9 42 ff ff ff       	jmp    10000880 <_ssfn_c+0x51>
1000093e:	29 f7                	sub    edi,esi
10000940:	05 00 f0 00 00       	add    eax,0xf000
10000945:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000948:	e9 7b ff ff ff       	jmp    100008c8 <_ssfn_c+0x99>
1000094d:	83 c4 14             	add    esp,0x14
10000950:	89 f8                	mov    eax,edi
10000952:	5b                   	pop    ebx
10000953:	5e                   	pop    esi
10000954:	5f                   	pop    edi
10000955:	5d                   	pop    ebp
10000956:	c3                   	ret    

10000957 <_ssfn_zlib_decode>:
10000957:	55                   	push   ebp
10000958:	57                   	push   edi
10000959:	56                   	push   esi
1000095a:	53                   	push   ebx
1000095b:	81 ec c8 19 00 00    	sub    esp,0x19c8
10000961:	6a 08                	push   0x8
10000963:	e8 fc ff ff ff       	call   10000964 <_ssfn_zlib_decode+0xd>	10000964: R_386_PC32	malloc
10000968:	83 c4 10             	add    esp,0x10
1000096b:	89 c2                	mov    edx,eax
1000096d:	85 c0                	test   eax,eax
1000096f:	0f 84 eb 04 00 00    	je     10000e60 <_ssfn_zlib_decode+0x509>
10000975:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
1000097c:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
10000983:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
1000098a:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
10000991:	31 c0                	xor    eax,eax
10000993:	83 c2 08             	add    edx,0x8
10000996:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
1000099d:	c6 80 20 43 01 10 08 	mov    BYTE PTR [eax+0x10014320],0x8	1000099f: R_386_32	.bss
100009a4:	40                   	inc    eax
100009a5:	3d 90 00 00 00       	cmp    eax,0x90
100009aa:	75 f1                	jne    1000099d <_ssfn_zlib_decode+0x46>
100009ac:	c6 80 20 43 01 10 09 	mov    BYTE PTR [eax+0x10014320],0x9	100009ae: R_386_32	.bss
100009b3:	40                   	inc    eax
100009b4:	3d 00 01 00 00       	cmp    eax,0x100
100009b9:	75 f1                	jne    100009ac <_ssfn_zlib_decode+0x55>
100009bb:	c6 80 20 43 01 10 07 	mov    BYTE PTR [eax+0x10014320],0x7	100009bd: R_386_32	.bss
100009c2:	40                   	inc    eax
100009c3:	3d 18 01 00 00       	cmp    eax,0x118
100009c8:	75 f1                	jne    100009bb <_ssfn_zlib_decode+0x64>
100009ca:	c7 05 38 44 01 10 08 08 08 08 	mov    DWORD PTR ds:0x10014438,0x8080808	100009cc: R_386_32	.bss
100009d4:	c7 05 3c 44 01 10 08 08 08 08 	mov    DWORD PTR ds:0x1001443c,0x8080808	100009d6: R_386_32	.bss
100009de:	31 c0                	xor    eax,eax
100009e0:	c6 80 00 43 01 10 05 	mov    BYTE PTR [eax+0x10014300],0x5	100009e2: R_386_32	.bss
100009e7:	40                   	inc    eax
100009e8:	83 f8 20             	cmp    eax,0x20
100009eb:	75 f3                	jne    100009e0 <_ssfn_zlib_decode+0x89>
100009ed:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
100009f8:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a03:	ba 01 00 00 00       	mov    edx,0x1
10000a08:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a0f:	e8 3d fd ff ff       	call   10000751 <_ssfn__zreceive>
10000a14:	ba 02 00 00 00       	mov    edx,0x2
10000a19:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a1d:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a24:	e8 28 fd ff ff       	call   10000751 <_ssfn__zreceive>
10000a29:	89 c6                	mov    esi,eax
10000a2b:	85 c0                	test   eax,eax
10000a2d:	0f 85 09 01 00 00    	jne    10000b3c <_ssfn_zlib_decode+0x1e5>
10000a33:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a3a:	83 e2 07             	and    edx,0x7
10000a3d:	74 0c                	je     10000a4b <_ssfn_zlib_decode+0xf4>
10000a3f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a46:	e8 06 fd ff ff       	call   10000751 <_ssfn__zreceive>
10000a4b:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a52:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a59:	31 c0                	xor    eax,eax
10000a5b:	31 db                	xor    ebx,ebx
10000a5d:	85 d2                	test   edx,edx
10000a5f:	7f 14                	jg     10000a75 <_ssfn_zlib_decode+0x11e>
10000a61:	84 db                	test   bl,bl
10000a63:	74 22                	je     10000a87 <_ssfn_zlib_decode+0x130>
10000a65:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000a6c:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000a73:	eb 12                	jmp    10000a87 <_ssfn_zlib_decode+0x130>
10000a75:	40                   	inc    eax
10000a76:	83 ea 08             	sub    edx,0x8
10000a79:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000a80:	b3 01                	mov    bl,0x1
10000a82:	c1 e9 08             	shr    ecx,0x8
10000a85:	eb d6                	jmp    10000a5d <_ssfn_zlib_decode+0x106>
10000a87:	83 f8 04             	cmp    eax,0x4
10000a8a:	74 1d                	je     10000aa9 <_ssfn_zlib_decode+0x152>
10000a8c:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000a93:	40                   	inc    eax
10000a94:	8d 4a 01             	lea    ecx,[edx+0x1]
10000a97:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000a9e:	8a 12                	mov    dl,BYTE PTR [edx]
10000aa0:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000aa7:	eb de                	jmp    10000a87 <_ssfn_zlib_decode+0x130>
10000aa9:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000ab1:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000ab9:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000ac1:	c1 e3 08             	shl    ebx,0x8
10000ac4:	01 c3                	add    ebx,eax
10000ac6:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000ace:	c1 e0 08             	shl    eax,0x8
10000ad1:	01 d0                	add    eax,edx
10000ad3:	89 da                	mov    edx,ebx
10000ad5:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000adb:	39 d0                	cmp    eax,edx
10000add:	0f 85 69 03 00 00    	jne    10000e4c <_ssfn_zlib_decode+0x4f5>
10000ae3:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000aea:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000aed:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000af4:	73 14                	jae    10000b0a <_ssfn_zlib_decode+0x1b3>
10000af6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000afd:	e8 19 f7 ff ff       	call   1000021b <_ssfn__zexpand>
10000b02:	85 c0                	test   eax,eax
10000b04:	0f 84 42 03 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000b0a:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b11:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b18:	39 f3                	cmp    ebx,esi
10000b1a:	74 09                	je     10000b25 <_ssfn_zlib_decode+0x1ce>
10000b1c:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b1f:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b22:	46                   	inc    esi
10000b23:	eb e5                	jmp    10000b0a <_ssfn_zlib_decode+0x1b3>
10000b25:	01 da                	add    edx,ebx
10000b27:	01 c3                	add    ebx,eax
10000b29:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b30:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b37:	e9 fc 02 00 00       	jmp    10000e38 <_ssfn_zlib_decode+0x4e1>
10000b3c:	83 f8 03             	cmp    eax,0x3
10000b3f:	0f 84 07 03 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000b45:	4e                   	dec    esi
10000b46:	75 2d                	jne    10000b75 <_ssfn_zlib_decode+0x21e>
10000b48:	b9 20 01 00 00       	mov    ecx,0x120
10000b4d:	ba 20 43 01 10       	mov    edx,0x10014320	10000b4e: R_386_32	.bss
10000b52:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b59:	e8 1c f7 ff ff       	call   1000027a <_ssfn__zbuild_huffman>
10000b5e:	85 c0                	test   eax,eax
10000b60:	0f 84 e6 02 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000b66:	b9 20 00 00 00       	mov    ecx,0x20
10000b6b:	ba 00 43 01 10       	mov    edx,0x10014300	10000b6c: R_386_32	.bss
10000b70:	e9 78 01 00 00       	jmp    10000ced <_ssfn_zlib_decode+0x396>
10000b75:	ba 05 00 00 00       	mov    edx,0x5
10000b7a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b81:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000b85:	e8 c7 fb ff ff       	call   10000751 <_ssfn__zreceive>
10000b8a:	89 df                	mov    edi,ebx
10000b8c:	ba 05 00 00 00       	mov    edx,0x5
10000b91:	89 c5                	mov    ebp,eax
10000b93:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b9a:	e8 b2 fb ff ff       	call   10000751 <_ssfn__zreceive>
10000b9f:	ba 04 00 00 00       	mov    edx,0x4
10000ba4:	89 c6                	mov    esi,eax
10000ba6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bad:	e8 9f fb ff ff       	call   10000751 <_ssfn__zreceive>
10000bb2:	b9 13 00 00 00       	mov    ecx,0x13
10000bb7:	83 c0 04             	add    eax,0x4
10000bba:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bbe:	31 c0                	xor    eax,eax
10000bc0:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bc2:	31 ff                	xor    edi,edi
10000bc4:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000bc8:	7e 1f                	jle    10000be9 <_ssfn_zlib_decode+0x292>
10000bca:	ba 03 00 00 00       	mov    edx,0x3
10000bcf:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bd6:	47                   	inc    edi
10000bd7:	e8 75 fb ff ff       	call   10000751 <_ssfn__zreceive>
10000bdc:	0f b6 97 bf 41 00 10 	movzx  edx,BYTE PTR [edi+0x100041bf]	10000bdf: R_386_32	.text
10000be3:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000be7:	eb db                	jmp    10000bc4 <_ssfn_zlib_decode+0x26d>
10000be9:	b9 13 00 00 00       	mov    ecx,0x13
10000bee:	89 da                	mov    edx,ebx
10000bf0:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000bf7:	e8 7e f6 ff ff       	call   1000027a <_ssfn__zbuild_huffman>
10000bfc:	85 c0                	test   eax,eax
10000bfe:	0f 84 48 02 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000c04:	8d 46 01             	lea    eax,[esi+0x1]
10000c07:	81 c5 01 01 00 00    	add    ebp,0x101
10000c0d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c11:	31 f6                	xor    esi,esi
10000c13:	01 e8                	add    eax,ebp
10000c15:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c19:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c1d:	0f 8e 9f 00 00 00    	jle    10000cc2 <_ssfn_zlib_decode+0x36b>
10000c23:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c2a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c31:	e8 35 f5 ff ff       	call   1000016b <_ssfn__zhuffman_decode>
10000c36:	83 f8 12             	cmp    eax,0x12
10000c39:	0f 87 0d 02 00 00    	ja     10000e4c <_ssfn_zlib_decode+0x4f5>
10000c3f:	83 f8 0f             	cmp    eax,0xf
10000c42:	7f 07                	jg     10000c4b <_ssfn_zlib_decode+0x2f4>
10000c44:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c48:	46                   	inc    esi
10000c49:	eb ce                	jmp    10000c19 <_ssfn_zlib_decode+0x2c2>
10000c4b:	83 f8 10             	cmp    eax,0x10
10000c4e:	75 22                	jne    10000c72 <_ssfn_zlib_decode+0x31b>
10000c50:	ba 02 00 00 00       	mov    edx,0x2
10000c55:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c5c:	e8 f0 fa ff ff       	call   10000751 <_ssfn__zreceive>
10000c61:	85 f6                	test   esi,esi
10000c63:	8d 58 03             	lea    ebx,[eax+0x3]
10000c66:	0f 84 e0 01 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000c6c:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000c70:	eb 31                	jmp    10000ca3 <_ssfn_zlib_decode+0x34c>
10000c72:	83 f8 11             	cmp    eax,0x11
10000c75:	75 16                	jne    10000c8d <_ssfn_zlib_decode+0x336>
10000c77:	ba 03 00 00 00       	mov    edx,0x3
10000c7c:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c83:	e8 c9 fa ff ff       	call   10000751 <_ssfn__zreceive>
10000c88:	8d 58 03             	lea    ebx,[eax+0x3]
10000c8b:	eb 14                	jmp    10000ca1 <_ssfn_zlib_decode+0x34a>
10000c8d:	ba 07 00 00 00       	mov    edx,0x7
10000c92:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c99:	e8 b3 fa ff ff       	call   10000751 <_ssfn__zreceive>
10000c9e:	8d 58 0b             	lea    ebx,[eax+0xb]
10000ca1:	31 c0                	xor    eax,eax
10000ca3:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000ca7:	29 f2                	sub    edx,esi
10000ca9:	39 da                	cmp    edx,ebx
10000cab:	0f 8c 9b 01 00 00    	jl     10000e4c <_ssfn_zlib_decode+0x4f5>
10000cb1:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000cb5:	89 d9                	mov    ecx,ebx
10000cb7:	89 d7                	mov    edi,edx
10000cb9:	01 de                	add    esi,ebx
10000cbb:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000cbd:	e9 57 ff ff ff       	jmp    10000c19 <_ssfn_zlib_decode+0x2c2>
10000cc2:	0f 85 84 01 00 00    	jne    10000e4c <_ssfn_zlib_decode+0x4f5>
10000cc8:	89 e9                	mov    ecx,ebp
10000cca:	8d 54 24 25          	lea    edx,[esp+0x25]
10000cce:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000cd5:	e8 a0 f5 ff ff       	call   1000027a <_ssfn__zbuild_huffman>
10000cda:	85 c0                	test   eax,eax
10000cdc:	0f 84 6a 01 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000ce2:	8d 44 24 25          	lea    eax,[esp+0x25]
10000ce6:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000cea:	8d 14 28             	lea    edx,[eax+ebp*1]
10000ced:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000cf4:	e8 81 f5 ff ff       	call   1000027a <_ssfn__zbuild_huffman>
10000cf9:	85 c0                	test   eax,eax
10000cfb:	0f 84 4b 01 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000d01:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d08:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d0f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d16:	e8 50 f4 ff ff       	call   1000016b <_ssfn__zhuffman_decode>
10000d1b:	89 c3                	mov    ebx,eax
10000d1d:	3d ff 00 00 00       	cmp    eax,0xff
10000d22:	7f 34                	jg     10000d58 <_ssfn_zlib_decode+0x401>
10000d24:	85 c0                	test   eax,eax
10000d26:	0f 88 20 01 00 00    	js     10000e4c <_ssfn_zlib_decode+0x4f5>
10000d2c:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d33:	77 1d                	ja     10000d52 <_ssfn_zlib_decode+0x3fb>
10000d35:	89 ea                	mov    edx,ebp
10000d37:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d3e:	e8 d8 f4 ff ff       	call   1000021b <_ssfn__zexpand>
10000d43:	85 c0                	test   eax,eax
10000d45:	0f 84 01 01 00 00    	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000d4b:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d52:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d55:	45                   	inc    ebp
10000d56:	eb b0                	jmp    10000d08 <_ssfn_zlib_decode+0x3b1>
10000d58:	3d 00 01 00 00       	cmp    eax,0x100
10000d5d:	75 0c                	jne    10000d6b <_ssfn_zlib_decode+0x414>
10000d5f:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000d66:	e9 cd 00 00 00       	jmp    10000e38 <_ssfn_zlib_decode+0x4e1>
10000d6b:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000d71:	8b 14 85 e0 42 00 10 	mov    edx,DWORD PTR [eax*4+0x100042e0]	10000d74: R_386_32	.text
10000d78:	8b 1c 85 60 43 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004360]	10000d7b: R_386_32	.text
10000d7f:	85 d2                	test   edx,edx
10000d81:	74 0e                	je     10000d91 <_ssfn_zlib_decode+0x43a>
10000d83:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d8a:	e8 c2 f9 ff ff       	call   10000751 <_ssfn__zreceive>
10000d8f:	01 c3                	add    ebx,eax
10000d91:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000d98:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d9f:	e8 c7 f3 ff ff       	call   1000016b <_ssfn__zhuffman_decode>
10000da4:	85 c0                	test   eax,eax
10000da6:	0f 88 a0 00 00 00    	js     10000e4c <_ssfn_zlib_decode+0x4f5>
10000dac:	8b 14 85 e0 41 00 10 	mov    edx,DWORD PTR [eax*4+0x100041e0]	10000daf: R_386_32	.text
10000db3:	8b 3c 85 60 42 00 10 	mov    edi,DWORD PTR [eax*4+0x10004260]	10000db6: R_386_32	.text
10000dba:	85 d2                	test   edx,edx
10000dbc:	74 0e                	je     10000dcc <_ssfn_zlib_decode+0x475>
10000dbe:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dc5:	e8 87 f9 ff ff       	call   10000751 <_ssfn__zreceive>
10000dca:	01 c7                	add    edi,eax
10000dcc:	89 e8                	mov    eax,ebp
10000dce:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000dd5:	39 f8                	cmp    eax,edi
10000dd7:	7c 73                	jl     10000e4c <_ssfn_zlib_decode+0x4f5>
10000dd9:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000ddd:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000de4:	73 19                	jae    10000dff <_ssfn_zlib_decode+0x4a8>
10000de6:	89 ea                	mov    edx,ebp
10000de8:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000def:	e8 27 f4 ff ff       	call   1000021b <_ssfn__zexpand>
10000df4:	85 c0                	test   eax,eax
10000df6:	74 54                	je     10000e4c <_ssfn_zlib_decode+0x4f5>
10000df8:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000dff:	89 ee                	mov    esi,ebp
10000e01:	29 fe                	sub    esi,edi
10000e03:	4f                   	dec    edi
10000e04:	75 19                	jne    10000e1f <_ssfn_zlib_decode+0x4c8>
10000e06:	85 db                	test   ebx,ebx
10000e08:	0f 84 fa fe ff ff    	je     10000d08 <_ssfn_zlib_decode+0x3b1>
10000e0e:	8a 06                	mov    al,BYTE PTR [esi]
10000e10:	01 eb                	add    ebx,ebp
10000e12:	45                   	inc    ebp
10000e13:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e16:	39 dd                	cmp    ebp,ebx
10000e18:	75 f8                	jne    10000e12 <_ssfn_zlib_decode+0x4bb>
10000e1a:	e9 e9 fe ff ff       	jmp    10000d08 <_ssfn_zlib_decode+0x3b1>
10000e1f:	85 db                	test   ebx,ebx
10000e21:	0f 84 e1 fe ff ff    	je     10000d08 <_ssfn_zlib_decode+0x3b1>
10000e27:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e2a:	89 ef                	mov    edi,ebp
10000e2c:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e2d:	39 f0                	cmp    eax,esi
10000e2f:	75 fb                	jne    10000e2c <_ssfn_zlib_decode+0x4d5>
10000e31:	01 dd                	add    ebp,ebx
10000e33:	e9 d0 fe ff ff       	jmp    10000d08 <_ssfn_zlib_decode+0x3b1>
10000e38:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e3d:	0f 84 c0 fb ff ff    	je     10000a03 <_ssfn_zlib_decode+0xac>
10000e43:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e4a:	eb 14                	jmp    10000e60 <_ssfn_zlib_decode+0x509>
10000e4c:	83 ec 0c             	sub    esp,0xc
10000e4f:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e56:	e8 fc ff ff ff       	call   10000e57 <_ssfn_zlib_decode+0x500>	10000e57: R_386_PC32	free
10000e5b:	83 c4 10             	add    esp,0x10
10000e5e:	31 c0                	xor    eax,eax
10000e60:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000e66:	5b                   	pop    ebx
10000e67:	5e                   	pop    esi
10000e68:	5f                   	pop    edi
10000e69:	5d                   	pop    ebp
10000e6a:	c3                   	ret    

10000e6b <ssfn_load>:
10000e6b:	55                   	push   ebp
10000e6c:	57                   	push   edi
10000e6d:	56                   	push   esi
10000e6e:	53                   	push   ebx
10000e6f:	83 ec 1c             	sub    esp,0x1c
10000e72:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000e76:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000e7a:	85 ff                	test   edi,edi
10000e7c:	0f 84 d0 01 00 00    	je     10001052 <ssfn_load+0x1e7>
10000e82:	85 f6                	test   esi,esi
10000e84:	0f 84 c8 01 00 00    	je     10001052 <ssfn_load+0x1e7>
10000e8a:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000e8d:	0f 85 a8 00 00 00    	jne    10000f3b <ssfn_load+0xd0>
10000e93:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000e97:	0f 85 9e 00 00 00    	jne    10000f3b <ssfn_load+0xd0>
10000e9d:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000ea1:	74 0a                	je     10000ead <ssfn_load+0x42>
10000ea3:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ea8:	e9 aa 01 00 00       	jmp    10001057 <ssfn_load+0x1ec>
10000ead:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000eb0:	a8 04                	test   al,0x4
10000eb2:	75 05                	jne    10000eb9 <ssfn_load+0x4e>
10000eb4:	83 c6 0a             	add    esi,0xa
10000eb7:	eb 08                	jmp    10000ec1 <ssfn_load+0x56>
10000eb9:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000ebd:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000ec1:	a8 08                	test   al,0x8
10000ec3:	74 07                	je     10000ecc <ssfn_load+0x61>
10000ec5:	46                   	inc    esi
10000ec6:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000eca:	eb f7                	jmp    10000ec3 <ssfn_load+0x58>
10000ecc:	a8 10                	test   al,0x10
10000ece:	74 07                	je     10000ed7 <ssfn_load+0x6c>
10000ed0:	46                   	inc    esi
10000ed1:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000ed5:	eb f7                	jmp    10000ece <ssfn_load+0x63>
10000ed7:	83 ec 0c             	sub    esp,0xc
10000eda:	56                   	push   esi
10000edb:	e8 fc ff ff ff       	call   10000edc <ssfn_load+0x71>	10000edc: R_386_PC32	_ssfn_zlib_decode
10000ee0:	83 c4 10             	add    esp,0x10
10000ee3:	89 c6                	mov    esi,eax
10000ee5:	85 c0                	test   eax,eax
10000ee7:	74 ba                	je     10000ea3 <ssfn_load+0x38>
10000ee9:	50                   	push   eax
10000eea:	50                   	push   eax
10000eeb:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000ef1:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000ef8:	50                   	push   eax
10000ef9:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000eff:	e8 fc ff ff ff       	call   10000f00 <ssfn_load+0x95>	10000f00: R_386_PC32	realloc
10000f04:	83 c4 10             	add    esp,0x10
10000f07:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f0d:	85 c0                	test   eax,eax
10000f0f:	75 0f                	jne    10000f20 <ssfn_load+0xb5>
10000f11:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f1b:	e9 1a 01 00 00       	jmp    1000103a <ssfn_load+0x1cf>
10000f20:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f26:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f29:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f2f:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f32:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f35:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f3b:	50                   	push   eax
10000f3c:	6a 04                	push   0x4
10000f3e:	68 a1 40 00 10       	push   0x100040a1	10000f3f: R_386_32	.text
10000f43:	56                   	push   esi
10000f44:	e8 fc ff ff ff       	call   10000f45 <ssfn_load+0xda>	10000f45: R_386_PC32	memcmp
10000f49:	83 c4 10             	add    esp,0x10
10000f4c:	89 c5                	mov    ebp,eax
10000f4e:	85 c0                	test   eax,eax
10000f50:	75 29                	jne    10000f7b <ssfn_load+0x110>
10000f52:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f55:	01 f3                	add    ebx,esi
10000f57:	83 c6 08             	add    esi,0x8
10000f5a:	39 de                	cmp    esi,ebx
10000f5c:	0f 83 f5 00 00 00    	jae    10001057 <ssfn_load+0x1ec>
10000f62:	50                   	push   eax
10000f63:	50                   	push   eax
10000f64:	56                   	push   esi
10000f65:	57                   	push   edi
10000f66:	e8 fc ff ff ff       	call   10000f67 <ssfn_load+0xfc>	10000f67: R_386_PC32	ssfn_load
10000f6b:	83 c4 10             	add    esp,0x10
10000f6e:	85 c0                	test   eax,eax
10000f70:	0f 85 e1 00 00 00    	jne    10001057 <ssfn_load+0x1ec>
10000f76:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000f79:	eb df                	jmp    10000f5a <ssfn_load+0xef>
10000f7b:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000f7e:	83 e0 0f             	and    eax,0xf
10000f81:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000f85:	53                   	push   ebx
10000f86:	6a 04                	push   0x4
10000f88:	68 a6 40 00 10       	push   0x100040a6	10000f89: R_386_32	.text
10000f8d:	56                   	push   esi
10000f8e:	e8 fc ff ff ff       	call   10000f8f <ssfn_load+0x124>	10000f8f: R_386_PC32	memcmp
10000f93:	83 c4 10             	add    esp,0x10
10000f96:	89 c5                	mov    ebp,eax
10000f98:	85 c0                	test   eax,eax
10000f9a:	0f 85 03 ff ff ff    	jne    10000ea3 <ssfn_load+0x38>
10000fa0:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fa3:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fa7:	51                   	push   ecx
10000fa8:	6a 04                	push   0x4
10000faa:	68 ab 40 00 10       	push   0x100040ab	10000fab: R_386_32	.text
10000faf:	50                   	push   eax
10000fb0:	e8 fc ff ff ff       	call   10000fb1 <ssfn_load+0x146>	10000fb1: R_386_PC32	memcmp
10000fb5:	83 c4 10             	add    esp,0x10
10000fb8:	85 c0                	test   eax,eax
10000fba:	0f 85 e3 fe ff ff    	jne    10000ea3 <ssfn_load+0x38>
10000fc0:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10000fc5:	0f 87 d8 fe ff ff    	ja     10000ea3 <ssfn_load+0x38>
10000fcb:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10000fcf:	39 cb                	cmp    ebx,ecx
10000fd1:	0f 86 cc fe ff ff    	jbe    10000ea3 <ssfn_load+0x38>
10000fd7:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10000fda:	39 c3                	cmp    ebx,eax
10000fdc:	0f 86 c1 fe ff ff    	jbe    10000ea3 <ssfn_load+0x38>
10000fe2:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10000fe5:	0f 86 b8 fe ff ff    	jbe    10000ea3 <ssfn_load+0x38>
10000feb:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
10000fee:	0f 86 af fe ff ff    	jbe    10000ea3 <ssfn_load+0x38>
10000ff4:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10000ff7:	0f 86 a6 fe ff ff    	jbe    10000ea3 <ssfn_load+0x38>
10000ffd:	39 c1                	cmp    ecx,eax
10000fff:	0f 83 9e fe ff ff    	jae    10000ea3 <ssfn_load+0x38>
10001005:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
1000100a:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
1000100d:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
10001013:	40                   	inc    eax
10001014:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
1000101a:	52                   	push   edx
1000101b:	c1 e0 02             	shl    eax,0x2
1000101e:	52                   	push   edx
1000101f:	50                   	push   eax
10001020:	ff 33                	push   DWORD PTR [ebx]
10001022:	e8 fc ff ff ff       	call   10001023 <ssfn_load+0x1b8>	10001023: R_386_PC32	realloc
10001027:	83 c4 10             	add    esp,0x10
1000102a:	89 03                	mov    DWORD PTR [ebx],eax
1000102c:	85 c0                	test   eax,eax
1000102e:	75 0f                	jne    1000103f <ssfn_load+0x1d4>
10001030:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
1000103a:	83 cd ff             	or     ebp,0xffffffff
1000103d:	eb 18                	jmp    10001057 <ssfn_load+0x1ec>
1000103f:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001045:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001049:	89 f8                	mov    eax,edi
1000104b:	e8 ad f3 ff ff       	call   100003fd <_ssfn_fc.part.1>
10001050:	eb 05                	jmp    10001057 <ssfn_load+0x1ec>
10001052:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10001057:	83 c4 1c             	add    esp,0x1c
1000105a:	89 e8                	mov    eax,ebp
1000105c:	5b                   	pop    ebx
1000105d:	5e                   	pop    esi
1000105e:	5f                   	pop    edi
1000105f:	5d                   	pop    ebp
10001060:	c3                   	ret    

10001061 <ssfn_free>:
10001061:	57                   	push   edi
10001062:	56                   	push   esi
10001063:	53                   	push   ebx
10001064:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10001068:	85 db                	test   ebx,ebx
1000106a:	74 7e                	je     100010ea <ssfn_free+0x89>
1000106c:	89 d8                	mov    eax,ebx
1000106e:	e8 8a f3 ff ff       	call   100003fd <_ssfn_fc.part.1>
10001073:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
1000107a:	74 32                	je     100010ae <ssfn_free+0x4d>
1000107c:	31 f6                	xor    esi,esi
1000107e:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
10001084:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
1000108a:	7e 16                	jle    100010a2 <ssfn_free+0x41>
1000108c:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000108f:	85 c0                	test   eax,eax
10001091:	74 0c                	je     1000109f <ssfn_free+0x3e>
10001093:	83 ec 0c             	sub    esp,0xc
10001096:	50                   	push   eax
10001097:	e8 fc ff ff ff       	call   10001098 <ssfn_free+0x37>	10001098: R_386_PC32	free
1000109c:	83 c4 10             	add    esp,0x10
1000109f:	46                   	inc    esi
100010a0:	eb dc                	jmp    1000107e <ssfn_free+0x1d>
100010a2:	83 ec 0c             	sub    esp,0xc
100010a5:	50                   	push   eax
100010a6:	e8 fc ff ff ff       	call   100010a7 <ssfn_free+0x46>	100010a7: R_386_PC32	free
100010ab:	83 c4 10             	add    esp,0x10
100010ae:	31 f6                	xor    esi,esi
100010b0:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010b3:	85 c0                	test   eax,eax
100010b5:	74 0c                	je     100010c3 <ssfn_free+0x62>
100010b7:	83 ec 0c             	sub    esp,0xc
100010ba:	50                   	push   eax
100010bb:	e8 fc ff ff ff       	call   100010bc <ssfn_free+0x5b>	100010bc: R_386_PC32	free
100010c0:	83 c4 10             	add    esp,0x10
100010c3:	46                   	inc    esi
100010c4:	83 fe 05             	cmp    esi,0x5
100010c7:	75 e7                	jne    100010b0 <ssfn_free+0x4f>
100010c9:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100010cf:	85 c0                	test   eax,eax
100010d1:	74 0c                	je     100010df <ssfn_free+0x7e>
100010d3:	83 ec 0c             	sub    esp,0xc
100010d6:	50                   	push   eax
100010d7:	e8 fc ff ff ff       	call   100010d8 <ssfn_free+0x77>	100010d8: R_386_PC32	free
100010dc:	83 c4 10             	add    esp,0x10
100010df:	b9 72 3d 00 00       	mov    ecx,0x3d72
100010e4:	31 c0                	xor    eax,eax
100010e6:	89 df                	mov    edi,ebx
100010e8:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100010ea:	5b                   	pop    ebx
100010eb:	5e                   	pop    esi
100010ec:	5f                   	pop    edi
100010ed:	c3                   	ret    

100010ee <ssfn_mem>:
100010ee:	55                   	push   ebp
100010ef:	31 c0                	xor    eax,eax
100010f1:	57                   	push   edi
100010f2:	56                   	push   esi
100010f3:	53                   	push   ebx
100010f4:	83 ec 08             	sub    esp,0x8
100010f7:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100010fb:	85 d2                	test   edx,edx
100010fd:	0f 84 8e 00 00 00    	je     10001191 <ssfn_mem+0xa3>
10001103:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001108:	31 c9                	xor    ecx,ecx
1000110a:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10001111:	41                   	inc    ecx
10001112:	8d 04 98             	lea    eax,[eax+ebx*4]
10001115:	83 f9 05             	cmp    ecx,0x5
10001118:	75 f0                	jne    1000110a <ssfn_mem+0x1c>
1000111a:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
10001120:	31 c9                	xor    ecx,ecx
10001122:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001129:	89 34 24             	mov    DWORD PTR [esp],esi
1000112c:	85 f6                	test   esi,esi
1000112e:	74 48                	je     10001178 <ssfn_mem+0x8a>
10001130:	31 db                	xor    ebx,ebx
10001132:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001135:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001138:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000113c:	85 ff                	test   edi,edi
1000113e:	74 2a                	je     1000116a <ssfn_mem+0x7c>
10001140:	31 f6                	xor    esi,esi
10001142:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001146:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001149:	85 ed                	test   ebp,ebp
1000114b:	74 0f                	je     1000115c <ssfn_mem+0x6e>
1000114d:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
10001151:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001155:	0f af fd             	imul   edi,ebp
10001158:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
1000115c:	46                   	inc    esi
1000115d:	81 fe 00 01 00 00    	cmp    esi,0x100
10001163:	75 dd                	jne    10001142 <ssfn_mem+0x54>
10001165:	05 00 04 00 00       	add    eax,0x400
1000116a:	43                   	inc    ebx
1000116b:	81 fb 00 01 00 00    	cmp    ebx,0x100
10001171:	75 bf                	jne    10001132 <ssfn_mem+0x44>
10001173:	05 00 04 00 00       	add    eax,0x400
10001178:	41                   	inc    ecx
10001179:	83 f9 11             	cmp    ecx,0x11
1000117c:	75 a4                	jne    10001122 <ssfn_mem+0x34>
1000117e:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
10001185:	74 0a                	je     10001191 <ssfn_mem+0xa3>
10001187:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
1000118d:	01 d2                	add    edx,edx
1000118f:	01 d0                	add    eax,edx
10001191:	83 c4 08             	add    esp,0x8
10001194:	5b                   	pop    ebx
10001195:	5e                   	pop    esi
10001196:	5f                   	pop    edi
10001197:	5d                   	pop    ebp
10001198:	c3                   	ret    

10001199 <ssfn_select>:
10001199:	55                   	push   ebp
1000119a:	57                   	push   edi
1000119b:	56                   	push   esi
1000119c:	53                   	push   ebx
1000119d:	83 ec 1c             	sub    esp,0x1c
100011a0:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011a4:	85 db                	test   ebx,ebx
100011a6:	75 0a                	jne    100011b2 <ssfn_select+0x19>
100011a8:	be fc ff ff ff       	mov    esi,0xfffffffc
100011ad:	e9 13 01 00 00       	jmp    100012c5 <ssfn_select+0x12c>
100011b2:	89 d8                	mov    eax,ebx
100011b4:	e8 44 f2 ff ff       	call   100003fd <_ssfn_fc.part.1>
100011b9:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011bd:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011c3:	0f 85 e9 00 00 00    	jne    100012b2 <ssfn_select+0x119>
100011c9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100011cd:	83 e8 08             	sub    eax,0x8
100011d0:	3d b8 00 00 00       	cmp    eax,0xb8
100011d5:	0f 87 de 00 00 00    	ja     100012b9 <ssfn_select+0x120>
100011db:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
100011e3:	75 76                	jne    1000125b <ssfn_select+0xc2>
100011e5:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
100011ea:	74 bc                	je     100011a8 <ssfn_select+0xf>
100011ec:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100011f0:	80 38 00             	cmp    BYTE PTR [eax],0x0
100011f3:	74 b3                	je     100011a8 <ssfn_select+0xf>
100011f5:	31 ed                	xor    ebp,ebp
100011f7:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100011fb:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
100011ff:	74 03                	je     10001204 <ssfn_select+0x6b>
10001201:	45                   	inc    ebp
10001202:	eb f3                	jmp    100011f7 <ssfn_select+0x5e>
10001204:	8d 43 14             	lea    eax,[ebx+0x14]
10001207:	89 df                	mov    edi,ebx
10001209:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000120d:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
10001213:	31 d2                	xor    edx,edx
10001215:	89 04 24             	mov    DWORD PTR [esp],eax
10001218:	39 14 24             	cmp    DWORD PTR [esp],edx
1000121b:	7e 33                	jle    10001250 <ssfn_select+0xb7>
1000121d:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10001221:	8b 07                	mov    eax,DWORD PTR [edi]
10001223:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001226:	50                   	push   eax
10001227:	8d 41 20             	lea    eax,[ecx+0x20]
1000122a:	55                   	push   ebp
1000122b:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000122f:	50                   	push   eax
10001230:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001234:	e8 fc ff ff ff       	call   10001235 <ssfn_select+0x9c>	10001235: R_386_PC32	memcmp
10001239:	83 c4 10             	add    esp,0x10
1000123c:	85 c0                	test   eax,eax
1000123e:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10001242:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001246:	75 05                	jne    1000124d <ssfn_select+0xb4>
10001248:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
1000124b:	eb 34                	jmp    10001281 <ssfn_select+0xe8>
1000124d:	42                   	inc    edx
1000124e:	eb c8                	jmp    10001218 <ssfn_select+0x7f>
10001250:	83 c7 04             	add    edi,0x4
10001253:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001257:	75 b4                	jne    1000120d <ssfn_select+0x74>
10001259:	eb 65                	jmp    100012c0 <ssfn_select+0x127>
1000125b:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
10001263:	74 15                	je     1000127a <ssfn_select+0xe1>
10001265:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
1000126a:	7f 54                	jg     100012c0 <ssfn_select+0x127>
1000126c:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001270:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
10001278:	74 46                	je     100012c0 <ssfn_select+0x127>
1000127a:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
10001281:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001285:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
1000128c:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
10001292:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
1000129c:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012a0:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012a6:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012aa:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012b0:	eb 13                	jmp    100012c5 <ssfn_select+0x12c>
100012b2:	be fb ff ff ff       	mov    esi,0xfffffffb
100012b7:	eb 0c                	jmp    100012c5 <ssfn_select+0x12c>
100012b9:	be fa ff ff ff       	mov    esi,0xfffffffa
100012be:	eb 05                	jmp    100012c5 <ssfn_select+0x12c>
100012c0:	be fd ff ff ff       	mov    esi,0xfffffffd
100012c5:	83 c4 1c             	add    esp,0x1c
100012c8:	89 f0                	mov    eax,esi
100012ca:	5b                   	pop    ebx
100012cb:	5e                   	pop    esi
100012cc:	5f                   	pop    edi
100012cd:	5d                   	pop    ebp
100012ce:	c3                   	ret    

100012cf <ssfn_render>:
100012cf:	55                   	push   ebp
100012d0:	57                   	push   edi
100012d1:	56                   	push   esi
100012d2:	53                   	push   ebx
100012d3:	81 ec dc 05 01 00    	sub    esp,0x105dc
100012d9:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
100012e0:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
100012eb:	85 ed                	test   ebp,ebp
100012ed:	0f 94 c2             	sete   dl
100012f0:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
100012f8:	0f 94 c0             	sete   al
100012fb:	08 c2                	or     dl,al
100012fd:	74 0a                	je     10001309 <ssfn_render+0x3a>
100012ff:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001304:	e9 14 1e 00 00       	jmp    1000311d <ssfn_render+0x1e4e>
10001309:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
10001310:	31 c9                	xor    ecx,ecx
10001312:	8a 00                	mov    al,BYTE PTR [eax]
10001314:	84 c0                	test   al,al
10001316:	0f 84 01 1e 00 00    	je     1000311d <ssfn_render+0x1e4e>
1000131c:	3c 0d                	cmp    al,0xd
1000131e:	75 0f                	jne    1000132f <ssfn_render+0x60>
10001320:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001327:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000132d:	eb 31                	jmp    10001360 <ssfn_render+0x91>
1000132f:	3c 0a                	cmp    al,0xa
10001331:	75 37                	jne    1000136a <ssfn_render+0x9b>
10001333:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000133a:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001340:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
10001343:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001349:	85 c0                	test   eax,eax
1000134b:	75 06                	jne    10001353 <ssfn_render+0x84>
1000134d:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
10001353:	01 d0                	add    eax,edx
10001355:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000135c:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
10001360:	b9 01 00 00 00       	mov    ecx,0x1
10001365:	e9 b3 1d 00 00       	jmp    1000311d <ssfn_render+0x1e4e>
1000136a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000136d:	85 c0                	test   eax,eax
1000136f:	74 3e                	je     100013af <ssfn_render+0xe0>
10001371:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
10001374:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
1000137b:	56                   	push   esi
1000137c:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001383:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000138a:	e8 a0 f4 ff ff       	call   1000082f <_ssfn_c>
1000138f:	5b                   	pop    ebx
10001390:	85 c0                	test   eax,eax
10001392:	0f 85 71 02 00 00    	jne    10001609 <ssfn_render+0x33a>
10001398:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
1000139e:	81 e2 00 01 00 00    	and    edx,0x100
100013a4:	0f 84 fd 01 00 00    	je     100015a7 <ssfn_render+0x2d8>
100013aa:	e9 1d 02 00 00       	jmp    100015cc <ssfn_render+0x2fd>
100013af:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013b5:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013bc:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100013c0:	3d fd 00 00 00       	cmp    eax,0xfd
100013c5:	7f 08                	jg     100013cf <ssfn_render+0x100>
100013c7:	89 c3                	mov    ebx,eax
100013c9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100013cd:	eb 3f                	jmp    1000140e <ssfn_render+0x13f>
100013cf:	31 db                	xor    ebx,ebx
100013d1:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
100013d9:	eb 33                	jmp    1000140e <ssfn_render+0x13f>
100013db:	85 c0                	test   eax,eax
100013dd:	0f 84 64 01 00 00    	je     10001547 <ssfn_render+0x278>
100013e3:	43                   	inc    ebx
100013e4:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
100013e8:	7e 28                	jle    10001412 <ssfn_render+0x143>
100013ea:	85 c0                	test   eax,eax
100013ec:	0f 85 17 02 00 00    	jne    10001609 <ssfn_render+0x33a>
100013f2:	31 db                	xor    ebx,ebx
100013f4:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
100013fc:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001404:	74 92                	je     10001398 <ssfn_render+0xc9>
10001406:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000140e:	31 c0                	xor    eax,eax
10001410:	eb d2                	jmp    100013e4 <ssfn_render+0x115>
10001412:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001416:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
1000141d:	74 bc                	je     100013db <ssfn_render+0x10c>
1000141f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000142a:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001431:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001438:	7e 50                	jle    1000148a <ssfn_render+0x1bb>
1000143a:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
1000143d:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
10001441:	c1 fa 04             	sar    edx,0x4
10001444:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
1000144a:	80 e2 03             	and    dl,0x3
1000144d:	75 32                	jne    10001481 <ssfn_render+0x1b2>
1000144f:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
10001453:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001459:	75 26                	jne    10001481 <ssfn_render+0x1b2>
1000145b:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
10001462:	50                   	push   eax
10001463:	89 f8                	mov    eax,edi
10001465:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000146c:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001473:	e8 b7 f3 ff ff       	call   1000082f <_ssfn_c>
10001478:	59                   	pop    ecx
10001479:	85 c0                	test   eax,eax
1000147b:	0f 85 04 01 00 00    	jne    10001585 <ssfn_render+0x2b6>
10001481:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001488:	eb a0                	jmp    1000142a <ssfn_render+0x15b>
1000148a:	85 c0                	test   eax,eax
1000148c:	0f 85 51 ff ff ff    	jne    100013e3 <ssfn_render+0x114>
10001492:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000149d:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014a4:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014ab:	0f 8e f9 1b 00 00    	jle    100030aa <ssfn_render+0x1ddb>
100014b1:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014b4:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014b8:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014be:	74 09                	je     100014c9 <ssfn_render+0x1fa>
100014c0:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014c7:	eb d4                	jmp    1000149d <ssfn_render+0x1ce>
100014c9:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100014d0:	57                   	push   edi
100014d1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014d8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014df:	e8 4b f3 ff ff       	call   1000082f <_ssfn_c>
100014e4:	5a                   	pop    edx
100014e5:	85 c0                	test   eax,eax
100014e7:	74 d7                	je     100014c0 <ssfn_render+0x1f1>
100014e9:	e9 97 00 00 00       	jmp    10001585 <ssfn_render+0x2b6>
100014ee:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014f1:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
100014f5:	c1 fa 04             	sar    edx,0x4
100014f8:	31 ca                	xor    edx,ecx
100014fa:	80 e2 03             	and    dl,0x3
100014fd:	0f 84 b7 1b 00 00    	je     100030ba <ssfn_render+0x1deb>
10001503:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000150a:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001511:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10001517:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000151e:	7f ce                	jg     100014ee <ssfn_render+0x21f>
10001520:	83 e1 03             	and    ecx,0x3
10001523:	83 f9 03             	cmp    ecx,0x3
10001526:	75 1f                	jne    10001547 <ssfn_render+0x278>
10001528:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001533:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000153a:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001541:	0f 8f 9c 1b 00 00    	jg     100030e3 <ssfn_render+0x1e14>
10001547:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001552:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001559:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001560:	7e 3e                	jle    100015a0 <ssfn_render+0x2d1>
10001562:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001565:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000156c:	57                   	push   edi
1000156d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001574:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000157b:	e8 af f2 ff ff       	call   1000082f <_ssfn_c>
10001580:	5a                   	pop    edx
10001581:	85 c0                	test   eax,eax
10001583:	74 12                	je     10001597 <ssfn_render+0x2c8>
10001585:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000158c:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
1000158f:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
10001592:	e9 4c fe ff ff       	jmp    100013e3 <ssfn_render+0x114>
10001597:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000159e:	eb b2                	jmp    10001552 <ssfn_render+0x283>
100015a0:	31 c0                	xor    eax,eax
100015a2:	e9 3c fe ff ff       	jmp    100013e3 <ssfn_render+0x114>
100015a7:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015ad:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015b8:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100015be:	7f 16                	jg     100015d6 <ssfn_render+0x307>
100015c0:	89 da                	mov    edx,ebx
100015c2:	31 c0                	xor    eax,eax
100015c4:	39 da                	cmp    edx,ebx
100015c6:	7e 15                	jle    100015dd <ssfn_render+0x30e>
100015c8:	85 c0                	test   eax,eax
100015ca:	75 3d                	jne    10001609 <ssfn_render+0x33a>
100015cc:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
100015d1:	e9 47 1b 00 00       	jmp    1000311d <ssfn_render+0x1e4e>
100015d6:	bb 04 00 00 00       	mov    ebx,0x4
100015db:	eb e5                	jmp    100015c2 <ssfn_render+0x2f3>
100015dd:	85 c0                	test   eax,eax
100015df:	75 28                	jne    10001609 <ssfn_render+0x33a>
100015e1:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
100015e9:	74 1b                	je     10001606 <ssfn_render+0x337>
100015eb:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
100015ef:	8b 09                	mov    ecx,DWORD PTR [ecx]
100015f1:	85 c9                	test   ecx,ecx
100015f3:	74 11                	je     10001606 <ssfn_render+0x337>
100015f5:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
100015f8:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
100015fc:	78 08                	js     10001606 <ssfn_render+0x337>
100015fe:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
10001601:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001604:	01 c8                	add    eax,ecx
10001606:	42                   	inc    edx
10001607:	eb bb                	jmp    100015c4 <ssfn_render+0x2f5>
10001609:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000160c:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
10001611:	85 d2                	test   edx,edx
10001613:	0f 84 04 1b 00 00    	je     1000311d <ssfn_render+0x1e4e>
10001619:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
1000161d:	0f 84 fa 1a 00 00    	je     1000311d <ssfn_render+0x1e4e>
10001623:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001629:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000162d:	85 ff                	test   edi,edi
1000162f:	0f 84 e8 1a 00 00    	je     1000311d <ssfn_render+0x1e4e>
10001635:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
1000163c:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10001640:	c1 ef 10             	shr    edi,0x10
10001643:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10001647:	83 ff 10             	cmp    edi,0x10
1000164a:	0f 87 af fc ff ff    	ja     100012ff <ssfn_render+0x30>
10001650:	8d 70 06             	lea    esi,[eax+0x6]
10001653:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001659:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
1000165d:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
10001663:	89 f7                	mov    edi,esi
10001665:	81 e7 00 02 00 00    	and    edi,0x200
1000166b:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000166f:	75 34                	jne    100016a5 <ssfn_render+0x3d6>
10001671:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001675:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
1000167c:	85 c9                	test   ecx,ecx
1000167e:	74 25                	je     100016a5 <ssfn_render+0x3d6>
10001680:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001684:	0f b6 ff             	movzx  edi,bh
10001687:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
1000168a:	85 c9                	test   ecx,ecx
1000168c:	74 17                	je     100016a5 <ssfn_render+0x3d6>
1000168e:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
10001693:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001696:	85 c9                	test   ecx,ecx
10001698:	74 0b                	je     100016a5 <ssfn_render+0x3d6>
1000169a:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016a0:	e9 25 0d 00 00       	jmp    100023ca <ssfn_render+0x10fb>
100016a5:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016a9:	f7 c6 40 00 00 00    	test   esi,0x40
100016af:	75 1a                	jne    100016cb <ssfn_render+0x3fc>
100016b1:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016b5:	7e 10                	jle    100016c7 <ssfn_render+0x3f8>
100016b7:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016bb:	83 c7 04             	add    edi,0x4
100016be:	83 e7 fc             	and    edi,0xfffffffc
100016c1:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100016c5:	eb 04                	jmp    100016cb <ssfn_render+0x3fc>
100016c7:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100016cb:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
100016d0:	f7 c6 02 00 00 00    	test   esi,0x2
100016d6:	74 14                	je     100016ec <ssfn_render+0x41d>
100016d8:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
100016db:	c0 eb 05             	shr    bl,0x5
100016de:	89 df                	mov    edi,ebx
100016e0:	83 f7 01             	xor    edi,0x1
100016e3:	83 e7 01             	and    edi,0x1
100016e6:	89 fb                	mov    ebx,edi
100016e8:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
100016ec:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
100016f1:	83 e6 01             	and    esi,0x1
100016f4:	74 10                	je     10001706 <ssfn_render+0x437>
100016f6:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
100016fa:	75 0a                	jne    10001706 <ssfn_render+0x437>
100016fc:	8d 51 40             	lea    edx,[ecx+0x40]
100016ff:	c1 fa 06             	sar    edx,0x6
10001702:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001706:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
1000170a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000170f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10001713:	99                   	cdq    
10001714:	f7 f9                	idiv   ecx
10001716:	89 c1                	mov    ecx,eax
10001718:	31 c0                	xor    eax,eax
1000171a:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000171f:	74 0c                	je     1000172d <ssfn_render+0x45e>
10001721:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001725:	be 04 00 00 00       	mov    esi,0x4
1000172a:	99                   	cdq    
1000172b:	f7 fe                	idiv   esi
1000172d:	01 c8                	add    eax,ecx
1000172f:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001734:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001739:	01 f0                	add    eax,esi
1000173b:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
1000173f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001743:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001747:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
1000174c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001750:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001755:	0f 8f c2 19 00 00    	jg     1000311d <ssfn_render+0x1e4e>
1000175b:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
10001760:	0f 85 f0 00 00 00    	jne    10001856 <ssfn_render+0x587>
10001766:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000176a:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
1000176e:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
10001775:	75 2f                	jne    100017a6 <ssfn_render+0x4d7>
10001777:	83 ec 0c             	sub    esp,0xc
1000177a:	68 00 04 00 00       	push   0x400
1000177f:	e8 fc ff ff ff       	call   10001780 <ssfn_render+0x4b1>	10001780: R_386_PC32	malloc
10001784:	83 c4 10             	add    esp,0x10
10001787:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
1000178d:	85 c0                	test   eax,eax
1000178f:	75 08                	jne    10001799 <ssfn_render+0x4ca>
10001791:	83 c9 ff             	or     ecx,0xffffffff
10001794:	e9 84 19 00 00       	jmp    1000311d <ssfn_render+0x1e4e>
10001799:	89 c7                	mov    edi,eax
1000179b:	b9 00 01 00 00       	mov    ecx,0x100
100017a0:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017a4:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017a6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017aa:	0f b6 dc             	movzx  ebx,ah
100017ad:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017b3:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017b6:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017b9:	75 3a                	jne    100017f5 <ssfn_render+0x526>
100017bb:	83 ec 0c             	sub    esp,0xc
100017be:	68 00 04 00 00       	push   0x400
100017c3:	e8 fc ff ff ff       	call   100017c4 <ssfn_render+0x4f5>	100017c4: R_386_PC32	malloc
100017c8:	89 03                	mov    DWORD PTR [ebx],eax
100017ca:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
100017d1:	83 c4 10             	add    esp,0x10
100017d4:	89 c2                	mov    edx,eax
100017d6:	0f b6 c4             	movzx  eax,ah
100017d9:	c1 ea 10             	shr    edx,0x10
100017dc:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100017e3:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
100017e6:	85 d2                	test   edx,edx
100017e8:	74 a7                	je     10001791 <ssfn_render+0x4c2>
100017ea:	b9 00 01 00 00       	mov    ecx,0x100
100017ef:	31 c0                	xor    eax,eax
100017f1:	89 d7                	mov    edi,edx
100017f3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017f5:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
100017fc:	83 ec 0c             	sub    esp,0xc
100017ff:	0f b6 cc             	movzx  ecx,ah
10001802:	89 c2                	mov    edx,eax
10001804:	0f b6 c0             	movzx  eax,al
10001807:	c1 ea 10             	shr    edx,0x10
1000180a:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001811:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001814:	8d 1c 82             	lea    ebx,[edx+eax*4]
10001817:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000181b:	83 c0 08             	add    eax,0x8
1000181e:	50                   	push   eax
1000181f:	e8 fc ff ff ff       	call   10001820 <ssfn_render+0x551>	10001820: R_386_PC32	malloc
10001824:	89 03                	mov    DWORD PTR [ebx],eax
10001826:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000182c:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001833:	83 c4 10             	add    esp,0x10
10001836:	89 c2                	mov    edx,eax
10001838:	0f b6 cc             	movzx  ecx,ah
1000183b:	c1 ea 10             	shr    edx,0x10
1000183e:	0f b6 c0             	movzx  eax,al
10001841:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001848:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
1000184b:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000184f:	75 0e                	jne    1000185f <ssfn_render+0x590>
10001851:	e9 3b ff ff ff       	jmp    10001791 <ssfn_render+0x4c2>
10001856:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001859:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000185f:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10001865:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10001869:	74 2a                	je     10001895 <ssfn_render+0x5c6>
1000186b:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001870:	74 23                	je     10001895 <ssfn_render+0x5c6>
10001872:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001875:	bb 04 00 00 00       	mov    ebx,0x4
1000187a:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000187e:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
10001882:	89 cf                	mov    edi,ecx
10001884:	29 c7                	sub    edi,eax
10001886:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000188a:	0f af c7             	imul   eax,edi
1000188d:	99                   	cdq    
1000188e:	f7 fb                	idiv   ebx
10001890:	99                   	cdq    
10001891:	f7 f9                	idiv   ecx
10001893:	eb 02                	jmp    10001897 <ssfn_render+0x5c8>
10001895:	31 c0                	xor    eax,eax
10001897:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000189d:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018a1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018a5:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018ad:	66 89 32             	mov    WORD PTR [edx],si
100018b0:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018b5:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018bb:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100018be:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100018c4:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018ca:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
100018cd:	01 c3                	add    ebx,eax
100018cf:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
100018d2:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018d8:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100018de:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
100018e1:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
100018e4:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
100018ea:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
100018f0:	8a 12                	mov    dl,BYTE PTR [edx]
100018f2:	83 e2 3f             	and    edx,0x3f
100018f5:	01 d0                	add    eax,edx
100018f7:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
100018fa:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100018fe:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001904:	8d 50 08             	lea    edx,[eax+0x8]
10001907:	b0 ff                	mov    al,0xff
10001909:	89 d7                	mov    edi,edx
1000190b:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000190d:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001913:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
10001917:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000191d:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
10001921:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001925:	c1 e0 04             	shl    eax,0x4
10001928:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000192c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001930:	c1 e0 04             	shl    eax,0x4
10001933:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001937:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000193d:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
10001941:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001945:	0f 8e 4d 0a 00 00    	jle    10002398 <ssfn_render+0x10c9>
1000194b:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000194f:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001953:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001956:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001959:	8a 12                	mov    dl,BYTE PTR [edx]
1000195b:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000195f:	83 e2 40             	and    edx,0x40
10001962:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
10001966:	88 c2                	mov    dl,al
10001968:	21 ca                	and    edx,ecx
1000196a:	fe c2                	inc    dl
1000196c:	75 14                	jne    10001982 <ssfn_render+0x6b3>
1000196e:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
10001973:	19 c0                	sbb    eax,eax
10001975:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
10001979:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000197d:	e9 09 0a 00 00       	jmp    1000238b <ssfn_render+0x10bc>
10001982:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10001986:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
10001989:	c1 e0 04             	shl    eax,0x4
1000198c:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
10001990:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001995:	99                   	cdq    
10001996:	f7 fe                	idiv   esi
10001998:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000199c:	0f b6 c1             	movzx  eax,cl
1000199f:	c1 e0 04             	shl    eax,0x4
100019a2:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019a7:	99                   	cdq    
100019a8:	f7 fe                	idiv   esi
100019aa:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019ae:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019b2:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019b6:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019ba:	c1 e2 10             	shl    edx,0x10
100019bd:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100019c2:	74 0e                	je     100019d2 <ssfn_render+0x703>
100019c4:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019c8:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
100019cd:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
100019d0:	eb 0c                	jmp    100019de <ssfn_render+0x70f>
100019d2:	c1 e0 08             	shl    eax,0x8
100019d5:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
100019da:	09 d0                	or     eax,edx
100019dc:	09 c3                	or     ebx,eax
100019de:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
100019e1:	8a 01                	mov    al,BYTE PTR [ecx]
100019e3:	84 c0                	test   al,al
100019e5:	0f 88 17 05 00 00    	js     10001f02 <ssfn_render+0xc33>
100019eb:	89 c7                	mov    edi,eax
100019ed:	83 e7 3f             	and    edi,0x3f
100019f0:	a8 40                	test   al,0x40
100019f2:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100019f6:	74 10                	je     10001a08 <ssfn_render+0x739>
100019f8:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
100019fc:	89 f8                	mov    eax,edi
100019fe:	41                   	inc    ecx
100019ff:	c1 e0 08             	shl    eax,0x8
10001a02:	09 c2                	or     edx,eax
10001a04:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a08:	8d 41 01             	lea    eax,[ecx+0x1]
10001a0b:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a15:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a19:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a24:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a28:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a2c:	83 c0 04             	add    eax,0x4
10001a2f:	c1 f8 02             	sar    eax,0x2
10001a32:	01 c7                	add    edi,eax
10001a34:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a3b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a3f:	0f 8f d7 01 00 00    	jg     10001c1c <ssfn_render+0x94d>
10001a45:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a48:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a4c:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a50:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a54:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a58:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a5b:	c1 e0 04             	shl    eax,0x4
10001a5e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a63:	99                   	cdq    
10001a64:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001a68:	01 c6                	add    esi,eax
10001a6a:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001a6e:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001a72:	c1 e0 04             	shl    eax,0x4
10001a75:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a7a:	99                   	cdq    
10001a7b:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001a7f:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001a83:	01 c3                	add    ebx,eax
10001a85:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001a89:	89 c8                	mov    eax,ecx
10001a8b:	01 c9                	add    ecx,ecx
10001a8d:	c1 f8 02             	sar    eax,0x2
10001a90:	83 e1 06             	and    ecx,0x6
10001a93:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001a97:	d3 f8                	sar    eax,cl
10001a99:	83 e0 03             	and    eax,0x3
10001a9c:	89 c1                	mov    ecx,eax
10001a9e:	83 f8 02             	cmp    eax,0x2
10001aa1:	74 4a                	je     10001aed <ssfn_render+0x81e>
10001aa3:	83 f8 03             	cmp    eax,0x3
10001aa6:	0f 84 e4 00 00 00    	je     10001b90 <ssfn_render+0x8c1>
10001aac:	49                   	dec    ecx
10001aad:	74 20                	je     10001acf <ssfn_render+0x800>
10001aaf:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001ab5:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001abb:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001ac1:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001ac7:	83 c7 02             	add    edi,0x2
10001aca:	e9 41 01 00 00       	jmp    10001c10 <ssfn_render+0x941>
10001acf:	83 c7 02             	add    edi,0x2
10001ad2:	50                   	push   eax
10001ad3:	50                   	push   eax
10001ad4:	89 e8                	mov    eax,ebp
10001ad6:	53                   	push   ebx
10001ad7:	56                   	push   esi
10001ad8:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001adc:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001ae0:	e8 9c e9 ff ff       	call   10000481 <_ssfn_l>
10001ae5:	83 c4 10             	add    esp,0x10
10001ae8:	e9 23 01 00 00       	jmp    10001c10 <ssfn_render+0x941>
10001aed:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001af1:	83 c7 04             	add    edi,0x4
10001af4:	c1 e0 04             	shl    eax,0x4
10001af7:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001afc:	99                   	cdq    
10001afd:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b01:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b05:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b09:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b0d:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b11:	c1 e0 04             	shl    eax,0x4
10001b14:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b19:	99                   	cdq    
10001b1a:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b1e:	83 ec 0c             	sub    esp,0xc
10001b21:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b25:	6a 00                	push   0x0
10001b27:	53                   	push   ebx
10001b28:	56                   	push   esi
10001b29:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b2d:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b31:	99                   	cdq    
10001b32:	f7 f9                	idiv   ecx
10001b34:	01 d8                	add    eax,ebx
10001b36:	50                   	push   eax
10001b37:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b3b:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b3f:	99                   	cdq    
10001b40:	f7 f9                	idiv   ecx
10001b42:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b46:	50                   	push   eax
10001b47:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b4b:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b4f:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b55:	99                   	cdq    
10001b56:	f7 f9                	idiv   ecx
10001b58:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b5e:	50                   	push   eax
10001b5f:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001b63:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001b69:	99                   	cdq    
10001b6a:	f7 f9                	idiv   ecx
10001b6c:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001b72:	50                   	push   eax
10001b73:	89 e8                	mov    eax,ebp
10001b75:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001b7b:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001b81:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001b85:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001b89:	e8 04 ea ff ff       	call   10000592 <_ssfn_b>
10001b8e:	eb 7d                	jmp    10001c0d <ssfn_render+0x93e>
10001b90:	83 ec 0c             	sub    esp,0xc
10001b93:	83 c7 06             	add    edi,0x6
10001b96:	6a 00                	push   0x0
10001b98:	53                   	push   ebx
10001b99:	56                   	push   esi
10001b9a:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b9e:	c1 e0 04             	shl    eax,0x4
10001ba1:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001ba6:	99                   	cdq    
10001ba7:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001bab:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001baf:	50                   	push   eax
10001bb0:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001bb4:	c1 e0 04             	shl    eax,0x4
10001bb7:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001bbc:	99                   	cdq    
10001bbd:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001bc1:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001bc5:	50                   	push   eax
10001bc6:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001bca:	c1 e0 04             	shl    eax,0x4
10001bcd:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001bd2:	99                   	cdq    
10001bd3:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001bd7:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001bdb:	50                   	push   eax
10001bdc:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001be0:	c1 e0 04             	shl    eax,0x4
10001be3:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001be8:	99                   	cdq    
10001be9:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001bed:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001bf1:	50                   	push   eax
10001bf2:	89 e8                	mov    eax,ebp
10001bf4:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bfa:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c00:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c04:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c08:	e8 85 e9 ff ff       	call   10000592 <_ssfn_b>
10001c0d:	83 c4 30             	add    esp,0x30
10001c10:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c17:	e9 18 fe ff ff       	jmp    10001a34 <ssfn_render+0x765>
10001c1c:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c22:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c28:	75 0e                	jne    10001c38 <ssfn_render+0x969>
10001c2a:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c30:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c36:	74 2e                	je     10001c66 <ssfn_render+0x997>
10001c38:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c3e:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c44:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c48:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c4e:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c54:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c5a:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c5f:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001c66:	b3 fe                	mov    bl,0xfe
10001c68:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001c6f:	0f 8e 16 07 00 00    	jle    1000238b <ssfn_render+0x10bc>
10001c75:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001c7d:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001c85:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001c8d:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001c95:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001c9d:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001ca1:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001ca5:	0f 8d de 06 00 00    	jge    10002389 <ssfn_render+0x10ba>
10001cab:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001cb1:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001cbc:	83 e8 03             	sub    eax,0x3
10001cbf:	31 f6                	xor    esi,esi
10001cc1:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001cc5:	89 f8                	mov    eax,edi
10001cc7:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001ccb:	c1 f8 02             	sar    eax,0x2
10001cce:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001cd2:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001cd9:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001cdd:	0f 8e 16 01 00 00    	jle    10001df9 <ssfn_render+0xb2a>
10001ce3:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001ce9:	8d 47 01             	lea    eax,[edi+0x1]
10001cec:	01 c0                	add    eax,eax
10001cee:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001cf2:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001cf6:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001cfb:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001cff:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d03:	7d 0c                	jge    10001d11 <ssfn_render+0xa42>
10001d05:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d09:	0f 8f db 00 00 00    	jg     10001dea <ssfn_render+0xb1b>
10001d0f:	eb 0a                	jmp    10001d1b <ssfn_render+0xa4c>
10001d11:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d15:	0f 8e cf 00 00 00    	jle    10001dea <ssfn_render+0xb1b>
10001d1b:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d20:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d24:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d29:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d2d:	89 d8                	mov    eax,ebx
10001d2f:	c1 fa 04             	sar    edx,0x4
10001d32:	c1 f8 04             	sar    eax,0x4
10001d35:	39 c2                	cmp    edx,eax
10001d37:	75 0a                	jne    10001d43 <ssfn_render+0xa74>
10001d39:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d3d:	01 c8                	add    eax,ecx
10001d3f:	d1 f8                	sar    eax,1
10001d41:	eb 1a                	jmp    10001d5d <ssfn_render+0xa8e>
10001d43:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d47:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d4b:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d4f:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d53:	0f af c1             	imul   eax,ecx
10001d56:	99                   	cdq    
10001d57:	f7 fb                	idiv   ebx
10001d59:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d5d:	c1 f8 04             	sar    eax,0x4
10001d60:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001d65:	74 04                	je     10001d6b <ssfn_render+0xa9c>
10001d67:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001d6b:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001d70:	75 3f                	jne    10001db1 <ssfn_render+0xae2>
10001d72:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001d77:	74 38                	je     10001db1 <ssfn_render+0xae2>
10001d79:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001d7d:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001d83:	f7 db                	neg    ebx
10001d85:	01 c2                	add    edx,eax
10001d87:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001d8b:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001d8f:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001d93:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001d97:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001d9b:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001d9f:	74 10                	je     10001db1 <ssfn_render+0xae2>
10001da1:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001da5:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001da9:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dad:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001db1:	31 d2                	xor    edx,edx
10001db3:	39 f2                	cmp    edx,esi
10001db5:	75 0b                	jne    10001dc2 <ssfn_render+0xaf3>
10001db7:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001dbf:	46                   	inc    esi
10001dc0:	eb 28                	jmp    10001dea <ssfn_render+0xb1b>
10001dc2:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001dca:	39 c1                	cmp    ecx,eax
10001dcc:	7d 03                	jge    10001dd1 <ssfn_render+0xb02>
10001dce:	42                   	inc    edx
10001dcf:	eb e2                	jmp    10001db3 <ssfn_render+0xae4>
10001dd1:	89 f1                	mov    ecx,esi
10001dd3:	49                   	dec    ecx
10001dd4:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001ddc:	39 d1                	cmp    ecx,edx
10001dde:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001de6:	7f eb                	jg     10001dd3 <ssfn_render+0xb04>
10001de8:	eb cd                	jmp    10001db7 <ssfn_render+0xae8>
10001dea:	8d 47 02             	lea    eax,[edi+0x2]
10001ded:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001df4:	e9 d9 fe ff ff       	jmp    10001cd2 <ssfn_render+0xa03>
10001df9:	83 fe 01             	cmp    esi,0x1
10001dfc:	7e 1f                	jle    10001e1d <ssfn_render+0xb4e>
10001dfe:	f7 c6 01 00 00 00    	test   esi,0x1
10001e04:	74 24                	je     10001e2a <ssfn_render+0xb5b>
10001e06:	8d 46 ff             	lea    eax,[esi-0x1]
10001e09:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e11:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e19:	89 c6                	mov    esi,eax
10001e1b:	eb 0d                	jmp    10001e2a <ssfn_render+0xb5b>
10001e1d:	85 f6                	test   esi,esi
10001e1f:	0f 84 c7 00 00 00    	je     10001eec <ssfn_render+0xc1d>
10001e25:	be 01 00 00 00       	mov    esi,0x1
10001e2a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e30:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e34:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e38:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e3c:	39 d1                	cmp    ecx,edx
10001e3e:	7d 0b                	jge    10001e4b <ssfn_render+0xb7c>
10001e40:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e44:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e48:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e4b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e56:	31 c0                	xor    eax,eax
10001e58:	31 d2                	xor    edx,edx
10001e5a:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e5d:	39 d1                	cmp    ecx,edx
10001e5f:	7e 7d                	jle    10001ede <ssfn_render+0xc0f>
10001e61:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001e69:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001e71:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001e75:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001e79:	79 02                	jns    10001e7d <ssfn_render+0xbae>
10001e7b:	31 c0                	xor    eax,eax
10001e7d:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001e81:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001e85:	39 cf                	cmp    edi,ecx
10001e87:	7e 04                	jle    10001e8d <ssfn_render+0xbbe>
10001e89:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001e8d:	85 d2                	test   edx,edx
10001e8f:	74 12                	je     10001ea3 <ssfn_render+0xbd4>
10001e91:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001e99:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001e9d:	39 c8                	cmp    eax,ecx
10001e9f:	7d 02                	jge    10001ea3 <ssfn_render+0xbd4>
10001ea1:	89 c8                	mov    eax,ecx
10001ea3:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001ea7:	7d 2b                	jge    10001ed4 <ssfn_render+0xc05>
10001ea9:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001ead:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001eb3:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001eb6:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001eba:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001ebe:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001ec2:	75 05                	jne    10001ec9 <ssfn_render+0xbfa>
10001ec4:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001ec9:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001ecd:	40                   	inc    eax
10001ece:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001ed2:	eb cf                	jmp    10001ea3 <ssfn_render+0xbd4>
10001ed4:	83 c2 02             	add    edx,0x2
10001ed7:	b0 01                	mov    al,0x1
10001ed9:	e9 7c ff ff ff       	jmp    10001e5a <ssfn_render+0xb8b>
10001ede:	83 e6 fe             	and    esi,0xfffffffe
10001ee1:	84 c0                	test   al,al
10001ee3:	74 07                	je     10001eec <ssfn_render+0xc1d>
10001ee5:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001eec:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001ef0:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001ef4:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001ef8:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001efd:	e9 9b fd ff ff       	jmp    10001c9d <ssfn_render+0x9ce>
10001f02:	88 c2                	mov    dl,al
10001f04:	80 e2 60             	and    dl,0x60
10001f07:	0f 85 95 02 00 00    	jne    100021a2 <ssfn_render+0xed3>
10001f0d:	83 e0 1f             	and    eax,0x1f
10001f10:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f14:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f1b:	c1 fb 04             	sar    ebx,0x4
10001f1e:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f22:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f26:	40                   	inc    eax
10001f27:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f2b:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f2f:	c1 f8 04             	sar    eax,0x4
10001f32:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f36:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f3a:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f3f:	99                   	cdq    
10001f40:	f7 fe                	idiv   esi
10001f42:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f46:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f4a:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f4f:	99                   	cdq    
10001f50:	f7 fe                	idiv   esi
10001f52:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f56:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f5c:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f60:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001f64:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f67:	39 d6                	cmp    esi,edx
10001f69:	7d 0a                	jge    10001f75 <ssfn_render+0xca6>
10001f6b:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f6f:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f72:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001f75:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001f79:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001f81:	0f af c3             	imul   eax,ebx
10001f84:	31 ff                	xor    edi,edi
10001f86:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001f8a:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001f8e:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001f92:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001f96:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f9a:	29 d8                	sub    eax,ebx
10001f9c:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fa0:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fa4:	0f 8d b1 00 00 00    	jge    1000205b <ssfn_render+0xd8c>
10001faa:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001fae:	99                   	cdq    
10001faf:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001fb3:	89 c6                	mov    esi,eax
10001fb5:	31 c0                	xor    eax,eax
10001fb7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001fbc:	74 0e                	je     10001fcc <ssfn_render+0xcfd>
10001fbe:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001fc2:	bb 04 00 00 00       	mov    ebx,0x4
10001fc7:	29 f8                	sub    eax,edi
10001fc9:	99                   	cdq    
10001fca:	f7 fb                	idiv   ebx
10001fcc:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001fd0:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001fdb:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001fdf:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10001fe4:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001feb:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10001fef:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001ff3:	39 d8                	cmp    eax,ebx
10001ff5:	7d 4e                	jge    10002045 <ssfn_render+0xd76>
10001ff7:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001ffb:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10002000:	99                   	cdq    
10002001:	f7 fb                	idiv   ebx
10002003:	8d 14 06             	lea    edx,[esi+eax*1]
10002006:	83 e0 07             	and    eax,0x7
10002009:	c1 fa 03             	sar    edx,0x3
1000200c:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10002011:	0f a3 c2             	bt     edx,eax
10002014:	72 0e                	jb     10002024 <ssfn_render+0xd55>
10002016:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000201a:	43                   	inc    ebx
1000201b:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002022:	eb c0                	jmp    10001fe4 <ssfn_render+0xd15>
10002024:	31 c0                	xor    eax,eax
10002026:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000202a:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000202e:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002034:	40                   	inc    eax
10002035:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10002039:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
1000203d:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
10002041:	7d e3                	jge    10002026 <ssfn_render+0xd57>
10002043:	eb d1                	jmp    10002016 <ssfn_render+0xd47>
10002045:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002049:	47                   	inc    edi
1000204a:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000204e:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10002052:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
10002056:	e9 45 ff ff ff       	jmp    10001fa0 <ssfn_render+0xcd1>
1000205b:	b3 fe                	mov    bl,0xfe
1000205d:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
10002064:	0f 85 21 03 00 00    	jne    1000238b <ssfn_render+0x10bc>
1000206a:	31 c0                	xor    eax,eax
1000206c:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10002070:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
10002075:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10002079:	0f 95 c0             	setne  al
1000207c:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002080:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002084:	4f                   	dec    edi
10002085:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10002089:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
10002091:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002095:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000209c:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020a0:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020a4:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020a8:	31 c0                	xor    eax,eax
100020aa:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020ad:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020b1:	83 c1 04             	add    ecx,0x4
100020b4:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020b8:	0f 8d c0 02 00 00    	jge    1000237e <ssfn_render+0x10af>
100020be:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100020c2:	8d 77 01             	lea    esi,[edi+0x1]
100020c5:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100020c9:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
100020cd:	4f                   	dec    edi
100020ce:	be 01 00 00 00       	mov    esi,0x1
100020d3:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100020d7:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
100020db:	7e 63                	jle    10002140 <ssfn_render+0xe71>
100020dd:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100020e1:	b9 01 00 00 00       	mov    ecx,0x1
100020e6:	89 ca                	mov    edx,ecx
100020e8:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
100020ec:	7e 45                	jle    10002133 <ssfn_render+0xe64>
100020ee:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100020f4:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
100020f9:	75 34                	jne    1000212f <ssfn_render+0xe60>
100020fb:	89 c7                	mov    edi,eax
100020fd:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002101:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002105:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002109:	74 0c                	je     10002117 <ssfn_render+0xe48>
1000210b:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000210f:	01 d7                	add    edi,edx
10002111:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002115:	75 18                	jne    1000212f <ssfn_render+0xe60>
10002117:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000211b:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
1000211f:	74 06                	je     10002127 <ssfn_render+0xe58>
10002121:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002125:	75 08                	jne    1000212f <ssfn_render+0xe60>
10002127:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
1000212b:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
1000212f:	41                   	inc    ecx
10002130:	40                   	inc    eax
10002131:	eb b3                	jmp    100020e6 <ssfn_render+0xe17>
10002133:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002137:	46                   	inc    esi
10002138:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
1000213c:	b0 01                	mov    al,0x1
1000213e:	eb 97                	jmp    100020d7 <ssfn_render+0xe08>
10002140:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002144:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002148:	bb 01 00 00 00       	mov    ebx,0x1
1000214d:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002151:	7e 3d                	jle    10002190 <ssfn_render+0xec1>
10002153:	b8 01 00 00 00       	mov    eax,0x1
10002158:	89 c2                	mov    edx,eax
1000215a:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000215e:	7e 23                	jle    10002183 <ssfn_render+0xeb4>
10002160:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10002164:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
1000216a:	8d 14 07             	lea    edx,[edi+eax*1]
1000216d:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
10002172:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002176:	75 08                	jne    10002180 <ssfn_render+0xeb1>
10002178:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
1000217c:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
10002180:	40                   	inc    eax
10002181:	eb d5                	jmp    10002158 <ssfn_render+0xe89>
10002183:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002187:	43                   	inc    ebx
10002188:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
1000218c:	b0 01                	mov    al,0x1
1000218e:	eb bd                	jmp    1000214d <ssfn_render+0xe7e>
10002190:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10002193:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002197:	01 c9                	add    ecx,ecx
10002199:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
1000219d:	e9 08 ff ff ff       	jmp    100020aa <ssfn_render+0xddb>
100021a2:	b3 fe                	mov    bl,0xfe
100021a4:	80 fa 20             	cmp    dl,0x20
100021a7:	0f 85 de 01 00 00    	jne    1000238b <ssfn_render+0x10bc>
100021ad:	89 c3                	mov    ebx,eax
100021af:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021b3:	c1 e3 08             	shl    ebx,0x8
100021b6:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100021bc:	09 c3                	or     ebx,eax
100021be:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100021c2:	43                   	inc    ebx
100021c3:	40                   	inc    eax
100021c4:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100021c8:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
100021cc:	40                   	inc    eax
100021cd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100021d1:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100021d5:	c1 f8 04             	sar    eax,0x4
100021d8:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100021dc:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100021e0:	c1 f8 04             	sar    eax,0x4
100021e3:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100021e7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100021eb:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
100021f0:	99                   	cdq    
100021f1:	f7 fe                	idiv   esi
100021f3:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100021f7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100021fb:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10002200:	99                   	cdq    
10002201:	f7 fe                	idiv   esi
10002203:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002207:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000220b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002211:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002215:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002219:	39 d6                	cmp    esi,edx
1000221b:	7d 0b                	jge    10002228 <ssfn_render+0xf59>
1000221d:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10002221:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002225:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002228:	83 c1 04             	add    ecx,0x4
1000222b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002236:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002239:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000223d:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
10002241:	72 35                	jb     10002278 <ssfn_render+0xfa9>
10002243:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10002247:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000224b:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002250:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002254:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002258:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000225f:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
10002263:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
1000226b:	31 d2                	xor    edx,edx
1000226d:	31 ff                	xor    edi,edi
1000226f:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
10002273:	e9 cc 00 00 00       	jmp    10002344 <ssfn_render+0x1075>
10002278:	8a 11                	mov    dl,BYTE PTR [ecx]
1000227a:	89 d0                	mov    eax,edx
1000227c:	83 e0 7f             	and    eax,0x7f
1000227f:	84 d2                	test   dl,dl
10002281:	8d 78 01             	lea    edi,[eax+0x1]
10002284:	78 09                	js     1000228f <ssfn_render+0xfc0>
10002286:	41                   	inc    ecx
10002287:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000228b:	89 ca                	mov    edx,ecx
1000228d:	eb 3d                	jmp    100022cc <ssfn_render+0xffd>
1000228f:	48                   	dec    eax
10002290:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002297:	83 f8 fe             	cmp    eax,0xfffffffe
1000229a:	74 16                	je     100022b2 <ssfn_render+0xfe3>
1000229c:	8d 5a 01             	lea    ebx,[edx+0x1]
1000229f:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022a6:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022a9:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022b0:	eb dd                	jmp    1000228f <ssfn_render+0xfc0>
100022b2:	83 c1 02             	add    ecx,0x2
100022b5:	eb 86                	jmp    1000223d <ssfn_render+0xf6e>
100022b7:	42                   	inc    edx
100022b8:	8d 73 01             	lea    esi,[ebx+0x1]
100022bb:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100022c2:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
100022c5:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
100022cc:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
100022d0:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
100022d7:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
100022dc:	75 d9                	jne    100022b7 <ssfn_render+0xfe8>
100022de:	01 f9                	add    ecx,edi
100022e0:	e9 58 ff ff ff       	jmp    1000223d <ssfn_render+0xf6e>
100022e5:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100022e9:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
100022ed:	99                   	cdq    
100022ee:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
100022f2:	0f af c8             	imul   ecx,eax
100022f5:	31 c0                	xor    eax,eax
100022f7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100022fc:	74 0e                	je     1000230c <ssfn_render+0x103d>
100022fe:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002302:	bb 04 00 00 00       	mov    ebx,0x4
10002307:	29 f8                	sub    eax,edi
10002309:	99                   	cdq    
1000230a:	f7 fb                	idiv   ebx
1000230c:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10002310:	31 db                	xor    ebx,ebx
10002312:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002316:	31 f6                	xor    esi,esi
10002318:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
1000231f:	01 c1                	add    ecx,eax
10002321:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002325:	7f 30                	jg     10002357 <ssfn_render+0x1088>
10002327:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000232b:	85 c0                	test   eax,eax
1000232d:	79 02                	jns    10002331 <ssfn_render+0x1062>
1000232f:	31 c0                	xor    eax,eax
10002331:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002335:	47                   	inc    edi
10002336:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
1000233a:	b2 01                	mov    dl,0x1
1000233c:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
10002340:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002344:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002348:	7c 9b                	jl     100022e5 <ssfn_render+0x1016>
1000234a:	84 d2                	test   dl,dl
1000234c:	74 3b                	je     10002389 <ssfn_render+0x10ba>
1000234e:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002355:	eb 32                	jmp    10002389 <ssfn_render+0x10ba>
10002357:	89 d8                	mov    eax,ebx
10002359:	99                   	cdq    
1000235a:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000235e:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
10002365:	3c ff                	cmp    al,0xff
10002367:	74 0e                	je     10002377 <ssfn_render+0x10a8>
10002369:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000236d:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002373:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
10002377:	46                   	inc    esi
10002378:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
1000237c:	eb a3                	jmp    10002321 <ssfn_render+0x1052>
1000237e:	84 c0                	test   al,al
10002380:	74 07                	je     10002389 <ssfn_render+0x10ba>
10002382:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
10002389:	b3 fe                	mov    bl,0xfe
1000238b:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
1000238f:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
10002393:	e9 9f f5 ff ff       	jmp    10001937 <ssfn_render+0x668>
10002398:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000239e:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023a1:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023a4:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023a7:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023ad:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023b1:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023b5:	89 f0                	mov    eax,esi
100023b7:	89 d9                	mov    ecx,ebx
100023b9:	43                   	inc    ebx
100023ba:	39 de                	cmp    esi,ebx
100023bc:	7e 08                	jle    100023c6 <ssfn_render+0x10f7>
100023be:	48                   	dec    eax
100023bf:	29 c8                	sub    eax,ecx
100023c1:	88 42 07             	mov    BYTE PTR [edx+0x7],al
100023c4:	eb 04                	jmp    100023ca <ssfn_render+0x10fb>
100023c6:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
100023ca:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
100023d2:	0f 84 c9 0c 00 00    	je     100030a1 <ssfn_render+0x1dd2>
100023d8:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
100023de:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
100023e4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100023e8:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
100023eb:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100023ef:	0f ba e0 0c          	bt     eax,0xc
100023f3:	72 22                	jb     10002417 <ssfn_render+0x1148>
100023f5:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
100023f8:	83 e0 0f             	and    eax,0xf
100023fb:	3c 03                	cmp    al,0x3
100023fd:	74 18                	je     10002417 <ssfn_render+0x1148>
100023ff:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
10002403:	84 c9                	test   cl,cl
10002405:	74 10                	je     10002417 <ssfn_render+0x1148>
10002407:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
1000240b:	0f af d7             	imul   edx,edi
1000240e:	89 d0                	mov    eax,edx
10002410:	99                   	cdq    
10002411:	f7 f9                	idiv   ecx
10002413:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002417:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000241b:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
10002421:	7d 06                	jge    10002429 <ssfn_render+0x115a>
10002423:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002429:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
1000242f:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
10002433:	0f b7 13             	movzx  edx,WORD PTR [ebx]
10002436:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
1000243b:	89 d0                	mov    eax,edx
1000243d:	99                   	cdq    
1000243e:	f7 f9                	idiv   ecx
10002440:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002444:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002448:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
1000244b:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000244f:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
10002453:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002457:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
1000245c:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002460:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002465:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002469:	99                   	cdq    
1000246a:	f7 f9                	idiv   ecx
1000246c:	31 d2                	xor    edx,edx
1000246e:	83 ff 10             	cmp    edi,0x10
10002471:	0f 9f c2             	setg   dl
10002474:	42                   	inc    edx
10002475:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
10002479:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
1000247d:	7d 08                	jge    10002487 <ssfn_render+0x11b8>
1000247f:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002483:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10002487:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
1000248b:	39 c2                	cmp    edx,eax
1000248d:	7d 04                	jge    10002493 <ssfn_render+0x11c4>
1000248f:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002493:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
10002498:	74 4c                	je     100024e6 <ssfn_render+0x1217>
1000249a:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000249e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024a3:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024a7:	99                   	cdq    
100024a8:	f7 f9                	idiv   ecx
100024aa:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024ae:	81 e2 00 08 00 00    	and    edx,0x800
100024b4:	74 04                	je     100024ba <ssfn_render+0x11eb>
100024b6:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024ba:	01 d0                	add    eax,edx
100024bc:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024c2:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100024c6:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
100024ca:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
100024ce:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024d3:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024d7:	99                   	cdq    
100024d8:	f7 f9                	idiv   ecx
100024da:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100024de:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
100024e4:	eb 22                	jmp    10002508 <ssfn_render+0x1239>
100024e6:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100024ea:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
100024f4:	d1 f8                	sar    eax,1
100024f6:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
100024fe:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002502:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002508:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000250f:	8b 18                	mov    ebx,DWORD PTR [eax]
10002511:	85 db                	test   ebx,ebx
10002513:	0f 84 2e 09 00 00    	je     10002e47 <ssfn_render+0x1b78>
10002519:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
1000251d:	89 d1                	mov    ecx,edx
1000251f:	89 d0                	mov    eax,edx
10002521:	66 c1 f9 0b          	sar    cx,0xb
10002525:	c1 f8 1f             	sar    eax,0x1f
10002528:	31 c2                	xor    edx,eax
1000252a:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
1000252e:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
10002532:	88 c8                	mov    al,cl
10002534:	83 e0 10             	and    eax,0x10
10002537:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
1000253b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000253f:	83 c0 40             	add    eax,0x40
10002542:	c1 f8 06             	sar    eax,0x6
10002545:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
1000254c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002550:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002554:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002558:	7d 08                	jge    10002562 <ssfn_render+0x1293>
1000255a:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000255e:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002562:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002565:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
1000256d:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002571:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
10002579:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
1000257d:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002582:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002586:	99                   	cdq    
10002587:	f7 f9                	idiv   ecx
10002589:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000258d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002594:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002597:	0f b6 f4             	movzx  esi,ah
1000259a:	89 c2                	mov    edx,eax
1000259c:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025a0:	c1 ea 10             	shr    edx,0x10
100025a3:	0f b6 fa             	movzx  edi,dl
100025a6:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025aa:	0f b6 f8             	movzx  edi,al
100025ad:	c1 e8 18             	shr    eax,0x18
100025b0:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025b4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025b8:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025bf:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100025c2:	0f b6 fc             	movzx  edi,ah
100025c5:	89 c2                	mov    edx,eax
100025c7:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
100025ce:	c1 ea 10             	shr    edx,0x10
100025d1:	0f b6 c0             	movzx  eax,al
100025d4:	0f b6 f2             	movzx  esi,dl
100025d7:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100025de:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
100025e5:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
100025e9:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025f0:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
100025f7:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
100025fb:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
100025ff:	0f af c2             	imul   eax,edx
10002602:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002606:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
1000260a:	8d 04 90             	lea    eax,[eax+edx*4]
1000260d:	01 d8                	add    eax,ebx
1000260f:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
10002616:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
1000261a:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
10002621:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002626:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
1000262d:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002631:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002635:	0f 8d e2 04 00 00    	jge    10002b1d <ssfn_render+0x184e>
1000263b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002642:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002649:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
1000264d:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
10002651:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002655:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002659:	39 d0                	cmp    eax,edx
1000265b:	0f 8d bc 04 00 00    	jge    10002b1d <ssfn_render+0x184e>
10002661:	85 c0                	test   eax,eax
10002663:	0f 88 94 04 00 00    	js     10002afd <ssfn_render+0x182e>
10002669:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000266f:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10002673:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002677:	c1 e1 08             	shl    ecx,0x8
1000267a:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
10002682:	89 c8                	mov    eax,ecx
10002684:	0f af c3             	imul   eax,ebx
10002687:	99                   	cdq    
10002688:	f7 fe                	idiv   esi
1000268a:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
10002691:	c1 f8 08             	sar    eax,0x8
10002694:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
1000269b:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026a1:	0f af c3             	imul   eax,ebx
100026a4:	99                   	cdq    
100026a5:	f7 fe                	idiv   esi
100026a7:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026ab:	c1 f8 08             	sar    eax,0x8
100026ae:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026b5:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026b9:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100026c0:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
100026c7:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100026ce:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
100026d2:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100026d6:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100026da:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
100026de:	0f 8d 19 04 00 00    	jge    10002afd <ssfn_render+0x182e>
100026e4:	85 c0                	test   eax,eax
100026e6:	0f 88 ff 03 00 00    	js     10002aeb <ssfn_render+0x181c>
100026ec:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100026f3:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
100026f7:	75 42                	jne    1000273b <ssfn_render+0x146c>
100026f9:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100026fd:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002704:	b9 10 00 00 00       	mov    ecx,0x10
10002709:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000270c:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002713:	89 c2                	mov    edx,eax
10002715:	0f b6 fc             	movzx  edi,ah
10002718:	d3 ea                	shr    edx,cl
1000271a:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002721:	0f b6 f2             	movzx  esi,dl
10002724:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002728:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000272f:	d3 e8                	shr    eax,cl
10002731:	0f b6 c0             	movzx  eax,al
10002734:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
1000273b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002741:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002745:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002748:	c1 e1 08             	shl    ecx,0x8
1000274b:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
1000274f:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10002757:	89 c8                	mov    eax,ecx
10002759:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10002761:	0f af c3             	imul   eax,ebx
10002764:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
1000276c:	99                   	cdq    
1000276d:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10002775:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
10002779:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
10002781:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
10002788:	c1 f8 08             	sar    eax,0x8
1000278b:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
10002792:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
10002798:	0f af c3             	imul   eax,ebx
1000279b:	99                   	cdq    
1000279c:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027a0:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027a4:	c1 f8 08             	sar    eax,0x8
100027a7:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027ae:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027b5:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027b9:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100027bd:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100027c1:	0f 8d 3b 02 00 00    	jge    10002a02 <ssfn_render+0x1733>
100027c7:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
100027cb:	c1 fa 08             	sar    edx,0x8
100027ce:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
100027d5:	75 25                	jne    100027fc <ssfn_render+0x152d>
100027d7:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
100027dc:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
100027e3:	b8 00 01 00 00       	mov    eax,0x100
100027e8:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
100027f0:	29 c8                	sub    eax,ecx
100027f2:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100027f6:	39 c7                	cmp    edi,eax
100027f8:	7e 1c                	jle    10002816 <ssfn_render+0x1547>
100027fa:	eb 16                	jmp    10002812 <ssfn_render+0x1543>
100027fc:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002804:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
1000280b:	75 09                	jne    10002816 <ssfn_render+0x1547>
1000280d:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
10002812:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002816:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
1000281a:	0f b7 00             	movzx  eax,WORD PTR [eax]
1000281d:	0f af c2             	imul   eax,edx
10002820:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
10002827:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
1000282c:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10002831:	c1 f8 08             	sar    eax,0x8
10002834:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
1000283b:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
10002842:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002846:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
1000284a:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
1000284e:	0f 8d a1 01 00 00    	jge    100029f5 <ssfn_render+0x1726>
10002854:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002858:	c1 f8 08             	sar    eax,0x8
1000285b:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
10002862:	75 3b                	jne    1000289f <ssfn_render+0x15d0>
10002864:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
10002869:	ba 00 01 00 00       	mov    edx,0x100
1000286e:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
10002876:	29 ca                	sub    edx,ecx
10002878:	89 f1                	mov    ecx,esi
1000287a:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
10002881:	39 d1                	cmp    ecx,edx
10002883:	7c 0e                	jl     10002893 <ssfn_render+0x15c4>
10002885:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002889:	81 fa 00 01 00 00    	cmp    edx,0x100
1000288f:	74 22                	je     100028b3 <ssfn_render+0x15e4>
10002891:	89 d1                	mov    ecx,edx
10002893:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
10002898:	89 cf                	mov    edi,ecx
1000289a:	c1 ff 08             	sar    edi,0x8
1000289d:	eb 14                	jmp    100028b3 <ssfn_render+0x15e4>
1000289f:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028a6:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028ad:	74 04                	je     100028b3 <ssfn_render+0x15e4>
100028af:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028b3:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028b7:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028bb:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100028c2:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
100028c7:	81 fa ff 00 00 00    	cmp    edx,0xff
100028cd:	75 37                	jne    10002906 <ssfn_render+0x1637>
100028cf:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
100028d6:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
100028de:	0f af c7             	imul   eax,edi
100028e1:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100028e5:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
100028ec:	0f af c7             	imul   eax,edi
100028ef:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100028f3:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
100028fa:	0f af c7             	imul   eax,edi
100028fd:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002901:	e9 e2 00 00 00       	jmp    100029e8 <ssfn_render+0x1719>
10002906:	81 fa fe 00 00 00    	cmp    edx,0xfe
1000290c:	74 2d                	je     1000293b <ssfn_render+0x166c>
1000290e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002911:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002914:	85 c9                	test   ecx,ecx
10002916:	74 23                	je     1000293b <ssfn_render+0x166c>
10002918:	01 c8                	add    eax,ecx
1000291a:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
1000291d:	89 d9                	mov    ecx,ebx
1000291f:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
10002926:	c1 e9 10             	shr    ecx,0x10
10002929:	0f b6 f7             	movzx  esi,bh
1000292c:	0f b6 c1             	movzx  eax,cl
1000292f:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002933:	0f b6 c3             	movzx  eax,bl
10002936:	c1 eb 18             	shr    ebx,0x18
10002939:	eb 14                	jmp    1000294f <ssfn_render+0x1680>
1000293b:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000293f:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10002943:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002947:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
1000294b:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000294f:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002955:	75 25                	jne    1000297c <ssfn_render+0x16ad>
10002957:	0f af c7             	imul   eax,edi
1000295a:	0f af f7             	imul   esi,edi
1000295d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002961:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002965:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
1000296b:	0f af cf             	imul   ecx,edi
1000296e:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
10002972:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
10002976:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
1000297a:	eb 6c                	jmp    100029e8 <ssfn_render+0x1719>
1000297c:	0f af f3             	imul   esi,ebx
1000297f:	0f af c3             	imul   eax,ebx
10002982:	b9 ff 00 00 00       	mov    ecx,0xff
10002987:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
1000298e:	29 d9                	sub    ecx,ebx
10002990:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10002994:	0f af d1             	imul   edx,ecx
10002997:	b9 ff 00 00 00       	mov    ecx,0xff
1000299c:	01 d0                	add    eax,edx
1000299e:	0f af c7             	imul   eax,edi
100029a1:	99                   	cdq    
100029a2:	f7 f9                	idiv   ecx
100029a4:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029a8:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029ac:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029b4:	01 f0                	add    eax,esi
100029b6:	89 ce                	mov    esi,ecx
100029b8:	0f af c7             	imul   eax,edi
100029bb:	99                   	cdq    
100029bc:	f7 f9                	idiv   ecx
100029be:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029c2:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100029c6:	0f af cb             	imul   ecx,ebx
100029c9:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029cd:	0f af df             	imul   ebx,edi
100029d0:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
100029d8:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
100029dc:	01 c8                	add    eax,ecx
100029de:	0f af c7             	imul   eax,edi
100029e1:	99                   	cdq    
100029e2:	f7 fe                	idiv   esi
100029e4:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
100029e8:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
100029f0:	e9 51 fe ff ff       	jmp    10002846 <ssfn_render+0x1577>
100029f5:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
100029fd:	e9 b7 fd ff ff       	jmp    100027b9 <ssfn_render+0x14ea>
10002a02:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a07:	74 30                	je     10002a39 <ssfn_render+0x176a>
10002a09:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a0d:	31 d2                	xor    edx,edx
10002a0f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a13:	31 d2                	xor    edx,edx
10002a15:	89 c1                	mov    ecx,eax
10002a17:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a1b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a1f:	31 d2                	xor    edx,edx
10002a21:	89 c6                	mov    esi,eax
10002a23:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a27:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a2b:	31 d2                	xor    edx,edx
10002a2d:	89 c3                	mov    ebx,eax
10002a2f:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a33:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a37:	eb 1c                	jmp    10002a55 <ssfn_render+0x1786>
10002a39:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a3d:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a41:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a45:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a49:	c1 e9 08             	shr    ecx,0x8
10002a4c:	c1 ee 08             	shr    esi,0x8
10002a4f:	c1 eb 08             	shr    ebx,0x8
10002a52:	c1 e8 08             	shr    eax,0x8
10002a55:	83 f8 0f             	cmp    eax,0xf
10002a58:	0f 86 8d 00 00 00    	jbe    10002aeb <ssfn_render+0x181c>
10002a5e:	89 ca                	mov    edx,ecx
10002a60:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002a66:	76 05                	jbe    10002a6d <ssfn_render+0x179e>
10002a68:	ba ff 00 00 00       	mov    edx,0xff
10002a6d:	b9 10 00 00 00       	mov    ecx,0x10
10002a72:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002a79:	d3 e2                	shl    edx,cl
10002a7b:	3d ff 00 00 00       	cmp    eax,0xff
10002a80:	89 d1                	mov    ecx,edx
10002a82:	76 05                	jbe    10002a89 <ssfn_render+0x17ba>
10002a84:	b8 ff 00 00 00       	mov    eax,0xff
10002a89:	c1 e0 18             	shl    eax,0x18
10002a8c:	09 c8                	or     eax,ecx
10002a8e:	81 fe ff 00 00 00    	cmp    esi,0xff
10002a94:	76 05                	jbe    10002a9b <ssfn_render+0x17cc>
10002a96:	be ff 00 00 00       	mov    esi,0xff
10002a9b:	c1 e6 08             	shl    esi,0x8
10002a9e:	09 f0                	or     eax,esi
10002aa0:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002aa6:	76 05                	jbe    10002aad <ssfn_render+0x17de>
10002aa8:	bb ff 00 00 00       	mov    ebx,0xff
10002aad:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ab1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002ab5:	d3 e3                	shl    ebx,cl
10002ab7:	09 c3                	or     ebx,eax
10002ab9:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002ac0:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002ac3:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002ac7:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002acb:	75 1e                	jne    10002aeb <ssfn_render+0x181c>
10002acd:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002ad4:	7e 07                	jle    10002add <ssfn_render+0x180e>
10002ad6:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002add:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002ae1:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002ae5:	7d 04                	jge    10002aeb <ssfn_render+0x181c>
10002ae7:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002aeb:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002aef:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002af3:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002af7:	0f 85 ca fb ff ff    	jne    100026c7 <ssfn_render+0x13f8>
10002afd:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b04:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b08:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b0c:	25 fc ff 00 00       	and    eax,0xfffc
10002b11:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b18:	e9 10 fb ff ff       	jmp    1000262d <ssfn_render+0x135e>
10002b1d:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b24:	0f 84 90 01 00 00    	je     10002cba <ssfn_render+0x19eb>
10002b2a:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b32:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b39:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b3d:	40                   	inc    eax
10002b3e:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b42:	29 c7                	sub    edi,eax
10002b44:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b48:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b4c:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b50:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b54:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b58:	7e 09                	jle    10002b63 <ssfn_render+0x1894>
10002b5a:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002b5e:	40                   	inc    eax
10002b5f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b63:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002b6a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b71:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002b75:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002b79:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002b7d:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002b81:	0f af c2             	imul   eax,edx
10002b84:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002b88:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002b8c:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002b90:	03 07                	add    eax,DWORD PTR [edi]
10002b92:	89 c7                	mov    edi,eax
10002b94:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002b98:	c1 e0 18             	shl    eax,0x18
10002b9b:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002b9f:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002ba3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002ba7:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002bac:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002bb0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002bb4:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bb8:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002bbc:	0f 8e f8 00 00 00    	jle    10002cba <ssfn_render+0x19eb>
10002bc2:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bc9:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002bd0:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bd4:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002bd8:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002bdc:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002be0:	39 d0                	cmp    eax,edx
10002be2:	0f 8d d2 00 00 00    	jge    10002cba <ssfn_render+0x19eb>
10002be8:	31 db                	xor    ebx,ebx
10002bea:	85 c0                	test   eax,eax
10002bec:	79 23                	jns    10002c11 <ssfn_render+0x1942>
10002bee:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bf5:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002bf9:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002bfd:	25 fc ff 00 00       	and    eax,0xfffc
10002c02:	01 c7                	add    edi,eax
10002c04:	eb aa                	jmp    10002bb0 <ssfn_render+0x18e1>
10002c06:	85 c0                	test   eax,eax
10002c08:	79 20                	jns    10002c2a <ssfn_render+0x195b>
10002c0a:	43                   	inc    ebx
10002c0b:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c0f:	7c dd                	jl     10002bee <ssfn_render+0x191f>
10002c11:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c18:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c1c:	01 d8                	add    eax,ebx
10002c1e:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c22:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c26:	7c de                	jl     10002c06 <ssfn_render+0x1937>
10002c28:	eb c4                	jmp    10002bee <ssfn_render+0x191f>
10002c2a:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c2e:	7e 06                	jle    10002c36 <ssfn_render+0x1967>
10002c30:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c34:	7f d4                	jg     10002c0a <ssfn_render+0x193b>
10002c36:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c39:	b8 10 00 00 00       	mov    eax,0x10
10002c3e:	0f b6 f6             	movzx  esi,dh
10002c41:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c45:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c49:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c4d:	89 d0                	mov    eax,edx
10002c4f:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c53:	d3 e8                	shr    eax,cl
10002c55:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c59:	0f b6 c0             	movzx  eax,al
10002c5c:	d3 ea                	shr    edx,cl
10002c5e:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002c62:	0f b6 f2             	movzx  esi,dl
10002c65:	29 c1                	sub    ecx,eax
10002c67:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002c6b:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002c70:	29 f2                	sub    edx,esi
10002c72:	c1 f9 08             	sar    ecx,0x8
10002c75:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002c7a:	01 c8                	add    eax,ecx
10002c7c:	c1 fa 08             	sar    edx,0x8
10002c7f:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c83:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002c87:	d3 e0                	shl    eax,cl
10002c89:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002c8d:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002c91:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002c95:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c99:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002c9e:	d3 e6                	shl    esi,cl
10002ca0:	c1 fa 08             	sar    edx,0x8
10002ca3:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002ca7:	c1 e2 08             	shl    edx,0x8
10002caa:	09 d0                	or     eax,edx
10002cac:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002cb0:	09 c6                	or     esi,eax
10002cb2:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002cb5:	e9 50 ff ff ff       	jmp    10002c0a <ssfn_render+0x193b>
10002cba:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002cc1:	0f 84 80 01 00 00    	je     10002e47 <ssfn_render+0x1b78>
10002cc7:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002ccb:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002ccf:	d1 fa                	sar    edx,1
10002cd1:	40                   	inc    eax
10002cd2:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002cd6:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002cda:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002cde:	7e 09                	jle    10002ce9 <ssfn_render+0x1a1a>
10002ce0:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002ce4:	40                   	inc    eax
10002ce5:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002ce9:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002cf0:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002cf7:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002cfb:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002cff:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d03:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d07:	01 d0                	add    eax,edx
10002d09:	0f af c1             	imul   eax,ecx
10002d0c:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d10:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d14:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d18:	03 03                	add    eax,DWORD PTR [ebx]
10002d1a:	89 c7                	mov    edi,eax
10002d1c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d20:	c1 e0 18             	shl    eax,0x18
10002d23:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d27:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d2f:	01 d0                	add    eax,edx
10002d31:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d35:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d3a:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d3e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d42:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d46:	0f 8e fb 00 00 00    	jle    10002e47 <ssfn_render+0x1b78>
10002d4c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d53:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d57:	01 d8                	add    eax,ebx
10002d59:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d60:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d64:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002d68:	39 d0                	cmp    eax,edx
10002d6a:	0f 8d d7 00 00 00    	jge    10002e47 <ssfn_render+0x1b78>
10002d70:	31 f6                	xor    esi,esi
10002d72:	85 c0                	test   eax,eax
10002d74:	0f 89 ad 00 00 00    	jns    10002e27 <ssfn_render+0x1b58>
10002d7a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d81:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002d85:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002d89:	25 fc ff 00 00       	and    eax,0xfffc
10002d8e:	01 c7                	add    edi,eax
10002d90:	eb ac                	jmp    10002d3e <ssfn_render+0x1a6f>
10002d92:	85 c0                	test   eax,eax
10002d94:	0f 88 82 00 00 00    	js     10002e1c <ssfn_render+0x1b4d>
10002d9a:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002d9d:	b8 10 00 00 00       	mov    eax,0x10
10002da2:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002da6:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002daa:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002dae:	89 d8                	mov    eax,ebx
10002db0:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002db4:	d3 e8                	shr    eax,cl
10002db6:	0f b6 cf             	movzx  ecx,bh
10002db9:	0f b6 c0             	movzx  eax,al
10002dbc:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002dc0:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002dc4:	d3 eb                	shr    ebx,cl
10002dc6:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002dca:	0f b6 db             	movzx  ebx,bl
10002dcd:	29 c1                	sub    ecx,eax
10002dcf:	29 da                	sub    edx,ebx
10002dd1:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002dd6:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002ddb:	c1 f9 08             	sar    ecx,0x8
10002dde:	c1 fa 08             	sar    edx,0x8
10002de1:	01 c8                	add    eax,ecx
10002de3:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002de7:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002deb:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002def:	d3 e0                	shl    eax,cl
10002df1:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002df5:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002df9:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002dfe:	c1 fa 08             	sar    edx,0x8
10002e01:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e05:	c1 e2 08             	shl    edx,0x8
10002e08:	09 d0                	or     eax,edx
10002e0a:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e0d:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e11:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e15:	d3 e2                	shl    edx,cl
10002e17:	09 c2                	or     edx,eax
10002e19:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e1c:	46                   	inc    esi
10002e1d:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e21:	0f 8c 53 ff ff ff    	jl     10002d7a <ssfn_render+0x1aab>
10002e27:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e2e:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e32:	01 f0                	add    eax,esi
10002e34:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e38:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e3c:	0f 8c 50 ff ff ff    	jl     10002d92 <ssfn_render+0x1ac3>
10002e42:	e9 33 ff ff ff       	jmp    10002d7a <ssfn_render+0x1aab>
10002e47:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e4e:	74 04                	je     10002e54 <ssfn_render+0x1b85>
10002e50:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e54:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e58:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002e5c:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002e62:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e69:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002e6d:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002e74:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002e77:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002e7b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002e81:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002e85:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002e8a:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002e8e:	99                   	cdq    
10002e8f:	f7 f9                	idiv   ecx
10002e91:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002e95:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002e9b:	25 80 00 00 00       	and    eax,0x80
10002ea0:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002ea4:	0f 85 f7 01 00 00    	jne    100030a1 <ssfn_render+0x1dd2>
10002eaa:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ead:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002eb1:	0f 84 ea 01 00 00    	je     100030a1 <ssfn_render+0x1dd2>
10002eb7:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002ebe:	83 ec 0c             	sub    esp,0xc
10002ec1:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002ec8:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002ecf:	51                   	push   ecx
10002ed0:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002ed7:	e8 53 d9 ff ff       	call   1000082f <_ssfn_c>
10002edc:	83 c4 10             	add    esp,0x10
10002edf:	85 c0                	test   eax,eax
10002ee1:	0f 84 ba 01 00 00    	je     100030a1 <ssfn_render+0x1dd2>
10002ee7:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002eef:	0f 86 ac 01 00 00    	jbe    100030a1 <ssfn_render+0x1dd2>
10002ef5:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002efb:	8d 48 06             	lea    ecx,[eax+0x6]
10002efe:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f04:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f08:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f0c:	0f 8e 8f 01 00 00    	jle    100030a1 <ssfn_render+0x1dd2>
10002f12:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f14:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f18:	8a 18                	mov    bl,BYTE PTR [eax]
10002f1a:	83 e3 40             	and    ebx,0x40
10002f1d:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f22:	75 14                	jne    10002f38 <ssfn_render+0x1c69>
10002f24:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f28:	75 0e                	jne    10002f38 <ssfn_render+0x1c69>
10002f2a:	80 fb 01             	cmp    bl,0x1
10002f2d:	19 c0                	sbb    eax,eax
10002f2f:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f33:	e9 60 01 00 00       	jmp    10003098 <ssfn_render+0x1dc9>
10002f38:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f3c:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f40:	c1 e6 10             	shl    esi,0x10
10002f43:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f47:	84 db                	test   bl,bl
10002f49:	74 08                	je     10002f53 <ssfn_render+0x1c84>
10002f4b:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f4e:	83 c1 06             	add    ecx,0x6
10002f51:	eb 0c                	jmp    10002f5f <ssfn_render+0x1c90>
10002f53:	c1 e2 08             	shl    edx,0x8
10002f56:	83 c1 05             	add    ecx,0x5
10002f59:	89 d0                	mov    eax,edx
10002f5b:	09 f0                	or     eax,esi
10002f5d:	09 c7                	or     edi,eax
10002f5f:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f62:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002f66:	01 f8                	add    eax,edi
10002f68:	8a 10                	mov    dl,BYTE PTR [eax]
10002f6a:	88 d3                	mov    bl,dl
10002f6c:	83 e3 e0             	and    ebx,0xffffffe0
10002f6f:	80 fb c0             	cmp    bl,0xc0
10002f72:	0f 85 20 01 00 00    	jne    10003098 <ssfn_render+0x1dc9>
10002f78:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002f7c:	c1 e2 08             	shl    edx,0x8
10002f7f:	83 c0 02             	add    eax,0x2
10002f82:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002f88:	09 da                	or     edx,ebx
10002f8a:	8d 72 01             	lea    esi,[edx+0x1]
10002f8d:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002f91:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002f98:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002f9c:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fa1:	0f 84 f1 00 00 00    	je     10003098 <ssfn_render+0x1dc9>
10002fa7:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fab:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002fae:	c1 e3 10             	shl    ebx,0x10
10002fb1:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002fb7:	09 d3                	or     ebx,edx
10002fb9:	39 de                	cmp    esi,ebx
10002fbb:	0f 82 cf 00 00 00    	jb     10003090 <ssfn_render+0x1dc1>
10002fc1:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10002fc4:	89 d7                	mov    edi,edx
10002fc6:	c1 e7 10             	shl    edi,0x10
10002fc9:	81 e7 00 00 0f 00    	and    edi,0xf0000
10002fcf:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10002fd3:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10002fd7:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10002fdb:	39 fe                	cmp    esi,edi
10002fdd:	0f 87 ad 00 00 00    	ja     10003090 <ssfn_render+0x1dc1>
10002fe3:	29 de                	sub    esi,ebx
10002fe5:	c0 ea 04             	shr    dl,0x4
10002fe8:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
10002fef:	0f b6 d2             	movzx  edx,dl
10002ff2:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002ff6:	89 d3                	mov    ebx,edx
10002ff8:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10002ffc:	c1 e3 10             	shl    ebx,0x10
10002fff:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10003002:	09 da                	or     edx,ebx
10003004:	c0 e8 04             	shr    al,0x4
10003007:	c1 e0 18             	shl    eax,0x18
1000300a:	09 c2                	or     edx,eax
1000300c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003010:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
10003013:	01 c2                	add    edx,eax
10003015:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003018:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
1000301c:	39 d7                	cmp    edi,edx
1000301e:	76 78                	jbe    10003098 <ssfn_render+0x1dc9>
10003020:	8a 1a                	mov    bl,BYTE PTR [edx]
10003022:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10003029:	89 de                	mov    esi,ebx
1000302b:	83 e6 7f             	and    esi,0x7f
1000302e:	39 c6                	cmp    esi,eax
10003030:	73 1d                	jae    1000304f <ssfn_render+0x1d80>
10003032:	48                   	dec    eax
10003033:	bb 02 00 00 00       	mov    ebx,0x2
10003038:	29 f0                	sub    eax,esi
1000303a:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
10003041:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10003044:	84 c0                	test   al,al
10003046:	78 03                	js     1000304b <ssfn_render+0x1d7c>
10003048:	8d 58 02             	lea    ebx,[eax+0x2]
1000304b:	01 da                	add    edx,ebx
1000304d:	eb cd                	jmp    1000301c <ssfn_render+0x1d4d>
1000304f:	be 01 00 00 00       	mov    esi,0x1
10003054:	84 db                	test   bl,bl
10003056:	78 03                	js     1000305b <ssfn_render+0x1d8c>
10003058:	8d 70 01             	lea    esi,[eax+0x1]
1000305b:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
1000305f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003063:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10003068:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
1000306c:	99                   	cdq    
1000306d:	f7 fb                	idiv   ebx
1000306f:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
10003074:	74 0d                	je     10003083 <ssfn_render+0x1db4>
10003076:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000307d:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
10003081:	eb 15                	jmp    10003098 <ssfn_render+0x1dc9>
10003083:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
1000308a:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
1000308e:	eb 08                	jmp    10003098 <ssfn_render+0x1dc9>
10003090:	83 c0 08             	add    eax,0x8
10003093:	e9 00 ff ff ff       	jmp    10002f98 <ssfn_render+0x1cc9>
10003098:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
1000309c:	e9 5d fe ff ff       	jmp    10002efe <ssfn_render+0x1c2f>
100030a1:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030a8:	eb 73                	jmp    1000311d <ssfn_render+0x1e4e>
100030aa:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030b5:	e9 50 e4 ff ff       	jmp    1000150a <ssfn_render+0x23b>
100030ba:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030c1:	57                   	push   edi
100030c2:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100030c9:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100030d0:	e8 5a d7 ff ff       	call   1000082f <_ssfn_c>
100030d5:	5f                   	pop    edi
100030d6:	85 c0                	test   eax,eax
100030d8:	0f 84 25 e4 ff ff    	je     10001503 <ssfn_render+0x234>
100030de:	e9 a2 e4 ff ff       	jmp    10001585 <ssfn_render+0x2b6>
100030e3:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100030e6:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
100030ea:	75 0c                	jne    100030f8 <ssfn_render+0x1e29>
100030ec:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100030f3:	e9 3b e4 ff ff       	jmp    10001533 <ssfn_render+0x264>
100030f8:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030ff:	57                   	push   edi
10003100:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003107:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000310e:	e8 1c d7 ff ff       	call   1000082f <_ssfn_c>
10003113:	59                   	pop    ecx
10003114:	85 c0                	test   eax,eax
10003116:	74 d4                	je     100030ec <ssfn_render+0x1e1d>
10003118:	e9 68 e4 ff ff       	jmp    10001585 <ssfn_render+0x2b6>
1000311d:	81 c4 dc 05 01 00    	add    esp,0x105dc
10003123:	89 c8                	mov    eax,ecx
10003125:	5b                   	pop    ebx
10003126:	5e                   	pop    esi
10003127:	5f                   	pop    edi
10003128:	5d                   	pop    ebp
10003129:	c3                   	ret    

1000312a <ssfn_bbox>:
1000312a:	55                   	push   ebp
1000312b:	57                   	push   edi
1000312c:	56                   	push   esi
1000312d:	53                   	push   ebx
1000312e:	83 ec 3c             	sub    esp,0x3c
10003131:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
10003136:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
1000313a:	0f 94 c0             	sete   al
1000313d:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
10003142:	0f 94 c2             	sete   dl
10003145:	09 d0                	or     eax,edx
10003147:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
1000314c:	0f 94 c2             	sete   dl
1000314f:	09 d0                	or     eax,edx
10003151:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
10003156:	0f 94 c2             	sete   dl
10003159:	09 d0                	or     eax,edx
1000315b:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
10003160:	0f 94 c2             	sete   dl
10003163:	08 d0                	or     al,dl
10003165:	0f 85 7c 01 00 00    	jne    100032e7 <ssfn_bbox+0x1bd>
1000316b:	85 db                	test   ebx,ebx
1000316d:	0f 84 74 01 00 00    	je     100032e7 <ssfn_bbox+0x1bd>
10003173:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003177:	31 f6                	xor    esi,esi
10003179:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000317f:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003183:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003189:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000318d:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003193:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10003197:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000319d:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031a1:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031a4:	0f 84 42 01 00 00    	je     100032ec <ssfn_bbox+0x1c2>
100031aa:	8d 54 24 18          	lea    edx,[esp+0x18]
100031ae:	b9 06 00 00 00       	mov    ecx,0x6
100031b3:	89 d7                	mov    edi,edx
100031b5:	89 f0                	mov    eax,esi
100031b7:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100031c1:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100031c3:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100031cb:	31 ff                	xor    edi,edi
100031cd:	bd 01 00 00 00       	mov    ebp,0x1
100031d2:	50                   	push   eax
100031d3:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
100031d7:	8d 44 24 20          	lea    eax,[esp+0x20]
100031db:	50                   	push   eax
100031dc:	53                   	push   ebx
100031dd:	e8 fc ff ff ff       	call   100031de <ssfn_bbox+0xb4>	100031de: R_386_PC32	ssfn_render
100031e2:	83 c4 10             	add    esp,0x10
100031e5:	89 c6                	mov    esi,eax
100031e7:	85 c0                	test   eax,eax
100031e9:	74 6f                	je     1000325a <ssfn_bbox+0x130>
100031eb:	0f 88 fb 00 00 00    	js     100032ec <ssfn_bbox+0x1c2>
100031f1:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100031f7:	85 c0                	test   eax,eax
100031f9:	0f 84 ed 00 00 00    	je     100032ec <ssfn_bbox+0x1c2>
100031ff:	85 ed                	test   ebp,ebp
10003201:	74 0b                	je     1000320e <ssfn_bbox+0xe4>
10003203:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003209:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000320e:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003212:	74 12                	je     10003226 <ssfn_bbox+0xfc>
10003214:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
1000321a:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000321e:	7d 2f                	jge    1000324f <ssfn_bbox+0x125>
10003220:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003224:	eb 29                	jmp    1000324f <ssfn_bbox+0x125>
10003226:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003229:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
1000322e:	39 cd                	cmp    ebp,ecx
10003230:	7d 05                	jge    10003237 <ssfn_bbox+0x10d>
10003232:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
10003237:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
1000323b:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
10003240:	84 d2                	test   dl,dl
10003242:	75 04                	jne    10003248 <ssfn_bbox+0x11e>
10003244:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003248:	01 ca                	add    edx,ecx
1000324a:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
1000324f:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10003253:	31 ed                	xor    ebp,ebp
10003255:	e9 78 ff ff ff       	jmp    100031d2 <ssfn_bbox+0xa8>
1000325a:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
10003261:	74 23                	je     10003286 <ssfn_bbox+0x15c>
10003263:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003266:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
1000326a:	75 1a                	jne    10003286 <ssfn_bbox+0x15c>
1000326c:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
10003272:	b9 04 00 00 00       	mov    ecx,0x4
10003277:	99                   	cdq    
10003278:	f7 f9                	idiv   ecx
1000327a:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
1000327f:	29 f8                	sub    eax,edi
10003281:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
10003286:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
1000328c:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003290:	74 29                	je     100032bb <ssfn_bbox+0x191>
10003292:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003297:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
1000329b:	89 01                	mov    DWORD PTR [ecx],eax
1000329d:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032a1:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032a7:	89 01                	mov    DWORD PTR [ecx],eax
100032a9:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032ad:	89 38                	mov    DWORD PTR [eax],edi
100032af:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032b3:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032b7:	89 38                	mov    DWORD PTR [eax],edi
100032b9:	eb 31                	jmp    100032ec <ssfn_bbox+0x1c2>
100032bb:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100032c0:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100032c4:	89 07                	mov    DWORD PTR [edi],eax
100032c6:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
100032cb:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
100032cf:	89 07                	mov    DWORD PTR [edi],eax
100032d1:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032d5:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100032db:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032df:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100032e5:	eb 05                	jmp    100032ec <ssfn_bbox+0x1c2>
100032e7:	be fc ff ff ff       	mov    esi,0xfffffffc
100032ec:	83 c4 3c             	add    esp,0x3c
100032ef:	89 f0                	mov    eax,esi
100032f1:	5b                   	pop    ebx
100032f2:	5e                   	pop    esi
100032f3:	5f                   	pop    edi
100032f4:	5d                   	pop    ebp
100032f5:	c3                   	ret    

100032f6 <ssfn_text>:
100032f6:	55                   	push   ebp
100032f7:	57                   	push   edi
100032f8:	56                   	push   esi
100032f9:	53                   	push   ebx
100032fa:	83 ec 1c             	sub    esp,0x1c
100032fd:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10003301:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003305:	85 f6                	test   esi,esi
10003307:	0f 84 b2 00 00 00    	je     100033bf <ssfn_text+0xc9>
1000330d:	85 ed                	test   ebp,ebp
1000330f:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003314:	0f 84 a5 00 00 00    	je     100033bf <ssfn_text+0xc9>
1000331a:	83 ec 0c             	sub    esp,0xc
1000331d:	6a 18                	push   0x18
1000331f:	e8 fc ff ff ff       	call   10003320 <ssfn_text+0x2a>	10003320: R_386_PC32	malloc
10003324:	83 c4 10             	add    esp,0x10
10003327:	89 c3                	mov    ebx,eax
10003329:	85 c0                	test   eax,eax
1000332b:	0f 84 8e 00 00 00    	je     100033bf <ssfn_text+0xc9>
10003331:	31 c0                	xor    eax,eax
10003333:	b9 06 00 00 00       	mov    ecx,0x6
10003338:	89 df                	mov    edi,ebx
1000333a:	80 3e 00             	cmp    BYTE PTR [esi],0x0
1000333d:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000333f:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10003343:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003346:	74 79                	je     100033c1 <ssfn_text+0xcb>
10003348:	8d 43 0c             	lea    eax,[ebx+0xc]
1000334b:	52                   	push   edx
1000334c:	52                   	push   edx
1000334d:	50                   	push   eax
1000334e:	8d 43 0a             	lea    eax,[ebx+0xa]
10003351:	50                   	push   eax
10003352:	8d 43 06             	lea    eax,[ebx+0x6]
10003355:	50                   	push   eax
10003356:	8d 43 04             	lea    eax,[ebx+0x4]
10003359:	50                   	push   eax
1000335a:	56                   	push   esi
1000335b:	55                   	push   ebp
1000335c:	e8 fc ff ff ff       	call   1000335d <ssfn_text+0x67>	1000335d: R_386_PC32	ssfn_bbox
10003361:	83 c4 20             	add    esp,0x20
10003364:	85 c0                	test   eax,eax
10003366:	75 59                	jne    100033c1 <ssfn_text+0xcb>
10003368:	83 ec 0c             	sub    esp,0xc
1000336b:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
1000336f:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
10003373:	0f af c8             	imul   ecx,eax
10003376:	c1 e1 02             	shl    ecx,0x2
10003379:	51                   	push   ecx
1000337a:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
1000337e:	e8 fc ff ff ff       	call   1000337f <ssfn_text+0x89>	1000337f: R_386_PC32	malloc
10003383:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003387:	89 c7                	mov    edi,eax
10003389:	89 03                	mov    DWORD PTR [ebx],eax
1000338b:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
1000338f:	83 c4 10             	add    esp,0x10
10003392:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003394:	50                   	push   eax
10003395:	56                   	push   esi
10003396:	53                   	push   ebx
10003397:	55                   	push   ebp
10003398:	e8 fc ff ff ff       	call   10003399 <ssfn_text+0xa3>	10003399: R_386_PC32	ssfn_render
1000339d:	83 c4 10             	add    esp,0x10
100033a0:	85 c0                	test   eax,eax
100033a2:	7e 04                	jle    100033a8 <ssfn_text+0xb2>
100033a4:	01 c6                	add    esi,eax
100033a6:	eb ec                	jmp    10003394 <ssfn_text+0x9e>
100033a8:	74 17                	je     100033c1 <ssfn_text+0xcb>
100033aa:	83 ec 0c             	sub    esp,0xc
100033ad:	ff 33                	push   DWORD PTR [ebx]
100033af:	e8 fc ff ff ff       	call   100033b0 <ssfn_text+0xba>	100033b0: R_386_PC32	free
100033b4:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033b7:	e8 fc ff ff ff       	call   100033b8 <ssfn_text+0xc2>	100033b8: R_386_PC32	free
100033bc:	83 c4 10             	add    esp,0x10
100033bf:	31 db                	xor    ebx,ebx
100033c1:	83 c4 1c             	add    esp,0x1c
100033c4:	89 d8                	mov    eax,ebx
100033c6:	5b                   	pop    ebx
100033c7:	5e                   	pop    esi
100033c8:	5f                   	pop    edi
100033c9:	5d                   	pop    ebp
100033ca:	c3                   	ret    
100033cb:	90                   	nop

100033cc <NIContext::drvPutpixel4(int, int, unsigned int)>:
100033cc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100033d0:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
100033d6:	8b 10                	mov    edx,DWORD PTR [eax]
100033d8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100033dc:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
100033df:	90                   	nop

100033e0 <NIContext::drvDarken4(int, int, int)>:
100033e0:	55                   	push   ebp
100033e1:	57                   	push   edi
100033e2:	56                   	push   esi
100033e3:	53                   	push   ebx
100033e4:	83 ec 20             	sub    esp,0x20
100033e7:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100033eb:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
100033ef:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100033f3:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100033f7:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
100033fd:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10003401:	8b 10                	mov    edx,DWORD PTR [eax]
10003403:	56                   	push   esi
10003404:	53                   	push   ebx
10003405:	50                   	push   eax
10003406:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003409:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000340d:	89 c2                	mov    edx,eax
1000340f:	0f b6 ec             	movzx  ebp,ah
10003412:	c1 ea 10             	shr    edx,0x10
10003415:	0f af e9             	imul   ebp,ecx
10003418:	0f b6 d2             	movzx  edx,dl
1000341b:	0f b6 c0             	movzx  eax,al
1000341e:	0f af d1             	imul   edx,ecx
10003421:	0f af c1             	imul   eax,ecx
10003424:	c1 ea 07             	shr    edx,0x7
10003427:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
1000342d:	c1 e8 07             	shr    eax,0x7
10003430:	8b 39                	mov    edi,DWORD PTR [ecx]
10003432:	c1 e2 10             	shl    edx,0x10
10003435:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003439:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
1000343d:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10003441:	c1 ed 07             	shr    ebp,0x7
10003444:	c1 e5 08             	shl    ebp,0x8
10003447:	09 ea                	or     edx,ebp
10003449:	09 c2                	or     edx,eax
1000344b:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000344f:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
10003452:	83 c4 2c             	add    esp,0x2c
10003455:	5b                   	pop    ebx
10003456:	5e                   	pop    esi
10003457:	5f                   	pop    edi
10003458:	5d                   	pop    ebp
10003459:	ff e0                	jmp    eax
1000345b:	90                   	nop

1000345c <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
1000345c:	55                   	push   ebp
1000345d:	b9 00 40 00 00       	mov    ecx,0x4000
10003462:	57                   	push   edi
10003463:	b0 ff                	mov    al,0xff
10003465:	56                   	push   esi
10003466:	53                   	push   ebx
10003467:	83 ec 3c             	sub    esp,0x3c
1000346a:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
1000346e:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10003472:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
10003475:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10003479:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000347b:	85 db                	test   ebx,ebx
1000347d:	75 10                	jne    1000348f <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
1000347f:	83 ec 0c             	sub    esp,0xc
10003482:	68 b0 40 00 10       	push   0x100040b0	10003483: R_386_32	.text
10003487:	e8 fc ff ff ff       	call   10003488 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	10003488: R_386_PC32	KePanic(char const*)
1000348c:	83 c4 10             	add    esp,0x10
1000348f:	50                   	push   eax
10003490:	50                   	push   eax
10003491:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003495:	50                   	push   eax
10003496:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000349a:	50                   	push   eax
1000349b:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000349f:	50                   	push   eax
100034a0:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034a4:	50                   	push   eax
100034a5:	56                   	push   esi
100034a6:	68 00 00 00 00       	push   0x0	100034a7: R_386_32	ssfn_ctx
100034ab:	e8 fc ff ff ff       	call   100034ac <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034ac: R_386_PC32	ssfn_bbox
100034b0:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034b3:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034bb:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100034bf:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
100034c7:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100034cb:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
100034d0:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
100034d4:	0d 00 00 00 ff       	or     eax,0xff000000
100034d9:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100034dd:	83 c4 1c             	add    esp,0x1c
100034e0:	56                   	push   esi
100034e1:	8d 44 24 20          	lea    eax,[esp+0x20]
100034e5:	50                   	push   eax
100034e6:	68 00 00 00 00       	push   0x0	100034e7: R_386_32	ssfn_ctx
100034eb:	e8 fc ff ff ff       	call   100034ec <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	100034ec: R_386_PC32	ssfn_render
100034f0:	83 c4 10             	add    esp,0x10
100034f3:	89 03                	mov    DWORD PTR [ebx],eax
100034f5:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100034f9:	31 db                	xor    ebx,ebx
100034fb:	89 f0                	mov    eax,esi
100034fd:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
10003501:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003505:	7e 3f                	jle    10003546 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003507:	31 ff                	xor    edi,edi
10003509:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000350e:	39 f8                	cmp    eax,edi
10003510:	7e 2c                	jle    1000353e <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
10003512:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003515:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003518:	83 f8 ff             	cmp    eax,0xffffffff
1000351b:	74 1d                	je     1000353a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
1000351d:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
10003523:	25 ff ff ff 00       	and    eax,0xffffff
10003528:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000352a:	50                   	push   eax
1000352b:	56                   	push   esi
1000352c:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003530:	01 f8                	add    eax,edi
10003532:	50                   	push   eax
10003533:	52                   	push   edx
10003534:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003537:	83 c4 10             	add    esp,0x10
1000353a:	43                   	inc    ebx
1000353b:	47                   	inc    edi
1000353c:	eb cb                	jmp    10003509 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
1000353e:	29 c3                	sub    ebx,eax
10003540:	46                   	inc    esi
10003541:	83 c3 40             	add    ebx,0x40
10003544:	eb b5                	jmp    100034fb <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
10003546:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000354b:	83 c4 3c             	add    esp,0x3c
1000354e:	5b                   	pop    ebx
1000354f:	5e                   	pop    esi
10003550:	5f                   	pop    edi
10003551:	5d                   	pop    ebp
10003552:	c3                   	ret    
10003553:	90                   	nop

10003554 <NIContext::~NIContext()>:
10003554:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003558: R_386_32	ssfn_ctx
1000355c:	e9 00 db ff ff       	jmp    10001061 <ssfn_free>
10003561:	90                   	nop

10003562 <NIContext::NIContext(Video*, int, int, int, int)>:
10003562:	55                   	push   ebp
10003563:	ba 00 00 00 00       	mov    edx,0x0	10003564: R_386_32	ssfn_ctx
10003568:	57                   	push   edi
10003569:	b9 72 3d 00 00       	mov    ecx,0x3d72
1000356e:	56                   	push   esi
1000356f:	89 d7                	mov    edi,edx
10003571:	53                   	push   ebx
10003572:	81 ec 48 02 00 00    	sub    esp,0x248
10003578:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
1000357f:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
10003586:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
1000358c:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
10003593:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
10003599:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035a0:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035a6:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035ad:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035b3:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035ba:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100035c0:	31 c0                	xor    eax,eax
100035c2:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100035c4:	68 00 40 00 00       	push   0x4000
100035c9:	e8 fc ff ff ff       	call   100035ca <NIContext::NIContext(Video*, int, int, int, int)+0x68>	100035ca: R_386_PC32	malloc
100035ce:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
100035d8:	89 03                	mov    DWORD PTR [ebx],eax
100035da:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100035e1:	e8 fc ff ff ff       	call   100035e2 <NIContext::NIContext(Video*, int, int, int, int)+0x80>	100035e2: R_386_PC32	malloc
100035e6:	83 c4 0c             	add    esp,0xc
100035e9:	89 c6                	mov    esi,eax
100035eb:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100035ed: R_386_32	kernelProcess
100035f1:	68 c9 40 00 10       	push   0x100040c9	100035f2: R_386_32	.text
100035f6:	50                   	push   eax
100035f7:	e8 fc ff ff ff       	call   100035f8 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	100035f8: R_386_PC32	Directory::Directory(char const*, Process*)
100035fc:	83 c4 10             	add    esp,0x10
100035ff:	85 f6                	test   esi,esi
10003601:	75 10                	jne    10003613 <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
10003603:	83 ec 0c             	sub    esp,0xc
10003606:	68 dd 40 00 10       	push   0x100040dd	10003607: R_386_32	.text
1000360b:	e8 fc ff ff ff       	call   1000360c <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	1000360c: R_386_PC32	KePanic(char const*)
10003610:	83 c4 10             	add    esp,0x10
10003613:	83 ec 0c             	sub    esp,0xc
10003616:	56                   	push   esi
10003617:	e8 fc ff ff ff       	call   10003618 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003618: R_386_PC32	Directory::open()
1000361c:	83 c4 10             	add    esp,0x10
1000361f:	85 c0                	test   eax,eax
10003621:	75 e0                	jne    10003603 <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
10003623:	83 ec 0c             	sub    esp,0xc
10003626:	8b 06                	mov    eax,DWORD PTR [esi]
10003628:	8d 4c 24 20          	lea    ecx,[esp+0x20]
1000362c:	51                   	push   ecx
1000362d:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003634:	52                   	push   edx
10003635:	6a 00                	push   0x0
10003637:	68 10 01 00 00       	push   0x110
1000363c:	56                   	push   esi
1000363d:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003640:	83 c4 20             	add    esp,0x20
10003643:	85 c0                	test   eax,eax
10003645:	0f 85 a0 01 00 00    	jne    100037eb <NIContext::NIContext(Video*, int, int, int, int)+0x289>
1000364b:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
10003653:	0f 85 92 01 00 00    	jne    100037eb <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003659:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
10003660:	83 c9 ff             	or     ecx,0xffffffff
10003663:	83 ec 0c             	sub    esp,0xc
10003666:	89 ef                	mov    edi,ebp
10003668:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000366a:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
10003670:	89 ca                	mov    edx,ecx
10003672:	f7 d2                	not    edx
10003674:	52                   	push   edx
10003675:	e8 fc ff ff ff       	call   10003676 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	10003676: R_386_PC32	malloc
1000367a:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
1000367e:	47                   	inc    edi
1000367f:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
10003685:	5a                   	pop    edx
10003686:	59                   	pop    ecx
10003687:	55                   	push   ebp
10003688:	50                   	push   eax
10003689:	e8 fc ff ff ff       	call   1000368a <NIContext::NIContext(Video*, int, int, int, int)+0x128>	1000368a: R_386_PC32	strcpy
1000368e:	5f                   	pop    edi
1000368f:	58                   	pop    eax
10003690:	68 f8 40 00 10       	push   0x100040f8	10003691: R_386_32	.text
10003695:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
10003699:	57                   	push   edi
1000369a:	e8 fc ff ff ff       	call   1000369b <NIContext::NIContext(Video*, int, int, int, int)+0x139>	1000369b: R_386_PC32	strcpy
1000369f:	58                   	pop    eax
100036a0:	5a                   	pop    edx
100036a1:	55                   	push   ebp
100036a2:	57                   	push   edi
100036a3:	e8 fc ff ff ff       	call   100036a4 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036a4: R_386_PC32	strcat
100036a8:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036af:	e8 fc ff ff ff       	call   100036b0 <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036b0: R_386_PC32	malloc
100036b4:	83 c4 0c             	add    esp,0xc
100036b7:	89 c5                	mov    ebp,eax
100036b9:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036bb: R_386_32	kernelProcess
100036bf:	57                   	push   edi
100036c0:	50                   	push   eax
100036c1:	e8 fc ff ff ff       	call   100036c2 <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100036c2: R_386_PC32	File::File(char const*, Process*)
100036c6:	83 c4 10             	add    esp,0x10
100036c9:	85 ed                	test   ebp,ebp
100036cb:	0f 84 52 ff ff ff    	je     10003623 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100036d1:	50                   	push   eax
100036d2:	50                   	push   eax
100036d3:	6a 01                	push   0x1
100036d5:	55                   	push   ebp
100036d6:	e8 fc ff ff ff       	call   100036d7 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	100036d7: R_386_PC32	File::open(FileOpenMode)
100036db:	83 c4 10             	add    esp,0x10
100036de:	85 c0                	test   eax,eax
100036e0:	74 0c                	je     100036ee <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
100036e2:	83 ec 0c             	sub    esp,0xc
100036e5:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100036e8:	55                   	push   ebp
100036e9:	e9 b4 00 00 00       	jmp    100037a2 <NIContext::NIContext(Video*, int, int, int, int)+0x240>
100036ee:	50                   	push   eax
100036ef:	8d 44 24 17          	lea    eax,[esp+0x17]
100036f3:	50                   	push   eax
100036f4:	8d 44 24 20          	lea    eax,[esp+0x20]
100036f8:	50                   	push   eax
100036f9:	55                   	push   ebp
100036fa:	e8 fc ff ff ff       	call   100036fb <NIContext::NIContext(Video*, int, int, int, int)+0x199>	100036fb: R_386_PC32	File::stat(unsigned long long*, bool*)
100036ff:	83 c4 10             	add    esp,0x10
10003702:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003707:	74 0e                	je     10003717 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003709:	83 ec 0c             	sub    esp,0xc
1000370c:	55                   	push   ebp
1000370d:	e8 fc ff ff ff       	call   1000370e <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000370e: R_386_PC32	File::close()
10003712:	e9 85 00 00 00       	jmp    1000379c <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
10003717:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000371b:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000371f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003723:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003727:	83 ec 0c             	sub    esp,0xc
1000372a:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000372e:	e8 fc ff ff ff       	call   1000372f <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	1000372f: R_386_PC32	malloc
10003733:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003737:	58                   	pop    eax
10003738:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000373b:	8d 54 24 20          	lea    edx,[esp+0x20]
1000373f:	52                   	push   edx
10003740:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003744:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003748:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000374c:	55                   	push   ebp
1000374d:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003750:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003754:	83 c4 1c             	add    esp,0x1c
10003757:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000375b:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000375f:	68 0d 41 00 10       	push   0x1000410d	10003760: R_386_32	.text
10003764:	e8 fc ff ff ff       	call   10003765 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	10003765: R_386_PC32	Dbg::kprintf(char const*, ...)
10003769:	83 c4 10             	add    esp,0x10
1000376c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003770:	85 c0                	test   eax,eax
10003772:	75 15                	jne    10003789 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003774:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003778:	89 c1                	mov    ecx,eax
1000377a:	c1 f9 1f             	sar    ecx,0x1f
1000377d:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
10003781:	75 06                	jne    10003789 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003783:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10003787:	74 24                	je     100037ad <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
10003789:	83 ec 0c             	sub    esp,0xc
1000378c:	55                   	push   ebp
1000378d:	e8 fc ff ff ff       	call   1000378e <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	1000378e: R_386_PC32	File::close()
10003792:	58                   	pop    eax
10003793:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10003797:	e8 fc ff ff ff       	call   10003798 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	10003798: R_386_PC32	free
1000379c:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000379f:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037a2:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037a5:	83 c4 10             	add    esp,0x10
100037a8:	e9 76 fe ff ff       	jmp    10003623 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037ad:	50                   	push   eax
100037ae:	50                   	push   eax
100037af:	57                   	push   edi
100037b0:	68 21 41 00 10       	push   0x10004121	100037b1: R_386_32	.text
100037b5:	e8 fc ff ff ff       	call   100037b6 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037b6: R_386_PC32	Dbg::kprintf(char const*, ...)
100037ba:	5a                   	pop    edx
100037bb:	59                   	pop    ecx
100037bc:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100037c0:	68 00 00 00 00       	push   0x0	100037c1: R_386_32	ssfn_ctx
100037c5:	e8 fc ff ff ff       	call   100037c6 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	100037c6: R_386_PC32	ssfn_load
100037ca:	5b                   	pop    ebx
100037cb:	5f                   	pop    edi
100037cc:	50                   	push   eax
100037cd:	68 32 41 00 10       	push   0x10004132	100037ce: R_386_32	.text
100037d2:	e8 fc ff ff ff       	call   100037d3 <NIContext::NIContext(Video*, int, int, int, int)+0x271>	100037d3: R_386_PC32	Dbg::kprintf(char const*, ...)
100037d7:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037da:	e8 fc ff ff ff       	call   100037db <NIContext::NIContext(Video*, int, int, int, int)+0x279>	100037db: R_386_PC32	File::close()
100037df:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037e2:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037e5:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037e8:	83 c4 10             	add    esp,0x10
100037eb:	83 ec 0c             	sub    esp,0xc
100037ee:	56                   	push   esi
100037ef:	e8 fc ff ff ff       	call   100037f0 <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	100037f0: R_386_PC32	Directory::close()
100037f4:	8b 06                	mov    eax,DWORD PTR [esi]
100037f6:	89 34 24             	mov    DWORD PTR [esp],esi
100037f9:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037fc:	b8 00 00 00 00       	mov    eax,0x0	100037fd: R_386_32	ssfn_ctx
10003801:	e8 f7 cb ff ff       	call   100003fd <_ssfn_fc.part.1>
10003806:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003808: R_386_32	ssfn_ctx
10003810:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10003812: R_386_32	ssfn_ctx
1000381a:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	1000381c: R_386_32	ssfn_ctx
10003824:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	10003826: R_386_32	ssfn_ctx
1000382e:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	10003830: R_386_32	ssfn_ctx
10003838:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	1000383a: R_386_32	ssfn_ctx
10003842:	81 c4 4c 02 00 00    	add    esp,0x24c
10003848:	5b                   	pop    ebx
10003849:	5e                   	pop    esi
1000384a:	5f                   	pop    edi
1000384b:	5d                   	pop    ebp
1000384c:	c3                   	ret    
1000384d:	66 90                	xchg   ax,ax
1000384f:	90                   	nop

10003850 <List<NIWindow*>::getHead() [clone .isra.0]>:
10003850:	c3                   	ret    
10003851:	90                   	nop

10003852 <NIDesktop::NIDesktop(NIContext*)>:
10003852:	53                   	push   ebx
10003853:	83 ec 14             	sub    esp,0x14
10003856:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000385a:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000385e:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
10003865:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10003868:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
1000386f:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10003876:	6a 08                	push   0x8
10003878:	e8 fc ff ff ff       	call   10003879 <NIDesktop::NIDesktop(NIContext*)+0x27>	10003879: R_386_PC32	malloc
1000387d:	89 03                	mov    DWORD PTR [ebx],eax
1000387f:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003886:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000388c:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	1000388e: R_386_32	mouseDesktop
10003892:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10003894: R_386_32	guiMouseHandler
	10003898: R_386_32	clipdrawHandleMouse(int, int, int, int)
1000389c:	83 c4 18             	add    esp,0x18
1000389f:	5b                   	pop    ebx
100038a0:	c3                   	ret    
100038a1:	90                   	nop

100038a2 <NIDesktop::addWindow(NIWindow*)>:
100038a2:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100038a6:	8b 00                	mov    eax,DWORD PTR [eax]
100038a8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100038ac:	e9 fc ff ff ff       	jmp    100038ad <NIDesktop::addWindow(NIWindow*)+0xb>	100038ad: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
100038b1:	90                   	nop

100038b2 <NIDesktop::raiseWindow(NIWindow*)>:
100038b2:	53                   	push   ebx
100038b3:	83 ec 10             	sub    esp,0x10
100038b6:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
100038ba:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100038be:	50                   	push   eax
100038bf:	ff 33                	push   DWORD PTR [ebx]
100038c1:	e8 fc ff ff ff       	call   100038c2 <NIDesktop::raiseWindow(NIWindow*)+0x10>	100038c2: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
100038c6:	58                   	pop    eax
100038c7:	5a                   	pop    edx
100038c8:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100038cc:	ff 33                	push   DWORD PTR [ebx]
100038ce:	e8 fc ff ff ff       	call   100038cf <NIDesktop::raiseWindow(NIWindow*)+0x1d>	100038cf: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
100038d3:	83 c4 18             	add    esp,0x18
100038d6:	5b                   	pop    ebx
100038d7:	c3                   	ret    

100038d8 <NIDesktop::deleteWindow(NIWindow*)>:
100038d8:	83 ec 14             	sub    esp,0x14
100038db:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100038df:	50                   	push   eax
100038e0:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100038e4:	ff 30                	push   DWORD PTR [eax]
100038e6:	e8 fc ff ff ff       	call   100038e7 <NIDesktop::deleteWindow(NIWindow*)+0xf>	100038e7: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
100038eb:	83 c4 1c             	add    esp,0x1c
100038ee:	c3                   	ret    
100038ef:	90                   	nop

100038f0 <NIDesktop::renderScanline(int, int, int)>:
100038f0:	55                   	push   ebp
100038f1:	31 c0                	xor    eax,eax
100038f3:	57                   	push   edi
100038f4:	ba 00 00 00 00       	mov    edx,0x0	100038f5: R_386_32	render
100038f9:	56                   	push   esi
100038fa:	89 d7                	mov    edi,edx
100038fc:	53                   	push   ebx
100038fd:	b9 00 02 00 00       	mov    ecx,0x200
10003902:	83 ec 1c             	sub    esp,0x1c
10003905:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003907:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
1000390b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000390f:	29 f0                	sub    eax,esi
10003911:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003915:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10003919:	8b 00                	mov    eax,DWORD PTR [eax]
1000391b:	8b 00                	mov    eax,DWORD PTR [eax]
1000391d:	e8 2e ff ff ff       	call   10003850 <List<NIWindow*>::getHead() [clone .isra.0]>
10003922:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003925:	85 db                	test   ebx,ebx
10003927:	0f 84 2f 01 00 00    	je     10003a5c <NIDesktop::renderScanline(int, int, int)+0x16c>
1000392d:	89 c7                	mov    edi,eax
1000392f:	31 ed                	xor    ebp,ebp
10003931:	eb 13                	jmp    10003946 <NIDesktop::renderScanline(int, int, int)+0x56>
10003933:	90                   	nop
10003934:	8b 7f 04             	mov    edi,DWORD PTR [edi+0x4]
10003937:	8b 47 04             	mov    eax,DWORD PTR [edi+0x4]
1000393a:	85 c0                	test   eax,eax
1000393c:	0f 84 1a 01 00 00    	je     10003a5c <NIDesktop::renderScanline(int, int, int)+0x16c>
10003942:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
10003946:	83 ec 08             	sub    esp,0x8
10003949:	55                   	push   ebp
1000394a:	68 dc 43 00 10       	push   0x100043dc	1000394b: R_386_32	.text
1000394f:	e8 fc ff ff ff       	call   10003950 <NIDesktop::renderScanline(int, int, int)+0x60>	10003950: R_386_PC32	Dbg::kprintf(char const*, ...)
10003954:	89 3c 24             	mov    DWORD PTR [esp],edi
10003957:	e8 fc ff ff ff       	call   10003958 <NIDesktop::renderScanline(int, int, int)+0x68>	10003958: R_386_PC32	ListItem<NIWindow*>::getValue()
1000395c:	5a                   	pop    edx
1000395d:	8b 18                	mov    ebx,DWORD PTR [eax]
1000395f:	59                   	pop    ecx
10003960:	55                   	push   ebp
10003961:	68 e7 43 00 10       	push   0x100043e7	10003962: R_386_32	.text
10003966:	e8 fc ff ff ff       	call   10003967 <NIDesktop::renderScanline(int, int, int)+0x77>	10003967: R_386_PC32	Dbg::kprintf(char const*, ...)
1000396b:	83 c4 10             	add    esp,0x10
1000396e:	85 db                	test   ebx,ebx
10003970:	0f 84 e6 00 00 00    	je     10003a5c <NIDesktop::renderScanline(int, int, int)+0x16c>
10003976:	83 ec 08             	sub    esp,0x8
10003979:	8d 45 01             	lea    eax,[ebp+0x1]
1000397c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003980:	55                   	push   ebp
10003981:	68 f2 43 00 10       	push   0x100043f2	10003982: R_386_32	.text
10003986:	e8 fc ff ff ff       	call   10003987 <NIDesktop::renderScanline(int, int, int)+0x97>	10003987: R_386_PC32	Dbg::kprintf(char const*, ...)
1000398b:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000398e:	83 c4 10             	add    esp,0x10
10003991:	3b 44 24 34          	cmp    eax,DWORD PTR [esp+0x34]
10003995:	7f 9d                	jg     10003934 <NIDesktop::renderScanline(int, int, int)+0x44>
10003997:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
1000399a:	01 c2                	add    edx,eax
1000399c:	3b 54 24 34          	cmp    edx,DWORD PTR [esp+0x34]
100039a0:	7e 92                	jle    10003934 <NIDesktop::renderScanline(int, int, int)+0x44>
100039a2:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100039a5:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
100039a9:	29 c2                	sub    edx,eax
100039ab:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100039ae:	8d 04 d0             	lea    eax,[eax+edx*8]
100039b1:	0f b7 68 02          	movzx  ebp,WORD PTR [eax+0x2]
100039b5:	0f b7 00             	movzx  eax,WORD PTR [eax]
100039b8:	01 c8                	add    eax,ecx
100039ba:	03 4b 1c             	add    ecx,DWORD PTR [ebx+0x1c]
100039bd:	89 ca                	mov    edx,ecx
100039bf:	29 ea                	sub    edx,ebp
100039c1:	39 d0                	cmp    eax,edx
100039c3:	7c 1c                	jl     100039e1 <NIDesktop::renderScanline(int, int, int)+0xf1>
100039c5:	e9 6a ff ff ff       	jmp    10003934 <NIDesktop::renderScanline(int, int, int)+0x44>
100039ca:	66 90                	xchg   ax,ax
100039cc:	8b 4b 1c             	mov    ecx,DWORD PTR [ebx+0x1c]
100039cf:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
100039d2:	66 90                	xchg   ax,ax
100039d4:	40                   	inc    eax
100039d5:	89 ca                	mov    edx,ecx
100039d7:	29 ea                	sub    edx,ebp
100039d9:	39 c2                	cmp    edx,eax
100039db:	0f 8e 53 ff ff ff    	jle    10003934 <NIDesktop::renderScanline(int, int, int)+0x44>
100039e1:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	100039e3: R_386_32	render
100039e8:	75 ea                	jne    100039d4 <NIDesktop::renderScanline(int, int, int)+0xe4>
100039ea:	39 c6                	cmp    esi,eax
100039ec:	7f e6                	jg     100039d4 <NIDesktop::renderScanline(int, int, int)+0xe4>
100039ee:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
100039f2:	7e e0                	jle    100039d4 <NIDesktop::renderScanline(int, int, int)+0xe4>
100039f4:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	100039f6: R_386_32	render
100039fb:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
100039ff:	89 c2                	mov    edx,eax
10003a01:	2b 4b 18             	sub    ecx,DWORD PTR [ebx+0x18]
10003a04:	2b 53 14             	sub    edx,DWORD PTR [ebx+0x14]
10003a07:	ff 4c 24 08          	dec    DWORD PTR [esp+0x8]
10003a0b:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003a0f:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10003a12:	8b 4c ca 04          	mov    ecx,DWORD PTR [edx+ecx*8+0x4]
10003a16:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10003a1a:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003a1d:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003a20: R_386_32	renderData
10003a24:	75 a6                	jne    100039cc <NIDesktop::renderScanline(int, int, int)+0xdc>
10003a26:	66 90                	xchg   ax,ax
10003a28:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10003a2c:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003a2f:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003a35:	8b 10                	mov    edx,DWORD PTR [eax]
10003a37:	ff 34 b5 00 00 00 00 	push   DWORD PTR [esi*4+0x0]	10003a3a: R_386_32	renderData
10003a3e:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
10003a42:	56                   	push   esi
10003a43:	46                   	inc    esi
10003a44:	50                   	push   eax
10003a45:	ff 52 24             	call   DWORD PTR [edx+0x24]
10003a48:	83 c4 10             	add    esp,0x10
10003a4b:	39 74 24 3c          	cmp    DWORD PTR [esp+0x3c],esi
10003a4f:	7f d7                	jg     10003a28 <NIDesktop::renderScanline(int, int, int)+0x138>
10003a51:	83 c4 1c             	add    esp,0x1c
10003a54:	5b                   	pop    ebx
10003a55:	5e                   	pop    esi
10003a56:	5f                   	pop    edi
10003a57:	5d                   	pop    ebp
10003a58:	c3                   	ret    
10003a59:	8d 76 00             	lea    esi,[esi+0x0]
10003a5c:	89 f0                	mov    eax,esi
10003a5e:	39 74 24 3c          	cmp    DWORD PTR [esp+0x3c],esi
10003a62:	7e ed                	jle    10003a51 <NIDesktop::renderScanline(int, int, int)+0x161>
10003a64:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003a66: R_386_32	render
10003a6b:	75 18                	jne    10003a85 <NIDesktop::renderScanline(int, int, int)+0x195>
10003a6d:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003a6f: R_386_32	render
10003a74:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003a77: R_386_32	renderData
10003a7f:	ff 4c 24 08          	dec    DWORD PTR [esp+0x8]
10003a83:	74 a3                	je     10003a28 <NIDesktop::renderScanline(int, int, int)+0x138>
10003a85:	40                   	inc    eax
10003a86:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
10003a8a:	75 d8                	jne    10003a64 <NIDesktop::renderScanline(int, int, int)+0x174>
10003a8c:	eb 9a                	jmp    10003a28 <NIDesktop::renderScanline(int, int, int)+0x138>

10003a8e <NIDesktop::rangeRefresh(int, int, int, int)>:
10003a8e:	53                   	push   ebx
10003a8f:	83 ec 08             	sub    esp,0x8
10003a92:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003a96:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003a9a:	7d 18                	jge    10003ab4 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003a9c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003aa0:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003aa4:	53                   	push   ebx
10003aa5:	43                   	inc    ebx
10003aa6:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003aaa:	e8 fc ff ff ff       	call   10003aab <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003aab: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003aaf:	83 c4 10             	add    esp,0x10
10003ab2:	eb e2                	jmp    10003a96 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003ab4:	83 c4 08             	add    esp,0x8
10003ab7:	5b                   	pop    ebx
10003ab8:	c3                   	ret    
10003ab9:	90                   	nop

10003aba <NIDesktop::handleMouse(int, int, int, int)>:
10003aba:	57                   	push   edi
10003abb:	56                   	push   esi
10003abc:	53                   	push   ebx
10003abd:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003ac1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10003ac5:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10003ac9:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003acc:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003acf:	83 ec 0c             	sub    esp,0xc
10003ad2:	8d 4a 20             	lea    ecx,[edx+0x20]
10003ad5:	51                   	push   ecx
10003ad6:	52                   	push   edx
10003ad7:	8d 50 20             	lea    edx,[eax+0x20]
10003ada:	52                   	push   edx
10003adb:	50                   	push   eax
10003adc:	53                   	push   ebx
10003add:	e8 fc ff ff ff       	call   10003ade <NIDesktop::handleMouse(int, int, int, int)+0x24>	10003ade: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003ae2:	03 7b 08             	add    edi,DWORD PTR [ebx+0x8]
10003ae5:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ae8:	83 c4 20             	add    esp,0x20
10003aeb:	01 f0                	add    eax,esi
10003aed:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
10003af0:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003af3:	85 ff                	test   edi,edi
10003af5:	79 07                	jns    10003afe <NIDesktop::handleMouse(int, int, int, int)+0x44>
10003af7:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003afe:	85 c0                	test   eax,eax
10003b00:	79 07                	jns    10003b09 <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003b02:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003b09:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003b0c:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003b12:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003b15:	7f 04                	jg     10003b1b <NIDesktop::handleMouse(int, int, int, int)+0x61>
10003b17:	48                   	dec    eax
10003b18:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003b1b:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003b21:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003b24:	7f 04                	jg     10003b2a <NIDesktop::handleMouse(int, int, int, int)+0x70>
10003b26:	48                   	dec    eax
10003b27:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003b2a:	8b 92 08 04 00 00    	mov    edx,DWORD PTR [edx+0x408]
10003b30:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003b32:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
10003b3a:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003b3d:	05 00 00 00 00       	add    eax,0x0	10003b3e: R_386_32	___mouse_data
10003b42:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003b46:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003b49:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003b4d:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003b50:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10003b54:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003b58:	5b                   	pop    ebx
10003b59:	8b 41 30             	mov    eax,DWORD PTR [ecx+0x30]
10003b5c:	5e                   	pop    esi
10003b5d:	5f                   	pop    edi
10003b5e:	ff e0                	jmp    eax

10003b60 <clipdrawHandleMouse(int, int, int, int)>:
10003b60:	83 ec 18             	sub    esp,0x18
10003b63:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10003b67:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10003b6b:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10003b6f:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10003b73:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003b75: R_386_32	mouseDesktop
10003b79:	e8 fc ff ff ff       	call   10003b7a <clipdrawHandleMouse(int, int, int, int)+0x1a>	10003b7a: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10003b7e:	83 c4 2c             	add    esp,0x2c
10003b81:	c3                   	ret    

10003b82 <NIDesktop::completeRefresh()>:
10003b82:	56                   	push   esi
10003b83:	53                   	push   ebx
10003b84:	31 f6                	xor    esi,esi
10003b86:	50                   	push   eax
10003b87:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003b8b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003b8e:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003b94:	7e 15                	jle    10003bab <NIDesktop::completeRefresh()+0x29>
10003b96:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003b9c:	6a 00                	push   0x0
10003b9e:	56                   	push   esi
10003b9f:	46                   	inc    esi
10003ba0:	53                   	push   ebx
10003ba1:	e8 fc ff ff ff       	call   10003ba2 <NIDesktop::completeRefresh()+0x20>	10003ba2: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003ba6:	83 c4 10             	add    esp,0x10
10003ba9:	eb e0                	jmp    10003b8b <NIDesktop::completeRefresh()+0x9>
10003bab:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003bb1:	83 ec 0c             	sub    esp,0xc
10003bb4:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003bb6:	6a 00                	push   0x0
10003bb8:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003bbb:	05 00 00 00 00       	add    eax,0x0	10003bbc: R_386_32	___mouse_data
10003bc0:	50                   	push   eax
10003bc1:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003bc4:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003bc7:	52                   	push   edx
10003bc8:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003bcb:	83 c4 24             	add    esp,0x24
10003bce:	5b                   	pop    ebx
10003bcf:	5e                   	pop    esi
10003bd0:	c3                   	ret    
10003bd1:	90                   	nop

10003bd2 <NIWindow::invalidate()>:
10003bd2:	56                   	push   esi
10003bd3:	53                   	push   ebx
10003bd4:	52                   	push   edx
10003bd5:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003bd9:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
10003bdd:	74 2e                	je     10003c0d <NIWindow::invalidate()+0x3b>
10003bdf:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
10003be3:	74 28                	je     10003c0d <NIWindow::invalidate()+0x3b>
10003be5:	31 f6                	xor    esi,esi
10003be7:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003bea:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
10003bed:	7e 12                	jle    10003c01 <NIWindow::invalidate()+0x2f>
10003bef:	83 ec 0c             	sub    esp,0xc
10003bf2:	ff 74 f0 04          	push   DWORD PTR [eax+esi*8+0x4]
10003bf6:	46                   	inc    esi
10003bf7:	e8 fc ff ff ff       	call   10003bf8 <NIWindow::invalidate()+0x26>	10003bf8: R_386_PC32	free
10003bfc:	83 c4 10             	add    esp,0x10
10003bff:	eb e6                	jmp    10003be7 <NIWindow::invalidate()+0x15>
10003c01:	83 ec 0c             	sub    esp,0xc
10003c04:	50                   	push   eax
10003c05:	e8 fc ff ff ff       	call   10003c06 <NIWindow::invalidate()+0x34>	10003c06: R_386_PC32	free
10003c0a:	83 c4 10             	add    esp,0x10
10003c0d:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10003c14:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003c1b:	c6 43 08 00          	mov    BYTE PTR [ebx+0x8],0x0
10003c1f:	58                   	pop    eax
10003c20:	5b                   	pop    ebx
10003c21:	5e                   	pop    esi
10003c22:	c3                   	ret    
10003c23:	90                   	nop

10003c24 <NIWindow::putpixel(int, int, unsigned int)>:
10003c24:	56                   	push   esi
10003c25:	53                   	push   ebx
10003c26:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10003c2a:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10003c2e:	8b 5a 04             	mov    ebx,DWORD PTR [edx+0x4]
10003c31:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c35:	8b 52 10             	mov    edx,DWORD PTR [edx+0x10]
10003c38:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003c3c:	8b 54 f2 04          	mov    edx,DWORD PTR [edx+esi*8+0x4]
10003c40:	83 fb 04             	cmp    ebx,0x4
10003c43:	75 05                	jne    10003c4a <NIWindow::putpixel(int, int, unsigned int)+0x26>
10003c45:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
10003c48:	eb 0e                	jmp    10003c58 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10003c4a:	83 fb 02             	cmp    ebx,0x2
10003c4d:	75 06                	jne    10003c55 <NIWindow::putpixel(int, int, unsigned int)+0x31>
10003c4f:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10003c53:	eb 03                	jmp    10003c58 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10003c55:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10003c58:	5b                   	pop    ebx
10003c59:	5e                   	pop    esi
10003c5a:	c3                   	ret    
10003c5b:	90                   	nop

10003c5c <NIWindow::rerender()>:
10003c5c:	55                   	push   ebp
10003c5d:	57                   	push   edi
10003c5e:	56                   	push   esi
10003c5f:	53                   	push   ebx
10003c60:	83 ec 0c             	sub    esp,0xc
10003c63:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10003c67:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
10003c6b:	74 0c                	je     10003c79 <NIWindow::rerender()+0x1d>
10003c6d:	83 ec 0c             	sub    esp,0xc
10003c70:	53                   	push   ebx
10003c71:	e8 fc ff ff ff       	call   10003c72 <NIWindow::rerender()+0x16>	10003c72: R_386_PC32	NIWindow::invalidate()
10003c76:	83 c4 10             	add    esp,0x10
10003c79:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003c7c:	83 ec 0c             	sub    esp,0xc
10003c7f:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003c82:	31 f6                	xor    esi,esi
10003c84:	c1 e0 03             	shl    eax,0x3
10003c87:	50                   	push   eax
10003c88:	e8 fc ff ff ff       	call   10003c89 <NIWindow::rerender()+0x2d>	10003c89: R_386_PC32	malloc
10003c8d:	83 c4 10             	add    esp,0x10
10003c90:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003c93:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
10003c96:	0f 8e 88 00 00 00    	jle    10003d24 <NIWindow::rerender()+0xc8>
10003c9c:	8d 04 f5 00 00 00 00 	lea    eax,[esi*8+0x0]
10003ca3:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
10003ca6:	01 c1                	add    ecx,eax
10003ca8:	83 fe 06             	cmp    esi,0x6
10003cab:	7f 1b                	jg     10003cc8 <NIWindow::rerender()+0x6c>
10003cad:	8b 14 b5 00 00 00 00 	mov    edx,DWORD PTR [esi*4+0x0]	10003cb0: R_386_32	curveLookup7
10003cb4:	66 89 11             	mov    WORD PTR [ecx],dx
10003cb7:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10003cba:	8b 0c b5 00 00 00 00 	mov    ecx,DWORD PTR [esi*4+0x0]	10003cbd: R_386_32	curveLookup7
10003cc1:	66 89 4c 02 02       	mov    WORD PTR [edx+eax*1+0x2],cx
10003cc6:	eb 3b                	jmp    10003d03 <NIWindow::rerender()+0xa7>
10003cc8:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003ccb:	8d 7a fa             	lea    edi,[edx-0x6]
10003cce:	39 f7                	cmp    edi,esi
10003cd0:	7f 22                	jg     10003cf4 <NIWindow::rerender()+0x98>
10003cd2:	29 f2                	sub    edx,esi
10003cd4:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10003cd7: R_386_32	curveLookup7
10003cdb:	66 89 11             	mov    WORD PTR [ecx],dx
10003cde:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003ce1:	8b 4b 10             	mov    ecx,DWORD PTR [ebx+0x10]
10003ce4:	29 f2                	sub    edx,esi
10003ce6:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10003ce9: R_386_32	curveLookup7
10003ced:	66 89 54 01 02       	mov    WORD PTR [ecx+eax*1+0x2],dx
10003cf2:	eb 0f                	jmp    10003d03 <NIWindow::rerender()+0xa7>
10003cf4:	66 c7 01 00 00       	mov    WORD PTR [ecx],0x0
10003cf9:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10003cfc:	66 c7 44 02 02 00 00 	mov    WORD PTR [edx+eax*1+0x2],0x0
10003d03:	03 43 10             	add    eax,DWORD PTR [ebx+0x10]
10003d06:	83 ec 0c             	sub    esp,0xc
10003d09:	89 c7                	mov    edi,eax
10003d0b:	46                   	inc    esi
10003d0c:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003d0f:	0f af 43 04          	imul   eax,DWORD PTR [ebx+0x4]
10003d13:	50                   	push   eax
10003d14:	e8 fc ff ff ff       	call   10003d15 <NIWindow::rerender()+0xb9>	10003d15: R_386_PC32	malloc
10003d19:	83 c4 10             	add    esp,0x10
10003d1c:	89 47 04             	mov    DWORD PTR [edi+0x4],eax
10003d1f:	e9 6f ff ff ff       	jmp    10003c93 <NIWindow::rerender()+0x37>
10003d24:	31 ff                	xor    edi,edi
10003d26:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
10003d29:	7e 30                	jle    10003d5b <NIWindow::rerender()+0xff>
10003d2b:	31 c0                	xor    eax,eax
10003d2d:	83 ff 19             	cmp    edi,0x19
10003d30:	0f 9e c0             	setle  al
10003d33:	31 ed                	xor    ebp,ebp
10003d35:	89 c6                	mov    esi,eax
10003d37:	4e                   	dec    esi
10003d38:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
10003d3e:	81 c6 ff ff ff 00    	add    esi,0xffffff
10003d44:	39 6b 1c             	cmp    DWORD PTR [ebx+0x1c],ebp
10003d47:	7e 0f                	jle    10003d58 <NIWindow::rerender()+0xfc>
10003d49:	56                   	push   esi
10003d4a:	57                   	push   edi
10003d4b:	55                   	push   ebp
10003d4c:	45                   	inc    ebp
10003d4d:	53                   	push   ebx
10003d4e:	e8 fc ff ff ff       	call   10003d4f <NIWindow::rerender()+0xf3>	10003d4f: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10003d53:	83 c4 10             	add    esp,0x10
10003d56:	eb ec                	jmp    10003d44 <NIWindow::rerender()+0xe8>
10003d58:	47                   	inc    edi
10003d59:	eb cb                	jmp    10003d26 <NIWindow::rerender()+0xca>
10003d5b:	83 c4 0c             	add    esp,0xc
10003d5e:	5b                   	pop    ebx
10003d5f:	5e                   	pop    esi
10003d60:	5f                   	pop    edi
10003d61:	5d                   	pop    ebp
10003d62:	c3                   	ret    
10003d63:	90                   	nop

10003d64 <NIWindow::changeContext(NIContext*, int, int)>:
10003d64:	55                   	push   ebp
10003d65:	57                   	push   edi
10003d66:	56                   	push   esi
10003d67:	53                   	push   ebx
10003d68:	83 ec 18             	sub    esp,0x18
10003d6b:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10003d6f:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10003d73:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10003d77:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10003d7b:	53                   	push   ebx
10003d7c:	e8 fc ff ff ff       	call   10003d7d <NIWindow::changeContext(NIContext*, int, int)+0x19>	10003d7d: R_386_PC32	NIWindow::invalidate()
10003d81:	89 33                	mov    DWORD PTR [ebx],esi
10003d83:	89 6b 14             	mov    DWORD PTR [ebx+0x14],ebp
10003d86:	89 7b 18             	mov    DWORD PTR [ebx+0x18],edi
10003d89:	83 c4 10             	add    esp,0x10
10003d8c:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10003d92:	83 f8 08             	cmp    eax,0x8
10003d95:	7f 09                	jg     10003da0 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10003d97:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10003d9e:	eb 15                	jmp    10003db5 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10003da0:	83 f8 10             	cmp    eax,0x10
10003da3:	7f 09                	jg     10003dae <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10003da5:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
10003dac:	eb 07                	jmp    10003db5 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10003dae:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10003db5:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003db9:	83 c4 0c             	add    esp,0xc
10003dbc:	5b                   	pop    ebx
10003dbd:	5e                   	pop    esi
10003dbe:	5f                   	pop    edi
10003dbf:	5d                   	pop    ebp
10003dc0:	e9 97 fe ff ff       	jmp    10003c5c <NIWindow::rerender()>
10003dc5:	90                   	nop

10003dc6 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10003dc6:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003dca:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10003dce:	c6 40 08 00          	mov    BYTE PTR [eax+0x8],0x0
10003dd2:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
10003dd5:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10003ddc:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10003de0:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
10003de7:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10003dea:	e9 75 ff ff ff       	jmp    10003d64 <NIWindow::changeContext(NIContext*, int, int)>
10003def:	90                   	nop

10003df0 <NIWindow::request()>:
10003df0:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003df4:	80 78 08 00          	cmp    BYTE PTR [eax+0x8],0x0
10003df8:	75 05                	jne    10003dff <NIWindow::request()+0xf>
10003dfa:	e9 5d fe ff ff       	jmp    10003c5c <NIWindow::rerender()>
10003dff:	c3                   	ret    

10003e00 <NIWindow::SHADOW_TEST()>:
10003e00:	55                   	push   ebp
10003e01:	57                   	push   edi
10003e02:	56                   	push   esi
10003e03:	53                   	push   ebx
10003e04:	83 ec 28             	sub    esp,0x28
10003e07:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003e0b:	53                   	push   ebx
10003e0c:	e8 fc ff ff ff       	call   10003e0d <NIWindow::SHADOW_TEST()+0xd>	10003e0d: R_386_PC32	NIWindow::request()
10003e11:	83 c4 10             	add    esp,0x10
10003e14:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003e17:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10003e1a:	74 10                	je     10003e2c <NIWindow::SHADOW_TEST()+0x2c>
10003e1c:	83 ec 0c             	sub    esp,0xc
10003e1f:	68 fd 43 00 10       	push   0x100043fd	10003e20: R_386_32	.text
10003e24:	e8 fc ff ff ff       	call   10003e25 <NIWindow::SHADOW_TEST()+0x25>	10003e25: R_386_PC32	KePanic(char const*)
10003e29:	83 c4 10             	add    esp,0x10
10003e2c:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10003e30:	0f 85 28 01 00 00    	jne    10003f5e <NIWindow::SHADOW_TEST()+0x15e>
10003e36:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
10003e3e:	31 ff                	xor    edi,edi
10003e40:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
10003e43:	0f 8e 15 01 00 00    	jle    10003f5e <NIWindow::SHADOW_TEST()+0x15e>
10003e49:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e4c:	8d 04 f8             	lea    eax,[eax+edi*8]
10003e4f:	0f b7 30             	movzx  esi,WORD PTR [eax]
10003e52:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10003e56:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10003e5a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003e5e:	89 34 24             	mov    DWORD PTR [esp],esi
10003e61:	8b 6b 1c             	mov    ebp,DWORD PTR [ebx+0x1c]
10003e64:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003e67:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10003e6b:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
10003e6e:	0f 8e d4 00 00 00    	jle    10003f48 <NIWindow::SHADOW_TEST()+0x148>
10003e74:	83 ff 05             	cmp    edi,0x5
10003e77:	7e 1f                	jle    10003e98 <NIWindow::SHADOW_TEST()+0x98>
10003e79:	8d 41 fb             	lea    eax,[ecx-0x5]
10003e7c:	39 f8                	cmp    eax,edi
10003e7e:	7e 18                	jle    10003e98 <NIWindow::SHADOW_TEST()+0x98>
10003e80:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003e84:	83 c0 05             	add    eax,0x5
10003e87:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10003e8a:	7d 0c                	jge    10003e98 <NIWindow::SHADOW_TEST()+0x98>
10003e8c:	8d 45 fb             	lea    eax,[ebp-0x5]
10003e8f:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10003e92:	0f 8f a8 00 00 00    	jg     10003f40 <NIWindow::SHADOW_TEST()+0x140>
10003e98:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
10003e9c:	be ea 01 00 00       	mov    esi,0x1ea
10003ea1:	29 f9                	sub    ecx,edi
10003ea3:	89 f0                	mov    eax,esi
10003ea5:	83 c1 04             	add    ecx,0x4
10003ea8:	99                   	cdq    
10003ea9:	f7 f9                	idiv   ecx
10003eab:	89 c1                	mov    ecx,eax
10003ead:	89 f0                	mov    eax,esi
10003eaf:	99                   	cdq    
10003eb0:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10003eb4:	83 f8 0a             	cmp    eax,0xa
10003eb7:	7d 05                	jge    10003ebe <NIWindow::SHADOW_TEST()+0xbe>
10003eb9:	b8 0a 00 00 00       	mov    eax,0xa
10003ebe:	39 c1                	cmp    ecx,eax
10003ec0:	7d 02                	jge    10003ec4 <NIWindow::SHADOW_TEST()+0xc4>
10003ec2:	89 c1                	mov    ecx,eax
10003ec4:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10003ec7:	b8 ea 01 00 00       	mov    eax,0x1ea
10003ecc:	83 c5 04             	add    ebp,0x4
10003ecf:	99                   	cdq    
10003ed0:	f7 fd                	idiv   ebp
10003ed2:	89 c6                	mov    esi,eax
10003ed4:	83 f8 0a             	cmp    eax,0xa
10003ed7:	7d 05                	jge    10003ede <NIWindow::SHADOW_TEST()+0xde>
10003ed9:	be 0a 00 00 00       	mov    esi,0xa
10003ede:	8b 04 24             	mov    eax,DWORD PTR [esp]
10003ee1:	8d 68 05             	lea    ebp,[eax+0x5]
10003ee4:	b8 ea 01 00 00       	mov    eax,0x1ea
10003ee9:	99                   	cdq    
10003eea:	f7 fd                	idiv   ebp
10003eec:	39 c6                	cmp    esi,eax
10003eee:	7d 02                	jge    10003ef2 <NIWindow::SHADOW_TEST()+0xf2>
10003ef0:	89 c6                	mov    esi,eax
10003ef2:	89 f0                	mov    eax,esi
10003ef4:	89 ca                	mov    edx,ecx
10003ef6:	0f af c6             	imul   eax,esi
10003ef9:	0f af d1             	imul   edx,ecx
10003efc:	0f af f1             	imul   esi,ecx
10003eff:	01 d0                	add    eax,edx
10003f01:	8d 04 c6             	lea    eax,[esi+eax*8]
10003f04:	c1 f8 08             	sar    eax,0x8
10003f07:	83 f8 66             	cmp    eax,0x66
10003f0a:	7e 46                	jle    10003f52 <NIWindow::SHADOW_TEST()+0x152>
10003f0c:	8d 50 9a             	lea    edx,[eax-0x66]
10003f0f:	d1 fa                	sar    edx,1
10003f11:	8d 42 66             	lea    eax,[edx+0x66]
10003f14:	83 f8 73             	cmp    eax,0x73
10003f17:	7e 39                	jle    10003f52 <NIWindow::SHADOW_TEST()+0x152>
10003f19:	83 ea 0d             	sub    edx,0xd
10003f1c:	c1 fa 02             	sar    edx,0x2
10003f1f:	8d 42 73             	lea    eax,[edx+0x73]
10003f22:	83 f8 7f             	cmp    eax,0x7f
10003f25:	7f 19                	jg     10003f40 <NIWindow::SHADOW_TEST()+0x140>
10003f27:	50                   	push   eax
10003f28:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003f2b:	01 f8                	add    eax,edi
10003f2d:	50                   	push   eax
10003f2e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003f32:	03 43 14             	add    eax,DWORD PTR [ebx+0x14]
10003f35:	50                   	push   eax
10003f36:	ff 33                	push   DWORD PTR [ebx]
10003f38:	e8 fc ff ff ff       	call   10003f39 <NIWindow::SHADOW_TEST()+0x139>	10003f39: R_386_PC32	NIContext::drvDarken4(int, int, int)
10003f3d:	83 c4 10             	add    esp,0x10
10003f40:	ff 04 24             	inc    DWORD PTR [esp]
10003f43:	e9 19 ff ff ff       	jmp    10003e61 <NIWindow::SHADOW_TEST()+0x61>
10003f48:	47                   	inc    edi
10003f49:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10003f4d:	e9 ee fe ff ff       	jmp    10003e40 <NIWindow::SHADOW_TEST()+0x40>
10003f52:	83 f8 0a             	cmp    eax,0xa
10003f55:	7d d0                	jge    10003f27 <NIWindow::SHADOW_TEST()+0x127>
10003f57:	b8 0a 00 00 00       	mov    eax,0xa
10003f5c:	eb c9                	jmp    10003f27 <NIWindow::SHADOW_TEST()+0x127>
10003f5e:	83 c4 1c             	add    esp,0x1c
10003f61:	5b                   	pop    ebx
10003f62:	5e                   	pop    esi
10003f63:	5f                   	pop    edi
10003f64:	5d                   	pop    ebp
10003f65:	c3                   	ret    

10003f66 <NIWindow::realdraw()>:
10003f66:	55                   	push   ebp
10003f67:	57                   	push   edi
10003f68:	56                   	push   esi
10003f69:	53                   	push   ebx
10003f6a:	83 ec 28             	sub    esp,0x28
10003f6d:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003f71:	53                   	push   ebx
10003f72:	e8 fc ff ff ff       	call   10003f73 <NIWindow::realdraw()+0xd>	10003f73: R_386_PC32	NIWindow::request()
10003f77:	83 c4 10             	add    esp,0x10
10003f7a:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003f7d:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10003f80:	74 10                	je     10003f92 <NIWindow::realdraw()+0x2c>
10003f82:	83 ec 0c             	sub    esp,0xc
10003f85:	68 fd 43 00 10       	push   0x100043fd	10003f86: R_386_32	.text
10003f8a:	e8 fc ff ff ff       	call   10003f8b <NIWindow::realdraw()+0x25>	10003f8b: R_386_PC32	KePanic(char const*)
10003f8f:	83 c4 10             	add    esp,0x10
10003f92:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10003f96:	75 4f                	jne    10003fe7 <NIWindow::realdraw()+0x81>
10003f98:	31 f6                	xor    esi,esi
10003f9a:	39 73 20             	cmp    DWORD PTR [ebx+0x20],esi
10003f9d:	7e 48                	jle    10003fe7 <NIWindow::realdraw()+0x81>
10003f9f:	8d 2c f5 00 00 00 00 	lea    ebp,[esi*8+0x0]
10003fa6:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003fa9:	01 e8                	add    eax,ebp
10003fab:	0f b7 38             	movzx  edi,WORD PTR [eax]
10003fae:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10003fb2:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003fb6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003fb9:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10003fbd:	39 f8                	cmp    eax,edi
10003fbf:	7e 23                	jle    10003fe4 <NIWindow::realdraw()+0x7e>
10003fc1:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003fc4:	8b 44 28 04          	mov    eax,DWORD PTR [eax+ebp*1+0x4]
10003fc8:	ff 34 b8             	push   DWORD PTR [eax+edi*4]
10003fcb:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003fce:	01 f0                	add    eax,esi
10003fd0:	50                   	push   eax
10003fd1:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003fd4:	01 f8                	add    eax,edi
10003fd6:	47                   	inc    edi
10003fd7:	50                   	push   eax
10003fd8:	ff 33                	push   DWORD PTR [ebx]
10003fda:	e8 fc ff ff ff       	call   10003fdb <NIWindow::realdraw()+0x75>	10003fdb: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10003fdf:	83 c4 10             	add    esp,0x10
10003fe2:	eb d2                	jmp    10003fb6 <NIWindow::realdraw()+0x50>
10003fe4:	46                   	inc    esi
10003fe5:	eb b3                	jmp    10003f9a <NIWindow::realdraw()+0x34>
10003fe7:	83 c4 1c             	add    esp,0x1c
10003fea:	5b                   	pop    ebx
10003feb:	5e                   	pop    esi
10003fec:	5f                   	pop    edi
10003fed:	5d                   	pop    ebp
10003fee:	c3                   	ret    
10003fef:	90                   	nop

10003ff0 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10003ff0:	53                   	push   ebx
10003ff1:	83 ec 14             	sub    esp,0x14
10003ff4:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10003ff8:	6a 0c                	push   0xc
10003ffa:	e8 fc ff ff ff       	call   10003ffb <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	10003ffb: R_386_PC32	malloc
10003fff:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10004003:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000400a:	89 10                	mov    DWORD PTR [eax],edx
1000400c:	83 c4 10             	add    esp,0x10
1000400f:	8b 13                	mov    edx,DWORD PTR [ebx]
10004011:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10004014:	85 d2                	test   edx,edx
10004016:	74 05                	je     1000401d <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
10004018:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
1000401b:	eb 03                	jmp    10004020 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
1000401d:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004020:	89 03                	mov    DWORD PTR [ebx],eax
10004022:	83 c4 08             	add    esp,0x8
10004025:	5b                   	pop    ebx
10004026:	c3                   	ret    
10004027:	90                   	nop

10004028 <List<NIWindow*>::deleteElement(NIWindow*&)>:
10004028:	57                   	push   edi
10004029:	56                   	push   esi
1000402a:	53                   	push   ebx
1000402b:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000402f:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004033:	8b 19                	mov    ebx,DWORD PTR [ecx]
10004035:	85 db                	test   ebx,ebx
10004037:	74 5e                	je     10004097 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004039:	8b 30                	mov    esi,DWORD PTR [eax]
1000403b:	89 da                	mov    edx,ebx
1000403d:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
10004040:	8b 3a                	mov    edi,DWORD PTR [edx]
10004042:	85 c0                	test   eax,eax
10004044:	74 08                	je     1000404e <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004046:	39 f7                	cmp    edi,esi
10004048:	73 04                	jae    1000404e <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000404a:	89 c2                	mov    edx,eax
1000404c:	eb ef                	jmp    1000403d <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
1000404e:	39 f7                	cmp    edi,esi
10004050:	75 45                	jne    10004097 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004052:	39 d3                	cmp    ebx,edx
10004054:	75 18                	jne    1000406e <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
10004056:	89 01                	mov    DWORD PTR [ecx],eax
10004058:	85 c0                	test   eax,eax
1000405a:	75 09                	jne    10004065 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
1000405c:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004063:	eb 1e                	jmp    10004083 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004065:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000406c:	eb 15                	jmp    10004083 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000406e:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004071:	85 c0                	test   eax,eax
10004073:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004076:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004079:	74 05                	je     10004080 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
1000407b:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
1000407e:	eb 03                	jmp    10004083 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004080:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004083:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
1000408b:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
1000408f:	5b                   	pop    ebx
10004090:	5e                   	pop    esi
10004091:	5f                   	pop    edi
10004092:	e9 fc ff ff ff       	jmp    10004093 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004093: R_386_PC32	operator delete(void*, unsigned long)
10004097:	5b                   	pop    ebx
10004098:	5e                   	pop    esi
10004099:	5f                   	pop    edi
1000409a:	c3                   	ret    
1000409b:	90                   	nop

1000409c <ListItem<NIWindow*>::getValue()>:
1000409c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100040a0:	c3                   	ret    
100040a1:	53                   	push   ebx
100040a2:	46                   	inc    esi
100040a3:	4e                   	dec    esi
100040a4:	43                   	inc    ebx
100040a5:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
100040a8:	4e                   	dec    esi
100040a9:	32 00                	xor    al,BYTE PTR [eax]
100040ab:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
100040ae:	53                   	push   ebx
100040af:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
100040b2:	43                   	inc    ebx
100040b3:	6f                   	outs   dx,DWORD PTR ds:[esi]
100040b4:	6e                   	outs   dx,BYTE PTR ds:[esi]
100040b5:	74 65                	je     1000411c <ListItem<NIWindow*>::getValue()+0x80>
100040b7:	78 74                	js     1000412d <ListItem<NIWindow*>::getValue()+0x91>
100040b9:	3a 3a                	cmp    bh,BYTE PTR [edx]
100040bb:	64 72 76             	fs jb  10004134 <ListItem<NIWindow*>::getValue()+0x98>
100040be:	52                   	push   edx
100040bf:	65 6e                	outs   dx,BYTE PTR gs:[esi]
100040c1:	64 65 72 54          	fs gs jb 10004119 <ListItem<NIWindow*>::getValue()+0x7d>
100040c5:	54                   	push   esp
100040c6:	46                   	inc    esi
100040c7:	34 00                	xor    al,0x0
100040c9:	43                   	inc    ebx
100040ca:	3a 2f                	cmp    ch,BYTE PTR [edi]
100040cc:	42                   	inc    edx
100040cd:	61                   	popa   
100040ce:	6e                   	outs   dx,BYTE PTR ds:[esi]
100040cf:	61                   	popa   
100040d0:	6e                   	outs   dx,BYTE PTR ds:[esi]
100040d1:	61                   	popa   
100040d2:	2f                   	das    
100040d3:	46                   	inc    esi
100040d4:	6f                   	outs   dx,DWORD PTR ds:[esi]
100040d5:	6e                   	outs   dx,BYTE PTR ds:[esi]
100040d6:	74 73                	je     1000414b <ListItem<NIWindow*>::getValue()+0xaf>
100040d8:	2f                   	das    
100040d9:	53                   	push   ebx
100040da:	46                   	inc    esi
100040db:	4e                   	dec    esi
100040dc:	00 43 41             	add    BYTE PTR [ebx+0x41],al
100040df:	4e                   	dec    esi
100040e0:	4e                   	dec    esi
100040e1:	4f                   	dec    edi
100040e2:	54                   	push   esp
100040e3:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
100040e7:	44                   	inc    esp
100040e8:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
100040eb:	4e                   	dec    esi
100040ec:	54                   	push   esp
100040ed:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
100040f1:	45                   	inc    ebp
100040f2:	43                   	inc    ebx
100040f3:	54                   	push   esp
100040f4:	4f                   	dec    edi
100040f5:	52                   	push   edx
100040f6:	59                   	pop    ecx
100040f7:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
100040fa:	2f                   	das    
100040fb:	42                   	inc    edx
100040fc:	61                   	popa   
100040fd:	6e                   	outs   dx,BYTE PTR ds:[esi]
100040fe:	61                   	popa   
100040ff:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004100:	61                   	popa   
10004101:	2f                   	das    
10004102:	46                   	inc    esi
10004103:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004104:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004105:	74 73                	je     1000417a <ListItem<NIWindow*>::getValue()+0xde>
10004107:	2f                   	das    
10004108:	53                   	push   ebx
10004109:	46                   	inc    esi
1000410a:	4e                   	dec    esi
1000410b:	2f                   	das    
1000410c:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
1000410f:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004110:	74 20                	je     10004132 <ListItem<NIWindow*>::getValue()+0x96>
10004112:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
10004119:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
10004120:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
10004124:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
1000412a:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000412b:	74 3a                	je     10004167 <ListItem<NIWindow*>::getValue()+0xcb>
1000412d:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
10004133:	53                   	push   ebx
10004134:	46                   	inc    esi
10004135:	4e                   	dec    esi
10004136:	5f                   	pop    edi
10004137:	52                   	push   edx
10004138:	45                   	inc    ebp
10004139:	53                   	push   ebx
1000413a:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
10004140:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
10004143:	6d                   	ins    DWORD PTR es:[edi],dx
10004144:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004145:	72 79                	jb     100041c0 <_ssfn__compute_huffman_codes::length_dezigzag>
10004147:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
1000414a:	6c                   	ins    BYTE PTR es:[edi],dx
1000414b:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000414c:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
1000414f:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
10004156:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004157:	72 00                	jb     10004159 <ListItem<NIWindow*>::getValue()+0xbd>
10004159:	42                   	inc    edx
1000415a:	61                   	popa   
1000415b:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
1000415f:	6c                   	ins    BYTE PTR es:[edi],dx
10004160:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004164:	72 6d                	jb     100041d3 <_ssfn__compute_huffman_codes::length_dezigzag+0x13>
10004166:	61                   	popa   
10004167:	74 00                	je     10004169 <ListItem<NIWindow*>::getValue()+0xcd>
10004169:	4e                   	dec    esi
1000416a:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000416b:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000416e:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000416f:	74 20                	je     10004191 <ListItem<NIWindow*>::getValue()+0xf5>
10004171:	66 61                	popaw  
10004173:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004176:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004178:	75 6e                	jne    100041e8 <_ssfn__zdist_extra+0x8>
1000417a:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000417e:	76 61                	jbe    100041e1 <_ssfn__zdist_extra+0x1>
10004180:	6c                   	ins    BYTE PTR es:[edi],dx
10004181:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004189:	20 76 61             	and    BYTE PTR [esi+0x61],dh
1000418c:	6c                   	ins    BYTE PTR es:[edi],dx
1000418d:	75 65                	jne    100041f4 <_ssfn__zdist_extra+0x14>
1000418f:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004192:	76 61                	jbe    100041f5 <_ssfn__zdist_extra+0x15>
10004194:	6c                   	ins    BYTE PTR es:[edi],dx
10004195:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
1000419d:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
100041a0:	76 61                	jbe    10004203 <_ssfn__zdist_extra+0x23>
100041a2:	6c                   	ins    BYTE PTR es:[edi],dx
100041a3:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
100041ab:	47                   	inc    edi
100041ac:	6c                   	ins    BYTE PTR es:[edi],dx
100041ad:	79 70                	jns    1000421f <_ssfn__zdist_extra+0x3f>
100041af:	68 20 6e 6f 74       	push   0x746f6e20
100041b4:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
100041b7:	75 6e                	jne    10004227 <_ssfn__zdist_extra+0x47>
100041b9:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
100041bd:	66 90                	xchg   ax,ax
100041bf:	90                   	nop

100041c0 <_ssfn__compute_huffman_codes::length_dezigzag>:
100041c0:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
100041d0:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

100041e0 <_ssfn__zdist_extra>:
	...
100041f0:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
10004200:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
10004210:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
10004220:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
10004230:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10004240:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10004250:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004260 <_ssfn__zdist_base>:
10004260:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004270:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004280:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004290:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
100042a0:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
100042b0:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
100042c0:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
100042d0:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

100042e0 <_ssfn__zlength_extra>:
	...
10004300:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
10004310:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
10004320:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
10004330:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10004340:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004360 <_ssfn__zlength_base>:
10004360:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004370:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004380:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004390:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
100043a0:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
100043b0:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
100043c0:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
100043d0:	02 01 00 00 00 00 00 00 00 00 00 00 41 20 69 74     ............A it
100043e0:	65 72 20 25 64 0a 00 42 20 69 74 65 72 20 25 64     er %d..B iter %d
100043f0:	0a 00 43 20 69 74 65 72 20 25 64 0a 00 41 53 53     ..C iter %d..ASS
10004400:	45 52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28     ERTION FAILURE (
10004410:	41 29 2e 00                                         A)..
