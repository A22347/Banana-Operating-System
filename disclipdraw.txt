
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 0c             	sub    esp,0xc
10000007:	e8 fc ff ff ff       	call   10000008 <start(void*)+0x8>	10000008: R_386_PC32	NiInstallSysHooks()
1000000c:	83 ec 0c             	sub    esp,0xc
1000000f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000011: R_386_32	screen
10000015:	e8 fc ff ff ff       	call   10000016 <start(void*)+0x16>	10000016: R_386_PC32	Video::getWidth()
1000001a:	89 c6                	mov    esi,eax
1000001c:	58                   	pop    eax
1000001d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000001f: R_386_32	screen
10000023:	e8 fc ff ff ff       	call   10000024 <start(void*)+0x24>	10000024: R_386_PC32	Video::getHeight()
10000028:	5a                   	pop    edx
10000029:	89 c7                	mov    edi,eax
1000002b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002d: R_386_32	screen
10000031:	e8 fc ff ff ff       	call   10000032 <start(void*)+0x32>	10000032: R_386_PC32	Video::getWidth()
10000036:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000003d:	89 c5                	mov    ebp,eax
1000003f:	e8 fc ff ff ff       	call   10000040 <start(void*)+0x40>	10000040: R_386_PC32	malloc
10000044:	59                   	pop    ecx
10000045:	89 c3                	mov    ebx,eax
10000047:	58                   	pop    eax
10000048:	6a 20                	push   0x20
1000004a:	55                   	push   ebp
1000004b:	57                   	push   edi
1000004c:	56                   	push   esi
1000004d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000004f: R_386_32	screen
10000053:	53                   	push   ebx
10000054:	e8 fc ff ff ff       	call   10000055 <start(void*)+0x55>	10000055: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000059:	83 c4 14             	add    esp,0x14
1000005c:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	1000005e: R_386_32	ctxt
10000062:	6a 14                	push   0x14
10000064:	e8 fc ff ff ff       	call   10000065 <start(void*)+0x65>	10000065: R_386_PC32	malloc
10000069:	89 c6                	mov    esi,eax
1000006b:	58                   	pop    eax
1000006c:	5a                   	pop    edx
1000006d:	53                   	push   ebx
1000006e:	56                   	push   esi
1000006f:	e8 fc ff ff ff       	call   10000070 <start(void*)+0x70>	10000070: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000074:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
1000007b:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	1000007d: R_386_32	desktop
10000081:	e8 fc ff ff ff       	call   10000082 <start(void*)+0x82>	10000082: R_386_PC32	malloc
10000086:	59                   	pop    ecx
10000087:	89 c5                	mov    ebp,eax
10000089:	5b                   	pop    ebx
1000008a:	6a 01                	push   0x1
1000008c:	6a 01                	push   0x1
1000008e:	6a 00                	push   0x0
10000090:	6a 00                	push   0x0
10000092:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000094: R_386_32	ctxt
10000098:	50                   	push   eax
10000099:	e8 fc ff ff ff       	call   1000009a <start(void*)+0x9a>	1000009a: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000009e:	83 c4 14             	add    esp,0x14
100000a1:	6a 40                	push   0x40
100000a3:	e8 fc ff ff ff       	call   100000a4 <start(void*)+0xa4>	100000a4: R_386_PC32	malloc
100000a8:	5e                   	pop    esi
100000a9:	89 c7                	mov    edi,eax
100000ab:	58                   	pop    eax
100000ac:	68 40 01 00 00       	push   0x140
100000b1:	68 90 01 00 00       	push   0x190
100000b6:	6a 32                	push   0x32
100000b8:	6a 32                	push   0x32
100000ba:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100000bc: R_386_32	ctxt
100000c0:	57                   	push   edi
100000c1:	e8 fc ff ff ff       	call   100000c2 <start(void*)+0xc2>	100000c2: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000c6:	83 c4 14             	add    esp,0x14
100000c9:	6a 40                	push   0x40
100000cb:	e8 fc ff ff ff       	call   100000cc <start(void*)+0xcc>	100000cc: R_386_PC32	malloc
100000d0:	89 c6                	mov    esi,eax
100000d2:	58                   	pop    eax
100000d3:	5a                   	pop    edx
100000d4:	68 7c 01 00 00       	push   0x17c
100000d9:	68 f4 01 00 00       	push   0x1f4
100000de:	68 96 00 00 00       	push   0x96
100000e3:	68 c8 00 00 00       	push   0xc8
100000e8:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100000ea: R_386_32	ctxt
100000ee:	56                   	push   esi
100000ef:	e8 fc ff ff ff       	call   100000f0 <start(void*)+0xf0>	100000f0: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000f4:	83 c4 14             	add    esp,0x14
100000f7:	6a 40                	push   0x40
100000f9:	e8 fc ff ff ff       	call   100000fa <start(void*)+0xfa>	100000fa: R_386_PC32	malloc
100000fe:	59                   	pop    ecx
100000ff:	89 c3                	mov    ebx,eax
10000101:	58                   	pop    eax
10000102:	68 af 00 00 00       	push   0xaf
10000107:	68 0e 01 00 00       	push   0x10e
1000010c:	68 90 01 00 00       	push   0x190
10000111:	6a 7d                	push   0x7d
10000113:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000115: R_386_32	ctxt
10000119:	53                   	push   ebx
1000011a:	e8 fc ff ff ff       	call   1000011b <start(void*)+0x11b>	1000011b: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000011f:	83 c4 18             	add    esp,0x18
10000122:	83 4b 3c 01          	or     DWORD PTR [ebx+0x3c],0x1
10000126:	55                   	push   ebp
10000127:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000129: R_386_32	desktop
1000012d:	e8 fc ff ff ff       	call   1000012e <start(void*)+0x12e>	1000012e: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000132:	58                   	pop    eax
10000133:	5a                   	pop    edx
10000134:	57                   	push   edi
10000135:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000137: R_386_32	desktop
1000013b:	e8 fc ff ff ff       	call   1000013c <start(void*)+0x13c>	1000013c: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000140:	59                   	pop    ecx
10000141:	5f                   	pop    edi
10000142:	56                   	push   esi
10000143:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000145: R_386_32	desktop
10000149:	e8 fc ff ff ff       	call   1000014a <start(void*)+0x14a>	1000014a: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000014e:	5d                   	pop    ebp
1000014f:	58                   	pop    eax
10000150:	53                   	push   ebx
10000151:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000153: R_386_32	desktop
10000157:	e8 fc ff ff ff       	call   10000158 <start(void*)+0x158>	10000158: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000015c:	58                   	pop    eax
1000015d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000015f: R_386_32	desktop
10000163:	e8 fc ff ff ff       	call   10000164 <start(void*)+0x164>	10000164: R_386_PC32	NIDesktop::completeRefresh()
10000168:	c7 04 24 24 07 00 00 	mov    DWORD PTR [esp],0x724
1000016f:	e8 fc ff ff ff       	call   10000170 <start(void*)+0x170>	10000170: R_386_PC32	malloc
10000174:	6a 00                	push   0x0
10000176:	89 c3                	mov    ebx,eax
10000178:	6a 00                	push   0x0
1000017a:	68 e9 4a 00 10       	push   0x10004ae9	1000017b: R_386_32	.text
1000017f:	50                   	push   eax
10000180:	e8 fc ff ff ff       	call   10000181 <start(void*)+0x181>	10000181: R_386_PC32	Process::Process(char const*, Process*, char**)
10000185:	83 c4 14             	add    esp,0x14
10000188:	53                   	push   ebx
10000189:	e8 fc ff ff ff       	call   1000018a <start(void*)+0x18a>	1000018a: R_386_PC32	Process::createUserThread()
1000018e:	83 c4 10             	add    esp,0x10
10000191:	83 ec 0c             	sub    esp,0xc
10000194:	6a 02                	push   0x2
10000196:	e8 fc ff ff ff       	call   10000197 <start(void*)+0x197>	10000197: R_386_PC32	blockTask(TaskState)
1000019b:	eb f1                	jmp    1000018e <start(void*)+0x18e>
1000019d:	8d 76 00             	lea    esi,[esi+0x0]

100001a0 <begin(void*)>:
100001a0:	83 ec 18             	sub    esp,0x18
100001a3:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100001a7:	e8 fc ff ff ff       	call   100001a8 <begin(void*)+0x8>	100001a8: R_386_PC32	start(void*)

100001ac <_ssfn__bitreverse16>:
100001ac:	89 c2                	mov    edx,eax
100001ae:	01 c0                	add    eax,eax
100001b0:	d1 fa                	sar    edx,1
100001b2:	25 aa aa 00 00       	and    eax,0xaaaa
100001b7:	81 e2 55 55 00 00    	and    edx,0x5555
100001bd:	09 c2                	or     edx,eax
100001bf:	89 d0                	mov    eax,edx
100001c1:	c1 e2 02             	shl    edx,0x2
100001c4:	c1 f8 02             	sar    eax,0x2
100001c7:	81 e2 cc cc 00 00    	and    edx,0xcccc
100001cd:	25 33 33 00 00       	and    eax,0x3333
100001d2:	09 d0                	or     eax,edx
100001d4:	89 c2                	mov    edx,eax
100001d6:	c1 e0 04             	shl    eax,0x4
100001d9:	c1 fa 04             	sar    edx,0x4
100001dc:	25 f0 f0 00 00       	and    eax,0xf0f0
100001e1:	81 e2 0f 0f 00 00    	and    edx,0xf0f
100001e7:	09 c2                	or     edx,eax
100001e9:	89 d1                	mov    ecx,edx
100001eb:	c1 e2 08             	shl    edx,0x8
100001ee:	c1 f9 08             	sar    ecx,0x8
100001f1:	0f b7 c2             	movzx  eax,dx
100001f4:	09 c8                	or     eax,ecx
100001f6:	c3                   	ret    

100001f7 <_ssfn__zhuffman_decode>:
100001f7:	55                   	push   ebp
100001f8:	57                   	push   edi
100001f9:	56                   	push   esi
100001fa:	53                   	push   ebx
100001fb:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001ff:	7f 1d                	jg     1000021e <_ssfn__zhuffman_decode+0x27>
10000201:	8b 18                	mov    ebx,DWORD PTR [eax]
10000203:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000206:	89 08                	mov    DWORD PTR [eax],ecx
10000208:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000020b:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
1000020e:	d3 e3                	shl    ebx,cl
10000210:	83 c1 08             	add    ecx,0x8
10000213:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
10000216:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
10000219:	83 f9 18             	cmp    ecx,0x18
1000021c:	eb e1                	jmp    100001ff <_ssfn__zhuffman_decode+0x8>
1000021e:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
10000221:	89 f9                	mov    ecx,edi
10000223:	81 e1 ff 01 00 00    	and    ecx,0x1ff
10000229:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
1000022d:	89 cb                	mov    ebx,ecx
1000022f:	85 c9                	test   ecx,ecx
10000231:	74 15                	je     10000248 <_ssfn__zhuffman_decode+0x51>
10000233:	c1 f9 09             	sar    ecx,0x9
10000236:	89 da                	mov    edx,ebx
10000238:	d3 ef                	shr    edi,cl
1000023a:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
1000023d:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
10000240:	81 e2 ff 01 00 00    	and    edx,0x1ff
10000246:	eb 58                	jmp    100002a0 <_ssfn__zhuffman_decode+0xa9>
10000248:	89 d5                	mov    ebp,edx
1000024a:	89 c3                	mov    ebx,eax
1000024c:	be 0a 00 00 00       	mov    esi,0xa
10000251:	89 f8                	mov    eax,edi
10000253:	e8 54 ff ff ff       	call   100001ac <_ssfn__bitreverse16>
10000258:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
1000025f:	7c 03                	jl     10000264 <_ssfn__zhuffman_decode+0x6d>
10000261:	46                   	inc    esi
10000262:	eb f4                	jmp    10000258 <_ssfn__zhuffman_decode+0x61>
10000264:	83 ca ff             	or     edx,0xffffffff
10000267:	83 fe 10             	cmp    esi,0x10
1000026a:	74 34                	je     100002a0 <_ssfn__zhuffman_decode+0xa9>
1000026c:	8d 14 36             	lea    edx,[esi+esi*1]
1000026f:	b9 10 00 00 00       	mov    ecx,0x10
10000274:	01 ea                	add    edx,ebp
10000276:	29 f1                	sub    ecx,esi
10000278:	d3 f8                	sar    eax,cl
1000027a:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000281:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000288:	29 c8                	sub    eax,ecx
1000028a:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
1000028d:	89 f1                	mov    ecx,esi
1000028f:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
10000296:	d3 ef                	shr    edi,cl
10000298:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000029b:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
100002a0:	5b                   	pop    ebx
100002a1:	89 d0                	mov    eax,edx
100002a3:	5e                   	pop    esi
100002a4:	5f                   	pop    edi
100002a5:	5d                   	pop    ebp
100002a6:	c3                   	ret    

100002a7 <_ssfn__zexpand>:
100002a7:	55                   	push   ebp
100002a8:	57                   	push   edi
100002a9:	56                   	push   esi
100002aa:	53                   	push   ebx
100002ab:	83 ec 0c             	sub    esp,0xc
100002ae:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
100002b1:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
100002b4:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
100002b7:	29 f9                	sub    ecx,edi
100002b9:	83 f9 08             	cmp    ecx,0x8
100002bc:	74 04                	je     100002c2 <_ssfn__zexpand+0x1b>
100002be:	31 c0                	xor    eax,eax
100002c0:	eb 3c                	jmp    100002fe <_ssfn__zexpand+0x57>
100002c2:	80 3f 53             	cmp    BYTE PTR [edi],0x53
100002c5:	75 f7                	jne    100002be <_ssfn__zexpand+0x17>
100002c7:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
100002cb:	75 f1                	jne    100002be <_ssfn__zexpand+0x17>
100002cd:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
100002d1:	75 eb                	jne    100002be <_ssfn__zexpand+0x17>
100002d3:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
100002d6:	89 c3                	mov    ebx,eax
100002d8:	89 d6                	mov    esi,edx
100002da:	50                   	push   eax
100002db:	50                   	push   eax
100002dc:	55                   	push   ebp
100002dd:	57                   	push   edi
100002de:	e8 fc ff ff ff       	call   100002df <_ssfn__zexpand+0x38>	100002df: R_386_PC32	realloc
100002e3:	83 c4 10             	add    esp,0x10
100002e6:	85 c0                	test   eax,eax
100002e8:	74 d4                	je     100002be <_ssfn__zexpand+0x17>
100002ea:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100002ed:	29 fe                	sub    esi,edi
100002ef:	01 c6                	add    esi,eax
100002f1:	01 e8                	add    eax,ebp
100002f3:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002f6:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002f9:	b8 01 00 00 00       	mov    eax,0x1
100002fe:	83 c4 0c             	add    esp,0xc
10000301:	5b                   	pop    ebx
10000302:	5e                   	pop    esi
10000303:	5f                   	pop    edi
10000304:	5d                   	pop    ebp
10000305:	c3                   	ret    

10000306 <_ssfn__zbuild_huffman>:
10000306:	55                   	push   ebp
10000307:	57                   	push   edi
10000308:	56                   	push   esi
10000309:	53                   	push   ebx
1000030a:	89 c3                	mov    ebx,eax
1000030c:	81 ec a0 00 00 00    	sub    esp,0xa0
10000312:	31 c0                	xor    eax,eax
10000314:	89 0c 24             	mov    DWORD PTR [esp],ecx
10000317:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
1000031b:	b9 11 00 00 00       	mov    ecx,0x11
10000320:	89 ef                	mov    edi,ebp
10000322:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10000326:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000328:	b9 00 01 00 00       	mov    ecx,0x100
1000032d:	89 df                	mov    edi,ebx
1000032f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000331:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10000334:	7d 0f                	jge    10000345 <_ssfn__zbuild_huffman+0x3f>
10000336:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000033a:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
1000033e:	40                   	inc    eax
1000033f:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
10000343:	eb ec                	jmp    10000331 <_ssfn__zbuild_huffman+0x2b>
10000345:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
1000034d:	b9 01 00 00 00       	mov    ecx,0x1
10000352:	b8 01 00 00 00       	mov    eax,0x1
10000357:	89 c7                	mov    edi,eax
10000359:	d3 e7                	shl    edi,cl
1000035b:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
1000035f:	0f 8f 10 01 00 00    	jg     10000475 <_ssfn__zbuild_huffman+0x16f>
10000365:	41                   	inc    ecx
10000366:	83 f9 10             	cmp    ecx,0x10
10000369:	75 ec                	jne    10000357 <_ssfn__zbuild_huffman+0x51>
1000036b:	31 ff                	xor    edi,edi
1000036d:	31 f6                	xor    esi,esi
1000036f:	b8 01 00 00 00       	mov    eax,0x1
10000374:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000378:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
1000037c:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000384:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
1000038c:	01 ef                	add    edi,ebp
1000038e:	85 ed                	test   ebp,ebp
10000390:	74 11                	je     100003a3 <_ssfn__zbuild_huffman+0x9d>
10000392:	ba 01 00 00 00       	mov    edx,0x1
10000397:	88 c1                	mov    cl,al
10000399:	d3 e2                	shl    edx,cl
1000039b:	39 fa                	cmp    edx,edi
1000039d:	0f 8c d2 00 00 00    	jl     10000475 <_ssfn__zbuild_huffman+0x16f>
100003a3:	89 fa                	mov    edx,edi
100003a5:	b9 10 00 00 00       	mov    ecx,0x10
100003aa:	01 ff                	add    edi,edi
100003ac:	29 c1                	sub    ecx,eax
100003ae:	01 ee                	add    esi,ebp
100003b0:	d3 e2                	shl    edx,cl
100003b2:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
100003b9:	40                   	inc    eax
100003ba:	83 f8 10             	cmp    eax,0x10
100003bd:	75 b5                	jne    10000374 <_ssfn__zbuild_huffman+0x6e>
100003bf:	8b 04 24             	mov    eax,DWORD PTR [esp]
100003c2:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
100003cc:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100003d0:	31 ff                	xor    edi,edi
100003d2:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
100003d6:	0f 8d 9d 00 00 00    	jge    10000479 <_ssfn__zbuild_huffman+0x173>
100003dc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100003e0:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
100003e4:	89 f2                	mov    edx,esi
100003e6:	85 f6                	test   esi,esi
100003e8:	0f 84 81 00 00 00    	je     1000046f <_ssfn__zbuild_huffman+0x169>
100003ee:	8d 0c 36             	lea    ecx,[esi+esi*1]
100003f1:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003f5:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003f8:	89 e9                	mov    ecx,ebp
100003fa:	89 04 24             	mov    DWORD PTR [esp],eax
100003fd:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
10000404:	29 c1                	sub    ecx,eax
10000406:	89 c8                	mov    eax,ecx
10000408:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000040b:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
10000412:	01 c8                	add    eax,ecx
10000414:	83 fe 09             	cmp    esi,0x9
10000417:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
1000041e:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
10000426:	7f 42                	jg     1000046a <_ssfn__zbuild_huffman+0x164>
10000428:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
1000042c:	89 e8                	mov    eax,ebp
1000042e:	e8 79 fd ff ff       	call   100001ac <_ssfn__bitreverse16>
10000433:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
10000437:	b9 10 00 00 00       	mov    ecx,0x10
1000043c:	29 f1                	sub    ecx,esi
1000043e:	d3 f8                	sar    eax,cl
10000440:	88 d1                	mov    cl,dl
10000442:	89 04 24             	mov    DWORD PTR [esp],eax
10000445:	89 f2                	mov    edx,esi
10000447:	b8 01 00 00 00       	mov    eax,0x1
1000044c:	c1 e2 09             	shl    edx,0x9
1000044f:	d3 e0                	shl    eax,cl
10000451:	09 fa                	or     edx,edi
10000453:	89 c1                	mov    ecx,eax
10000455:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
1000045c:	7f 0c                	jg     1000046a <_ssfn__zbuild_huffman+0x164>
1000045e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000461:	01 0c 24             	add    DWORD PTR [esp],ecx
10000464:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000468:	eb eb                	jmp    10000455 <_ssfn__zbuild_huffman+0x14f>
1000046a:	45                   	inc    ebp
1000046b:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
1000046f:	47                   	inc    edi
10000470:	e9 5d ff ff ff       	jmp    100003d2 <_ssfn__zbuild_huffman+0xcc>
10000475:	31 c0                	xor    eax,eax
10000477:	eb 05                	jmp    1000047e <_ssfn__zbuild_huffman+0x178>
10000479:	b8 01 00 00 00       	mov    eax,0x1
1000047e:	81 c4 a0 00 00 00    	add    esp,0xa0
10000484:	5b                   	pop    ebx
10000485:	5e                   	pop    esi
10000486:	5f                   	pop    edi
10000487:	5d                   	pop    ebp
10000488:	c3                   	ret    

10000489 <_ssfn_fc.part.1>:
10000489:	55                   	push   ebp
1000048a:	57                   	push   edi
1000048b:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000491:	56                   	push   esi
10000492:	53                   	push   ebx
10000493:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000499:	83 ec 0c             	sub    esp,0xc
1000049c:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
1000049f:	74 5d                	je     100004fe <_ssfn_fc.part.1+0x75>
100004a1:	31 f6                	xor    esi,esi
100004a3:	8b 03                	mov    eax,DWORD PTR [ebx]
100004a5:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
100004a9:	74 35                	je     100004e0 <_ssfn_fc.part.1+0x57>
100004ab:	31 ed                	xor    ebp,ebp
100004ad:	8b 03                	mov    eax,DWORD PTR [ebx]
100004af:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
100004b2:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
100004b5:	85 c0                	test   eax,eax
100004b7:	74 0c                	je     100004c5 <_ssfn_fc.part.1+0x3c>
100004b9:	83 ec 0c             	sub    esp,0xc
100004bc:	50                   	push   eax
100004bd:	e8 fc ff ff ff       	call   100004be <_ssfn_fc.part.1+0x35>	100004be: R_386_PC32	free
100004c2:	83 c4 10             	add    esp,0x10
100004c5:	83 c5 04             	add    ebp,0x4
100004c8:	81 fd 00 04 00 00    	cmp    ebp,0x400
100004ce:	75 dd                	jne    100004ad <_ssfn_fc.part.1+0x24>
100004d0:	83 ec 0c             	sub    esp,0xc
100004d3:	8b 03                	mov    eax,DWORD PTR [ebx]
100004d5:	ff 34 30             	push   DWORD PTR [eax+esi*1]
100004d8:	e8 fc ff ff ff       	call   100004d9 <_ssfn_fc.part.1+0x50>	100004d9: R_386_PC32	free
100004dd:	83 c4 10             	add    esp,0x10
100004e0:	83 c6 04             	add    esi,0x4
100004e3:	81 fe 00 04 00 00    	cmp    esi,0x400
100004e9:	75 b8                	jne    100004a3 <_ssfn_fc.part.1+0x1a>
100004eb:	83 ec 0c             	sub    esp,0xc
100004ee:	ff 33                	push   DWORD PTR [ebx]
100004f0:	e8 fc ff ff ff       	call   100004f1 <_ssfn_fc.part.1+0x68>	100004f1: R_386_PC32	free
100004f5:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004fb:	83 c4 10             	add    esp,0x10
100004fe:	83 c3 04             	add    ebx,0x4
10000501:	39 fb                	cmp    ebx,edi
10000503:	75 97                	jne    1000049c <_ssfn_fc.part.1+0x13>
10000505:	83 c4 0c             	add    esp,0xc
10000508:	5b                   	pop    ebx
10000509:	5e                   	pop    esi
1000050a:	5f                   	pop    edi
1000050b:	5d                   	pop    ebp
1000050c:	c3                   	ret    

1000050d <_ssfn_l>:
1000050d:	57                   	push   edi
1000050e:	56                   	push   esi
1000050f:	53                   	push   ebx
10000510:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000514:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000518:	39 ce                	cmp    esi,ecx
1000051a:	89 f3                	mov    ebx,esi
1000051c:	0f 9d c1             	setge  cl
1000051f:	c1 eb 1f             	shr    ebx,0x1f
10000522:	09 d9                	or     ecx,ebx
10000524:	89 fb                	mov    ebx,edi
10000526:	c1 eb 1f             	shr    ebx,0x1f
10000529:	08 d9                	or     cl,bl
1000052b:	0f 85 e9 00 00 00    	jne    1000061a <_ssfn_l+0x10d>
10000531:	39 d7                	cmp    edi,edx
10000533:	0f 8d e1 00 00 00    	jge    1000061a <_ssfn_l+0x10d>
10000539:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
1000053f:	8d 51 08             	lea    edx,[ecx+0x8]
10000542:	8d 4f 08             	lea    ecx,[edi+0x8]
10000545:	c1 fa 04             	sar    edx,0x4
10000548:	c1 f9 04             	sar    ecx,0x4
1000054b:	39 ca                	cmp    edx,ecx
1000054d:	75 1a                	jne    10000569 <_ssfn_l+0x5c>
1000054f:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
10000555:	8d 4e 08             	lea    ecx,[esi+0x8]
10000558:	83 c2 08             	add    edx,0x8
1000055b:	c1 f9 04             	sar    ecx,0x4
1000055e:	c1 fa 04             	sar    edx,0x4
10000561:	39 ca                	cmp    edx,ecx
10000563:	0f 84 b1 00 00 00    	je     1000061a <_ssfn_l+0x10d>
10000569:	89 c3                	mov    ebx,eax
1000056b:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000571:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
10000577:	7f 3e                	jg     100005b7 <_ssfn_l+0xaa>
10000579:	05 00 02 00 00       	add    eax,0x200
1000057e:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000584:	52                   	push   edx
10000585:	01 c0                	add    eax,eax
10000587:	52                   	push   edx
10000588:	50                   	push   eax
10000589:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
1000058f:	e8 fc ff ff ff       	call   10000590 <_ssfn_l+0x83>	10000590: R_386_PC32	realloc
10000594:	83 c4 10             	add    esp,0x10
10000597:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
1000059d:	85 c0                	test   eax,eax
1000059f:	75 16                	jne    100005b7 <_ssfn_l+0xaa>
100005a1:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
100005ab:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
100005b5:	eb 63                	jmp    1000061a <_ssfn_l+0x10d>
100005b7:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
100005be:	75 26                	jne    100005e6 <_ssfn_l+0xd9>
100005c0:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005c6:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
100005cc:	66 89 10             	mov    WORD PTR [eax],dx
100005cf:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005d5:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
100005db:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
100005df:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005e6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005ec:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005f2:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005f6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005fc:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000602:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
10000607:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
1000060d:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000614:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
1000061a:	5b                   	pop    ebx
1000061b:	5e                   	pop    esi
1000061c:	5f                   	pop    edi
1000061d:	c3                   	ret    

1000061e <_ssfn_b>:
1000061e:	55                   	push   ebp
1000061f:	57                   	push   edi
10000620:	56                   	push   esi
10000621:	53                   	push   ebx
10000622:	83 ec 4c             	sub    esp,0x4c
10000625:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000629:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
1000062d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10000631:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
10000635:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000639:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
1000063d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000641:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
10000645:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000649:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
1000064d:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10000651:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
10000655:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000659:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000065d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000661:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000668:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000066c:	83 f8 04             	cmp    eax,0x4
1000066f:	75 28                	jne    10000699 <_ssfn_b+0x7b>
10000671:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000675:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000679:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000067d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000681:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000685:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000689:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000068d:	83 c4 4c             	add    esp,0x4c
10000690:	5b                   	pop    ebx
10000691:	5e                   	pop    esi
10000692:	5f                   	pop    edi
10000693:	5d                   	pop    ebp
10000694:	e9 74 fe ff ff       	jmp    1000050d <_ssfn_l>
10000699:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000069d:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
100006a1:	75 0e                	jne    100006b1 <_ssfn_b+0x93>
100006a3:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100006a7:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100006ab:	0f 84 19 01 00 00    	je     100007ca <_ssfn_b+0x1ac>
100006b1:	be 02 00 00 00       	mov    esi,0x2
100006b6:	89 d8                	mov    eax,ebx
100006b8:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
100006bc:	99                   	cdq    
100006bd:	f7 fe                	idiv   esi
100006bf:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
100006c3:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100006c7:	89 e8                	mov    eax,ebp
100006c9:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
100006cd:	99                   	cdq    
100006ce:	f7 fe                	idiv   esi
100006d0:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
100006d4:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100006d8:	89 f8                	mov    eax,edi
100006da:	29 d8                	sub    eax,ebx
100006dc:	99                   	cdq    
100006dd:	f7 fe                	idiv   esi
100006df:	01 c3                	add    ebx,eax
100006e1:	89 c8                	mov    eax,ecx
100006e3:	29 e8                	sub    eax,ebp
100006e5:	99                   	cdq    
100006e6:	f7 fe                	idiv   esi
100006e8:	01 e8                	add    eax,ebp
100006ea:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006ee:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006f2:	29 f8                	sub    eax,edi
100006f4:	99                   	cdq    
100006f5:	f7 fe                	idiv   esi
100006f7:	01 f8                	add    eax,edi
100006f9:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006fd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000701:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000705:	29 c8                	sub    eax,ecx
10000707:	99                   	cdq    
10000708:	f7 fe                	idiv   esi
1000070a:	01 c8                	add    eax,ecx
1000070c:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10000710:	89 d8                	mov    eax,ebx
10000712:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10000716:	99                   	cdq    
10000717:	f7 fe                	idiv   esi
10000719:	8d 0c 38             	lea    ecx,[eax+edi*1]
1000071c:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000720:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000724:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10000728:	99                   	cdq    
10000729:	f7 fe                	idiv   esi
1000072b:	8d 2c 38             	lea    ebp,[eax+edi*1]
1000072e:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000732:	29 d8                	sub    eax,ebx
10000734:	99                   	cdq    
10000735:	f7 fe                	idiv   esi
10000737:	83 ec 0c             	sub    esp,0xc
1000073a:	01 d8                	add    eax,ebx
1000073c:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10000740:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000744:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10000748:	99                   	cdq    
10000749:	f7 fe                	idiv   esi
1000074b:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
1000074f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000753:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000757:	29 c8                	sub    eax,ecx
10000759:	99                   	cdq    
1000075a:	f7 fe                	idiv   esi
1000075c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000075f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000763:	29 e8                	sub    eax,ebp
10000765:	99                   	cdq    
10000766:	f7 fe                	idiv   esi
10000768:	8d 34 28             	lea    esi,[eax+ebp*1]
1000076b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000076f:	8d 78 01             	lea    edi,[eax+0x1]
10000772:	57                   	push   edi
10000773:	56                   	push   esi
10000774:	53                   	push   ebx
10000775:	55                   	push   ebp
10000776:	51                   	push   ecx
10000777:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000077b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000077f:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000783:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000787:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000078b:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000078f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000793:	e8 86 fe ff ff       	call   1000061e <_ssfn_b>
10000798:	83 c4 24             	add    esp,0x24
1000079b:	57                   	push   edi
1000079c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100007a0:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100007a4:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
100007a8:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
100007ac:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
100007b0:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
100007b4:	56                   	push   esi
100007b5:	53                   	push   ebx
100007b6:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100007ba:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100007be:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100007c2:	e8 57 fe ff ff       	call   1000061e <_ssfn_b>
100007c7:	83 c4 30             	add    esp,0x30
100007ca:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
100007cf:	0f 85 9c fe ff ff    	jne    10000671 <_ssfn_b+0x53>
100007d5:	83 c4 4c             	add    esp,0x4c
100007d8:	5b                   	pop    ebx
100007d9:	5e                   	pop    esi
100007da:	5f                   	pop    edi
100007db:	5d                   	pop    ebp
100007dc:	c3                   	ret    

100007dd <_ssfn__zreceive>:
100007dd:	56                   	push   esi
100007de:	53                   	push   ebx
100007df:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
100007e2:	7d 1d                	jge    10000801 <_ssfn__zreceive+0x24>
100007e4:	8b 18                	mov    ebx,DWORD PTR [eax]
100007e6:	8d 4b 01             	lea    ecx,[ebx+0x1]
100007e9:	89 08                	mov    DWORD PTR [eax],ecx
100007eb:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100007ee:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100007f1:	d3 e3                	shl    ebx,cl
100007f3:	83 c1 08             	add    ecx,0x8
100007f6:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007f9:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007fc:	83 f9 18             	cmp    ecx,0x18
100007ff:	7e e3                	jle    100007e4 <_ssfn__zreceive+0x7>
10000801:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10000804:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
10000807:	89 f3                	mov    ebx,esi
10000809:	88 d1                	mov    cl,dl
1000080b:	d3 eb                	shr    ebx,cl
1000080d:	88 d1                	mov    cl,dl
1000080f:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10000812:	bb 01 00 00 00       	mov    ebx,0x1
10000817:	d3 e3                	shl    ebx,cl
10000819:	8d 43 ff             	lea    eax,[ebx-0x1]
1000081c:	5b                   	pop    ebx
1000081d:	21 f0                	and    eax,esi
1000081f:	5e                   	pop    esi
10000820:	c3                   	ret    

10000821 <ssfn_utf8>:
10000821:	56                   	push   esi
10000822:	53                   	push   ebx
10000823:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000827:	8b 11                	mov    edx,DWORD PTR [ecx]
10000829:	0f b6 32             	movzx  esi,BYTE PTR [edx]
1000082c:	89 f0                	mov    eax,esi
1000082e:	84 c0                	test   al,al
10000830:	0f be d8             	movsx  ebx,al
10000833:	78 04                	js     10000839 <ssfn_utf8+0x18>
10000835:	89 d8                	mov    eax,ebx
10000837:	eb 7d                	jmp    100008b6 <ssfn_utf8+0x95>
10000839:	f7 c6 20 00 00 00    	test   esi,0x20
1000083f:	75 14                	jne    10000855 <ssfn_utf8+0x34>
10000841:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
10000844:	c1 e3 06             	shl    ebx,0x6
10000847:	83 e0 3f             	and    eax,0x3f
1000084a:	81 e3 c0 07 00 00    	and    ebx,0x7c0
10000850:	42                   	inc    edx
10000851:	09 d8                	or     eax,ebx
10000853:	eb 5f                	jmp    100008b4 <ssfn_utf8+0x93>
10000855:	f7 c6 10 00 00 00    	test   esi,0x10
1000085b:	75 20                	jne    1000087d <ssfn_utf8+0x5c>
1000085d:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000861:	c1 e3 0c             	shl    ebx,0xc
10000864:	c1 e0 06             	shl    eax,0x6
10000867:	0f b7 db             	movzx  ebx,bx
1000086a:	25 c0 0f 00 00       	and    eax,0xfc0
1000086f:	83 c2 02             	add    edx,0x2
10000872:	09 d8                	or     eax,ebx
10000874:	8a 1a                	mov    bl,BYTE PTR [edx]
10000876:	83 e3 3f             	and    ebx,0x3f
10000879:	09 d8                	or     eax,ebx
1000087b:	eb 37                	jmp    100008b4 <ssfn_utf8+0x93>
1000087d:	31 c0                	xor    eax,eax
1000087f:	83 e6 08             	and    esi,0x8
10000882:	75 32                	jne    100008b6 <ssfn_utf8+0x95>
10000884:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000888:	c1 e3 12             	shl    ebx,0x12
1000088b:	c1 e0 0c             	shl    eax,0xc
1000088e:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000894:	25 00 f0 03 00       	and    eax,0x3f000
10000899:	83 c2 03             	add    edx,0x3
1000089c:	09 d8                	or     eax,ebx
1000089e:	8a 1a                	mov    bl,BYTE PTR [edx]
100008a0:	83 e3 3f             	and    ebx,0x3f
100008a3:	09 d8                	or     eax,ebx
100008a5:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
100008a9:	c1 e3 06             	shl    ebx,0x6
100008ac:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
100008b2:	09 d8                	or     eax,ebx
100008b4:	89 11                	mov    DWORD PTR [ecx],edx
100008b6:	ff 01                	inc    DWORD PTR [ecx]
100008b8:	5b                   	pop    ebx
100008b9:	5e                   	pop    esi
100008ba:	c3                   	ret    

100008bb <_ssfn_c>:
100008bb:	55                   	push   ebp
100008bc:	57                   	push   edi
100008bd:	56                   	push   esi
100008be:	53                   	push   ebx
100008bf:	83 ec 14             	sub    esp,0x14
100008c2:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
100008c8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008cc:	85 c0                	test   eax,eax
100008ce:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
100008d4:	0f 84 e6 00 00 00    	je     100009c0 <_ssfn_c+0x105>
100008da:	31 ff                	xor    edi,edi
100008dc:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
100008e0:	0f 84 f3 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008e6:	85 d2                	test   edx,edx
100008e8:	0f 84 eb 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008ee:	80 3a 00             	cmp    BYTE PTR [edx],0x0
100008f1:	0f 84 e2 00 00 00    	je     100009d9 <_ssfn_c+0x11e>
100008f7:	89 d6                	mov    esi,edx
100008f9:	89 cd                	mov    ebp,ecx
100008fb:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008fe:	89 c3                	mov    ebx,eax
10000900:	85 d2                	test   edx,edx
10000902:	74 38                	je     1000093c <_ssfn_c+0x81>
10000904:	8d 0c 13             	lea    ecx,[ebx+edx*1]
10000907:	31 c0                	xor    eax,eax
10000909:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000090c:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
1000090f:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
10000913:	66 85 d2             	test   dx,dx
10000916:	74 24                	je     1000093c <_ssfn_c+0x81>
10000918:	01 da                	add    edx,ebx
1000091a:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
1000091e:	8a 0a                	mov    cl,BYTE PTR [edx]
10000920:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000924:	84 c9                	test   cl,cl
10000926:	0f 84 9e 00 00 00    	je     100009ca <_ssfn_c+0x10f>
1000092c:	3a 0f                	cmp    cl,BYTE PTR [edi]
1000092e:	0f 85 90 00 00 00    	jne    100009c4 <_ssfn_c+0x109>
10000934:	47                   	inc    edi
10000935:	42                   	inc    edx
10000936:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
1000093a:	eb e2                	jmp    1000091e <_ssfn_c+0x63>
1000093c:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000940:	8d 44 24 10          	lea    eax,[esp+0x10]
10000944:	50                   	push   eax
10000945:	e8 fc ff ff ff       	call   10000946 <_ssfn_c+0x8b>	10000946: R_386_PC32	ssfn_utf8
1000094a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000094e:	29 f2                	sub    edx,esi
10000950:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
10000953:	5a                   	pop    edx
10000954:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000958:	89 06                	mov    DWORD PTR [esi],eax
1000095a:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
1000095d:	89 df                	mov    edi,ebx
1000095f:	31 db                	xor    ebx,ebx
10000961:	8a 17                	mov    dl,BYTE PTR [edi]
10000963:	80 fa ff             	cmp    dl,0xff
10000966:	75 08                	jne    10000970 <_ssfn_c+0xb5>
10000968:	81 c3 ff ff 00 00    	add    ebx,0xffff
1000096e:	eb 2a                	jmp    1000099a <_ssfn_c+0xdf>
10000970:	88 d1                	mov    cl,dl
10000972:	83 e1 c0             	and    ecx,0xffffffc0
10000975:	80 f9 c0             	cmp    cl,0xc0
10000978:	75 16                	jne    10000990 <_ssfn_c+0xd5>
1000097a:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000097e:	c1 e2 08             	shl    edx,0x8
10000981:	83 c7 02             	add    edi,0x2
10000984:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000098a:	09 ca                	or     edx,ecx
1000098c:	01 d3                	add    ebx,edx
1000098e:	eb 27                	jmp    100009b7 <_ssfn_c+0xfc>
10000990:	80 f9 80             	cmp    cl,0x80
10000993:	75 08                	jne    1000099d <_ssfn_c+0xe2>
10000995:	83 e2 3f             	and    edx,0x3f
10000998:	01 d3                	add    ebx,edx
1000099a:	47                   	inc    edi
1000099b:	eb 1a                	jmp    100009b7 <_ssfn_c+0xfc>
1000099d:	39 d8                	cmp    eax,ebx
1000099f:	74 38                	je     100009d9 <_ssfn_c+0x11e>
100009a1:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
100009a5:	83 e2 40             	and    edx,0x40
100009a8:	80 fa 01             	cmp    dl,0x1
100009ab:	19 d2                	sbb    edx,edx
100009ad:	83 c2 06             	add    edx,0x6
100009b0:	0f af d1             	imul   edx,ecx
100009b3:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
100009b7:	43                   	inc    ebx
100009b8:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
100009be:	76 a1                	jbe    10000961 <_ssfn_c+0xa6>
100009c0:	31 ff                	xor    edi,edi
100009c2:	eb 15                	jmp    100009d9 <_ssfn_c+0x11e>
100009c4:	40                   	inc    eax
100009c5:	e9 42 ff ff ff       	jmp    1000090c <_ssfn_c+0x51>
100009ca:	29 f7                	sub    edi,esi
100009cc:	05 00 f0 00 00       	add    eax,0xf000
100009d1:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
100009d4:	e9 7b ff ff ff       	jmp    10000954 <_ssfn_c+0x99>
100009d9:	83 c4 14             	add    esp,0x14
100009dc:	89 f8                	mov    eax,edi
100009de:	5b                   	pop    ebx
100009df:	5e                   	pop    esi
100009e0:	5f                   	pop    edi
100009e1:	5d                   	pop    ebp
100009e2:	c3                   	ret    

100009e3 <_ssfn_zlib_decode>:
100009e3:	55                   	push   ebp
100009e4:	57                   	push   edi
100009e5:	56                   	push   esi
100009e6:	53                   	push   ebx
100009e7:	81 ec c8 19 00 00    	sub    esp,0x19c8
100009ed:	6a 08                	push   0x8
100009ef:	e8 fc ff ff ff       	call   100009f0 <_ssfn_zlib_decode+0xd>	100009f0: R_386_PC32	malloc
100009f4:	83 c4 10             	add    esp,0x10
100009f7:	89 c2                	mov    edx,eax
100009f9:	85 c0                	test   eax,eax
100009fb:	0f 84 eb 04 00 00    	je     10000eec <_ssfn_zlib_decode+0x509>
10000a01:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
10000a08:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
10000a0f:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
10000a16:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
10000a1d:	31 c0                	xor    eax,eax
10000a1f:	83 c2 08             	add    edx,0x8
10000a22:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
10000a29:	c6 80 c0 4f 03 10 08 	mov    BYTE PTR [eax+0x10034fc0],0x8	10000a2b: R_386_32	.bss
10000a30:	40                   	inc    eax
10000a31:	3d 90 00 00 00       	cmp    eax,0x90
10000a36:	75 f1                	jne    10000a29 <_ssfn_zlib_decode+0x46>
10000a38:	c6 80 c0 4f 03 10 09 	mov    BYTE PTR [eax+0x10034fc0],0x9	10000a3a: R_386_32	.bss
10000a3f:	40                   	inc    eax
10000a40:	3d 00 01 00 00       	cmp    eax,0x100
10000a45:	75 f1                	jne    10000a38 <_ssfn_zlib_decode+0x55>
10000a47:	c6 80 c0 4f 03 10 07 	mov    BYTE PTR [eax+0x10034fc0],0x7	10000a49: R_386_32	.bss
10000a4e:	40                   	inc    eax
10000a4f:	3d 18 01 00 00       	cmp    eax,0x118
10000a54:	75 f1                	jne    10000a47 <_ssfn_zlib_decode+0x64>
10000a56:	c7 05 d8 50 03 10 08 08 08 08 	mov    DWORD PTR ds:0x100350d8,0x8080808	10000a58: R_386_32	.bss
10000a60:	c7 05 dc 50 03 10 08 08 08 08 	mov    DWORD PTR ds:0x100350dc,0x8080808	10000a62: R_386_32	.bss
10000a6a:	31 c0                	xor    eax,eax
10000a6c:	c6 80 a0 4f 03 10 05 	mov    BYTE PTR [eax+0x10034fa0],0x5	10000a6e: R_386_32	.bss
10000a73:	40                   	inc    eax
10000a74:	83 f8 20             	cmp    eax,0x20
10000a77:	75 f3                	jne    10000a6c <_ssfn_zlib_decode+0x89>
10000a79:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a84:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a8f:	ba 01 00 00 00       	mov    edx,0x1
10000a94:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a9b:	e8 3d fd ff ff       	call   100007dd <_ssfn__zreceive>
10000aa0:	ba 02 00 00 00       	mov    edx,0x2
10000aa5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000aa9:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ab0:	e8 28 fd ff ff       	call   100007dd <_ssfn__zreceive>
10000ab5:	89 c6                	mov    esi,eax
10000ab7:	85 c0                	test   eax,eax
10000ab9:	0f 85 09 01 00 00    	jne    10000bc8 <_ssfn_zlib_decode+0x1e5>
10000abf:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000ac6:	83 e2 07             	and    edx,0x7
10000ac9:	74 0c                	je     10000ad7 <_ssfn_zlib_decode+0xf4>
10000acb:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ad2:	e8 06 fd ff ff       	call   100007dd <_ssfn__zreceive>
10000ad7:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000ade:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000ae5:	31 c0                	xor    eax,eax
10000ae7:	31 db                	xor    ebx,ebx
10000ae9:	85 d2                	test   edx,edx
10000aeb:	7f 14                	jg     10000b01 <_ssfn_zlib_decode+0x11e>
10000aed:	84 db                	test   bl,bl
10000aef:	74 22                	je     10000b13 <_ssfn_zlib_decode+0x130>
10000af1:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000af8:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aff:	eb 12                	jmp    10000b13 <_ssfn_zlib_decode+0x130>
10000b01:	40                   	inc    eax
10000b02:	83 ea 08             	sub    edx,0x8
10000b05:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000b0c:	b3 01                	mov    bl,0x1
10000b0e:	c1 e9 08             	shr    ecx,0x8
10000b11:	eb d6                	jmp    10000ae9 <_ssfn_zlib_decode+0x106>
10000b13:	83 f8 04             	cmp    eax,0x4
10000b16:	74 1d                	je     10000b35 <_ssfn_zlib_decode+0x152>
10000b18:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b1f:	40                   	inc    eax
10000b20:	8d 4a 01             	lea    ecx,[edx+0x1]
10000b23:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000b2a:	8a 12                	mov    dl,BYTE PTR [edx]
10000b2c:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000b33:	eb de                	jmp    10000b13 <_ssfn_zlib_decode+0x130>
10000b35:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000b3d:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000b45:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000b4d:	c1 e3 08             	shl    ebx,0x8
10000b50:	01 c3                	add    ebx,eax
10000b52:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b5a:	c1 e0 08             	shl    eax,0x8
10000b5d:	01 d0                	add    eax,edx
10000b5f:	89 da                	mov    edx,ebx
10000b61:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b67:	39 d0                	cmp    eax,edx
10000b69:	0f 85 69 03 00 00    	jne    10000ed8 <_ssfn_zlib_decode+0x4f5>
10000b6f:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b76:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b79:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b80:	73 14                	jae    10000b96 <_ssfn_zlib_decode+0x1b3>
10000b82:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b89:	e8 19 f7 ff ff       	call   100002a7 <_ssfn__zexpand>
10000b8e:	85 c0                	test   eax,eax
10000b90:	0f 84 42 03 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000b96:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b9d:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000ba4:	39 f3                	cmp    ebx,esi
10000ba6:	74 09                	je     10000bb1 <_ssfn_zlib_decode+0x1ce>
10000ba8:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000bab:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000bae:	46                   	inc    esi
10000baf:	eb e5                	jmp    10000b96 <_ssfn_zlib_decode+0x1b3>
10000bb1:	01 da                	add    edx,ebx
10000bb3:	01 c3                	add    ebx,eax
10000bb5:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000bbc:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000bc3:	e9 fc 02 00 00       	jmp    10000ec4 <_ssfn_zlib_decode+0x4e1>
10000bc8:	83 f8 03             	cmp    eax,0x3
10000bcb:	0f 84 07 03 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000bd1:	4e                   	dec    esi
10000bd2:	75 2d                	jne    10000c01 <_ssfn_zlib_decode+0x21e>
10000bd4:	b9 20 01 00 00       	mov    ecx,0x120
10000bd9:	ba c0 4f 03 10       	mov    edx,0x10034fc0	10000bda: R_386_32	.bss
10000bde:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000be5:	e8 1c f7 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000bea:	85 c0                	test   eax,eax
10000bec:	0f 84 e6 02 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000bf2:	b9 20 00 00 00       	mov    ecx,0x20
10000bf7:	ba a0 4f 03 10       	mov    edx,0x10034fa0	10000bf8: R_386_32	.bss
10000bfc:	e9 78 01 00 00       	jmp    10000d79 <_ssfn_zlib_decode+0x396>
10000c01:	ba 05 00 00 00       	mov    edx,0x5
10000c06:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c0d:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000c11:	e8 c7 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c16:	89 df                	mov    edi,ebx
10000c18:	ba 05 00 00 00       	mov    edx,0x5
10000c1d:	89 c5                	mov    ebp,eax
10000c1f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c26:	e8 b2 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c2b:	ba 04 00 00 00       	mov    edx,0x4
10000c30:	89 c6                	mov    esi,eax
10000c32:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c39:	e8 9f fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c3e:	b9 13 00 00 00       	mov    ecx,0x13
10000c43:	83 c0 04             	add    eax,0x4
10000c46:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c4a:	31 c0                	xor    eax,eax
10000c4c:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000c4e:	31 ff                	xor    edi,edi
10000c50:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c54:	7e 1f                	jle    10000c75 <_ssfn_zlib_decode+0x292>
10000c56:	ba 03 00 00 00       	mov    edx,0x3
10000c5b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c62:	47                   	inc    edi
10000c63:	e8 75 fb ff ff       	call   100007dd <_ssfn__zreceive>
10000c68:	0f b6 97 1f 4c 00 10 	movzx  edx,BYTE PTR [edi+0x10004c1f]	10000c6b: R_386_32	.text
10000c6f:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c73:	eb db                	jmp    10000c50 <_ssfn_zlib_decode+0x26d>
10000c75:	b9 13 00 00 00       	mov    ecx,0x13
10000c7a:	89 da                	mov    edx,ebx
10000c7c:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c83:	e8 7e f6 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000c88:	85 c0                	test   eax,eax
10000c8a:	0f 84 48 02 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000c90:	8d 46 01             	lea    eax,[esi+0x1]
10000c93:	81 c5 01 01 00 00    	add    ebp,0x101
10000c99:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c9d:	31 f6                	xor    esi,esi
10000c9f:	01 e8                	add    eax,ebp
10000ca1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000ca5:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000ca9:	0f 8e 9f 00 00 00    	jle    10000d4e <_ssfn_zlib_decode+0x36b>
10000caf:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000cb6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cbd:	e8 35 f5 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000cc2:	83 f8 12             	cmp    eax,0x12
10000cc5:	0f 87 0d 02 00 00    	ja     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000ccb:	83 f8 0f             	cmp    eax,0xf
10000cce:	7f 07                	jg     10000cd7 <_ssfn_zlib_decode+0x2f4>
10000cd0:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000cd4:	46                   	inc    esi
10000cd5:	eb ce                	jmp    10000ca5 <_ssfn_zlib_decode+0x2c2>
10000cd7:	83 f8 10             	cmp    eax,0x10
10000cda:	75 22                	jne    10000cfe <_ssfn_zlib_decode+0x31b>
10000cdc:	ba 02 00 00 00       	mov    edx,0x2
10000ce1:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ce8:	e8 f0 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000ced:	85 f6                	test   esi,esi
10000cef:	8d 58 03             	lea    ebx,[eax+0x3]
10000cf2:	0f 84 e0 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000cf8:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000cfc:	eb 31                	jmp    10000d2f <_ssfn_zlib_decode+0x34c>
10000cfe:	83 f8 11             	cmp    eax,0x11
10000d01:	75 16                	jne    10000d19 <_ssfn_zlib_decode+0x336>
10000d03:	ba 03 00 00 00       	mov    edx,0x3
10000d08:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d0f:	e8 c9 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000d14:	8d 58 03             	lea    ebx,[eax+0x3]
10000d17:	eb 14                	jmp    10000d2d <_ssfn_zlib_decode+0x34a>
10000d19:	ba 07 00 00 00       	mov    edx,0x7
10000d1e:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d25:	e8 b3 fa ff ff       	call   100007dd <_ssfn__zreceive>
10000d2a:	8d 58 0b             	lea    ebx,[eax+0xb]
10000d2d:	31 c0                	xor    eax,eax
10000d2f:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000d33:	29 f2                	sub    edx,esi
10000d35:	39 da                	cmp    edx,ebx
10000d37:	0f 8c 9b 01 00 00    	jl     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d3d:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000d41:	89 d9                	mov    ecx,ebx
10000d43:	89 d7                	mov    edi,edx
10000d45:	01 de                	add    esi,ebx
10000d47:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000d49:	e9 57 ff ff ff       	jmp    10000ca5 <_ssfn_zlib_decode+0x2c2>
10000d4e:	0f 85 84 01 00 00    	jne    10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d54:	89 e9                	mov    ecx,ebp
10000d56:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d5a:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d61:	e8 a0 f5 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000d66:	85 c0                	test   eax,eax
10000d68:	0f 84 6a 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d6e:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d72:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d76:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d79:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d80:	e8 81 f5 ff ff       	call   10000306 <_ssfn__zbuild_huffman>
10000d85:	85 c0                	test   eax,eax
10000d87:	0f 84 4b 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000d8d:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d94:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d9b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000da2:	e8 50 f4 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000da7:	89 c3                	mov    ebx,eax
10000da9:	3d ff 00 00 00       	cmp    eax,0xff
10000dae:	7f 34                	jg     10000de4 <_ssfn_zlib_decode+0x401>
10000db0:	85 c0                	test   eax,eax
10000db2:	0f 88 20 01 00 00    	js     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000db8:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000dbf:	77 1d                	ja     10000dde <_ssfn_zlib_decode+0x3fb>
10000dc1:	89 ea                	mov    edx,ebp
10000dc3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dca:	e8 d8 f4 ff ff       	call   100002a7 <_ssfn__zexpand>
10000dcf:	85 c0                	test   eax,eax
10000dd1:	0f 84 01 01 00 00    	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000dd7:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000dde:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000de1:	45                   	inc    ebp
10000de2:	eb b0                	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000de4:	3d 00 01 00 00       	cmp    eax,0x100
10000de9:	75 0c                	jne    10000df7 <_ssfn_zlib_decode+0x414>
10000deb:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000df2:	e9 cd 00 00 00       	jmp    10000ec4 <_ssfn_zlib_decode+0x4e1>
10000df7:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000dfd:	8b 14 85 40 4d 00 10 	mov    edx,DWORD PTR [eax*4+0x10004d40]	10000e00: R_386_32	.text
10000e04:	8b 1c 85 c0 4d 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004dc0]	10000e07: R_386_32	.text
10000e0b:	85 d2                	test   edx,edx
10000e0d:	74 0e                	je     10000e1d <_ssfn_zlib_decode+0x43a>
10000e0f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e16:	e8 c2 f9 ff ff       	call   100007dd <_ssfn__zreceive>
10000e1b:	01 c3                	add    ebx,eax
10000e1d:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000e24:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e2b:	e8 c7 f3 ff ff       	call   100001f7 <_ssfn__zhuffman_decode>
10000e30:	85 c0                	test   eax,eax
10000e32:	0f 88 a0 00 00 00    	js     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e38:	8b 14 85 40 4c 00 10 	mov    edx,DWORD PTR [eax*4+0x10004c40]	10000e3b: R_386_32	.text
10000e3f:	8b 3c 85 c0 4c 00 10 	mov    edi,DWORD PTR [eax*4+0x10004cc0]	10000e42: R_386_32	.text
10000e46:	85 d2                	test   edx,edx
10000e48:	74 0e                	je     10000e58 <_ssfn_zlib_decode+0x475>
10000e4a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e51:	e8 87 f9 ff ff       	call   100007dd <_ssfn__zreceive>
10000e56:	01 c7                	add    edi,eax
10000e58:	89 e8                	mov    eax,ebp
10000e5a:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e61:	39 f8                	cmp    eax,edi
10000e63:	7c 73                	jl     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e65:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e69:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e70:	73 19                	jae    10000e8b <_ssfn_zlib_decode+0x4a8>
10000e72:	89 ea                	mov    edx,ebp
10000e74:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e7b:	e8 27 f4 ff ff       	call   100002a7 <_ssfn__zexpand>
10000e80:	85 c0                	test   eax,eax
10000e82:	74 54                	je     10000ed8 <_ssfn_zlib_decode+0x4f5>
10000e84:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e8b:	89 ee                	mov    esi,ebp
10000e8d:	29 fe                	sub    esi,edi
10000e8f:	4f                   	dec    edi
10000e90:	75 19                	jne    10000eab <_ssfn_zlib_decode+0x4c8>
10000e92:	85 db                	test   ebx,ebx
10000e94:	0f 84 fa fe ff ff    	je     10000d94 <_ssfn_zlib_decode+0x3b1>
10000e9a:	8a 06                	mov    al,BYTE PTR [esi]
10000e9c:	01 eb                	add    ebx,ebp
10000e9e:	45                   	inc    ebp
10000e9f:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000ea2:	39 dd                	cmp    ebp,ebx
10000ea4:	75 f8                	jne    10000e9e <_ssfn_zlib_decode+0x4bb>
10000ea6:	e9 e9 fe ff ff       	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000eab:	85 db                	test   ebx,ebx
10000ead:	0f 84 e1 fe ff ff    	je     10000d94 <_ssfn_zlib_decode+0x3b1>
10000eb3:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000eb6:	89 ef                	mov    edi,ebp
10000eb8:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000eb9:	39 f0                	cmp    eax,esi
10000ebb:	75 fb                	jne    10000eb8 <_ssfn_zlib_decode+0x4d5>
10000ebd:	01 dd                	add    ebp,ebx
10000ebf:	e9 d0 fe ff ff       	jmp    10000d94 <_ssfn_zlib_decode+0x3b1>
10000ec4:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000ec9:	0f 84 c0 fb ff ff    	je     10000a8f <_ssfn_zlib_decode+0xac>
10000ecf:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000ed6:	eb 14                	jmp    10000eec <_ssfn_zlib_decode+0x509>
10000ed8:	83 ec 0c             	sub    esp,0xc
10000edb:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000ee2:	e8 fc ff ff ff       	call   10000ee3 <_ssfn_zlib_decode+0x500>	10000ee3: R_386_PC32	free
10000ee7:	83 c4 10             	add    esp,0x10
10000eea:	31 c0                	xor    eax,eax
10000eec:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000ef2:	5b                   	pop    ebx
10000ef3:	5e                   	pop    esi
10000ef4:	5f                   	pop    edi
10000ef5:	5d                   	pop    ebp
10000ef6:	c3                   	ret    

10000ef7 <ssfn_load>:
10000ef7:	55                   	push   ebp
10000ef8:	57                   	push   edi
10000ef9:	56                   	push   esi
10000efa:	53                   	push   ebx
10000efb:	83 ec 1c             	sub    esp,0x1c
10000efe:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000f02:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000f06:	85 ff                	test   edi,edi
10000f08:	0f 84 d0 01 00 00    	je     100010de <ssfn_load+0x1e7>
10000f0e:	85 f6                	test   esi,esi
10000f10:	0f 84 c8 01 00 00    	je     100010de <ssfn_load+0x1e7>
10000f16:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000f19:	0f 85 a8 00 00 00    	jne    10000fc7 <ssfn_load+0xd0>
10000f1f:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000f23:	0f 85 9e 00 00 00    	jne    10000fc7 <ssfn_load+0xd0>
10000f29:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000f2d:	74 0a                	je     10000f39 <ssfn_load+0x42>
10000f2f:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000f34:	e9 aa 01 00 00       	jmp    100010e3 <ssfn_load+0x1ec>
10000f39:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000f3c:	a8 04                	test   al,0x4
10000f3e:	75 05                	jne    10000f45 <ssfn_load+0x4e>
10000f40:	83 c6 0a             	add    esi,0xa
10000f43:	eb 08                	jmp    10000f4d <ssfn_load+0x56>
10000f45:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000f49:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000f4d:	a8 08                	test   al,0x8
10000f4f:	74 07                	je     10000f58 <ssfn_load+0x61>
10000f51:	46                   	inc    esi
10000f52:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f56:	eb f7                	jmp    10000f4f <ssfn_load+0x58>
10000f58:	a8 10                	test   al,0x10
10000f5a:	74 07                	je     10000f63 <ssfn_load+0x6c>
10000f5c:	46                   	inc    esi
10000f5d:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f61:	eb f7                	jmp    10000f5a <ssfn_load+0x63>
10000f63:	83 ec 0c             	sub    esp,0xc
10000f66:	56                   	push   esi
10000f67:	e8 fc ff ff ff       	call   10000f68 <ssfn_load+0x71>	10000f68: R_386_PC32	_ssfn_zlib_decode
10000f6c:	83 c4 10             	add    esp,0x10
10000f6f:	89 c6                	mov    esi,eax
10000f71:	85 c0                	test   eax,eax
10000f73:	74 ba                	je     10000f2f <ssfn_load+0x38>
10000f75:	50                   	push   eax
10000f76:	50                   	push   eax
10000f77:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f7d:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f84:	50                   	push   eax
10000f85:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f8b:	e8 fc ff ff ff       	call   10000f8c <ssfn_load+0x95>	10000f8c: R_386_PC32	realloc
10000f90:	83 c4 10             	add    esp,0x10
10000f93:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f99:	85 c0                	test   eax,eax
10000f9b:	75 0f                	jne    10000fac <ssfn_load+0xb5>
10000f9d:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000fa7:	e9 1a 01 00 00       	jmp    100010c6 <ssfn_load+0x1cf>
10000fac:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000fb2:	8d 4a 01             	lea    ecx,[edx+0x1]
10000fb5:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000fbb:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000fbe:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000fc1:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000fc7:	50                   	push   eax
10000fc8:	6a 04                	push   0x4
10000fca:	68 05 4b 00 10       	push   0x10004b05	10000fcb: R_386_32	.text
10000fcf:	56                   	push   esi
10000fd0:	e8 fc ff ff ff       	call   10000fd1 <ssfn_load+0xda>	10000fd1: R_386_PC32	memcmp
10000fd5:	83 c4 10             	add    esp,0x10
10000fd8:	89 c5                	mov    ebp,eax
10000fda:	85 c0                	test   eax,eax
10000fdc:	75 29                	jne    10001007 <ssfn_load+0x110>
10000fde:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fe1:	01 f3                	add    ebx,esi
10000fe3:	83 c6 08             	add    esi,0x8
10000fe6:	39 de                	cmp    esi,ebx
10000fe8:	0f 83 f5 00 00 00    	jae    100010e3 <ssfn_load+0x1ec>
10000fee:	50                   	push   eax
10000fef:	50                   	push   eax
10000ff0:	56                   	push   esi
10000ff1:	57                   	push   edi
10000ff2:	e8 fc ff ff ff       	call   10000ff3 <ssfn_load+0xfc>	10000ff3: R_386_PC32	ssfn_load
10000ff7:	83 c4 10             	add    esp,0x10
10000ffa:	85 c0                	test   eax,eax
10000ffc:	0f 85 e1 00 00 00    	jne    100010e3 <ssfn_load+0x1ec>
10001002:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10001005:	eb df                	jmp    10000fe6 <ssfn_load+0xef>
10001007:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
1000100a:	83 e0 0f             	and    eax,0xf
1000100d:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10001011:	53                   	push   ebx
10001012:	6a 04                	push   0x4
10001014:	68 0a 4b 00 10       	push   0x10004b0a	10001015: R_386_32	.text
10001019:	56                   	push   esi
1000101a:	e8 fc ff ff ff       	call   1000101b <ssfn_load+0x124>	1000101b: R_386_PC32	memcmp
1000101f:	83 c4 10             	add    esp,0x10
10001022:	89 c5                	mov    ebp,eax
10001024:	85 c0                	test   eax,eax
10001026:	0f 85 03 ff ff ff    	jne    10000f2f <ssfn_load+0x38>
1000102c:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
1000102f:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10001033:	51                   	push   ecx
10001034:	6a 04                	push   0x4
10001036:	68 0f 4b 00 10       	push   0x10004b0f	10001037: R_386_32	.text
1000103b:	50                   	push   eax
1000103c:	e8 fc ff ff ff       	call   1000103d <ssfn_load+0x146>	1000103d: R_386_PC32	memcmp
10001041:	83 c4 10             	add    esp,0x10
10001044:	85 c0                	test   eax,eax
10001046:	0f 85 e3 fe ff ff    	jne    10000f2f <ssfn_load+0x38>
1000104c:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10001051:	0f 87 d8 fe ff ff    	ja     10000f2f <ssfn_load+0x38>
10001057:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
1000105b:	39 cb                	cmp    ebx,ecx
1000105d:	0f 86 cc fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001063:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10001066:	39 c3                	cmp    ebx,eax
10001068:	0f 86 c1 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
1000106e:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001071:	0f 86 b8 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001077:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000107a:	0f 86 af fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001080:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001083:	0f 86 a6 fe ff ff    	jbe    10000f2f <ssfn_load+0x38>
10001089:	39 c1                	cmp    ecx,eax
1000108b:	0f 83 9e fe ff ff    	jae    10000f2f <ssfn_load+0x38>
10001091:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10001096:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001099:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
1000109f:	40                   	inc    eax
100010a0:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
100010a6:	52                   	push   edx
100010a7:	c1 e0 02             	shl    eax,0x2
100010aa:	52                   	push   edx
100010ab:	50                   	push   eax
100010ac:	ff 33                	push   DWORD PTR [ebx]
100010ae:	e8 fc ff ff ff       	call   100010af <ssfn_load+0x1b8>	100010af: R_386_PC32	realloc
100010b3:	83 c4 10             	add    esp,0x10
100010b6:	89 03                	mov    DWORD PTR [ebx],eax
100010b8:	85 c0                	test   eax,eax
100010ba:	75 0f                	jne    100010cb <ssfn_load+0x1d4>
100010bc:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
100010c6:	83 cd ff             	or     ebp,0xffffffff
100010c9:	eb 18                	jmp    100010e3 <ssfn_load+0x1ec>
100010cb:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
100010d1:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
100010d5:	89 f8                	mov    eax,edi
100010d7:	e8 ad f3 ff ff       	call   10000489 <_ssfn_fc.part.1>
100010dc:	eb 05                	jmp    100010e3 <ssfn_load+0x1ec>
100010de:	bd fc ff ff ff       	mov    ebp,0xfffffffc
100010e3:	83 c4 1c             	add    esp,0x1c
100010e6:	89 e8                	mov    eax,ebp
100010e8:	5b                   	pop    ebx
100010e9:	5e                   	pop    esi
100010ea:	5f                   	pop    edi
100010eb:	5d                   	pop    ebp
100010ec:	c3                   	ret    

100010ed <ssfn_free>:
100010ed:	57                   	push   edi
100010ee:	56                   	push   esi
100010ef:	53                   	push   ebx
100010f0:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010f4:	85 db                	test   ebx,ebx
100010f6:	74 7e                	je     10001176 <ssfn_free+0x89>
100010f8:	89 d8                	mov    eax,ebx
100010fa:	e8 8a f3 ff ff       	call   10000489 <_ssfn_fc.part.1>
100010ff:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
10001106:	74 32                	je     1000113a <ssfn_free+0x4d>
10001108:	31 f6                	xor    esi,esi
1000110a:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
10001110:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
10001116:	7e 16                	jle    1000112e <ssfn_free+0x41>
10001118:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000111b:	85 c0                	test   eax,eax
1000111d:	74 0c                	je     1000112b <ssfn_free+0x3e>
1000111f:	83 ec 0c             	sub    esp,0xc
10001122:	50                   	push   eax
10001123:	e8 fc ff ff ff       	call   10001124 <ssfn_free+0x37>	10001124: R_386_PC32	free
10001128:	83 c4 10             	add    esp,0x10
1000112b:	46                   	inc    esi
1000112c:	eb dc                	jmp    1000110a <ssfn_free+0x1d>
1000112e:	83 ec 0c             	sub    esp,0xc
10001131:	50                   	push   eax
10001132:	e8 fc ff ff ff       	call   10001133 <ssfn_free+0x46>	10001133: R_386_PC32	free
10001137:	83 c4 10             	add    esp,0x10
1000113a:	31 f6                	xor    esi,esi
1000113c:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
1000113f:	85 c0                	test   eax,eax
10001141:	74 0c                	je     1000114f <ssfn_free+0x62>
10001143:	83 ec 0c             	sub    esp,0xc
10001146:	50                   	push   eax
10001147:	e8 fc ff ff ff       	call   10001148 <ssfn_free+0x5b>	10001148: R_386_PC32	free
1000114c:	83 c4 10             	add    esp,0x10
1000114f:	46                   	inc    esi
10001150:	83 fe 05             	cmp    esi,0x5
10001153:	75 e7                	jne    1000113c <ssfn_free+0x4f>
10001155:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000115b:	85 c0                	test   eax,eax
1000115d:	74 0c                	je     1000116b <ssfn_free+0x7e>
1000115f:	83 ec 0c             	sub    esp,0xc
10001162:	50                   	push   eax
10001163:	e8 fc ff ff ff       	call   10001164 <ssfn_free+0x77>	10001164: R_386_PC32	free
10001168:	83 c4 10             	add    esp,0x10
1000116b:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001170:	31 c0                	xor    eax,eax
10001172:	89 df                	mov    edi,ebx
10001174:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001176:	5b                   	pop    ebx
10001177:	5e                   	pop    esi
10001178:	5f                   	pop    edi
10001179:	c3                   	ret    

1000117a <ssfn_mem>:
1000117a:	55                   	push   ebp
1000117b:	31 c0                	xor    eax,eax
1000117d:	57                   	push   edi
1000117e:	56                   	push   esi
1000117f:	53                   	push   ebx
10001180:	83 ec 08             	sub    esp,0x8
10001183:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001187:	85 d2                	test   edx,edx
10001189:	0f 84 8e 00 00 00    	je     1000121d <ssfn_mem+0xa3>
1000118f:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001194:	31 c9                	xor    ecx,ecx
10001196:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
1000119d:	41                   	inc    ecx
1000119e:	8d 04 98             	lea    eax,[eax+ebx*4]
100011a1:	83 f9 05             	cmp    ecx,0x5
100011a4:	75 f0                	jne    10001196 <ssfn_mem+0x1c>
100011a6:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
100011ac:	31 c9                	xor    ecx,ecx
100011ae:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
100011b5:	89 34 24             	mov    DWORD PTR [esp],esi
100011b8:	85 f6                	test   esi,esi
100011ba:	74 48                	je     10001204 <ssfn_mem+0x8a>
100011bc:	31 db                	xor    ebx,ebx
100011be:	8b 34 24             	mov    esi,DWORD PTR [esp]
100011c1:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
100011c4:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
100011c8:	85 ff                	test   edi,edi
100011ca:	74 2a                	je     100011f6 <ssfn_mem+0x7c>
100011cc:	31 f6                	xor    esi,esi
100011ce:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100011d2:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
100011d5:	85 ed                	test   ebp,ebp
100011d7:	74 0f                	je     100011e8 <ssfn_mem+0x6e>
100011d9:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
100011dd:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
100011e1:	0f af fd             	imul   edi,ebp
100011e4:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
100011e8:	46                   	inc    esi
100011e9:	81 fe 00 01 00 00    	cmp    esi,0x100
100011ef:	75 dd                	jne    100011ce <ssfn_mem+0x54>
100011f1:	05 00 04 00 00       	add    eax,0x400
100011f6:	43                   	inc    ebx
100011f7:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011fd:	75 bf                	jne    100011be <ssfn_mem+0x44>
100011ff:	05 00 04 00 00       	add    eax,0x400
10001204:	41                   	inc    ecx
10001205:	83 f9 11             	cmp    ecx,0x11
10001208:	75 a4                	jne    100011ae <ssfn_mem+0x34>
1000120a:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
10001211:	74 0a                	je     1000121d <ssfn_mem+0xa3>
10001213:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
10001219:	01 d2                	add    edx,edx
1000121b:	01 d0                	add    eax,edx
1000121d:	83 c4 08             	add    esp,0x8
10001220:	5b                   	pop    ebx
10001221:	5e                   	pop    esi
10001222:	5f                   	pop    edi
10001223:	5d                   	pop    ebp
10001224:	c3                   	ret    

10001225 <ssfn_select>:
10001225:	55                   	push   ebp
10001226:	57                   	push   edi
10001227:	56                   	push   esi
10001228:	53                   	push   ebx
10001229:	83 ec 1c             	sub    esp,0x1c
1000122c:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10001230:	85 db                	test   ebx,ebx
10001232:	75 0a                	jne    1000123e <ssfn_select+0x19>
10001234:	be fc ff ff ff       	mov    esi,0xfffffffc
10001239:	e9 13 01 00 00       	jmp    10001351 <ssfn_select+0x12c>
1000123e:	89 d8                	mov    eax,ebx
10001240:	e8 44 f2 ff ff       	call   10000489 <_ssfn_fc.part.1>
10001245:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10001249:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
1000124f:	0f 85 e9 00 00 00    	jne    1000133e <ssfn_select+0x119>
10001255:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001259:	83 e8 08             	sub    eax,0x8
1000125c:	3d b8 00 00 00       	cmp    eax,0xb8
10001261:	0f 87 de 00 00 00    	ja     10001345 <ssfn_select+0x120>
10001267:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
1000126f:	75 76                	jne    100012e7 <ssfn_select+0xc2>
10001271:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001276:	74 bc                	je     10001234 <ssfn_select+0xf>
10001278:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000127c:	80 38 00             	cmp    BYTE PTR [eax],0x0
1000127f:	74 b3                	je     10001234 <ssfn_select+0xf>
10001281:	31 ed                	xor    ebp,ebp
10001283:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001287:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000128b:	74 03                	je     10001290 <ssfn_select+0x6b>
1000128d:	45                   	inc    ebp
1000128e:	eb f3                	jmp    10001283 <ssfn_select+0x5e>
10001290:	8d 43 14             	lea    eax,[ebx+0x14]
10001293:	89 df                	mov    edi,ebx
10001295:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001299:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
1000129f:	31 d2                	xor    edx,edx
100012a1:	89 04 24             	mov    DWORD PTR [esp],eax
100012a4:	39 14 24             	cmp    DWORD PTR [esp],edx
100012a7:	7e 33                	jle    100012dc <ssfn_select+0xb7>
100012a9:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100012ad:	8b 07                	mov    eax,DWORD PTR [edi]
100012af:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
100012b2:	50                   	push   eax
100012b3:	8d 41 20             	lea    eax,[ecx+0x20]
100012b6:	55                   	push   ebp
100012b7:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
100012bb:	50                   	push   eax
100012bc:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
100012c0:	e8 fc ff ff ff       	call   100012c1 <ssfn_select+0x9c>	100012c1: R_386_PC32	memcmp
100012c5:	83 c4 10             	add    esp,0x10
100012c8:	85 c0                	test   eax,eax
100012ca:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
100012ce:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100012d2:	75 05                	jne    100012d9 <ssfn_select+0xb4>
100012d4:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
100012d7:	eb 34                	jmp    1000130d <ssfn_select+0xe8>
100012d9:	42                   	inc    edx
100012da:	eb c8                	jmp    100012a4 <ssfn_select+0x7f>
100012dc:	83 c7 04             	add    edi,0x4
100012df:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
100012e3:	75 b4                	jne    10001299 <ssfn_select+0x74>
100012e5:	eb 65                	jmp    1000134c <ssfn_select+0x127>
100012e7:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
100012ef:	74 15                	je     10001306 <ssfn_select+0xe1>
100012f1:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012f6:	7f 54                	jg     1000134c <ssfn_select+0x127>
100012f8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012fc:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
10001304:	74 46                	je     1000134c <ssfn_select+0x127>
10001306:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
1000130d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001311:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
10001318:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
1000131e:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
10001328:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000132c:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
10001332:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001336:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
1000133c:	eb 13                	jmp    10001351 <ssfn_select+0x12c>
1000133e:	be fb ff ff ff       	mov    esi,0xfffffffb
10001343:	eb 0c                	jmp    10001351 <ssfn_select+0x12c>
10001345:	be fa ff ff ff       	mov    esi,0xfffffffa
1000134a:	eb 05                	jmp    10001351 <ssfn_select+0x12c>
1000134c:	be fd ff ff ff       	mov    esi,0xfffffffd
10001351:	83 c4 1c             	add    esp,0x1c
10001354:	89 f0                	mov    eax,esi
10001356:	5b                   	pop    ebx
10001357:	5e                   	pop    esi
10001358:	5f                   	pop    edi
10001359:	5d                   	pop    ebp
1000135a:	c3                   	ret    

1000135b <ssfn_render>:
1000135b:	55                   	push   ebp
1000135c:	57                   	push   edi
1000135d:	56                   	push   esi
1000135e:	53                   	push   ebx
1000135f:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001365:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
1000136c:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
10001377:	85 ed                	test   ebp,ebp
10001379:	0f 94 c2             	sete   dl
1000137c:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001384:	0f 94 c0             	sete   al
10001387:	08 c2                	or     dl,al
10001389:	74 0a                	je     10001395 <ssfn_render+0x3a>
1000138b:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001390:	e9 14 1e 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001395:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
1000139c:	31 c9                	xor    ecx,ecx
1000139e:	8a 00                	mov    al,BYTE PTR [eax]
100013a0:	84 c0                	test   al,al
100013a2:	0f 84 01 1e 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100013a8:	3c 0d                	cmp    al,0xd
100013aa:	75 0f                	jne    100013bb <ssfn_render+0x60>
100013ac:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100013b3:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
100013b9:	eb 31                	jmp    100013ec <ssfn_render+0x91>
100013bb:	3c 0a                	cmp    al,0xa
100013bd:	75 37                	jne    100013f6 <ssfn_render+0x9b>
100013bf:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100013c6:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
100013cc:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
100013cf:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
100013d5:	85 c0                	test   eax,eax
100013d7:	75 06                	jne    100013df <ssfn_render+0x84>
100013d9:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
100013df:	01 d0                	add    eax,edx
100013e1:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100013e8:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
100013ec:	b9 01 00 00 00       	mov    ecx,0x1
100013f1:	e9 b3 1d 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
100013f6:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013f9:	85 c0                	test   eax,eax
100013fb:	74 3e                	je     1000143b <ssfn_render+0xe0>
100013fd:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
10001400:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
10001407:	56                   	push   esi
10001408:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000140f:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001416:	e8 a0 f4 ff ff       	call   100008bb <_ssfn_c>
1000141b:	5b                   	pop    ebx
1000141c:	85 c0                	test   eax,eax
1000141e:	0f 85 71 02 00 00    	jne    10001695 <ssfn_render+0x33a>
10001424:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
1000142a:	81 e2 00 01 00 00    	and    edx,0x100
10001430:	0f 84 fd 01 00 00    	je     10001633 <ssfn_render+0x2d8>
10001436:	e9 1d 02 00 00       	jmp    10001658 <ssfn_render+0x2fd>
1000143b:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
10001441:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
10001448:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000144c:	3d fd 00 00 00       	cmp    eax,0xfd
10001451:	7f 08                	jg     1000145b <ssfn_render+0x100>
10001453:	89 c3                	mov    ebx,eax
10001455:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001459:	eb 3f                	jmp    1000149a <ssfn_render+0x13f>
1000145b:	31 db                	xor    ebx,ebx
1000145d:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001465:	eb 33                	jmp    1000149a <ssfn_render+0x13f>
10001467:	85 c0                	test   eax,eax
10001469:	0f 84 64 01 00 00    	je     100015d3 <ssfn_render+0x278>
1000146f:	43                   	inc    ebx
10001470:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001474:	7e 28                	jle    1000149e <ssfn_render+0x143>
10001476:	85 c0                	test   eax,eax
10001478:	0f 85 17 02 00 00    	jne    10001695 <ssfn_render+0x33a>
1000147e:	31 db                	xor    ebx,ebx
10001480:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001488:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001490:	74 92                	je     10001424 <ssfn_render+0xc9>
10001492:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000149a:	31 c0                	xor    eax,eax
1000149c:	eb d2                	jmp    10001470 <ssfn_render+0x115>
1000149e:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
100014a2:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
100014a9:	74 bc                	je     10001467 <ssfn_render+0x10c>
100014ab:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014b6:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100014bd:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
100014c4:	7e 50                	jle    10001516 <ssfn_render+0x1bb>
100014c6:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
100014c9:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
100014cd:	c1 fa 04             	sar    edx,0x4
100014d0:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
100014d6:	80 e2 03             	and    dl,0x3
100014d9:	75 32                	jne    1000150d <ssfn_render+0x1b2>
100014db:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
100014df:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014e5:	75 26                	jne    1000150d <ssfn_render+0x1b2>
100014e7:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
100014ee:	50                   	push   eax
100014ef:	89 f8                	mov    eax,edi
100014f1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014f8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014ff:	e8 b7 f3 ff ff       	call   100008bb <_ssfn_c>
10001504:	59                   	pop    ecx
10001505:	85 c0                	test   eax,eax
10001507:	0f 85 04 01 00 00    	jne    10001611 <ssfn_render+0x2b6>
1000150d:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001514:	eb a0                	jmp    100014b6 <ssfn_render+0x15b>
10001516:	85 c0                	test   eax,eax
10001518:	0f 85 51 ff ff ff    	jne    1000146f <ssfn_render+0x114>
1000151e:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001529:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001530:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001537:	0f 8e f9 1b 00 00    	jle    10003136 <ssfn_render+0x1ddb>
1000153d:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001540:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
10001544:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
1000154a:	74 09                	je     10001555 <ssfn_render+0x1fa>
1000154c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001553:	eb d4                	jmp    10001529 <ssfn_render+0x1ce>
10001555:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000155c:	57                   	push   edi
1000155d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001564:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000156b:	e8 4b f3 ff ff       	call   100008bb <_ssfn_c>
10001570:	5a                   	pop    edx
10001571:	85 c0                	test   eax,eax
10001573:	74 d7                	je     1000154c <ssfn_render+0x1f1>
10001575:	e9 97 00 00 00       	jmp    10001611 <ssfn_render+0x2b6>
1000157a:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000157d:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001581:	c1 fa 04             	sar    edx,0x4
10001584:	31 ca                	xor    edx,ecx
10001586:	80 e2 03             	and    dl,0x3
10001589:	0f 84 b7 1b 00 00    	je     10003146 <ssfn_render+0x1deb>
1000158f:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001596:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000159d:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
100015a3:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015aa:	7f ce                	jg     1000157a <ssfn_render+0x21f>
100015ac:	83 e1 03             	and    ecx,0x3
100015af:	83 f9 03             	cmp    ecx,0x3
100015b2:	75 1f                	jne    100015d3 <ssfn_render+0x278>
100015b4:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100015bf:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100015c6:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015cd:	0f 8f 9c 1b 00 00    	jg     1000316f <ssfn_render+0x1e14>
100015d3:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100015de:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100015e5:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015ec:	7e 3e                	jle    1000162c <ssfn_render+0x2d1>
100015ee:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100015f1:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015f8:	57                   	push   edi
100015f9:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001600:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001607:	e8 af f2 ff ff       	call   100008bb <_ssfn_c>
1000160c:	5a                   	pop    edx
1000160d:	85 c0                	test   eax,eax
1000160f:	74 12                	je     10001623 <ssfn_render+0x2c8>
10001611:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001618:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
1000161b:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
1000161e:	e9 4c fe ff ff       	jmp    1000146f <ssfn_render+0x114>
10001623:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000162a:	eb b2                	jmp    100015de <ssfn_render+0x283>
1000162c:	31 c0                	xor    eax,eax
1000162e:	e9 3c fe ff ff       	jmp    1000146f <ssfn_render+0x114>
10001633:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
10001639:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
10001644:	81 fb fd 00 00 00    	cmp    ebx,0xfd
1000164a:	7f 16                	jg     10001662 <ssfn_render+0x307>
1000164c:	89 da                	mov    edx,ebx
1000164e:	31 c0                	xor    eax,eax
10001650:	39 da                	cmp    edx,ebx
10001652:	7e 15                	jle    10001669 <ssfn_render+0x30e>
10001654:	85 c0                	test   eax,eax
10001656:	75 3d                	jne    10001695 <ssfn_render+0x33a>
10001658:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
1000165d:	e9 47 1b 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001662:	bb 04 00 00 00       	mov    ebx,0x4
10001667:	eb e5                	jmp    1000164e <ssfn_render+0x2f3>
10001669:	85 c0                	test   eax,eax
1000166b:	75 28                	jne    10001695 <ssfn_render+0x33a>
1000166d:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001675:	74 1b                	je     10001692 <ssfn_render+0x337>
10001677:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
1000167b:	8b 09                	mov    ecx,DWORD PTR [ecx]
1000167d:	85 c9                	test   ecx,ecx
1000167f:	74 11                	je     10001692 <ssfn_render+0x337>
10001681:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001684:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001688:	78 08                	js     10001692 <ssfn_render+0x337>
1000168a:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
1000168d:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001690:	01 c8                	add    eax,ecx
10001692:	42                   	inc    edx
10001693:	eb bb                	jmp    10001650 <ssfn_render+0x2f5>
10001695:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001698:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
1000169d:	85 d2                	test   edx,edx
1000169f:	0f 84 04 1b 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016a5:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
100016a9:	0f 84 fa 1a 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016af:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
100016b5:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100016b9:	85 ff                	test   edi,edi
100016bb:	0f 84 e8 1a 00 00    	je     100031a9 <ssfn_render+0x1e4e>
100016c1:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
100016c8:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
100016cc:	c1 ef 10             	shr    edi,0x10
100016cf:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
100016d3:	83 ff 10             	cmp    edi,0x10
100016d6:	0f 87 af fc ff ff    	ja     1000138b <ssfn_render+0x30>
100016dc:	8d 70 06             	lea    esi,[eax+0x6]
100016df:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
100016e5:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
100016e9:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
100016ef:	89 f7                	mov    edi,esi
100016f1:	81 e7 00 02 00 00    	and    edi,0x200
100016f7:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016fb:	75 34                	jne    10001731 <ssfn_render+0x3d6>
100016fd:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001701:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
10001708:	85 c9                	test   ecx,ecx
1000170a:	74 25                	je     10001731 <ssfn_render+0x3d6>
1000170c:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001710:	0f b6 ff             	movzx  edi,bh
10001713:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001716:	85 c9                	test   ecx,ecx
10001718:	74 17                	je     10001731 <ssfn_render+0x3d6>
1000171a:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
1000171f:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
10001722:	85 c9                	test   ecx,ecx
10001724:	74 0b                	je     10001731 <ssfn_render+0x3d6>
10001726:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
1000172c:	e9 25 0d 00 00       	jmp    10002456 <ssfn_render+0x10fb>
10001731:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
10001735:	f7 c6 40 00 00 00    	test   esi,0x40
1000173b:	75 1a                	jne    10001757 <ssfn_render+0x3fc>
1000173d:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10001741:	7e 10                	jle    10001753 <ssfn_render+0x3f8>
10001743:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001747:	83 c7 04             	add    edi,0x4
1000174a:	83 e7 fc             	and    edi,0xfffffffc
1000174d:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001751:	eb 04                	jmp    10001757 <ssfn_render+0x3fc>
10001753:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001757:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
1000175c:	f7 c6 02 00 00 00    	test   esi,0x2
10001762:	74 14                	je     10001778 <ssfn_render+0x41d>
10001764:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
10001767:	c0 eb 05             	shr    bl,0x5
1000176a:	89 df                	mov    edi,ebx
1000176c:	83 f7 01             	xor    edi,0x1
1000176f:	83 e7 01             	and    edi,0x1
10001772:	89 fb                	mov    ebx,edi
10001774:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001778:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
1000177d:	83 e6 01             	and    esi,0x1
10001780:	74 10                	je     10001792 <ssfn_render+0x437>
10001782:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
10001786:	75 0a                	jne    10001792 <ssfn_render+0x437>
10001788:	8d 51 40             	lea    edx,[ecx+0x40]
1000178b:	c1 fa 06             	sar    edx,0x6
1000178e:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001792:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
10001796:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000179b:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000179f:	99                   	cdq    
100017a0:	f7 f9                	idiv   ecx
100017a2:	89 c1                	mov    ecx,eax
100017a4:	31 c0                	xor    eax,eax
100017a6:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100017ab:	74 0c                	je     100017b9 <ssfn_render+0x45e>
100017ad:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100017b1:	be 04 00 00 00       	mov    esi,0x4
100017b6:	99                   	cdq    
100017b7:	f7 fe                	idiv   esi
100017b9:	01 c8                	add    eax,ecx
100017bb:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
100017c0:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
100017c5:	01 f0                	add    eax,esi
100017c7:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
100017cb:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100017cf:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100017d3:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
100017d8:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100017dc:	3d ff f4 00 00       	cmp    eax,0xf4ff
100017e1:	0f 8f c2 19 00 00    	jg     100031a9 <ssfn_render+0x1e4e>
100017e7:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
100017ec:	0f 85 f0 00 00 00    	jne    100018e2 <ssfn_render+0x587>
100017f2:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017f6:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017fa:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
10001801:	75 2f                	jne    10001832 <ssfn_render+0x4d7>
10001803:	83 ec 0c             	sub    esp,0xc
10001806:	68 00 04 00 00       	push   0x400
1000180b:	e8 fc ff ff ff       	call   1000180c <ssfn_render+0x4b1>	1000180c: R_386_PC32	malloc
10001810:	83 c4 10             	add    esp,0x10
10001813:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
10001819:	85 c0                	test   eax,eax
1000181b:	75 08                	jne    10001825 <ssfn_render+0x4ca>
1000181d:	83 c9 ff             	or     ecx,0xffffffff
10001820:	e9 84 19 00 00       	jmp    100031a9 <ssfn_render+0x1e4e>
10001825:	89 c7                	mov    edi,eax
10001827:	b9 00 01 00 00       	mov    ecx,0x100
1000182c:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001830:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001832:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001836:	0f b6 dc             	movzx  ebx,ah
10001839:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
1000183f:	8d 1c 98             	lea    ebx,[eax+ebx*4]
10001842:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10001845:	75 3a                	jne    10001881 <ssfn_render+0x526>
10001847:	83 ec 0c             	sub    esp,0xc
1000184a:	68 00 04 00 00       	push   0x400
1000184f:	e8 fc ff ff ff       	call   10001850 <ssfn_render+0x4f5>	10001850: R_386_PC32	malloc
10001854:	89 03                	mov    DWORD PTR [ebx],eax
10001856:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000185d:	83 c4 10             	add    esp,0x10
10001860:	89 c2                	mov    edx,eax
10001862:	0f b6 c4             	movzx  eax,ah
10001865:	c1 ea 10             	shr    edx,0x10
10001868:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000186f:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
10001872:	85 d2                	test   edx,edx
10001874:	74 a7                	je     1000181d <ssfn_render+0x4c2>
10001876:	b9 00 01 00 00       	mov    ecx,0x100
1000187b:	31 c0                	xor    eax,eax
1000187d:	89 d7                	mov    edi,edx
1000187f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001881:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001888:	83 ec 0c             	sub    esp,0xc
1000188b:	0f b6 cc             	movzx  ecx,ah
1000188e:	89 c2                	mov    edx,eax
10001890:	0f b6 c0             	movzx  eax,al
10001893:	c1 ea 10             	shr    edx,0x10
10001896:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000189d:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
100018a0:	8d 1c 82             	lea    ebx,[edx+eax*4]
100018a3:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100018a7:	83 c0 08             	add    eax,0x8
100018aa:	50                   	push   eax
100018ab:	e8 fc ff ff ff       	call   100018ac <ssfn_render+0x551>	100018ac: R_386_PC32	malloc
100018b0:	89 03                	mov    DWORD PTR [ebx],eax
100018b2:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100018b8:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
100018bf:	83 c4 10             	add    esp,0x10
100018c2:	89 c2                	mov    edx,eax
100018c4:	0f b6 cc             	movzx  ecx,ah
100018c7:	c1 ea 10             	shr    edx,0x10
100018ca:	0f b6 c0             	movzx  eax,al
100018cd:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100018d4:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
100018d7:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
100018db:	75 0e                	jne    100018eb <ssfn_render+0x590>
100018dd:	e9 3b ff ff ff       	jmp    1000181d <ssfn_render+0x4c2>
100018e2:	8d 45 1c             	lea    eax,[ebp+0x1c]
100018e5:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100018eb:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
100018f1:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018f5:	74 2a                	je     10001921 <ssfn_render+0x5c6>
100018f7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018fc:	74 23                	je     10001921 <ssfn_render+0x5c6>
100018fe:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001901:	bb 04 00 00 00       	mov    ebx,0x4
10001906:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000190a:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
1000190e:	89 cf                	mov    edi,ecx
10001910:	29 c7                	sub    edi,eax
10001912:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001916:	0f af c7             	imul   eax,edi
10001919:	99                   	cdq    
1000191a:	f7 fb                	idiv   ebx
1000191c:	99                   	cdq    
1000191d:	f7 f9                	idiv   ecx
1000191f:	eb 02                	jmp    10001923 <ssfn_render+0x5c8>
10001921:	31 c0                	xor    eax,eax
10001923:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001929:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
1000192d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10001931:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
10001939:	66 89 32             	mov    WORD PTR [edx],si
1000193c:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
10001941:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001947:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
1000194a:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001950:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001956:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001959:	01 c3                	add    ebx,eax
1000195b:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
1000195e:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001964:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
1000196a:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
1000196d:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001970:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
10001976:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000197c:	8a 12                	mov    dl,BYTE PTR [edx]
1000197e:	83 e2 3f             	and    edx,0x3f
10001981:	01 d0                	add    eax,edx
10001983:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
10001986:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000198a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001990:	8d 50 08             	lea    edx,[eax+0x8]
10001993:	b0 ff                	mov    al,0xff
10001995:	89 d7                	mov    edi,edx
10001997:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001999:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000199f:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
100019a3:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100019a9:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
100019ad:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100019b1:	c1 e0 04             	shl    eax,0x4
100019b4:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
100019b8:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100019bc:	c1 e0 04             	shl    eax,0x4
100019bf:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100019c3:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
100019c9:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
100019cd:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
100019d1:	0f 8e 4d 0a 00 00    	jle    10002424 <ssfn_render+0x10c9>
100019d7:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100019db:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019df:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
100019e2:	0f b6 00             	movzx  eax,BYTE PTR [eax]
100019e5:	8a 12                	mov    dl,BYTE PTR [edx]
100019e7:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
100019eb:	83 e2 40             	and    edx,0x40
100019ee:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
100019f2:	88 c2                	mov    dl,al
100019f4:	21 ca                	and    edx,ecx
100019f6:	fe c2                	inc    dl
100019f8:	75 14                	jne    10001a0e <ssfn_render+0x6b3>
100019fa:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019ff:	19 c0                	sbb    eax,eax
10001a01:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
10001a05:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10001a09:	e9 09 0a 00 00       	jmp    10002417 <ssfn_render+0x10bc>
10001a0e:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10001a12:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
10001a15:	c1 e0 04             	shl    eax,0x4
10001a18:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
10001a1c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a21:	99                   	cdq    
10001a22:	f7 fe                	idiv   esi
10001a24:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001a28:	0f b6 c1             	movzx  eax,cl
10001a2b:	c1 e0 04             	shl    eax,0x4
10001a2e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a33:	99                   	cdq    
10001a34:	f7 fe                	idiv   esi
10001a36:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001a3a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a3e:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
10001a42:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
10001a46:	c1 e2 10             	shl    edx,0x10
10001a49:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001a4e:	74 0e                	je     10001a5e <ssfn_render+0x703>
10001a50:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a54:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a59:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a5c:	eb 0c                	jmp    10001a6a <ssfn_render+0x70f>
10001a5e:	c1 e0 08             	shl    eax,0x8
10001a61:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a66:	09 d0                	or     eax,edx
10001a68:	09 c3                	or     ebx,eax
10001a6a:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a6d:	8a 01                	mov    al,BYTE PTR [ecx]
10001a6f:	84 c0                	test   al,al
10001a71:	0f 88 17 05 00 00    	js     10001f8e <ssfn_render+0xc33>
10001a77:	89 c7                	mov    edi,eax
10001a79:	83 e7 3f             	and    edi,0x3f
10001a7c:	a8 40                	test   al,0x40
10001a7e:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a82:	74 10                	je     10001a94 <ssfn_render+0x739>
10001a84:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a88:	89 f8                	mov    eax,edi
10001a8a:	41                   	inc    ecx
10001a8b:	c1 e0 08             	shl    eax,0x8
10001a8e:	09 c2                	or     edx,eax
10001a90:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a94:	8d 41 01             	lea    eax,[ecx+0x1]
10001a97:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001aa1:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001aa5:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001ab0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001ab4:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001ab8:	83 c0 04             	add    eax,0x4
10001abb:	c1 f8 02             	sar    eax,0x2
10001abe:	01 c7                	add    edi,eax
10001ac0:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001ac7:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001acb:	0f 8f d7 01 00 00    	jg     10001ca8 <ssfn_render+0x94d>
10001ad1:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001ad4:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001ad8:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001adc:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001ae0:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001ae4:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001ae7:	c1 e0 04             	shl    eax,0x4
10001aea:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001aef:	99                   	cdq    
10001af0:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001af4:	01 c6                	add    esi,eax
10001af6:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001afa:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001afe:	c1 e0 04             	shl    eax,0x4
10001b01:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b06:	99                   	cdq    
10001b07:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b0b:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001b0f:	01 c3                	add    ebx,eax
10001b11:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001b15:	89 c8                	mov    eax,ecx
10001b17:	01 c9                	add    ecx,ecx
10001b19:	c1 f8 02             	sar    eax,0x2
10001b1c:	83 e1 06             	and    ecx,0x6
10001b1f:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001b23:	d3 f8                	sar    eax,cl
10001b25:	83 e0 03             	and    eax,0x3
10001b28:	89 c1                	mov    ecx,eax
10001b2a:	83 f8 02             	cmp    eax,0x2
10001b2d:	74 4a                	je     10001b79 <ssfn_render+0x81e>
10001b2f:	83 f8 03             	cmp    eax,0x3
10001b32:	0f 84 e4 00 00 00    	je     10001c1c <ssfn_render+0x8c1>
10001b38:	49                   	dec    ecx
10001b39:	74 20                	je     10001b5b <ssfn_render+0x800>
10001b3b:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001b41:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001b47:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001b4d:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001b53:	83 c7 02             	add    edi,0x2
10001b56:	e9 41 01 00 00       	jmp    10001c9c <ssfn_render+0x941>
10001b5b:	83 c7 02             	add    edi,0x2
10001b5e:	50                   	push   eax
10001b5f:	50                   	push   eax
10001b60:	89 e8                	mov    eax,ebp
10001b62:	53                   	push   ebx
10001b63:	56                   	push   esi
10001b64:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b68:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b6c:	e8 9c e9 ff ff       	call   1000050d <_ssfn_l>
10001b71:	83 c4 10             	add    esp,0x10
10001b74:	e9 23 01 00 00       	jmp    10001c9c <ssfn_render+0x941>
10001b79:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b7d:	83 c7 04             	add    edi,0x4
10001b80:	c1 e0 04             	shl    eax,0x4
10001b83:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b88:	99                   	cdq    
10001b89:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b8d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b91:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b95:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b99:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b9d:	c1 e0 04             	shl    eax,0x4
10001ba0:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001ba5:	99                   	cdq    
10001ba6:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001baa:	83 ec 0c             	sub    esp,0xc
10001bad:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001bb1:	6a 00                	push   0x0
10001bb3:	53                   	push   ebx
10001bb4:	56                   	push   esi
10001bb5:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001bb9:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001bbd:	99                   	cdq    
10001bbe:	f7 f9                	idiv   ecx
10001bc0:	01 d8                	add    eax,ebx
10001bc2:	50                   	push   eax
10001bc3:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001bc7:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001bcb:	99                   	cdq    
10001bcc:	f7 f9                	idiv   ecx
10001bce:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001bd2:	50                   	push   eax
10001bd3:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001bd7:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001bdb:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001be1:	99                   	cdq    
10001be2:	f7 f9                	idiv   ecx
10001be4:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001bea:	50                   	push   eax
10001beb:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001bef:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001bf5:	99                   	cdq    
10001bf6:	f7 f9                	idiv   ecx
10001bf8:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001bfe:	50                   	push   eax
10001bff:	89 e8                	mov    eax,ebp
10001c01:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c07:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c0d:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c11:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c15:	e8 04 ea ff ff       	call   1000061e <_ssfn_b>
10001c1a:	eb 7d                	jmp    10001c99 <ssfn_render+0x93e>
10001c1c:	83 ec 0c             	sub    esp,0xc
10001c1f:	83 c7 06             	add    edi,0x6
10001c22:	6a 00                	push   0x0
10001c24:	53                   	push   ebx
10001c25:	56                   	push   esi
10001c26:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001c2a:	c1 e0 04             	shl    eax,0x4
10001c2d:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001c32:	99                   	cdq    
10001c33:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001c37:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001c3b:	50                   	push   eax
10001c3c:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001c40:	c1 e0 04             	shl    eax,0x4
10001c43:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001c48:	99                   	cdq    
10001c49:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001c4d:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001c51:	50                   	push   eax
10001c52:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c56:	c1 e0 04             	shl    eax,0x4
10001c59:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c5e:	99                   	cdq    
10001c5f:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c63:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c67:	50                   	push   eax
10001c68:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c6c:	c1 e0 04             	shl    eax,0x4
10001c6f:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c74:	99                   	cdq    
10001c75:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c79:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c7d:	50                   	push   eax
10001c7e:	89 e8                	mov    eax,ebp
10001c80:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c86:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c8c:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c90:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c94:	e8 85 e9 ff ff       	call   1000061e <_ssfn_b>
10001c99:	83 c4 30             	add    esp,0x30
10001c9c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001ca3:	e9 18 fe ff ff       	jmp    10001ac0 <ssfn_render+0x765>
10001ca8:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001cae:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001cb4:	75 0e                	jne    10001cc4 <ssfn_render+0x969>
10001cb6:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001cbc:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001cc2:	74 2e                	je     10001cf2 <ssfn_render+0x997>
10001cc4:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001cca:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001cd0:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001cd4:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001cda:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001ce0:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001ce6:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001ceb:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001cf2:	b3 fe                	mov    bl,0xfe
10001cf4:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001cfb:	0f 8e 16 07 00 00    	jle    10002417 <ssfn_render+0x10bc>
10001d01:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001d09:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001d11:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001d19:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001d21:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001d29:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001d2d:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001d31:	0f 8d de 06 00 00    	jge    10002415 <ssfn_render+0x10ba>
10001d37:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001d3d:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001d48:	83 e8 03             	sub    eax,0x3
10001d4b:	31 f6                	xor    esi,esi
10001d4d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001d51:	89 f8                	mov    eax,edi
10001d53:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d57:	c1 f8 02             	sar    eax,0x2
10001d5a:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d5e:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d65:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d69:	0f 8e 16 01 00 00    	jle    10001e85 <ssfn_render+0xb2a>
10001d6f:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d75:	8d 47 01             	lea    eax,[edi+0x1]
10001d78:	01 c0                	add    eax,eax
10001d7a:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d7e:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d82:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d87:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d8b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d8f:	7d 0c                	jge    10001d9d <ssfn_render+0xa42>
10001d91:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d95:	0f 8f db 00 00 00    	jg     10001e76 <ssfn_render+0xb1b>
10001d9b:	eb 0a                	jmp    10001da7 <ssfn_render+0xa4c>
10001d9d:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001da1:	0f 8e cf 00 00 00    	jle    10001e76 <ssfn_render+0xb1b>
10001da7:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001dac:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001db0:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001db5:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001db9:	89 d8                	mov    eax,ebx
10001dbb:	c1 fa 04             	sar    edx,0x4
10001dbe:	c1 f8 04             	sar    eax,0x4
10001dc1:	39 c2                	cmp    edx,eax
10001dc3:	75 0a                	jne    10001dcf <ssfn_render+0xa74>
10001dc5:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001dc9:	01 c8                	add    eax,ecx
10001dcb:	d1 f8                	sar    eax,1
10001dcd:	eb 1a                	jmp    10001de9 <ssfn_render+0xa8e>
10001dcf:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001dd3:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001dd7:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001ddb:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001ddf:	0f af c1             	imul   eax,ecx
10001de2:	99                   	cdq    
10001de3:	f7 fb                	idiv   ebx
10001de5:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001de9:	c1 f8 04             	sar    eax,0x4
10001dec:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001df1:	74 04                	je     10001df7 <ssfn_render+0xa9c>
10001df3:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001df7:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001dfc:	75 3f                	jne    10001e3d <ssfn_render+0xae2>
10001dfe:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001e03:	74 38                	je     10001e3d <ssfn_render+0xae2>
10001e05:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e09:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001e0f:	f7 db                	neg    ebx
10001e11:	01 c2                	add    edx,eax
10001e13:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001e17:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001e1b:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e1f:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001e23:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001e27:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001e2b:	74 10                	je     10001e3d <ssfn_render+0xae2>
10001e2d:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001e31:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001e35:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001e39:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001e3d:	31 d2                	xor    edx,edx
10001e3f:	39 f2                	cmp    edx,esi
10001e41:	75 0b                	jne    10001e4e <ssfn_render+0xaf3>
10001e43:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001e4b:	46                   	inc    esi
10001e4c:	eb 28                	jmp    10001e76 <ssfn_render+0xb1b>
10001e4e:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e56:	39 c1                	cmp    ecx,eax
10001e58:	7d 03                	jge    10001e5d <ssfn_render+0xb02>
10001e5a:	42                   	inc    edx
10001e5b:	eb e2                	jmp    10001e3f <ssfn_render+0xae4>
10001e5d:	89 f1                	mov    ecx,esi
10001e5f:	49                   	dec    ecx
10001e60:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e68:	39 d1                	cmp    ecx,edx
10001e6a:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e72:	7f eb                	jg     10001e5f <ssfn_render+0xb04>
10001e74:	eb cd                	jmp    10001e43 <ssfn_render+0xae8>
10001e76:	8d 47 02             	lea    eax,[edi+0x2]
10001e79:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e80:	e9 d9 fe ff ff       	jmp    10001d5e <ssfn_render+0xa03>
10001e85:	83 fe 01             	cmp    esi,0x1
10001e88:	7e 1f                	jle    10001ea9 <ssfn_render+0xb4e>
10001e8a:	f7 c6 01 00 00 00    	test   esi,0x1
10001e90:	74 24                	je     10001eb6 <ssfn_render+0xb5b>
10001e92:	8d 46 ff             	lea    eax,[esi-0x1]
10001e95:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e9d:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001ea5:	89 c6                	mov    esi,eax
10001ea7:	eb 0d                	jmp    10001eb6 <ssfn_render+0xb5b>
10001ea9:	85 f6                	test   esi,esi
10001eab:	0f 84 c7 00 00 00    	je     10001f78 <ssfn_render+0xc1d>
10001eb1:	be 01 00 00 00       	mov    esi,0x1
10001eb6:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001ebc:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001ec0:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001ec4:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001ec8:	39 d1                	cmp    ecx,edx
10001eca:	7d 0b                	jge    10001ed7 <ssfn_render+0xb7c>
10001ecc:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001ed0:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001ed4:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001ed7:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001ee2:	31 c0                	xor    eax,eax
10001ee4:	31 d2                	xor    edx,edx
10001ee6:	8d 4e ff             	lea    ecx,[esi-0x1]
10001ee9:	39 d1                	cmp    ecx,edx
10001eeb:	7e 7d                	jle    10001f6a <ssfn_render+0xc0f>
10001eed:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ef5:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001efd:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001f01:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001f05:	79 02                	jns    10001f09 <ssfn_render+0xbae>
10001f07:	31 c0                	xor    eax,eax
10001f09:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f0d:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001f11:	39 cf                	cmp    edi,ecx
10001f13:	7e 04                	jle    10001f19 <ssfn_render+0xbbe>
10001f15:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001f19:	85 d2                	test   edx,edx
10001f1b:	74 12                	je     10001f2f <ssfn_render+0xbd4>
10001f1d:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001f25:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001f29:	39 c8                	cmp    eax,ecx
10001f2b:	7d 02                	jge    10001f2f <ssfn_render+0xbd4>
10001f2d:	89 c8                	mov    eax,ecx
10001f2f:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001f33:	7d 2b                	jge    10001f60 <ssfn_render+0xc05>
10001f35:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001f39:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001f3f:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001f42:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001f46:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001f4a:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001f4e:	75 05                	jne    10001f55 <ssfn_render+0xbfa>
10001f50:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f55:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f59:	40                   	inc    eax
10001f5a:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f5e:	eb cf                	jmp    10001f2f <ssfn_render+0xbd4>
10001f60:	83 c2 02             	add    edx,0x2
10001f63:	b0 01                	mov    al,0x1
10001f65:	e9 7c ff ff ff       	jmp    10001ee6 <ssfn_render+0xb8b>
10001f6a:	83 e6 fe             	and    esi,0xfffffffe
10001f6d:	84 c0                	test   al,al
10001f6f:	74 07                	je     10001f78 <ssfn_render+0xc1d>
10001f71:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f78:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f7c:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f80:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f84:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f89:	e9 9b fd ff ff       	jmp    10001d29 <ssfn_render+0x9ce>
10001f8e:	88 c2                	mov    dl,al
10001f90:	80 e2 60             	and    dl,0x60
10001f93:	0f 85 95 02 00 00    	jne    1000222e <ssfn_render+0xed3>
10001f99:	83 e0 1f             	and    eax,0x1f
10001f9c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001fa0:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001fa7:	c1 fb 04             	sar    ebx,0x4
10001faa:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001fae:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001fb2:	40                   	inc    eax
10001fb3:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001fb7:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001fbb:	c1 f8 04             	sar    eax,0x4
10001fbe:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001fc2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fc6:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001fcb:	99                   	cdq    
10001fcc:	f7 fe                	idiv   esi
10001fce:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001fd2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fd6:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001fdb:	99                   	cdq    
10001fdc:	f7 fe                	idiv   esi
10001fde:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001fe2:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001fe8:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fec:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001ff0:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001ff3:	39 d6                	cmp    esi,edx
10001ff5:	7d 0a                	jge    10002001 <ssfn_render+0xca6>
10001ff7:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001ffb:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001ffe:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002001:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002005:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
1000200d:	0f af c3             	imul   eax,ebx
10002010:	31 ff                	xor    edi,edi
10002012:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10002016:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000201a:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
1000201e:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10002022:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002026:	29 d8                	sub    eax,ebx
10002028:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
1000202c:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10002030:	0f 8d b1 00 00 00    	jge    100020e7 <ssfn_render+0xd8c>
10002036:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000203a:	99                   	cdq    
1000203b:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000203f:	89 c6                	mov    esi,eax
10002041:	31 c0                	xor    eax,eax
10002043:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002048:	74 0e                	je     10002058 <ssfn_render+0xcfd>
1000204a:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000204e:	bb 04 00 00 00       	mov    ebx,0x4
10002053:	29 f8                	sub    eax,edi
10002055:	99                   	cdq    
10002056:	f7 fb                	idiv   ebx
10002058:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000205c:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002067:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
1000206b:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002070:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002077:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000207b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000207f:	39 d8                	cmp    eax,ebx
10002081:	7d 4e                	jge    100020d1 <ssfn_render+0xd76>
10002083:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002087:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
1000208c:	99                   	cdq    
1000208d:	f7 fb                	idiv   ebx
1000208f:	8d 14 06             	lea    edx,[esi+eax*1]
10002092:	83 e0 07             	and    eax,0x7
10002095:	c1 fa 03             	sar    edx,0x3
10002098:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
1000209d:	0f a3 c2             	bt     edx,eax
100020a0:	72 0e                	jb     100020b0 <ssfn_render+0xd55>
100020a2:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100020a6:	43                   	inc    ebx
100020a7:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100020ae:	eb c0                	jmp    10002070 <ssfn_render+0xd15>
100020b0:	31 c0                	xor    eax,eax
100020b2:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
100020b6:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
100020ba:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100020c0:	40                   	inc    eax
100020c1:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
100020c5:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
100020c9:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
100020cd:	7d e3                	jge    100020b2 <ssfn_render+0xd57>
100020cf:	eb d1                	jmp    100020a2 <ssfn_render+0xd47>
100020d1:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100020d5:	47                   	inc    edi
100020d6:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
100020da:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100020de:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
100020e2:	e9 45 ff ff ff       	jmp    1000202c <ssfn_render+0xcd1>
100020e7:	b3 fe                	mov    bl,0xfe
100020e9:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
100020f0:	0f 85 21 03 00 00    	jne    10002417 <ssfn_render+0x10bc>
100020f6:	31 c0                	xor    eax,eax
100020f8:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020fc:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
10002101:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10002105:	0f 95 c0             	setne  al
10002108:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000210c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002110:	4f                   	dec    edi
10002111:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10002115:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
1000211d:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002121:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002128:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000212c:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
10002130:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002134:	31 c0                	xor    eax,eax
10002136:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10002139:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
1000213d:	83 c1 04             	add    ecx,0x4
10002140:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10002144:	0f 8d c0 02 00 00    	jge    1000240a <ssfn_render+0x10af>
1000214a:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000214e:	8d 77 01             	lea    esi,[edi+0x1]
10002151:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002155:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002159:	4f                   	dec    edi
1000215a:	be 01 00 00 00       	mov    esi,0x1
1000215f:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002163:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002167:	7e 63                	jle    100021cc <ssfn_render+0xe71>
10002169:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000216d:	b9 01 00 00 00       	mov    ecx,0x1
10002172:	89 ca                	mov    edx,ecx
10002174:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002178:	7e 45                	jle    100021bf <ssfn_render+0xe64>
1000217a:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002180:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002185:	75 34                	jne    100021bb <ssfn_render+0xe60>
10002187:	89 c7                	mov    edi,eax
10002189:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000218d:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002191:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002195:	74 0c                	je     100021a3 <ssfn_render+0xe48>
10002197:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000219b:	01 d7                	add    edi,edx
1000219d:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
100021a1:	75 18                	jne    100021bb <ssfn_render+0xe60>
100021a3:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
100021a7:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
100021ab:	74 06                	je     100021b3 <ssfn_render+0xe58>
100021ad:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
100021b1:	75 08                	jne    100021bb <ssfn_render+0xe60>
100021b3:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
100021b7:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
100021bb:	41                   	inc    ecx
100021bc:	40                   	inc    eax
100021bd:	eb b3                	jmp    10002172 <ssfn_render+0xe17>
100021bf:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100021c3:	46                   	inc    esi
100021c4:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
100021c8:	b0 01                	mov    al,0x1
100021ca:	eb 97                	jmp    10002163 <ssfn_render+0xe08>
100021cc:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
100021d0:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
100021d4:	bb 01 00 00 00       	mov    ebx,0x1
100021d9:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
100021dd:	7e 3d                	jle    1000221c <ssfn_render+0xec1>
100021df:	b8 01 00 00 00       	mov    eax,0x1
100021e4:	89 c2                	mov    edx,eax
100021e6:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
100021ea:	7e 23                	jle    1000220f <ssfn_render+0xeb4>
100021ec:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100021f0:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021f6:	8d 14 07             	lea    edx,[edi+eax*1]
100021f9:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021fe:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002202:	75 08                	jne    1000220c <ssfn_render+0xeb1>
10002204:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10002208:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
1000220c:	40                   	inc    eax
1000220d:	eb d5                	jmp    100021e4 <ssfn_render+0xe89>
1000220f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002213:	43                   	inc    ebx
10002214:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
10002218:	b0 01                	mov    al,0x1
1000221a:	eb bd                	jmp    100021d9 <ssfn_render+0xe7e>
1000221c:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
1000221f:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002223:	01 c9                	add    ecx,ecx
10002225:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
10002229:	e9 08 ff ff ff       	jmp    10002136 <ssfn_render+0xddb>
1000222e:	b3 fe                	mov    bl,0xfe
10002230:	80 fa 20             	cmp    dl,0x20
10002233:	0f 85 de 01 00 00    	jne    10002417 <ssfn_render+0x10bc>
10002239:	89 c3                	mov    ebx,eax
1000223b:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
1000223f:	c1 e3 08             	shl    ebx,0x8
10002242:	81 e3 00 1f 00 00    	and    ebx,0x1f00
10002248:	09 c3                	or     ebx,eax
1000224a:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
1000224e:	43                   	inc    ebx
1000224f:	40                   	inc    eax
10002250:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002254:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002258:	40                   	inc    eax
10002259:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000225d:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002261:	c1 f8 04             	sar    eax,0x4
10002264:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002268:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000226c:	c1 f8 04             	sar    eax,0x4
1000226f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002273:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002277:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
1000227c:	99                   	cdq    
1000227d:	f7 fe                	idiv   esi
1000227f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002283:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002287:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
1000228c:	99                   	cdq    
1000228d:	f7 fe                	idiv   esi
1000228f:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002293:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002297:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000229d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
100022a1:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
100022a5:	39 d6                	cmp    esi,edx
100022a7:	7d 0b                	jge    100022b4 <ssfn_render+0xf59>
100022a9:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
100022ad:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
100022b1:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
100022b4:	83 c1 04             	add    ecx,0x4
100022b7:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100022c2:	8d 04 19             	lea    eax,[ecx+ebx*1]
100022c5:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100022c9:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
100022cd:	72 35                	jb     10002304 <ssfn_render+0xfa9>
100022cf:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100022d3:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100022d7:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
100022dc:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
100022e0:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
100022e4:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100022eb:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
100022ef:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022f7:	31 d2                	xor    edx,edx
100022f9:	31 ff                	xor    edi,edi
100022fb:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022ff:	e9 cc 00 00 00       	jmp    100023d0 <ssfn_render+0x1075>
10002304:	8a 11                	mov    dl,BYTE PTR [ecx]
10002306:	89 d0                	mov    eax,edx
10002308:	83 e0 7f             	and    eax,0x7f
1000230b:	84 d2                	test   dl,dl
1000230d:	8d 78 01             	lea    edi,[eax+0x1]
10002310:	78 09                	js     1000231b <ssfn_render+0xfc0>
10002312:	41                   	inc    ecx
10002313:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002317:	89 ca                	mov    edx,ecx
10002319:	eb 3d                	jmp    10002358 <ssfn_render+0xffd>
1000231b:	48                   	dec    eax
1000231c:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10002323:	83 f8 fe             	cmp    eax,0xfffffffe
10002326:	74 16                	je     1000233e <ssfn_render+0xfe3>
10002328:	8d 5a 01             	lea    ebx,[edx+0x1]
1000232b:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002332:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
10002335:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
1000233c:	eb dd                	jmp    1000231b <ssfn_render+0xfc0>
1000233e:	83 c1 02             	add    ecx,0x2
10002341:	eb 86                	jmp    100022c9 <ssfn_render+0xf6e>
10002343:	42                   	inc    edx
10002344:	8d 73 01             	lea    esi,[ebx+0x1]
10002347:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
1000234e:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002351:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002358:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
1000235c:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
10002363:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002368:	75 d9                	jne    10002343 <ssfn_render+0xfe8>
1000236a:	01 f9                	add    ecx,edi
1000236c:	e9 58 ff ff ff       	jmp    100022c9 <ssfn_render+0xf6e>
10002371:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002375:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002379:	99                   	cdq    
1000237a:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
1000237e:	0f af c8             	imul   ecx,eax
10002381:	31 c0                	xor    eax,eax
10002383:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002388:	74 0e                	je     10002398 <ssfn_render+0x103d>
1000238a:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000238e:	bb 04 00 00 00       	mov    ebx,0x4
10002393:	29 f8                	sub    eax,edi
10002395:	99                   	cdq    
10002396:	f7 fb                	idiv   ebx
10002398:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000239c:	31 db                	xor    ebx,ebx
1000239e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100023a2:	31 f6                	xor    esi,esi
100023a4:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
100023ab:	01 c1                	add    ecx,eax
100023ad:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
100023b1:	7f 30                	jg     100023e3 <ssfn_render+0x1088>
100023b3:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100023b7:	85 c0                	test   eax,eax
100023b9:	79 02                	jns    100023bd <ssfn_render+0x1062>
100023bb:	31 c0                	xor    eax,eax
100023bd:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100023c1:	47                   	inc    edi
100023c2:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
100023c6:	b2 01                	mov    dl,0x1
100023c8:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
100023cc:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
100023d0:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100023d4:	7c 9b                	jl     10002371 <ssfn_render+0x1016>
100023d6:	84 d2                	test   dl,dl
100023d8:	74 3b                	je     10002415 <ssfn_render+0x10ba>
100023da:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
100023e1:	eb 32                	jmp    10002415 <ssfn_render+0x10ba>
100023e3:	89 d8                	mov    eax,ebx
100023e5:	99                   	cdq    
100023e6:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
100023ea:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
100023f1:	3c ff                	cmp    al,0xff
100023f3:	74 0e                	je     10002403 <ssfn_render+0x10a8>
100023f5:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023f9:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023ff:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
10002403:	46                   	inc    esi
10002404:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
10002408:	eb a3                	jmp    100023ad <ssfn_render+0x1052>
1000240a:	84 c0                	test   al,al
1000240c:	74 07                	je     10002415 <ssfn_render+0x10ba>
1000240e:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
10002415:	b3 fe                	mov    bl,0xfe
10002417:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
1000241b:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
1000241f:	e9 9f f5 ff ff       	jmp    100019c3 <ssfn_render+0x668>
10002424:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000242a:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000242d:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
10002430:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
10002433:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002439:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
1000243d:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
10002441:	89 f0                	mov    eax,esi
10002443:	89 d9                	mov    ecx,ebx
10002445:	43                   	inc    ebx
10002446:	39 de                	cmp    esi,ebx
10002448:	7e 08                	jle    10002452 <ssfn_render+0x10f7>
1000244a:	48                   	dec    eax
1000244b:	29 c8                	sub    eax,ecx
1000244d:	88 42 07             	mov    BYTE PTR [edx+0x7],al
10002450:	eb 04                	jmp    10002456 <ssfn_render+0x10fb>
10002452:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
10002456:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
1000245e:	0f 84 c9 0c 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002464:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
1000246a:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002470:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002474:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
10002477:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000247b:	0f ba e0 0c          	bt     eax,0xc
1000247f:	72 22                	jb     100024a3 <ssfn_render+0x1148>
10002481:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002484:	83 e0 0f             	and    eax,0xf
10002487:	3c 03                	cmp    al,0x3
10002489:	74 18                	je     100024a3 <ssfn_render+0x1148>
1000248b:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
1000248f:	84 c9                	test   cl,cl
10002491:	74 10                	je     100024a3 <ssfn_render+0x1148>
10002493:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
10002497:	0f af d7             	imul   edx,edi
1000249a:	89 d0                	mov    eax,edx
1000249c:	99                   	cdq    
1000249d:	f7 f9                	idiv   ecx
1000249f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100024a3:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100024a7:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
100024ad:	7d 06                	jge    100024b5 <ssfn_render+0x115a>
100024af:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
100024b5:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
100024bb:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
100024bf:	0f b7 13             	movzx  edx,WORD PTR [ebx]
100024c2:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
100024c7:	89 d0                	mov    eax,edx
100024c9:	99                   	cdq    
100024ca:	f7 f9                	idiv   ecx
100024cc:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
100024d0:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024d4:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
100024d7:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
100024db:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
100024df:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100024e3:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100024e8:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100024ec:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024f1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024f5:	99                   	cdq    
100024f6:	f7 f9                	idiv   ecx
100024f8:	31 d2                	xor    edx,edx
100024fa:	83 ff 10             	cmp    edi,0x10
100024fd:	0f 9f c2             	setg   dl
10002500:	42                   	inc    edx
10002501:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
10002505:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
10002509:	7d 08                	jge    10002513 <ssfn_render+0x11b8>
1000250b:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
1000250f:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10002513:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10002517:	39 c2                	cmp    edx,eax
10002519:	7d 04                	jge    1000251f <ssfn_render+0x11c4>
1000251b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000251f:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
10002524:	74 4c                	je     10002572 <ssfn_render+0x1217>
10002526:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000252a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000252f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002533:	99                   	cdq    
10002534:	f7 f9                	idiv   ecx
10002536:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000253a:	81 e2 00 08 00 00    	and    edx,0x800
10002540:	74 04                	je     10002546 <ssfn_render+0x11eb>
10002542:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10002546:	01 d0                	add    eax,edx
10002548:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
1000254e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002552:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002556:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
1000255a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000255f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002563:	99                   	cdq    
10002564:	f7 f9                	idiv   ecx
10002566:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000256a:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002570:	eb 22                	jmp    10002594 <ssfn_render+0x1239>
10002572:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002576:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002580:	d1 f8                	sar    eax,1
10002582:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
1000258a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000258e:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002594:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000259b:	8b 18                	mov    ebx,DWORD PTR [eax]
1000259d:	85 db                	test   ebx,ebx
1000259f:	0f 84 2e 09 00 00    	je     10002ed3 <ssfn_render+0x1b78>
100025a5:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
100025a9:	89 d1                	mov    ecx,edx
100025ab:	89 d0                	mov    eax,edx
100025ad:	66 c1 f9 0b          	sar    cx,0xb
100025b1:	c1 f8 1f             	sar    eax,0x1f
100025b4:	31 c2                	xor    edx,eax
100025b6:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
100025ba:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
100025be:	88 c8                	mov    al,cl
100025c0:	83 e0 10             	and    eax,0x10
100025c3:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
100025c7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100025cb:	83 c0 40             	add    eax,0x40
100025ce:	c1 f8 06             	sar    eax,0x6
100025d1:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
100025d8:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100025dc:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
100025e0:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
100025e4:	7d 08                	jge    100025ee <ssfn_render+0x1293>
100025e6:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100025ea:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
100025ee:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100025f1:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025f9:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025fd:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
10002605:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
10002609:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000260e:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002612:	99                   	cdq    
10002613:	f7 f9                	idiv   ecx
10002615:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10002619:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002620:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002623:	0f b6 f4             	movzx  esi,ah
10002626:	89 c2                	mov    edx,eax
10002628:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
1000262c:	c1 ea 10             	shr    edx,0x10
1000262f:	0f b6 fa             	movzx  edi,dl
10002632:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
10002636:	0f b6 f8             	movzx  edi,al
10002639:	c1 e8 18             	shr    eax,0x18
1000263c:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
10002640:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002644:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000264b:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
1000264e:	0f b6 fc             	movzx  edi,ah
10002651:	89 c2                	mov    edx,eax
10002653:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000265a:	c1 ea 10             	shr    edx,0x10
1000265d:	0f b6 c0             	movzx  eax,al
10002660:	0f b6 f2             	movzx  esi,dl
10002663:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000266a:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002671:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002675:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000267c:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002683:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002687:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000268b:	0f af c2             	imul   eax,edx
1000268e:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002692:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002696:	8d 04 90             	lea    eax,[eax+edx*4]
10002699:	01 d8                	add    eax,ebx
1000269b:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
100026a2:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
100026a6:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
100026ad:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
100026b2:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
100026b9:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100026bd:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
100026c1:	0f 8d e2 04 00 00    	jge    10002ba9 <ssfn_render+0x184e>
100026c7:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100026ce:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100026d5:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
100026d9:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
100026dd:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100026e1:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
100026e5:	39 d0                	cmp    eax,edx
100026e7:	0f 8d bc 04 00 00    	jge    10002ba9 <ssfn_render+0x184e>
100026ed:	85 c0                	test   eax,eax
100026ef:	0f 88 94 04 00 00    	js     10002b89 <ssfn_render+0x182e>
100026f5:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026fb:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026ff:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002703:	c1 e1 08             	shl    ecx,0x8
10002706:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
1000270e:	89 c8                	mov    eax,ecx
10002710:	0f af c3             	imul   eax,ebx
10002713:	99                   	cdq    
10002714:	f7 fe                	idiv   esi
10002716:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
1000271d:	c1 f8 08             	sar    eax,0x8
10002720:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
10002727:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
1000272d:	0f af c3             	imul   eax,ebx
10002730:	99                   	cdq    
10002731:	f7 fe                	idiv   esi
10002733:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
10002737:	c1 f8 08             	sar    eax,0x8
1000273a:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
10002741:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
10002745:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
1000274c:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
10002753:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000275a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
1000275e:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002762:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002766:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000276a:	0f 8d 19 04 00 00    	jge    10002b89 <ssfn_render+0x182e>
10002770:	85 c0                	test   eax,eax
10002772:	0f 88 ff 03 00 00    	js     10002b77 <ssfn_render+0x181c>
10002778:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000277f:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002783:	75 42                	jne    100027c7 <ssfn_render+0x146c>
10002785:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002789:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002790:	b9 10 00 00 00       	mov    ecx,0x10
10002795:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002798:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
1000279f:	89 c2                	mov    edx,eax
100027a1:	0f b6 fc             	movzx  edi,ah
100027a4:	d3 ea                	shr    edx,cl
100027a6:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
100027ad:	0f b6 f2             	movzx  esi,dl
100027b0:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
100027b4:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
100027bb:	d3 e8                	shr    eax,cl
100027bd:	0f b6 c0             	movzx  eax,al
100027c0:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
100027c7:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100027cd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100027d1:	0f b7 18             	movzx  ebx,WORD PTR [eax]
100027d4:	c1 e1 08             	shl    ecx,0x8
100027d7:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
100027db:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
100027e3:	89 c8                	mov    eax,ecx
100027e5:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
100027ed:	0f af c3             	imul   eax,ebx
100027f0:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027f8:	99                   	cdq    
100027f9:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10002801:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
10002805:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
1000280d:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
10002814:	c1 f8 08             	sar    eax,0x8
10002817:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
1000281e:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
10002824:	0f af c3             	imul   eax,ebx
10002827:	99                   	cdq    
10002828:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
1000282c:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
10002830:	c1 f8 08             	sar    eax,0x8
10002833:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
1000283a:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
10002841:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002845:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
10002849:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
1000284d:	0f 8d 3b 02 00 00    	jge    10002a8e <ssfn_render+0x1733>
10002853:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10002857:	c1 fa 08             	sar    edx,0x8
1000285a:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002861:	75 25                	jne    10002888 <ssfn_render+0x152d>
10002863:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002868:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
1000286f:	b8 00 01 00 00       	mov    eax,0x100
10002874:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
1000287c:	29 c8                	sub    eax,ecx
1000287e:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002882:	39 c7                	cmp    edi,eax
10002884:	7e 1c                	jle    100028a2 <ssfn_render+0x1547>
10002886:	eb 16                	jmp    1000289e <ssfn_render+0x1543>
10002888:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002890:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
10002897:	75 09                	jne    100028a2 <ssfn_render+0x1547>
10002899:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
1000289e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100028a2:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
100028a6:	0f b7 00             	movzx  eax,WORD PTR [eax]
100028a9:	0f af c2             	imul   eax,edx
100028ac:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
100028b3:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
100028b8:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
100028bd:	c1 f8 08             	sar    eax,0x8
100028c0:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
100028c7:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
100028ce:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100028d2:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
100028d6:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
100028da:	0f 8d a1 01 00 00    	jge    10002a81 <ssfn_render+0x1726>
100028e0:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100028e4:	c1 f8 08             	sar    eax,0x8
100028e7:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
100028ee:	75 3b                	jne    1000292b <ssfn_render+0x15d0>
100028f0:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028f5:	ba 00 01 00 00       	mov    edx,0x100
100028fa:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
10002902:	29 ca                	sub    edx,ecx
10002904:	89 f1                	mov    ecx,esi
10002906:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
1000290d:	39 d1                	cmp    ecx,edx
1000290f:	7c 0e                	jl     1000291f <ssfn_render+0x15c4>
10002911:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002915:	81 fa 00 01 00 00    	cmp    edx,0x100
1000291b:	74 22                	je     1000293f <ssfn_render+0x15e4>
1000291d:	89 d1                	mov    ecx,edx
1000291f:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
10002924:	89 cf                	mov    edi,ecx
10002926:	c1 ff 08             	sar    edi,0x8
10002929:	eb 14                	jmp    1000293f <ssfn_render+0x15e4>
1000292b:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
10002932:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
10002939:	74 04                	je     1000293f <ssfn_render+0x15e4>
1000293b:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000293f:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
10002943:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
10002947:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
1000294e:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
10002953:	81 fa ff 00 00 00    	cmp    edx,0xff
10002959:	75 37                	jne    10002992 <ssfn_render+0x1637>
1000295b:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
10002962:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
1000296a:	0f af c7             	imul   eax,edi
1000296d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002971:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002978:	0f af c7             	imul   eax,edi
1000297b:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
1000297f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10002986:	0f af c7             	imul   eax,edi
10002989:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
1000298d:	e9 e2 00 00 00       	jmp    10002a74 <ssfn_render+0x1719>
10002992:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002998:	74 2d                	je     100029c7 <ssfn_render+0x166c>
1000299a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000299d:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
100029a0:	85 c9                	test   ecx,ecx
100029a2:	74 23                	je     100029c7 <ssfn_render+0x166c>
100029a4:	01 c8                	add    eax,ecx
100029a6:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
100029a9:	89 d9                	mov    ecx,ebx
100029ab:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
100029b2:	c1 e9 10             	shr    ecx,0x10
100029b5:	0f b6 f7             	movzx  esi,bh
100029b8:	0f b6 c1             	movzx  eax,cl
100029bb:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
100029bf:	0f b6 c3             	movzx  eax,bl
100029c2:	c1 eb 18             	shr    ebx,0x18
100029c5:	eb 14                	jmp    100029db <ssfn_render+0x1680>
100029c7:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100029cb:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100029cf:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
100029d3:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
100029d7:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100029db:	81 fb ff 00 00 00    	cmp    ebx,0xff
100029e1:	75 25                	jne    10002a08 <ssfn_render+0x16ad>
100029e3:	0f af c7             	imul   eax,edi
100029e6:	0f af f7             	imul   esi,edi
100029e9:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029ed:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029f1:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029f7:	0f af cf             	imul   ecx,edi
100029fa:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029fe:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
10002a02:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
10002a06:	eb 6c                	jmp    10002a74 <ssfn_render+0x1719>
10002a08:	0f af f3             	imul   esi,ebx
10002a0b:	0f af c3             	imul   eax,ebx
10002a0e:	b9 ff 00 00 00       	mov    ecx,0xff
10002a13:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
10002a1a:	29 d9                	sub    ecx,ebx
10002a1c:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10002a20:	0f af d1             	imul   edx,ecx
10002a23:	b9 ff 00 00 00       	mov    ecx,0xff
10002a28:	01 d0                	add    eax,edx
10002a2a:	0f af c7             	imul   eax,edi
10002a2d:	99                   	cdq    
10002a2e:	f7 f9                	idiv   ecx
10002a30:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002a34:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a38:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
10002a40:	01 f0                	add    eax,esi
10002a42:	89 ce                	mov    esi,ecx
10002a44:	0f af c7             	imul   eax,edi
10002a47:	99                   	cdq    
10002a48:	f7 f9                	idiv   ecx
10002a4a:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002a4e:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002a52:	0f af cb             	imul   ecx,ebx
10002a55:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a59:	0f af df             	imul   ebx,edi
10002a5c:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a64:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a68:	01 c8                	add    eax,ecx
10002a6a:	0f af c7             	imul   eax,edi
10002a6d:	99                   	cdq    
10002a6e:	f7 fe                	idiv   esi
10002a70:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a74:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a7c:	e9 51 fe ff ff       	jmp    100028d2 <ssfn_render+0x1577>
10002a81:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a89:	e9 b7 fd ff ff       	jmp    10002845 <ssfn_render+0x14ea>
10002a8e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a93:	74 30                	je     10002ac5 <ssfn_render+0x176a>
10002a95:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a99:	31 d2                	xor    edx,edx
10002a9b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a9f:	31 d2                	xor    edx,edx
10002aa1:	89 c1                	mov    ecx,eax
10002aa3:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002aa7:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002aab:	31 d2                	xor    edx,edx
10002aad:	89 c6                	mov    esi,eax
10002aaf:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002ab3:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002ab7:	31 d2                	xor    edx,edx
10002ab9:	89 c3                	mov    ebx,eax
10002abb:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002abf:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002ac3:	eb 1c                	jmp    10002ae1 <ssfn_render+0x1786>
10002ac5:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002ac9:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002acd:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002ad1:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002ad5:	c1 e9 08             	shr    ecx,0x8
10002ad8:	c1 ee 08             	shr    esi,0x8
10002adb:	c1 eb 08             	shr    ebx,0x8
10002ade:	c1 e8 08             	shr    eax,0x8
10002ae1:	83 f8 0f             	cmp    eax,0xf
10002ae4:	0f 86 8d 00 00 00    	jbe    10002b77 <ssfn_render+0x181c>
10002aea:	89 ca                	mov    edx,ecx
10002aec:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002af2:	76 05                	jbe    10002af9 <ssfn_render+0x179e>
10002af4:	ba ff 00 00 00       	mov    edx,0xff
10002af9:	b9 10 00 00 00       	mov    ecx,0x10
10002afe:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002b05:	d3 e2                	shl    edx,cl
10002b07:	3d ff 00 00 00       	cmp    eax,0xff
10002b0c:	89 d1                	mov    ecx,edx
10002b0e:	76 05                	jbe    10002b15 <ssfn_render+0x17ba>
10002b10:	b8 ff 00 00 00       	mov    eax,0xff
10002b15:	c1 e0 18             	shl    eax,0x18
10002b18:	09 c8                	or     eax,ecx
10002b1a:	81 fe ff 00 00 00    	cmp    esi,0xff
10002b20:	76 05                	jbe    10002b27 <ssfn_render+0x17cc>
10002b22:	be ff 00 00 00       	mov    esi,0xff
10002b27:	c1 e6 08             	shl    esi,0x8
10002b2a:	09 f0                	or     eax,esi
10002b2c:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002b32:	76 05                	jbe    10002b39 <ssfn_render+0x17de>
10002b34:	bb ff 00 00 00       	mov    ebx,0xff
10002b39:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002b3d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002b41:	d3 e3                	shl    ebx,cl
10002b43:	09 c3                	or     ebx,eax
10002b45:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002b4c:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002b4f:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002b53:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b57:	75 1e                	jne    10002b77 <ssfn_render+0x181c>
10002b59:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b60:	7e 07                	jle    10002b69 <ssfn_render+0x180e>
10002b62:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b69:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b6d:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b71:	7d 04                	jge    10002b77 <ssfn_render+0x181c>
10002b73:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b77:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b7b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b7f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b83:	0f 85 ca fb ff ff    	jne    10002753 <ssfn_render+0x13f8>
10002b89:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b90:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b94:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b98:	25 fc ff 00 00       	and    eax,0xfffc
10002b9d:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002ba4:	e9 10 fb ff ff       	jmp    100026b9 <ssfn_render+0x135e>
10002ba9:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002bb0:	0f 84 90 01 00 00    	je     10002d46 <ssfn_render+0x19eb>
10002bb6:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002bbe:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002bc5:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002bc9:	40                   	inc    eax
10002bca:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002bce:	29 c7                	sub    edi,eax
10002bd0:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002bd4:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002bd8:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002bdc:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002be0:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002be4:	7e 09                	jle    10002bef <ssfn_render+0x1894>
10002be6:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002bea:	40                   	inc    eax
10002beb:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002bef:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002bf6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bfd:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002c01:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c05:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c09:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002c0d:	0f af c2             	imul   eax,edx
10002c10:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002c14:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002c18:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002c1c:	03 07                	add    eax,DWORD PTR [edi]
10002c1e:	89 c7                	mov    edi,eax
10002c20:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002c24:	c1 e0 18             	shl    eax,0x18
10002c27:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002c2b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002c2f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002c33:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002c38:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002c3c:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002c40:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002c44:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002c48:	0f 8e f8 00 00 00    	jle    10002d46 <ssfn_render+0x19eb>
10002c4e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c55:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c5c:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c60:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c64:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c68:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c6c:	39 d0                	cmp    eax,edx
10002c6e:	0f 8d d2 00 00 00    	jge    10002d46 <ssfn_render+0x19eb>
10002c74:	31 db                	xor    ebx,ebx
10002c76:	85 c0                	test   eax,eax
10002c78:	79 23                	jns    10002c9d <ssfn_render+0x1942>
10002c7a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c81:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c85:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c89:	25 fc ff 00 00       	and    eax,0xfffc
10002c8e:	01 c7                	add    edi,eax
10002c90:	eb aa                	jmp    10002c3c <ssfn_render+0x18e1>
10002c92:	85 c0                	test   eax,eax
10002c94:	79 20                	jns    10002cb6 <ssfn_render+0x195b>
10002c96:	43                   	inc    ebx
10002c97:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c9b:	7c dd                	jl     10002c7a <ssfn_render+0x191f>
10002c9d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ca4:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002ca8:	01 d8                	add    eax,ebx
10002caa:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002cae:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002cb2:	7c de                	jl     10002c92 <ssfn_render+0x1937>
10002cb4:	eb c4                	jmp    10002c7a <ssfn_render+0x191f>
10002cb6:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002cba:	7e 06                	jle    10002cc2 <ssfn_render+0x1967>
10002cbc:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002cc0:	7f d4                	jg     10002c96 <ssfn_render+0x193b>
10002cc2:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002cc5:	b8 10 00 00 00       	mov    eax,0x10
10002cca:	0f b6 f6             	movzx  esi,dh
10002ccd:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002cd1:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002cd5:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002cd9:	89 d0                	mov    eax,edx
10002cdb:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cdf:	d3 e8                	shr    eax,cl
10002ce1:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ce5:	0f b6 c0             	movzx  eax,al
10002ce8:	d3 ea                	shr    edx,cl
10002cea:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002cee:	0f b6 f2             	movzx  esi,dl
10002cf1:	29 c1                	sub    ecx,eax
10002cf3:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002cf7:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cfc:	29 f2                	sub    edx,esi
10002cfe:	c1 f9 08             	sar    ecx,0x8
10002d01:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002d06:	01 c8                	add    eax,ecx
10002d08:	c1 fa 08             	sar    edx,0x8
10002d0b:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002d0f:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002d13:	d3 e0                	shl    eax,cl
10002d15:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002d19:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002d1d:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002d21:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002d25:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002d2a:	d3 e6                	shl    esi,cl
10002d2c:	c1 fa 08             	sar    edx,0x8
10002d2f:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002d33:	c1 e2 08             	shl    edx,0x8
10002d36:	09 d0                	or     eax,edx
10002d38:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002d3c:	09 c6                	or     esi,eax
10002d3e:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002d41:	e9 50 ff ff ff       	jmp    10002c96 <ssfn_render+0x193b>
10002d46:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002d4d:	0f 84 80 01 00 00    	je     10002ed3 <ssfn_render+0x1b78>
10002d53:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d57:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d5b:	d1 fa                	sar    edx,1
10002d5d:	40                   	inc    eax
10002d5e:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d62:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d66:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d6a:	7e 09                	jle    10002d75 <ssfn_render+0x1a1a>
10002d6c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d70:	40                   	inc    eax
10002d71:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d75:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d7c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d83:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d87:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d8b:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d8f:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d93:	01 d0                	add    eax,edx
10002d95:	0f af c1             	imul   eax,ecx
10002d98:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d9c:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002da0:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002da4:	03 03                	add    eax,DWORD PTR [ebx]
10002da6:	89 c7                	mov    edi,eax
10002da8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002dac:	c1 e0 18             	shl    eax,0x18
10002daf:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002db3:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002dbb:	01 d0                	add    eax,edx
10002dbd:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002dc1:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002dc6:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002dca:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002dce:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002dd2:	0f 8e fb 00 00 00    	jle    10002ed3 <ssfn_render+0x1b78>
10002dd8:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ddf:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002de3:	01 d8                	add    eax,ebx
10002de5:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002dec:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002df0:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002df4:	39 d0                	cmp    eax,edx
10002df6:	0f 8d d7 00 00 00    	jge    10002ed3 <ssfn_render+0x1b78>
10002dfc:	31 f6                	xor    esi,esi
10002dfe:	85 c0                	test   eax,eax
10002e00:	0f 89 ad 00 00 00    	jns    10002eb3 <ssfn_render+0x1b58>
10002e06:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e0d:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002e11:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002e15:	25 fc ff 00 00       	and    eax,0xfffc
10002e1a:	01 c7                	add    edi,eax
10002e1c:	eb ac                	jmp    10002dca <ssfn_render+0x1a6f>
10002e1e:	85 c0                	test   eax,eax
10002e20:	0f 88 82 00 00 00    	js     10002ea8 <ssfn_render+0x1b4d>
10002e26:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002e29:	b8 10 00 00 00       	mov    eax,0x10
10002e2e:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002e32:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002e36:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002e3a:	89 d8                	mov    eax,ebx
10002e3c:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e40:	d3 e8                	shr    eax,cl
10002e42:	0f b6 cf             	movzx  ecx,bh
10002e45:	0f b6 c0             	movzx  eax,al
10002e48:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002e4c:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e50:	d3 eb                	shr    ebx,cl
10002e52:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e56:	0f b6 db             	movzx  ebx,bl
10002e59:	29 c1                	sub    ecx,eax
10002e5b:	29 da                	sub    edx,ebx
10002e5d:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e62:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e67:	c1 f9 08             	sar    ecx,0x8
10002e6a:	c1 fa 08             	sar    edx,0x8
10002e6d:	01 c8                	add    eax,ecx
10002e6f:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e73:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e77:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e7b:	d3 e0                	shl    eax,cl
10002e7d:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e81:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e85:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e8a:	c1 fa 08             	sar    edx,0x8
10002e8d:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e91:	c1 e2 08             	shl    edx,0x8
10002e94:	09 d0                	or     eax,edx
10002e96:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e99:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e9d:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ea1:	d3 e2                	shl    edx,cl
10002ea3:	09 c2                	or     edx,eax
10002ea5:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002ea8:	46                   	inc    esi
10002ea9:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002ead:	0f 8c 53 ff ff ff    	jl     10002e06 <ssfn_render+0x1aab>
10002eb3:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002eba:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002ebe:	01 f0                	add    eax,esi
10002ec0:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002ec4:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002ec8:	0f 8c 50 ff ff ff    	jl     10002e1e <ssfn_render+0x1ac3>
10002ece:	e9 33 ff ff ff       	jmp    10002e06 <ssfn_render+0x1aab>
10002ed3:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002eda:	74 04                	je     10002ee0 <ssfn_render+0x1b85>
10002edc:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002ee0:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002ee4:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002ee8:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002eee:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ef5:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002ef9:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002f00:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f03:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002f07:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002f0d:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002f11:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002f16:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002f1a:	99                   	cdq    
10002f1b:	f7 f9                	idiv   ecx
10002f1d:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002f21:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002f27:	25 80 00 00 00       	and    eax,0x80
10002f2c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002f30:	0f 85 f7 01 00 00    	jne    1000312d <ssfn_render+0x1dd2>
10002f36:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f39:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002f3d:	0f 84 ea 01 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002f43:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002f4a:	83 ec 0c             	sub    esp,0xc
10002f4d:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f54:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f5b:	51                   	push   ecx
10002f5c:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f63:	e8 53 d9 ff ff       	call   100008bb <_ssfn_c>
10002f68:	83 c4 10             	add    esp,0x10
10002f6b:	85 c0                	test   eax,eax
10002f6d:	0f 84 ba 01 00 00    	je     1000312d <ssfn_render+0x1dd2>
10002f73:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f7b:	0f 86 ac 01 00 00    	jbe    1000312d <ssfn_render+0x1dd2>
10002f81:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f87:	8d 48 06             	lea    ecx,[eax+0x6]
10002f8a:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f90:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f94:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f98:	0f 8e 8f 01 00 00    	jle    1000312d <ssfn_render+0x1dd2>
10002f9e:	8a 19                	mov    bl,BYTE PTR [ecx]
10002fa0:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002fa4:	8a 18                	mov    bl,BYTE PTR [eax]
10002fa6:	83 e3 40             	and    ebx,0x40
10002fa9:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002fae:	75 14                	jne    10002fc4 <ssfn_render+0x1c69>
10002fb0:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002fb4:	75 0e                	jne    10002fc4 <ssfn_render+0x1c69>
10002fb6:	80 fb 01             	cmp    bl,0x1
10002fb9:	19 c0                	sbb    eax,eax
10002fbb:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002fbf:	e9 60 01 00 00       	jmp    10003124 <ssfn_render+0x1dc9>
10002fc4:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002fc8:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002fcc:	c1 e6 10             	shl    esi,0x10
10002fcf:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002fd3:	84 db                	test   bl,bl
10002fd5:	74 08                	je     10002fdf <ssfn_render+0x1c84>
10002fd7:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002fda:	83 c1 06             	add    ecx,0x6
10002fdd:	eb 0c                	jmp    10002feb <ssfn_render+0x1c90>
10002fdf:	c1 e2 08             	shl    edx,0x8
10002fe2:	83 c1 05             	add    ecx,0x5
10002fe5:	89 d0                	mov    eax,edx
10002fe7:	09 f0                	or     eax,esi
10002fe9:	09 c7                	or     edi,eax
10002feb:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002fee:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002ff2:	01 f8                	add    eax,edi
10002ff4:	8a 10                	mov    dl,BYTE PTR [eax]
10002ff6:	88 d3                	mov    bl,dl
10002ff8:	83 e3 e0             	and    ebx,0xffffffe0
10002ffb:	80 fb c0             	cmp    bl,0xc0
10002ffe:	0f 85 20 01 00 00    	jne    10003124 <ssfn_render+0x1dc9>
10003004:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10003008:	c1 e2 08             	shl    edx,0x8
1000300b:	83 c0 02             	add    eax,0x2
1000300e:	81 e2 00 1f 00 00    	and    edx,0x1f00
10003014:	09 da                	or     edx,ebx
10003016:	8d 72 01             	lea    esi,[edx+0x1]
10003019:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
1000301d:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10003024:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10003028:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
1000302d:	0f 84 f1 00 00 00    	je     10003124 <ssfn_render+0x1dc9>
10003033:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10003037:	0f b7 10             	movzx  edx,WORD PTR [eax]
1000303a:	c1 e3 10             	shl    ebx,0x10
1000303d:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10003043:	09 d3                	or     ebx,edx
10003045:	39 de                	cmp    esi,ebx
10003047:	0f 82 cf 00 00 00    	jb     1000311c <ssfn_render+0x1dc1>
1000304d:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10003050:	89 d7                	mov    edi,edx
10003052:	c1 e7 10             	shl    edi,0x10
10003055:	81 e7 00 00 0f 00    	and    edi,0xf0000
1000305b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000305f:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10003063:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10003067:	39 fe                	cmp    esi,edi
10003069:	0f 87 ad 00 00 00    	ja     1000311c <ssfn_render+0x1dc1>
1000306f:	29 de                	sub    esi,ebx
10003071:	c0 ea 04             	shr    dl,0x4
10003074:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
1000307b:	0f b6 d2             	movzx  edx,dl
1000307e:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10003082:	89 d3                	mov    ebx,edx
10003084:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003088:	c1 e3 10             	shl    ebx,0x10
1000308b:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
1000308e:	09 da                	or     edx,ebx
10003090:	c0 e8 04             	shr    al,0x4
10003093:	c1 e0 18             	shl    eax,0x18
10003096:	09 c2                	or     edx,eax
10003098:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000309c:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
1000309f:	01 c2                	add    edx,eax
100030a1:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100030a4:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
100030a8:	39 d7                	cmp    edi,edx
100030aa:	76 78                	jbe    10003124 <ssfn_render+0x1dc9>
100030ac:	8a 1a                	mov    bl,BYTE PTR [edx]
100030ae:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
100030b5:	89 de                	mov    esi,ebx
100030b7:	83 e6 7f             	and    esi,0x7f
100030ba:	39 c6                	cmp    esi,eax
100030bc:	73 1d                	jae    100030db <ssfn_render+0x1d80>
100030be:	48                   	dec    eax
100030bf:	bb 02 00 00 00       	mov    ebx,0x2
100030c4:	29 f0                	sub    eax,esi
100030c6:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
100030cd:	0f b6 02             	movzx  eax,BYTE PTR [edx]
100030d0:	84 c0                	test   al,al
100030d2:	78 03                	js     100030d7 <ssfn_render+0x1d7c>
100030d4:	8d 58 02             	lea    ebx,[eax+0x2]
100030d7:	01 da                	add    edx,ebx
100030d9:	eb cd                	jmp    100030a8 <ssfn_render+0x1d4d>
100030db:	be 01 00 00 00       	mov    esi,0x1
100030e0:	84 db                	test   bl,bl
100030e2:	78 03                	js     100030e7 <ssfn_render+0x1d8c>
100030e4:	8d 70 01             	lea    esi,[eax+0x1]
100030e7:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
100030eb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100030ef:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030f4:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030f8:	99                   	cdq    
100030f9:	f7 fb                	idiv   ebx
100030fb:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
10003100:	74 0d                	je     1000310f <ssfn_render+0x1db4>
10003102:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10003109:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
1000310d:	eb 15                	jmp    10003124 <ssfn_render+0x1dc9>
1000310f:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10003116:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
1000311a:	eb 08                	jmp    10003124 <ssfn_render+0x1dc9>
1000311c:	83 c0 08             	add    eax,0x8
1000311f:	e9 00 ff ff ff       	jmp    10003024 <ssfn_render+0x1cc9>
10003124:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10003128:	e9 5d fe ff ff       	jmp    10002f8a <ssfn_render+0x1c2f>
1000312d:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
10003134:	eb 73                	jmp    100031a9 <ssfn_render+0x1e4e>
10003136:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10003141:	e9 50 e4 ff ff       	jmp    10001596 <ssfn_render+0x23b>
10003146:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000314d:	57                   	push   edi
1000314e:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003155:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000315c:	e8 5a d7 ff ff       	call   100008bb <_ssfn_c>
10003161:	5f                   	pop    edi
10003162:	85 c0                	test   eax,eax
10003164:	0f 84 25 e4 ff ff    	je     1000158f <ssfn_render+0x234>
1000316a:	e9 a2 e4 ff ff       	jmp    10001611 <ssfn_render+0x2b6>
1000316f:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003172:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10003176:	75 0c                	jne    10003184 <ssfn_render+0x1e29>
10003178:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000317f:	e9 3b e4 ff ff       	jmp    100015bf <ssfn_render+0x264>
10003184:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000318b:	57                   	push   edi
1000318c:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003193:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000319a:	e8 1c d7 ff ff       	call   100008bb <_ssfn_c>
1000319f:	59                   	pop    ecx
100031a0:	85 c0                	test   eax,eax
100031a2:	74 d4                	je     10003178 <ssfn_render+0x1e1d>
100031a4:	e9 68 e4 ff ff       	jmp    10001611 <ssfn_render+0x2b6>
100031a9:	81 c4 dc 05 01 00    	add    esp,0x105dc
100031af:	89 c8                	mov    eax,ecx
100031b1:	5b                   	pop    ebx
100031b2:	5e                   	pop    esi
100031b3:	5f                   	pop    edi
100031b4:	5d                   	pop    ebp
100031b5:	c3                   	ret    

100031b6 <ssfn_bbox>:
100031b6:	55                   	push   ebp
100031b7:	57                   	push   edi
100031b8:	56                   	push   esi
100031b9:	53                   	push   ebx
100031ba:	83 ec 3c             	sub    esp,0x3c
100031bd:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
100031c2:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100031c6:	0f 94 c0             	sete   al
100031c9:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
100031ce:	0f 94 c2             	sete   dl
100031d1:	09 d0                	or     eax,edx
100031d3:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
100031d8:	0f 94 c2             	sete   dl
100031db:	09 d0                	or     eax,edx
100031dd:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
100031e2:	0f 94 c2             	sete   dl
100031e5:	09 d0                	or     eax,edx
100031e7:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
100031ec:	0f 94 c2             	sete   dl
100031ef:	08 d0                	or     al,dl
100031f1:	0f 85 7c 01 00 00    	jne    10003373 <ssfn_bbox+0x1bd>
100031f7:	85 db                	test   ebx,ebx
100031f9:	0f 84 74 01 00 00    	je     10003373 <ssfn_bbox+0x1bd>
100031ff:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003203:	31 f6                	xor    esi,esi
10003205:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000320b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000320f:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003215:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003219:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000321f:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10003223:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003229:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000322d:	80 38 00             	cmp    BYTE PTR [eax],0x0
10003230:	0f 84 42 01 00 00    	je     10003378 <ssfn_bbox+0x1c2>
10003236:	8d 54 24 18          	lea    edx,[esp+0x18]
1000323a:	b9 06 00 00 00       	mov    ecx,0x6
1000323f:	89 d7                	mov    edi,edx
10003241:	89 f0                	mov    eax,esi
10003243:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
1000324d:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000324f:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10003257:	31 ff                	xor    edi,edi
10003259:	bd 01 00 00 00       	mov    ebp,0x1
1000325e:	50                   	push   eax
1000325f:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003263:	8d 44 24 20          	lea    eax,[esp+0x20]
10003267:	50                   	push   eax
10003268:	53                   	push   ebx
10003269:	e8 fc ff ff ff       	call   1000326a <ssfn_bbox+0xb4>	1000326a: R_386_PC32	ssfn_render
1000326e:	83 c4 10             	add    esp,0x10
10003271:	89 c6                	mov    esi,eax
10003273:	85 c0                	test   eax,eax
10003275:	74 6f                	je     100032e6 <ssfn_bbox+0x130>
10003277:	0f 88 fb 00 00 00    	js     10003378 <ssfn_bbox+0x1c2>
1000327d:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003283:	85 c0                	test   eax,eax
10003285:	0f 84 ed 00 00 00    	je     10003378 <ssfn_bbox+0x1c2>
1000328b:	85 ed                	test   ebp,ebp
1000328d:	74 0b                	je     1000329a <ssfn_bbox+0xe4>
1000328f:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003295:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000329a:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000329e:	74 12                	je     100032b2 <ssfn_bbox+0xfc>
100032a0:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
100032a6:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100032aa:	7d 2f                	jge    100032db <ssfn_bbox+0x125>
100032ac:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100032b0:	eb 29                	jmp    100032db <ssfn_bbox+0x125>
100032b2:	0f b7 08             	movzx  ecx,WORD PTR [eax]
100032b5:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
100032ba:	39 cd                	cmp    ebp,ecx
100032bc:	7d 05                	jge    100032c3 <ssfn_bbox+0x10d>
100032be:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
100032c3:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
100032c7:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
100032cc:	84 d2                	test   dl,dl
100032ce:	75 04                	jne    100032d4 <ssfn_bbox+0x11e>
100032d0:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
100032d4:	01 ca                	add    edx,ecx
100032d6:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
100032db:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
100032df:	31 ed                	xor    ebp,ebp
100032e1:	e9 78 ff ff ff       	jmp    1000325e <ssfn_bbox+0xa8>
100032e6:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
100032ed:	74 23                	je     10003312 <ssfn_bbox+0x15c>
100032ef:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100032f2:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032f6:	75 1a                	jne    10003312 <ssfn_bbox+0x15c>
100032f8:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032fe:	b9 04 00 00 00       	mov    ecx,0x4
10003303:	99                   	cdq    
10003304:	f7 f9                	idiv   ecx
10003306:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
1000330b:	29 f8                	sub    eax,edi
1000330d:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
10003312:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003318:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000331c:	74 29                	je     10003347 <ssfn_bbox+0x191>
1000331e:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003323:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10003327:	89 01                	mov    DWORD PTR [ecx],eax
10003329:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000332d:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
10003333:	89 01                	mov    DWORD PTR [ecx],eax
10003335:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003339:	89 38                	mov    DWORD PTR [eax],edi
1000333b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000333f:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10003343:	89 38                	mov    DWORD PTR [eax],edi
10003345:	eb 31                	jmp    10003378 <ssfn_bbox+0x1c2>
10003347:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
1000334c:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003350:	89 07                	mov    DWORD PTR [edi],eax
10003352:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003357:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
1000335b:	89 07                	mov    DWORD PTR [edi],eax
1000335d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003361:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003367:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000336b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003371:	eb 05                	jmp    10003378 <ssfn_bbox+0x1c2>
10003373:	be fc ff ff ff       	mov    esi,0xfffffffc
10003378:	83 c4 3c             	add    esp,0x3c
1000337b:	89 f0                	mov    eax,esi
1000337d:	5b                   	pop    ebx
1000337e:	5e                   	pop    esi
1000337f:	5f                   	pop    edi
10003380:	5d                   	pop    ebp
10003381:	c3                   	ret    

10003382 <ssfn_text>:
10003382:	55                   	push   ebp
10003383:	57                   	push   edi
10003384:	56                   	push   esi
10003385:	53                   	push   ebx
10003386:	83 ec 1c             	sub    esp,0x1c
10003389:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000338d:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003391:	85 f6                	test   esi,esi
10003393:	0f 84 b2 00 00 00    	je     1000344b <ssfn_text+0xc9>
10003399:	85 ed                	test   ebp,ebp
1000339b:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
100033a0:	0f 84 a5 00 00 00    	je     1000344b <ssfn_text+0xc9>
100033a6:	83 ec 0c             	sub    esp,0xc
100033a9:	6a 18                	push   0x18
100033ab:	e8 fc ff ff ff       	call   100033ac <ssfn_text+0x2a>	100033ac: R_386_PC32	malloc
100033b0:	83 c4 10             	add    esp,0x10
100033b3:	89 c3                	mov    ebx,eax
100033b5:	85 c0                	test   eax,eax
100033b7:	0f 84 8e 00 00 00    	je     1000344b <ssfn_text+0xc9>
100033bd:	31 c0                	xor    eax,eax
100033bf:	b9 06 00 00 00       	mov    ecx,0x6
100033c4:	89 df                	mov    edi,ebx
100033c6:	80 3e 00             	cmp    BYTE PTR [esi],0x0
100033c9:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100033cb:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100033cf:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100033d2:	74 79                	je     1000344d <ssfn_text+0xcb>
100033d4:	8d 43 0c             	lea    eax,[ebx+0xc]
100033d7:	52                   	push   edx
100033d8:	52                   	push   edx
100033d9:	50                   	push   eax
100033da:	8d 43 0a             	lea    eax,[ebx+0xa]
100033dd:	50                   	push   eax
100033de:	8d 43 06             	lea    eax,[ebx+0x6]
100033e1:	50                   	push   eax
100033e2:	8d 43 04             	lea    eax,[ebx+0x4]
100033e5:	50                   	push   eax
100033e6:	56                   	push   esi
100033e7:	55                   	push   ebp
100033e8:	e8 fc ff ff ff       	call   100033e9 <ssfn_text+0x67>	100033e9: R_386_PC32	ssfn_bbox
100033ed:	83 c4 20             	add    esp,0x20
100033f0:	85 c0                	test   eax,eax
100033f2:	75 59                	jne    1000344d <ssfn_text+0xcb>
100033f4:	83 ec 0c             	sub    esp,0xc
100033f7:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033fb:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033ff:	0f af c8             	imul   ecx,eax
10003402:	c1 e1 02             	shl    ecx,0x2
10003405:	51                   	push   ecx
10003406:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
1000340a:	e8 fc ff ff ff       	call   1000340b <ssfn_text+0x89>	1000340b: R_386_PC32	malloc
1000340f:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003413:	89 c7                	mov    edi,eax
10003415:	89 03                	mov    DWORD PTR [ebx],eax
10003417:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
1000341b:	83 c4 10             	add    esp,0x10
1000341e:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003420:	50                   	push   eax
10003421:	56                   	push   esi
10003422:	53                   	push   ebx
10003423:	55                   	push   ebp
10003424:	e8 fc ff ff ff       	call   10003425 <ssfn_text+0xa3>	10003425: R_386_PC32	ssfn_render
10003429:	83 c4 10             	add    esp,0x10
1000342c:	85 c0                	test   eax,eax
1000342e:	7e 04                	jle    10003434 <ssfn_text+0xb2>
10003430:	01 c6                	add    esi,eax
10003432:	eb ec                	jmp    10003420 <ssfn_text+0x9e>
10003434:	74 17                	je     1000344d <ssfn_text+0xcb>
10003436:	83 ec 0c             	sub    esp,0xc
10003439:	ff 33                	push   DWORD PTR [ebx]
1000343b:	e8 fc ff ff ff       	call   1000343c <ssfn_text+0xba>	1000343c: R_386_PC32	free
10003440:	89 1c 24             	mov    DWORD PTR [esp],ebx
10003443:	e8 fc ff ff ff       	call   10003444 <ssfn_text+0xc2>	10003444: R_386_PC32	free
10003448:	83 c4 10             	add    esp,0x10
1000344b:	31 db                	xor    ebx,ebx
1000344d:	83 c4 1c             	add    esp,0x1c
10003450:	89 d8                	mov    eax,ebx
10003452:	5b                   	pop    ebx
10003453:	5e                   	pop    esi
10003454:	5f                   	pop    edi
10003455:	5d                   	pop    ebp
10003456:	c3                   	ret    
10003457:	90                   	nop

10003458 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003458:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000345c:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003462:	8b 10                	mov    edx,DWORD PTR [eax]
10003464:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003468:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
1000346b:	90                   	nop

1000346c <NIContext::drvDarken4(int, int, int)>:
1000346c:	55                   	push   ebp
1000346d:	57                   	push   edi
1000346e:	56                   	push   esi
1000346f:	53                   	push   ebx
10003470:	83 ec 20             	sub    esp,0x20
10003473:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10003477:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000347b:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000347f:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10003483:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003489:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000348d:	8b 10                	mov    edx,DWORD PTR [eax]
1000348f:	56                   	push   esi
10003490:	53                   	push   ebx
10003491:	50                   	push   eax
10003492:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003495:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003499:	89 c2                	mov    edx,eax
1000349b:	0f b6 ec             	movzx  ebp,ah
1000349e:	c1 ea 10             	shr    edx,0x10
100034a1:	0f af e9             	imul   ebp,ecx
100034a4:	0f b6 d2             	movzx  edx,dl
100034a7:	0f b6 c0             	movzx  eax,al
100034aa:	0f af d1             	imul   edx,ecx
100034ad:	0f af c1             	imul   eax,ecx
100034b0:	c1 ea 07             	shr    edx,0x7
100034b3:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
100034b9:	c1 e8 07             	shr    eax,0x7
100034bc:	8b 39                	mov    edi,DWORD PTR [ecx]
100034be:	c1 e2 10             	shl    edx,0x10
100034c1:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
100034c5:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
100034c9:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
100034cd:	c1 ed 07             	shr    ebp,0x7
100034d0:	c1 e5 08             	shl    ebp,0x8
100034d3:	09 ea                	or     edx,ebp
100034d5:	09 c2                	or     edx,eax
100034d7:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
100034db:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
100034de:	83 c4 2c             	add    esp,0x2c
100034e1:	5b                   	pop    ebx
100034e2:	5e                   	pop    esi
100034e3:	5f                   	pop    edi
100034e4:	5d                   	pop    ebp
100034e5:	ff e0                	jmp    eax
100034e7:	90                   	nop

100034e8 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
100034e8:	55                   	push   ebp
100034e9:	b9 00 40 00 00       	mov    ecx,0x4000
100034ee:	57                   	push   edi
100034ef:	b0 ff                	mov    al,0xff
100034f1:	56                   	push   esi
100034f2:	53                   	push   ebx
100034f3:	83 ec 3c             	sub    esp,0x3c
100034f6:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034fa:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034fe:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
10003501:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10003505:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003507:	85 db                	test   ebx,ebx
10003509:	75 10                	jne    1000351b <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
1000350b:	83 ec 0c             	sub    esp,0xc
1000350e:	68 14 4b 00 10       	push   0x10004b14	1000350f: R_386_32	.text
10003513:	e8 fc ff ff ff       	call   10003514 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	10003514: R_386_PC32	KePanic(char const*)
10003518:	83 c4 10             	add    esp,0x10
1000351b:	50                   	push   eax
1000351c:	50                   	push   eax
1000351d:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003521:	50                   	push   eax
10003522:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003526:	50                   	push   eax
10003527:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000352b:	50                   	push   eax
1000352c:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003530:	50                   	push   eax
10003531:	56                   	push   esi
10003532:	68 00 00 00 00       	push   0x0	10003533: R_386_32	ssfn_ctx
10003537:	e8 fc ff ff ff       	call   10003538 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	10003538: R_386_PC32	ssfn_bbox
1000353c:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000353f:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
10003547:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
1000354b:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
10003553:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10003557:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000355c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003560:	0d 00 00 00 ff       	or     eax,0xff000000
10003565:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003569:	83 c4 1c             	add    esp,0x1c
1000356c:	56                   	push   esi
1000356d:	8d 44 24 20          	lea    eax,[esp+0x20]
10003571:	50                   	push   eax
10003572:	68 00 00 00 00       	push   0x0	10003573: R_386_32	ssfn_ctx
10003577:	e8 fc ff ff ff       	call   10003578 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003578: R_386_PC32	ssfn_render
1000357c:	83 c4 10             	add    esp,0x10
1000357f:	89 03                	mov    DWORD PTR [ebx],eax
10003581:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003585:	31 db                	xor    ebx,ebx
10003587:	89 f0                	mov    eax,esi
10003589:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
1000358d:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003591:	7e 3f                	jle    100035d2 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003593:	31 ff                	xor    edi,edi
10003595:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000359a:	39 f8                	cmp    eax,edi
1000359c:	7e 2c                	jle    100035ca <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
1000359e:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100035a1:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
100035a4:	83 f8 ff             	cmp    eax,0xffffffff
100035a7:	74 1d                	je     100035c6 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
100035a9:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
100035af:	25 ff ff ff 00       	and    eax,0xffffff
100035b4:	8b 0a                	mov    ecx,DWORD PTR [edx]
100035b6:	50                   	push   eax
100035b7:	56                   	push   esi
100035b8:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100035bc:	01 f8                	add    eax,edi
100035be:	50                   	push   eax
100035bf:	52                   	push   edx
100035c0:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100035c3:	83 c4 10             	add    esp,0x10
100035c6:	43                   	inc    ebx
100035c7:	47                   	inc    edi
100035c8:	eb cb                	jmp    10003595 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
100035ca:	29 c3                	sub    ebx,eax
100035cc:	46                   	inc    esi
100035cd:	83 c3 40             	add    ebx,0x40
100035d0:	eb b5                	jmp    10003587 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
100035d2:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100035d7:	83 c4 3c             	add    esp,0x3c
100035da:	5b                   	pop    ebx
100035db:	5e                   	pop    esi
100035dc:	5f                   	pop    edi
100035dd:	5d                   	pop    ebp
100035de:	c3                   	ret    
100035df:	90                   	nop

100035e0 <NIContext::~NIContext()>:
100035e0:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	100035e4: R_386_32	ssfn_ctx
100035e8:	e9 00 db ff ff       	jmp    100010ed <ssfn_free>
100035ed:	90                   	nop

100035ee <NIContext::NIContext(Video*, int, int, int, int)>:
100035ee:	55                   	push   ebp
100035ef:	ba 00 00 00 00       	mov    edx,0x0	100035f0: R_386_32	ssfn_ctx
100035f4:	57                   	push   edi
100035f5:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035fa:	56                   	push   esi
100035fb:	89 d7                	mov    edi,edx
100035fd:	53                   	push   ebx
100035fe:	81 ec 48 02 00 00    	sub    esp,0x248
10003604:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
1000360b:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
10003612:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
10003618:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
1000361f:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
10003625:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
1000362c:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
10003632:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
10003639:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
1000363f:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
10003646:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
1000364c:	31 c0                	xor    eax,eax
1000364e:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003650:	68 00 40 00 00       	push   0x4000
10003655:	e8 fc ff ff ff       	call   10003656 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	10003656: R_386_PC32	malloc
1000365a:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003664:	89 03                	mov    DWORD PTR [ebx],eax
10003666:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000366d:	e8 fc ff ff ff       	call   1000366e <NIContext::NIContext(Video*, int, int, int, int)+0x80>	1000366e: R_386_PC32	malloc
10003672:	83 c4 0c             	add    esp,0xc
10003675:	89 c6                	mov    esi,eax
10003677:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003679: R_386_32	kernelProcess
1000367d:	68 2d 4b 00 10       	push   0x10004b2d	1000367e: R_386_32	.text
10003682:	50                   	push   eax
10003683:	e8 fc ff ff ff       	call   10003684 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003684: R_386_PC32	Directory::Directory(char const*, Process*)
10003688:	83 c4 10             	add    esp,0x10
1000368b:	85 f6                	test   esi,esi
1000368d:	75 10                	jne    1000369f <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
1000368f:	83 ec 0c             	sub    esp,0xc
10003692:	68 41 4b 00 10       	push   0x10004b41	10003693: R_386_32	.text
10003697:	e8 fc ff ff ff       	call   10003698 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003698: R_386_PC32	KePanic(char const*)
1000369c:	83 c4 10             	add    esp,0x10
1000369f:	83 ec 0c             	sub    esp,0xc
100036a2:	56                   	push   esi
100036a3:	e8 fc ff ff ff       	call   100036a4 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	100036a4: R_386_PC32	Directory::open()
100036a8:	83 c4 10             	add    esp,0x10
100036ab:	85 c0                	test   eax,eax
100036ad:	75 e0                	jne    1000368f <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
100036af:	83 ec 0c             	sub    esp,0xc
100036b2:	8b 06                	mov    eax,DWORD PTR [esi]
100036b4:	8d 4c 24 20          	lea    ecx,[esp+0x20]
100036b8:	51                   	push   ecx
100036b9:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
100036c0:	52                   	push   edx
100036c1:	6a 00                	push   0x0
100036c3:	68 10 01 00 00       	push   0x110
100036c8:	56                   	push   esi
100036c9:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100036cc:	83 c4 20             	add    esp,0x20
100036cf:	85 c0                	test   eax,eax
100036d1:	0f 85 a0 01 00 00    	jne    10003877 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100036d7:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
100036df:	0f 85 92 01 00 00    	jne    10003877 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100036e5:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
100036ec:	83 c9 ff             	or     ecx,0xffffffff
100036ef:	83 ec 0c             	sub    esp,0xc
100036f2:	89 ef                	mov    edi,ebp
100036f4:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036f6:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036fc:	89 ca                	mov    edx,ecx
100036fe:	f7 d2                	not    edx
10003700:	52                   	push   edx
10003701:	e8 fc ff ff ff       	call   10003702 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	10003702: R_386_PC32	malloc
10003706:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
1000370a:	47                   	inc    edi
1000370b:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
10003711:	5a                   	pop    edx
10003712:	59                   	pop    ecx
10003713:	55                   	push   ebp
10003714:	50                   	push   eax
10003715:	e8 fc ff ff ff       	call   10003716 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	10003716: R_386_PC32	strcpy
1000371a:	5f                   	pop    edi
1000371b:	58                   	pop    eax
1000371c:	68 5c 4b 00 10       	push   0x10004b5c	1000371d: R_386_32	.text
10003721:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
10003725:	57                   	push   edi
10003726:	e8 fc ff ff ff       	call   10003727 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	10003727: R_386_PC32	strcpy
1000372b:	58                   	pop    eax
1000372c:	5a                   	pop    edx
1000372d:	55                   	push   ebp
1000372e:	57                   	push   edi
1000372f:	e8 fc ff ff ff       	call   10003730 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	10003730: R_386_PC32	strcat
10003734:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000373b:	e8 fc ff ff ff       	call   1000373c <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	1000373c: R_386_PC32	malloc
10003740:	83 c4 0c             	add    esp,0xc
10003743:	89 c5                	mov    ebp,eax
10003745:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003747: R_386_32	kernelProcess
1000374b:	57                   	push   edi
1000374c:	50                   	push   eax
1000374d:	e8 fc ff ff ff       	call   1000374e <NIContext::NIContext(Video*, int, int, int, int)+0x160>	1000374e: R_386_PC32	File::File(char const*, Process*)
10003752:	83 c4 10             	add    esp,0x10
10003755:	85 ed                	test   ebp,ebp
10003757:	0f 84 52 ff ff ff    	je     100036af <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
1000375d:	50                   	push   eax
1000375e:	50                   	push   eax
1000375f:	6a 01                	push   0x1
10003761:	55                   	push   ebp
10003762:	e8 fc ff ff ff       	call   10003763 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	10003763: R_386_PC32	File::open(FileOpenMode)
10003767:	83 c4 10             	add    esp,0x10
1000376a:	85 c0                	test   eax,eax
1000376c:	74 0c                	je     1000377a <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
1000376e:	83 ec 0c             	sub    esp,0xc
10003771:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003774:	55                   	push   ebp
10003775:	e9 b4 00 00 00       	jmp    1000382e <NIContext::NIContext(Video*, int, int, int, int)+0x240>
1000377a:	50                   	push   eax
1000377b:	8d 44 24 17          	lea    eax,[esp+0x17]
1000377f:	50                   	push   eax
10003780:	8d 44 24 20          	lea    eax,[esp+0x20]
10003784:	50                   	push   eax
10003785:	55                   	push   ebp
10003786:	e8 fc ff ff ff       	call   10003787 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	10003787: R_386_PC32	File::stat(unsigned long long*, bool*)
1000378b:	83 c4 10             	add    esp,0x10
1000378e:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003793:	74 0e                	je     100037a3 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003795:	83 ec 0c             	sub    esp,0xc
10003798:	55                   	push   ebp
10003799:	e8 fc ff ff ff       	call   1000379a <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000379a: R_386_PC32	File::close()
1000379e:	e9 85 00 00 00       	jmp    10003828 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
100037a3:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100037a7:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100037ab:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100037af:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100037b3:	83 ec 0c             	sub    esp,0xc
100037b6:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100037ba:	e8 fc ff ff ff       	call   100037bb <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	100037bb: R_386_PC32	malloc
100037bf:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100037c3:	58                   	pop    eax
100037c4:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037c7:	8d 54 24 20          	lea    edx,[esp+0x20]
100037cb:	52                   	push   edx
100037cc:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100037d0:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037d4:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037d8:	55                   	push   ebp
100037d9:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100037dc:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100037e0:	83 c4 1c             	add    esp,0x1c
100037e3:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037e7:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037eb:	68 71 4b 00 10       	push   0x10004b71	100037ec: R_386_32	.text
100037f0:	e8 fc ff ff ff       	call   100037f1 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	100037f1: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f5:	83 c4 10             	add    esp,0x10
100037f8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037fc:	85 c0                	test   eax,eax
100037fe:	75 15                	jne    10003815 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003800:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003804:	89 c1                	mov    ecx,eax
10003806:	c1 f9 1f             	sar    ecx,0x1f
10003809:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
1000380d:	75 06                	jne    10003815 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
1000380f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10003813:	74 24                	je     10003839 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
10003815:	83 ec 0c             	sub    esp,0xc
10003818:	55                   	push   ebp
10003819:	e8 fc ff ff ff       	call   1000381a <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	1000381a: R_386_PC32	File::close()
1000381e:	58                   	pop    eax
1000381f:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10003823:	e8 fc ff ff ff       	call   10003824 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	10003824: R_386_PC32	free
10003828:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000382b:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000382e:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003831:	83 c4 10             	add    esp,0x10
10003834:	e9 76 fe ff ff       	jmp    100036af <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003839:	50                   	push   eax
1000383a:	50                   	push   eax
1000383b:	57                   	push   edi
1000383c:	68 85 4b 00 10       	push   0x10004b85	1000383d: R_386_32	.text
10003841:	e8 fc ff ff ff       	call   10003842 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	10003842: R_386_PC32	Dbg::kprintf(char const*, ...)
10003846:	5a                   	pop    edx
10003847:	59                   	pop    ecx
10003848:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000384c:	68 00 00 00 00       	push   0x0	1000384d: R_386_32	ssfn_ctx
10003851:	e8 fc ff ff ff       	call   10003852 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	10003852: R_386_PC32	ssfn_load
10003856:	5b                   	pop    ebx
10003857:	5f                   	pop    edi
10003858:	50                   	push   eax
10003859:	68 96 4b 00 10       	push   0x10004b96	1000385a: R_386_32	.text
1000385e:	e8 fc ff ff ff       	call   1000385f <NIContext::NIContext(Video*, int, int, int, int)+0x271>	1000385f: R_386_PC32	Dbg::kprintf(char const*, ...)
10003863:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003866:	e8 fc ff ff ff       	call   10003867 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	10003867: R_386_PC32	File::close()
1000386b:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000386e:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003871:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003874:	83 c4 10             	add    esp,0x10
10003877:	83 ec 0c             	sub    esp,0xc
1000387a:	56                   	push   esi
1000387b:	e8 fc ff ff ff       	call   1000387c <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	1000387c: R_386_PC32	Directory::close()
10003880:	8b 06                	mov    eax,DWORD PTR [esi]
10003882:	89 34 24             	mov    DWORD PTR [esp],esi
10003885:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003888:	b8 00 00 00 00       	mov    eax,0x0	10003889: R_386_32	ssfn_ctx
1000388d:	e8 f7 cb ff ff       	call   10000489 <_ssfn_fc.part.1>
10003892:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003894: R_386_32	ssfn_ctx
1000389c:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000389e: R_386_32	ssfn_ctx
100038a6:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	100038a8: R_386_32	ssfn_ctx
100038b0:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	100038b2: R_386_32	ssfn_ctx
100038ba:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	100038bc: R_386_32	ssfn_ctx
100038c4:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	100038c6: R_386_32	ssfn_ctx
100038ce:	81 c4 4c 02 00 00    	add    esp,0x24c
100038d4:	5b                   	pop    ebx
100038d5:	5e                   	pop    esi
100038d6:	5f                   	pop    edi
100038d7:	5d                   	pop    ebp
100038d8:	c3                   	ret    
100038d9:	90                   	nop

100038da <NIDesktop::NIDesktop(NIContext*)>:
100038da:	53                   	push   ebx
100038db:	83 ec 14             	sub    esp,0x14
100038de:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
100038e2:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100038e6:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
100038ed:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100038f0:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038f7:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038fe:	6a 08                	push   0x8
10003900:	e8 fc ff ff ff       	call   10003901 <NIDesktop::NIDesktop(NIContext*)+0x27>	10003901: R_386_PC32	malloc
10003905:	89 03                	mov    DWORD PTR [ebx],eax
10003907:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
1000390e:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003914:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10003916: R_386_32	mouseDesktop
1000391a:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000391c: R_386_32	guiMouseHandler
	10003920: R_386_32	clipdrawHandleMouse(int, int, int, int)
10003924:	83 c4 18             	add    esp,0x18
10003927:	5b                   	pop    ebx
10003928:	c3                   	ret    
10003929:	90                   	nop

1000392a <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
1000392a:	53                   	push   ebx
1000392b:	83 ec 08             	sub    esp,0x8
1000392e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003932:	8b 00                	mov    eax,DWORD PTR [eax]
10003934:	8b 18                	mov    ebx,DWORD PTR [eax]
10003936:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
1000393a:	74 1d                	je     10003959 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
1000393c:	8b 03                	mov    eax,DWORD PTR [ebx]
1000393e:	85 c0                	test   eax,eax
10003940:	74 12                	je     10003954 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003942:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
10003946:	74 0c                	je     10003954 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003948:	83 ec 0c             	sub    esp,0xc
1000394b:	50                   	push   eax
1000394c:	e8 fc ff ff ff       	call   1000394d <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	1000394d: R_386_PC32	NIWindow::invalidate()
10003951:	83 c4 10             	add    esp,0x10
10003954:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003957:	eb dd                	jmp    10003936 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003959:	83 c4 08             	add    esp,0x8
1000395c:	5b                   	pop    ebx
1000395d:	c3                   	ret    

1000395e <NIDesktop::getTopmostWindowAtPixel(int, int)>:
1000395e:	57                   	push   edi
1000395f:	56                   	push   esi
10003960:	53                   	push   ebx
10003961:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003965:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003969:	8b 00                	mov    eax,DWORD PTR [eax]
1000396b:	8b 00                	mov    eax,DWORD PTR [eax]
1000396d:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003970:	85 db                	test   ebx,ebx
10003972:	74 43                	je     100039b7 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
10003974:	8b 00                	mov    eax,DWORD PTR [eax]
10003976:	85 c0                	test   eax,eax
10003978:	74 3f                	je     100039b9 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
1000397a:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
1000397d:	39 ca                	cmp    edx,ecx
1000397f:	7e 04                	jle    10003985 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003981:	89 d8                	mov    eax,ebx
10003983:	eb e8                	jmp    1000396d <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
10003985:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003988:	01 d6                	add    esi,edx
1000398a:	39 ce                	cmp    esi,ecx
1000398c:	7e f3                	jle    10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000398e:	89 ce                	mov    esi,ecx
10003990:	29 d6                	sub    esi,edx
10003992:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10003995:	8d 34 b2             	lea    esi,[edx+esi*4]
10003998:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000399b:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000399e:	01 d7                	add    edi,edx
100039a0:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
100039a4:	7f db                	jg     10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039a6:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
100039a9:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
100039ad:	29 f2                	sub    edx,esi
100039af:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
100039b3:	7e cc                	jle    10003981 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100039b5:	eb 02                	jmp    100039b9 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100039b7:	31 c0                	xor    eax,eax
100039b9:	5b                   	pop    ebx
100039ba:	5e                   	pop    esi
100039bb:	5f                   	pop    edi
100039bc:	c3                   	ret    
100039bd:	90                   	nop

100039be <NIDesktop::renderScanline(int, int, int)>:
100039be:	55                   	push   ebp
100039bf:	57                   	push   edi
100039c0:	56                   	push   esi
100039c1:	53                   	push   ebx
100039c2:	83 ec 2c             	sub    esp,0x2c
100039c5:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100039c9:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
100039cd:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100039d1:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039d5:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100039d9:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100039db: R_386_32	render
100039df:	31 c0                	xor    eax,eax
100039e1:	89 d7                	mov    edi,edx
100039e3:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039e5:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039e9:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100039ed:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100039ef: R_386_32	shadow
100039f3:	b0 80                	mov    al,0x80
100039f5:	89 d7                	mov    edi,edx
100039f7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039f9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039fd:	8b 00                	mov    eax,DWORD PTR [eax]
100039ff:	8b 00                	mov    eax,DWORD PTR [eax]
10003a01:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a05:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003a09:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003a0d:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003a0f: R_386_32	movingWin
10003a13:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003a17:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003a1a:	85 c0                	test   eax,eax
10003a1c:	75 09                	jne    10003a27 <NIDesktop::renderScanline(int, int, int)+0x69>
10003a1e:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003a22:	e9 cf 02 00 00       	jmp    10003cf6 <NIDesktop::renderScanline(int, int, int)+0x338>
10003a27:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10003a2b:	8b 1f                	mov    ebx,DWORD PTR [edi]
10003a2d:	85 db                	test   ebx,ebx
10003a2f:	74 ed                	je     10003a1e <NIDesktop::renderScanline(int, int, int)+0x60>
10003a31:	39 da                	cmp    edx,ebx
10003a33:	75 06                	jne    10003a3b <NIDesktop::renderScanline(int, int, int)+0x7d>
10003a35:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003a39:	eb d8                	jmp    10003a13 <NIDesktop::renderScanline(int, int, int)+0x55>
10003a3b:	83 ec 0c             	sub    esp,0xc
10003a3e:	53                   	push   ebx
10003a3f:	e8 fc ff ff ff       	call   10003a40 <NIDesktop::renderScanline(int, int, int)+0x82>	10003a40: R_386_PC32	NIWindow::request()
10003a44:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003a47:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003a4a:	83 c4 10             	add    esp,0x10
10003a4d:	01 c2                	add    edx,eax
10003a4f:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a53:	0f 8e ad 00 00 00    	jle    10003b06 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a59:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a5d:	0f 85 a3 00 00 00    	jne    10003b06 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a63:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a67:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a6a:	83 c0 06             	add    eax,0x6
10003a6d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a71:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a74:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a77:	01 c8                	add    eax,ecx
10003a79:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003a7d:	39 d0                	cmp    eax,edx
10003a7f:	0f 8e 40 01 00 00    	jle    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a85:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a89:	7c 75                	jl     10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a8b:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a8f:	0f 8f 30 01 00 00    	jg     10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a95:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a98:	89 d5                	mov    ebp,edx
10003a9a:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a9d:	29 cd                	sub    ebp,ecx
10003a9f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003aa3:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003aa7:	39 f0                	cmp    eax,esi
10003aa9:	7c 1d                	jl     10003ac8 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003aab:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003aae:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003ab1:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003ab4:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003ab8:	7f 0e                	jg     10003ac8 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003aba:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003abe:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003ac2:	29 cd                	sub    ebp,ecx
10003ac4:	39 d5                	cmp    ebp,edx
10003ac6:	7d 07                	jge    10003acf <NIDesktop::renderScanline(int, int, int)+0x111>
10003ac8:	40                   	inc    eax
10003ac9:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003acd:	75 d8                	jne    10003aa7 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003acf:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003ad3:	48                   	dec    eax
10003ad4:	83 f8 03             	cmp    eax,0x3
10003ad7:	77 27                	ja     10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003ad9:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003adb: R_386_32	render
10003ae0:	75 1e                	jne    10003b00 <NIDesktop::renderScanline(int, int, int)+0x142>
10003ae2:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003ae9:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003aec: R_386_32	shadow
10003af0:	0f af c1             	imul   eax,ecx
10003af3:	d1 f9                	sar    ecx,1
10003af5:	c1 f8 08             	sar    eax,0x8
10003af8:	01 c1                	add    ecx,eax
10003afa:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003afc: R_386_32	shadow
10003b00:	42                   	inc    edx
10003b01:	e9 6b ff ff ff       	jmp    10003a71 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003b06:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b0a:	0f 8d b5 00 00 00    	jge    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b10:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b14:	0f 85 ab 00 00 00    	jne    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b1a:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003b1e:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003b21:	8d 77 fa             	lea    esi,[edi-0x6]
10003b24:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003b28:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003b2b:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003b2e:	01 ce                	add    esi,ecx
10003b30:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003b34:	39 c6                	cmp    esi,eax
10003b36:	0f 8e 89 00 00 00    	jle    10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b3c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003b40:	7c 7d                	jl     10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003b42:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003b46:	7f 7d                	jg     10003bc5 <NIDesktop::renderScanline(int, int, int)+0x207>
10003b48:	89 c7                	mov    edi,eax
10003b4a:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b4e:	29 cf                	sub    edi,ecx
10003b50:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b54:	4a                   	dec    edx
10003b55:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b59:	29 d1                	sub    ecx,edx
10003b5b:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b5f:	74 32                	je     10003b93 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b61:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b64:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b67:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b6a:	39 d5                	cmp    ebp,edx
10003b6c:	7e e6                	jle    10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b6e:	89 d5                	mov    ebp,edx
10003b70:	29 fd                	sub    ebp,edi
10003b72:	39 ee                	cmp    esi,ebp
10003b74:	7e 1d                	jle    10003b93 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b76:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b79:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b7c:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b7f:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b83:	7f cf                	jg     10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b85:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b89:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003b8d:	29 f7                	sub    edi,esi
10003b8f:	39 c7                	cmp    edi,eax
10003b91:	7c c1                	jl     10003b54 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b93:	83 f9 04             	cmp    ecx,0x4
10003b96:	77 27                	ja     10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003b98:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b9a: R_386_32	render
10003b9f:	75 1e                	jne    10003bbf <NIDesktop::renderScanline(int, int, int)+0x201>
10003ba1:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003ba8:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003bab: R_386_32	shadow
10003baf:	0f af d1             	imul   edx,ecx
10003bb2:	d1 f9                	sar    ecx,1
10003bb4:	c1 fa 08             	sar    edx,0x8
10003bb7:	01 d1                	add    ecx,edx
10003bb9:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003bbb: R_386_32	shadow
10003bbf:	40                   	inc    eax
10003bc0:	e9 63 ff ff ff       	jmp    10003b28 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003bc5:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003bc8:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003bcc:	0f 8f 00 01 00 00    	jg     10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003bd2:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003bd5:	01 c2                	add    edx,eax
10003bd7:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003bdb:	0f 8e f1 00 00 00    	jle    10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003be1:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003be5:	29 c2                	sub    edx,eax
10003be7:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003bea:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003bee:	8d 14 90             	lea    edx,[eax+edx*4]
10003bf1:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003bf4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003bf8:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003bfc:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003c00:	74 09                	je     10003c0b <NIDesktop::renderScanline(int, int, int)+0x24d>
10003c02:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c06:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003c09:	eb 78                	jmp    10003c83 <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003c0b:	31 c9                	xor    ecx,ecx
10003c0d:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003c10:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003c14:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003c18:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003c1b:	01 cd                	add    ebp,ecx
10003c1d:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c21:	01 ca                	add    edx,ecx
10003c23:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003c25: R_386_32	render
10003c2a:	75 1f                	jne    10003c4b <NIDesktop::renderScanline(int, int, int)+0x28d>
10003c2c:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003c2f: R_386_32	shadow
10003c33:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003c36:	83 c7 7d             	add    edi,0x7d
10003c39:	0f af f7             	imul   esi,edi
10003c3c:	d1 ff                	sar    edi,1
10003c3e:	c1 fe 08             	sar    esi,0x8
10003c41:	01 f7                	add    edi,esi
10003c43:	89 f8                	mov    eax,edi
10003c45:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003c47: R_386_32	shadow
10003c4b:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003c4d: R_386_32	render
10003c52:	75 20                	jne    10003c74 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c54:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c5b:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c5e: R_386_32	shadow
10003c62:	0f af f7             	imul   esi,edi
10003c65:	d1 ff                	sar    edi,1
10003c67:	c1 fe 08             	sar    esi,0x8
10003c6a:	01 f7                	add    edi,esi
10003c6c:	89 f8                	mov    eax,edi
10003c6e:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c70: R_386_32	shadow
10003c74:	41                   	inc    ecx
10003c75:	83 f9 04             	cmp    ecx,0x4
10003c78:	75 93                	jne    10003c0d <NIDesktop::renderScanline(int, int, int)+0x24f>
10003c7a:	eb 86                	jmp    10003c02 <NIDesktop::renderScanline(int, int, int)+0x244>
10003c7c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c80:	7d 11                	jge    10003c93 <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003c82:	40                   	inc    eax
10003c83:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c86:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c89:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c8d:	39 c2                	cmp    edx,eax
10003c8f:	7f eb                	jg     10003c7c <NIDesktop::renderScanline(int, int, int)+0x2be>
10003c91:	eb 3f                	jmp    10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c93:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c97:	7f 39                	jg     10003cd2 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c99:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9b: R_386_32	render
10003ca0:	75 e0                	jne    10003c82 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003ca2:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003ca4: R_386_32	render
10003ca9:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003cad:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003cb0:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003cb3:	0f af ca             	imul   ecx,edx
10003cb6:	89 c2                	mov    edx,eax
10003cb8:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003cbb:	01 ca                	add    edx,ecx
10003cbd:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003cc0:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003cc4:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003cc7:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003cca: R_386_32	renderData
10003cce:	75 b2                	jne    10003c82 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003cd0:	eb 44                	jmp    10003d16 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cd2:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003cd6:	0f 85 42 fd ff ff    	jne    10003a1e <NIDesktop::renderScanline(int, int, int)+0x60>
10003cdc:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003ce0:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003ce3:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003ce7:	e9 21 fd ff ff       	jmp    10003a0d <NIDesktop::renderScanline(int, int, int)+0x4f>
10003cec:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003cee: R_386_32	render
10003cf3:	74 09                	je     10003cfe <NIDesktop::renderScanline(int, int, int)+0x340>
10003cf5:	40                   	inc    eax
10003cf6:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003cfa:	7c f0                	jl     10003cec <NIDesktop::renderScanline(int, int, int)+0x32e>
10003cfc:	eb 18                	jmp    10003d16 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cfe:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003d00: R_386_32	render
10003d05:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003d08: R_386_32	renderData
10003d10:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003d14:	75 df                	jne    10003cf5 <NIDesktop::renderScanline(int, int, int)+0x337>
10003d16:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d1a:	8b 00                	mov    eax,DWORD PTR [eax]
10003d1c:	8b 00                	mov    eax,DWORD PTR [eax]
10003d1e:	85 c0                	test   eax,eax
10003d20:	74 5e                	je     10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d22:	8b 00                	mov    eax,DWORD PTR [eax]
10003d24:	85 c0                	test   eax,eax
10003d26:	74 58                	je     10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d28:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003d2c:	75 52                	jne    10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d2e:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003d32:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003d36:	7d 48                	jge    10003d80 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003d38:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003d3a: R_386_32	shadow
10003d3e:	3c 80                	cmp    al,0x80
10003d40:	74 3b                	je     10003d7d <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003d42:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003d45: R_386_32	renderData
10003d49:	0f b6 f0             	movzx  esi,al
10003d4c:	89 d1                	mov    ecx,edx
10003d4e:	0f b6 c6             	movzx  eax,dh
10003d51:	c1 e9 10             	shr    ecx,0x10
10003d54:	0f af c6             	imul   eax,esi
10003d57:	0f b6 c9             	movzx  ecx,cl
10003d5a:	0f b6 d2             	movzx  edx,dl
10003d5d:	0f af ce             	imul   ecx,esi
10003d60:	0f af d6             	imul   edx,esi
10003d63:	c1 e9 07             	shr    ecx,0x7
10003d66:	c1 e8 07             	shr    eax,0x7
10003d69:	c1 e1 10             	shl    ecx,0x10
10003d6c:	c1 e0 08             	shl    eax,0x8
10003d6f:	c1 ea 07             	shr    edx,0x7
10003d72:	09 c1                	or     ecx,eax
10003d74:	09 ca                	or     edx,ecx
10003d76:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d79: R_386_32	renderData
10003d7d:	43                   	inc    ebx
10003d7e:	eb b2                	jmp    10003d32 <NIDesktop::renderScanline(int, int, int)+0x374>
10003d80:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d84:	83 ec 0c             	sub    esp,0xc
10003d87:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d8a:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d90:	8b 10                	mov    edx,DWORD PTR [eax]
10003d92:	68 00 00 00 00       	push   0x0	10003d93: R_386_32	renderData
10003d97:	6a 00                	push   0x0
10003d99:	6a 01                	push   0x1
10003d9b:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003d9f:	6a 00                	push   0x0
10003da1:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003da5:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003da9:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003dad:	50                   	push   eax
10003dae:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003db1:	83 c4 5c             	add    esp,0x5c
10003db4:	5b                   	pop    ebx
10003db5:	5e                   	pop    esi
10003db6:	5f                   	pop    edi
10003db7:	5d                   	pop    ebp
10003db8:	c3                   	ret    
10003db9:	90                   	nop

10003dba <NIDesktop::rangeRefresh(int, int, int, int)>:
10003dba:	53                   	push   ebx
10003dbb:	83 ec 08             	sub    esp,0x8
10003dbe:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003dc2:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003dc6:	7d 18                	jge    10003de0 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003dc8:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003dcc:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003dd0:	53                   	push   ebx
10003dd1:	43                   	inc    ebx
10003dd2:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003dd6:	e8 fc ff ff ff       	call   10003dd7 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003dd7: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003ddb:	83 c4 10             	add    esp,0x10
10003dde:	eb e2                	jmp    10003dc2 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003de0:	83 c4 08             	add    esp,0x8
10003de3:	5b                   	pop    ebx
10003de4:	c3                   	ret    
10003de5:	90                   	nop

10003de6 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003de6:	55                   	push   ebp
10003de7:	ba 05 00 00 00       	mov    edx,0x5
10003dec:	57                   	push   edi
10003ded:	56                   	push   esi
10003dee:	53                   	push   ebx
10003def:	83 ec 0c             	sub    esp,0xc
10003df2:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003df6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003df9:	83 f8 05             	cmp    eax,0x5
10003dfc:	7c 02                	jl     10003e00 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003dfe:	89 c2                	mov    edx,eax
10003e00:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003e04:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003e07:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003e0a:	83 ea 05             	sub    edx,0x5
10003e0d:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003e13:	8d 70 05             	lea    esi,[eax+0x5]
10003e16:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003e19:	39 c5                	cmp    ebp,eax
10003e1b:	7f 03                	jg     10003e20 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003e1d:	8d 71 ff             	lea    esi,[ecx-0x1]
10003e20:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003e23:	89 c1                	mov    ecx,eax
10003e25:	83 f8 05             	cmp    eax,0x5
10003e28:	7d 05                	jge    10003e2f <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003e2a:	b9 05 00 00 00       	mov    ecx,0x5
10003e2f:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003e32:	83 e9 05             	sub    ecx,0x5
10003e35:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003e3b:	8d 58 05             	lea    ebx,[eax+0x5]
10003e3e:	8d 6f fb             	lea    ebp,[edi-0x5]
10003e41:	39 c5                	cmp    ebp,eax
10003e43:	7f 03                	jg     10003e48 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003e45:	8d 5f ff             	lea    ebx,[edi-0x1]
10003e48:	83 ec 0c             	sub    esp,0xc
10003e4b:	53                   	push   ebx
10003e4c:	51                   	push   ecx
10003e4d:	56                   	push   esi
10003e4e:	52                   	push   edx
10003e4f:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e53:	e8 fc ff ff ff       	call   10003e54 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e54: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e58:	83 c4 2c             	add    esp,0x2c
10003e5b:	5b                   	pop    ebx
10003e5c:	5e                   	pop    esi
10003e5d:	5f                   	pop    edi
10003e5e:	5d                   	pop    ebp
10003e5f:	c3                   	ret    

10003e60 <NIDesktop::completeRefresh()>:
10003e60:	56                   	push   esi
10003e61:	53                   	push   ebx
10003e62:	31 f6                	xor    esi,esi
10003e64:	50                   	push   eax
10003e65:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e69:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e6c:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e72:	7e 15                	jle    10003e89 <NIDesktop::completeRefresh()+0x29>
10003e74:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e7a:	6a 00                	push   0x0
10003e7c:	56                   	push   esi
10003e7d:	46                   	inc    esi
10003e7e:	53                   	push   ebx
10003e7f:	e8 fc ff ff ff       	call   10003e80 <NIDesktop::completeRefresh()+0x20>	10003e80: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e84:	83 c4 10             	add    esp,0x10
10003e87:	eb e0                	jmp    10003e69 <NIDesktop::completeRefresh()+0x9>
10003e89:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e8f:	83 ec 0c             	sub    esp,0xc
10003e92:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e94:	6a 00                	push   0x0
10003e96:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e99:	05 00 00 00 00       	add    eax,0x0	10003e9a: R_386_32	___mouse_data
10003e9e:	50                   	push   eax
10003e9f:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003ea2:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003ea5:	52                   	push   edx
10003ea6:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003ea9:	83 c4 24             	add    esp,0x24
10003eac:	5b                   	pop    ebx
10003ead:	5e                   	pop    esi
10003eae:	c3                   	ret    
10003eaf:	90                   	nop

10003eb0 <NIDesktop::addWindow(NIWindow*)>:
10003eb0:	56                   	push   esi
10003eb1:	53                   	push   ebx
10003eb2:	83 ec 0c             	sub    esp,0xc
10003eb5:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003eb9:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003ebd:	56                   	push   esi
10003ebe:	ff 33                	push   DWORD PTR [ebx]
10003ec0:	e8 fc ff ff ff       	call   10003ec1 <NIDesktop::addWindow(NIWindow*)+0x11>	10003ec1: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ec5:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003ec9:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003ecd:	83 c4 14             	add    esp,0x14
10003ed0:	5b                   	pop    ebx
10003ed1:	5e                   	pop    esi
10003ed2:	e9 0f ff ff ff       	jmp    10003de6 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003ed7:	90                   	nop

10003ed8 <NIDesktop::raiseWindow(NIWindow*)>:
10003ed8:	53                   	push   ebx
10003ed9:	83 ec 10             	sub    esp,0x10
10003edc:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ee0:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003ee4:	50                   	push   eax
10003ee5:	ff 33                	push   DWORD PTR [ebx]
10003ee7:	e8 fc ff ff ff       	call   10003ee8 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003ee8: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003eec:	58                   	pop    eax
10003eed:	5a                   	pop    edx
10003eee:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ef2:	ff 33                	push   DWORD PTR [ebx]
10003ef4:	e8 fc ff ff ff       	call   10003ef5 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ef5: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ef9:	59                   	pop    ecx
10003efa:	58                   	pop    eax
10003efb:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eff:	53                   	push   ebx
10003f00:	e8 fc ff ff ff       	call   10003f01 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003f01: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f05:	83 c4 18             	add    esp,0x18
10003f08:	5b                   	pop    ebx
10003f09:	c3                   	ret    

10003f0a <NIDesktop::deleteWindow(NIWindow*)>:
10003f0a:	53                   	push   ebx
10003f0b:	83 ec 10             	sub    esp,0x10
10003f0e:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003f12:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003f16:	50                   	push   eax
10003f17:	ff 33                	push   DWORD PTR [ebx]
10003f19:	e8 fc ff ff ff       	call   10003f1a <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003f1a: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003f1e:	58                   	pop    eax
10003f1f:	5a                   	pop    edx
10003f20:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003f24:	53                   	push   ebx
10003f25:	e8 fc ff ff ff       	call   10003f26 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003f26: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003f2a:	83 c4 18             	add    esp,0x18
10003f2d:	5b                   	pop    ebx
10003f2e:	c3                   	ret    
10003f2f:	90                   	nop

10003f30 <NIDesktop::handleMouse(int, int, int, int)>:
10003f30:	55                   	push   ebp
10003f31:	57                   	push   edi
10003f32:	56                   	push   esi
10003f33:	53                   	push   ebx
10003f34:	83 ec 28             	sub    esp,0x28
10003f37:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003f3b:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003f3e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f41:	8d 4a 20             	lea    ecx,[edx+0x20]
10003f44:	51                   	push   ecx
10003f45:	52                   	push   edx
10003f46:	8d 50 20             	lea    edx,[eax+0x20]
10003f49:	52                   	push   edx
10003f4a:	50                   	push   eax
10003f4b:	53                   	push   ebx
10003f4c:	e8 fc ff ff ff       	call   10003f4d <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003f4d: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f51:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f54:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f58:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f5b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10003f5f:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f63:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003f67:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f6b:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f6e:	83 c4 20             	add    esp,0x20
10003f71:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f74:	85 d2                	test   edx,edx
10003f76:	79 07                	jns    10003f7f <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003f78:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f7f:	85 c0                	test   eax,eax
10003f81:	79 07                	jns    10003f8a <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003f83:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f8a:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f8d:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f93:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f96:	7f 04                	jg     10003f9c <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f98:	48                   	dec    eax
10003f99:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f9c:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003fa2:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003fa5:	7f 04                	jg     10003fab <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003fa7:	48                   	dec    eax
10003fa8:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003fab:	55                   	push   ebp
10003fac:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003faf:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003fb2:	53                   	push   ebx
10003fb3:	e8 fc ff ff ff       	call   10003fb4 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003fb4: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003fb8:	83 c4 10             	add    esp,0x10
10003fbb:	89 c6                	mov    esi,eax
10003fbd:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003fc1:	83 e0 01             	and    eax,0x1
10003fc4:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003fc6: R_386_32	movingWin
10003fcb:	0f 84 e1 01 00 00    	je     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
10003fd1:	c6 04 24 00          	mov    BYTE PTR [esp],0x0
10003fd5:	85 c0                	test   eax,eax
10003fd7:	75 0b                	jne    10003fe4 <NIDesktop::handleMouse(int, int, int, int)+0xb4>
10003fd9:	a0 18 81 03 10       	mov    al,ds:0x10038118	10003fda: R_386_32	.bss
10003fde:	83 e0 01             	and    eax,0x1
10003fe1:	88 04 24             	mov    BYTE PTR [esp],al
10003fe4:	bf 01 00 00 00       	mov    edi,0x1
10003fe9:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003feb: R_386_32	movingWin
10003fef:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003ff2:	48                   	dec    eax
10003ff3:	39 f8                	cmp    eax,edi
10003ff5:	0f 8e b0 00 00 00    	jle    100040ab <NIDesktop::handleMouse(int, int, int, int)+0x17b>
10003ffb:	bd 01 00 00 00       	mov    ebp,0x1
10004000:	a1 00 00 00 00       	mov    eax,ds:0x0	10004001: R_386_32	movingWin
10004005:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10004008:	48                   	dec    eax
10004009:	39 e8                	cmp    eax,ebp
1000400b:	0f 8e 94 00 00 00    	jle    100040a5 <NIDesktop::handleMouse(int, int, int, int)+0x175>
10004011:	8d 04 2f             	lea    eax,[edi+ebp*1]
10004014:	89 fa                	mov    edx,edi
10004016:	83 e0 1f             	and    eax,0x1f
10004019:	83 e2 03             	and    edx,0x3
1000401c:	09 d0                	or     eax,edx
1000401e:	75 7f                	jne    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004020:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004024:	2b 05 14 81 03 10    	sub    eax,DWORD PTR ds:0x10038114	10004026: R_386_32	.bss
1000402a:	01 e8                	add    eax,ebp
1000402c:	78 2d                	js     1000405b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
1000402e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004031:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004037:	7d 22                	jge    1000405b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10004039:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
1000403d:	8d 48 01             	lea    ecx,[eax+0x1]
10004040:	83 ec 0c             	sub    esp,0xc
10004043:	2b 15 10 81 03 10    	sub    edx,DWORD PTR ds:0x10038110	10004045: R_386_32	.bss
10004049:	51                   	push   ecx
1000404a:	01 fa                	add    edx,edi
1000404c:	50                   	push   eax
1000404d:	8d 42 01             	lea    eax,[edx+0x1]
10004050:	50                   	push   eax
10004051:	52                   	push   edx
10004052:	53                   	push   ebx
10004053:	e8 fc ff ff ff       	call   10004054 <NIDesktop::handleMouse(int, int, int, int)+0x124>	10004054: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004058:	83 c4 20             	add    esp,0x20
1000405b:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
1000405f:	75 3e                	jne    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004061:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004064:	01 e8                	add    eax,ebp
10004066:	2b 05 14 81 03 10    	sub    eax,DWORD PTR ds:0x10038114	10004068: R_386_32	.bss
1000406c:	78 31                	js     1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
1000406e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004071:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004077:	7d 26                	jge    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004079:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
1000407f:	8b 11                	mov    edx,DWORD PTR [ecx]
10004081:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10004085:	6a 00                	push   0x0
10004087:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000408a:	01 fa                	add    edx,edi
1000408c:	2b 15 10 81 03 10    	sub    edx,DWORD PTR ds:0x10038110	1000408e: R_386_32	.bss
10004092:	52                   	push   edx
10004093:	50                   	push   eax
10004094:	51                   	push   ecx
10004095:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10004099:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000409c:	83 c4 10             	add    esp,0x10
1000409f:	45                   	inc    ebp
100040a0:	e9 5b ff ff ff       	jmp    10004000 <NIDesktop::handleMouse(int, int, int, int)+0xd0>
100040a5:	47                   	inc    edi
100040a6:	e9 3e ff ff ff       	jmp    10003fe9 <NIDesktop::handleMouse(int, int, int, int)+0xb9>
100040ab:	a1 14 81 03 10       	mov    eax,ds:0x10038114	100040ac: R_386_32	.bss
100040b0:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
100040b3:	29 c7                	sub    edi,eax
100040b5:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
100040b9:	0f 85 6d 02 00 00    	jne    1000432c <NIDesktop::handleMouse(int, int, int, int)+0x3fc>
100040bf:	89 3c 24             	mov    DWORD PTR [esp],edi
100040c2:	85 ff                	test   edi,edi
100040c4:	79 07                	jns    100040cd <NIDesktop::handleMouse(int, int, int, int)+0x19d>
100040c6:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
100040cd:	8b 4a 20             	mov    ecx,DWORD PTR [edx+0x20]
100040d0:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
100040d3:	01 cf                	add    edi,ecx
100040d5:	8b aa 0c 04 00 00    	mov    ebp,DWORD PTR [edx+0x40c]
100040db:	39 ef                	cmp    edi,ebp
100040dd:	7d 05                	jge    100040e4 <NIDesktop::handleMouse(int, int, int, int)+0x1b4>
100040df:	2b 3c 24             	sub    edi,DWORD PTR [esp]
100040e2:	eb 0b                	jmp    100040ef <NIDesktop::handleMouse(int, int, int, int)+0x1bf>
100040e4:	89 ef                	mov    edi,ebp
100040e6:	2b 3c 24             	sub    edi,DWORD PTR [esp]
100040e9:	0f 88 c3 00 00 00    	js     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040ef:	85 ff                	test   edi,edi
100040f1:	0f 84 bb 00 00 00    	je     100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040f7:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100040fb:	29 c2                	sub    edx,eax
100040fd:	89 d0                	mov    eax,edx
100040ff:	79 02                	jns    10004103 <NIDesktop::handleMouse(int, int, int, int)+0x1d3>
10004101:	31 d2                	xor    edx,edx
10004103:	01 c8                	add    eax,ecx
10004105:	39 c5                	cmp    ebp,eax
10004107:	7e 04                	jle    1000410d <NIDesktop::handleMouse(int, int, int, int)+0x1dd>
10004109:	29 d0                	sub    eax,edx
1000410b:	eb 08                	jmp    10004115 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
1000410d:	89 e8                	mov    eax,ebp
1000410f:	29 d0                	sub    eax,edx
10004111:	79 02                	jns    10004115 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
10004113:	31 c0                	xor    eax,eax
10004115:	83 ec 0c             	sub    esp,0xc
10004118:	8d 2c 10             	lea    ebp,[eax+edx*1]
1000411b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000411f:	55                   	push   ebp
10004120:	2b 05 10 81 03 10    	sub    eax,DWORD PTR ds:0x10038110	10004122: R_386_32	.bss
10004126:	52                   	push   edx
10004127:	8d 48 01             	lea    ecx,[eax+0x1]
1000412a:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
1000412e:	51                   	push   ecx
1000412f:	50                   	push   eax
10004130:	53                   	push   ebx
10004131:	e8 fc ff ff ff       	call   10004132 <NIDesktop::handleMouse(int, int, int, int)+0x202>	10004132: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004136:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000413a:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	1000413c: R_386_32	movingWin
10004140:	83 c4 14             	add    esp,0x14
10004143:	2b 05 10 81 03 10    	sub    eax,DWORD PTR ds:0x10038110	10004145: R_386_32	.bss
10004149:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
1000414c:	55                   	push   ebp
1000414d:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004151:	52                   	push   edx
10004152:	50                   	push   eax
10004153:	48                   	dec    eax
10004154:	50                   	push   eax
10004155:	53                   	push   ebx
10004156:	e8 fc ff ff ff       	call   10004157 <NIDesktop::handleMouse(int, int, int, int)+0x227>	10004157: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000415b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000415e:	83 c4 18             	add    esp,0x18
10004161:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004167:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004169:	6a 00                	push   0x0
1000416b:	6a 01                	push   0x1
1000416d:	57                   	push   edi
1000416e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004171:	2b 05 10 81 03 10    	sub    eax,DWORD PTR ds:0x10038110	10004173: R_386_32	.bss
10004177:	50                   	push   eax
10004178:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000417c:	52                   	push   edx
1000417d:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004180:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004183:	83 c4 18             	add    esp,0x18
10004186:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000418c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000418e:	6a 00                	push   0x0
10004190:	6a 01                	push   0x1
10004192:	57                   	push   edi
10004193:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004195: R_386_32	movingWin
10004199:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000419c:	2b 05 10 81 03 10    	sub    eax,DWORD PTR ds:0x10038110	1000419e: R_386_32	.bss
100041a2:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
100041a5:	48                   	dec    eax
100041a6:	50                   	push   eax
100041a7:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100041ab:	52                   	push   edx
100041ac:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100041af:	83 c4 20             	add    esp,0x20
100041b2:	85 f6                	test   esi,esi
100041b4:	0f 84 3e 01 00 00    	je     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100041ba:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
100041bf:	0f 84 33 01 00 00    	je     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100041c5:	8b 0d 18 81 03 10    	mov    ecx,DWORD PTR ds:0x10038118	100041c7: R_386_32	.bss
100041cb:	83 e1 01             	and    ecx,0x1
100041ce:	0f 85 e7 00 00 00    	jne    100042bb <NIDesktop::handleMouse(int, int, int, int)+0x38b>
100041d4:	a1 00 00 00 00       	mov    eax,ds:0x0	100041d5: R_386_32	milliTenthsSinceBoot
100041d9:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100041db: R_386_32	milliTenthsSinceBoot
100041df:	2b 05 08 81 03 10    	sub    eax,DWORD PTR ds:0x10038108	100041e1: R_386_32	.bss
100041e5:	bf b7 0b 00 00       	mov    edi,0xbb7
100041ea:	1b 15 0c 81 03 10    	sbb    edx,DWORD PTR ds:0x1003810c	100041ec: R_386_32	.bss
100041f0:	39 c7                	cmp    edi,eax
100041f2:	19 d1                	sbb    ecx,edx
100041f4:	0f 82 95 00 00 00    	jb     1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041fa:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100041fd:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004200:	29 d0                	sub    eax,edx
10004202:	83 f8 18             	cmp    eax,0x18
10004205:	0f 8f 84 00 00 00    	jg     1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
1000420b:	f6 46 3c 01          	test   BYTE PTR [esi+0x3c],0x1
1000420f:	75 7e                	jne    1000428f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
10004211:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004215:	74 26                	je     1000423d <NIDesktop::handleMouse(int, int, int, int)+0x30d>
10004217:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
1000421a:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
1000421d:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004220:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
10004223:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
10004226:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
10004229:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
1000422c:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
1000422f:	57                   	push   edi
10004230:	57                   	push   edi
10004231:	56                   	push   esi
10004232:	53                   	push   ebx
10004233:	e8 fc ff ff ff       	call   10004234 <NIDesktop::handleMouse(int, int, int, int)+0x304>	10004234: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
10004238:	83 c4 10             	add    esp,0x10
1000423b:	eb 3b                	jmp    10004278 <NIDesktop::handleMouse(int, int, int, int)+0x348>
1000423d:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004240:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
10004247:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
1000424a:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004251:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004254:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004257:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000425a:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
1000425d:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004260:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004263:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
10004269:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000426c:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000426f:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
10004275:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004278:	83 ec 0c             	sub    esp,0xc
1000427b:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
1000427f:	56                   	push   esi
10004280:	e8 fc ff ff ff       	call   10004281 <NIDesktop::handleMouse(int, int, int, int)+0x351>	10004281: R_386_PC32	NIWindow::rerender()
10004285:	89 1c 24             	mov    DWORD PTR [esp],ebx
10004288:	e8 fc ff ff ff       	call   10004289 <NIDesktop::handleMouse(int, int, int, int)+0x359>	10004289: R_386_PC32	NIDesktop::completeRefresh()
1000428d:	eb 11                	jmp    100042a0 <NIDesktop::handleMouse(int, int, int, int)+0x370>
1000428f:	8b 03                	mov    eax,DWORD PTR [ebx]
10004291:	8b 00                	mov    eax,DWORD PTR [eax]
10004293:	39 30                	cmp    DWORD PTR [eax],esi
10004295:	74 0c                	je     100042a3 <NIDesktop::handleMouse(int, int, int, int)+0x373>
10004297:	51                   	push   ecx
10004298:	51                   	push   ecx
10004299:	56                   	push   esi
1000429a:	53                   	push   ebx
1000429b:	e8 fc ff ff ff       	call   1000429c <NIDesktop::handleMouse(int, int, int, int)+0x36c>	1000429c: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
100042a0:	83 c4 10             	add    esp,0x10
100042a3:	a1 00 00 00 00       	mov    eax,ds:0x0	100042a4: R_386_32	milliTenthsSinceBoot
100042a8:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100042aa: R_386_32	milliTenthsSinceBoot
100042ae:	a3 08 81 03 10       	mov    ds:0x10038108,eax	100042af: R_386_32	.bss
100042b3:	89 15 0c 81 03 10    	mov    DWORD PTR ds:0x1003810c,edx	100042b5: R_386_32	.bss
100042b9:	eb 3d                	jmp    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042bb:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100042bd: R_386_32	movingWin
100042c2:	75 34                	jne    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042c4:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100042c7:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
100042ca:	83 f8 18             	cmp    eax,0x18
100042cd:	7f 29                	jg     100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042cf:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100042d3:	75 23                	jne    100042f8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
100042d5:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100042d8:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100042da: R_386_32	movingWin
100042de:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
100042e1:	a3 10 81 03 10       	mov    ds:0x10038110,eax	100042e2: R_386_32	.bss
100042e6:	89 15 14 81 03 10    	mov    DWORD PTR ds:0x10038114,edx	100042e8: R_386_32	.bss
100042ec:	52                   	push   edx
100042ed:	52                   	push   edx
100042ee:	56                   	push   esi
100042ef:	53                   	push   ebx
100042f0:	e8 fc ff ff ff       	call   100042f1 <NIDesktop::handleMouse(int, int, int, int)+0x3c1>	100042f1: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100042f5:	83 c4 10             	add    esp,0x10
100042f8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100042fb:	83 ec 0c             	sub    esp,0xc
100042fe:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004304:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004306:	6a 00                	push   0x0
10004308:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000430b:	05 00 00 00 00       	add    eax,0x0	1000430c: R_386_32	___mouse_data
10004310:	50                   	push   eax
10004311:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10004314:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004317:	52                   	push   edx
10004318:	ff 51 30             	call   DWORD PTR [ecx+0x30]
1000431b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000431f:	a3 18 81 03 10       	mov    ds:0x10038118,eax	10004320: R_386_32	.bss
10004324:	83 c4 3c             	add    esp,0x3c
10004327:	5b                   	pop    ebx
10004328:	5e                   	pop    esi
10004329:	5f                   	pop    edi
1000432a:	5d                   	pop    ebp
1000432b:	c3                   	ret    
1000432c:	89 7a 18             	mov    DWORD PTR [edx+0x18],edi
1000432f:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004331: R_386_32	movingWin
10004339:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000433c:	2b 05 10 81 03 10    	sub    eax,DWORD PTR ds:0x10038110	1000433e: R_386_32	.bss
10004342:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
10004345:	50                   	push   eax
10004346:	50                   	push   eax
10004347:	52                   	push   edx
10004348:	53                   	push   ebx
10004349:	e8 fc ff ff ff       	call   1000434a <NIDesktop::handleMouse(int, int, int, int)+0x41a>	1000434a: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000434e:	83 c4 10             	add    esp,0x10
10004351:	e9 5c fe ff ff       	jmp    100041b2 <NIDesktop::handleMouse(int, int, int, int)+0x282>

10004356 <clipdrawHandleMouse(int, int, int, int)>:
10004356:	83 ec 18             	sub    esp,0x18
10004359:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000435d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004361:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004365:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004369:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000436b: R_386_32	mouseDesktop
1000436f:	e8 fc ff ff ff       	call   10004370 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004370: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004374:	83 c4 2c             	add    esp,0x2c
10004377:	c3                   	ret    

10004378 <drawVGAChar(int, int, int)>:
10004378:	55                   	push   ebp
10004379:	57                   	push   edi
1000437a:	56                   	push   esi
1000437b:	53                   	push   ebx
1000437c:	31 db                	xor    ebx,ebx
1000437e:	83 ec 1c             	sub    esp,0x1c
10004381:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10004385:	c1 e0 04             	shl    eax,0x4
10004388:	89 04 24             	mov    DWORD PTR [esp],eax
1000438b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000438f:	c1 e0 04             	shl    eax,0x4
10004392:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004396:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000439a:	c1 e0 03             	shl    eax,0x3
1000439d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100043a1:	8b 04 24             	mov    eax,DWORD PTR [esp]
100043a4:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
100043a8:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	100043ab: R_386_32	cp
100043af:	8d 3c 19             	lea    edi,[ecx+ebx*1]
100043b2:	31 f6                	xor    esi,esi
100043b4:	84 c0                	test   al,al
100043b6:	79 22                	jns    100043da <drawVGAChar(int, int, int)+0x62>
100043b8:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
100043bc:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043be: R_386_32	screen
100043c2:	8b 0a                	mov    ecx,DWORD PTR [edx]
100043c4:	6a 00                	push   0x0
100043c6:	57                   	push   edi
100043c7:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100043cb:	8d 2c 06             	lea    ebp,[esi+eax*1]
100043ce:	55                   	push   ebp
100043cf:	52                   	push   edx
100043d0:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100043d3:	83 c4 10             	add    esp,0x10
100043d6:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100043da:	d1 e0                	shl    eax,1
100043dc:	46                   	inc    esi
100043dd:	83 fe 08             	cmp    esi,0x8
100043e0:	75 d2                	jne    100043b4 <drawVGAChar(int, int, int)+0x3c>
100043e2:	43                   	inc    ebx
100043e3:	83 fb 10             	cmp    ebx,0x10
100043e6:	75 b9                	jne    100043a1 <drawVGAChar(int, int, int)+0x29>
100043e8:	83 c4 1c             	add    esp,0x1c
100043eb:	5b                   	pop    ebx
100043ec:	5e                   	pop    esi
100043ed:	5f                   	pop    edi
100043ee:	5d                   	pop    ebp
100043ef:	c3                   	ret    

100043f0 <monikaBsod(char*)>:
100043f0:	55                   	push   ebp
100043f1:	57                   	push   edi
100043f2:	31 ff                	xor    edi,edi
100043f4:	56                   	push   esi
100043f5:	53                   	push   ebx
100043f6:	31 db                	xor    ebx,ebx
100043f8:	83 ec 24             	sub    esp,0x24
100043fb:	a1 00 00 00 00       	mov    eax,ds:0x0	100043fc: R_386_32	screen
10004400:	8b 10                	mov    edx,DWORD PTR [eax]
10004402:	68 ff ff ff 00       	push   0xffffff
10004407:	50                   	push   eax
10004408:	ff 52 40             	call   DWORD PTR [edx+0x40]
1000440b:	83 c4 10             	add    esp,0x10
1000440e:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	10004410: R_386_32	justMonika
10004414:	8d 43 01             	lea    eax,[ebx+0x1]
10004417:	84 c9                	test   cl,cl
10004419:	79 0e                	jns    10004429 <monikaBsod(char*)+0x39>
1000441b:	8d 51 80             	lea    edx,[ecx-0x80]
1000441e:	83 c3 02             	add    ebx,0x2
10004421:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	10004423: R_386_32	justMonika
10004427:	eb 04                	jmp    1000442d <monikaBsod(char*)+0x3d>
10004429:	89 c3                	mov    ebx,eax
1000442b:	b2 01                	mov    dl,0x1
1000442d:	0f b6 c1             	movzx  eax,cl
10004430:	83 e1 03             	and    ecx,0x3
10004433:	89 c6                	mov    esi,eax
10004435:	6b c9 55             	imul   ecx,ecx,0x55
10004438:	c1 fe 05             	sar    esi,0x5
1000443b:	c1 f8 02             	sar    eax,0x2
1000443e:	83 e6 03             	and    esi,0x3
10004441:	83 e0 07             	and    eax,0x7
10004444:	6b f6 55             	imul   esi,esi,0x55
10004447:	6b c0 24             	imul   eax,eax,0x24
1000444a:	c1 e6 10             	shl    esi,0x10
1000444d:	c1 e0 08             	shl    eax,0x8
10004450:	09 f0                	or     eax,esi
10004452:	31 f6                	xor    esi,esi
10004454:	09 c8                	or     eax,ecx
10004456:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000445a:	0f b6 c2             	movzx  eax,dl
1000445d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004461:	8d 04 37             	lea    eax,[edi+esi*1]
10004464:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10004468:	7f 10                	jg     1000447a <monikaBsod(char*)+0x8a>
1000446a:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
1000446e:	81 ff ff af 04 00    	cmp    edi,0x4afff
10004474:	7e 98                	jle    1000440e <monikaBsod(char*)+0x1e>
10004476:	31 db                	xor    ebx,ebx
10004478:	eb 25                	jmp    1000449f <monikaBsod(char*)+0xaf>
1000447a:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000447c: R_386_32	screen
10004480:	b9 80 02 00 00       	mov    ecx,0x280
10004485:	8b 2a                	mov    ebp,DWORD PTR [edx]
10004487:	46                   	inc    esi
10004488:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000448c:	99                   	cdq    
1000448d:	f7 f9                	idiv   ecx
1000448f:	50                   	push   eax
10004490:	52                   	push   edx
10004491:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004493: R_386_32	screen
10004497:	ff 55 24             	call   DWORD PTR [ebp+0x24]
1000449a:	83 c4 10             	add    esp,0x10
1000449d:	eb c2                	jmp    10004461 <monikaBsod(char*)+0x71>
1000449f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100044a3:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
100044a7:	84 c0                	test   al,al
100044a9:	74 1d                	je     100044c8 <monikaBsod(char*)+0xd8>
100044ab:	b9 19 00 00 00       	mov    ecx,0x19
100044b0:	52                   	push   edx
100044b1:	50                   	push   eax
100044b2:	89 d8                	mov    eax,ebx
100044b4:	43                   	inc    ebx
100044b5:	99                   	cdq    
100044b6:	f7 f9                	idiv   ecx
100044b8:	83 c0 0a             	add    eax,0xa
100044bb:	42                   	inc    edx
100044bc:	50                   	push   eax
100044bd:	52                   	push   edx
100044be:	e8 fc ff ff ff       	call   100044bf <monikaBsod(char*)+0xcf>	100044bf: R_386_PC32	drawVGAChar(int, int, int)
100044c3:	83 c4 10             	add    esp,0x10
100044c6:	eb d7                	jmp    1000449f <monikaBsod(char*)+0xaf>
100044c8:	f4                   	hlt    
100044c9:	eb fd                	jmp    100044c8 <monikaBsod(char*)+0xd8>

100044cb <NiInstallSysHooks()>:
100044cb:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100044cd: R_386_32	guiPanicHandler
	100044d1: R_386_32	monikaBsod(char*)
100044d5:	c7 05 bc 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0xbc,0x0	100044d7: R_386_32	systemCallHandlers
	100044db: R_386_32	NiSystemCallHandler(regs*)
100044df:	c3                   	ret    

100044e0 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)>:
100044e0:	55                   	push   ebp
100044e1:	57                   	push   edi
100044e2:	31 ff                	xor    edi,edi
100044e4:	56                   	push   esi
100044e5:	53                   	push   ebx
100044e6:	83 ec 18             	sub    esp,0x18
100044e9:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100044ed:	6a 40                	push   0x40
100044ef:	e8 fc ff ff ff       	call   100044f0 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x10>	100044f0: R_386_PC32	malloc
100044f4:	89 c6                	mov    esi,eax
100044f6:	58                   	pop    eax
100044f7:	5a                   	pop    edx
100044f8:	ff b3 b0 00 00 00    	push   DWORD PTR [ebx+0xb0]
100044fe:	ff b3 ac 00 00 00    	push   DWORD PTR [ebx+0xac]
10004504:	ff b3 a8 00 00 00    	push   DWORD PTR [ebx+0xa8]
1000450a:	ff b3 a4 00 00 00    	push   DWORD PTR [ebx+0xa4]
10004510:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004512: R_386_32	ctxt
10004516:	56                   	push   esi
10004517:	e8 fc ff ff ff       	call   10004518 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x38>	10004518: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000451c:	83 c4 18             	add    esp,0x18
1000451f:	56                   	push   esi
10004520:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004522: R_386_32	desktop
10004526:	e8 fc ff ff ff       	call   10004527 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x47>	10004527: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000452b:	59                   	pop    ecx
1000452c:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000452e: R_386_32	desktop
10004532:	e8 fc ff ff ff       	call   10004533 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x53>	10004533: R_386_PC32	NIDesktop::completeRefresh()
10004537:	89 b3 a0 00 00 00    	mov    DWORD PTR [ebx+0xa0],esi
1000453d:	83 c4 10             	add    esp,0x10
10004540:	39 7e 24             	cmp    DWORD PTR [esi+0x24],edi
10004543:	7e 2e                	jle    10004573 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x93>
10004545:	31 db                	xor    ebx,ebx
10004547:	83 ff 19             	cmp    edi,0x19
1000454a:	0f 9e c3             	setle  bl
1000454d:	31 ed                	xor    ebp,ebp
1000454f:	4b                   	dec    ebx
10004550:	81 e3 d5 d4 d4 ff    	and    ebx,0xffd4d4d5
10004556:	81 c3 ff ff ff 00    	add    ebx,0xffffff
1000455c:	39 6e 20             	cmp    DWORD PTR [esi+0x20],ebp
1000455f:	7e 0f                	jle    10004570 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x90>
10004561:	53                   	push   ebx
10004562:	57                   	push   edi
10004563:	55                   	push   ebp
10004564:	45                   	inc    ebp
10004565:	56                   	push   esi
10004566:	e8 fc ff ff ff       	call   10004567 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x87>	10004567: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
1000456b:	83 c4 10             	add    esp,0x10
1000456e:	eb ec                	jmp    1000455c <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x7c>
10004570:	47                   	inc    edi
10004571:	eb cd                	jmp    10004540 <NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)+0x60>
10004573:	83 c4 0c             	add    esp,0xc
10004576:	31 c0                	xor    eax,eax
10004578:	5b                   	pop    ebx
10004579:	31 d2                	xor    edx,edx
1000457b:	5e                   	pop    esi
1000457c:	5f                   	pop    edi
1000457d:	5d                   	pop    ebp
1000457e:	c3                   	ret    

1000457f <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)>:
1000457f:	55                   	push   ebp
10004580:	31 c0                	xor    eax,eax
10004582:	57                   	push   edi
10004583:	56                   	push   esi
10004584:	53                   	push   ebx
10004585:	31 db                	xor    ebx,ebx
10004587:	83 ec 0c             	sub    esp,0xc
1000458a:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
1000458e:	8b aa a0 00 00 00    	mov    ebp,DWORD PTR [edx+0xa0]
10004594:	39 5d 24             	cmp    DWORD PTR [ebp+0x24],ebx
10004597:	7e 2e                	jle    100045c7 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x48>
10004599:	89 c6                	mov    esi,eax
1000459b:	31 ff                	xor    edi,edi
1000459d:	89 f0                	mov    eax,esi
1000459f:	39 7d 20             	cmp    DWORD PTR [ebp+0x20],edi
100045a2:	7e 20                	jle    100045c4 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x45>
100045a4:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
100045a8:	8b 82 b8 00 00 00    	mov    eax,DWORD PTR [edx+0xb8]
100045ae:	ff 34 b0             	push   DWORD PTR [eax+esi*4]
100045b1:	46                   	inc    esi
100045b2:	53                   	push   ebx
100045b3:	57                   	push   edi
100045b4:	47                   	inc    edi
100045b5:	55                   	push   ebp
100045b6:	e8 fc ff ff ff       	call   100045b7 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x38>	100045b7: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100045bb:	83 c4 10             	add    esp,0x10
100045be:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100045c2:	eb d9                	jmp    1000459d <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x1e>
100045c4:	43                   	inc    ebx
100045c5:	eb cd                	jmp    10004594 <NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)+0x15>
100045c7:	83 c4 0c             	add    esp,0xc
100045ca:	31 c0                	xor    eax,eax
100045cc:	5b                   	pop    ebx
100045cd:	31 d2                	xor    edx,edx
100045cf:	5e                   	pop    esi
100045d0:	5f                   	pop    edi
100045d1:	5d                   	pop    ebp
100045d2:	c3                   	ret    

100045d3 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)>:
100045d3:	55                   	push   ebp
100045d4:	57                   	push   edi
100045d5:	56                   	push   esi
100045d6:	31 f6                	xor    esi,esi
100045d8:	53                   	push   ebx
100045d9:	83 ec 0c             	sub    esp,0xc
100045dc:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100045e0:	8b a8 a0 00 00 00    	mov    ebp,DWORD PTR [eax+0xa0]
100045e6:	39 75 24             	cmp    DWORD PTR [ebp+0x24],esi
100045e9:	7e 2e                	jle    10004619 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x46>
100045eb:	31 db                	xor    ebx,ebx
100045ed:	83 fe 19             	cmp    esi,0x19
100045f0:	0f 9e c3             	setle  bl
100045f3:	31 ff                	xor    edi,edi
100045f5:	4b                   	dec    ebx
100045f6:	81 e3 d5 d4 d4 ff    	and    ebx,0xffd4d4d5
100045fc:	81 c3 ff ff ff 00    	add    ebx,0xffffff
10004602:	39 7d 20             	cmp    DWORD PTR [ebp+0x20],edi
10004605:	7e 0f                	jle    10004616 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x43>
10004607:	53                   	push   ebx
10004608:	56                   	push   esi
10004609:	57                   	push   edi
1000460a:	47                   	inc    edi
1000460b:	55                   	push   ebp
1000460c:	e8 fc ff ff ff       	call   1000460d <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x3a>	1000460d: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10004611:	83 c4 10             	add    esp,0x10
10004614:	eb ec                	jmp    10004602 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x2f>
10004616:	46                   	inc    esi
10004617:	eb cd                	jmp    100045e6 <NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)+0x13>
10004619:	83 c4 0c             	add    esp,0xc
1000461c:	31 c0                	xor    eax,eax
1000461e:	5b                   	pop    ebx
1000461f:	31 d2                	xor    edx,edx
10004621:	5e                   	pop    esi
10004622:	5f                   	pop    edi
10004623:	5d                   	pop    ebp
10004624:	c3                   	ret    

10004625 <NiSystemCallHandler(regs*)>:
10004625:	53                   	push   ebx
10004626:	83 ec 08             	sub    esp,0x8
10004629:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000462d:	8b 59 20             	mov    ebx,DWORD PTR [ecx+0x20]
10004630:	83 fb 04             	cmp    ebx,0x4
10004633:	74 1d                	je     10004652 <NiSystemCallHandler(regs*)+0x2d>
10004635:	83 fb 05             	cmp    ebx,0x5
10004638:	74 27                	je     10004661 <NiSystemCallHandler(regs*)+0x3c>
1000463a:	83 c8 ff             	or     eax,0xffffffff
1000463d:	85 db                	test   ebx,ebx
1000463f:	89 c2                	mov    edx,eax
10004641:	75 2e                	jne    10004671 <NiSystemCallHandler(regs*)+0x4c>
10004643:	50                   	push   eax
10004644:	50                   	push   eax
10004645:	ff 71 24             	push   DWORD PTR [ecx+0x24]
10004648:	ff 71 28             	push   DWORD PTR [ecx+0x28]
1000464b:	e8 fc ff ff ff       	call   1000464c <NiSystemCallHandler(regs*)+0x27>	1000464c: R_386_PC32	NiLinkCommandCreateWindow(unsigned long, NiLinkWindowStruct*)
10004650:	eb 1c                	jmp    1000466e <NiSystemCallHandler(regs*)+0x49>
10004652:	50                   	push   eax
10004653:	50                   	push   eax
10004654:	ff 71 24             	push   DWORD PTR [ecx+0x24]
10004657:	ff 71 28             	push   DWORD PTR [ecx+0x28]
1000465a:	e8 fc ff ff ff       	call   1000465b <NiSystemCallHandler(regs*)+0x36>	1000465b: R_386_PC32	NiLinkCommandResupplyFramebuffer(unsigned long, NiLinkWindowStruct*)
1000465f:	eb 0d                	jmp    1000466e <NiSystemCallHandler(regs*)+0x49>
10004661:	50                   	push   eax
10004662:	50                   	push   eax
10004663:	ff 71 24             	push   DWORD PTR [ecx+0x24]
10004666:	ff 71 28             	push   DWORD PTR [ecx+0x28]
10004669:	e8 fc ff ff ff       	call   1000466a <NiSystemCallHandler(regs*)+0x45>	1000466a: R_386_PC32	NiLinkCommandClearFramebuffer(unsigned long, NiLinkWindowStruct*)
1000466e:	83 c4 10             	add    esp,0x10
10004671:	83 c4 08             	add    esp,0x8
10004674:	5b                   	pop    ebx
10004675:	c3                   	ret    

10004676 <NIWindow::invalidate()>:
10004676:	53                   	push   ebx
10004677:	83 ec 08             	sub    esp,0x8
1000467a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000467e:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004682:	74 1d                	je     100046a1 <NIWindow::invalidate()+0x2b>
10004684:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
10004688:	74 17                	je     100046a1 <NIWindow::invalidate()+0x2b>
1000468a:	83 ec 0c             	sub    esp,0xc
1000468d:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004690:	e8 fc ff ff ff       	call   10004691 <NIWindow::invalidate()+0x1b>	10004691: R_386_PC32	free
10004695:	59                   	pop    ecx
10004696:	ff 73 14             	push   DWORD PTR [ebx+0x14]
10004699:	e8 fc ff ff ff       	call   1000469a <NIWindow::invalidate()+0x24>	1000469a: R_386_PC32	free
1000469e:	83 c4 10             	add    esp,0x10
100046a1:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100046a8:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100046af:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
100046b3:	83 c4 08             	add    esp,0x8
100046b6:	5b                   	pop    ebx
100046b7:	c3                   	ret    

100046b8 <NIWindow::rerender()>:
100046b8:	57                   	push   edi
100046b9:	56                   	push   esi
100046ba:	53                   	push   ebx
100046bb:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100046bf:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
100046c3:	74 0c                	je     100046d1 <NIWindow::rerender()+0x19>
100046c5:	83 ec 0c             	sub    esp,0xc
100046c8:	53                   	push   ebx
100046c9:	e8 fc ff ff ff       	call   100046ca <NIWindow::rerender()+0x12>	100046ca: R_386_PC32	NIWindow::invalidate()
100046ce:	83 c4 10             	add    esp,0x10
100046d1:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
100046d4:	83 ec 0c             	sub    esp,0xc
100046d7:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
100046da:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
100046e1:	50                   	push   eax
100046e2:	e8 fc ff ff ff       	call   100046e3 <NIWindow::rerender()+0x2b>	100046e3: R_386_PC32	malloc
100046e7:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
100046eb:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100046ee:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
100046f2:	89 34 24             	mov    DWORD PTR [esp],esi
100046f5:	e8 fc ff ff ff       	call   100046f6 <NIWindow::rerender()+0x3e>	100046f6: R_386_PC32	malloc
100046fa:	83 c4 10             	add    esp,0x10
100046fd:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004700:	31 c0                	xor    eax,eax
10004702:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004705:	7e 6a                	jle    10004771 <NIWindow::rerender()+0xb9>
10004707:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
1000470e:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004711:	01 d6                	add    esi,edx
10004713:	83 f8 06             	cmp    eax,0x6
10004716:	7f 1b                	jg     10004733 <NIWindow::rerender()+0x7b>
10004718:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	1000471b: R_386_32	curveLookup7
1000471f:	66 89 0e             	mov    WORD PTR [esi],cx
10004722:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004725:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	10004728: R_386_32	curveLookup7
1000472c:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
10004731:	eb 3b                	jmp    1000476e <NIWindow::rerender()+0xb6>
10004733:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004736:	8d 79 fa             	lea    edi,[ecx-0x6]
10004739:	39 c7                	cmp    edi,eax
1000473b:	7f 22                	jg     1000475f <NIWindow::rerender()+0xa7>
1000473d:	29 c1                	sub    ecx,eax
1000473f:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004742: R_386_32	curveLookup7
10004746:	66 89 0e             	mov    WORD PTR [esi],cx
10004749:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000474c:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
1000474f:	29 c1                	sub    ecx,eax
10004751:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004754: R_386_32	curveLookup7
10004758:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
1000475d:	eb 0f                	jmp    1000476e <NIWindow::rerender()+0xb6>
1000475f:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
10004764:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004767:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
1000476e:	40                   	inc    eax
1000476f:	eb 91                	jmp    10004702 <NIWindow::rerender()+0x4a>
10004771:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
10004775:	5b                   	pop    ebx
10004776:	5e                   	pop    esi
10004777:	5f                   	pop    edi
10004778:	c3                   	ret    
10004779:	90                   	nop

1000477a <NIWindow::changeContext(NIContext*, int, int)>:
1000477a:	55                   	push   ebp
1000477b:	57                   	push   edi
1000477c:	56                   	push   esi
1000477d:	53                   	push   ebx
1000477e:	83 ec 18             	sub    esp,0x18
10004781:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004785:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004789:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000478d:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10004791:	53                   	push   ebx
10004792:	e8 fc ff ff ff       	call   10004793 <NIWindow::changeContext(NIContext*, int, int)+0x19>	10004793: R_386_PC32	NIWindow::invalidate()
10004797:	89 33                	mov    DWORD PTR [ebx],esi
10004799:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
1000479c:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
1000479f:	83 c4 10             	add    esp,0x10
100047a2:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
100047a8:	83 f8 08             	cmp    eax,0x8
100047ab:	7f 09                	jg     100047b6 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
100047ad:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
100047b4:	eb 15                	jmp    100047cb <NIWindow::changeContext(NIContext*, int, int)+0x51>
100047b6:	83 f8 10             	cmp    eax,0x10
100047b9:	7f 09                	jg     100047c4 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
100047bb:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
100047c2:	eb 07                	jmp    100047cb <NIWindow::changeContext(NIContext*, int, int)+0x51>
100047c4:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
100047cb:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
100047cf:	83 c4 0c             	add    esp,0xc
100047d2:	5b                   	pop    ebx
100047d3:	5e                   	pop    esi
100047d4:	5f                   	pop    edi
100047d5:	5d                   	pop    ebp
100047d6:	e9 dd fe ff ff       	jmp    100046b8 <NIWindow::rerender()>
100047db:	90                   	nop

100047dc <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
100047dc:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100047e0:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100047e4:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
100047e8:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
100047eb:	c7 40 3c 00 00 00 00 	mov    DWORD PTR [eax+0x3c],0x0
100047f2:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100047f6:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
100047fa:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
100047fd:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004804:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
1000480b:	e9 6a ff ff ff       	jmp    1000477a <NIWindow::changeContext(NIContext*, int, int)>

10004810 <NIWindow::request()>:
10004810:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004814:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
10004818:	75 05                	jne    1000481f <NIWindow::request()+0xf>
1000481a:	e9 99 fe ff ff       	jmp    100046b8 <NIWindow::rerender()>
1000481f:	c3                   	ret    

10004820 <NIWindow::SHADOW_TEST()>:
10004820:	55                   	push   ebp
10004821:	57                   	push   edi
10004822:	56                   	push   esi
10004823:	53                   	push   ebx
10004824:	83 ec 28             	sub    esp,0x28
10004827:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
1000482b:	53                   	push   ebx
1000482c:	e8 fc ff ff ff       	call   1000482d <NIWindow::SHADOW_TEST()+0xd>	1000482d: R_386_PC32	NIWindow::request()
10004831:	83 c4 10             	add    esp,0x10
10004834:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004837:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
1000483a:	74 10                	je     1000484c <NIWindow::SHADOW_TEST()+0x2c>
1000483c:	83 ec 0c             	sub    esp,0xc
1000483f:	68 3c 4e 00 10       	push   0x10004e3c	10004840: R_386_32	.text
10004844:	e8 fc ff ff ff       	call   10004845 <NIWindow::SHADOW_TEST()+0x25>	10004845: R_386_PC32	KePanic(char const*)
10004849:	83 c4 10             	add    esp,0x10
1000484c:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004850:	0f 85 28 01 00 00    	jne    1000497e <NIWindow::SHADOW_TEST()+0x15e>
10004856:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
1000485e:	31 ff                	xor    edi,edi
10004860:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
10004863:	0f 8e 15 01 00 00    	jle    1000497e <NIWindow::SHADOW_TEST()+0x15e>
10004869:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000486c:	8d 04 b8             	lea    eax,[eax+edi*4]
1000486f:	0f b7 30             	movzx  esi,WORD PTR [eax]
10004872:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10004876:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
1000487a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000487e:	89 34 24             	mov    DWORD PTR [esp],esi
10004881:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004884:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004887:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
1000488b:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
1000488e:	0f 8e d4 00 00 00    	jle    10004968 <NIWindow::SHADOW_TEST()+0x148>
10004894:	83 ff 05             	cmp    edi,0x5
10004897:	7e 1f                	jle    100048b8 <NIWindow::SHADOW_TEST()+0x98>
10004899:	8d 41 fb             	lea    eax,[ecx-0x5]
1000489c:	39 f8                	cmp    eax,edi
1000489e:	7e 18                	jle    100048b8 <NIWindow::SHADOW_TEST()+0x98>
100048a0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100048a4:	83 c0 05             	add    eax,0x5
100048a7:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100048aa:	7d 0c                	jge    100048b8 <NIWindow::SHADOW_TEST()+0x98>
100048ac:	8d 45 fb             	lea    eax,[ebp-0x5]
100048af:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100048b2:	0f 8f a8 00 00 00    	jg     10004960 <NIWindow::SHADOW_TEST()+0x140>
100048b8:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
100048bc:	be ea 01 00 00       	mov    esi,0x1ea
100048c1:	29 f9                	sub    ecx,edi
100048c3:	89 f0                	mov    eax,esi
100048c5:	83 c1 04             	add    ecx,0x4
100048c8:	99                   	cdq    
100048c9:	f7 f9                	idiv   ecx
100048cb:	89 c1                	mov    ecx,eax
100048cd:	89 f0                	mov    eax,esi
100048cf:	99                   	cdq    
100048d0:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
100048d4:	83 f8 0a             	cmp    eax,0xa
100048d7:	7d 05                	jge    100048de <NIWindow::SHADOW_TEST()+0xbe>
100048d9:	b8 0a 00 00 00       	mov    eax,0xa
100048de:	39 c1                	cmp    ecx,eax
100048e0:	7d 02                	jge    100048e4 <NIWindow::SHADOW_TEST()+0xc4>
100048e2:	89 c1                	mov    ecx,eax
100048e4:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
100048e7:	b8 ea 01 00 00       	mov    eax,0x1ea
100048ec:	83 c5 04             	add    ebp,0x4
100048ef:	99                   	cdq    
100048f0:	f7 fd                	idiv   ebp
100048f2:	89 c6                	mov    esi,eax
100048f4:	83 f8 0a             	cmp    eax,0xa
100048f7:	7d 05                	jge    100048fe <NIWindow::SHADOW_TEST()+0xde>
100048f9:	be 0a 00 00 00       	mov    esi,0xa
100048fe:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004901:	8d 68 05             	lea    ebp,[eax+0x5]
10004904:	b8 ea 01 00 00       	mov    eax,0x1ea
10004909:	99                   	cdq    
1000490a:	f7 fd                	idiv   ebp
1000490c:	39 c6                	cmp    esi,eax
1000490e:	7d 02                	jge    10004912 <NIWindow::SHADOW_TEST()+0xf2>
10004910:	89 c6                	mov    esi,eax
10004912:	89 f0                	mov    eax,esi
10004914:	89 ca                	mov    edx,ecx
10004916:	0f af c6             	imul   eax,esi
10004919:	0f af d1             	imul   edx,ecx
1000491c:	0f af f1             	imul   esi,ecx
1000491f:	01 d0                	add    eax,edx
10004921:	8d 04 c6             	lea    eax,[esi+eax*8]
10004924:	c1 f8 08             	sar    eax,0x8
10004927:	83 f8 66             	cmp    eax,0x66
1000492a:	7e 46                	jle    10004972 <NIWindow::SHADOW_TEST()+0x152>
1000492c:	8d 50 9a             	lea    edx,[eax-0x66]
1000492f:	d1 fa                	sar    edx,1
10004931:	8d 42 66             	lea    eax,[edx+0x66]
10004934:	83 f8 73             	cmp    eax,0x73
10004937:	7e 39                	jle    10004972 <NIWindow::SHADOW_TEST()+0x152>
10004939:	83 ea 0d             	sub    edx,0xd
1000493c:	c1 fa 02             	sar    edx,0x2
1000493f:	8d 42 73             	lea    eax,[edx+0x73]
10004942:	83 f8 7f             	cmp    eax,0x7f
10004945:	7f 19                	jg     10004960 <NIWindow::SHADOW_TEST()+0x140>
10004947:	50                   	push   eax
10004948:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000494b:	01 f8                	add    eax,edi
1000494d:	50                   	push   eax
1000494e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004952:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10004955:	50                   	push   eax
10004956:	ff 33                	push   DWORD PTR [ebx]
10004958:	e8 fc ff ff ff       	call   10004959 <NIWindow::SHADOW_TEST()+0x139>	10004959: R_386_PC32	NIContext::drvDarken4(int, int, int)
1000495d:	83 c4 10             	add    esp,0x10
10004960:	ff 04 24             	inc    DWORD PTR [esp]
10004963:	e9 19 ff ff ff       	jmp    10004881 <NIWindow::SHADOW_TEST()+0x61>
10004968:	47                   	inc    edi
10004969:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000496d:	e9 ee fe ff ff       	jmp    10004860 <NIWindow::SHADOW_TEST()+0x40>
10004972:	83 f8 0a             	cmp    eax,0xa
10004975:	7d d0                	jge    10004947 <NIWindow::SHADOW_TEST()+0x127>
10004977:	b8 0a 00 00 00       	mov    eax,0xa
1000497c:	eb c9                	jmp    10004947 <NIWindow::SHADOW_TEST()+0x127>
1000497e:	83 c4 1c             	add    esp,0x1c
10004981:	5b                   	pop    ebx
10004982:	5e                   	pop    esi
10004983:	5f                   	pop    edi
10004984:	5d                   	pop    ebp
10004985:	c3                   	ret    

10004986 <NIWindow::realdraw()>:
10004986:	55                   	push   ebp
10004987:	57                   	push   edi
10004988:	56                   	push   esi
10004989:	53                   	push   ebx
1000498a:	83 ec 18             	sub    esp,0x18
1000498d:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004991:	53                   	push   ebx
10004992:	e8 fc ff ff ff       	call   10004993 <NIWindow::realdraw()+0xd>	10004993: R_386_PC32	NIWindow::request()
10004997:	83 c4 10             	add    esp,0x10
1000499a:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
1000499d:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100049a0:	74 10                	je     100049b2 <NIWindow::realdraw()+0x2c>
100049a2:	83 ec 0c             	sub    esp,0xc
100049a5:	68 3c 4e 00 10       	push   0x10004e3c	100049a6: R_386_32	.text
100049aa:	e8 fc ff ff ff       	call   100049ab <NIWindow::realdraw()+0x25>	100049ab: R_386_PC32	KePanic(char const*)
100049af:	83 c4 10             	add    esp,0x10
100049b2:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100049b6:	75 46                	jne    100049fe <NIWindow::realdraw()+0x78>
100049b8:	31 f6                	xor    esi,esi
100049ba:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
100049bd:	7e 3f                	jle    100049fe <NIWindow::realdraw()+0x78>
100049bf:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100049c2:	8d 04 b0             	lea    eax,[eax+esi*4]
100049c5:	0f b7 28             	movzx  ebp,WORD PTR [eax]
100049c8:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
100049cc:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
100049cf:	89 c2                	mov    edx,eax
100049d1:	29 fa                	sub    edx,edi
100049d3:	39 ea                	cmp    edx,ebp
100049d5:	7e 24                	jle    100049fb <NIWindow::realdraw()+0x75>
100049d7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100049da:	0f af c6             	imul   eax,esi
100049dd:	01 e8                	add    eax,ebp
100049df:	ff 34 82             	push   DWORD PTR [edx+eax*4]
100049e2:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100049e5:	01 f0                	add    eax,esi
100049e7:	50                   	push   eax
100049e8:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100049eb:	01 e8                	add    eax,ebp
100049ed:	45                   	inc    ebp
100049ee:	50                   	push   eax
100049ef:	ff 33                	push   DWORD PTR [ebx]
100049f1:	e8 fc ff ff ff       	call   100049f2 <NIWindow::realdraw()+0x6c>	100049f2: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
100049f6:	83 c4 10             	add    esp,0x10
100049f9:	eb d1                	jmp    100049cc <NIWindow::realdraw()+0x46>
100049fb:	46                   	inc    esi
100049fc:	eb bc                	jmp    100049ba <NIWindow::realdraw()+0x34>
100049fe:	83 c4 0c             	add    esp,0xc
10004a01:	5b                   	pop    ebx
10004a02:	5e                   	pop    esi
10004a03:	5f                   	pop    edi
10004a04:	5d                   	pop    ebp
10004a05:	c3                   	ret    

10004a06 <NIWindow::putpixel(int, int, unsigned int)>:
10004a06:	56                   	push   esi
10004a07:	53                   	push   ebx
10004a08:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10004a0c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004a10:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
10004a13:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
10004a17:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10004a1b:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10004a1f:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004a22:	83 fe 04             	cmp    esi,0x4
10004a25:	75 05                	jne    10004a2c <NIWindow::putpixel(int, int, unsigned int)+0x26>
10004a27:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
10004a2a:	eb 0e                	jmp    10004a3a <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004a2c:	83 fe 02             	cmp    esi,0x2
10004a2f:	75 06                	jne    10004a37 <NIWindow::putpixel(int, int, unsigned int)+0x31>
10004a31:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10004a35:	eb 03                	jmp    10004a3a <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004a37:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10004a3a:	5b                   	pop    ebx
10004a3b:	5e                   	pop    esi
10004a3c:	c3                   	ret    
10004a3d:	90                   	nop

10004a3e <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004a3e:	53                   	push   ebx
10004a3f:	83 ec 14             	sub    esp,0x14
10004a42:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10004a46:	6a 0c                	push   0xc
10004a48:	e8 fc ff ff ff       	call   10004a49 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	10004a49: R_386_PC32	malloc
10004a4d:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10004a51:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004a58:	89 10                	mov    DWORD PTR [eax],edx
10004a5a:	83 c4 10             	add    esp,0x10
10004a5d:	8b 13                	mov    edx,DWORD PTR [ebx]
10004a5f:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10004a62:	85 d2                	test   edx,edx
10004a64:	74 05                	je     10004a6b <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
10004a66:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
10004a69:	eb 03                	jmp    10004a6e <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
10004a6b:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004a6e:	89 03                	mov    DWORD PTR [ebx],eax
10004a70:	83 c4 08             	add    esp,0x8
10004a73:	5b                   	pop    ebx
10004a74:	c3                   	ret    
10004a75:	90                   	nop

10004a76 <List<NIWindow*>::deleteElement(NIWindow*&)>:
10004a76:	57                   	push   edi
10004a77:	56                   	push   esi
10004a78:	53                   	push   ebx
10004a79:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10004a7d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004a81:	8b 19                	mov    ebx,DWORD PTR [ecx]
10004a83:	85 db                	test   ebx,ebx
10004a85:	74 5e                	je     10004ae5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004a87:	8b 30                	mov    esi,DWORD PTR [eax]
10004a89:	89 da                	mov    edx,ebx
10004a8b:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
10004a8e:	8b 3a                	mov    edi,DWORD PTR [edx]
10004a90:	85 c0                	test   eax,eax
10004a92:	74 08                	je     10004a9c <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004a94:	39 f7                	cmp    edi,esi
10004a96:	73 04                	jae    10004a9c <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004a98:	89 c2                	mov    edx,eax
10004a9a:	eb ef                	jmp    10004a8b <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
10004a9c:	39 f7                	cmp    edi,esi
10004a9e:	75 45                	jne    10004ae5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004aa0:	39 d3                	cmp    ebx,edx
10004aa2:	75 18                	jne    10004abc <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
10004aa4:	89 01                	mov    DWORD PTR [ecx],eax
10004aa6:	85 c0                	test   eax,eax
10004aa8:	75 09                	jne    10004ab3 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
10004aaa:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004ab1:	eb 1e                	jmp    10004ad1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004ab3:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004aba:	eb 15                	jmp    10004ad1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004abc:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004abf:	85 c0                	test   eax,eax
10004ac1:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004ac4:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004ac7:	74 05                	je     10004ace <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
10004ac9:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10004acc:	eb 03                	jmp    10004ad1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004ace:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004ad1:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
10004ad9:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10004add:	5b                   	pop    ebx
10004ade:	5e                   	pop    esi
10004adf:	5f                   	pop    edi
10004ae0:	e9 fc ff ff ff       	jmp    10004ae1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004ae1: R_386_PC32	operator delete(void*, unsigned long)
10004ae5:	5b                   	pop    ebx
10004ae6:	5e                   	pop    esi
10004ae7:	5f                   	pop    edi
10004ae8:	c3                   	ret    
10004ae9:	43                   	inc    ebx
10004aea:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004aec:	42                   	inc    edx
10004aed:	61                   	popa   
10004aee:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004aef:	61                   	popa   
10004af0:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004af1:	61                   	popa   
10004af2:	2f                   	das    
10004af3:	53                   	push   ebx
10004af4:	79 73                	jns    10004b69 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
10004af6:	74 65                	je     10004b5d <List<NIWindow*>::deleteElement(NIWindow*&)+0xe7>
10004af8:	6d                   	ins    DWORD PTR es:[edi],dx
10004af9:	2f                   	das    
10004afa:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004afb:	65 77 67             	gs ja  10004b65 <List<NIWindow*>::deleteElement(NIWindow*&)+0xef>
10004afe:	75 69                	jne    10004b69 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
10004b00:	2e 65 78 65          	cs gs js 10004b69 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf3>
10004b04:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004b07:	4e                   	dec    esi
10004b08:	43                   	inc    ebx
10004b09:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004b0c:	4e                   	dec    esi
10004b0d:	32 00                	xor    al,BYTE PTR [eax]
10004b0f:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
10004b12:	53                   	push   ebx
10004b13:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
10004b16:	43                   	inc    ebx
10004b17:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004b18:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b19:	74 65                	je     10004b80 <List<NIWindow*>::deleteElement(NIWindow*&)+0x10a>
10004b1b:	78 74                	js     10004b91 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11b>
10004b1d:	3a 3a                	cmp    bh,BYTE PTR [edx]
10004b1f:	64 72 76             	fs jb  10004b98 <List<NIWindow*>::deleteElement(NIWindow*&)+0x122>
10004b22:	52                   	push   edx
10004b23:	65 6e                	outs   dx,BYTE PTR gs:[esi]
10004b25:	64 65 72 54          	fs gs jb 10004b7d <List<NIWindow*>::deleteElement(NIWindow*&)+0x107>
10004b29:	54                   	push   esp
10004b2a:	46                   	inc    esi
10004b2b:	34 00                	xor    al,0x0
10004b2d:	43                   	inc    ebx
10004b2e:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004b30:	42                   	inc    edx
10004b31:	61                   	popa   
10004b32:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b33:	61                   	popa   
10004b34:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b35:	61                   	popa   
10004b36:	2f                   	das    
10004b37:	46                   	inc    esi
10004b38:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004b39:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b3a:	74 73                	je     10004baf <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
10004b3c:	2f                   	das    
10004b3d:	53                   	push   ebx
10004b3e:	46                   	inc    esi
10004b3f:	4e                   	dec    esi
10004b40:	00 43 41             	add    BYTE PTR [ebx+0x41],al
10004b43:	4e                   	dec    esi
10004b44:	4e                   	dec    esi
10004b45:	4f                   	dec    edi
10004b46:	54                   	push   esp
10004b47:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004b4b:	44                   	inc    esp
10004b4c:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
10004b4f:	4e                   	dec    esi
10004b50:	54                   	push   esp
10004b51:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
10004b55:	45                   	inc    ebp
10004b56:	43                   	inc    ebx
10004b57:	54                   	push   esp
10004b58:	4f                   	dec    edi
10004b59:	52                   	push   edx
10004b5a:	59                   	pop    ecx
10004b5b:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
10004b5e:	2f                   	das    
10004b5f:	42                   	inc    edx
10004b60:	61                   	popa   
10004b61:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b62:	61                   	popa   
10004b63:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b64:	61                   	popa   
10004b65:	2f                   	das    
10004b66:	46                   	inc    esi
10004b67:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004b68:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b69:	74 73                	je     10004bde <List<NIWindow*>::deleteElement(NIWindow*&)+0x168>
10004b6b:	2f                   	das    
10004b6c:	53                   	push   ebx
10004b6d:	46                   	inc    esi
10004b6e:	4e                   	dec    esi
10004b6f:	2f                   	das    
10004b70:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
10004b73:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b74:	74 20                	je     10004b96 <List<NIWindow*>::deleteElement(NIWindow*&)+0x120>
10004b76:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
10004b7d:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
10004b84:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
10004b88:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
10004b8e:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004b8f:	74 3a                	je     10004bcb <List<NIWindow*>::deleteElement(NIWindow*&)+0x155>
10004b91:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
10004b97:	53                   	push   ebx
10004b98:	46                   	inc    esi
10004b99:	4e                   	dec    esi
10004b9a:	5f                   	pop    edi
10004b9b:	52                   	push   edx
10004b9c:	45                   	inc    ebp
10004b9d:	53                   	push   ebx
10004b9e:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
10004ba4:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
10004ba7:	6d                   	ins    DWORD PTR es:[edi],dx
10004ba8:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004ba9:	72 79                	jb     10004c24 <_ssfn__compute_huffman_codes::length_dezigzag+0x4>
10004bab:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
10004bae:	6c                   	ins    BYTE PTR es:[edi],dx
10004baf:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004bb0:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
10004bb3:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
10004bba:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004bbb:	72 00                	jb     10004bbd <List<NIWindow*>::deleteElement(NIWindow*&)+0x147>
10004bbd:	42                   	inc    edx
10004bbe:	61                   	popa   
10004bbf:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
10004bc3:	6c                   	ins    BYTE PTR es:[edi],dx
10004bc4:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004bc8:	72 6d                	jb     10004c37 <_ssfn__compute_huffman_codes::length_dezigzag+0x17>
10004bca:	61                   	popa   
10004bcb:	74 00                	je     10004bcd <List<NIWindow*>::deleteElement(NIWindow*&)+0x157>
10004bcd:	4e                   	dec    esi
10004bce:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004bcf:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004bd2:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004bd3:	74 20                	je     10004bf5 <List<NIWindow*>::deleteElement(NIWindow*&)+0x17f>
10004bd5:	66 61                	popaw  
10004bd7:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004bda:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004bdc:	75 6e                	jne    10004c4c <_ssfn__zdist_extra+0xc>
10004bde:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
10004be2:	76 61                	jbe    10004c45 <_ssfn__zdist_extra+0x5>
10004be4:	6c                   	ins    BYTE PTR es:[edi],dx
10004be5:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004bed:	20 76 61             	and    BYTE PTR [esi+0x61],dh
10004bf0:	6c                   	ins    BYTE PTR es:[edi],dx
10004bf1:	75 65                	jne    10004c58 <_ssfn__zdist_extra+0x18>
10004bf3:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004bf6:	76 61                	jbe    10004c59 <_ssfn__zdist_extra+0x19>
10004bf8:	6c                   	ins    BYTE PTR es:[edi],dx
10004bf9:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
10004c01:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004c04:	76 61                	jbe    10004c67 <_ssfn__zdist_extra+0x27>
10004c06:	6c                   	ins    BYTE PTR es:[edi],dx
10004c07:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
10004c0f:	47                   	inc    edi
10004c10:	6c                   	ins    BYTE PTR es:[edi],dx
10004c11:	79 70                	jns    10004c83 <_ssfn__zdist_extra+0x43>
10004c13:	68 20 6e 6f 74       	push   0x746f6e20
10004c18:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004c1b:	75 6e                	jne    10004c8b <_ssfn__zdist_extra+0x4b>
10004c1d:	64                   	fs
10004c1e:	00                   	.byte 0x0
10004c1f:	90                   	nop

10004c20 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004c20:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004c30:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004c40 <_ssfn__zdist_extra>:
	...
10004c50:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
10004c60:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
10004c70:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
10004c80:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
10004c90:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10004ca0:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10004cb0:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004cc0 <_ssfn__zdist_base>:
10004cc0:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004cd0:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004ce0:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004cf0:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004d00:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004d10:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004d20:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004d30:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004d40 <_ssfn__zlength_extra>:
	...
10004d60:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
10004d70:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
10004d80:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
10004d90:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10004da0:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004dc0 <_ssfn__zlength_base>:
10004dc0:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004dd0:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004de0:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004df0:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004e00:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004e10:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004e20:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004e30:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
10004e40:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
10004e50:	29 2e 00                                            )..
