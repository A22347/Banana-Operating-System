
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000009: R_386_32	guiPanicHandler
	1000000d: R_386_32	monikaBsod(char*)
10000011:	68 c3 48 00 10       	push   0x100048c3	10000012: R_386_32	.text
10000016:	e8 fc ff ff ff       	call   10000017 <start(void*)+0x17>	10000017: R_386_PC32	monikaBsod(char*)
1000001b:	58                   	pop    eax
1000001c:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000001e: R_386_32	screen
10000022:	e8 fc ff ff ff       	call   10000023 <start(void*)+0x23>	10000023: R_386_PC32	Video::getWidth()
10000027:	5a                   	pop    edx
10000028:	89 c3                	mov    ebx,eax
1000002a:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002c: R_386_32	screen
10000030:	e8 fc ff ff ff       	call   10000031 <start(void*)+0x31>	10000031: R_386_PC32	Video::getHeight()
10000035:	59                   	pop    ecx
10000036:	89 c7                	mov    edi,eax
10000038:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000003a: R_386_32	screen
1000003e:	e8 fc ff ff ff       	call   1000003f <start(void*)+0x3f>	1000003f: R_386_PC32	Video::getWidth()
10000043:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000004a:	89 c5                	mov    ebp,eax
1000004c:	e8 fc ff ff ff       	call   1000004d <start(void*)+0x4d>	1000004d: R_386_PC32	malloc
10000051:	89 c6                	mov    esi,eax
10000053:	58                   	pop    eax
10000054:	5a                   	pop    edx
10000055:	6a 20                	push   0x20
10000057:	55                   	push   ebp
10000058:	57                   	push   edi
10000059:	53                   	push   ebx
1000005a:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000005c: R_386_32	screen
10000060:	56                   	push   esi
10000061:	e8 fc ff ff ff       	call   10000062 <start(void*)+0x62>	10000062: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000066:	83 c4 14             	add    esp,0x14
10000069:	6a 14                	push   0x14
1000006b:	e8 fc ff ff ff       	call   1000006c <start(void*)+0x6c>	1000006c: R_386_PC32	malloc
10000070:	59                   	pop    ecx
10000071:	89 c3                	mov    ebx,eax
10000073:	5f                   	pop    edi
10000074:	56                   	push   esi
10000075:	50                   	push   eax
10000076:	e8 fc ff ff ff       	call   10000077 <start(void*)+0x77>	10000077: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
1000007b:	c7 04 24 3c 00 00 00 	mov    DWORD PTR [esp],0x3c
10000082:	e8 fc ff ff ff       	call   10000083 <start(void*)+0x83>	10000083: R_386_PC32	malloc
10000087:	5d                   	pop    ebp
10000088:	89 c1                	mov    ecx,eax
1000008a:	58                   	pop    eax
1000008b:	6a 01                	push   0x1
1000008d:	6a 01                	push   0x1
1000008f:	6a 00                	push   0x0
10000091:	6a 00                	push   0x0
10000093:	56                   	push   esi
10000094:	51                   	push   ecx
10000095:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
10000099:	e8 fc ff ff ff       	call   1000009a <start(void*)+0x9a>	1000009a: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000009e:	83 c4 14             	add    esp,0x14
100000a1:	6a 3c                	push   0x3c
100000a3:	e8 fc ff ff ff       	call   100000a4 <start(void*)+0xa4>	100000a4: R_386_PC32	malloc
100000a8:	89 c2                	mov    edx,eax
100000aa:	58                   	pop    eax
100000ab:	59                   	pop    ecx
100000ac:	68 40 01 00 00       	push   0x140
100000b1:	68 90 01 00 00       	push   0x190
100000b6:	6a 32                	push   0x32
100000b8:	6a 32                	push   0x32
100000ba:	56                   	push   esi
100000bb:	52                   	push   edx
100000bc:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000c0:	e8 fc ff ff ff       	call   100000c1 <start(void*)+0xc1>	100000c1: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000c5:	83 c4 14             	add    esp,0x14
100000c8:	6a 3c                	push   0x3c
100000ca:	e8 fc ff ff ff       	call   100000cb <start(void*)+0xcb>	100000cb: R_386_PC32	malloc
100000cf:	5f                   	pop    edi
100000d0:	89 c5                	mov    ebp,eax
100000d2:	58                   	pop    eax
100000d3:	68 7c 01 00 00       	push   0x17c
100000d8:	68 f4 01 00 00       	push   0x1f4
100000dd:	68 96 00 00 00       	push   0x96
100000e2:	68 c8 00 00 00       	push   0xc8
100000e7:	56                   	push   esi
100000e8:	55                   	push   ebp
100000e9:	e8 fc ff ff ff       	call   100000ea <start(void*)+0xea>	100000ea: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000ee:	83 c4 14             	add    esp,0x14
100000f1:	6a 3c                	push   0x3c
100000f3:	e8 fc ff ff ff       	call   100000f4 <start(void*)+0xf4>	100000f4: R_386_PC32	malloc
100000f8:	89 c7                	mov    edi,eax
100000fa:	58                   	pop    eax
100000fb:	5a                   	pop    edx
100000fc:	68 af 00 00 00       	push   0xaf
10000101:	68 0e 01 00 00       	push   0x10e
10000106:	68 90 01 00 00       	push   0x190
1000010b:	6a 7d                	push   0x7d
1000010d:	56                   	push   esi
1000010e:	57                   	push   edi
1000010f:	e8 fc ff ff ff       	call   10000110 <start(void*)+0x110>	10000110: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000114:	83 c4 18             	add    esp,0x18
10000117:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000011b:	51                   	push   ecx
1000011c:	53                   	push   ebx
1000011d:	e8 fc ff ff ff       	call   1000011e <start(void*)+0x11e>	1000011e: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000122:	59                   	pop    ecx
10000123:	5e                   	pop    esi
10000124:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000128:	52                   	push   edx
10000129:	53                   	push   ebx
1000012a:	e8 fc ff ff ff       	call   1000012b <start(void*)+0x12b>	1000012b: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012f:	58                   	pop    eax
10000130:	5a                   	pop    edx
10000131:	55                   	push   ebp
10000132:	53                   	push   ebx
10000133:	e8 fc ff ff ff       	call   10000134 <start(void*)+0x134>	10000134: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000138:	59                   	pop    ecx
10000139:	5e                   	pop    esi
1000013a:	57                   	push   edi
1000013b:	53                   	push   ebx
1000013c:	e8 fc ff ff ff       	call   1000013d <start(void*)+0x13d>	1000013d: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000141:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000144:	e8 fc ff ff ff       	call   10000145 <start(void*)+0x145>	10000145: R_386_PC32	NIDesktop::completeRefresh()
10000149:	83 c4 10             	add    esp,0x10
1000014c:	83 ec 0c             	sub    esp,0xc
1000014f:	6a 02                	push   0x2
10000151:	e8 fc ff ff ff       	call   10000152 <start(void*)+0x152>	10000152: R_386_PC32	blockTask(TaskState)
10000156:	eb f1                	jmp    10000149 <start(void*)+0x149>

10000158 <begin(void*)>:
10000158:	83 ec 18             	sub    esp,0x18
1000015b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000015f:	e8 fc ff ff ff       	call   10000160 <begin(void*)+0x8>	10000160: R_386_PC32	start(void*)

10000164 <_ssfn__bitreverse16>:
10000164:	89 c2                	mov    edx,eax
10000166:	01 c0                	add    eax,eax
10000168:	d1 fa                	sar    edx,1
1000016a:	25 aa aa 00 00       	and    eax,0xaaaa
1000016f:	81 e2 55 55 00 00    	and    edx,0x5555
10000175:	09 c2                	or     edx,eax
10000177:	89 d0                	mov    eax,edx
10000179:	c1 e2 02             	shl    edx,0x2
1000017c:	c1 f8 02             	sar    eax,0x2
1000017f:	81 e2 cc cc 00 00    	and    edx,0xcccc
10000185:	25 33 33 00 00       	and    eax,0x3333
1000018a:	09 d0                	or     eax,edx
1000018c:	89 c2                	mov    edx,eax
1000018e:	c1 e0 04             	shl    eax,0x4
10000191:	c1 fa 04             	sar    edx,0x4
10000194:	25 f0 f0 00 00       	and    eax,0xf0f0
10000199:	81 e2 0f 0f 00 00    	and    edx,0xf0f
1000019f:	09 c2                	or     edx,eax
100001a1:	89 d1                	mov    ecx,edx
100001a3:	c1 e2 08             	shl    edx,0x8
100001a6:	c1 f9 08             	sar    ecx,0x8
100001a9:	0f b7 c2             	movzx  eax,dx
100001ac:	09 c8                	or     eax,ecx
100001ae:	c3                   	ret    

100001af <_ssfn__zhuffman_decode>:
100001af:	55                   	push   ebp
100001b0:	57                   	push   edi
100001b1:	56                   	push   esi
100001b2:	53                   	push   ebx
100001b3:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001b7:	7f 1d                	jg     100001d6 <_ssfn__zhuffman_decode+0x27>
100001b9:	8b 18                	mov    ebx,DWORD PTR [eax]
100001bb:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001be:	89 08                	mov    DWORD PTR [eax],ecx
100001c0:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001c3:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001c6:	d3 e3                	shl    ebx,cl
100001c8:	83 c1 08             	add    ecx,0x8
100001cb:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001ce:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001d1:	83 f9 18             	cmp    ecx,0x18
100001d4:	eb e1                	jmp    100001b7 <_ssfn__zhuffman_decode+0x8>
100001d6:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001d9:	89 f9                	mov    ecx,edi
100001db:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001e1:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001e5:	89 cb                	mov    ebx,ecx
100001e7:	85 c9                	test   ecx,ecx
100001e9:	74 15                	je     10000200 <_ssfn__zhuffman_decode+0x51>
100001eb:	c1 f9 09             	sar    ecx,0x9
100001ee:	89 da                	mov    edx,ebx
100001f0:	d3 ef                	shr    edi,cl
100001f2:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001f5:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001f8:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001fe:	eb 58                	jmp    10000258 <_ssfn__zhuffman_decode+0xa9>
10000200:	89 d5                	mov    ebp,edx
10000202:	89 c3                	mov    ebx,eax
10000204:	be 0a 00 00 00       	mov    esi,0xa
10000209:	89 f8                	mov    eax,edi
1000020b:	e8 54 ff ff ff       	call   10000164 <_ssfn__bitreverse16>
10000210:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
10000217:	7c 03                	jl     1000021c <_ssfn__zhuffman_decode+0x6d>
10000219:	46                   	inc    esi
1000021a:	eb f4                	jmp    10000210 <_ssfn__zhuffman_decode+0x61>
1000021c:	83 ca ff             	or     edx,0xffffffff
1000021f:	83 fe 10             	cmp    esi,0x10
10000222:	74 34                	je     10000258 <_ssfn__zhuffman_decode+0xa9>
10000224:	8d 14 36             	lea    edx,[esi+esi*1]
10000227:	b9 10 00 00 00       	mov    ecx,0x10
1000022c:	01 ea                	add    edx,ebp
1000022e:	29 f1                	sub    ecx,esi
10000230:	d3 f8                	sar    eax,cl
10000232:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000239:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000240:	29 c8                	sub    eax,ecx
10000242:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
10000245:	89 f1                	mov    ecx,esi
10000247:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
1000024e:	d3 ef                	shr    edi,cl
10000250:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
10000253:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000258:	5b                   	pop    ebx
10000259:	89 d0                	mov    eax,edx
1000025b:	5e                   	pop    esi
1000025c:	5f                   	pop    edi
1000025d:	5d                   	pop    ebp
1000025e:	c3                   	ret    

1000025f <_ssfn__zexpand>:
1000025f:	55                   	push   ebp
10000260:	57                   	push   edi
10000261:	56                   	push   esi
10000262:	53                   	push   ebx
10000263:	83 ec 0c             	sub    esp,0xc
10000266:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000269:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
1000026c:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
1000026f:	29 f9                	sub    ecx,edi
10000271:	83 f9 08             	cmp    ecx,0x8
10000274:	74 04                	je     1000027a <_ssfn__zexpand+0x1b>
10000276:	31 c0                	xor    eax,eax
10000278:	eb 3c                	jmp    100002b6 <_ssfn__zexpand+0x57>
1000027a:	80 3f 53             	cmp    BYTE PTR [edi],0x53
1000027d:	75 f7                	jne    10000276 <_ssfn__zexpand+0x17>
1000027f:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
10000283:	75 f1                	jne    10000276 <_ssfn__zexpand+0x17>
10000285:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000289:	75 eb                	jne    10000276 <_ssfn__zexpand+0x17>
1000028b:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
1000028e:	89 c3                	mov    ebx,eax
10000290:	89 d6                	mov    esi,edx
10000292:	50                   	push   eax
10000293:	50                   	push   eax
10000294:	55                   	push   ebp
10000295:	57                   	push   edi
10000296:	e8 fc ff ff ff       	call   10000297 <_ssfn__zexpand+0x38>	10000297: R_386_PC32	realloc
1000029b:	83 c4 10             	add    esp,0x10
1000029e:	85 c0                	test   eax,eax
100002a0:	74 d4                	je     10000276 <_ssfn__zexpand+0x17>
100002a2:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100002a5:	29 fe                	sub    esi,edi
100002a7:	01 c6                	add    esi,eax
100002a9:	01 e8                	add    eax,ebp
100002ab:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002ae:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002b1:	b8 01 00 00 00       	mov    eax,0x1
100002b6:	83 c4 0c             	add    esp,0xc
100002b9:	5b                   	pop    ebx
100002ba:	5e                   	pop    esi
100002bb:	5f                   	pop    edi
100002bc:	5d                   	pop    ebp
100002bd:	c3                   	ret    

100002be <_ssfn__zbuild_huffman>:
100002be:	55                   	push   ebp
100002bf:	57                   	push   edi
100002c0:	56                   	push   esi
100002c1:	53                   	push   ebx
100002c2:	89 c3                	mov    ebx,eax
100002c4:	81 ec a0 00 00 00    	sub    esp,0xa0
100002ca:	31 c0                	xor    eax,eax
100002cc:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002cf:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002d3:	b9 11 00 00 00       	mov    ecx,0x11
100002d8:	89 ef                	mov    edi,ebp
100002da:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002de:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002e0:	b9 00 01 00 00       	mov    ecx,0x100
100002e5:	89 df                	mov    edi,ebx
100002e7:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002e9:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002ec:	7d 0f                	jge    100002fd <_ssfn__zbuild_huffman+0x3f>
100002ee:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002f2:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002f6:	40                   	inc    eax
100002f7:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002fb:	eb ec                	jmp    100002e9 <_ssfn__zbuild_huffman+0x2b>
100002fd:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
10000305:	b9 01 00 00 00       	mov    ecx,0x1
1000030a:	b8 01 00 00 00       	mov    eax,0x1
1000030f:	89 c7                	mov    edi,eax
10000311:	d3 e7                	shl    edi,cl
10000313:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
10000317:	0f 8f 10 01 00 00    	jg     1000042d <_ssfn__zbuild_huffman+0x16f>
1000031d:	41                   	inc    ecx
1000031e:	83 f9 10             	cmp    ecx,0x10
10000321:	75 ec                	jne    1000030f <_ssfn__zbuild_huffman+0x51>
10000323:	31 ff                	xor    edi,edi
10000325:	31 f6                	xor    esi,esi
10000327:	b8 01 00 00 00       	mov    eax,0x1
1000032c:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000330:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
10000334:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
1000033c:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
10000344:	01 ef                	add    edi,ebp
10000346:	85 ed                	test   ebp,ebp
10000348:	74 11                	je     1000035b <_ssfn__zbuild_huffman+0x9d>
1000034a:	ba 01 00 00 00       	mov    edx,0x1
1000034f:	88 c1                	mov    cl,al
10000351:	d3 e2                	shl    edx,cl
10000353:	39 fa                	cmp    edx,edi
10000355:	0f 8c d2 00 00 00    	jl     1000042d <_ssfn__zbuild_huffman+0x16f>
1000035b:	89 fa                	mov    edx,edi
1000035d:	b9 10 00 00 00       	mov    ecx,0x10
10000362:	01 ff                	add    edi,edi
10000364:	29 c1                	sub    ecx,eax
10000366:	01 ee                	add    esi,ebp
10000368:	d3 e2                	shl    edx,cl
1000036a:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
10000371:	40                   	inc    eax
10000372:	83 f8 10             	cmp    eax,0x10
10000375:	75 b5                	jne    1000032c <_ssfn__zbuild_huffman+0x6e>
10000377:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000037a:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
10000384:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000388:	31 ff                	xor    edi,edi
1000038a:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
1000038e:	0f 8d 9d 00 00 00    	jge    10000431 <_ssfn__zbuild_huffman+0x173>
10000394:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000398:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
1000039c:	89 f2                	mov    edx,esi
1000039e:	85 f6                	test   esi,esi
100003a0:	0f 84 81 00 00 00    	je     10000427 <_ssfn__zbuild_huffman+0x169>
100003a6:	8d 0c 36             	lea    ecx,[esi+esi*1]
100003a9:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003ad:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003b0:	89 e9                	mov    ecx,ebp
100003b2:	89 04 24             	mov    DWORD PTR [esp],eax
100003b5:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003bc:	29 c1                	sub    ecx,eax
100003be:	89 c8                	mov    eax,ecx
100003c0:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003c3:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003ca:	01 c8                	add    eax,ecx
100003cc:	83 fe 09             	cmp    esi,0x9
100003cf:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003d6:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003de:	7f 42                	jg     10000422 <_ssfn__zbuild_huffman+0x164>
100003e0:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003e4:	89 e8                	mov    eax,ebp
100003e6:	e8 79 fd ff ff       	call   10000164 <_ssfn__bitreverse16>
100003eb:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003ef:	b9 10 00 00 00       	mov    ecx,0x10
100003f4:	29 f1                	sub    ecx,esi
100003f6:	d3 f8                	sar    eax,cl
100003f8:	88 d1                	mov    cl,dl
100003fa:	89 04 24             	mov    DWORD PTR [esp],eax
100003fd:	89 f2                	mov    edx,esi
100003ff:	b8 01 00 00 00       	mov    eax,0x1
10000404:	c1 e2 09             	shl    edx,0x9
10000407:	d3 e0                	shl    eax,cl
10000409:	09 fa                	or     edx,edi
1000040b:	89 c1                	mov    ecx,eax
1000040d:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
10000414:	7f 0c                	jg     10000422 <_ssfn__zbuild_huffman+0x164>
10000416:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000419:	01 0c 24             	add    DWORD PTR [esp],ecx
1000041c:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000420:	eb eb                	jmp    1000040d <_ssfn__zbuild_huffman+0x14f>
10000422:	45                   	inc    ebp
10000423:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
10000427:	47                   	inc    edi
10000428:	e9 5d ff ff ff       	jmp    1000038a <_ssfn__zbuild_huffman+0xcc>
1000042d:	31 c0                	xor    eax,eax
1000042f:	eb 05                	jmp    10000436 <_ssfn__zbuild_huffman+0x178>
10000431:	b8 01 00 00 00       	mov    eax,0x1
10000436:	81 c4 a0 00 00 00    	add    esp,0xa0
1000043c:	5b                   	pop    ebx
1000043d:	5e                   	pop    esi
1000043e:	5f                   	pop    edi
1000043f:	5d                   	pop    ebp
10000440:	c3                   	ret    

10000441 <_ssfn_fc.part.1>:
10000441:	55                   	push   ebp
10000442:	57                   	push   edi
10000443:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000449:	56                   	push   esi
1000044a:	53                   	push   ebx
1000044b:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000451:	83 ec 0c             	sub    esp,0xc
10000454:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10000457:	74 5d                	je     100004b6 <_ssfn_fc.part.1+0x75>
10000459:	31 f6                	xor    esi,esi
1000045b:	8b 03                	mov    eax,DWORD PTR [ebx]
1000045d:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
10000461:	74 35                	je     10000498 <_ssfn_fc.part.1+0x57>
10000463:	31 ed                	xor    ebp,ebp
10000465:	8b 03                	mov    eax,DWORD PTR [ebx]
10000467:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
1000046a:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
1000046d:	85 c0                	test   eax,eax
1000046f:	74 0c                	je     1000047d <_ssfn_fc.part.1+0x3c>
10000471:	83 ec 0c             	sub    esp,0xc
10000474:	50                   	push   eax
10000475:	e8 fc ff ff ff       	call   10000476 <_ssfn_fc.part.1+0x35>	10000476: R_386_PC32	free
1000047a:	83 c4 10             	add    esp,0x10
1000047d:	83 c5 04             	add    ebp,0x4
10000480:	81 fd 00 04 00 00    	cmp    ebp,0x400
10000486:	75 dd                	jne    10000465 <_ssfn_fc.part.1+0x24>
10000488:	83 ec 0c             	sub    esp,0xc
1000048b:	8b 03                	mov    eax,DWORD PTR [ebx]
1000048d:	ff 34 30             	push   DWORD PTR [eax+esi*1]
10000490:	e8 fc ff ff ff       	call   10000491 <_ssfn_fc.part.1+0x50>	10000491: R_386_PC32	free
10000495:	83 c4 10             	add    esp,0x10
10000498:	83 c6 04             	add    esi,0x4
1000049b:	81 fe 00 04 00 00    	cmp    esi,0x400
100004a1:	75 b8                	jne    1000045b <_ssfn_fc.part.1+0x1a>
100004a3:	83 ec 0c             	sub    esp,0xc
100004a6:	ff 33                	push   DWORD PTR [ebx]
100004a8:	e8 fc ff ff ff       	call   100004a9 <_ssfn_fc.part.1+0x68>	100004a9: R_386_PC32	free
100004ad:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004b3:	83 c4 10             	add    esp,0x10
100004b6:	83 c3 04             	add    ebx,0x4
100004b9:	39 fb                	cmp    ebx,edi
100004bb:	75 97                	jne    10000454 <_ssfn_fc.part.1+0x13>
100004bd:	83 c4 0c             	add    esp,0xc
100004c0:	5b                   	pop    ebx
100004c1:	5e                   	pop    esi
100004c2:	5f                   	pop    edi
100004c3:	5d                   	pop    ebp
100004c4:	c3                   	ret    

100004c5 <_ssfn_l>:
100004c5:	57                   	push   edi
100004c6:	56                   	push   esi
100004c7:	53                   	push   ebx
100004c8:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004cc:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004d0:	39 ce                	cmp    esi,ecx
100004d2:	89 f3                	mov    ebx,esi
100004d4:	0f 9d c1             	setge  cl
100004d7:	c1 eb 1f             	shr    ebx,0x1f
100004da:	09 d9                	or     ecx,ebx
100004dc:	89 fb                	mov    ebx,edi
100004de:	c1 eb 1f             	shr    ebx,0x1f
100004e1:	08 d9                	or     cl,bl
100004e3:	0f 85 e9 00 00 00    	jne    100005d2 <_ssfn_l+0x10d>
100004e9:	39 d7                	cmp    edi,edx
100004eb:	0f 8d e1 00 00 00    	jge    100005d2 <_ssfn_l+0x10d>
100004f1:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004f7:	8d 51 08             	lea    edx,[ecx+0x8]
100004fa:	8d 4f 08             	lea    ecx,[edi+0x8]
100004fd:	c1 fa 04             	sar    edx,0x4
10000500:	c1 f9 04             	sar    ecx,0x4
10000503:	39 ca                	cmp    edx,ecx
10000505:	75 1a                	jne    10000521 <_ssfn_l+0x5c>
10000507:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
1000050d:	8d 4e 08             	lea    ecx,[esi+0x8]
10000510:	83 c2 08             	add    edx,0x8
10000513:	c1 f9 04             	sar    ecx,0x4
10000516:	c1 fa 04             	sar    edx,0x4
10000519:	39 ca                	cmp    edx,ecx
1000051b:	0f 84 b1 00 00 00    	je     100005d2 <_ssfn_l+0x10d>
10000521:	89 c3                	mov    ebx,eax
10000523:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000529:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
1000052f:	7f 3e                	jg     1000056f <_ssfn_l+0xaa>
10000531:	05 00 02 00 00       	add    eax,0x200
10000536:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
1000053c:	52                   	push   edx
1000053d:	01 c0                	add    eax,eax
1000053f:	52                   	push   edx
10000540:	50                   	push   eax
10000541:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
10000547:	e8 fc ff ff ff       	call   10000548 <_ssfn_l+0x83>	10000548: R_386_PC32	realloc
1000054c:	83 c4 10             	add    esp,0x10
1000054f:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
10000555:	85 c0                	test   eax,eax
10000557:	75 16                	jne    1000056f <_ssfn_l+0xaa>
10000559:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
10000563:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
1000056d:	eb 63                	jmp    100005d2 <_ssfn_l+0x10d>
1000056f:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
10000576:	75 26                	jne    1000059e <_ssfn_l+0xd9>
10000578:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000057e:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
10000584:	66 89 10             	mov    WORD PTR [eax],dx
10000587:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000058d:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
10000593:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
10000597:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
1000059e:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005a4:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005aa:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005ae:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005b4:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005ba:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005bf:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005c5:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005cc:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005d2:	5b                   	pop    ebx
100005d3:	5e                   	pop    esi
100005d4:	5f                   	pop    edi
100005d5:	c3                   	ret    

100005d6 <_ssfn_b>:
100005d6:	55                   	push   ebp
100005d7:	57                   	push   edi
100005d8:	56                   	push   esi
100005d9:	53                   	push   ebx
100005da:	83 ec 4c             	sub    esp,0x4c
100005dd:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005e1:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005e5:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005e9:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005ed:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005f1:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005f5:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005f9:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005fd:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000601:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
10000605:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10000609:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
1000060d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000611:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10000615:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000619:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000620:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000624:	83 f8 04             	cmp    eax,0x4
10000627:	75 28                	jne    10000651 <_ssfn_b+0x7b>
10000629:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000062d:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000631:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10000635:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000639:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000063d:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000641:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000645:	83 c4 4c             	add    esp,0x4c
10000648:	5b                   	pop    ebx
10000649:	5e                   	pop    esi
1000064a:	5f                   	pop    edi
1000064b:	5d                   	pop    ebp
1000064c:	e9 74 fe ff ff       	jmp    100004c5 <_ssfn_l>
10000651:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000655:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000659:	75 0e                	jne    10000669 <_ssfn_b+0x93>
1000065b:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000065f:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000663:	0f 84 19 01 00 00    	je     10000782 <_ssfn_b+0x1ac>
10000669:	be 02 00 00 00       	mov    esi,0x2
1000066e:	89 d8                	mov    eax,ebx
10000670:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10000674:	99                   	cdq    
10000675:	f7 fe                	idiv   esi
10000677:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
1000067b:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000067f:	89 e8                	mov    eax,ebp
10000681:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000685:	99                   	cdq    
10000686:	f7 fe                	idiv   esi
10000688:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
1000068c:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000690:	89 f8                	mov    eax,edi
10000692:	29 d8                	sub    eax,ebx
10000694:	99                   	cdq    
10000695:	f7 fe                	idiv   esi
10000697:	01 c3                	add    ebx,eax
10000699:	89 c8                	mov    eax,ecx
1000069b:	29 e8                	sub    eax,ebp
1000069d:	99                   	cdq    
1000069e:	f7 fe                	idiv   esi
100006a0:	01 e8                	add    eax,ebp
100006a2:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006a6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006aa:	29 f8                	sub    eax,edi
100006ac:	99                   	cdq    
100006ad:	f7 fe                	idiv   esi
100006af:	01 f8                	add    eax,edi
100006b1:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006b5:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006b9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006bd:	29 c8                	sub    eax,ecx
100006bf:	99                   	cdq    
100006c0:	f7 fe                	idiv   esi
100006c2:	01 c8                	add    eax,ecx
100006c4:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006c8:	89 d8                	mov    eax,ebx
100006ca:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006ce:	99                   	cdq    
100006cf:	f7 fe                	idiv   esi
100006d1:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006d4:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006d8:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006dc:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006e0:	99                   	cdq    
100006e1:	f7 fe                	idiv   esi
100006e3:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006e6:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006ea:	29 d8                	sub    eax,ebx
100006ec:	99                   	cdq    
100006ed:	f7 fe                	idiv   esi
100006ef:	83 ec 0c             	sub    esp,0xc
100006f2:	01 d8                	add    eax,ebx
100006f4:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006f8:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006fc:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10000700:	99                   	cdq    
10000701:	f7 fe                	idiv   esi
10000703:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10000707:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000070b:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000070f:	29 c8                	sub    eax,ecx
10000711:	99                   	cdq    
10000712:	f7 fe                	idiv   esi
10000714:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000717:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000071b:	29 e8                	sub    eax,ebp
1000071d:	99                   	cdq    
1000071e:	f7 fe                	idiv   esi
10000720:	8d 34 28             	lea    esi,[eax+ebp*1]
10000723:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000727:	8d 78 01             	lea    edi,[eax+0x1]
1000072a:	57                   	push   edi
1000072b:	56                   	push   esi
1000072c:	53                   	push   ebx
1000072d:	55                   	push   ebp
1000072e:	51                   	push   ecx
1000072f:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000733:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000737:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
1000073b:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
1000073f:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
10000743:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000747:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000074b:	e8 86 fe ff ff       	call   100005d6 <_ssfn_b>
10000750:	83 c4 24             	add    esp,0x24
10000753:	57                   	push   edi
10000754:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000758:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
1000075c:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000760:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000764:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000768:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
1000076c:	56                   	push   esi
1000076d:	53                   	push   ebx
1000076e:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
10000772:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000776:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000077a:	e8 57 fe ff ff       	call   100005d6 <_ssfn_b>
1000077f:	83 c4 30             	add    esp,0x30
10000782:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10000787:	0f 85 9c fe ff ff    	jne    10000629 <_ssfn_b+0x53>
1000078d:	83 c4 4c             	add    esp,0x4c
10000790:	5b                   	pop    ebx
10000791:	5e                   	pop    esi
10000792:	5f                   	pop    edi
10000793:	5d                   	pop    ebp
10000794:	c3                   	ret    

10000795 <_ssfn__zreceive>:
10000795:	56                   	push   esi
10000796:	53                   	push   ebx
10000797:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
1000079a:	7d 1d                	jge    100007b9 <_ssfn__zreceive+0x24>
1000079c:	8b 18                	mov    ebx,DWORD PTR [eax]
1000079e:	8d 4b 01             	lea    ecx,[ebx+0x1]
100007a1:	89 08                	mov    DWORD PTR [eax],ecx
100007a3:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100007a6:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100007a9:	d3 e3                	shl    ebx,cl
100007ab:	83 c1 08             	add    ecx,0x8
100007ae:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007b1:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007b4:	83 f9 18             	cmp    ecx,0x18
100007b7:	7e e3                	jle    1000079c <_ssfn__zreceive+0x7>
100007b9:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007bc:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007bf:	89 f3                	mov    ebx,esi
100007c1:	88 d1                	mov    cl,dl
100007c3:	d3 eb                	shr    ebx,cl
100007c5:	88 d1                	mov    cl,dl
100007c7:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007ca:	bb 01 00 00 00       	mov    ebx,0x1
100007cf:	d3 e3                	shl    ebx,cl
100007d1:	8d 43 ff             	lea    eax,[ebx-0x1]
100007d4:	5b                   	pop    ebx
100007d5:	21 f0                	and    eax,esi
100007d7:	5e                   	pop    esi
100007d8:	c3                   	ret    

100007d9 <ssfn_utf8>:
100007d9:	56                   	push   esi
100007da:	53                   	push   ebx
100007db:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007df:	8b 11                	mov    edx,DWORD PTR [ecx]
100007e1:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007e4:	89 f0                	mov    eax,esi
100007e6:	84 c0                	test   al,al
100007e8:	0f be d8             	movsx  ebx,al
100007eb:	78 04                	js     100007f1 <ssfn_utf8+0x18>
100007ed:	89 d8                	mov    eax,ebx
100007ef:	eb 7d                	jmp    1000086e <ssfn_utf8+0x95>
100007f1:	f7 c6 20 00 00 00    	test   esi,0x20
100007f7:	75 14                	jne    1000080d <ssfn_utf8+0x34>
100007f9:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007fc:	c1 e3 06             	shl    ebx,0x6
100007ff:	83 e0 3f             	and    eax,0x3f
10000802:	81 e3 c0 07 00 00    	and    ebx,0x7c0
10000808:	42                   	inc    edx
10000809:	09 d8                	or     eax,ebx
1000080b:	eb 5f                	jmp    1000086c <ssfn_utf8+0x93>
1000080d:	f7 c6 10 00 00 00    	test   esi,0x10
10000813:	75 20                	jne    10000835 <ssfn_utf8+0x5c>
10000815:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000819:	c1 e3 0c             	shl    ebx,0xc
1000081c:	c1 e0 06             	shl    eax,0x6
1000081f:	0f b7 db             	movzx  ebx,bx
10000822:	25 c0 0f 00 00       	and    eax,0xfc0
10000827:	83 c2 02             	add    edx,0x2
1000082a:	09 d8                	or     eax,ebx
1000082c:	8a 1a                	mov    bl,BYTE PTR [edx]
1000082e:	83 e3 3f             	and    ebx,0x3f
10000831:	09 d8                	or     eax,ebx
10000833:	eb 37                	jmp    1000086c <ssfn_utf8+0x93>
10000835:	31 c0                	xor    eax,eax
10000837:	83 e6 08             	and    esi,0x8
1000083a:	75 32                	jne    1000086e <ssfn_utf8+0x95>
1000083c:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000840:	c1 e3 12             	shl    ebx,0x12
10000843:	c1 e0 0c             	shl    eax,0xc
10000846:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
1000084c:	25 00 f0 03 00       	and    eax,0x3f000
10000851:	83 c2 03             	add    edx,0x3
10000854:	09 d8                	or     eax,ebx
10000856:	8a 1a                	mov    bl,BYTE PTR [edx]
10000858:	83 e3 3f             	and    ebx,0x3f
1000085b:	09 d8                	or     eax,ebx
1000085d:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
10000861:	c1 e3 06             	shl    ebx,0x6
10000864:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
1000086a:	09 d8                	or     eax,ebx
1000086c:	89 11                	mov    DWORD PTR [ecx],edx
1000086e:	ff 01                	inc    DWORD PTR [ecx]
10000870:	5b                   	pop    ebx
10000871:	5e                   	pop    esi
10000872:	c3                   	ret    

10000873 <_ssfn_c>:
10000873:	55                   	push   ebp
10000874:	57                   	push   edi
10000875:	56                   	push   esi
10000876:	53                   	push   ebx
10000877:	83 ec 14             	sub    esp,0x14
1000087a:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
10000880:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000884:	85 c0                	test   eax,eax
10000886:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
1000088c:	0f 84 e6 00 00 00    	je     10000978 <_ssfn_c+0x105>
10000892:	31 ff                	xor    edi,edi
10000894:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000898:	0f 84 f3 00 00 00    	je     10000991 <_ssfn_c+0x11e>
1000089e:	85 d2                	test   edx,edx
100008a0:	0f 84 eb 00 00 00    	je     10000991 <_ssfn_c+0x11e>
100008a6:	80 3a 00             	cmp    BYTE PTR [edx],0x0
100008a9:	0f 84 e2 00 00 00    	je     10000991 <_ssfn_c+0x11e>
100008af:	89 d6                	mov    esi,edx
100008b1:	89 cd                	mov    ebp,ecx
100008b3:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008b6:	89 c3                	mov    ebx,eax
100008b8:	85 d2                	test   edx,edx
100008ba:	74 38                	je     100008f4 <_ssfn_c+0x81>
100008bc:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008bf:	31 c0                	xor    eax,eax
100008c1:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008c4:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008c7:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008cb:	66 85 d2             	test   dx,dx
100008ce:	74 24                	je     100008f4 <_ssfn_c+0x81>
100008d0:	01 da                	add    edx,ebx
100008d2:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008d6:	8a 0a                	mov    cl,BYTE PTR [edx]
100008d8:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008dc:	84 c9                	test   cl,cl
100008de:	0f 84 9e 00 00 00    	je     10000982 <_ssfn_c+0x10f>
100008e4:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008e6:	0f 85 90 00 00 00    	jne    1000097c <_ssfn_c+0x109>
100008ec:	47                   	inc    edi
100008ed:	42                   	inc    edx
100008ee:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008f2:	eb e2                	jmp    100008d6 <_ssfn_c+0x63>
100008f4:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008f8:	8d 44 24 10          	lea    eax,[esp+0x10]
100008fc:	50                   	push   eax
100008fd:	e8 fc ff ff ff       	call   100008fe <_ssfn_c+0x8b>	100008fe: R_386_PC32	ssfn_utf8
10000902:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10000906:	29 f2                	sub    edx,esi
10000908:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
1000090b:	5a                   	pop    edx
1000090c:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000910:	89 06                	mov    DWORD PTR [esi],eax
10000912:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
10000915:	89 df                	mov    edi,ebx
10000917:	31 db                	xor    ebx,ebx
10000919:	8a 17                	mov    dl,BYTE PTR [edi]
1000091b:	80 fa ff             	cmp    dl,0xff
1000091e:	75 08                	jne    10000928 <_ssfn_c+0xb5>
10000920:	81 c3 ff ff 00 00    	add    ebx,0xffff
10000926:	eb 2a                	jmp    10000952 <_ssfn_c+0xdf>
10000928:	88 d1                	mov    cl,dl
1000092a:	83 e1 c0             	and    ecx,0xffffffc0
1000092d:	80 f9 c0             	cmp    cl,0xc0
10000930:	75 16                	jne    10000948 <_ssfn_c+0xd5>
10000932:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000936:	c1 e2 08             	shl    edx,0x8
10000939:	83 c7 02             	add    edi,0x2
1000093c:	81 e2 00 3f 00 00    	and    edx,0x3f00
10000942:	09 ca                	or     edx,ecx
10000944:	01 d3                	add    ebx,edx
10000946:	eb 27                	jmp    1000096f <_ssfn_c+0xfc>
10000948:	80 f9 80             	cmp    cl,0x80
1000094b:	75 08                	jne    10000955 <_ssfn_c+0xe2>
1000094d:	83 e2 3f             	and    edx,0x3f
10000950:	01 d3                	add    ebx,edx
10000952:	47                   	inc    edi
10000953:	eb 1a                	jmp    1000096f <_ssfn_c+0xfc>
10000955:	39 d8                	cmp    eax,ebx
10000957:	74 38                	je     10000991 <_ssfn_c+0x11e>
10000959:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000095d:	83 e2 40             	and    edx,0x40
10000960:	80 fa 01             	cmp    dl,0x1
10000963:	19 d2                	sbb    edx,edx
10000965:	83 c2 06             	add    edx,0x6
10000968:	0f af d1             	imul   edx,ecx
1000096b:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
1000096f:	43                   	inc    ebx
10000970:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
10000976:	76 a1                	jbe    10000919 <_ssfn_c+0xa6>
10000978:	31 ff                	xor    edi,edi
1000097a:	eb 15                	jmp    10000991 <_ssfn_c+0x11e>
1000097c:	40                   	inc    eax
1000097d:	e9 42 ff ff ff       	jmp    100008c4 <_ssfn_c+0x51>
10000982:	29 f7                	sub    edi,esi
10000984:	05 00 f0 00 00       	add    eax,0xf000
10000989:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
1000098c:	e9 7b ff ff ff       	jmp    1000090c <_ssfn_c+0x99>
10000991:	83 c4 14             	add    esp,0x14
10000994:	89 f8                	mov    eax,edi
10000996:	5b                   	pop    ebx
10000997:	5e                   	pop    esi
10000998:	5f                   	pop    edi
10000999:	5d                   	pop    ebp
1000099a:	c3                   	ret    

1000099b <_ssfn_zlib_decode>:
1000099b:	55                   	push   ebp
1000099c:	57                   	push   edi
1000099d:	56                   	push   esi
1000099e:	53                   	push   ebx
1000099f:	81 ec c8 19 00 00    	sub    esp,0x19c8
100009a5:	6a 08                	push   0x8
100009a7:	e8 fc ff ff ff       	call   100009a8 <_ssfn_zlib_decode+0xd>	100009a8: R_386_PC32	malloc
100009ac:	83 c4 10             	add    esp,0x10
100009af:	89 c2                	mov    edx,eax
100009b1:	85 c0                	test   eax,eax
100009b3:	0f 84 eb 04 00 00    	je     10000ea4 <_ssfn_zlib_decode+0x509>
100009b9:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009c0:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009c7:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009ce:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009d5:	31 c0                	xor    eax,eax
100009d7:	83 c2 08             	add    edx,0x8
100009da:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009e1:	c6 80 80 4d 03 10 08 	mov    BYTE PTR [eax+0x10034d80],0x8	100009e3: R_386_32	.bss
100009e8:	40                   	inc    eax
100009e9:	3d 90 00 00 00       	cmp    eax,0x90
100009ee:	75 f1                	jne    100009e1 <_ssfn_zlib_decode+0x46>
100009f0:	c6 80 80 4d 03 10 09 	mov    BYTE PTR [eax+0x10034d80],0x9	100009f2: R_386_32	.bss
100009f7:	40                   	inc    eax
100009f8:	3d 00 01 00 00       	cmp    eax,0x100
100009fd:	75 f1                	jne    100009f0 <_ssfn_zlib_decode+0x55>
100009ff:	c6 80 80 4d 03 10 07 	mov    BYTE PTR [eax+0x10034d80],0x7	10000a01: R_386_32	.bss
10000a06:	40                   	inc    eax
10000a07:	3d 18 01 00 00       	cmp    eax,0x118
10000a0c:	75 f1                	jne    100009ff <_ssfn_zlib_decode+0x64>
10000a0e:	c7 05 98 4e 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034e98,0x8080808	10000a10: R_386_32	.bss
10000a18:	c7 05 9c 4e 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034e9c,0x8080808	10000a1a: R_386_32	.bss
10000a22:	31 c0                	xor    eax,eax
10000a24:	c6 80 60 4d 03 10 05 	mov    BYTE PTR [eax+0x10034d60],0x5	10000a26: R_386_32	.bss
10000a2b:	40                   	inc    eax
10000a2c:	83 f8 20             	cmp    eax,0x20
10000a2f:	75 f3                	jne    10000a24 <_ssfn_zlib_decode+0x89>
10000a31:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a3c:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a47:	ba 01 00 00 00       	mov    edx,0x1
10000a4c:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a53:	e8 3d fd ff ff       	call   10000795 <_ssfn__zreceive>
10000a58:	ba 02 00 00 00       	mov    edx,0x2
10000a5d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a61:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a68:	e8 28 fd ff ff       	call   10000795 <_ssfn__zreceive>
10000a6d:	89 c6                	mov    esi,eax
10000a6f:	85 c0                	test   eax,eax
10000a71:	0f 85 09 01 00 00    	jne    10000b80 <_ssfn_zlib_decode+0x1e5>
10000a77:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a7e:	83 e2 07             	and    edx,0x7
10000a81:	74 0c                	je     10000a8f <_ssfn_zlib_decode+0xf4>
10000a83:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a8a:	e8 06 fd ff ff       	call   10000795 <_ssfn__zreceive>
10000a8f:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a96:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a9d:	31 c0                	xor    eax,eax
10000a9f:	31 db                	xor    ebx,ebx
10000aa1:	85 d2                	test   edx,edx
10000aa3:	7f 14                	jg     10000ab9 <_ssfn_zlib_decode+0x11e>
10000aa5:	84 db                	test   bl,bl
10000aa7:	74 22                	je     10000acb <_ssfn_zlib_decode+0x130>
10000aa9:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000ab0:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000ab7:	eb 12                	jmp    10000acb <_ssfn_zlib_decode+0x130>
10000ab9:	40                   	inc    eax
10000aba:	83 ea 08             	sub    edx,0x8
10000abd:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000ac4:	b3 01                	mov    bl,0x1
10000ac6:	c1 e9 08             	shr    ecx,0x8
10000ac9:	eb d6                	jmp    10000aa1 <_ssfn_zlib_decode+0x106>
10000acb:	83 f8 04             	cmp    eax,0x4
10000ace:	74 1d                	je     10000aed <_ssfn_zlib_decode+0x152>
10000ad0:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000ad7:	40                   	inc    eax
10000ad8:	8d 4a 01             	lea    ecx,[edx+0x1]
10000adb:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ae2:	8a 12                	mov    dl,BYTE PTR [edx]
10000ae4:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000aeb:	eb de                	jmp    10000acb <_ssfn_zlib_decode+0x130>
10000aed:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000af5:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000afd:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000b05:	c1 e3 08             	shl    ebx,0x8
10000b08:	01 c3                	add    ebx,eax
10000b0a:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b12:	c1 e0 08             	shl    eax,0x8
10000b15:	01 d0                	add    eax,edx
10000b17:	89 da                	mov    edx,ebx
10000b19:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b1f:	39 d0                	cmp    eax,edx
10000b21:	0f 85 69 03 00 00    	jne    10000e90 <_ssfn_zlib_decode+0x4f5>
10000b27:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b2e:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b31:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b38:	73 14                	jae    10000b4e <_ssfn_zlib_decode+0x1b3>
10000b3a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b41:	e8 19 f7 ff ff       	call   1000025f <_ssfn__zexpand>
10000b46:	85 c0                	test   eax,eax
10000b48:	0f 84 42 03 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000b4e:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b55:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b5c:	39 f3                	cmp    ebx,esi
10000b5e:	74 09                	je     10000b69 <_ssfn_zlib_decode+0x1ce>
10000b60:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b63:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b66:	46                   	inc    esi
10000b67:	eb e5                	jmp    10000b4e <_ssfn_zlib_decode+0x1b3>
10000b69:	01 da                	add    edx,ebx
10000b6b:	01 c3                	add    ebx,eax
10000b6d:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b74:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b7b:	e9 fc 02 00 00       	jmp    10000e7c <_ssfn_zlib_decode+0x4e1>
10000b80:	83 f8 03             	cmp    eax,0x3
10000b83:	0f 84 07 03 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000b89:	4e                   	dec    esi
10000b8a:	75 2d                	jne    10000bb9 <_ssfn_zlib_decode+0x21e>
10000b8c:	b9 20 01 00 00       	mov    ecx,0x120
10000b91:	ba 80 4d 03 10       	mov    edx,0x10034d80	10000b92: R_386_32	.bss
10000b96:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b9d:	e8 1c f7 ff ff       	call   100002be <_ssfn__zbuild_huffman>
10000ba2:	85 c0                	test   eax,eax
10000ba4:	0f 84 e6 02 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000baa:	b9 20 00 00 00       	mov    ecx,0x20
10000baf:	ba 60 4d 03 10       	mov    edx,0x10034d60	10000bb0: R_386_32	.bss
10000bb4:	e9 78 01 00 00       	jmp    10000d31 <_ssfn_zlib_decode+0x396>
10000bb9:	ba 05 00 00 00       	mov    edx,0x5
10000bbe:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bc5:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bc9:	e8 c7 fb ff ff       	call   10000795 <_ssfn__zreceive>
10000bce:	89 df                	mov    edi,ebx
10000bd0:	ba 05 00 00 00       	mov    edx,0x5
10000bd5:	89 c5                	mov    ebp,eax
10000bd7:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bde:	e8 b2 fb ff ff       	call   10000795 <_ssfn__zreceive>
10000be3:	ba 04 00 00 00       	mov    edx,0x4
10000be8:	89 c6                	mov    esi,eax
10000bea:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bf1:	e8 9f fb ff ff       	call   10000795 <_ssfn__zreceive>
10000bf6:	b9 13 00 00 00       	mov    ecx,0x13
10000bfb:	83 c0 04             	add    eax,0x4
10000bfe:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c02:	31 c0                	xor    eax,eax
10000c04:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000c06:	31 ff                	xor    edi,edi
10000c08:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c0c:	7e 1f                	jle    10000c2d <_ssfn_zlib_decode+0x292>
10000c0e:	ba 03 00 00 00       	mov    edx,0x3
10000c13:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c1a:	47                   	inc    edi
10000c1b:	e8 75 fb ff ff       	call   10000795 <_ssfn__zreceive>
10000c20:	0f b6 97 ff 49 00 10 	movzx  edx,BYTE PTR [edi+0x100049ff]	10000c23: R_386_32	.text
10000c27:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c2b:	eb db                	jmp    10000c08 <_ssfn_zlib_decode+0x26d>
10000c2d:	b9 13 00 00 00       	mov    ecx,0x13
10000c32:	89 da                	mov    edx,ebx
10000c34:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c3b:	e8 7e f6 ff ff       	call   100002be <_ssfn__zbuild_huffman>
10000c40:	85 c0                	test   eax,eax
10000c42:	0f 84 48 02 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000c48:	8d 46 01             	lea    eax,[esi+0x1]
10000c4b:	81 c5 01 01 00 00    	add    ebp,0x101
10000c51:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c55:	31 f6                	xor    esi,esi
10000c57:	01 e8                	add    eax,ebp
10000c59:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c5d:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c61:	0f 8e 9f 00 00 00    	jle    10000d06 <_ssfn_zlib_decode+0x36b>
10000c67:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c6e:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c75:	e8 35 f5 ff ff       	call   100001af <_ssfn__zhuffman_decode>
10000c7a:	83 f8 12             	cmp    eax,0x12
10000c7d:	0f 87 0d 02 00 00    	ja     10000e90 <_ssfn_zlib_decode+0x4f5>
10000c83:	83 f8 0f             	cmp    eax,0xf
10000c86:	7f 07                	jg     10000c8f <_ssfn_zlib_decode+0x2f4>
10000c88:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c8c:	46                   	inc    esi
10000c8d:	eb ce                	jmp    10000c5d <_ssfn_zlib_decode+0x2c2>
10000c8f:	83 f8 10             	cmp    eax,0x10
10000c92:	75 22                	jne    10000cb6 <_ssfn_zlib_decode+0x31b>
10000c94:	ba 02 00 00 00       	mov    edx,0x2
10000c99:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ca0:	e8 f0 fa ff ff       	call   10000795 <_ssfn__zreceive>
10000ca5:	85 f6                	test   esi,esi
10000ca7:	8d 58 03             	lea    ebx,[eax+0x3]
10000caa:	0f 84 e0 01 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000cb0:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000cb4:	eb 31                	jmp    10000ce7 <_ssfn_zlib_decode+0x34c>
10000cb6:	83 f8 11             	cmp    eax,0x11
10000cb9:	75 16                	jne    10000cd1 <_ssfn_zlib_decode+0x336>
10000cbb:	ba 03 00 00 00       	mov    edx,0x3
10000cc0:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cc7:	e8 c9 fa ff ff       	call   10000795 <_ssfn__zreceive>
10000ccc:	8d 58 03             	lea    ebx,[eax+0x3]
10000ccf:	eb 14                	jmp    10000ce5 <_ssfn_zlib_decode+0x34a>
10000cd1:	ba 07 00 00 00       	mov    edx,0x7
10000cd6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cdd:	e8 b3 fa ff ff       	call   10000795 <_ssfn__zreceive>
10000ce2:	8d 58 0b             	lea    ebx,[eax+0xb]
10000ce5:	31 c0                	xor    eax,eax
10000ce7:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000ceb:	29 f2                	sub    edx,esi
10000ced:	39 da                	cmp    edx,ebx
10000cef:	0f 8c 9b 01 00 00    	jl     10000e90 <_ssfn_zlib_decode+0x4f5>
10000cf5:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000cf9:	89 d9                	mov    ecx,ebx
10000cfb:	89 d7                	mov    edi,edx
10000cfd:	01 de                	add    esi,ebx
10000cff:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000d01:	e9 57 ff ff ff       	jmp    10000c5d <_ssfn_zlib_decode+0x2c2>
10000d06:	0f 85 84 01 00 00    	jne    10000e90 <_ssfn_zlib_decode+0x4f5>
10000d0c:	89 e9                	mov    ecx,ebp
10000d0e:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d12:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d19:	e8 a0 f5 ff ff       	call   100002be <_ssfn__zbuild_huffman>
10000d1e:	85 c0                	test   eax,eax
10000d20:	0f 84 6a 01 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000d26:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d2a:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d2e:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d31:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d38:	e8 81 f5 ff ff       	call   100002be <_ssfn__zbuild_huffman>
10000d3d:	85 c0                	test   eax,eax
10000d3f:	0f 84 4b 01 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000d45:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d4c:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d53:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d5a:	e8 50 f4 ff ff       	call   100001af <_ssfn__zhuffman_decode>
10000d5f:	89 c3                	mov    ebx,eax
10000d61:	3d ff 00 00 00       	cmp    eax,0xff
10000d66:	7f 34                	jg     10000d9c <_ssfn_zlib_decode+0x401>
10000d68:	85 c0                	test   eax,eax
10000d6a:	0f 88 20 01 00 00    	js     10000e90 <_ssfn_zlib_decode+0x4f5>
10000d70:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d77:	77 1d                	ja     10000d96 <_ssfn_zlib_decode+0x3fb>
10000d79:	89 ea                	mov    edx,ebp
10000d7b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d82:	e8 d8 f4 ff ff       	call   1000025f <_ssfn__zexpand>
10000d87:	85 c0                	test   eax,eax
10000d89:	0f 84 01 01 00 00    	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000d8f:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d96:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d99:	45                   	inc    ebp
10000d9a:	eb b0                	jmp    10000d4c <_ssfn_zlib_decode+0x3b1>
10000d9c:	3d 00 01 00 00       	cmp    eax,0x100
10000da1:	75 0c                	jne    10000daf <_ssfn_zlib_decode+0x414>
10000da3:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000daa:	e9 cd 00 00 00       	jmp    10000e7c <_ssfn_zlib_decode+0x4e1>
10000daf:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000db5:	8b 14 85 20 4b 00 10 	mov    edx,DWORD PTR [eax*4+0x10004b20]	10000db8: R_386_32	.text
10000dbc:	8b 1c 85 a0 4b 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004ba0]	10000dbf: R_386_32	.text
10000dc3:	85 d2                	test   edx,edx
10000dc5:	74 0e                	je     10000dd5 <_ssfn_zlib_decode+0x43a>
10000dc7:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dce:	e8 c2 f9 ff ff       	call   10000795 <_ssfn__zreceive>
10000dd3:	01 c3                	add    ebx,eax
10000dd5:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000ddc:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000de3:	e8 c7 f3 ff ff       	call   100001af <_ssfn__zhuffman_decode>
10000de8:	85 c0                	test   eax,eax
10000dea:	0f 88 a0 00 00 00    	js     10000e90 <_ssfn_zlib_decode+0x4f5>
10000df0:	8b 14 85 20 4a 00 10 	mov    edx,DWORD PTR [eax*4+0x10004a20]	10000df3: R_386_32	.text
10000df7:	8b 3c 85 a0 4a 00 10 	mov    edi,DWORD PTR [eax*4+0x10004aa0]	10000dfa: R_386_32	.text
10000dfe:	85 d2                	test   edx,edx
10000e00:	74 0e                	je     10000e10 <_ssfn_zlib_decode+0x475>
10000e02:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e09:	e8 87 f9 ff ff       	call   10000795 <_ssfn__zreceive>
10000e0e:	01 c7                	add    edi,eax
10000e10:	89 e8                	mov    eax,ebp
10000e12:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e19:	39 f8                	cmp    eax,edi
10000e1b:	7c 73                	jl     10000e90 <_ssfn_zlib_decode+0x4f5>
10000e1d:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e21:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e28:	73 19                	jae    10000e43 <_ssfn_zlib_decode+0x4a8>
10000e2a:	89 ea                	mov    edx,ebp
10000e2c:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e33:	e8 27 f4 ff ff       	call   1000025f <_ssfn__zexpand>
10000e38:	85 c0                	test   eax,eax
10000e3a:	74 54                	je     10000e90 <_ssfn_zlib_decode+0x4f5>
10000e3c:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e43:	89 ee                	mov    esi,ebp
10000e45:	29 fe                	sub    esi,edi
10000e47:	4f                   	dec    edi
10000e48:	75 19                	jne    10000e63 <_ssfn_zlib_decode+0x4c8>
10000e4a:	85 db                	test   ebx,ebx
10000e4c:	0f 84 fa fe ff ff    	je     10000d4c <_ssfn_zlib_decode+0x3b1>
10000e52:	8a 06                	mov    al,BYTE PTR [esi]
10000e54:	01 eb                	add    ebx,ebp
10000e56:	45                   	inc    ebp
10000e57:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e5a:	39 dd                	cmp    ebp,ebx
10000e5c:	75 f8                	jne    10000e56 <_ssfn_zlib_decode+0x4bb>
10000e5e:	e9 e9 fe ff ff       	jmp    10000d4c <_ssfn_zlib_decode+0x3b1>
10000e63:	85 db                	test   ebx,ebx
10000e65:	0f 84 e1 fe ff ff    	je     10000d4c <_ssfn_zlib_decode+0x3b1>
10000e6b:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e6e:	89 ef                	mov    edi,ebp
10000e70:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e71:	39 f0                	cmp    eax,esi
10000e73:	75 fb                	jne    10000e70 <_ssfn_zlib_decode+0x4d5>
10000e75:	01 dd                	add    ebp,ebx
10000e77:	e9 d0 fe ff ff       	jmp    10000d4c <_ssfn_zlib_decode+0x3b1>
10000e7c:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e81:	0f 84 c0 fb ff ff    	je     10000a47 <_ssfn_zlib_decode+0xac>
10000e87:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e8e:	eb 14                	jmp    10000ea4 <_ssfn_zlib_decode+0x509>
10000e90:	83 ec 0c             	sub    esp,0xc
10000e93:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e9a:	e8 fc ff ff ff       	call   10000e9b <_ssfn_zlib_decode+0x500>	10000e9b: R_386_PC32	free
10000e9f:	83 c4 10             	add    esp,0x10
10000ea2:	31 c0                	xor    eax,eax
10000ea4:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000eaa:	5b                   	pop    ebx
10000eab:	5e                   	pop    esi
10000eac:	5f                   	pop    edi
10000ead:	5d                   	pop    ebp
10000eae:	c3                   	ret    

10000eaf <ssfn_load>:
10000eaf:	55                   	push   ebp
10000eb0:	57                   	push   edi
10000eb1:	56                   	push   esi
10000eb2:	53                   	push   ebx
10000eb3:	83 ec 1c             	sub    esp,0x1c
10000eb6:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000eba:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000ebe:	85 ff                	test   edi,edi
10000ec0:	0f 84 d0 01 00 00    	je     10001096 <ssfn_load+0x1e7>
10000ec6:	85 f6                	test   esi,esi
10000ec8:	0f 84 c8 01 00 00    	je     10001096 <ssfn_load+0x1e7>
10000ece:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ed1:	0f 85 a8 00 00 00    	jne    10000f7f <ssfn_load+0xd0>
10000ed7:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000edb:	0f 85 9e 00 00 00    	jne    10000f7f <ssfn_load+0xd0>
10000ee1:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000ee5:	74 0a                	je     10000ef1 <ssfn_load+0x42>
10000ee7:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000eec:	e9 aa 01 00 00       	jmp    1000109b <ssfn_load+0x1ec>
10000ef1:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000ef4:	a8 04                	test   al,0x4
10000ef6:	75 05                	jne    10000efd <ssfn_load+0x4e>
10000ef8:	83 c6 0a             	add    esi,0xa
10000efb:	eb 08                	jmp    10000f05 <ssfn_load+0x56>
10000efd:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000f01:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000f05:	a8 08                	test   al,0x8
10000f07:	74 07                	je     10000f10 <ssfn_load+0x61>
10000f09:	46                   	inc    esi
10000f0a:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f0e:	eb f7                	jmp    10000f07 <ssfn_load+0x58>
10000f10:	a8 10                	test   al,0x10
10000f12:	74 07                	je     10000f1b <ssfn_load+0x6c>
10000f14:	46                   	inc    esi
10000f15:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f19:	eb f7                	jmp    10000f12 <ssfn_load+0x63>
10000f1b:	83 ec 0c             	sub    esp,0xc
10000f1e:	56                   	push   esi
10000f1f:	e8 fc ff ff ff       	call   10000f20 <ssfn_load+0x71>	10000f20: R_386_PC32	_ssfn_zlib_decode
10000f24:	83 c4 10             	add    esp,0x10
10000f27:	89 c6                	mov    esi,eax
10000f29:	85 c0                	test   eax,eax
10000f2b:	74 ba                	je     10000ee7 <ssfn_load+0x38>
10000f2d:	50                   	push   eax
10000f2e:	50                   	push   eax
10000f2f:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f35:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f3c:	50                   	push   eax
10000f3d:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f43:	e8 fc ff ff ff       	call   10000f44 <ssfn_load+0x95>	10000f44: R_386_PC32	realloc
10000f48:	83 c4 10             	add    esp,0x10
10000f4b:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f51:	85 c0                	test   eax,eax
10000f53:	75 0f                	jne    10000f64 <ssfn_load+0xb5>
10000f55:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f5f:	e9 1a 01 00 00       	jmp    1000107e <ssfn_load+0x1cf>
10000f64:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f6a:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f6d:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f73:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f76:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f79:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f7f:	50                   	push   eax
10000f80:	6a 04                	push   0x4
10000f82:	68 cf 48 00 10       	push   0x100048cf	10000f83: R_386_32	.text
10000f87:	56                   	push   esi
10000f88:	e8 fc ff ff ff       	call   10000f89 <ssfn_load+0xda>	10000f89: R_386_PC32	memcmp
10000f8d:	83 c4 10             	add    esp,0x10
10000f90:	89 c5                	mov    ebp,eax
10000f92:	85 c0                	test   eax,eax
10000f94:	75 29                	jne    10000fbf <ssfn_load+0x110>
10000f96:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f99:	01 f3                	add    ebx,esi
10000f9b:	83 c6 08             	add    esi,0x8
10000f9e:	39 de                	cmp    esi,ebx
10000fa0:	0f 83 f5 00 00 00    	jae    1000109b <ssfn_load+0x1ec>
10000fa6:	50                   	push   eax
10000fa7:	50                   	push   eax
10000fa8:	56                   	push   esi
10000fa9:	57                   	push   edi
10000faa:	e8 fc ff ff ff       	call   10000fab <ssfn_load+0xfc>	10000fab: R_386_PC32	ssfn_load
10000faf:	83 c4 10             	add    esp,0x10
10000fb2:	85 c0                	test   eax,eax
10000fb4:	0f 85 e1 00 00 00    	jne    1000109b <ssfn_load+0x1ec>
10000fba:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fbd:	eb df                	jmp    10000f9e <ssfn_load+0xef>
10000fbf:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fc2:	83 e0 0f             	and    eax,0xf
10000fc5:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fc9:	53                   	push   ebx
10000fca:	6a 04                	push   0x4
10000fcc:	68 d4 48 00 10       	push   0x100048d4	10000fcd: R_386_32	.text
10000fd1:	56                   	push   esi
10000fd2:	e8 fc ff ff ff       	call   10000fd3 <ssfn_load+0x124>	10000fd3: R_386_PC32	memcmp
10000fd7:	83 c4 10             	add    esp,0x10
10000fda:	89 c5                	mov    ebp,eax
10000fdc:	85 c0                	test   eax,eax
10000fde:	0f 85 03 ff ff ff    	jne    10000ee7 <ssfn_load+0x38>
10000fe4:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fe7:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000feb:	51                   	push   ecx
10000fec:	6a 04                	push   0x4
10000fee:	68 d9 48 00 10       	push   0x100048d9	10000fef: R_386_32	.text
10000ff3:	50                   	push   eax
10000ff4:	e8 fc ff ff ff       	call   10000ff5 <ssfn_load+0x146>	10000ff5: R_386_PC32	memcmp
10000ff9:	83 c4 10             	add    esp,0x10
10000ffc:	85 c0                	test   eax,eax
10000ffe:	0f 85 e3 fe ff ff    	jne    10000ee7 <ssfn_load+0x38>
10001004:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10001009:	0f 87 d8 fe ff ff    	ja     10000ee7 <ssfn_load+0x38>
1000100f:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10001013:	39 cb                	cmp    ebx,ecx
10001015:	0f 86 cc fe ff ff    	jbe    10000ee7 <ssfn_load+0x38>
1000101b:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
1000101e:	39 c3                	cmp    ebx,eax
10001020:	0f 86 c1 fe ff ff    	jbe    10000ee7 <ssfn_load+0x38>
10001026:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001029:	0f 86 b8 fe ff ff    	jbe    10000ee7 <ssfn_load+0x38>
1000102f:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
10001032:	0f 86 af fe ff ff    	jbe    10000ee7 <ssfn_load+0x38>
10001038:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
1000103b:	0f 86 a6 fe ff ff    	jbe    10000ee7 <ssfn_load+0x38>
10001041:	39 c1                	cmp    ecx,eax
10001043:	0f 83 9e fe ff ff    	jae    10000ee7 <ssfn_load+0x38>
10001049:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
1000104e:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001051:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
10001057:	40                   	inc    eax
10001058:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
1000105e:	52                   	push   edx
1000105f:	c1 e0 02             	shl    eax,0x2
10001062:	52                   	push   edx
10001063:	50                   	push   eax
10001064:	ff 33                	push   DWORD PTR [ebx]
10001066:	e8 fc ff ff ff       	call   10001067 <ssfn_load+0x1b8>	10001067: R_386_PC32	realloc
1000106b:	83 c4 10             	add    esp,0x10
1000106e:	89 03                	mov    DWORD PTR [ebx],eax
10001070:	85 c0                	test   eax,eax
10001072:	75 0f                	jne    10001083 <ssfn_load+0x1d4>
10001074:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
1000107e:	83 cd ff             	or     ebp,0xffffffff
10001081:	eb 18                	jmp    1000109b <ssfn_load+0x1ec>
10001083:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001089:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
1000108d:	89 f8                	mov    eax,edi
1000108f:	e8 ad f3 ff ff       	call   10000441 <_ssfn_fc.part.1>
10001094:	eb 05                	jmp    1000109b <ssfn_load+0x1ec>
10001096:	bd fc ff ff ff       	mov    ebp,0xfffffffc
1000109b:	83 c4 1c             	add    esp,0x1c
1000109e:	89 e8                	mov    eax,ebp
100010a0:	5b                   	pop    ebx
100010a1:	5e                   	pop    esi
100010a2:	5f                   	pop    edi
100010a3:	5d                   	pop    ebp
100010a4:	c3                   	ret    

100010a5 <ssfn_free>:
100010a5:	57                   	push   edi
100010a6:	56                   	push   esi
100010a7:	53                   	push   ebx
100010a8:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010ac:	85 db                	test   ebx,ebx
100010ae:	74 7e                	je     1000112e <ssfn_free+0x89>
100010b0:	89 d8                	mov    eax,ebx
100010b2:	e8 8a f3 ff ff       	call   10000441 <_ssfn_fc.part.1>
100010b7:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010be:	74 32                	je     100010f2 <ssfn_free+0x4d>
100010c0:	31 f6                	xor    esi,esi
100010c2:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010c8:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010ce:	7e 16                	jle    100010e6 <ssfn_free+0x41>
100010d0:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010d3:	85 c0                	test   eax,eax
100010d5:	74 0c                	je     100010e3 <ssfn_free+0x3e>
100010d7:	83 ec 0c             	sub    esp,0xc
100010da:	50                   	push   eax
100010db:	e8 fc ff ff ff       	call   100010dc <ssfn_free+0x37>	100010dc: R_386_PC32	free
100010e0:	83 c4 10             	add    esp,0x10
100010e3:	46                   	inc    esi
100010e4:	eb dc                	jmp    100010c2 <ssfn_free+0x1d>
100010e6:	83 ec 0c             	sub    esp,0xc
100010e9:	50                   	push   eax
100010ea:	e8 fc ff ff ff       	call   100010eb <ssfn_free+0x46>	100010eb: R_386_PC32	free
100010ef:	83 c4 10             	add    esp,0x10
100010f2:	31 f6                	xor    esi,esi
100010f4:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010f7:	85 c0                	test   eax,eax
100010f9:	74 0c                	je     10001107 <ssfn_free+0x62>
100010fb:	83 ec 0c             	sub    esp,0xc
100010fe:	50                   	push   eax
100010ff:	e8 fc ff ff ff       	call   10001100 <ssfn_free+0x5b>	10001100: R_386_PC32	free
10001104:	83 c4 10             	add    esp,0x10
10001107:	46                   	inc    esi
10001108:	83 fe 05             	cmp    esi,0x5
1000110b:	75 e7                	jne    100010f4 <ssfn_free+0x4f>
1000110d:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10001113:	85 c0                	test   eax,eax
10001115:	74 0c                	je     10001123 <ssfn_free+0x7e>
10001117:	83 ec 0c             	sub    esp,0xc
1000111a:	50                   	push   eax
1000111b:	e8 fc ff ff ff       	call   1000111c <ssfn_free+0x77>	1000111c: R_386_PC32	free
10001120:	83 c4 10             	add    esp,0x10
10001123:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001128:	31 c0                	xor    eax,eax
1000112a:	89 df                	mov    edi,ebx
1000112c:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000112e:	5b                   	pop    ebx
1000112f:	5e                   	pop    esi
10001130:	5f                   	pop    edi
10001131:	c3                   	ret    

10001132 <ssfn_mem>:
10001132:	55                   	push   ebp
10001133:	31 c0                	xor    eax,eax
10001135:	57                   	push   edi
10001136:	56                   	push   esi
10001137:	53                   	push   ebx
10001138:	83 ec 08             	sub    esp,0x8
1000113b:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000113f:	85 d2                	test   edx,edx
10001141:	0f 84 8e 00 00 00    	je     100011d5 <ssfn_mem+0xa3>
10001147:	b8 c8 f5 00 00       	mov    eax,0xf5c8
1000114c:	31 c9                	xor    ecx,ecx
1000114e:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10001155:	41                   	inc    ecx
10001156:	8d 04 98             	lea    eax,[eax+ebx*4]
10001159:	83 f9 05             	cmp    ecx,0x5
1000115c:	75 f0                	jne    1000114e <ssfn_mem+0x1c>
1000115e:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
10001164:	31 c9                	xor    ecx,ecx
10001166:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
1000116d:	89 34 24             	mov    DWORD PTR [esp],esi
10001170:	85 f6                	test   esi,esi
10001172:	74 48                	je     100011bc <ssfn_mem+0x8a>
10001174:	31 db                	xor    ebx,ebx
10001176:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001179:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
1000117c:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
10001180:	85 ff                	test   edi,edi
10001182:	74 2a                	je     100011ae <ssfn_mem+0x7c>
10001184:	31 f6                	xor    esi,esi
10001186:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
1000118a:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
1000118d:	85 ed                	test   ebp,ebp
1000118f:	74 0f                	je     100011a0 <ssfn_mem+0x6e>
10001191:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
10001195:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001199:	0f af fd             	imul   edi,ebp
1000119c:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
100011a0:	46                   	inc    esi
100011a1:	81 fe 00 01 00 00    	cmp    esi,0x100
100011a7:	75 dd                	jne    10001186 <ssfn_mem+0x54>
100011a9:	05 00 04 00 00       	add    eax,0x400
100011ae:	43                   	inc    ebx
100011af:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011b5:	75 bf                	jne    10001176 <ssfn_mem+0x44>
100011b7:	05 00 04 00 00       	add    eax,0x400
100011bc:	41                   	inc    ecx
100011bd:	83 f9 11             	cmp    ecx,0x11
100011c0:	75 a4                	jne    10001166 <ssfn_mem+0x34>
100011c2:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011c9:	74 0a                	je     100011d5 <ssfn_mem+0xa3>
100011cb:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011d1:	01 d2                	add    edx,edx
100011d3:	01 d0                	add    eax,edx
100011d5:	83 c4 08             	add    esp,0x8
100011d8:	5b                   	pop    ebx
100011d9:	5e                   	pop    esi
100011da:	5f                   	pop    edi
100011db:	5d                   	pop    ebp
100011dc:	c3                   	ret    

100011dd <ssfn_select>:
100011dd:	55                   	push   ebp
100011de:	57                   	push   edi
100011df:	56                   	push   esi
100011e0:	53                   	push   ebx
100011e1:	83 ec 1c             	sub    esp,0x1c
100011e4:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011e8:	85 db                	test   ebx,ebx
100011ea:	75 0a                	jne    100011f6 <ssfn_select+0x19>
100011ec:	be fc ff ff ff       	mov    esi,0xfffffffc
100011f1:	e9 13 01 00 00       	jmp    10001309 <ssfn_select+0x12c>
100011f6:	89 d8                	mov    eax,ebx
100011f8:	e8 44 f2 ff ff       	call   10000441 <_ssfn_fc.part.1>
100011fd:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10001201:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
10001207:	0f 85 e9 00 00 00    	jne    100012f6 <ssfn_select+0x119>
1000120d:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001211:	83 e8 08             	sub    eax,0x8
10001214:	3d b8 00 00 00       	cmp    eax,0xb8
10001219:	0f 87 de 00 00 00    	ja     100012fd <ssfn_select+0x120>
1000121f:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
10001227:	75 76                	jne    1000129f <ssfn_select+0xc2>
10001229:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000122e:	74 bc                	je     100011ec <ssfn_select+0xf>
10001230:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001234:	80 38 00             	cmp    BYTE PTR [eax],0x0
10001237:	74 b3                	je     100011ec <ssfn_select+0xf>
10001239:	31 ed                	xor    ebp,ebp
1000123b:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000123f:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
10001243:	74 03                	je     10001248 <ssfn_select+0x6b>
10001245:	45                   	inc    ebp
10001246:	eb f3                	jmp    1000123b <ssfn_select+0x5e>
10001248:	8d 43 14             	lea    eax,[ebx+0x14]
1000124b:	89 df                	mov    edi,ebx
1000124d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001251:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
10001257:	31 d2                	xor    edx,edx
10001259:	89 04 24             	mov    DWORD PTR [esp],eax
1000125c:	39 14 24             	cmp    DWORD PTR [esp],edx
1000125f:	7e 33                	jle    10001294 <ssfn_select+0xb7>
10001261:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10001265:	8b 07                	mov    eax,DWORD PTR [edi]
10001267:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
1000126a:	50                   	push   eax
1000126b:	8d 41 20             	lea    eax,[ecx+0x20]
1000126e:	55                   	push   ebp
1000126f:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10001273:	50                   	push   eax
10001274:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001278:	e8 fc ff ff ff       	call   10001279 <ssfn_select+0x9c>	10001279: R_386_PC32	memcmp
1000127d:	83 c4 10             	add    esp,0x10
10001280:	85 c0                	test   eax,eax
10001282:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10001286:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
1000128a:	75 05                	jne    10001291 <ssfn_select+0xb4>
1000128c:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
1000128f:	eb 34                	jmp    100012c5 <ssfn_select+0xe8>
10001291:	42                   	inc    edx
10001292:	eb c8                	jmp    1000125c <ssfn_select+0x7f>
10001294:	83 c7 04             	add    edi,0x4
10001297:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
1000129b:	75 b4                	jne    10001251 <ssfn_select+0x74>
1000129d:	eb 65                	jmp    10001304 <ssfn_select+0x127>
1000129f:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
100012a7:	74 15                	je     100012be <ssfn_select+0xe1>
100012a9:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012ae:	7f 54                	jg     10001304 <ssfn_select+0x127>
100012b0:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012b4:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012bc:	74 46                	je     10001304 <ssfn_select+0x127>
100012be:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012c5:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012c9:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012d0:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012d6:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012e0:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012e4:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012ea:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012ee:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012f4:	eb 13                	jmp    10001309 <ssfn_select+0x12c>
100012f6:	be fb ff ff ff       	mov    esi,0xfffffffb
100012fb:	eb 0c                	jmp    10001309 <ssfn_select+0x12c>
100012fd:	be fa ff ff ff       	mov    esi,0xfffffffa
10001302:	eb 05                	jmp    10001309 <ssfn_select+0x12c>
10001304:	be fd ff ff ff       	mov    esi,0xfffffffd
10001309:	83 c4 1c             	add    esp,0x1c
1000130c:	89 f0                	mov    eax,esi
1000130e:	5b                   	pop    ebx
1000130f:	5e                   	pop    esi
10001310:	5f                   	pop    edi
10001311:	5d                   	pop    ebp
10001312:	c3                   	ret    

10001313 <ssfn_render>:
10001313:	55                   	push   ebp
10001314:	57                   	push   edi
10001315:	56                   	push   esi
10001316:	53                   	push   ebx
10001317:	81 ec dc 05 01 00    	sub    esp,0x105dc
1000131d:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
10001324:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
1000132f:	85 ed                	test   ebp,ebp
10001331:	0f 94 c2             	sete   dl
10001334:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
1000133c:	0f 94 c0             	sete   al
1000133f:	08 c2                	or     dl,al
10001341:	74 0a                	je     1000134d <ssfn_render+0x3a>
10001343:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001348:	e9 14 1e 00 00       	jmp    10003161 <ssfn_render+0x1e4e>
1000134d:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
10001354:	31 c9                	xor    ecx,ecx
10001356:	8a 00                	mov    al,BYTE PTR [eax]
10001358:	84 c0                	test   al,al
1000135a:	0f 84 01 1e 00 00    	je     10003161 <ssfn_render+0x1e4e>
10001360:	3c 0d                	cmp    al,0xd
10001362:	75 0f                	jne    10001373 <ssfn_render+0x60>
10001364:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000136b:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001371:	eb 31                	jmp    100013a4 <ssfn_render+0x91>
10001373:	3c 0a                	cmp    al,0xa
10001375:	75 37                	jne    100013ae <ssfn_render+0x9b>
10001377:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000137e:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001384:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
10001387:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
1000138d:	85 c0                	test   eax,eax
1000138f:	75 06                	jne    10001397 <ssfn_render+0x84>
10001391:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
10001397:	01 d0                	add    eax,edx
10001399:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100013a0:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
100013a4:	b9 01 00 00 00       	mov    ecx,0x1
100013a9:	e9 b3 1d 00 00       	jmp    10003161 <ssfn_render+0x1e4e>
100013ae:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013b1:	85 c0                	test   eax,eax
100013b3:	74 3e                	je     100013f3 <ssfn_render+0xe0>
100013b5:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013b8:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
100013bf:	56                   	push   esi
100013c0:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013c7:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013ce:	e8 a0 f4 ff ff       	call   10000873 <_ssfn_c>
100013d3:	5b                   	pop    ebx
100013d4:	85 c0                	test   eax,eax
100013d6:	0f 85 71 02 00 00    	jne    1000164d <ssfn_render+0x33a>
100013dc:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013e2:	81 e2 00 01 00 00    	and    edx,0x100
100013e8:	0f 84 fd 01 00 00    	je     100015eb <ssfn_render+0x2d8>
100013ee:	e9 1d 02 00 00       	jmp    10001610 <ssfn_render+0x2fd>
100013f3:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013f9:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
10001400:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10001404:	3d fd 00 00 00       	cmp    eax,0xfd
10001409:	7f 08                	jg     10001413 <ssfn_render+0x100>
1000140b:	89 c3                	mov    ebx,eax
1000140d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001411:	eb 3f                	jmp    10001452 <ssfn_render+0x13f>
10001413:	31 db                	xor    ebx,ebx
10001415:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
1000141d:	eb 33                	jmp    10001452 <ssfn_render+0x13f>
1000141f:	85 c0                	test   eax,eax
10001421:	0f 84 64 01 00 00    	je     1000158b <ssfn_render+0x278>
10001427:	43                   	inc    ebx
10001428:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
1000142c:	7e 28                	jle    10001456 <ssfn_render+0x143>
1000142e:	85 c0                	test   eax,eax
10001430:	0f 85 17 02 00 00    	jne    1000164d <ssfn_render+0x33a>
10001436:	31 db                	xor    ebx,ebx
10001438:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001440:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001448:	74 92                	je     100013dc <ssfn_render+0xc9>
1000144a:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
10001452:	31 c0                	xor    eax,eax
10001454:	eb d2                	jmp    10001428 <ssfn_render+0x115>
10001456:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
1000145a:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
10001461:	74 bc                	je     1000141f <ssfn_render+0x10c>
10001463:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000146e:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001475:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
1000147c:	7e 50                	jle    100014ce <ssfn_render+0x1bb>
1000147e:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
10001481:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
10001485:	c1 fa 04             	sar    edx,0x4
10001488:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
1000148e:	80 e2 03             	and    dl,0x3
10001491:	75 32                	jne    100014c5 <ssfn_render+0x1b2>
10001493:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
10001497:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
1000149d:	75 26                	jne    100014c5 <ssfn_render+0x1b2>
1000149f:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
100014a6:	50                   	push   eax
100014a7:	89 f8                	mov    eax,edi
100014a9:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014b0:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014b7:	e8 b7 f3 ff ff       	call   10000873 <_ssfn_c>
100014bc:	59                   	pop    ecx
100014bd:	85 c0                	test   eax,eax
100014bf:	0f 85 04 01 00 00    	jne    100015c9 <ssfn_render+0x2b6>
100014c5:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014cc:	eb a0                	jmp    1000146e <ssfn_render+0x15b>
100014ce:	85 c0                	test   eax,eax
100014d0:	0f 85 51 ff ff ff    	jne    10001427 <ssfn_render+0x114>
100014d6:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014e1:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014e8:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014ef:	0f 8e f9 1b 00 00    	jle    100030ee <ssfn_render+0x1ddb>
100014f5:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014f8:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014fc:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001502:	74 09                	je     1000150d <ssfn_render+0x1fa>
10001504:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000150b:	eb d4                	jmp    100014e1 <ssfn_render+0x1ce>
1000150d:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10001514:	57                   	push   edi
10001515:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000151c:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001523:	e8 4b f3 ff ff       	call   10000873 <_ssfn_c>
10001528:	5a                   	pop    edx
10001529:	85 c0                	test   eax,eax
1000152b:	74 d7                	je     10001504 <ssfn_render+0x1f1>
1000152d:	e9 97 00 00 00       	jmp    100015c9 <ssfn_render+0x2b6>
10001532:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001535:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001539:	c1 fa 04             	sar    edx,0x4
1000153c:	31 ca                	xor    edx,ecx
1000153e:	80 e2 03             	and    dl,0x3
10001541:	0f 84 b7 1b 00 00    	je     100030fe <ssfn_render+0x1deb>
10001547:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000154e:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001555:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
1000155b:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001562:	7f ce                	jg     10001532 <ssfn_render+0x21f>
10001564:	83 e1 03             	and    ecx,0x3
10001567:	83 f9 03             	cmp    ecx,0x3
1000156a:	75 1f                	jne    1000158b <ssfn_render+0x278>
1000156c:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001577:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000157e:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001585:	0f 8f 9c 1b 00 00    	jg     10003127 <ssfn_render+0x1e14>
1000158b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001596:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000159d:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100015a4:	7e 3e                	jle    100015e4 <ssfn_render+0x2d1>
100015a6:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100015a9:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015b0:	57                   	push   edi
100015b1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100015b8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100015bf:	e8 af f2 ff ff       	call   10000873 <_ssfn_c>
100015c4:	5a                   	pop    edx
100015c5:	85 c0                	test   eax,eax
100015c7:	74 12                	je     100015db <ssfn_render+0x2c8>
100015c9:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100015d0:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
100015d3:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
100015d6:	e9 4c fe ff ff       	jmp    10001427 <ssfn_render+0x114>
100015db:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100015e2:	eb b2                	jmp    10001596 <ssfn_render+0x283>
100015e4:	31 c0                	xor    eax,eax
100015e6:	e9 3c fe ff ff       	jmp    10001427 <ssfn_render+0x114>
100015eb:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015f1:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015fc:	81 fb fd 00 00 00    	cmp    ebx,0xfd
10001602:	7f 16                	jg     1000161a <ssfn_render+0x307>
10001604:	89 da                	mov    edx,ebx
10001606:	31 c0                	xor    eax,eax
10001608:	39 da                	cmp    edx,ebx
1000160a:	7e 15                	jle    10001621 <ssfn_render+0x30e>
1000160c:	85 c0                	test   eax,eax
1000160e:	75 3d                	jne    1000164d <ssfn_render+0x33a>
10001610:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
10001615:	e9 47 1b 00 00       	jmp    10003161 <ssfn_render+0x1e4e>
1000161a:	bb 04 00 00 00       	mov    ebx,0x4
1000161f:	eb e5                	jmp    10001606 <ssfn_render+0x2f3>
10001621:	85 c0                	test   eax,eax
10001623:	75 28                	jne    1000164d <ssfn_render+0x33a>
10001625:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
1000162d:	74 1b                	je     1000164a <ssfn_render+0x337>
1000162f:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
10001633:	8b 09                	mov    ecx,DWORD PTR [ecx]
10001635:	85 c9                	test   ecx,ecx
10001637:	74 11                	je     1000164a <ssfn_render+0x337>
10001639:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
1000163c:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001640:	78 08                	js     1000164a <ssfn_render+0x337>
10001642:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
10001645:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001648:	01 c8                	add    eax,ecx
1000164a:	42                   	inc    edx
1000164b:	eb bb                	jmp    10001608 <ssfn_render+0x2f5>
1000164d:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001650:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
10001655:	85 d2                	test   edx,edx
10001657:	0f 84 04 1b 00 00    	je     10003161 <ssfn_render+0x1e4e>
1000165d:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
10001661:	0f 84 fa 1a 00 00    	je     10003161 <ssfn_render+0x1e4e>
10001667:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
1000166d:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001671:	85 ff                	test   edi,edi
10001673:	0f 84 e8 1a 00 00    	je     10003161 <ssfn_render+0x1e4e>
10001679:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
10001680:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10001684:	c1 ef 10             	shr    edi,0x10
10001687:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
1000168b:	83 ff 10             	cmp    edi,0x10
1000168e:	0f 87 af fc ff ff    	ja     10001343 <ssfn_render+0x30>
10001694:	8d 70 06             	lea    esi,[eax+0x6]
10001697:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
1000169d:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
100016a1:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
100016a7:	89 f7                	mov    edi,esi
100016a9:	81 e7 00 02 00 00    	and    edi,0x200
100016af:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016b3:	75 34                	jne    100016e9 <ssfn_render+0x3d6>
100016b5:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100016b9:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
100016c0:	85 c9                	test   ecx,ecx
100016c2:	74 25                	je     100016e9 <ssfn_render+0x3d6>
100016c4:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100016c8:	0f b6 ff             	movzx  edi,bh
100016cb:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016ce:	85 c9                	test   ecx,ecx
100016d0:	74 17                	je     100016e9 <ssfn_render+0x3d6>
100016d2:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
100016d7:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016da:	85 c9                	test   ecx,ecx
100016dc:	74 0b                	je     100016e9 <ssfn_render+0x3d6>
100016de:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016e4:	e9 25 0d 00 00       	jmp    1000240e <ssfn_render+0x10fb>
100016e9:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016ed:	f7 c6 40 00 00 00    	test   esi,0x40
100016f3:	75 1a                	jne    1000170f <ssfn_render+0x3fc>
100016f5:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016f9:	7e 10                	jle    1000170b <ssfn_render+0x3f8>
100016fb:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016ff:	83 c7 04             	add    edi,0x4
10001702:	83 e7 fc             	and    edi,0xfffffffc
10001705:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001709:	eb 04                	jmp    1000170f <ssfn_render+0x3fc>
1000170b:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
1000170f:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
10001714:	f7 c6 02 00 00 00    	test   esi,0x2
1000171a:	74 14                	je     10001730 <ssfn_render+0x41d>
1000171c:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
1000171f:	c0 eb 05             	shr    bl,0x5
10001722:	89 df                	mov    edi,ebx
10001724:	83 f7 01             	xor    edi,0x1
10001727:	83 e7 01             	and    edi,0x1
1000172a:	89 fb                	mov    ebx,edi
1000172c:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001730:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
10001735:	83 e6 01             	and    esi,0x1
10001738:	74 10                	je     1000174a <ssfn_render+0x437>
1000173a:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
1000173e:	75 0a                	jne    1000174a <ssfn_render+0x437>
10001740:	8d 51 40             	lea    edx,[ecx+0x40]
10001743:	c1 fa 06             	sar    edx,0x6
10001746:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
1000174a:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
1000174e:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001753:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10001757:	99                   	cdq    
10001758:	f7 f9                	idiv   ecx
1000175a:	89 c1                	mov    ecx,eax
1000175c:	31 c0                	xor    eax,eax
1000175e:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001763:	74 0c                	je     10001771 <ssfn_render+0x45e>
10001765:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001769:	be 04 00 00 00       	mov    esi,0x4
1000176e:	99                   	cdq    
1000176f:	f7 fe                	idiv   esi
10001771:	01 c8                	add    eax,ecx
10001773:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001778:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
1000177d:	01 f0                	add    eax,esi
1000177f:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10001783:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001787:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000178b:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
10001790:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001794:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001799:	0f 8f c2 19 00 00    	jg     10003161 <ssfn_render+0x1e4e>
1000179f:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
100017a4:	0f 85 f0 00 00 00    	jne    1000189a <ssfn_render+0x587>
100017aa:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017ae:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017b2:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
100017b9:	75 2f                	jne    100017ea <ssfn_render+0x4d7>
100017bb:	83 ec 0c             	sub    esp,0xc
100017be:	68 00 04 00 00       	push   0x400
100017c3:	e8 fc ff ff ff       	call   100017c4 <ssfn_render+0x4b1>	100017c4: R_386_PC32	malloc
100017c8:	83 c4 10             	add    esp,0x10
100017cb:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
100017d1:	85 c0                	test   eax,eax
100017d3:	75 08                	jne    100017dd <ssfn_render+0x4ca>
100017d5:	83 c9 ff             	or     ecx,0xffffffff
100017d8:	e9 84 19 00 00       	jmp    10003161 <ssfn_render+0x1e4e>
100017dd:	89 c7                	mov    edi,eax
100017df:	b9 00 01 00 00       	mov    ecx,0x100
100017e4:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017e8:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017ea:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017ee:	0f b6 dc             	movzx  ebx,ah
100017f1:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017f7:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017fa:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017fd:	75 3a                	jne    10001839 <ssfn_render+0x526>
100017ff:	83 ec 0c             	sub    esp,0xc
10001802:	68 00 04 00 00       	push   0x400
10001807:	e8 fc ff ff ff       	call   10001808 <ssfn_render+0x4f5>	10001808: R_386_PC32	malloc
1000180c:	89 03                	mov    DWORD PTR [ebx],eax
1000180e:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001815:	83 c4 10             	add    esp,0x10
10001818:	89 c2                	mov    edx,eax
1000181a:	0f b6 c4             	movzx  eax,ah
1000181d:	c1 ea 10             	shr    edx,0x10
10001820:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001827:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
1000182a:	85 d2                	test   edx,edx
1000182c:	74 a7                	je     100017d5 <ssfn_render+0x4c2>
1000182e:	b9 00 01 00 00       	mov    ecx,0x100
10001833:	31 c0                	xor    eax,eax
10001835:	89 d7                	mov    edi,edx
10001837:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001839:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001840:	83 ec 0c             	sub    esp,0xc
10001843:	0f b6 cc             	movzx  ecx,ah
10001846:	89 c2                	mov    edx,eax
10001848:	0f b6 c0             	movzx  eax,al
1000184b:	c1 ea 10             	shr    edx,0x10
1000184e:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001855:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001858:	8d 1c 82             	lea    ebx,[edx+eax*4]
1000185b:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000185f:	83 c0 08             	add    eax,0x8
10001862:	50                   	push   eax
10001863:	e8 fc ff ff ff       	call   10001864 <ssfn_render+0x551>	10001864: R_386_PC32	malloc
10001868:	89 03                	mov    DWORD PTR [ebx],eax
1000186a:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
10001870:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001877:	83 c4 10             	add    esp,0x10
1000187a:	89 c2                	mov    edx,eax
1000187c:	0f b6 cc             	movzx  ecx,ah
1000187f:	c1 ea 10             	shr    edx,0x10
10001882:	0f b6 c0             	movzx  eax,al
10001885:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000188c:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
1000188f:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
10001893:	75 0e                	jne    100018a3 <ssfn_render+0x590>
10001895:	e9 3b ff ff ff       	jmp    100017d5 <ssfn_render+0x4c2>
1000189a:	8d 45 1c             	lea    eax,[ebp+0x1c]
1000189d:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100018a3:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
100018a9:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018ad:	74 2a                	je     100018d9 <ssfn_render+0x5c6>
100018af:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018b4:	74 23                	je     100018d9 <ssfn_render+0x5c6>
100018b6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100018b9:	bb 04 00 00 00       	mov    ebx,0x4
100018be:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100018c2:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
100018c6:	89 cf                	mov    edi,ecx
100018c8:	29 c7                	sub    edi,eax
100018ca:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100018ce:	0f af c7             	imul   eax,edi
100018d1:	99                   	cdq    
100018d2:	f7 fb                	idiv   ebx
100018d4:	99                   	cdq    
100018d5:	f7 f9                	idiv   ecx
100018d7:	eb 02                	jmp    100018db <ssfn_render+0x5c8>
100018d9:	31 c0                	xor    eax,eax
100018db:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018e1:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018e5:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018e9:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018f1:	66 89 32             	mov    WORD PTR [edx],si
100018f4:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018f9:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018ff:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
10001902:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001908:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000190e:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001911:	01 c3                	add    ebx,eax
10001913:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
10001916:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000191c:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001922:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
10001925:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001928:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
1000192e:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001934:	8a 12                	mov    dl,BYTE PTR [edx]
10001936:	83 e2 3f             	and    edx,0x3f
10001939:	01 d0                	add    eax,edx
1000193b:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
1000193e:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10001942:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001948:	8d 50 08             	lea    edx,[eax+0x8]
1000194b:	b0 ff                	mov    al,0xff
1000194d:	89 d7                	mov    edi,edx
1000194f:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001951:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001957:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
1000195b:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001961:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
10001965:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001969:	c1 e0 04             	shl    eax,0x4
1000196c:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10001970:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001974:	c1 e0 04             	shl    eax,0x4
10001977:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000197b:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001981:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
10001985:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001989:	0f 8e 4d 0a 00 00    	jle    100023dc <ssfn_render+0x10c9>
1000198f:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10001993:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001997:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
1000199a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
1000199d:	8a 12                	mov    dl,BYTE PTR [edx]
1000199f:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
100019a3:	83 e2 40             	and    edx,0x40
100019a6:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
100019aa:	88 c2                	mov    dl,al
100019ac:	21 ca                	and    edx,ecx
100019ae:	fe c2                	inc    dl
100019b0:	75 14                	jne    100019c6 <ssfn_render+0x6b3>
100019b2:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019b7:	19 c0                	sbb    eax,eax
100019b9:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
100019bd:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100019c1:	e9 09 0a 00 00       	jmp    100023cf <ssfn_render+0x10bc>
100019c6:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100019ca:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
100019cd:	c1 e0 04             	shl    eax,0x4
100019d0:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
100019d4:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019d9:	99                   	cdq    
100019da:	f7 fe                	idiv   esi
100019dc:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100019e0:	0f b6 c1             	movzx  eax,cl
100019e3:	c1 e0 04             	shl    eax,0x4
100019e6:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019eb:	99                   	cdq    
100019ec:	f7 fe                	idiv   esi
100019ee:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019f2:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019f6:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019fa:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019fe:	c1 e2 10             	shl    edx,0x10
10001a01:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001a06:	74 0e                	je     10001a16 <ssfn_render+0x703>
10001a08:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a0c:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a11:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a14:	eb 0c                	jmp    10001a22 <ssfn_render+0x70f>
10001a16:	c1 e0 08             	shl    eax,0x8
10001a19:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a1e:	09 d0                	or     eax,edx
10001a20:	09 c3                	or     ebx,eax
10001a22:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a25:	8a 01                	mov    al,BYTE PTR [ecx]
10001a27:	84 c0                	test   al,al
10001a29:	0f 88 17 05 00 00    	js     10001f46 <ssfn_render+0xc33>
10001a2f:	89 c7                	mov    edi,eax
10001a31:	83 e7 3f             	and    edi,0x3f
10001a34:	a8 40                	test   al,0x40
10001a36:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a3a:	74 10                	je     10001a4c <ssfn_render+0x739>
10001a3c:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a40:	89 f8                	mov    eax,edi
10001a42:	41                   	inc    ecx
10001a43:	c1 e0 08             	shl    eax,0x8
10001a46:	09 c2                	or     edx,eax
10001a48:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a4c:	8d 41 01             	lea    eax,[ecx+0x1]
10001a4f:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a59:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a5d:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a68:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a6c:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a70:	83 c0 04             	add    eax,0x4
10001a73:	c1 f8 02             	sar    eax,0x2
10001a76:	01 c7                	add    edi,eax
10001a78:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a7f:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a83:	0f 8f d7 01 00 00    	jg     10001c60 <ssfn_render+0x94d>
10001a89:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a8c:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a90:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a94:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a98:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a9c:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a9f:	c1 e0 04             	shl    eax,0x4
10001aa2:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001aa7:	99                   	cdq    
10001aa8:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001aac:	01 c6                	add    esi,eax
10001aae:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001ab2:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001ab6:	c1 e0 04             	shl    eax,0x4
10001ab9:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001abe:	99                   	cdq    
10001abf:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001ac3:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001ac7:	01 c3                	add    ebx,eax
10001ac9:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001acd:	89 c8                	mov    eax,ecx
10001acf:	01 c9                	add    ecx,ecx
10001ad1:	c1 f8 02             	sar    eax,0x2
10001ad4:	83 e1 06             	and    ecx,0x6
10001ad7:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001adb:	d3 f8                	sar    eax,cl
10001add:	83 e0 03             	and    eax,0x3
10001ae0:	89 c1                	mov    ecx,eax
10001ae2:	83 f8 02             	cmp    eax,0x2
10001ae5:	74 4a                	je     10001b31 <ssfn_render+0x81e>
10001ae7:	83 f8 03             	cmp    eax,0x3
10001aea:	0f 84 e4 00 00 00    	je     10001bd4 <ssfn_render+0x8c1>
10001af0:	49                   	dec    ecx
10001af1:	74 20                	je     10001b13 <ssfn_render+0x800>
10001af3:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001af9:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001aff:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001b05:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001b0b:	83 c7 02             	add    edi,0x2
10001b0e:	e9 41 01 00 00       	jmp    10001c54 <ssfn_render+0x941>
10001b13:	83 c7 02             	add    edi,0x2
10001b16:	50                   	push   eax
10001b17:	50                   	push   eax
10001b18:	89 e8                	mov    eax,ebp
10001b1a:	53                   	push   ebx
10001b1b:	56                   	push   esi
10001b1c:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b20:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b24:	e8 9c e9 ff ff       	call   100004c5 <_ssfn_l>
10001b29:	83 c4 10             	add    esp,0x10
10001b2c:	e9 23 01 00 00       	jmp    10001c54 <ssfn_render+0x941>
10001b31:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b35:	83 c7 04             	add    edi,0x4
10001b38:	c1 e0 04             	shl    eax,0x4
10001b3b:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b40:	99                   	cdq    
10001b41:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b45:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b49:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b4d:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b51:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b55:	c1 e0 04             	shl    eax,0x4
10001b58:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b5d:	99                   	cdq    
10001b5e:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b62:	83 ec 0c             	sub    esp,0xc
10001b65:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b69:	6a 00                	push   0x0
10001b6b:	53                   	push   ebx
10001b6c:	56                   	push   esi
10001b6d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b71:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b75:	99                   	cdq    
10001b76:	f7 f9                	idiv   ecx
10001b78:	01 d8                	add    eax,ebx
10001b7a:	50                   	push   eax
10001b7b:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b7f:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b83:	99                   	cdq    
10001b84:	f7 f9                	idiv   ecx
10001b86:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b8a:	50                   	push   eax
10001b8b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b8f:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b93:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b99:	99                   	cdq    
10001b9a:	f7 f9                	idiv   ecx
10001b9c:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001ba2:	50                   	push   eax
10001ba3:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001ba7:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001bad:	99                   	cdq    
10001bae:	f7 f9                	idiv   ecx
10001bb0:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001bb6:	50                   	push   eax
10001bb7:	89 e8                	mov    eax,ebp
10001bb9:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bbf:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bc5:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001bc9:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001bcd:	e8 04 ea ff ff       	call   100005d6 <_ssfn_b>
10001bd2:	eb 7d                	jmp    10001c51 <ssfn_render+0x93e>
10001bd4:	83 ec 0c             	sub    esp,0xc
10001bd7:	83 c7 06             	add    edi,0x6
10001bda:	6a 00                	push   0x0
10001bdc:	53                   	push   ebx
10001bdd:	56                   	push   esi
10001bde:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001be2:	c1 e0 04             	shl    eax,0x4
10001be5:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001bea:	99                   	cdq    
10001beb:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001bef:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001bf3:	50                   	push   eax
10001bf4:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001bf8:	c1 e0 04             	shl    eax,0x4
10001bfb:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001c00:	99                   	cdq    
10001c01:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001c05:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001c09:	50                   	push   eax
10001c0a:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c0e:	c1 e0 04             	shl    eax,0x4
10001c11:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c16:	99                   	cdq    
10001c17:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c1b:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c1f:	50                   	push   eax
10001c20:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c24:	c1 e0 04             	shl    eax,0x4
10001c27:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c2c:	99                   	cdq    
10001c2d:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c31:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c35:	50                   	push   eax
10001c36:	89 e8                	mov    eax,ebp
10001c38:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c3e:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c44:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c48:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c4c:	e8 85 e9 ff ff       	call   100005d6 <_ssfn_b>
10001c51:	83 c4 30             	add    esp,0x30
10001c54:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c5b:	e9 18 fe ff ff       	jmp    10001a78 <ssfn_render+0x765>
10001c60:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c66:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c6c:	75 0e                	jne    10001c7c <ssfn_render+0x969>
10001c6e:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c74:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c7a:	74 2e                	je     10001caa <ssfn_render+0x997>
10001c7c:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c82:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c88:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c8c:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c92:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c98:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c9e:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001ca3:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001caa:	b3 fe                	mov    bl,0xfe
10001cac:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001cb3:	0f 8e 16 07 00 00    	jle    100023cf <ssfn_render+0x10bc>
10001cb9:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001cc1:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001cc9:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001cd1:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001cd9:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001ce1:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001ce5:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001ce9:	0f 8d de 06 00 00    	jge    100023cd <ssfn_render+0x10ba>
10001cef:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001cf5:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001d00:	83 e8 03             	sub    eax,0x3
10001d03:	31 f6                	xor    esi,esi
10001d05:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001d09:	89 f8                	mov    eax,edi
10001d0b:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d0f:	c1 f8 02             	sar    eax,0x2
10001d12:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d16:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d1d:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d21:	0f 8e 16 01 00 00    	jle    10001e3d <ssfn_render+0xb2a>
10001d27:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d2d:	8d 47 01             	lea    eax,[edi+0x1]
10001d30:	01 c0                	add    eax,eax
10001d32:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d36:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d3a:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d3f:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d43:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d47:	7d 0c                	jge    10001d55 <ssfn_render+0xa42>
10001d49:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d4d:	0f 8f db 00 00 00    	jg     10001e2e <ssfn_render+0xb1b>
10001d53:	eb 0a                	jmp    10001d5f <ssfn_render+0xa4c>
10001d55:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d59:	0f 8e cf 00 00 00    	jle    10001e2e <ssfn_render+0xb1b>
10001d5f:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d64:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d68:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d6d:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d71:	89 d8                	mov    eax,ebx
10001d73:	c1 fa 04             	sar    edx,0x4
10001d76:	c1 f8 04             	sar    eax,0x4
10001d79:	39 c2                	cmp    edx,eax
10001d7b:	75 0a                	jne    10001d87 <ssfn_render+0xa74>
10001d7d:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d81:	01 c8                	add    eax,ecx
10001d83:	d1 f8                	sar    eax,1
10001d85:	eb 1a                	jmp    10001da1 <ssfn_render+0xa8e>
10001d87:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d8b:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d8f:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d93:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d97:	0f af c1             	imul   eax,ecx
10001d9a:	99                   	cdq    
10001d9b:	f7 fb                	idiv   ebx
10001d9d:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001da1:	c1 f8 04             	sar    eax,0x4
10001da4:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001da9:	74 04                	je     10001daf <ssfn_render+0xa9c>
10001dab:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001daf:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001db4:	75 3f                	jne    10001df5 <ssfn_render+0xae2>
10001db6:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001dbb:	74 38                	je     10001df5 <ssfn_render+0xae2>
10001dbd:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dc1:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001dc7:	f7 db                	neg    ebx
10001dc9:	01 c2                	add    edx,eax
10001dcb:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001dcf:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dd3:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dd7:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001ddb:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001ddf:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001de3:	74 10                	je     10001df5 <ssfn_render+0xae2>
10001de5:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001de9:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001ded:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001df1:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001df5:	31 d2                	xor    edx,edx
10001df7:	39 f2                	cmp    edx,esi
10001df9:	75 0b                	jne    10001e06 <ssfn_render+0xaf3>
10001dfb:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001e03:	46                   	inc    esi
10001e04:	eb 28                	jmp    10001e2e <ssfn_render+0xb1b>
10001e06:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e0e:	39 c1                	cmp    ecx,eax
10001e10:	7d 03                	jge    10001e15 <ssfn_render+0xb02>
10001e12:	42                   	inc    edx
10001e13:	eb e2                	jmp    10001df7 <ssfn_render+0xae4>
10001e15:	89 f1                	mov    ecx,esi
10001e17:	49                   	dec    ecx
10001e18:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e20:	39 d1                	cmp    ecx,edx
10001e22:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e2a:	7f eb                	jg     10001e17 <ssfn_render+0xb04>
10001e2c:	eb cd                	jmp    10001dfb <ssfn_render+0xae8>
10001e2e:	8d 47 02             	lea    eax,[edi+0x2]
10001e31:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e38:	e9 d9 fe ff ff       	jmp    10001d16 <ssfn_render+0xa03>
10001e3d:	83 fe 01             	cmp    esi,0x1
10001e40:	7e 1f                	jle    10001e61 <ssfn_render+0xb4e>
10001e42:	f7 c6 01 00 00 00    	test   esi,0x1
10001e48:	74 24                	je     10001e6e <ssfn_render+0xb5b>
10001e4a:	8d 46 ff             	lea    eax,[esi-0x1]
10001e4d:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e55:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e5d:	89 c6                	mov    esi,eax
10001e5f:	eb 0d                	jmp    10001e6e <ssfn_render+0xb5b>
10001e61:	85 f6                	test   esi,esi
10001e63:	0f 84 c7 00 00 00    	je     10001f30 <ssfn_render+0xc1d>
10001e69:	be 01 00 00 00       	mov    esi,0x1
10001e6e:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e74:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e78:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e7c:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e80:	39 d1                	cmp    ecx,edx
10001e82:	7d 0b                	jge    10001e8f <ssfn_render+0xb7c>
10001e84:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e88:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e8c:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e8f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e9a:	31 c0                	xor    eax,eax
10001e9c:	31 d2                	xor    edx,edx
10001e9e:	8d 4e ff             	lea    ecx,[esi-0x1]
10001ea1:	39 d1                	cmp    ecx,edx
10001ea3:	7e 7d                	jle    10001f22 <ssfn_render+0xc0f>
10001ea5:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ead:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001eb5:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001eb9:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001ebd:	79 02                	jns    10001ec1 <ssfn_render+0xbae>
10001ebf:	31 c0                	xor    eax,eax
10001ec1:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001ec5:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001ec9:	39 cf                	cmp    edi,ecx
10001ecb:	7e 04                	jle    10001ed1 <ssfn_render+0xbbe>
10001ecd:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001ed1:	85 d2                	test   edx,edx
10001ed3:	74 12                	je     10001ee7 <ssfn_render+0xbd4>
10001ed5:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001edd:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ee1:	39 c8                	cmp    eax,ecx
10001ee3:	7d 02                	jge    10001ee7 <ssfn_render+0xbd4>
10001ee5:	89 c8                	mov    eax,ecx
10001ee7:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001eeb:	7d 2b                	jge    10001f18 <ssfn_render+0xc05>
10001eed:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001ef1:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001ef7:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001efa:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001efe:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001f02:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001f06:	75 05                	jne    10001f0d <ssfn_render+0xbfa>
10001f08:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f0d:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f11:	40                   	inc    eax
10001f12:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f16:	eb cf                	jmp    10001ee7 <ssfn_render+0xbd4>
10001f18:	83 c2 02             	add    edx,0x2
10001f1b:	b0 01                	mov    al,0x1
10001f1d:	e9 7c ff ff ff       	jmp    10001e9e <ssfn_render+0xb8b>
10001f22:	83 e6 fe             	and    esi,0xfffffffe
10001f25:	84 c0                	test   al,al
10001f27:	74 07                	je     10001f30 <ssfn_render+0xc1d>
10001f29:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f30:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f34:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f38:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f3c:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f41:	e9 9b fd ff ff       	jmp    10001ce1 <ssfn_render+0x9ce>
10001f46:	88 c2                	mov    dl,al
10001f48:	80 e2 60             	and    dl,0x60
10001f4b:	0f 85 95 02 00 00    	jne    100021e6 <ssfn_render+0xed3>
10001f51:	83 e0 1f             	and    eax,0x1f
10001f54:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f58:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f5f:	c1 fb 04             	sar    ebx,0x4
10001f62:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f66:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f6a:	40                   	inc    eax
10001f6b:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f6f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f73:	c1 f8 04             	sar    eax,0x4
10001f76:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f7a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f7e:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f83:	99                   	cdq    
10001f84:	f7 fe                	idiv   esi
10001f86:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f8a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f8e:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f93:	99                   	cdq    
10001f94:	f7 fe                	idiv   esi
10001f96:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f9a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001fa0:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fa4:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001fa8:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fab:	39 d6                	cmp    esi,edx
10001fad:	7d 0a                	jge    10001fb9 <ssfn_render+0xca6>
10001faf:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fb3:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fb6:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001fb9:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001fbd:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001fc5:	0f af c3             	imul   eax,ebx
10001fc8:	31 ff                	xor    edi,edi
10001fca:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fce:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001fd2:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001fd6:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001fda:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fde:	29 d8                	sub    eax,ebx
10001fe0:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fe4:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fe8:	0f 8d b1 00 00 00    	jge    1000209f <ssfn_render+0xd8c>
10001fee:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001ff2:	99                   	cdq    
10001ff3:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001ff7:	89 c6                	mov    esi,eax
10001ff9:	31 c0                	xor    eax,eax
10001ffb:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002000:	74 0e                	je     10002010 <ssfn_render+0xcfd>
10002002:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10002006:	bb 04 00 00 00       	mov    ebx,0x4
1000200b:	29 f8                	sub    eax,edi
1000200d:	99                   	cdq    
1000200e:	f7 fb                	idiv   ebx
10002010:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10002014:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000201f:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10002023:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002028:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000202f:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10002033:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002037:	39 d8                	cmp    eax,ebx
10002039:	7d 4e                	jge    10002089 <ssfn_render+0xd76>
1000203b:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000203f:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10002044:	99                   	cdq    
10002045:	f7 fb                	idiv   ebx
10002047:	8d 14 06             	lea    edx,[esi+eax*1]
1000204a:	83 e0 07             	and    eax,0x7
1000204d:	c1 fa 03             	sar    edx,0x3
10002050:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10002055:	0f a3 c2             	bt     edx,eax
10002058:	72 0e                	jb     10002068 <ssfn_render+0xd55>
1000205a:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000205e:	43                   	inc    ebx
1000205f:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
10002066:	eb c0                	jmp    10002028 <ssfn_render+0xd15>
10002068:	31 c0                	xor    eax,eax
1000206a:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000206e:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002072:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002078:	40                   	inc    eax
10002079:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
1000207d:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10002081:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
10002085:	7d e3                	jge    1000206a <ssfn_render+0xd57>
10002087:	eb d1                	jmp    1000205a <ssfn_render+0xd47>
10002089:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000208d:	47                   	inc    edi
1000208e:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10002092:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10002096:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
1000209a:	e9 45 ff ff ff       	jmp    10001fe4 <ssfn_render+0xcd1>
1000209f:	b3 fe                	mov    bl,0xfe
100020a1:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
100020a8:	0f 85 21 03 00 00    	jne    100023cf <ssfn_render+0x10bc>
100020ae:	31 c0                	xor    eax,eax
100020b0:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020b4:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
100020b9:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100020bd:	0f 95 c0             	setne  al
100020c0:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100020c4:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020c8:	4f                   	dec    edi
100020c9:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100020cd:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
100020d5:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100020d9:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100020e0:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020e4:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020e8:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020ec:	31 c0                	xor    eax,eax
100020ee:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020f1:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020f5:	83 c1 04             	add    ecx,0x4
100020f8:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020fc:	0f 8d c0 02 00 00    	jge    100023c2 <ssfn_render+0x10af>
10002102:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10002106:	8d 77 01             	lea    esi,[edi+0x1]
10002109:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
1000210d:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002111:	4f                   	dec    edi
10002112:	be 01 00 00 00       	mov    esi,0x1
10002117:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000211b:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
1000211f:	7e 63                	jle    10002184 <ssfn_render+0xe71>
10002121:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002125:	b9 01 00 00 00       	mov    ecx,0x1
1000212a:	89 ca                	mov    edx,ecx
1000212c:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002130:	7e 45                	jle    10002177 <ssfn_render+0xe64>
10002132:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002138:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
1000213d:	75 34                	jne    10002173 <ssfn_render+0xe60>
1000213f:	89 c7                	mov    edi,eax
10002141:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002145:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002149:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
1000214d:	74 0c                	je     1000215b <ssfn_render+0xe48>
1000214f:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10002153:	01 d7                	add    edi,edx
10002155:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002159:	75 18                	jne    10002173 <ssfn_render+0xe60>
1000215b:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000215f:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
10002163:	74 06                	je     1000216b <ssfn_render+0xe58>
10002165:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002169:	75 08                	jne    10002173 <ssfn_render+0xe60>
1000216b:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
1000216f:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
10002173:	41                   	inc    ecx
10002174:	40                   	inc    eax
10002175:	eb b3                	jmp    1000212a <ssfn_render+0xe17>
10002177:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000217b:	46                   	inc    esi
1000217c:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
10002180:	b0 01                	mov    al,0x1
10002182:	eb 97                	jmp    1000211b <ssfn_render+0xe08>
10002184:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002188:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
1000218c:	bb 01 00 00 00       	mov    ebx,0x1
10002191:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002195:	7e 3d                	jle    100021d4 <ssfn_render+0xec1>
10002197:	b8 01 00 00 00       	mov    eax,0x1
1000219c:	89 c2                	mov    edx,eax
1000219e:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
100021a2:	7e 23                	jle    100021c7 <ssfn_render+0xeb4>
100021a4:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100021a8:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021ae:	8d 14 07             	lea    edx,[edi+eax*1]
100021b1:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021b6:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100021ba:	75 08                	jne    100021c4 <ssfn_render+0xeb1>
100021bc:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100021c0:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
100021c4:	40                   	inc    eax
100021c5:	eb d5                	jmp    1000219c <ssfn_render+0xe89>
100021c7:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100021cb:	43                   	inc    ebx
100021cc:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
100021d0:	b0 01                	mov    al,0x1
100021d2:	eb bd                	jmp    10002191 <ssfn_render+0xe7e>
100021d4:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100021d7:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100021db:	01 c9                	add    ecx,ecx
100021dd:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
100021e1:	e9 08 ff ff ff       	jmp    100020ee <ssfn_render+0xddb>
100021e6:	b3 fe                	mov    bl,0xfe
100021e8:	80 fa 20             	cmp    dl,0x20
100021eb:	0f 85 de 01 00 00    	jne    100023cf <ssfn_render+0x10bc>
100021f1:	89 c3                	mov    ebx,eax
100021f3:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021f7:	c1 e3 08             	shl    ebx,0x8
100021fa:	81 e3 00 1f 00 00    	and    ebx,0x1f00
10002200:	09 c3                	or     ebx,eax
10002202:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
10002206:	43                   	inc    ebx
10002207:	40                   	inc    eax
10002208:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000220c:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002210:	40                   	inc    eax
10002211:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10002215:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002219:	c1 f8 04             	sar    eax,0x4
1000221c:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002220:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002224:	c1 f8 04             	sar    eax,0x4
10002227:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000222b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000222f:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10002234:	99                   	cdq    
10002235:	f7 fe                	idiv   esi
10002237:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000223b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000223f:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10002244:	99                   	cdq    
10002245:	f7 fe                	idiv   esi
10002247:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000224b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000224f:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002255:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002259:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
1000225d:	39 d6                	cmp    esi,edx
1000225f:	7d 0b                	jge    1000226c <ssfn_render+0xf59>
10002261:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10002265:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002269:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
1000226c:	83 c1 04             	add    ecx,0x4
1000226f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000227a:	8d 04 19             	lea    eax,[ecx+ebx*1]
1000227d:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002281:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
10002285:	72 35                	jb     100022bc <ssfn_render+0xfa9>
10002287:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000228b:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000228f:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002294:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002298:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
1000229c:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100022a3:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
100022a7:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022af:	31 d2                	xor    edx,edx
100022b1:	31 ff                	xor    edi,edi
100022b3:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022b7:	e9 cc 00 00 00       	jmp    10002388 <ssfn_render+0x1075>
100022bc:	8a 11                	mov    dl,BYTE PTR [ecx]
100022be:	89 d0                	mov    eax,edx
100022c0:	83 e0 7f             	and    eax,0x7f
100022c3:	84 d2                	test   dl,dl
100022c5:	8d 78 01             	lea    edi,[eax+0x1]
100022c8:	78 09                	js     100022d3 <ssfn_render+0xfc0>
100022ca:	41                   	inc    ecx
100022cb:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100022cf:	89 ca                	mov    edx,ecx
100022d1:	eb 3d                	jmp    10002310 <ssfn_render+0xffd>
100022d3:	48                   	dec    eax
100022d4:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100022db:	83 f8 fe             	cmp    eax,0xfffffffe
100022de:	74 16                	je     100022f6 <ssfn_render+0xfe3>
100022e0:	8d 5a 01             	lea    ebx,[edx+0x1]
100022e3:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022ea:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022ed:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022f4:	eb dd                	jmp    100022d3 <ssfn_render+0xfc0>
100022f6:	83 c1 02             	add    ecx,0x2
100022f9:	eb 86                	jmp    10002281 <ssfn_render+0xf6e>
100022fb:	42                   	inc    edx
100022fc:	8d 73 01             	lea    esi,[ebx+0x1]
100022ff:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10002306:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002309:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002310:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
10002314:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
1000231b:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002320:	75 d9                	jne    100022fb <ssfn_render+0xfe8>
10002322:	01 f9                	add    ecx,edi
10002324:	e9 58 ff ff ff       	jmp    10002281 <ssfn_render+0xf6e>
10002329:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000232d:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002331:	99                   	cdq    
10002332:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
10002336:	0f af c8             	imul   ecx,eax
10002339:	31 c0                	xor    eax,eax
1000233b:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002340:	74 0e                	je     10002350 <ssfn_render+0x103d>
10002342:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002346:	bb 04 00 00 00       	mov    ebx,0x4
1000234b:	29 f8                	sub    eax,edi
1000234d:	99                   	cdq    
1000234e:	f7 fb                	idiv   ebx
10002350:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10002354:	31 db                	xor    ebx,ebx
10002356:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000235a:	31 f6                	xor    esi,esi
1000235c:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
10002363:	01 c1                	add    ecx,eax
10002365:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002369:	7f 30                	jg     1000239b <ssfn_render+0x1088>
1000236b:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000236f:	85 c0                	test   eax,eax
10002371:	79 02                	jns    10002375 <ssfn_render+0x1062>
10002373:	31 c0                	xor    eax,eax
10002375:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002379:	47                   	inc    edi
1000237a:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
1000237e:	b2 01                	mov    dl,0x1
10002380:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
10002384:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002388:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
1000238c:	7c 9b                	jl     10002329 <ssfn_render+0x1016>
1000238e:	84 d2                	test   dl,dl
10002390:	74 3b                	je     100023cd <ssfn_render+0x10ba>
10002392:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002399:	eb 32                	jmp    100023cd <ssfn_render+0x10ba>
1000239b:	89 d8                	mov    eax,ebx
1000239d:	99                   	cdq    
1000239e:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
100023a2:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
100023a9:	3c ff                	cmp    al,0xff
100023ab:	74 0e                	je     100023bb <ssfn_render+0x10a8>
100023ad:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023b1:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023b7:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
100023bb:	46                   	inc    esi
100023bc:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
100023c0:	eb a3                	jmp    10002365 <ssfn_render+0x1052>
100023c2:	84 c0                	test   al,al
100023c4:	74 07                	je     100023cd <ssfn_render+0x10ba>
100023c6:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
100023cd:	b3 fe                	mov    bl,0xfe
100023cf:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
100023d3:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
100023d7:	e9 9f f5 ff ff       	jmp    1000197b <ssfn_render+0x668>
100023dc:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100023e2:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023e5:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023e8:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023eb:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023f1:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023f5:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023f9:	89 f0                	mov    eax,esi
100023fb:	89 d9                	mov    ecx,ebx
100023fd:	43                   	inc    ebx
100023fe:	39 de                	cmp    esi,ebx
10002400:	7e 08                	jle    1000240a <ssfn_render+0x10f7>
10002402:	48                   	dec    eax
10002403:	29 c8                	sub    eax,ecx
10002405:	88 42 07             	mov    BYTE PTR [edx+0x7],al
10002408:	eb 04                	jmp    1000240e <ssfn_render+0x10fb>
1000240a:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
1000240e:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
10002416:	0f 84 c9 0c 00 00    	je     100030e5 <ssfn_render+0x1dd2>
1000241c:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002422:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002428:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000242c:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
1000242f:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10002433:	0f ba e0 0c          	bt     eax,0xc
10002437:	72 22                	jb     1000245b <ssfn_render+0x1148>
10002439:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
1000243c:	83 e0 0f             	and    eax,0xf
1000243f:	3c 03                	cmp    al,0x3
10002441:	74 18                	je     1000245b <ssfn_render+0x1148>
10002443:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
10002447:	84 c9                	test   cl,cl
10002449:	74 10                	je     1000245b <ssfn_render+0x1148>
1000244b:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
1000244f:	0f af d7             	imul   edx,edi
10002452:	89 d0                	mov    eax,edx
10002454:	99                   	cdq    
10002455:	f7 f9                	idiv   ecx
10002457:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000245b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000245f:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
10002465:	7d 06                	jge    1000246d <ssfn_render+0x115a>
10002467:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
1000246d:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10002473:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
10002477:	0f b7 13             	movzx  edx,WORD PTR [ebx]
1000247a:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
1000247f:	89 d0                	mov    eax,edx
10002481:	99                   	cdq    
10002482:	f7 f9                	idiv   ecx
10002484:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002488:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000248c:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
1000248f:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
10002493:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
10002497:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000249b:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100024a0:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100024a4:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024a9:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024ad:	99                   	cdq    
100024ae:	f7 f9                	idiv   ecx
100024b0:	31 d2                	xor    edx,edx
100024b2:	83 ff 10             	cmp    edi,0x10
100024b5:	0f 9f c2             	setg   dl
100024b8:	42                   	inc    edx
100024b9:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
100024bd:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
100024c1:	7d 08                	jge    100024cb <ssfn_render+0x11b8>
100024c3:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100024c7:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100024cb:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
100024cf:	39 c2                	cmp    edx,eax
100024d1:	7d 04                	jge    100024d7 <ssfn_render+0x11c4>
100024d3:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024d7:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
100024dc:	74 4c                	je     1000252a <ssfn_render+0x1217>
100024de:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100024e2:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024e7:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024eb:	99                   	cdq    
100024ec:	f7 f9                	idiv   ecx
100024ee:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024f2:	81 e2 00 08 00 00    	and    edx,0x800
100024f8:	74 04                	je     100024fe <ssfn_render+0x11eb>
100024fa:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024fe:	01 d0                	add    eax,edx
10002500:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002506:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000250a:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
1000250e:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
10002512:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002517:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000251b:	99                   	cdq    
1000251c:	f7 f9                	idiv   ecx
1000251e:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10002522:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002528:	eb 22                	jmp    1000254c <ssfn_render+0x1239>
1000252a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000252e:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002538:	d1 f8                	sar    eax,1
1000253a:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
10002542:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002546:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
1000254c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002553:	8b 18                	mov    ebx,DWORD PTR [eax]
10002555:	85 db                	test   ebx,ebx
10002557:	0f 84 2e 09 00 00    	je     10002e8b <ssfn_render+0x1b78>
1000255d:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
10002561:	89 d1                	mov    ecx,edx
10002563:	89 d0                	mov    eax,edx
10002565:	66 c1 f9 0b          	sar    cx,0xb
10002569:	c1 f8 1f             	sar    eax,0x1f
1000256c:	31 c2                	xor    edx,eax
1000256e:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
10002572:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
10002576:	88 c8                	mov    al,cl
10002578:	83 e0 10             	and    eax,0x10
1000257b:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
1000257f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002583:	83 c0 40             	add    eax,0x40
10002586:	c1 f8 06             	sar    eax,0x6
10002589:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
10002590:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002594:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002598:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
1000259c:	7d 08                	jge    100025a6 <ssfn_render+0x1293>
1000259e:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100025a2:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
100025a6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100025a9:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025b1:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025b5:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
100025bd:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
100025c1:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100025c6:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100025ca:	99                   	cdq    
100025cb:	f7 f9                	idiv   ecx
100025cd:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100025d1:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025d8:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025db:	0f b6 f4             	movzx  esi,ah
100025de:	89 c2                	mov    edx,eax
100025e0:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025e4:	c1 ea 10             	shr    edx,0x10
100025e7:	0f b6 fa             	movzx  edi,dl
100025ea:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025ee:	0f b6 f8             	movzx  edi,al
100025f1:	c1 e8 18             	shr    eax,0x18
100025f4:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025f8:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025fc:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002603:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
10002606:	0f b6 fc             	movzx  edi,ah
10002609:	89 c2                	mov    edx,eax
1000260b:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002612:	c1 ea 10             	shr    edx,0x10
10002615:	0f b6 c0             	movzx  eax,al
10002618:	0f b6 f2             	movzx  esi,dl
1000261b:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002622:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002629:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
1000262d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002634:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000263b:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
1000263f:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002643:	0f af c2             	imul   eax,edx
10002646:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
1000264a:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
1000264e:	8d 04 90             	lea    eax,[eax+edx*4]
10002651:	01 d8                	add    eax,ebx
10002653:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
1000265a:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
1000265e:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
10002665:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000266a:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
10002671:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002675:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002679:	0f 8d e2 04 00 00    	jge    10002b61 <ssfn_render+0x184e>
1000267f:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002686:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000268d:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002691:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
10002695:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002699:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000269d:	39 d0                	cmp    eax,edx
1000269f:	0f 8d bc 04 00 00    	jge    10002b61 <ssfn_render+0x184e>
100026a5:	85 c0                	test   eax,eax
100026a7:	0f 88 94 04 00 00    	js     10002b41 <ssfn_render+0x182e>
100026ad:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026b3:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026b7:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100026bb:	c1 e1 08             	shl    ecx,0x8
100026be:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100026c6:	89 c8                	mov    eax,ecx
100026c8:	0f af c3             	imul   eax,ebx
100026cb:	99                   	cdq    
100026cc:	f7 fe                	idiv   esi
100026ce:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100026d5:	c1 f8 08             	sar    eax,0x8
100026d8:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
100026df:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026e5:	0f af c3             	imul   eax,ebx
100026e8:	99                   	cdq    
100026e9:	f7 fe                	idiv   esi
100026eb:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026ef:	c1 f8 08             	sar    eax,0x8
100026f2:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026f9:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026fd:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
10002704:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
1000270b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002712:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002716:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
1000271a:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000271e:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002722:	0f 8d 19 04 00 00    	jge    10002b41 <ssfn_render+0x182e>
10002728:	85 c0                	test   eax,eax
1000272a:	0f 88 ff 03 00 00    	js     10002b2f <ssfn_render+0x181c>
10002730:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002737:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
1000273b:	75 42                	jne    1000277f <ssfn_render+0x146c>
1000273d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002741:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002748:	b9 10 00 00 00       	mov    ecx,0x10
1000274d:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002750:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002757:	89 c2                	mov    edx,eax
10002759:	0f b6 fc             	movzx  edi,ah
1000275c:	d3 ea                	shr    edx,cl
1000275e:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002765:	0f b6 f2             	movzx  esi,dl
10002768:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
1000276c:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002773:	d3 e8                	shr    eax,cl
10002775:	0f b6 c0             	movzx  eax,al
10002778:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
1000277f:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002785:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002789:	0f b7 18             	movzx  ebx,WORD PTR [eax]
1000278c:	c1 e1 08             	shl    ecx,0x8
1000278f:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
10002793:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
1000279b:	89 c8                	mov    eax,ecx
1000279d:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
100027a5:	0f af c3             	imul   eax,ebx
100027a8:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027b0:	99                   	cdq    
100027b1:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
100027b9:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027bd:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100027c5:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
100027cc:	c1 f8 08             	sar    eax,0x8
100027cf:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100027d6:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100027dc:	0f af c3             	imul   eax,ebx
100027df:	99                   	cdq    
100027e0:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027e4:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027e8:	c1 f8 08             	sar    eax,0x8
100027eb:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027f2:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027f9:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027fd:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
10002801:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
10002805:	0f 8d 3b 02 00 00    	jge    10002a46 <ssfn_render+0x1733>
1000280b:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
1000280f:	c1 fa 08             	sar    edx,0x8
10002812:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002819:	75 25                	jne    10002840 <ssfn_render+0x152d>
1000281b:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002820:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
10002827:	b8 00 01 00 00       	mov    eax,0x100
1000282c:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
10002834:	29 c8                	sub    eax,ecx
10002836:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000283a:	39 c7                	cmp    edi,eax
1000283c:	7e 1c                	jle    1000285a <ssfn_render+0x1547>
1000283e:	eb 16                	jmp    10002856 <ssfn_render+0x1543>
10002840:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002848:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
1000284f:	75 09                	jne    1000285a <ssfn_render+0x1547>
10002851:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
10002856:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000285a:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
1000285e:	0f b7 00             	movzx  eax,WORD PTR [eax]
10002861:	0f af c2             	imul   eax,edx
10002864:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
1000286b:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
10002870:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10002875:	c1 f8 08             	sar    eax,0x8
10002878:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
1000287f:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
10002886:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000288a:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
1000288e:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
10002892:	0f 8d a1 01 00 00    	jge    10002a39 <ssfn_render+0x1726>
10002898:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000289c:	c1 f8 08             	sar    eax,0x8
1000289f:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
100028a6:	75 3b                	jne    100028e3 <ssfn_render+0x15d0>
100028a8:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028ad:	ba 00 01 00 00       	mov    edx,0x100
100028b2:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
100028ba:	29 ca                	sub    edx,ecx
100028bc:	89 f1                	mov    ecx,esi
100028be:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
100028c5:	39 d1                	cmp    ecx,edx
100028c7:	7c 0e                	jl     100028d7 <ssfn_render+0x15c4>
100028c9:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028cd:	81 fa 00 01 00 00    	cmp    edx,0x100
100028d3:	74 22                	je     100028f7 <ssfn_render+0x15e4>
100028d5:	89 d1                	mov    ecx,edx
100028d7:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
100028dc:	89 cf                	mov    edi,ecx
100028de:	c1 ff 08             	sar    edi,0x8
100028e1:	eb 14                	jmp    100028f7 <ssfn_render+0x15e4>
100028e3:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028ea:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028f1:	74 04                	je     100028f7 <ssfn_render+0x15e4>
100028f3:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028f7:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028fb:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028ff:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
10002906:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
1000290b:	81 fa ff 00 00 00    	cmp    edx,0xff
10002911:	75 37                	jne    1000294a <ssfn_render+0x1637>
10002913:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
1000291a:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
10002922:	0f af c7             	imul   eax,edi
10002925:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002929:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002930:	0f af c7             	imul   eax,edi
10002933:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002937:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
1000293e:	0f af c7             	imul   eax,edi
10002941:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002945:	e9 e2 00 00 00       	jmp    10002a2c <ssfn_render+0x1719>
1000294a:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002950:	74 2d                	je     1000297f <ssfn_render+0x166c>
10002952:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002955:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002958:	85 c9                	test   ecx,ecx
1000295a:	74 23                	je     1000297f <ssfn_render+0x166c>
1000295c:	01 c8                	add    eax,ecx
1000295e:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
10002961:	89 d9                	mov    ecx,ebx
10002963:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
1000296a:	c1 e9 10             	shr    ecx,0x10
1000296d:	0f b6 f7             	movzx  esi,bh
10002970:	0f b6 c1             	movzx  eax,cl
10002973:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002977:	0f b6 c3             	movzx  eax,bl
1000297a:	c1 eb 18             	shr    ebx,0x18
1000297d:	eb 14                	jmp    10002993 <ssfn_render+0x1680>
1000297f:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10002983:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10002987:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000298b:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
1000298f:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10002993:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002999:	75 25                	jne    100029c0 <ssfn_render+0x16ad>
1000299b:	0f af c7             	imul   eax,edi
1000299e:	0f af f7             	imul   esi,edi
100029a1:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029a5:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029a9:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029af:	0f af cf             	imul   ecx,edi
100029b2:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029b6:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
100029ba:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
100029be:	eb 6c                	jmp    10002a2c <ssfn_render+0x1719>
100029c0:	0f af f3             	imul   esi,ebx
100029c3:	0f af c3             	imul   eax,ebx
100029c6:	b9 ff 00 00 00       	mov    ecx,0xff
100029cb:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
100029d2:	29 d9                	sub    ecx,ebx
100029d4:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100029d8:	0f af d1             	imul   edx,ecx
100029db:	b9 ff 00 00 00       	mov    ecx,0xff
100029e0:	01 d0                	add    eax,edx
100029e2:	0f af c7             	imul   eax,edi
100029e5:	99                   	cdq    
100029e6:	f7 f9                	idiv   ecx
100029e8:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029ec:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029f0:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029f8:	01 f0                	add    eax,esi
100029fa:	89 ce                	mov    esi,ecx
100029fc:	0f af c7             	imul   eax,edi
100029ff:	99                   	cdq    
10002a00:	f7 f9                	idiv   ecx
10002a02:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
10002a06:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002a0a:	0f af cb             	imul   ecx,ebx
10002a0d:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a11:	0f af df             	imul   ebx,edi
10002a14:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a1c:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a20:	01 c8                	add    eax,ecx
10002a22:	0f af c7             	imul   eax,edi
10002a25:	99                   	cdq    
10002a26:	f7 fe                	idiv   esi
10002a28:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a2c:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a34:	e9 51 fe ff ff       	jmp    1000288a <ssfn_render+0x1577>
10002a39:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a41:	e9 b7 fd ff ff       	jmp    100027fd <ssfn_render+0x14ea>
10002a46:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a4b:	74 30                	je     10002a7d <ssfn_render+0x176a>
10002a4d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a51:	31 d2                	xor    edx,edx
10002a53:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a57:	31 d2                	xor    edx,edx
10002a59:	89 c1                	mov    ecx,eax
10002a5b:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a5f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a63:	31 d2                	xor    edx,edx
10002a65:	89 c6                	mov    esi,eax
10002a67:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a6b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a6f:	31 d2                	xor    edx,edx
10002a71:	89 c3                	mov    ebx,eax
10002a73:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a77:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a7b:	eb 1c                	jmp    10002a99 <ssfn_render+0x1786>
10002a7d:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a81:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a85:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a89:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a8d:	c1 e9 08             	shr    ecx,0x8
10002a90:	c1 ee 08             	shr    esi,0x8
10002a93:	c1 eb 08             	shr    ebx,0x8
10002a96:	c1 e8 08             	shr    eax,0x8
10002a99:	83 f8 0f             	cmp    eax,0xf
10002a9c:	0f 86 8d 00 00 00    	jbe    10002b2f <ssfn_render+0x181c>
10002aa2:	89 ca                	mov    edx,ecx
10002aa4:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002aaa:	76 05                	jbe    10002ab1 <ssfn_render+0x179e>
10002aac:	ba ff 00 00 00       	mov    edx,0xff
10002ab1:	b9 10 00 00 00       	mov    ecx,0x10
10002ab6:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002abd:	d3 e2                	shl    edx,cl
10002abf:	3d ff 00 00 00       	cmp    eax,0xff
10002ac4:	89 d1                	mov    ecx,edx
10002ac6:	76 05                	jbe    10002acd <ssfn_render+0x17ba>
10002ac8:	b8 ff 00 00 00       	mov    eax,0xff
10002acd:	c1 e0 18             	shl    eax,0x18
10002ad0:	09 c8                	or     eax,ecx
10002ad2:	81 fe ff 00 00 00    	cmp    esi,0xff
10002ad8:	76 05                	jbe    10002adf <ssfn_render+0x17cc>
10002ada:	be ff 00 00 00       	mov    esi,0xff
10002adf:	c1 e6 08             	shl    esi,0x8
10002ae2:	09 f0                	or     eax,esi
10002ae4:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002aea:	76 05                	jbe    10002af1 <ssfn_render+0x17de>
10002aec:	bb ff 00 00 00       	mov    ebx,0xff
10002af1:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002af5:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002af9:	d3 e3                	shl    ebx,cl
10002afb:	09 c3                	or     ebx,eax
10002afd:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002b04:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002b07:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002b0b:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b0f:	75 1e                	jne    10002b2f <ssfn_render+0x181c>
10002b11:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b18:	7e 07                	jle    10002b21 <ssfn_render+0x180e>
10002b1a:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b21:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b25:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b29:	7d 04                	jge    10002b2f <ssfn_render+0x181c>
10002b2b:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b2f:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b33:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b37:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b3b:	0f 85 ca fb ff ff    	jne    1000270b <ssfn_render+0x13f8>
10002b41:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b48:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b4c:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b50:	25 fc ff 00 00       	and    eax,0xfffc
10002b55:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b5c:	e9 10 fb ff ff       	jmp    10002671 <ssfn_render+0x135e>
10002b61:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b68:	0f 84 90 01 00 00    	je     10002cfe <ssfn_render+0x19eb>
10002b6e:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b76:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b7d:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b81:	40                   	inc    eax
10002b82:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b86:	29 c7                	sub    edi,eax
10002b88:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b8c:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b90:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b94:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b98:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b9c:	7e 09                	jle    10002ba7 <ssfn_render+0x1894>
10002b9e:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002ba2:	40                   	inc    eax
10002ba3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002ba7:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002bae:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bb5:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002bb9:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bbd:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bc1:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bc5:	0f af c2             	imul   eax,edx
10002bc8:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002bcc:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002bd0:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002bd4:	03 07                	add    eax,DWORD PTR [edi]
10002bd6:	89 c7                	mov    edi,eax
10002bd8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002bdc:	c1 e0 18             	shl    eax,0x18
10002bdf:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002be3:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002be7:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002beb:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002bf0:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002bf4:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002bf8:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bfc:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002c00:	0f 8e f8 00 00 00    	jle    10002cfe <ssfn_render+0x19eb>
10002c06:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c0d:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c14:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c18:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c1c:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c20:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c24:	39 d0                	cmp    eax,edx
10002c26:	0f 8d d2 00 00 00    	jge    10002cfe <ssfn_render+0x19eb>
10002c2c:	31 db                	xor    ebx,ebx
10002c2e:	85 c0                	test   eax,eax
10002c30:	79 23                	jns    10002c55 <ssfn_render+0x1942>
10002c32:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c39:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c3d:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c41:	25 fc ff 00 00       	and    eax,0xfffc
10002c46:	01 c7                	add    edi,eax
10002c48:	eb aa                	jmp    10002bf4 <ssfn_render+0x18e1>
10002c4a:	85 c0                	test   eax,eax
10002c4c:	79 20                	jns    10002c6e <ssfn_render+0x195b>
10002c4e:	43                   	inc    ebx
10002c4f:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c53:	7c dd                	jl     10002c32 <ssfn_render+0x191f>
10002c55:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c5c:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c60:	01 d8                	add    eax,ebx
10002c62:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c66:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c6a:	7c de                	jl     10002c4a <ssfn_render+0x1937>
10002c6c:	eb c4                	jmp    10002c32 <ssfn_render+0x191f>
10002c6e:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c72:	7e 06                	jle    10002c7a <ssfn_render+0x1967>
10002c74:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c78:	7f d4                	jg     10002c4e <ssfn_render+0x193b>
10002c7a:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c7d:	b8 10 00 00 00       	mov    eax,0x10
10002c82:	0f b6 f6             	movzx  esi,dh
10002c85:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c89:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c8d:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c91:	89 d0                	mov    eax,edx
10002c93:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c97:	d3 e8                	shr    eax,cl
10002c99:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c9d:	0f b6 c0             	movzx  eax,al
10002ca0:	d3 ea                	shr    edx,cl
10002ca2:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002ca6:	0f b6 f2             	movzx  esi,dl
10002ca9:	29 c1                	sub    ecx,eax
10002cab:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002caf:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cb4:	29 f2                	sub    edx,esi
10002cb6:	c1 f9 08             	sar    ecx,0x8
10002cb9:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cbe:	01 c8                	add    eax,ecx
10002cc0:	c1 fa 08             	sar    edx,0x8
10002cc3:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cc7:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002ccb:	d3 e0                	shl    eax,cl
10002ccd:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cd1:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002cd5:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002cd9:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cdd:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002ce2:	d3 e6                	shl    esi,cl
10002ce4:	c1 fa 08             	sar    edx,0x8
10002ce7:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002ceb:	c1 e2 08             	shl    edx,0x8
10002cee:	09 d0                	or     eax,edx
10002cf0:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002cf4:	09 c6                	or     esi,eax
10002cf6:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002cf9:	e9 50 ff ff ff       	jmp    10002c4e <ssfn_render+0x193b>
10002cfe:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002d05:	0f 84 80 01 00 00    	je     10002e8b <ssfn_render+0x1b78>
10002d0b:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d0f:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d13:	d1 fa                	sar    edx,1
10002d15:	40                   	inc    eax
10002d16:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d1a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d1e:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d22:	7e 09                	jle    10002d2d <ssfn_render+0x1a1a>
10002d24:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d28:	40                   	inc    eax
10002d29:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d2d:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d34:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d3b:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d3f:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d43:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d47:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d4b:	01 d0                	add    eax,edx
10002d4d:	0f af c1             	imul   eax,ecx
10002d50:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d54:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d58:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d5c:	03 03                	add    eax,DWORD PTR [ebx]
10002d5e:	89 c7                	mov    edi,eax
10002d60:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d64:	c1 e0 18             	shl    eax,0x18
10002d67:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d6b:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d73:	01 d0                	add    eax,edx
10002d75:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d79:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d7e:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d82:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d86:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d8a:	0f 8e fb 00 00 00    	jle    10002e8b <ssfn_render+0x1b78>
10002d90:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d97:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d9b:	01 d8                	add    eax,ebx
10002d9d:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002da4:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002da8:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002dac:	39 d0                	cmp    eax,edx
10002dae:	0f 8d d7 00 00 00    	jge    10002e8b <ssfn_render+0x1b78>
10002db4:	31 f6                	xor    esi,esi
10002db6:	85 c0                	test   eax,eax
10002db8:	0f 89 ad 00 00 00    	jns    10002e6b <ssfn_render+0x1b58>
10002dbe:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002dc5:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002dc9:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002dcd:	25 fc ff 00 00       	and    eax,0xfffc
10002dd2:	01 c7                	add    edi,eax
10002dd4:	eb ac                	jmp    10002d82 <ssfn_render+0x1a6f>
10002dd6:	85 c0                	test   eax,eax
10002dd8:	0f 88 82 00 00 00    	js     10002e60 <ssfn_render+0x1b4d>
10002dde:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002de1:	b8 10 00 00 00       	mov    eax,0x10
10002de6:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002dea:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002dee:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002df2:	89 d8                	mov    eax,ebx
10002df4:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002df8:	d3 e8                	shr    eax,cl
10002dfa:	0f b6 cf             	movzx  ecx,bh
10002dfd:	0f b6 c0             	movzx  eax,al
10002e00:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002e04:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e08:	d3 eb                	shr    ebx,cl
10002e0a:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e0e:	0f b6 db             	movzx  ebx,bl
10002e11:	29 c1                	sub    ecx,eax
10002e13:	29 da                	sub    edx,ebx
10002e15:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e1a:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e1f:	c1 f9 08             	sar    ecx,0x8
10002e22:	c1 fa 08             	sar    edx,0x8
10002e25:	01 c8                	add    eax,ecx
10002e27:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e2b:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e2f:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e33:	d3 e0                	shl    eax,cl
10002e35:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e39:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e3d:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e42:	c1 fa 08             	sar    edx,0x8
10002e45:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e49:	c1 e2 08             	shl    edx,0x8
10002e4c:	09 d0                	or     eax,edx
10002e4e:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e51:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e55:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e59:	d3 e2                	shl    edx,cl
10002e5b:	09 c2                	or     edx,eax
10002e5d:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e60:	46                   	inc    esi
10002e61:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e65:	0f 8c 53 ff ff ff    	jl     10002dbe <ssfn_render+0x1aab>
10002e6b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e72:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e76:	01 f0                	add    eax,esi
10002e78:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e7c:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e80:	0f 8c 50 ff ff ff    	jl     10002dd6 <ssfn_render+0x1ac3>
10002e86:	e9 33 ff ff ff       	jmp    10002dbe <ssfn_render+0x1aab>
10002e8b:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e92:	74 04                	je     10002e98 <ssfn_render+0x1b85>
10002e94:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e98:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e9c:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002ea0:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002ea6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ead:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002eb1:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002eb8:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ebb:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002ebf:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002ec5:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002ec9:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002ece:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002ed2:	99                   	cdq    
10002ed3:	f7 f9                	idiv   ecx
10002ed5:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002ed9:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002edf:	25 80 00 00 00       	and    eax,0x80
10002ee4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002ee8:	0f 85 f7 01 00 00    	jne    100030e5 <ssfn_render+0x1dd2>
10002eee:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ef1:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002ef5:	0f 84 ea 01 00 00    	je     100030e5 <ssfn_render+0x1dd2>
10002efb:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002f02:	83 ec 0c             	sub    esp,0xc
10002f05:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f0c:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f13:	51                   	push   ecx
10002f14:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f1b:	e8 53 d9 ff ff       	call   10000873 <_ssfn_c>
10002f20:	83 c4 10             	add    esp,0x10
10002f23:	85 c0                	test   eax,eax
10002f25:	0f 84 ba 01 00 00    	je     100030e5 <ssfn_render+0x1dd2>
10002f2b:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f33:	0f 86 ac 01 00 00    	jbe    100030e5 <ssfn_render+0x1dd2>
10002f39:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f3f:	8d 48 06             	lea    ecx,[eax+0x6]
10002f42:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f48:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f4c:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f50:	0f 8e 8f 01 00 00    	jle    100030e5 <ssfn_render+0x1dd2>
10002f56:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f58:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f5c:	8a 18                	mov    bl,BYTE PTR [eax]
10002f5e:	83 e3 40             	and    ebx,0x40
10002f61:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f66:	75 14                	jne    10002f7c <ssfn_render+0x1c69>
10002f68:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f6c:	75 0e                	jne    10002f7c <ssfn_render+0x1c69>
10002f6e:	80 fb 01             	cmp    bl,0x1
10002f71:	19 c0                	sbb    eax,eax
10002f73:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f77:	e9 60 01 00 00       	jmp    100030dc <ssfn_render+0x1dc9>
10002f7c:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f80:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f84:	c1 e6 10             	shl    esi,0x10
10002f87:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f8b:	84 db                	test   bl,bl
10002f8d:	74 08                	je     10002f97 <ssfn_render+0x1c84>
10002f8f:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f92:	83 c1 06             	add    ecx,0x6
10002f95:	eb 0c                	jmp    10002fa3 <ssfn_render+0x1c90>
10002f97:	c1 e2 08             	shl    edx,0x8
10002f9a:	83 c1 05             	add    ecx,0x5
10002f9d:	89 d0                	mov    eax,edx
10002f9f:	09 f0                	or     eax,esi
10002fa1:	09 c7                	or     edi,eax
10002fa3:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002fa6:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002faa:	01 f8                	add    eax,edi
10002fac:	8a 10                	mov    dl,BYTE PTR [eax]
10002fae:	88 d3                	mov    bl,dl
10002fb0:	83 e3 e0             	and    ebx,0xffffffe0
10002fb3:	80 fb c0             	cmp    bl,0xc0
10002fb6:	0f 85 20 01 00 00    	jne    100030dc <ssfn_render+0x1dc9>
10002fbc:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002fc0:	c1 e2 08             	shl    edx,0x8
10002fc3:	83 c0 02             	add    eax,0x2
10002fc6:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002fcc:	09 da                	or     edx,ebx
10002fce:	8d 72 01             	lea    esi,[edx+0x1]
10002fd1:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002fd5:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002fdc:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002fe0:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fe5:	0f 84 f1 00 00 00    	je     100030dc <ssfn_render+0x1dc9>
10002feb:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fef:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002ff2:	c1 e3 10             	shl    ebx,0x10
10002ff5:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002ffb:	09 d3                	or     ebx,edx
10002ffd:	39 de                	cmp    esi,ebx
10002fff:	0f 82 cf 00 00 00    	jb     100030d4 <ssfn_render+0x1dc1>
10003005:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10003008:	89 d7                	mov    edi,edx
1000300a:	c1 e7 10             	shl    edi,0x10
1000300d:	81 e7 00 00 0f 00    	and    edi,0xf0000
10003013:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10003017:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
1000301b:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
1000301f:	39 fe                	cmp    esi,edi
10003021:	0f 87 ad 00 00 00    	ja     100030d4 <ssfn_render+0x1dc1>
10003027:	29 de                	sub    esi,ebx
10003029:	c0 ea 04             	shr    dl,0x4
1000302c:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
10003033:	0f b6 d2             	movzx  edx,dl
10003036:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000303a:	89 d3                	mov    ebx,edx
1000303c:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003040:	c1 e3 10             	shl    ebx,0x10
10003043:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10003046:	09 da                	or     edx,ebx
10003048:	c0 e8 04             	shr    al,0x4
1000304b:	c1 e0 18             	shl    eax,0x18
1000304e:	09 c2                	or     edx,eax
10003050:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003054:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
10003057:	01 c2                	add    edx,eax
10003059:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
1000305c:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10003060:	39 d7                	cmp    edi,edx
10003062:	76 78                	jbe    100030dc <ssfn_render+0x1dc9>
10003064:	8a 1a                	mov    bl,BYTE PTR [edx]
10003066:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
1000306d:	89 de                	mov    esi,ebx
1000306f:	83 e6 7f             	and    esi,0x7f
10003072:	39 c6                	cmp    esi,eax
10003074:	73 1d                	jae    10003093 <ssfn_render+0x1d80>
10003076:	48                   	dec    eax
10003077:	bb 02 00 00 00       	mov    ebx,0x2
1000307c:	29 f0                	sub    eax,esi
1000307e:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
10003085:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10003088:	84 c0                	test   al,al
1000308a:	78 03                	js     1000308f <ssfn_render+0x1d7c>
1000308c:	8d 58 02             	lea    ebx,[eax+0x2]
1000308f:	01 da                	add    edx,ebx
10003091:	eb cd                	jmp    10003060 <ssfn_render+0x1d4d>
10003093:	be 01 00 00 00       	mov    esi,0x1
10003098:	84 db                	test   bl,bl
1000309a:	78 03                	js     1000309f <ssfn_render+0x1d8c>
1000309c:	8d 70 01             	lea    esi,[eax+0x1]
1000309f:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
100030a3:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100030a7:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030ac:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030b0:	99                   	cdq    
100030b1:	f7 fb                	idiv   ebx
100030b3:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
100030b8:	74 0d                	je     100030c7 <ssfn_render+0x1db4>
100030ba:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100030c1:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
100030c5:	eb 15                	jmp    100030dc <ssfn_render+0x1dc9>
100030c7:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
100030ce:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
100030d2:	eb 08                	jmp    100030dc <ssfn_render+0x1dc9>
100030d4:	83 c0 08             	add    eax,0x8
100030d7:	e9 00 ff ff ff       	jmp    10002fdc <ssfn_render+0x1cc9>
100030dc:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100030e0:	e9 5d fe ff ff       	jmp    10002f42 <ssfn_render+0x1c2f>
100030e5:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030ec:	eb 73                	jmp    10003161 <ssfn_render+0x1e4e>
100030ee:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030f9:	e9 50 e4 ff ff       	jmp    1000154e <ssfn_render+0x23b>
100030fe:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10003105:	57                   	push   edi
10003106:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000310d:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10003114:	e8 5a d7 ff ff       	call   10000873 <_ssfn_c>
10003119:	5f                   	pop    edi
1000311a:	85 c0                	test   eax,eax
1000311c:	0f 84 25 e4 ff ff    	je     10001547 <ssfn_render+0x234>
10003122:	e9 a2 e4 ff ff       	jmp    100015c9 <ssfn_render+0x2b6>
10003127:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000312a:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
1000312e:	75 0c                	jne    1000313c <ssfn_render+0x1e29>
10003130:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10003137:	e9 3b e4 ff ff       	jmp    10001577 <ssfn_render+0x264>
1000313c:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10003143:	57                   	push   edi
10003144:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000314b:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10003152:	e8 1c d7 ff ff       	call   10000873 <_ssfn_c>
10003157:	59                   	pop    ecx
10003158:	85 c0                	test   eax,eax
1000315a:	74 d4                	je     10003130 <ssfn_render+0x1e1d>
1000315c:	e9 68 e4 ff ff       	jmp    100015c9 <ssfn_render+0x2b6>
10003161:	81 c4 dc 05 01 00    	add    esp,0x105dc
10003167:	89 c8                	mov    eax,ecx
10003169:	5b                   	pop    ebx
1000316a:	5e                   	pop    esi
1000316b:	5f                   	pop    edi
1000316c:	5d                   	pop    ebp
1000316d:	c3                   	ret    

1000316e <ssfn_bbox>:
1000316e:	55                   	push   ebp
1000316f:	57                   	push   edi
10003170:	56                   	push   esi
10003171:	53                   	push   ebx
10003172:	83 ec 3c             	sub    esp,0x3c
10003175:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
1000317a:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
1000317e:	0f 94 c0             	sete   al
10003181:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
10003186:	0f 94 c2             	sete   dl
10003189:	09 d0                	or     eax,edx
1000318b:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
10003190:	0f 94 c2             	sete   dl
10003193:	09 d0                	or     eax,edx
10003195:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
1000319a:	0f 94 c2             	sete   dl
1000319d:	09 d0                	or     eax,edx
1000319f:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
100031a4:	0f 94 c2             	sete   dl
100031a7:	08 d0                	or     al,dl
100031a9:	0f 85 7c 01 00 00    	jne    1000332b <ssfn_bbox+0x1bd>
100031af:	85 db                	test   ebx,ebx
100031b1:	0f 84 74 01 00 00    	je     1000332b <ssfn_bbox+0x1bd>
100031b7:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031bb:	31 f6                	xor    esi,esi
100031bd:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c3:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031c7:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031cd:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100031d1:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031d7:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100031db:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031e1:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031e5:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031e8:	0f 84 42 01 00 00    	je     10003330 <ssfn_bbox+0x1c2>
100031ee:	8d 54 24 18          	lea    edx,[esp+0x18]
100031f2:	b9 06 00 00 00       	mov    ecx,0x6
100031f7:	89 d7                	mov    edi,edx
100031f9:	89 f0                	mov    eax,esi
100031fb:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
10003205:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003207:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000320f:	31 ff                	xor    edi,edi
10003211:	bd 01 00 00 00       	mov    ebp,0x1
10003216:	50                   	push   eax
10003217:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
1000321b:	8d 44 24 20          	lea    eax,[esp+0x20]
1000321f:	50                   	push   eax
10003220:	53                   	push   ebx
10003221:	e8 fc ff ff ff       	call   10003222 <ssfn_bbox+0xb4>	10003222: R_386_PC32	ssfn_render
10003226:	83 c4 10             	add    esp,0x10
10003229:	89 c6                	mov    esi,eax
1000322b:	85 c0                	test   eax,eax
1000322d:	74 6f                	je     1000329e <ssfn_bbox+0x130>
1000322f:	0f 88 fb 00 00 00    	js     10003330 <ssfn_bbox+0x1c2>
10003235:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
1000323b:	85 c0                	test   eax,eax
1000323d:	0f 84 ed 00 00 00    	je     10003330 <ssfn_bbox+0x1c2>
10003243:	85 ed                	test   ebp,ebp
10003245:	74 0b                	je     10003252 <ssfn_bbox+0xe4>
10003247:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
1000324d:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
10003252:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003256:	74 12                	je     1000326a <ssfn_bbox+0xfc>
10003258:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
1000325e:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003262:	7d 2f                	jge    10003293 <ssfn_bbox+0x125>
10003264:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003268:	eb 29                	jmp    10003293 <ssfn_bbox+0x125>
1000326a:	0f b7 08             	movzx  ecx,WORD PTR [eax]
1000326d:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
10003272:	39 cd                	cmp    ebp,ecx
10003274:	7d 05                	jge    1000327b <ssfn_bbox+0x10d>
10003276:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
1000327b:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
1000327f:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
10003284:	84 d2                	test   dl,dl
10003286:	75 04                	jne    1000328c <ssfn_bbox+0x11e>
10003288:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
1000328c:	01 ca                	add    edx,ecx
1000328e:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
10003293:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10003297:	31 ed                	xor    ebp,ebp
10003299:	e9 78 ff ff ff       	jmp    10003216 <ssfn_bbox+0xa8>
1000329e:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
100032a5:	74 23                	je     100032ca <ssfn_bbox+0x15c>
100032a7:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100032aa:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032ae:	75 1a                	jne    100032ca <ssfn_bbox+0x15c>
100032b0:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032b6:	b9 04 00 00 00       	mov    ecx,0x4
100032bb:	99                   	cdq    
100032bc:	f7 f9                	idiv   ecx
100032be:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
100032c3:	29 f8                	sub    eax,edi
100032c5:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
100032ca:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100032d0:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100032d4:	74 29                	je     100032ff <ssfn_bbox+0x191>
100032d6:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100032db:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100032df:	89 01                	mov    DWORD PTR [ecx],eax
100032e1:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032e5:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032eb:	89 01                	mov    DWORD PTR [ecx],eax
100032ed:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032f1:	89 38                	mov    DWORD PTR [eax],edi
100032f3:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032f7:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032fb:	89 38                	mov    DWORD PTR [eax],edi
100032fd:	eb 31                	jmp    10003330 <ssfn_bbox+0x1c2>
100032ff:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
10003304:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003308:	89 07                	mov    DWORD PTR [edi],eax
1000330a:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
1000330f:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
10003313:	89 07                	mov    DWORD PTR [edi],eax
10003315:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003319:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000331f:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003323:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003329:	eb 05                	jmp    10003330 <ssfn_bbox+0x1c2>
1000332b:	be fc ff ff ff       	mov    esi,0xfffffffc
10003330:	83 c4 3c             	add    esp,0x3c
10003333:	89 f0                	mov    eax,esi
10003335:	5b                   	pop    ebx
10003336:	5e                   	pop    esi
10003337:	5f                   	pop    edi
10003338:	5d                   	pop    ebp
10003339:	c3                   	ret    

1000333a <ssfn_text>:
1000333a:	55                   	push   ebp
1000333b:	57                   	push   edi
1000333c:	56                   	push   esi
1000333d:	53                   	push   ebx
1000333e:	83 ec 1c             	sub    esp,0x1c
10003341:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10003345:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003349:	85 f6                	test   esi,esi
1000334b:	0f 84 b2 00 00 00    	je     10003403 <ssfn_text+0xc9>
10003351:	85 ed                	test   ebp,ebp
10003353:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003358:	0f 84 a5 00 00 00    	je     10003403 <ssfn_text+0xc9>
1000335e:	83 ec 0c             	sub    esp,0xc
10003361:	6a 18                	push   0x18
10003363:	e8 fc ff ff ff       	call   10003364 <ssfn_text+0x2a>	10003364: R_386_PC32	malloc
10003368:	83 c4 10             	add    esp,0x10
1000336b:	89 c3                	mov    ebx,eax
1000336d:	85 c0                	test   eax,eax
1000336f:	0f 84 8e 00 00 00    	je     10003403 <ssfn_text+0xc9>
10003375:	31 c0                	xor    eax,eax
10003377:	b9 06 00 00 00       	mov    ecx,0x6
1000337c:	89 df                	mov    edi,ebx
1000337e:	80 3e 00             	cmp    BYTE PTR [esi],0x0
10003381:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003383:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10003387:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000338a:	74 79                	je     10003405 <ssfn_text+0xcb>
1000338c:	8d 43 0c             	lea    eax,[ebx+0xc]
1000338f:	52                   	push   edx
10003390:	52                   	push   edx
10003391:	50                   	push   eax
10003392:	8d 43 0a             	lea    eax,[ebx+0xa]
10003395:	50                   	push   eax
10003396:	8d 43 06             	lea    eax,[ebx+0x6]
10003399:	50                   	push   eax
1000339a:	8d 43 04             	lea    eax,[ebx+0x4]
1000339d:	50                   	push   eax
1000339e:	56                   	push   esi
1000339f:	55                   	push   ebp
100033a0:	e8 fc ff ff ff       	call   100033a1 <ssfn_text+0x67>	100033a1: R_386_PC32	ssfn_bbox
100033a5:	83 c4 20             	add    esp,0x20
100033a8:	85 c0                	test   eax,eax
100033aa:	75 59                	jne    10003405 <ssfn_text+0xcb>
100033ac:	83 ec 0c             	sub    esp,0xc
100033af:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033b3:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033b7:	0f af c8             	imul   ecx,eax
100033ba:	c1 e1 02             	shl    ecx,0x2
100033bd:	51                   	push   ecx
100033be:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100033c2:	e8 fc ff ff ff       	call   100033c3 <ssfn_text+0x89>	100033c3: R_386_PC32	malloc
100033c7:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033cb:	89 c7                	mov    edi,eax
100033cd:	89 03                	mov    DWORD PTR [ebx],eax
100033cf:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
100033d3:	83 c4 10             	add    esp,0x10
100033d6:	f3 aa                	rep stos BYTE PTR es:[edi],al
100033d8:	50                   	push   eax
100033d9:	56                   	push   esi
100033da:	53                   	push   ebx
100033db:	55                   	push   ebp
100033dc:	e8 fc ff ff ff       	call   100033dd <ssfn_text+0xa3>	100033dd: R_386_PC32	ssfn_render
100033e1:	83 c4 10             	add    esp,0x10
100033e4:	85 c0                	test   eax,eax
100033e6:	7e 04                	jle    100033ec <ssfn_text+0xb2>
100033e8:	01 c6                	add    esi,eax
100033ea:	eb ec                	jmp    100033d8 <ssfn_text+0x9e>
100033ec:	74 17                	je     10003405 <ssfn_text+0xcb>
100033ee:	83 ec 0c             	sub    esp,0xc
100033f1:	ff 33                	push   DWORD PTR [ebx]
100033f3:	e8 fc ff ff ff       	call   100033f4 <ssfn_text+0xba>	100033f4: R_386_PC32	free
100033f8:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033fb:	e8 fc ff ff ff       	call   100033fc <ssfn_text+0xc2>	100033fc: R_386_PC32	free
10003400:	83 c4 10             	add    esp,0x10
10003403:	31 db                	xor    ebx,ebx
10003405:	83 c4 1c             	add    esp,0x1c
10003408:	89 d8                	mov    eax,ebx
1000340a:	5b                   	pop    ebx
1000340b:	5e                   	pop    esi
1000340c:	5f                   	pop    edi
1000340d:	5d                   	pop    ebp
1000340e:	c3                   	ret    
1000340f:	90                   	nop

10003410 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003410:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003414:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
1000341a:	8b 10                	mov    edx,DWORD PTR [eax]
1000341c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003420:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
10003423:	90                   	nop

10003424 <NIContext::drvDarken4(int, int, int)>:
10003424:	55                   	push   ebp
10003425:	57                   	push   edi
10003426:	56                   	push   esi
10003427:	53                   	push   ebx
10003428:	83 ec 20             	sub    esp,0x20
1000342b:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000342f:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10003433:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10003437:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000343b:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003441:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10003445:	8b 10                	mov    edx,DWORD PTR [eax]
10003447:	56                   	push   esi
10003448:	53                   	push   ebx
10003449:	50                   	push   eax
1000344a:	ff 52 34             	call   DWORD PTR [edx+0x34]
1000344d:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003451:	89 c2                	mov    edx,eax
10003453:	0f b6 ec             	movzx  ebp,ah
10003456:	c1 ea 10             	shr    edx,0x10
10003459:	0f af e9             	imul   ebp,ecx
1000345c:	0f b6 d2             	movzx  edx,dl
1000345f:	0f b6 c0             	movzx  eax,al
10003462:	0f af d1             	imul   edx,ecx
10003465:	0f af c1             	imul   eax,ecx
10003468:	c1 ea 07             	shr    edx,0x7
1000346b:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
10003471:	c1 e8 07             	shr    eax,0x7
10003474:	8b 39                	mov    edi,DWORD PTR [ecx]
10003476:	c1 e2 10             	shl    edx,0x10
10003479:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
1000347d:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
10003481:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10003485:	c1 ed 07             	shr    ebp,0x7
10003488:	c1 e5 08             	shl    ebp,0x8
1000348b:	09 ea                	or     edx,ebp
1000348d:	09 c2                	or     edx,eax
1000348f:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
10003493:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
10003496:	83 c4 2c             	add    esp,0x2c
10003499:	5b                   	pop    ebx
1000349a:	5e                   	pop    esi
1000349b:	5f                   	pop    edi
1000349c:	5d                   	pop    ebp
1000349d:	ff e0                	jmp    eax
1000349f:	90                   	nop

100034a0 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
100034a0:	55                   	push   ebp
100034a1:	b9 00 40 00 00       	mov    ecx,0x4000
100034a6:	57                   	push   edi
100034a7:	b0 ff                	mov    al,0xff
100034a9:	56                   	push   esi
100034aa:	53                   	push   ebx
100034ab:	83 ec 3c             	sub    esp,0x3c
100034ae:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034b2:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034b6:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
100034b9:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100034bd:	f3 aa                	rep stos BYTE PTR es:[edi],al
100034bf:	85 db                	test   ebx,ebx
100034c1:	75 10                	jne    100034d3 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
100034c3:	83 ec 0c             	sub    esp,0xc
100034c6:	68 de 48 00 10       	push   0x100048de	100034c7: R_386_32	.text
100034cb:	e8 fc ff ff ff       	call   100034cc <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	100034cc: R_386_PC32	KePanic(char const*)
100034d0:	83 c4 10             	add    esp,0x10
100034d3:	50                   	push   eax
100034d4:	50                   	push   eax
100034d5:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d9:	50                   	push   eax
100034da:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034de:	50                   	push   eax
100034df:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034e3:	50                   	push   eax
100034e4:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034e8:	50                   	push   eax
100034e9:	56                   	push   esi
100034ea:	68 00 00 00 00       	push   0x0	100034eb: R_386_32	ssfn_ctx
100034ef:	e8 fc ff ff ff       	call   100034f0 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034f0: R_386_PC32	ssfn_bbox
100034f4:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034f7:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034ff:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10003503:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
1000350b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000350f:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
10003514:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003518:	0d 00 00 00 ff       	or     eax,0xff000000
1000351d:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003521:	83 c4 1c             	add    esp,0x1c
10003524:	56                   	push   esi
10003525:	8d 44 24 20          	lea    eax,[esp+0x20]
10003529:	50                   	push   eax
1000352a:	68 00 00 00 00       	push   0x0	1000352b: R_386_32	ssfn_ctx
1000352f:	e8 fc ff ff ff       	call   10003530 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003530: R_386_PC32	ssfn_render
10003534:	83 c4 10             	add    esp,0x10
10003537:	89 03                	mov    DWORD PTR [ebx],eax
10003539:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
1000353d:	31 db                	xor    ebx,ebx
1000353f:	89 f0                	mov    eax,esi
10003541:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
10003545:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003549:	7e 3f                	jle    1000358a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
1000354b:	31 ff                	xor    edi,edi
1000354d:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003552:	39 f8                	cmp    eax,edi
10003554:	7e 2c                	jle    10003582 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
10003556:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003559:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
1000355c:	83 f8 ff             	cmp    eax,0xffffffff
1000355f:	74 1d                	je     1000357e <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
10003561:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
10003567:	25 ff ff ff 00       	and    eax,0xffffff
1000356c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000356e:	50                   	push   eax
1000356f:	56                   	push   esi
10003570:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003574:	01 f8                	add    eax,edi
10003576:	50                   	push   eax
10003577:	52                   	push   edx
10003578:	ff 51 24             	call   DWORD PTR [ecx+0x24]
1000357b:	83 c4 10             	add    esp,0x10
1000357e:	43                   	inc    ebx
1000357f:	47                   	inc    edi
10003580:	eb cb                	jmp    1000354d <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
10003582:	29 c3                	sub    ebx,eax
10003584:	46                   	inc    esi
10003585:	83 c3 40             	add    ebx,0x40
10003588:	eb b5                	jmp    1000353f <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
1000358a:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000358f:	83 c4 3c             	add    esp,0x3c
10003592:	5b                   	pop    ebx
10003593:	5e                   	pop    esi
10003594:	5f                   	pop    edi
10003595:	5d                   	pop    ebp
10003596:	c3                   	ret    
10003597:	90                   	nop

10003598 <NIContext::~NIContext()>:
10003598:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	1000359c: R_386_32	ssfn_ctx
100035a0:	e9 00 db ff ff       	jmp    100010a5 <ssfn_free>
100035a5:	90                   	nop

100035a6 <NIContext::NIContext(Video*, int, int, int, int)>:
100035a6:	55                   	push   ebp
100035a7:	ba 00 00 00 00       	mov    edx,0x0	100035a8: R_386_32	ssfn_ctx
100035ac:	57                   	push   edi
100035ad:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035b2:	56                   	push   esi
100035b3:	89 d7                	mov    edi,edx
100035b5:	53                   	push   ebx
100035b6:	81 ec 48 02 00 00    	sub    esp,0x248
100035bc:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
100035c3:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
100035ca:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
100035d0:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
100035d7:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
100035dd:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035e4:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035ea:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035f1:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035f7:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035fe:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
10003604:	31 c0                	xor    eax,eax
10003606:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003608:	68 00 40 00 00       	push   0x4000
1000360d:	e8 fc ff ff ff       	call   1000360e <NIContext::NIContext(Video*, int, int, int, int)+0x68>	1000360e: R_386_PC32	malloc
10003612:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
1000361c:	89 03                	mov    DWORD PTR [ebx],eax
1000361e:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
10003625:	e8 fc ff ff ff       	call   10003626 <NIContext::NIContext(Video*, int, int, int, int)+0x80>	10003626: R_386_PC32	malloc
1000362a:	83 c4 0c             	add    esp,0xc
1000362d:	89 c6                	mov    esi,eax
1000362f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003631: R_386_32	kernelProcess
10003635:	68 f7 48 00 10       	push   0x100048f7	10003636: R_386_32	.text
1000363a:	50                   	push   eax
1000363b:	e8 fc ff ff ff       	call   1000363c <NIContext::NIContext(Video*, int, int, int, int)+0x96>	1000363c: R_386_PC32	Directory::Directory(char const*, Process*)
10003640:	83 c4 10             	add    esp,0x10
10003643:	85 f6                	test   esi,esi
10003645:	75 10                	jne    10003657 <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
10003647:	83 ec 0c             	sub    esp,0xc
1000364a:	68 0b 49 00 10       	push   0x1000490b	1000364b: R_386_32	.text
1000364f:	e8 fc ff ff ff       	call   10003650 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003650: R_386_PC32	KePanic(char const*)
10003654:	83 c4 10             	add    esp,0x10
10003657:	83 ec 0c             	sub    esp,0xc
1000365a:	56                   	push   esi
1000365b:	e8 fc ff ff ff       	call   1000365c <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	1000365c: R_386_PC32	Directory::open()
10003660:	83 c4 10             	add    esp,0x10
10003663:	85 c0                	test   eax,eax
10003665:	75 e0                	jne    10003647 <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
10003667:	83 ec 0c             	sub    esp,0xc
1000366a:	8b 06                	mov    eax,DWORD PTR [esi]
1000366c:	8d 4c 24 20          	lea    ecx,[esp+0x20]
10003670:	51                   	push   ecx
10003671:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003678:	52                   	push   edx
10003679:	6a 00                	push   0x0
1000367b:	68 10 01 00 00       	push   0x110
10003680:	56                   	push   esi
10003681:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003684:	83 c4 20             	add    esp,0x20
10003687:	85 c0                	test   eax,eax
10003689:	0f 85 a0 01 00 00    	jne    1000382f <NIContext::NIContext(Video*, int, int, int, int)+0x289>
1000368f:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
10003697:	0f 85 92 01 00 00    	jne    1000382f <NIContext::NIContext(Video*, int, int, int, int)+0x289>
1000369d:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
100036a4:	83 c9 ff             	or     ecx,0xffffffff
100036a7:	83 ec 0c             	sub    esp,0xc
100036aa:	89 ef                	mov    edi,ebp
100036ac:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036ae:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036b4:	89 ca                	mov    edx,ecx
100036b6:	f7 d2                	not    edx
100036b8:	52                   	push   edx
100036b9:	e8 fc ff ff ff       	call   100036ba <NIContext::NIContext(Video*, int, int, int, int)+0x114>	100036ba: R_386_PC32	malloc
100036be:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
100036c2:	47                   	inc    edi
100036c3:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
100036c9:	5a                   	pop    edx
100036ca:	59                   	pop    ecx
100036cb:	55                   	push   ebp
100036cc:	50                   	push   eax
100036cd:	e8 fc ff ff ff       	call   100036ce <NIContext::NIContext(Video*, int, int, int, int)+0x128>	100036ce: R_386_PC32	strcpy
100036d2:	5f                   	pop    edi
100036d3:	58                   	pop    eax
100036d4:	68 26 49 00 10       	push   0x10004926	100036d5: R_386_32	.text
100036d9:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
100036dd:	57                   	push   edi
100036de:	e8 fc ff ff ff       	call   100036df <NIContext::NIContext(Video*, int, int, int, int)+0x139>	100036df: R_386_PC32	strcpy
100036e3:	58                   	pop    eax
100036e4:	5a                   	pop    edx
100036e5:	55                   	push   ebp
100036e6:	57                   	push   edi
100036e7:	e8 fc ff ff ff       	call   100036e8 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036e8: R_386_PC32	strcat
100036ec:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036f3:	e8 fc ff ff ff       	call   100036f4 <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036f4: R_386_PC32	malloc
100036f8:	83 c4 0c             	add    esp,0xc
100036fb:	89 c5                	mov    ebp,eax
100036fd:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036ff: R_386_32	kernelProcess
10003703:	57                   	push   edi
10003704:	50                   	push   eax
10003705:	e8 fc ff ff ff       	call   10003706 <NIContext::NIContext(Video*, int, int, int, int)+0x160>	10003706: R_386_PC32	File::File(char const*, Process*)
1000370a:	83 c4 10             	add    esp,0x10
1000370d:	85 ed                	test   ebp,ebp
1000370f:	0f 84 52 ff ff ff    	je     10003667 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003715:	50                   	push   eax
10003716:	50                   	push   eax
10003717:	6a 01                	push   0x1
10003719:	55                   	push   ebp
1000371a:	e8 fc ff ff ff       	call   1000371b <NIContext::NIContext(Video*, int, int, int, int)+0x175>	1000371b: R_386_PC32	File::open(FileOpenMode)
1000371f:	83 c4 10             	add    esp,0x10
10003722:	85 c0                	test   eax,eax
10003724:	74 0c                	je     10003732 <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
10003726:	83 ec 0c             	sub    esp,0xc
10003729:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000372c:	55                   	push   ebp
1000372d:	e9 b4 00 00 00       	jmp    100037e6 <NIContext::NIContext(Video*, int, int, int, int)+0x240>
10003732:	50                   	push   eax
10003733:	8d 44 24 17          	lea    eax,[esp+0x17]
10003737:	50                   	push   eax
10003738:	8d 44 24 20          	lea    eax,[esp+0x20]
1000373c:	50                   	push   eax
1000373d:	55                   	push   ebp
1000373e:	e8 fc ff ff ff       	call   1000373f <NIContext::NIContext(Video*, int, int, int, int)+0x199>	1000373f: R_386_PC32	File::stat(unsigned long long*, bool*)
10003743:	83 c4 10             	add    esp,0x10
10003746:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
1000374b:	74 0e                	je     1000375b <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
1000374d:	83 ec 0c             	sub    esp,0xc
10003750:	55                   	push   ebp
10003751:	e8 fc ff ff ff       	call   10003752 <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	10003752: R_386_PC32	File::close()
10003756:	e9 85 00 00 00       	jmp    100037e0 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
1000375b:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000375f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10003763:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003767:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
1000376b:	83 ec 0c             	sub    esp,0xc
1000376e:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003772:	e8 fc ff ff ff       	call   10003773 <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	10003773: R_386_PC32	malloc
10003777:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000377b:	58                   	pop    eax
1000377c:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000377f:	8d 54 24 20          	lea    edx,[esp+0x20]
10003783:	52                   	push   edx
10003784:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003788:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000378c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003790:	55                   	push   ebp
10003791:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003794:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003798:	83 c4 1c             	add    esp,0x1c
1000379b:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000379f:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100037a3:	68 3b 49 00 10       	push   0x1000493b	100037a4: R_386_32	.text
100037a8:	e8 fc ff ff ff       	call   100037a9 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	100037a9: R_386_PC32	Dbg::kprintf(char const*, ...)
100037ad:	83 c4 10             	add    esp,0x10
100037b0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037b4:	85 c0                	test   eax,eax
100037b6:	75 15                	jne    100037cd <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037b8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100037bc:	89 c1                	mov    ecx,eax
100037be:	c1 f9 1f             	sar    ecx,0x1f
100037c1:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
100037c5:	75 06                	jne    100037cd <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037c7:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100037cb:	74 24                	je     100037f1 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
100037cd:	83 ec 0c             	sub    esp,0xc
100037d0:	55                   	push   ebp
100037d1:	e8 fc ff ff ff       	call   100037d2 <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	100037d2: R_386_PC32	File::close()
100037d6:	58                   	pop    eax
100037d7:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100037db:	e8 fc ff ff ff       	call   100037dc <NIContext::NIContext(Video*, int, int, int, int)+0x236>	100037dc: R_386_PC32	free
100037e0:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037e3:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037e6:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037e9:	83 c4 10             	add    esp,0x10
100037ec:	e9 76 fe ff ff       	jmp    10003667 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037f1:	50                   	push   eax
100037f2:	50                   	push   eax
100037f3:	57                   	push   edi
100037f4:	68 4f 49 00 10       	push   0x1000494f	100037f5: R_386_32	.text
100037f9:	e8 fc ff ff ff       	call   100037fa <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037fa: R_386_PC32	Dbg::kprintf(char const*, ...)
100037fe:	5a                   	pop    edx
100037ff:	59                   	pop    ecx
10003800:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10003804:	68 00 00 00 00       	push   0x0	10003805: R_386_32	ssfn_ctx
10003809:	e8 fc ff ff ff       	call   1000380a <NIContext::NIContext(Video*, int, int, int, int)+0x264>	1000380a: R_386_PC32	ssfn_load
1000380e:	5b                   	pop    ebx
1000380f:	5f                   	pop    edi
10003810:	50                   	push   eax
10003811:	68 60 49 00 10       	push   0x10004960	10003812: R_386_32	.text
10003816:	e8 fc ff ff ff       	call   10003817 <NIContext::NIContext(Video*, int, int, int, int)+0x271>	10003817: R_386_PC32	Dbg::kprintf(char const*, ...)
1000381b:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000381e:	e8 fc ff ff ff       	call   1000381f <NIContext::NIContext(Video*, int, int, int, int)+0x279>	1000381f: R_386_PC32	File::close()
10003823:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003826:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003829:	ff 50 08             	call   DWORD PTR [eax+0x8]
1000382c:	83 c4 10             	add    esp,0x10
1000382f:	83 ec 0c             	sub    esp,0xc
10003832:	56                   	push   esi
10003833:	e8 fc ff ff ff       	call   10003834 <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	10003834: R_386_PC32	Directory::close()
10003838:	8b 06                	mov    eax,DWORD PTR [esi]
1000383a:	89 34 24             	mov    DWORD PTR [esp],esi
1000383d:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003840:	b8 00 00 00 00       	mov    eax,0x0	10003841: R_386_32	ssfn_ctx
10003845:	e8 f7 cb ff ff       	call   10000441 <_ssfn_fc.part.1>
1000384a:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	1000384c: R_386_32	ssfn_ctx
10003854:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	10003856: R_386_32	ssfn_ctx
1000385e:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	10003860: R_386_32	ssfn_ctx
10003868:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	1000386a: R_386_32	ssfn_ctx
10003872:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	10003874: R_386_32	ssfn_ctx
1000387c:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	1000387e: R_386_32	ssfn_ctx
10003886:	81 c4 4c 02 00 00    	add    esp,0x24c
1000388c:	5b                   	pop    ebx
1000388d:	5e                   	pop    esi
1000388e:	5f                   	pop    edi
1000388f:	5d                   	pop    ebp
10003890:	c3                   	ret    
10003891:	90                   	nop

10003892 <NIDesktop::NIDesktop(NIContext*)>:
10003892:	53                   	push   ebx
10003893:	83 ec 14             	sub    esp,0x14
10003896:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000389a:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000389e:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
100038a5:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100038a8:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038af:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038b6:	6a 08                	push   0x8
100038b8:	e8 fc ff ff ff       	call   100038b9 <NIDesktop::NIDesktop(NIContext*)+0x27>	100038b9: R_386_PC32	malloc
100038bd:	89 03                	mov    DWORD PTR [ebx],eax
100038bf:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100038c6:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100038cc:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	100038ce: R_386_32	mouseDesktop
100038d2:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100038d4: R_386_32	guiMouseHandler
	100038d8: R_386_32	clipdrawHandleMouse(int, int, int, int)
100038dc:	83 c4 18             	add    esp,0x18
100038df:	5b                   	pop    ebx
100038e0:	c3                   	ret    
100038e1:	90                   	nop

100038e2 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
100038e2:	53                   	push   ebx
100038e3:	83 ec 08             	sub    esp,0x8
100038e6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100038ea:	8b 00                	mov    eax,DWORD PTR [eax]
100038ec:	8b 18                	mov    ebx,DWORD PTR [eax]
100038ee:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
100038f2:	74 1d                	je     10003911 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
100038f4:	8b 03                	mov    eax,DWORD PTR [ebx]
100038f6:	85 c0                	test   eax,eax
100038f8:	74 12                	je     1000390c <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038fa:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
100038fe:	74 0c                	je     1000390c <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003900:	83 ec 0c             	sub    esp,0xc
10003903:	50                   	push   eax
10003904:	e8 fc ff ff ff       	call   10003905 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	10003905: R_386_PC32	NIWindow::invalidate()
10003909:	83 c4 10             	add    esp,0x10
1000390c:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
1000390f:	eb dd                	jmp    100038ee <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003911:	83 c4 08             	add    esp,0x8
10003914:	5b                   	pop    ebx
10003915:	c3                   	ret    

10003916 <NIDesktop::getTopmostWindowAtPixel(int, int)>:
10003916:	57                   	push   edi
10003917:	56                   	push   esi
10003918:	53                   	push   ebx
10003919:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000391d:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003921:	8b 00                	mov    eax,DWORD PTR [eax]
10003923:	8b 00                	mov    eax,DWORD PTR [eax]
10003925:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003928:	85 db                	test   ebx,ebx
1000392a:	74 43                	je     1000396f <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
1000392c:	8b 00                	mov    eax,DWORD PTR [eax]
1000392e:	85 c0                	test   eax,eax
10003930:	74 3f                	je     10003971 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003932:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003935:	39 ca                	cmp    edx,ecx
10003937:	7e 04                	jle    1000393d <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003939:	89 d8                	mov    eax,ebx
1000393b:	eb e8                	jmp    10003925 <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
1000393d:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003940:	01 d6                	add    esi,edx
10003942:	39 ce                	cmp    esi,ecx
10003944:	7e f3                	jle    10003939 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003946:	89 ce                	mov    esi,ecx
10003948:	29 d6                	sub    esi,edx
1000394a:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
1000394d:	8d 34 b2             	lea    esi,[edx+esi*4]
10003950:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10003953:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003956:	01 d7                	add    edi,edx
10003958:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
1000395c:	7f db                	jg     10003939 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000395e:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
10003961:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003965:	29 f2                	sub    edx,esi
10003967:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
1000396b:	7e cc                	jle    10003939 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000396d:	eb 02                	jmp    10003971 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
1000396f:	31 c0                	xor    eax,eax
10003971:	5b                   	pop    ebx
10003972:	5e                   	pop    esi
10003973:	5f                   	pop    edi
10003974:	c3                   	ret    
10003975:	90                   	nop

10003976 <NIDesktop::renderScanline(int, int, int)>:
10003976:	55                   	push   ebp
10003977:	57                   	push   edi
10003978:	56                   	push   esi
10003979:	53                   	push   ebx
1000397a:	83 ec 2c             	sub    esp,0x2c
1000397d:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003981:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10003985:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003989:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000398d:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10003991:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	10003993: R_386_32	render
10003997:	31 c0                	xor    eax,eax
10003999:	89 d7                	mov    edi,edx
1000399b:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000399d:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039a1:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100039a5:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100039a7: R_386_32	shadow
100039ab:	b0 80                	mov    al,0x80
100039ad:	89 d7                	mov    edi,edx
100039af:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039b1:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039b5:	8b 00                	mov    eax,DWORD PTR [eax]
100039b7:	8b 00                	mov    eax,DWORD PTR [eax]
100039b9:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100039bd:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100039bf: R_386_32	movingWin
100039c3:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100039c7:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100039ca:	85 c0                	test   eax,eax
100039cc:	75 09                	jne    100039d7 <NIDesktop::renderScanline(int, int, int)+0x61>
100039ce:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039d2:	e9 cb 02 00 00       	jmp    10003ca2 <NIDesktop::renderScanline(int, int, int)+0x32c>
100039d7:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100039db:	8b 1f                	mov    ebx,DWORD PTR [edi]
100039dd:	85 db                	test   ebx,ebx
100039df:	74 ed                	je     100039ce <NIDesktop::renderScanline(int, int, int)+0x58>
100039e1:	39 da                	cmp    edx,ebx
100039e3:	75 06                	jne    100039eb <NIDesktop::renderScanline(int, int, int)+0x75>
100039e5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100039e9:	eb d8                	jmp    100039c3 <NIDesktop::renderScanline(int, int, int)+0x4d>
100039eb:	83 ec 0c             	sub    esp,0xc
100039ee:	53                   	push   ebx
100039ef:	e8 fc ff ff ff       	call   100039f0 <NIDesktop::renderScanline(int, int, int)+0x7a>	100039f0: R_386_PC32	NIWindow::request()
100039f4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100039f7:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
100039fa:	83 c4 10             	add    esp,0x10
100039fd:	01 c2                	add    edx,eax
100039ff:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a03:	0f 8e ad 00 00 00    	jle    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x140>
10003a09:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a0d:	0f 85 a3 00 00 00    	jne    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x140>
10003a13:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a17:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a1a:	83 c0 06             	add    eax,0x6
10003a1d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a21:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a24:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a27:	01 c8                	add    eax,ecx
10003a29:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003a2d:	39 d0                	cmp    eax,edx
10003a2f:	0f 8e 40 01 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003a35:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a39:	7c 75                	jl     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x13a>
10003a3b:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a3f:	0f 8f 30 01 00 00    	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003a45:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a48:	89 d5                	mov    ebp,edx
10003a4a:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a4d:	29 cd                	sub    ebp,ecx
10003a4f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a53:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003a57:	39 f0                	cmp    eax,esi
10003a59:	7c 1d                	jl     10003a78 <NIDesktop::renderScanline(int, int, int)+0x102>
10003a5b:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003a5e:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003a61:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003a64:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003a68:	7f 0e                	jg     10003a78 <NIDesktop::renderScanline(int, int, int)+0x102>
10003a6a:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003a6e:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
10003a72:	29 cd                	sub    ebp,ecx
10003a74:	39 d5                	cmp    ebp,edx
10003a76:	7d 07                	jge    10003a7f <NIDesktop::renderScanline(int, int, int)+0x109>
10003a78:	40                   	inc    eax
10003a79:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003a7d:	75 d8                	jne    10003a57 <NIDesktop::renderScanline(int, int, int)+0xe1>
10003a7f:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003a83:	48                   	dec    eax
10003a84:	83 f8 03             	cmp    eax,0x3
10003a87:	77 27                	ja     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x13a>
10003a89:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003a8b: R_386_32	render
10003a90:	75 1e                	jne    10003ab0 <NIDesktop::renderScanline(int, int, int)+0x13a>
10003a92:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a99:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a9c: R_386_32	shadow
10003aa0:	0f af c1             	imul   eax,ecx
10003aa3:	d1 f9                	sar    ecx,1
10003aa5:	c1 f8 08             	sar    eax,0x8
10003aa8:	01 c1                	add    ecx,eax
10003aaa:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003aac: R_386_32	shadow
10003ab0:	42                   	inc    edx
10003ab1:	e9 6b ff ff ff       	jmp    10003a21 <NIDesktop::renderScanline(int, int, int)+0xab>
10003ab6:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003aba:	0f 8d b5 00 00 00    	jge    10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003ac0:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003ac4:	0f 85 ab 00 00 00    	jne    10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003aca:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003ace:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003ad1:	8d 77 fa             	lea    esi,[edi-0x6]
10003ad4:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003ad8:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003adb:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003ade:	01 ce                	add    esi,ecx
10003ae0:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
10003ae4:	39 c6                	cmp    esi,eax
10003ae6:	0f 8e 89 00 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003aec:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003af0:	7c 7d                	jl     10003b6f <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003af2:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003af6:	7f 7d                	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x1ff>
10003af8:	89 c7                	mov    edi,eax
10003afa:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003afe:	29 cf                	sub    edi,ecx
10003b00:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b04:	4a                   	dec    edx
10003b05:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b09:	29 d1                	sub    ecx,edx
10003b0b:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b0f:	74 32                	je     10003b43 <NIDesktop::renderScanline(int, int, int)+0x1cd>
10003b11:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b14:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b17:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b1a:	39 d5                	cmp    ebp,edx
10003b1c:	7e e6                	jle    10003b04 <NIDesktop::renderScanline(int, int, int)+0x18e>
10003b1e:	89 d5                	mov    ebp,edx
10003b20:	29 fd                	sub    ebp,edi
10003b22:	39 ee                	cmp    esi,ebp
10003b24:	7e 1d                	jle    10003b43 <NIDesktop::renderScanline(int, int, int)+0x1cd>
10003b26:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b29:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b2c:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b2f:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b33:	7f cf                	jg     10003b04 <NIDesktop::renderScanline(int, int, int)+0x18e>
10003b35:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b39:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10003b3d:	29 f7                	sub    edi,esi
10003b3f:	39 c7                	cmp    edi,eax
10003b41:	7c c1                	jl     10003b04 <NIDesktop::renderScanline(int, int, int)+0x18e>
10003b43:	83 f9 04             	cmp    ecx,0x4
10003b46:	77 27                	ja     10003b6f <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003b48:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b4a: R_386_32	render
10003b4f:	75 1e                	jne    10003b6f <NIDesktop::renderScanline(int, int, int)+0x1f9>
10003b51:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003b58:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003b5b: R_386_32	shadow
10003b5f:	0f af d1             	imul   edx,ecx
10003b62:	d1 f9                	sar    ecx,1
10003b64:	c1 fa 08             	sar    edx,0x8
10003b67:	01 d1                	add    ecx,edx
10003b69:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003b6b: R_386_32	shadow
10003b6f:	40                   	inc    eax
10003b70:	e9 63 ff ff ff       	jmp    10003ad8 <NIDesktop::renderScanline(int, int, int)+0x162>
10003b75:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003b78:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b7c:	0f 8f 00 01 00 00    	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x30c>
10003b82:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003b85:	01 c2                	add    edx,eax
10003b87:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003b8b:	0f 8e f1 00 00 00    	jle    10003c82 <NIDesktop::renderScanline(int, int, int)+0x30c>
10003b91:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b95:	29 c2                	sub    edx,eax
10003b97:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003b9a:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b9e:	8d 14 90             	lea    edx,[eax+edx*4]
10003ba1:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003ba4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003ba8:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003bac:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003bb0:	74 09                	je     10003bbb <NIDesktop::renderScanline(int, int, int)+0x245>
10003bb2:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003bb6:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003bb9:	eb 78                	jmp    10003c33 <NIDesktop::renderScanline(int, int, int)+0x2bd>
10003bbb:	31 c9                	xor    ecx,ecx
10003bbd:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003bc0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003bc4:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003bc8:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003bcb:	01 cd                	add    ebp,ecx
10003bcd:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003bd1:	01 ca                	add    edx,ecx
10003bd3:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003bd5: R_386_32	render
10003bda:	75 1f                	jne    10003bfb <NIDesktop::renderScanline(int, int, int)+0x285>
10003bdc:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003bdf: R_386_32	shadow
10003be3:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003be6:	83 c7 7d             	add    edi,0x7d
10003be9:	0f af f7             	imul   esi,edi
10003bec:	d1 ff                	sar    edi,1
10003bee:	c1 fe 08             	sar    esi,0x8
10003bf1:	01 f7                	add    edi,esi
10003bf3:	89 f8                	mov    eax,edi
10003bf5:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003bf7: R_386_32	shadow
10003bfb:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003bfd: R_386_32	render
10003c02:	75 20                	jne    10003c24 <NIDesktop::renderScanline(int, int, int)+0x2ae>
10003c04:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c0b:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c0e: R_386_32	shadow
10003c12:	0f af f7             	imul   esi,edi
10003c15:	d1 ff                	sar    edi,1
10003c17:	c1 fe 08             	sar    esi,0x8
10003c1a:	01 f7                	add    edi,esi
10003c1c:	89 f8                	mov    eax,edi
10003c1e:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c20: R_386_32	shadow
10003c24:	41                   	inc    ecx
10003c25:	83 f9 04             	cmp    ecx,0x4
10003c28:	75 93                	jne    10003bbd <NIDesktop::renderScanline(int, int, int)+0x247>
10003c2a:	eb 86                	jmp    10003bb2 <NIDesktop::renderScanline(int, int, int)+0x23c>
10003c2c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c30:	7d 11                	jge    10003c43 <NIDesktop::renderScanline(int, int, int)+0x2cd>
10003c32:	40                   	inc    eax
10003c33:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c36:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c39:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c3d:	39 c2                	cmp    edx,eax
10003c3f:	7f eb                	jg     10003c2c <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c41:	eb 3f                	jmp    10003c82 <NIDesktop::renderScanline(int, int, int)+0x30c>
10003c43:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c47:	7f 39                	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x30c>
10003c49:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c4b: R_386_32	render
10003c50:	75 e0                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2bc>
10003c52:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c54: R_386_32	render
10003c59:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003c5d:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003c60:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003c63:	0f af ca             	imul   ecx,edx
10003c66:	89 c2                	mov    edx,eax
10003c68:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003c6b:	01 ca                	add    edx,ecx
10003c6d:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003c70:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003c74:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003c77:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003c7a: R_386_32	renderData
10003c7e:	75 b2                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2bc>
10003c80:	eb 40                	jmp    10003cc2 <NIDesktop::renderScanline(int, int, int)+0x34c>
10003c82:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003c86:	0f 85 42 fd ff ff    	jne    100039ce <NIDesktop::renderScanline(int, int, int)+0x58>
10003c8c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003c90:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c93:	e9 21 fd ff ff       	jmp    100039b9 <NIDesktop::renderScanline(int, int, int)+0x43>
10003c98:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9a: R_386_32	render
10003c9f:	74 09                	je     10003caa <NIDesktop::renderScanline(int, int, int)+0x334>
10003ca1:	40                   	inc    eax
10003ca2:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003ca6:	7c f0                	jl     10003c98 <NIDesktop::renderScanline(int, int, int)+0x322>
10003ca8:	eb 18                	jmp    10003cc2 <NIDesktop::renderScanline(int, int, int)+0x34c>
10003caa:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003cac: R_386_32	render
10003cb1:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003cb4: R_386_32	renderData
10003cbc:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003cc0:	75 df                	jne    10003ca1 <NIDesktop::renderScanline(int, int, int)+0x32b>
10003cc2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cc6:	8b 00                	mov    eax,DWORD PTR [eax]
10003cc8:	8b 00                	mov    eax,DWORD PTR [eax]
10003cca:	85 c0                	test   eax,eax
10003ccc:	74 5e                	je     10003d2c <NIDesktop::renderScanline(int, int, int)+0x3b6>
10003cce:	8b 00                	mov    eax,DWORD PTR [eax]
10003cd0:	85 c0                	test   eax,eax
10003cd2:	74 58                	je     10003d2c <NIDesktop::renderScanline(int, int, int)+0x3b6>
10003cd4:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003cd8:	75 52                	jne    10003d2c <NIDesktop::renderScanline(int, int, int)+0x3b6>
10003cda:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003cde:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003ce2:	7d 48                	jge    10003d2c <NIDesktop::renderScanline(int, int, int)+0x3b6>
10003ce4:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003ce6: R_386_32	shadow
10003cea:	3c 80                	cmp    al,0x80
10003cec:	74 3b                	je     10003d29 <NIDesktop::renderScanline(int, int, int)+0x3b3>
10003cee:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003cf1: R_386_32	renderData
10003cf5:	0f b6 f0             	movzx  esi,al
10003cf8:	89 d1                	mov    ecx,edx
10003cfa:	0f b6 c6             	movzx  eax,dh
10003cfd:	c1 e9 10             	shr    ecx,0x10
10003d00:	0f af c6             	imul   eax,esi
10003d03:	0f b6 c9             	movzx  ecx,cl
10003d06:	0f b6 d2             	movzx  edx,dl
10003d09:	0f af ce             	imul   ecx,esi
10003d0c:	0f af d6             	imul   edx,esi
10003d0f:	c1 e9 07             	shr    ecx,0x7
10003d12:	c1 e8 07             	shr    eax,0x7
10003d15:	c1 e1 10             	shl    ecx,0x10
10003d18:	c1 e0 08             	shl    eax,0x8
10003d1b:	c1 ea 07             	shr    edx,0x7
10003d1e:	09 c1                	or     ecx,eax
10003d20:	09 ca                	or     edx,ecx
10003d22:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d25: R_386_32	renderData
10003d29:	43                   	inc    ebx
10003d2a:	eb b2                	jmp    10003cde <NIDesktop::renderScanline(int, int, int)+0x368>
10003d2c:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003d30:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10003d34:	7d 2f                	jge    10003d65 <NIDesktop::renderScanline(int, int, int)+0x3ef>
10003d36:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d3a:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003d3e:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d41:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d47:	8b 10                	mov    edx,DWORD PTR [eax]
10003d49:	ff 34 9d 00 00 00 00 	push   DWORD PTR [ebx*4+0x0]	10003d4c: R_386_32	renderData
10003d50:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10003d54:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10003d58:	50                   	push   eax
10003d59:	ff 52 24             	call   DWORD PTR [edx+0x24]
10003d5c:	ff 44 24 58          	inc    DWORD PTR [esp+0x58]
10003d60:	83 c4 10             	add    esp,0x10
10003d63:	eb c7                	jmp    10003d2c <NIDesktop::renderScanline(int, int, int)+0x3b6>
10003d65:	83 c4 2c             	add    esp,0x2c
10003d68:	5b                   	pop    ebx
10003d69:	5e                   	pop    esi
10003d6a:	5f                   	pop    edi
10003d6b:	5d                   	pop    ebp
10003d6c:	c3                   	ret    
10003d6d:	90                   	nop

10003d6e <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d6e:	53                   	push   ebx
10003d6f:	83 ec 08             	sub    esp,0x8
10003d72:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d76:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d7a:	7d 18                	jge    10003d94 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d7c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d80:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d84:	53                   	push   ebx
10003d85:	43                   	inc    ebx
10003d86:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d8a:	e8 fc ff ff ff       	call   10003d8b <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d8b: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d8f:	83 c4 10             	add    esp,0x10
10003d92:	eb e2                	jmp    10003d76 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d94:	83 c4 08             	add    esp,0x8
10003d97:	5b                   	pop    ebx
10003d98:	c3                   	ret    
10003d99:	90                   	nop

10003d9a <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d9a:	55                   	push   ebp
10003d9b:	ba 05 00 00 00       	mov    edx,0x5
10003da0:	57                   	push   edi
10003da1:	56                   	push   esi
10003da2:	53                   	push   ebx
10003da3:	83 ec 0c             	sub    esp,0xc
10003da6:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003daa:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003dad:	83 f8 05             	cmp    eax,0x5
10003db0:	7c 02                	jl     10003db4 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003db2:	89 c2                	mov    edx,eax
10003db4:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003db8:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003dbb:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003dbe:	83 ea 05             	sub    edx,0x5
10003dc1:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003dc7:	8d 70 05             	lea    esi,[eax+0x5]
10003dca:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003dcd:	39 c5                	cmp    ebp,eax
10003dcf:	7f 03                	jg     10003dd4 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003dd1:	8d 71 ff             	lea    esi,[ecx-0x1]
10003dd4:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003dd7:	89 c1                	mov    ecx,eax
10003dd9:	83 f8 05             	cmp    eax,0x5
10003ddc:	7d 05                	jge    10003de3 <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003dde:	b9 05 00 00 00       	mov    ecx,0x5
10003de3:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003de6:	83 e9 05             	sub    ecx,0x5
10003de9:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003def:	8d 58 05             	lea    ebx,[eax+0x5]
10003df2:	8d 6f fb             	lea    ebp,[edi-0x5]
10003df5:	39 c5                	cmp    ebp,eax
10003df7:	7f 03                	jg     10003dfc <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003df9:	8d 5f ff             	lea    ebx,[edi-0x1]
10003dfc:	83 ec 0c             	sub    esp,0xc
10003dff:	53                   	push   ebx
10003e00:	51                   	push   ecx
10003e01:	56                   	push   esi
10003e02:	52                   	push   edx
10003e03:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e07:	e8 fc ff ff ff       	call   10003e08 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e08: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e0c:	83 c4 2c             	add    esp,0x2c
10003e0f:	5b                   	pop    ebx
10003e10:	5e                   	pop    esi
10003e11:	5f                   	pop    edi
10003e12:	5d                   	pop    ebp
10003e13:	c3                   	ret    

10003e14 <NIDesktop::completeRefresh()>:
10003e14:	56                   	push   esi
10003e15:	53                   	push   ebx
10003e16:	31 f6                	xor    esi,esi
10003e18:	50                   	push   eax
10003e19:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e1d:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e20:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e26:	7e 15                	jle    10003e3d <NIDesktop::completeRefresh()+0x29>
10003e28:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e2e:	6a 00                	push   0x0
10003e30:	56                   	push   esi
10003e31:	46                   	inc    esi
10003e32:	53                   	push   ebx
10003e33:	e8 fc ff ff ff       	call   10003e34 <NIDesktop::completeRefresh()+0x20>	10003e34: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e38:	83 c4 10             	add    esp,0x10
10003e3b:	eb e0                	jmp    10003e1d <NIDesktop::completeRefresh()+0x9>
10003e3d:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e43:	83 ec 0c             	sub    esp,0xc
10003e46:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e48:	6a 00                	push   0x0
10003e4a:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e4d:	05 00 00 00 00       	add    eax,0x0	10003e4e: R_386_32	___mouse_data
10003e52:	50                   	push   eax
10003e53:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e56:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e59:	52                   	push   edx
10003e5a:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e5d:	83 c4 24             	add    esp,0x24
10003e60:	5b                   	pop    ebx
10003e61:	5e                   	pop    esi
10003e62:	c3                   	ret    
10003e63:	90                   	nop

10003e64 <NIDesktop::addWindow(NIWindow*)>:
10003e64:	56                   	push   esi
10003e65:	53                   	push   ebx
10003e66:	83 ec 0c             	sub    esp,0xc
10003e69:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e6d:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e71:	56                   	push   esi
10003e72:	ff 33                	push   DWORD PTR [ebx]
10003e74:	e8 fc ff ff ff       	call   10003e75 <NIDesktop::addWindow(NIWindow*)+0x11>	10003e75: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e79:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e7d:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e81:	83 c4 14             	add    esp,0x14
10003e84:	5b                   	pop    ebx
10003e85:	5e                   	pop    esi
10003e86:	e9 0f ff ff ff       	jmp    10003d9a <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e8b:	90                   	nop

10003e8c <NIDesktop::raiseWindow(NIWindow*)>:
10003e8c:	53                   	push   ebx
10003e8d:	83 ec 10             	sub    esp,0x10
10003e90:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e94:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e98:	50                   	push   eax
10003e99:	ff 33                	push   DWORD PTR [ebx]
10003e9b:	e8 fc ff ff ff       	call   10003e9c <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e9c: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003ea0:	58                   	pop    eax
10003ea1:	5a                   	pop    edx
10003ea2:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ea6:	ff 33                	push   DWORD PTR [ebx]
10003ea8:	e8 fc ff ff ff       	call   10003ea9 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ea9: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ead:	59                   	pop    ecx
10003eae:	58                   	pop    eax
10003eaf:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eb3:	53                   	push   ebx
10003eb4:	e8 fc ff ff ff       	call   10003eb5 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003eb5: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eb9:	83 c4 18             	add    esp,0x18
10003ebc:	5b                   	pop    ebx
10003ebd:	c3                   	ret    

10003ebe <NIDesktop::deleteWindow(NIWindow*)>:
10003ebe:	53                   	push   ebx
10003ebf:	83 ec 10             	sub    esp,0x10
10003ec2:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ec6:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003eca:	50                   	push   eax
10003ecb:	ff 33                	push   DWORD PTR [ebx]
10003ecd:	e8 fc ff ff ff       	call   10003ece <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003ece: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003ed2:	58                   	pop    eax
10003ed3:	5a                   	pop    edx
10003ed4:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ed8:	53                   	push   ebx
10003ed9:	e8 fc ff ff ff       	call   10003eda <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003eda: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003ede:	83 c4 18             	add    esp,0x18
10003ee1:	5b                   	pop    ebx
10003ee2:	c3                   	ret    
10003ee3:	90                   	nop

10003ee4 <NIDesktop::handleMouse(int, int, int, int)>:
10003ee4:	55                   	push   ebp
10003ee5:	57                   	push   edi
10003ee6:	56                   	push   esi
10003ee7:	53                   	push   ebx
10003ee8:	83 ec 28             	sub    esp,0x28
10003eeb:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003eef:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003ef2:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ef5:	8d 4a 20             	lea    ecx,[edx+0x20]
10003ef8:	51                   	push   ecx
10003ef9:	52                   	push   edx
10003efa:	8d 50 20             	lea    edx,[eax+0x20]
10003efd:	52                   	push   edx
10003efe:	50                   	push   eax
10003eff:	53                   	push   ebx
10003f00:	e8 fc ff ff ff       	call   10003f01 <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003f01: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f05:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f08:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f0c:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f0f:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10003f13:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f17:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003f1b:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f1f:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f22:	83 c4 20             	add    esp,0x20
10003f25:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f28:	85 d2                	test   edx,edx
10003f2a:	79 07                	jns    10003f33 <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003f2c:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f33:	85 c0                	test   eax,eax
10003f35:	79 07                	jns    10003f3e <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003f37:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f3e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f41:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f47:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f4a:	7f 04                	jg     10003f50 <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f4c:	48                   	dec    eax
10003f4d:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f50:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f56:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f59:	7f 04                	jg     10003f5f <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003f5b:	48                   	dec    eax
10003f5c:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f5f:	50                   	push   eax
10003f60:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f63:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f66:	53                   	push   ebx
10003f67:	e8 fc ff ff ff       	call   10003f68 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003f68: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f6c:	83 c4 10             	add    esp,0x10
10003f6f:	89 c6                	mov    esi,eax
10003f71:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f75:	83 e0 01             	and    eax,0x1
10003f78:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f7a: R_386_32	movingWin
10003f7f:	0f 84 89 01 00 00    	je     1000410e <NIDesktop::handleMouse(int, int, int, int)+0x22a>
10003f85:	c6 44 24 0f 00       	mov    BYTE PTR [esp+0xf],0x0
10003f8a:	85 c0                	test   eax,eax
10003f8c:	75 0c                	jne    10003f9a <NIDesktop::handleMouse(int, int, int, int)+0xb6>
10003f8e:	a0 d8 7e 03 10       	mov    al,ds:0x10037ed8	10003f8f: R_386_32	.bss
10003f93:	83 e0 01             	and    eax,0x1
10003f96:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10003f9a:	bf 01 00 00 00       	mov    edi,0x1
10003f9f:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003fa1: R_386_32	movingWin
10003fa5:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003fa8:	48                   	dec    eax
10003fa9:	39 f8                	cmp    eax,edi
10003fab:	0f 8e 8b 00 00 00    	jle    1000403c <NIDesktop::handleMouse(int, int, int, int)+0x158>
10003fb1:	bd 01 00 00 00       	mov    ebp,0x1
10003fb6:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fb7: R_386_32	movingWin
10003fbb:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10003fbe:	48                   	dec    eax
10003fbf:	39 e8                	cmp    eax,ebp
10003fc1:	7e 73                	jle    10004036 <NIDesktop::handleMouse(int, int, int, int)+0x152>
10003fc3:	8d 04 2f             	lea    eax,[edi+ebp*1]
10003fc6:	89 fa                	mov    edx,edi
10003fc8:	83 e0 1f             	and    eax,0x1f
10003fcb:	83 e2 03             	and    edx,0x3
10003fce:	09 d0                	or     eax,edx
10003fd0:	75 61                	jne    10004033 <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10003fd2:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003fd6:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003fda:	2b 15 d4 7e 03 10    	sub    edx,DWORD PTR ds:0x10037ed4	10003fdc: R_386_32	.bss
10003fe0:	83 ec 0c             	sub    esp,0xc
10003fe3:	01 ea                	add    edx,ebp
10003fe5:	2b 05 d0 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed0	10003fe7: R_386_32	.bss
10003feb:	8d 4a 01             	lea    ecx,[edx+0x1]
10003fee:	01 f8                	add    eax,edi
10003ff0:	51                   	push   ecx
10003ff1:	52                   	push   edx
10003ff2:	8d 50 01             	lea    edx,[eax+0x1]
10003ff5:	52                   	push   edx
10003ff6:	50                   	push   eax
10003ff7:	53                   	push   ebx
10003ff8:	e8 fc ff ff ff       	call   10003ff9 <NIDesktop::handleMouse(int, int, int, int)+0x115>	10003ff9: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003ffd:	83 c4 20             	add    esp,0x20
10004000:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
10004005:	75 2c                	jne    10004033 <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10004007:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000400a:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004010:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004012:	6a 00                	push   0x0
10004014:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004017:	01 f8                	add    eax,edi
10004019:	2b 05 d0 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed0	1000401b: R_386_32	.bss
1000401f:	50                   	push   eax
10004020:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004023:	01 e8                	add    eax,ebp
10004025:	2b 05 d4 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed4	10004027: R_386_32	.bss
1000402b:	50                   	push   eax
1000402c:	52                   	push   edx
1000402d:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10004030:	83 c4 10             	add    esp,0x10
10004033:	45                   	inc    ebp
10004034:	eb 80                	jmp    10003fb6 <NIDesktop::handleMouse(int, int, int, int)+0xd2>
10004036:	47                   	inc    edi
10004037:	e9 63 ff ff ff       	jmp    10003f9f <NIDesktop::handleMouse(int, int, int, int)+0xbb>
1000403c:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10004040:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004044:	8b 7a 20             	mov    edi,DWORD PTR [edx+0x20]
10004047:	83 ec 0c             	sub    esp,0xc
1000404a:	2b 0d d4 7e 03 10    	sub    ecx,DWORD PTR ds:0x10037ed4	1000404c: R_386_32	.bss
10004050:	2b 05 d0 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed0	10004052: R_386_32	.bss
10004056:	01 cf                	add    edi,ecx
10004058:	8d 50 01             	lea    edx,[eax+0x1]
1000405b:	57                   	push   edi
1000405c:	51                   	push   ecx
1000405d:	52                   	push   edx
1000405e:	50                   	push   eax
1000405f:	53                   	push   ebx
10004060:	e8 fc ff ff ff       	call   10004061 <NIDesktop::handleMouse(int, int, int, int)+0x17d>	10004061: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004065:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10004069:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
1000406d:	2b 05 d4 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed4	1000406f: R_386_32	.bss
10004073:	83 c4 14             	add    esp,0x14
10004076:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004078: R_386_32	movingWin
1000407c:	2b 0d d0 7e 03 10    	sub    ecx,DWORD PTR ds:0x10037ed0	1000407e: R_386_32	.bss
10004082:	8b 7a 20             	mov    edi,DWORD PTR [edx+0x20]
10004085:	03 4a 24             	add    ecx,DWORD PTR [edx+0x24]
10004088:	01 c7                	add    edi,eax
1000408a:	57                   	push   edi
1000408b:	50                   	push   eax
1000408c:	51                   	push   ecx
1000408d:	49                   	dec    ecx
1000408e:	51                   	push   ecx
1000408f:	53                   	push   ebx
10004090:	e8 fc ff ff ff       	call   10004091 <NIDesktop::handleMouse(int, int, int, int)+0x1ad>	10004091: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004095:	83 c4 20             	add    esp,0x20
10004098:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
1000409d:	0f 85 d5 01 00 00    	jne    10004278 <NIDesktop::handleMouse(int, int, int, int)+0x394>
100040a3:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100040a6:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100040ac:	50                   	push   eax
100040ad:	50                   	push   eax
100040ae:	a1 00 00 00 00       	mov    eax,ds:0x0	100040af: R_386_32	movingWin
100040b3:	8b 0a                	mov    ecx,DWORD PTR [edx]
100040b5:	6a 00                	push   0x0
100040b7:	6a 01                	push   0x1
100040b9:	ff 70 20             	push   DWORD PTR [eax+0x20]
100040bc:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100040bf:	2b 05 d0 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed0	100040c1: R_386_32	.bss
100040c5:	50                   	push   eax
100040c6:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
100040c9:	2b 05 d4 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed4	100040cb: R_386_32	.bss
100040cf:	50                   	push   eax
100040d0:	52                   	push   edx
100040d1:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100040d4:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100040d7:	83 c4 18             	add    esp,0x18
100040da:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100040e0:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	100040e2: R_386_32	movingWin
100040e6:	8b 0a                	mov    ecx,DWORD PTR [edx]
100040e8:	6a 00                	push   0x0
100040ea:	6a 01                	push   0x1
100040ec:	ff 77 20             	push   DWORD PTR [edi+0x20]
100040ef:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100040f2:	2b 05 d0 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed0	100040f4: R_386_32	.bss
100040f8:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
100040fb:	48                   	dec    eax
100040fc:	50                   	push   eax
100040fd:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004100:	2b 05 d4 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ed4	10004102: R_386_32	.bss
10004106:	50                   	push   eax
10004107:	52                   	push   edx
10004108:	ff 51 28             	call   DWORD PTR [ecx+0x28]
1000410b:	83 c4 20             	add    esp,0x20
1000410e:	85 f6                	test   esi,esi
10004110:	0f 84 2e 01 00 00    	je     10004244 <NIDesktop::handleMouse(int, int, int, int)+0x360>
10004116:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
1000411b:	0f 84 23 01 00 00    	je     10004244 <NIDesktop::handleMouse(int, int, int, int)+0x360>
10004121:	8b 0d d8 7e 03 10    	mov    ecx,DWORD PTR ds:0x10037ed8	10004123: R_386_32	.bss
10004127:	83 e1 01             	and    ecx,0x1
1000412a:	0f 85 dd 00 00 00    	jne    1000420d <NIDesktop::handleMouse(int, int, int, int)+0x329>
10004130:	a1 00 00 00 00       	mov    eax,ds:0x0	10004131: R_386_32	milliTenthsSinceBoot
10004135:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	10004137: R_386_32	milliTenthsSinceBoot
1000413b:	2b 05 c8 7e 03 10    	sub    eax,DWORD PTR ds:0x10037ec8	1000413d: R_386_32	.bss
10004141:	bf b7 0b 00 00       	mov    edi,0xbb7
10004146:	1b 15 cc 7e 03 10    	sbb    edx,DWORD PTR ds:0x10037ecc	10004148: R_386_32	.bss
1000414c:	39 c7                	cmp    edi,eax
1000414e:	19 d1                	sbb    ecx,edx
10004150:	0f 82 8b 00 00 00    	jb     100041e1 <NIDesktop::handleMouse(int, int, int, int)+0x2fd>
10004156:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
10004159:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000415c:	29 d0                	sub    eax,edx
1000415e:	83 f8 18             	cmp    eax,0x18
10004161:	7f 7e                	jg     100041e1 <NIDesktop::handleMouse(int, int, int, int)+0x2fd>
10004163:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004167:	74 26                	je     1000418f <NIDesktop::handleMouse(int, int, int, int)+0x2ab>
10004169:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
1000416c:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
1000416f:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004172:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
10004175:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
10004178:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000417b:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
1000417e:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004181:	55                   	push   ebp
10004182:	55                   	push   ebp
10004183:	56                   	push   esi
10004184:	53                   	push   ebx
10004185:	e8 fc ff ff ff       	call   10004186 <NIDesktop::handleMouse(int, int, int, int)+0x2a2>	10004186: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
1000418a:	83 c4 10             	add    esp,0x10
1000418d:	eb 3b                	jmp    100041ca <NIDesktop::handleMouse(int, int, int, int)+0x2e6>
1000418f:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004192:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
10004199:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
1000419c:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
100041a3:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
100041a6:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
100041a9:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
100041ac:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
100041af:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
100041b2:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100041b5:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
100041bb:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
100041be:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100041c1:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
100041c7:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
100041ca:	83 ec 0c             	sub    esp,0xc
100041cd:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
100041d1:	56                   	push   esi
100041d2:	e8 fc ff ff ff       	call   100041d3 <NIDesktop::handleMouse(int, int, int, int)+0x2ef>	100041d3: R_386_PC32	NIWindow::rerender()
100041d7:	89 1c 24             	mov    DWORD PTR [esp],ebx
100041da:	e8 fc ff ff ff       	call   100041db <NIDesktop::handleMouse(int, int, int, int)+0x2f7>	100041db: R_386_PC32	NIDesktop::completeRefresh()
100041df:	eb 11                	jmp    100041f2 <NIDesktop::handleMouse(int, int, int, int)+0x30e>
100041e1:	8b 03                	mov    eax,DWORD PTR [ebx]
100041e3:	8b 00                	mov    eax,DWORD PTR [eax]
100041e5:	39 30                	cmp    DWORD PTR [eax],esi
100041e7:	74 0c                	je     100041f5 <NIDesktop::handleMouse(int, int, int, int)+0x311>
100041e9:	57                   	push   edi
100041ea:	57                   	push   edi
100041eb:	56                   	push   esi
100041ec:	53                   	push   ebx
100041ed:	e8 fc ff ff ff       	call   100041ee <NIDesktop::handleMouse(int, int, int, int)+0x30a>	100041ee: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
100041f2:	83 c4 10             	add    esp,0x10
100041f5:	a1 00 00 00 00       	mov    eax,ds:0x0	100041f6: R_386_32	milliTenthsSinceBoot
100041fa:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100041fc: R_386_32	milliTenthsSinceBoot
10004200:	a3 c8 7e 03 10       	mov    ds:0x10037ec8,eax	10004201: R_386_32	.bss
10004205:	89 15 cc 7e 03 10    	mov    DWORD PTR ds:0x10037ecc,edx	10004207: R_386_32	.bss
1000420b:	eb 37                	jmp    10004244 <NIDesktop::handleMouse(int, int, int, int)+0x360>
1000420d:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	1000420f: R_386_32	movingWin
10004214:	75 2e                	jne    10004244 <NIDesktop::handleMouse(int, int, int, int)+0x360>
10004216:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004219:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
1000421c:	83 f8 18             	cmp    eax,0x18
1000421f:	7f 23                	jg     10004244 <NIDesktop::handleMouse(int, int, int, int)+0x360>
10004221:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004224:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
10004227:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	10004229: R_386_32	movingWin
1000422d:	51                   	push   ecx
1000422e:	89 15 d4 7e 03 10    	mov    DWORD PTR ds:0x10037ed4,edx	10004230: R_386_32	.bss
10004234:	51                   	push   ecx
10004235:	a3 d0 7e 03 10       	mov    ds:0x10037ed0,eax	10004236: R_386_32	.bss
1000423a:	56                   	push   esi
1000423b:	53                   	push   ebx
1000423c:	e8 fc ff ff ff       	call   1000423d <NIDesktop::handleMouse(int, int, int, int)+0x359>	1000423d: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
10004241:	83 c4 10             	add    esp,0x10
10004244:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004247:	83 ec 0c             	sub    esp,0xc
1000424a:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004250:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004252:	6a 00                	push   0x0
10004254:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10004257:	05 00 00 00 00       	add    eax,0x0	10004258: R_386_32	___mouse_data
1000425c:	50                   	push   eax
1000425d:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10004260:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004263:	52                   	push   edx
10004264:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10004267:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000426b:	a3 d8 7e 03 10       	mov    ds:0x10037ed8,eax	1000426c: R_386_32	.bss
10004270:	83 c4 3c             	add    esp,0x3c
10004273:	5b                   	pop    ebx
10004274:	5e                   	pop    esi
10004275:	5f                   	pop    edi
10004276:	5d                   	pop    ebp
10004277:	c3                   	ret    
10004278:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000427b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000427c: R_386_32	movingWin
10004280:	2b 15 d4 7e 03 10    	sub    edx,DWORD PTR ds:0x10037ed4	10004282: R_386_32	.bss
10004286:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004288: R_386_32	movingWin
10004290:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
10004293:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
10004296:	2b 15 d0 7e 03 10    	sub    edx,DWORD PTR ds:0x10037ed0	10004298: R_386_32	.bss
1000429c:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
1000429f:	52                   	push   edx
100042a0:	52                   	push   edx
100042a1:	50                   	push   eax
100042a2:	53                   	push   ebx
100042a3:	e8 fc ff ff ff       	call   100042a4 <NIDesktop::handleMouse(int, int, int, int)+0x3c0>	100042a4: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100042a8:	83 c4 10             	add    esp,0x10
100042ab:	e9 5e fe ff ff       	jmp    1000410e <NIDesktop::handleMouse(int, int, int, int)+0x22a>

100042b0 <clipdrawHandleMouse(int, int, int, int)>:
100042b0:	83 ec 18             	sub    esp,0x18
100042b3:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100042b7:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100042bb:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100042bf:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100042c3:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100042c5: R_386_32	mouseDesktop
100042c9:	e8 fc ff ff ff       	call   100042ca <clipdrawHandleMouse(int, int, int, int)+0x1a>	100042ca: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
100042ce:	83 c4 2c             	add    esp,0x2c
100042d1:	c3                   	ret    

100042d2 <drawVGAChar(int, int, int)>:
100042d2:	55                   	push   ebp
100042d3:	57                   	push   edi
100042d4:	56                   	push   esi
100042d5:	53                   	push   ebx
100042d6:	31 db                	xor    ebx,ebx
100042d8:	83 ec 1c             	sub    esp,0x1c
100042db:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100042df:	c1 e0 04             	shl    eax,0x4
100042e2:	89 04 24             	mov    DWORD PTR [esp],eax
100042e5:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100042e9:	c1 e0 04             	shl    eax,0x4
100042ec:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100042f0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100042f4:	c1 e0 03             	shl    eax,0x3
100042f7:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100042fb:	8b 04 24             	mov    eax,DWORD PTR [esp]
100042fe:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10004302:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	10004305: R_386_32	cp
10004309:	8d 3c 19             	lea    edi,[ecx+ebx*1]
1000430c:	31 f6                	xor    esi,esi
1000430e:	84 c0                	test   al,al
10004310:	79 22                	jns    10004334 <drawVGAChar(int, int, int)+0x62>
10004312:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10004316:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004318: R_386_32	screen
1000431c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000431e:	6a 00                	push   0x0
10004320:	57                   	push   edi
10004321:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10004325:	8d 2c 06             	lea    ebp,[esi+eax*1]
10004328:	55                   	push   ebp
10004329:	52                   	push   edx
1000432a:	ff 51 24             	call   DWORD PTR [ecx+0x24]
1000432d:	83 c4 10             	add    esp,0x10
10004330:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
10004334:	d1 e0                	shl    eax,1
10004336:	46                   	inc    esi
10004337:	83 fe 08             	cmp    esi,0x8
1000433a:	75 d2                	jne    1000430e <drawVGAChar(int, int, int)+0x3c>
1000433c:	43                   	inc    ebx
1000433d:	83 fb 10             	cmp    ebx,0x10
10004340:	75 b9                	jne    100042fb <drawVGAChar(int, int, int)+0x29>
10004342:	83 c4 1c             	add    esp,0x1c
10004345:	5b                   	pop    ebx
10004346:	5e                   	pop    esi
10004347:	5f                   	pop    edi
10004348:	5d                   	pop    ebp
10004349:	c3                   	ret    

1000434a <monikaBsod(char*)>:
1000434a:	55                   	push   ebp
1000434b:	57                   	push   edi
1000434c:	31 ff                	xor    edi,edi
1000434e:	56                   	push   esi
1000434f:	53                   	push   ebx
10004350:	31 db                	xor    ebx,ebx
10004352:	83 ec 24             	sub    esp,0x24
10004355:	a1 00 00 00 00       	mov    eax,ds:0x0	10004356: R_386_32	screen
1000435a:	8b 10                	mov    edx,DWORD PTR [eax]
1000435c:	68 ff ff ff 00       	push   0xffffff
10004361:	50                   	push   eax
10004362:	ff 52 40             	call   DWORD PTR [edx+0x40]
10004365:	83 c4 10             	add    esp,0x10
10004368:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	1000436a: R_386_32	justMonika
1000436e:	8d 43 01             	lea    eax,[ebx+0x1]
10004371:	84 c9                	test   cl,cl
10004373:	79 0e                	jns    10004383 <monikaBsod(char*)+0x39>
10004375:	8d 51 80             	lea    edx,[ecx-0x80]
10004378:	83 c3 02             	add    ebx,0x2
1000437b:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	1000437d: R_386_32	justMonika
10004381:	eb 04                	jmp    10004387 <monikaBsod(char*)+0x3d>
10004383:	89 c3                	mov    ebx,eax
10004385:	b2 01                	mov    dl,0x1
10004387:	0f b6 c1             	movzx  eax,cl
1000438a:	83 e1 03             	and    ecx,0x3
1000438d:	89 c6                	mov    esi,eax
1000438f:	6b c9 55             	imul   ecx,ecx,0x55
10004392:	c1 fe 05             	sar    esi,0x5
10004395:	c1 f8 02             	sar    eax,0x2
10004398:	83 e6 03             	and    esi,0x3
1000439b:	83 e0 07             	and    eax,0x7
1000439e:	6b f6 55             	imul   esi,esi,0x55
100043a1:	6b c0 24             	imul   eax,eax,0x24
100043a4:	c1 e6 10             	shl    esi,0x10
100043a7:	c1 e0 08             	shl    eax,0x8
100043aa:	09 f0                	or     eax,esi
100043ac:	31 f6                	xor    esi,esi
100043ae:	09 c8                	or     eax,ecx
100043b0:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100043b4:	0f b6 c2             	movzx  eax,dl
100043b7:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100043bb:	8d 04 37             	lea    eax,[edi+esi*1]
100043be:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
100043c2:	7f 10                	jg     100043d4 <monikaBsod(char*)+0x8a>
100043c4:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
100043c8:	81 ff ff af 04 00    	cmp    edi,0x4afff
100043ce:	7e 98                	jle    10004368 <monikaBsod(char*)+0x1e>
100043d0:	31 db                	xor    ebx,ebx
100043d2:	eb 25                	jmp    100043f9 <monikaBsod(char*)+0xaf>
100043d4:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043d6: R_386_32	screen
100043da:	b9 80 02 00 00       	mov    ecx,0x280
100043df:	8b 2a                	mov    ebp,DWORD PTR [edx]
100043e1:	46                   	inc    esi
100043e2:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100043e6:	99                   	cdq    
100043e7:	f7 f9                	idiv   ecx
100043e9:	50                   	push   eax
100043ea:	52                   	push   edx
100043eb:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100043ed: R_386_32	screen
100043f1:	ff 55 24             	call   DWORD PTR [ebp+0x24]
100043f4:	83 c4 10             	add    esp,0x10
100043f7:	eb c2                	jmp    100043bb <monikaBsod(char*)+0x71>
100043f9:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100043fd:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
10004401:	84 c0                	test   al,al
10004403:	74 10                	je     10004415 <monikaBsod(char*)+0xcb>
10004405:	43                   	inc    ebx
10004406:	52                   	push   edx
10004407:	50                   	push   eax
10004408:	6a 0b                	push   0xb
1000440a:	53                   	push   ebx
1000440b:	e8 fc ff ff ff       	call   1000440c <monikaBsod(char*)+0xc2>	1000440c: R_386_PC32	drawVGAChar(int, int, int)
10004410:	83 c4 10             	add    esp,0x10
10004413:	eb e4                	jmp    100043f9 <monikaBsod(char*)+0xaf>
10004415:	f4                   	hlt    
10004416:	eb fd                	jmp    10004415 <monikaBsod(char*)+0xcb>

10004418 <NIWindow::invalidate()>:
10004418:	53                   	push   ebx
10004419:	83 ec 08             	sub    esp,0x8
1000441c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004420:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004424:	74 1d                	je     10004443 <NIWindow::invalidate()+0x2b>
10004426:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
1000442a:	74 17                	je     10004443 <NIWindow::invalidate()+0x2b>
1000442c:	83 ec 0c             	sub    esp,0xc
1000442f:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004432:	e8 fc ff ff ff       	call   10004433 <NIWindow::invalidate()+0x1b>	10004433: R_386_PC32	free
10004437:	59                   	pop    ecx
10004438:	ff 73 14             	push   DWORD PTR [ebx+0x14]
1000443b:	e8 fc ff ff ff       	call   1000443c <NIWindow::invalidate()+0x24>	1000443c: R_386_PC32	free
10004440:	83 c4 10             	add    esp,0x10
10004443:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
1000444a:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10004451:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
10004455:	83 c4 08             	add    esp,0x8
10004458:	5b                   	pop    ebx
10004459:	c3                   	ret    

1000445a <NIWindow::putpixel(int, int, unsigned int)>:
1000445a:	56                   	push   esi
1000445b:	53                   	push   ebx
1000445c:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10004460:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004464:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
10004467:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
1000446b:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000446f:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10004473:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004476:	83 fe 04             	cmp    esi,0x4
10004479:	75 05                	jne    10004480 <NIWindow::putpixel(int, int, unsigned int)+0x26>
1000447b:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
1000447e:	eb 0e                	jmp    1000448e <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004480:	83 fe 02             	cmp    esi,0x2
10004483:	75 06                	jne    1000448b <NIWindow::putpixel(int, int, unsigned int)+0x31>
10004485:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10004489:	eb 03                	jmp    1000448e <NIWindow::putpixel(int, int, unsigned int)+0x34>
1000448b:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
1000448e:	5b                   	pop    ebx
1000448f:	5e                   	pop    esi
10004490:	c3                   	ret    
10004491:	90                   	nop

10004492 <NIWindow::rerender()>:
10004492:	55                   	push   ebp
10004493:	57                   	push   edi
10004494:	56                   	push   esi
10004495:	53                   	push   ebx
10004496:	83 ec 0c             	sub    esp,0xc
10004499:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000449d:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
100044a1:	74 0c                	je     100044af <NIWindow::rerender()+0x1d>
100044a3:	83 ec 0c             	sub    esp,0xc
100044a6:	53                   	push   ebx
100044a7:	e8 fc ff ff ff       	call   100044a8 <NIWindow::rerender()+0x16>	100044a8: R_386_PC32	NIWindow::invalidate()
100044ac:	83 c4 10             	add    esp,0x10
100044af:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
100044b2:	83 ec 0c             	sub    esp,0xc
100044b5:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
100044b8:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
100044bf:	50                   	push   eax
100044c0:	e8 fc ff ff ff       	call   100044c1 <NIWindow::rerender()+0x2f>	100044c1: R_386_PC32	malloc
100044c5:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
100044c9:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100044cc:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
100044d0:	89 34 24             	mov    DWORD PTR [esp],esi
100044d3:	e8 fc ff ff ff       	call   100044d4 <NIWindow::rerender()+0x42>	100044d4: R_386_PC32	malloc
100044d8:	83 c4 10             	add    esp,0x10
100044db:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
100044de:	31 c0                	xor    eax,eax
100044e0:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100044e3:	7e 6a                	jle    1000454f <NIWindow::rerender()+0xbd>
100044e5:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100044ec:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
100044ef:	01 d6                	add    esi,edx
100044f1:	83 f8 06             	cmp    eax,0x6
100044f4:	7f 1b                	jg     10004511 <NIWindow::rerender()+0x7f>
100044f6:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	100044f9: R_386_32	curveLookup7
100044fd:	66 89 0e             	mov    WORD PTR [esi],cx
10004500:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004503:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	10004506: R_386_32	curveLookup7
1000450a:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
1000450f:	eb 3b                	jmp    1000454c <NIWindow::rerender()+0xba>
10004511:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004514:	8d 79 fa             	lea    edi,[ecx-0x6]
10004517:	39 c7                	cmp    edi,eax
10004519:	7f 22                	jg     1000453d <NIWindow::rerender()+0xab>
1000451b:	29 c1                	sub    ecx,eax
1000451d:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004520: R_386_32	curveLookup7
10004524:	66 89 0e             	mov    WORD PTR [esi],cx
10004527:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000452a:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
1000452d:	29 c1                	sub    ecx,eax
1000452f:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004532: R_386_32	curveLookup7
10004536:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
1000453b:	eb 0f                	jmp    1000454c <NIWindow::rerender()+0xba>
1000453d:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
10004542:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004545:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
1000454c:	40                   	inc    eax
1000454d:	eb 91                	jmp    100044e0 <NIWindow::rerender()+0x4e>
1000454f:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
10004553:	31 ff                	xor    edi,edi
10004555:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
10004558:	7e 30                	jle    1000458a <NIWindow::rerender()+0xf8>
1000455a:	31 c0                	xor    eax,eax
1000455c:	83 ff 19             	cmp    edi,0x19
1000455f:	0f 9e c0             	setle  al
10004562:	31 ed                	xor    ebp,ebp
10004564:	89 c6                	mov    esi,eax
10004566:	4e                   	dec    esi
10004567:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
1000456d:	81 c6 ff ff ff 00    	add    esi,0xffffff
10004573:	39 6b 20             	cmp    DWORD PTR [ebx+0x20],ebp
10004576:	7e 0f                	jle    10004587 <NIWindow::rerender()+0xf5>
10004578:	56                   	push   esi
10004579:	57                   	push   edi
1000457a:	55                   	push   ebp
1000457b:	45                   	inc    ebp
1000457c:	53                   	push   ebx
1000457d:	e8 fc ff ff ff       	call   1000457e <NIWindow::rerender()+0xec>	1000457e: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10004582:	83 c4 10             	add    esp,0x10
10004585:	eb ec                	jmp    10004573 <NIWindow::rerender()+0xe1>
10004587:	47                   	inc    edi
10004588:	eb cb                	jmp    10004555 <NIWindow::rerender()+0xc3>
1000458a:	83 c4 0c             	add    esp,0xc
1000458d:	5b                   	pop    ebx
1000458e:	5e                   	pop    esi
1000458f:	5f                   	pop    edi
10004590:	5d                   	pop    ebp
10004591:	c3                   	ret    

10004592 <NIWindow::changeContext(NIContext*, int, int)>:
10004592:	55                   	push   ebp
10004593:	57                   	push   edi
10004594:	56                   	push   esi
10004595:	53                   	push   ebx
10004596:	83 ec 18             	sub    esp,0x18
10004599:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000459d:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
100045a1:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
100045a5:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100045a9:	53                   	push   ebx
100045aa:	e8 fc ff ff ff       	call   100045ab <NIWindow::changeContext(NIContext*, int, int)+0x19>	100045ab: R_386_PC32	NIWindow::invalidate()
100045af:	89 33                	mov    DWORD PTR [ebx],esi
100045b1:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
100045b4:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
100045b7:	83 c4 10             	add    esp,0x10
100045ba:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
100045c0:	83 f8 08             	cmp    eax,0x8
100045c3:	7f 09                	jg     100045ce <NIWindow::changeContext(NIContext*, int, int)+0x3c>
100045c5:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
100045cc:	eb 15                	jmp    100045e3 <NIWindow::changeContext(NIContext*, int, int)+0x51>
100045ce:	83 f8 10             	cmp    eax,0x10
100045d1:	7f 09                	jg     100045dc <NIWindow::changeContext(NIContext*, int, int)+0x4a>
100045d3:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
100045da:	eb 07                	jmp    100045e3 <NIWindow::changeContext(NIContext*, int, int)+0x51>
100045dc:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
100045e3:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
100045e7:	83 c4 0c             	add    esp,0xc
100045ea:	5b                   	pop    ebx
100045eb:	5e                   	pop    esi
100045ec:	5f                   	pop    edi
100045ed:	5d                   	pop    ebp
100045ee:	e9 9f fe ff ff       	jmp    10004492 <NIWindow::rerender()>
100045f3:	90                   	nop

100045f4 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
100045f4:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100045f8:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100045fc:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
10004600:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004603:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
10004607:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000460b:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004612:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004615:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
1000461c:	e9 71 ff ff ff       	jmp    10004592 <NIWindow::changeContext(NIContext*, int, int)>
10004621:	90                   	nop

10004622 <NIWindow::request()>:
10004622:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004626:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
1000462a:	75 05                	jne    10004631 <NIWindow::request()+0xf>
1000462c:	e9 61 fe ff ff       	jmp    10004492 <NIWindow::rerender()>
10004631:	c3                   	ret    

10004632 <NIWindow::SHADOW_TEST()>:
10004632:	55                   	push   ebp
10004633:	57                   	push   edi
10004634:	56                   	push   esi
10004635:	53                   	push   ebx
10004636:	83 ec 28             	sub    esp,0x28
10004639:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
1000463d:	53                   	push   ebx
1000463e:	e8 fc ff ff ff       	call   1000463f <NIWindow::SHADOW_TEST()+0xd>	1000463f: R_386_PC32	NIWindow::request()
10004643:	83 c4 10             	add    esp,0x10
10004646:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004649:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
1000464c:	74 10                	je     1000465e <NIWindow::SHADOW_TEST()+0x2c>
1000464e:	83 ec 0c             	sub    esp,0xc
10004651:	68 1c 4c 00 10       	push   0x10004c1c	10004652: R_386_32	.text
10004656:	e8 fc ff ff ff       	call   10004657 <NIWindow::SHADOW_TEST()+0x25>	10004657: R_386_PC32	KePanic(char const*)
1000465b:	83 c4 10             	add    esp,0x10
1000465e:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004662:	0f 85 28 01 00 00    	jne    10004790 <NIWindow::SHADOW_TEST()+0x15e>
10004668:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
10004670:	31 ff                	xor    edi,edi
10004672:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
10004675:	0f 8e 15 01 00 00    	jle    10004790 <NIWindow::SHADOW_TEST()+0x15e>
1000467b:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000467e:	8d 04 b8             	lea    eax,[eax+edi*4]
10004681:	0f b7 30             	movzx  esi,WORD PTR [eax]
10004684:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10004688:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
1000468c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004690:	89 34 24             	mov    DWORD PTR [esp],esi
10004693:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004696:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004699:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
1000469d:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
100046a0:	0f 8e d4 00 00 00    	jle    1000477a <NIWindow::SHADOW_TEST()+0x148>
100046a6:	83 ff 05             	cmp    edi,0x5
100046a9:	7e 1f                	jle    100046ca <NIWindow::SHADOW_TEST()+0x98>
100046ab:	8d 41 fb             	lea    eax,[ecx-0x5]
100046ae:	39 f8                	cmp    eax,edi
100046b0:	7e 18                	jle    100046ca <NIWindow::SHADOW_TEST()+0x98>
100046b2:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100046b6:	83 c0 05             	add    eax,0x5
100046b9:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100046bc:	7d 0c                	jge    100046ca <NIWindow::SHADOW_TEST()+0x98>
100046be:	8d 45 fb             	lea    eax,[ebp-0x5]
100046c1:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100046c4:	0f 8f a8 00 00 00    	jg     10004772 <NIWindow::SHADOW_TEST()+0x140>
100046ca:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
100046ce:	be ea 01 00 00       	mov    esi,0x1ea
100046d3:	29 f9                	sub    ecx,edi
100046d5:	89 f0                	mov    eax,esi
100046d7:	83 c1 04             	add    ecx,0x4
100046da:	99                   	cdq    
100046db:	f7 f9                	idiv   ecx
100046dd:	89 c1                	mov    ecx,eax
100046df:	89 f0                	mov    eax,esi
100046e1:	99                   	cdq    
100046e2:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
100046e6:	83 f8 0a             	cmp    eax,0xa
100046e9:	7d 05                	jge    100046f0 <NIWindow::SHADOW_TEST()+0xbe>
100046eb:	b8 0a 00 00 00       	mov    eax,0xa
100046f0:	39 c1                	cmp    ecx,eax
100046f2:	7d 02                	jge    100046f6 <NIWindow::SHADOW_TEST()+0xc4>
100046f4:	89 c1                	mov    ecx,eax
100046f6:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
100046f9:	b8 ea 01 00 00       	mov    eax,0x1ea
100046fe:	83 c5 04             	add    ebp,0x4
10004701:	99                   	cdq    
10004702:	f7 fd                	idiv   ebp
10004704:	89 c6                	mov    esi,eax
10004706:	83 f8 0a             	cmp    eax,0xa
10004709:	7d 05                	jge    10004710 <NIWindow::SHADOW_TEST()+0xde>
1000470b:	be 0a 00 00 00       	mov    esi,0xa
10004710:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004713:	8d 68 05             	lea    ebp,[eax+0x5]
10004716:	b8 ea 01 00 00       	mov    eax,0x1ea
1000471b:	99                   	cdq    
1000471c:	f7 fd                	idiv   ebp
1000471e:	39 c6                	cmp    esi,eax
10004720:	7d 02                	jge    10004724 <NIWindow::SHADOW_TEST()+0xf2>
10004722:	89 c6                	mov    esi,eax
10004724:	89 f0                	mov    eax,esi
10004726:	89 ca                	mov    edx,ecx
10004728:	0f af c6             	imul   eax,esi
1000472b:	0f af d1             	imul   edx,ecx
1000472e:	0f af f1             	imul   esi,ecx
10004731:	01 d0                	add    eax,edx
10004733:	8d 04 c6             	lea    eax,[esi+eax*8]
10004736:	c1 f8 08             	sar    eax,0x8
10004739:	83 f8 66             	cmp    eax,0x66
1000473c:	7e 46                	jle    10004784 <NIWindow::SHADOW_TEST()+0x152>
1000473e:	8d 50 9a             	lea    edx,[eax-0x66]
10004741:	d1 fa                	sar    edx,1
10004743:	8d 42 66             	lea    eax,[edx+0x66]
10004746:	83 f8 73             	cmp    eax,0x73
10004749:	7e 39                	jle    10004784 <NIWindow::SHADOW_TEST()+0x152>
1000474b:	83 ea 0d             	sub    edx,0xd
1000474e:	c1 fa 02             	sar    edx,0x2
10004751:	8d 42 73             	lea    eax,[edx+0x73]
10004754:	83 f8 7f             	cmp    eax,0x7f
10004757:	7f 19                	jg     10004772 <NIWindow::SHADOW_TEST()+0x140>
10004759:	50                   	push   eax
1000475a:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000475d:	01 f8                	add    eax,edi
1000475f:	50                   	push   eax
10004760:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004764:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10004767:	50                   	push   eax
10004768:	ff 33                	push   DWORD PTR [ebx]
1000476a:	e8 fc ff ff ff       	call   1000476b <NIWindow::SHADOW_TEST()+0x139>	1000476b: R_386_PC32	NIContext::drvDarken4(int, int, int)
1000476f:	83 c4 10             	add    esp,0x10
10004772:	ff 04 24             	inc    DWORD PTR [esp]
10004775:	e9 19 ff ff ff       	jmp    10004693 <NIWindow::SHADOW_TEST()+0x61>
1000477a:	47                   	inc    edi
1000477b:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000477f:	e9 ee fe ff ff       	jmp    10004672 <NIWindow::SHADOW_TEST()+0x40>
10004784:	83 f8 0a             	cmp    eax,0xa
10004787:	7d d0                	jge    10004759 <NIWindow::SHADOW_TEST()+0x127>
10004789:	b8 0a 00 00 00       	mov    eax,0xa
1000478e:	eb c9                	jmp    10004759 <NIWindow::SHADOW_TEST()+0x127>
10004790:	83 c4 1c             	add    esp,0x1c
10004793:	5b                   	pop    ebx
10004794:	5e                   	pop    esi
10004795:	5f                   	pop    edi
10004796:	5d                   	pop    ebp
10004797:	c3                   	ret    

10004798 <NIWindow::realdraw()>:
10004798:	55                   	push   ebp
10004799:	57                   	push   edi
1000479a:	56                   	push   esi
1000479b:	53                   	push   ebx
1000479c:	83 ec 18             	sub    esp,0x18
1000479f:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
100047a3:	53                   	push   ebx
100047a4:	e8 fc ff ff ff       	call   100047a5 <NIWindow::realdraw()+0xd>	100047a5: R_386_PC32	NIWindow::request()
100047a9:	83 c4 10             	add    esp,0x10
100047ac:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100047af:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100047b2:	74 10                	je     100047c4 <NIWindow::realdraw()+0x2c>
100047b4:	83 ec 0c             	sub    esp,0xc
100047b7:	68 1c 4c 00 10       	push   0x10004c1c	100047b8: R_386_32	.text
100047bc:	e8 fc ff ff ff       	call   100047bd <NIWindow::realdraw()+0x25>	100047bd: R_386_PC32	KePanic(char const*)
100047c1:	83 c4 10             	add    esp,0x10
100047c4:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100047c8:	75 46                	jne    10004810 <NIWindow::realdraw()+0x78>
100047ca:	31 f6                	xor    esi,esi
100047cc:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
100047cf:	7e 3f                	jle    10004810 <NIWindow::realdraw()+0x78>
100047d1:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100047d4:	8d 04 b0             	lea    eax,[eax+esi*4]
100047d7:	0f b7 28             	movzx  ebp,WORD PTR [eax]
100047da:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
100047de:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
100047e1:	89 c2                	mov    edx,eax
100047e3:	29 fa                	sub    edx,edi
100047e5:	39 ea                	cmp    edx,ebp
100047e7:	7e 24                	jle    1000480d <NIWindow::realdraw()+0x75>
100047e9:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100047ec:	0f af c6             	imul   eax,esi
100047ef:	01 e8                	add    eax,ebp
100047f1:	ff 34 82             	push   DWORD PTR [edx+eax*4]
100047f4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100047f7:	01 f0                	add    eax,esi
100047f9:	50                   	push   eax
100047fa:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100047fd:	01 e8                	add    eax,ebp
100047ff:	45                   	inc    ebp
10004800:	50                   	push   eax
10004801:	ff 33                	push   DWORD PTR [ebx]
10004803:	e8 fc ff ff ff       	call   10004804 <NIWindow::realdraw()+0x6c>	10004804: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004808:	83 c4 10             	add    esp,0x10
1000480b:	eb d1                	jmp    100047de <NIWindow::realdraw()+0x46>
1000480d:	46                   	inc    esi
1000480e:	eb bc                	jmp    100047cc <NIWindow::realdraw()+0x34>
10004810:	83 c4 0c             	add    esp,0xc
10004813:	5b                   	pop    ebx
10004814:	5e                   	pop    esi
10004815:	5f                   	pop    edi
10004816:	5d                   	pop    ebp
10004817:	c3                   	ret    

10004818 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004818:	53                   	push   ebx
10004819:	83 ec 14             	sub    esp,0x14
1000481c:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10004820:	6a 0c                	push   0xc
10004822:	e8 fc ff ff ff       	call   10004823 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	10004823: R_386_PC32	malloc
10004827:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
1000482b:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004832:	89 10                	mov    DWORD PTR [eax],edx
10004834:	83 c4 10             	add    esp,0x10
10004837:	8b 13                	mov    edx,DWORD PTR [ebx]
10004839:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000483c:	85 d2                	test   edx,edx
1000483e:	74 05                	je     10004845 <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
10004840:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
10004843:	eb 03                	jmp    10004848 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
10004845:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004848:	89 03                	mov    DWORD PTR [ebx],eax
1000484a:	83 c4 08             	add    esp,0x8
1000484d:	5b                   	pop    ebx
1000484e:	c3                   	ret    
1000484f:	90                   	nop

10004850 <List<NIWindow*>::deleteElement(NIWindow*&)>:
10004850:	57                   	push   edi
10004851:	56                   	push   esi
10004852:	53                   	push   ebx
10004853:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10004857:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000485b:	8b 19                	mov    ebx,DWORD PTR [ecx]
1000485d:	85 db                	test   ebx,ebx
1000485f:	74 5e                	je     100048bf <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004861:	8b 30                	mov    esi,DWORD PTR [eax]
10004863:	89 da                	mov    edx,ebx
10004865:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
10004868:	8b 3a                	mov    edi,DWORD PTR [edx]
1000486a:	85 c0                	test   eax,eax
1000486c:	74 08                	je     10004876 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000486e:	39 f7                	cmp    edi,esi
10004870:	73 04                	jae    10004876 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004872:	89 c2                	mov    edx,eax
10004874:	eb ef                	jmp    10004865 <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
10004876:	39 f7                	cmp    edi,esi
10004878:	75 45                	jne    100048bf <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
1000487a:	39 d3                	cmp    ebx,edx
1000487c:	75 18                	jne    10004896 <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
1000487e:	89 01                	mov    DWORD PTR [ecx],eax
10004880:	85 c0                	test   eax,eax
10004882:	75 09                	jne    1000488d <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
10004884:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
1000488b:	eb 1e                	jmp    100048ab <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000488d:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004894:	eb 15                	jmp    100048ab <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004896:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004899:	85 c0                	test   eax,eax
1000489b:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000489e:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
100048a1:	74 05                	je     100048a8 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
100048a3:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100048a6:	eb 03                	jmp    100048ab <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
100048a8:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
100048ab:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
100048b3:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100048b7:	5b                   	pop    ebx
100048b8:	5e                   	pop    esi
100048b9:	5f                   	pop    edi
100048ba:	e9 fc ff ff ff       	jmp    100048bb <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	100048bb: R_386_PC32	operator delete(void*, unsigned long)
100048bf:	5b                   	pop    ebx
100048c0:	5e                   	pop    esi
100048c1:	5f                   	pop    edi
100048c2:	c3                   	ret    
100048c3:	4a                   	dec    edx
100048c4:	55                   	push   ebp
100048c5:	53                   	push   ebx
100048c6:	54                   	push   esp
100048c7:	20 4d 4f             	and    BYTE PTR [ebp+0x4f],cl
100048ca:	4e                   	dec    esi
100048cb:	49                   	dec    ecx
100048cc:	4b                   	dec    ebx
100048cd:	41                   	inc    ecx
100048ce:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
100048d1:	4e                   	dec    esi
100048d2:	43                   	inc    ebx
100048d3:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
100048d6:	4e                   	dec    esi
100048d7:	32 00                	xor    al,BYTE PTR [eax]
100048d9:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
100048dc:	53                   	push   ebx
100048dd:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
100048e0:	43                   	inc    ebx
100048e1:	6f                   	outs   dx,DWORD PTR ds:[esi]
100048e2:	6e                   	outs   dx,BYTE PTR ds:[esi]
100048e3:	74 65                	je     1000494a <List<NIWindow*>::deleteElement(NIWindow*&)+0xfa>
100048e5:	78 74                	js     1000495b <List<NIWindow*>::deleteElement(NIWindow*&)+0x10b>
100048e7:	3a 3a                	cmp    bh,BYTE PTR [edx]
100048e9:	64 72 76             	fs jb  10004962 <List<NIWindow*>::deleteElement(NIWindow*&)+0x112>
100048ec:	52                   	push   edx
100048ed:	65 6e                	outs   dx,BYTE PTR gs:[esi]
100048ef:	64 65 72 54          	fs gs jb 10004947 <List<NIWindow*>::deleteElement(NIWindow*&)+0xf7>
100048f3:	54                   	push   esp
100048f4:	46                   	inc    esi
100048f5:	34 00                	xor    al,0x0
100048f7:	43                   	inc    ebx
100048f8:	3a 2f                	cmp    ch,BYTE PTR [edi]
100048fa:	42                   	inc    edx
100048fb:	61                   	popa   
100048fc:	6e                   	outs   dx,BYTE PTR ds:[esi]
100048fd:	61                   	popa   
100048fe:	6e                   	outs   dx,BYTE PTR ds:[esi]
100048ff:	61                   	popa   
10004900:	2f                   	das    
10004901:	46                   	inc    esi
10004902:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004903:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004904:	74 73                	je     10004979 <List<NIWindow*>::deleteElement(NIWindow*&)+0x129>
10004906:	2f                   	das    
10004907:	53                   	push   ebx
10004908:	46                   	inc    esi
10004909:	4e                   	dec    esi
1000490a:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000490d:	4e                   	dec    esi
1000490e:	4e                   	dec    esi
1000490f:	4f                   	dec    edi
10004910:	54                   	push   esp
10004911:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004915:	44                   	inc    esp
10004916:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
10004919:	4e                   	dec    esi
1000491a:	54                   	push   esp
1000491b:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
1000491f:	45                   	inc    ebp
10004920:	43                   	inc    ebx
10004921:	54                   	push   esp
10004922:	4f                   	dec    edi
10004923:	52                   	push   edx
10004924:	59                   	pop    ecx
10004925:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
10004928:	2f                   	das    
10004929:	42                   	inc    edx
1000492a:	61                   	popa   
1000492b:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000492c:	61                   	popa   
1000492d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000492e:	61                   	popa   
1000492f:	2f                   	das    
10004930:	46                   	inc    esi
10004931:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004932:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004933:	74 73                	je     100049a8 <List<NIWindow*>::deleteElement(NIWindow*&)+0x158>
10004935:	2f                   	das    
10004936:	53                   	push   ebx
10004937:	46                   	inc    esi
10004938:	4e                   	dec    esi
10004939:	2f                   	das    
1000493a:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
1000493d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000493e:	74 20                	je     10004960 <List<NIWindow*>::deleteElement(NIWindow*&)+0x110>
10004940:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
10004947:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
1000494e:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
10004952:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
10004958:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004959:	74 3a                	je     10004995 <List<NIWindow*>::deleteElement(NIWindow*&)+0x145>
1000495b:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
10004961:	53                   	push   ebx
10004962:	46                   	inc    esi
10004963:	4e                   	dec    esi
10004964:	5f                   	pop    edi
10004965:	52                   	push   edx
10004966:	45                   	inc    ebp
10004967:	53                   	push   ebx
10004968:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
1000496e:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
10004971:	6d                   	ins    DWORD PTR es:[edi],dx
10004972:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004973:	72 79                	jb     100049ee <List<NIWindow*>::deleteElement(NIWindow*&)+0x19e>
10004975:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
10004978:	6c                   	ins    BYTE PTR es:[edi],dx
10004979:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000497a:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
1000497d:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
10004984:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004985:	72 00                	jb     10004987 <List<NIWindow*>::deleteElement(NIWindow*&)+0x137>
10004987:	42                   	inc    edx
10004988:	61                   	popa   
10004989:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
1000498d:	6c                   	ins    BYTE PTR es:[edi],dx
1000498e:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004992:	72 6d                	jb     10004a01 <_ssfn__compute_huffman_codes::length_dezigzag+0x1>
10004994:	61                   	popa   
10004995:	74 00                	je     10004997 <List<NIWindow*>::deleteElement(NIWindow*&)+0x147>
10004997:	4e                   	dec    esi
10004998:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004999:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000499c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000499d:	74 20                	je     100049bf <List<NIWindow*>::deleteElement(NIWindow*&)+0x16f>
1000499f:	66 61                	popaw  
100049a1:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
100049a4:	66 6f                	outs   dx,WORD PTR ds:[esi]
100049a6:	75 6e                	jne    10004a16 <_ssfn__compute_huffman_codes::length_dezigzag+0x16>
100049a8:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
100049ac:	76 61                	jbe    10004a0f <_ssfn__compute_huffman_codes::length_dezigzag+0xf>
100049ae:	6c                   	ins    BYTE PTR es:[edi],dx
100049af:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
100049b7:	20 76 61             	and    BYTE PTR [esi+0x61],dh
100049ba:	6c                   	ins    BYTE PTR es:[edi],dx
100049bb:	75 65                	jne    10004a22 <_ssfn__zdist_extra+0x2>
100049bd:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
100049c0:	76 61                	jbe    10004a23 <_ssfn__zdist_extra+0x3>
100049c2:	6c                   	ins    BYTE PTR es:[edi],dx
100049c3:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
100049cb:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
100049ce:	76 61                	jbe    10004a31 <_ssfn__zdist_extra+0x11>
100049d0:	6c                   	ins    BYTE PTR es:[edi],dx
100049d1:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
100049d9:	47                   	inc    edi
100049da:	6c                   	ins    BYTE PTR es:[edi],dx
100049db:	79 70                	jns    10004a4d <_ssfn__zdist_extra+0x2d>
100049dd:	68 20 6e 6f 74       	push   0x746f6e20
100049e2:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
100049e5:	75 6e                	jne    10004a55 <_ssfn__zdist_extra+0x35>
100049e7:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
100049eb:	66 90                	xchg   ax,ax
100049ed:	66 90                	xchg   ax,ax
100049ef:	66 90                	xchg   ax,ax
100049f1:	66 90                	xchg   ax,ax
100049f3:	66 90                	xchg   ax,ax
100049f5:	66 90                	xchg   ax,ax
100049f7:	66 90                	xchg   ax,ax
100049f9:	66 90                	xchg   ax,ax
100049fb:	66 90                	xchg   ax,ax
100049fd:	66 90                	xchg   ax,ax
100049ff:	90                   	nop

10004a00 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004a00:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004a10:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004a20 <_ssfn__zdist_extra>:
	...
10004a30:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
10004a40:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
10004a50:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
10004a60:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
10004a70:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10004a80:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10004a90:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004aa0 <_ssfn__zdist_base>:
10004aa0:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004ab0:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004ac0:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004ad0:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004ae0:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004af0:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004b00:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004b10:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004b20 <_ssfn__zlength_extra>:
	...
10004b40:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
10004b50:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
10004b60:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
10004b70:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10004b80:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004ba0 <_ssfn__zlength_base>:
10004ba0:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004bb0:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004bc0:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004bd0:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004be0:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004bf0:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004c00:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004c10:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
10004c20:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
10004c30:	29 2e 00                                            )..
