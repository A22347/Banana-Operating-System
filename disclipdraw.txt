
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000009: R_386_32	guiPanicHandler
	1000000d: R_386_32	monikaBsod(char*)
10000011:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000013: R_386_32	screen
10000017:	e8 fc ff ff ff       	call   10000018 <start(void*)+0x18>	10000018: R_386_PC32	Video::getWidth()
1000001c:	89 c3                	mov    ebx,eax
1000001e:	58                   	pop    eax
1000001f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000021: R_386_32	screen
10000025:	e8 fc ff ff ff       	call   10000026 <start(void*)+0x26>	10000026: R_386_PC32	Video::getHeight()
1000002a:	5a                   	pop    edx
1000002b:	89 c7                	mov    edi,eax
1000002d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002f: R_386_32	screen
10000033:	e8 fc ff ff ff       	call   10000034 <start(void*)+0x34>	10000034: R_386_PC32	Video::getWidth()
10000038:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000003f:	89 c5                	mov    ebp,eax
10000041:	e8 fc ff ff ff       	call   10000042 <start(void*)+0x42>	10000042: R_386_PC32	malloc
10000046:	59                   	pop    ecx
10000047:	89 c6                	mov    esi,eax
10000049:	58                   	pop    eax
1000004a:	6a 20                	push   0x20
1000004c:	55                   	push   ebp
1000004d:	57                   	push   edi
1000004e:	53                   	push   ebx
1000004f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000051: R_386_32	screen
10000055:	56                   	push   esi
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
1000005b:	83 c4 14             	add    esp,0x14
1000005e:	6a 14                	push   0x14
10000060:	e8 fc ff ff ff       	call   10000061 <start(void*)+0x61>	10000061: R_386_PC32	malloc
10000065:	89 c3                	mov    ebx,eax
10000067:	58                   	pop    eax
10000068:	5a                   	pop    edx
10000069:	56                   	push   esi
1000006a:	53                   	push   ebx
1000006b:	e8 fc ff ff ff       	call   1000006c <start(void*)+0x6c>	1000006c: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000070:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
10000077:	e8 fc ff ff ff       	call   10000078 <start(void*)+0x78>	10000078: R_386_PC32	malloc
1000007c:	5f                   	pop    edi
1000007d:	5d                   	pop    ebp
1000007e:	6a 01                	push   0x1
10000080:	6a 01                	push   0x1
10000082:	6a 00                	push   0x0
10000084:	6a 00                	push   0x0
10000086:	56                   	push   esi
10000087:	50                   	push   eax
10000088:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000008c:	e8 fc ff ff ff       	call   1000008d <start(void*)+0x8d>	1000008d: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000091:	83 c4 14             	add    esp,0x14
10000094:	6a 40                	push   0x40
10000096:	e8 fc ff ff ff       	call   10000097 <start(void*)+0x97>	10000097: R_386_PC32	malloc
1000009b:	89 c2                	mov    edx,eax
1000009d:	58                   	pop    eax
1000009e:	59                   	pop    ecx
1000009f:	68 40 01 00 00       	push   0x140
100000a4:	68 90 01 00 00       	push   0x190
100000a9:	6a 32                	push   0x32
100000ab:	6a 32                	push   0x32
100000ad:	56                   	push   esi
100000ae:	52                   	push   edx
100000af:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000b3:	e8 fc ff ff ff       	call   100000b4 <start(void*)+0xb4>	100000b4: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000b8:	83 c4 14             	add    esp,0x14
100000bb:	6a 40                	push   0x40
100000bd:	e8 fc ff ff ff       	call   100000be <start(void*)+0xbe>	100000be: R_386_PC32	malloc
100000c2:	5f                   	pop    edi
100000c3:	89 c5                	mov    ebp,eax
100000c5:	58                   	pop    eax
100000c6:	68 7c 01 00 00       	push   0x17c
100000cb:	68 f4 01 00 00       	push   0x1f4
100000d0:	68 96 00 00 00       	push   0x96
100000d5:	68 c8 00 00 00       	push   0xc8
100000da:	56                   	push   esi
100000db:	55                   	push   ebp
100000dc:	e8 fc ff ff ff       	call   100000dd <start(void*)+0xdd>	100000dd: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000e1:	83 c4 14             	add    esp,0x14
100000e4:	6a 40                	push   0x40
100000e6:	e8 fc ff ff ff       	call   100000e7 <start(void*)+0xe7>	100000e7: R_386_PC32	malloc
100000eb:	89 c7                	mov    edi,eax
100000ed:	58                   	pop    eax
100000ee:	5a                   	pop    edx
100000ef:	68 af 00 00 00       	push   0xaf
100000f4:	68 0e 01 00 00       	push   0x10e
100000f9:	68 90 01 00 00       	push   0x190
100000fe:	6a 7d                	push   0x7d
10000100:	56                   	push   esi
10000101:	57                   	push   edi
10000102:	e8 fc ff ff ff       	call   10000103 <start(void*)+0x103>	10000103: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000107:	83 c4 18             	add    esp,0x18
1000010a:	83 4f 3c 01          	or     DWORD PTR [edi+0x3c],0x1
1000010e:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10000112:	51                   	push   ecx
10000113:	53                   	push   ebx
10000114:	e8 fc ff ff ff       	call   10000115 <start(void*)+0x115>	10000115: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000119:	59                   	pop    ecx
1000011a:	5e                   	pop    esi
1000011b:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000011f:	52                   	push   edx
10000120:	53                   	push   ebx
10000121:	e8 fc ff ff ff       	call   10000122 <start(void*)+0x122>	10000122: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000126:	58                   	pop    eax
10000127:	5a                   	pop    edx
10000128:	55                   	push   ebp
10000129:	53                   	push   ebx
1000012a:	e8 fc ff ff ff       	call   1000012b <start(void*)+0x12b>	1000012b: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012f:	59                   	pop    ecx
10000130:	5e                   	pop    esi
10000131:	57                   	push   edi
10000132:	53                   	push   ebx
10000133:	e8 fc ff ff ff       	call   10000134 <start(void*)+0x134>	10000134: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000138:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000013b:	e8 fc ff ff ff       	call   1000013c <start(void*)+0x13c>	1000013c: R_386_PC32	NIDesktop::completeRefresh()
10000140:	83 c4 10             	add    esp,0x10
10000143:	83 ec 0c             	sub    esp,0xc
10000146:	6a 02                	push   0x2
10000148:	e8 fc ff ff ff       	call   10000149 <start(void*)+0x149>	10000149: R_386_PC32	blockTask(TaskState)
1000014d:	eb f1                	jmp    10000140 <start(void*)+0x140>
1000014f:	90                   	nop

10000150 <begin(void*)>:
10000150:	83 ec 18             	sub    esp,0x18
10000153:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000157:	e8 fc ff ff ff       	call   10000158 <begin(void*)+0x8>	10000158: R_386_PC32	start(void*)

1000015c <_ssfn__bitreverse16>:
1000015c:	89 c2                	mov    edx,eax
1000015e:	01 c0                	add    eax,eax
10000160:	d1 fa                	sar    edx,1
10000162:	25 aa aa 00 00       	and    eax,0xaaaa
10000167:	81 e2 55 55 00 00    	and    edx,0x5555
1000016d:	09 c2                	or     edx,eax
1000016f:	89 d0                	mov    eax,edx
10000171:	c1 e2 02             	shl    edx,0x2
10000174:	c1 f8 02             	sar    eax,0x2
10000177:	81 e2 cc cc 00 00    	and    edx,0xcccc
1000017d:	25 33 33 00 00       	and    eax,0x3333
10000182:	09 d0                	or     eax,edx
10000184:	89 c2                	mov    edx,eax
10000186:	c1 e0 04             	shl    eax,0x4
10000189:	c1 fa 04             	sar    edx,0x4
1000018c:	25 f0 f0 00 00       	and    eax,0xf0f0
10000191:	81 e2 0f 0f 00 00    	and    edx,0xf0f
10000197:	09 c2                	or     edx,eax
10000199:	89 d1                	mov    ecx,edx
1000019b:	c1 e2 08             	shl    edx,0x8
1000019e:	c1 f9 08             	sar    ecx,0x8
100001a1:	0f b7 c2             	movzx  eax,dx
100001a4:	09 c8                	or     eax,ecx
100001a6:	c3                   	ret    

100001a7 <_ssfn__zhuffman_decode>:
100001a7:	55                   	push   ebp
100001a8:	57                   	push   edi
100001a9:	56                   	push   esi
100001aa:	53                   	push   ebx
100001ab:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001af:	7f 1d                	jg     100001ce <_ssfn__zhuffman_decode+0x27>
100001b1:	8b 18                	mov    ebx,DWORD PTR [eax]
100001b3:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001b6:	89 08                	mov    DWORD PTR [eax],ecx
100001b8:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001bb:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001be:	d3 e3                	shl    ebx,cl
100001c0:	83 c1 08             	add    ecx,0x8
100001c3:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001c6:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001c9:	83 f9 18             	cmp    ecx,0x18
100001cc:	eb e1                	jmp    100001af <_ssfn__zhuffman_decode+0x8>
100001ce:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001d1:	89 f9                	mov    ecx,edi
100001d3:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001d9:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001dd:	89 cb                	mov    ebx,ecx
100001df:	85 c9                	test   ecx,ecx
100001e1:	74 15                	je     100001f8 <_ssfn__zhuffman_decode+0x51>
100001e3:	c1 f9 09             	sar    ecx,0x9
100001e6:	89 da                	mov    edx,ebx
100001e8:	d3 ef                	shr    edi,cl
100001ea:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001ed:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001f0:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001f6:	eb 58                	jmp    10000250 <_ssfn__zhuffman_decode+0xa9>
100001f8:	89 d5                	mov    ebp,edx
100001fa:	89 c3                	mov    ebx,eax
100001fc:	be 0a 00 00 00       	mov    esi,0xa
10000201:	89 f8                	mov    eax,edi
10000203:	e8 54 ff ff ff       	call   1000015c <_ssfn__bitreverse16>
10000208:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
1000020f:	7c 03                	jl     10000214 <_ssfn__zhuffman_decode+0x6d>
10000211:	46                   	inc    esi
10000212:	eb f4                	jmp    10000208 <_ssfn__zhuffman_decode+0x61>
10000214:	83 ca ff             	or     edx,0xffffffff
10000217:	83 fe 10             	cmp    esi,0x10
1000021a:	74 34                	je     10000250 <_ssfn__zhuffman_decode+0xa9>
1000021c:	8d 14 36             	lea    edx,[esi+esi*1]
1000021f:	b9 10 00 00 00       	mov    ecx,0x10
10000224:	01 ea                	add    edx,ebp
10000226:	29 f1                	sub    ecx,esi
10000228:	d3 f8                	sar    eax,cl
1000022a:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000231:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000238:	29 c8                	sub    eax,ecx
1000023a:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
1000023d:	89 f1                	mov    ecx,esi
1000023f:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
10000246:	d3 ef                	shr    edi,cl
10000248:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000024b:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000250:	5b                   	pop    ebx
10000251:	89 d0                	mov    eax,edx
10000253:	5e                   	pop    esi
10000254:	5f                   	pop    edi
10000255:	5d                   	pop    ebp
10000256:	c3                   	ret    

10000257 <_ssfn__zexpand>:
10000257:	55                   	push   ebp
10000258:	57                   	push   edi
10000259:	56                   	push   esi
1000025a:	53                   	push   ebx
1000025b:	83 ec 0c             	sub    esp,0xc
1000025e:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000261:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000264:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
10000267:	29 f9                	sub    ecx,edi
10000269:	83 f9 08             	cmp    ecx,0x8
1000026c:	74 04                	je     10000272 <_ssfn__zexpand+0x1b>
1000026e:	31 c0                	xor    eax,eax
10000270:	eb 3c                	jmp    100002ae <_ssfn__zexpand+0x57>
10000272:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000275:	75 f7                	jne    1000026e <_ssfn__zexpand+0x17>
10000277:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000027b:	75 f1                	jne    1000026e <_ssfn__zexpand+0x17>
1000027d:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000281:	75 eb                	jne    1000026e <_ssfn__zexpand+0x17>
10000283:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
10000286:	89 c3                	mov    ebx,eax
10000288:	89 d6                	mov    esi,edx
1000028a:	50                   	push   eax
1000028b:	50                   	push   eax
1000028c:	55                   	push   ebp
1000028d:	57                   	push   edi
1000028e:	e8 fc ff ff ff       	call   1000028f <_ssfn__zexpand+0x38>	1000028f: R_386_PC32	realloc
10000293:	83 c4 10             	add    esp,0x10
10000296:	85 c0                	test   eax,eax
10000298:	74 d4                	je     1000026e <_ssfn__zexpand+0x17>
1000029a:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000029d:	29 fe                	sub    esi,edi
1000029f:	01 c6                	add    esi,eax
100002a1:	01 e8                	add    eax,ebp
100002a3:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002a6:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002a9:	b8 01 00 00 00       	mov    eax,0x1
100002ae:	83 c4 0c             	add    esp,0xc
100002b1:	5b                   	pop    ebx
100002b2:	5e                   	pop    esi
100002b3:	5f                   	pop    edi
100002b4:	5d                   	pop    ebp
100002b5:	c3                   	ret    

100002b6 <_ssfn__zbuild_huffman>:
100002b6:	55                   	push   ebp
100002b7:	57                   	push   edi
100002b8:	56                   	push   esi
100002b9:	53                   	push   ebx
100002ba:	89 c3                	mov    ebx,eax
100002bc:	81 ec a0 00 00 00    	sub    esp,0xa0
100002c2:	31 c0                	xor    eax,eax
100002c4:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002c7:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002cb:	b9 11 00 00 00       	mov    ecx,0x11
100002d0:	89 ef                	mov    edi,ebp
100002d2:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002d6:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002d8:	b9 00 01 00 00       	mov    ecx,0x100
100002dd:	89 df                	mov    edi,ebx
100002df:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002e1:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002e4:	7d 0f                	jge    100002f5 <_ssfn__zbuild_huffman+0x3f>
100002e6:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002ea:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002ee:	40                   	inc    eax
100002ef:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002f3:	eb ec                	jmp    100002e1 <_ssfn__zbuild_huffman+0x2b>
100002f5:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002fd:	b9 01 00 00 00       	mov    ecx,0x1
10000302:	b8 01 00 00 00       	mov    eax,0x1
10000307:	89 c7                	mov    edi,eax
10000309:	d3 e7                	shl    edi,cl
1000030b:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
1000030f:	0f 8f 10 01 00 00    	jg     10000425 <_ssfn__zbuild_huffman+0x16f>
10000315:	41                   	inc    ecx
10000316:	83 f9 10             	cmp    ecx,0x10
10000319:	75 ec                	jne    10000307 <_ssfn__zbuild_huffman+0x51>
1000031b:	31 ff                	xor    edi,edi
1000031d:	31 f6                	xor    esi,esi
1000031f:	b8 01 00 00 00       	mov    eax,0x1
10000324:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000328:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
1000032c:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000334:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
1000033c:	01 ef                	add    edi,ebp
1000033e:	85 ed                	test   ebp,ebp
10000340:	74 11                	je     10000353 <_ssfn__zbuild_huffman+0x9d>
10000342:	ba 01 00 00 00       	mov    edx,0x1
10000347:	88 c1                	mov    cl,al
10000349:	d3 e2                	shl    edx,cl
1000034b:	39 fa                	cmp    edx,edi
1000034d:	0f 8c d2 00 00 00    	jl     10000425 <_ssfn__zbuild_huffman+0x16f>
10000353:	89 fa                	mov    edx,edi
10000355:	b9 10 00 00 00       	mov    ecx,0x10
1000035a:	01 ff                	add    edi,edi
1000035c:	29 c1                	sub    ecx,eax
1000035e:	01 ee                	add    esi,ebp
10000360:	d3 e2                	shl    edx,cl
10000362:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
10000369:	40                   	inc    eax
1000036a:	83 f8 10             	cmp    eax,0x10
1000036d:	75 b5                	jne    10000324 <_ssfn__zbuild_huffman+0x6e>
1000036f:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000372:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
1000037c:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000380:	31 ff                	xor    edi,edi
10000382:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10000386:	0f 8d 9d 00 00 00    	jge    10000429 <_ssfn__zbuild_huffman+0x173>
1000038c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000390:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000394:	89 f2                	mov    edx,esi
10000396:	85 f6                	test   esi,esi
10000398:	0f 84 81 00 00 00    	je     1000041f <_ssfn__zbuild_huffman+0x169>
1000039e:	8d 0c 36             	lea    ecx,[esi+esi*1]
100003a1:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003a5:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003a8:	89 e9                	mov    ecx,ebp
100003aa:	89 04 24             	mov    DWORD PTR [esp],eax
100003ad:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003b4:	29 c1                	sub    ecx,eax
100003b6:	89 c8                	mov    eax,ecx
100003b8:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003bb:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003c2:	01 c8                	add    eax,ecx
100003c4:	83 fe 09             	cmp    esi,0x9
100003c7:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003ce:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003d6:	7f 42                	jg     1000041a <_ssfn__zbuild_huffman+0x164>
100003d8:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003dc:	89 e8                	mov    eax,ebp
100003de:	e8 79 fd ff ff       	call   1000015c <_ssfn__bitreverse16>
100003e3:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003e7:	b9 10 00 00 00       	mov    ecx,0x10
100003ec:	29 f1                	sub    ecx,esi
100003ee:	d3 f8                	sar    eax,cl
100003f0:	88 d1                	mov    cl,dl
100003f2:	89 04 24             	mov    DWORD PTR [esp],eax
100003f5:	89 f2                	mov    edx,esi
100003f7:	b8 01 00 00 00       	mov    eax,0x1
100003fc:	c1 e2 09             	shl    edx,0x9
100003ff:	d3 e0                	shl    eax,cl
10000401:	09 fa                	or     edx,edi
10000403:	89 c1                	mov    ecx,eax
10000405:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
1000040c:	7f 0c                	jg     1000041a <_ssfn__zbuild_huffman+0x164>
1000040e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000411:	01 0c 24             	add    DWORD PTR [esp],ecx
10000414:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000418:	eb eb                	jmp    10000405 <_ssfn__zbuild_huffman+0x14f>
1000041a:	45                   	inc    ebp
1000041b:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
1000041f:	47                   	inc    edi
10000420:	e9 5d ff ff ff       	jmp    10000382 <_ssfn__zbuild_huffman+0xcc>
10000425:	31 c0                	xor    eax,eax
10000427:	eb 05                	jmp    1000042e <_ssfn__zbuild_huffman+0x178>
10000429:	b8 01 00 00 00       	mov    eax,0x1
1000042e:	81 c4 a0 00 00 00    	add    esp,0xa0
10000434:	5b                   	pop    ebx
10000435:	5e                   	pop    esi
10000436:	5f                   	pop    edi
10000437:	5d                   	pop    ebp
10000438:	c3                   	ret    

10000439 <_ssfn_fc.part.1>:
10000439:	55                   	push   ebp
1000043a:	57                   	push   edi
1000043b:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000441:	56                   	push   esi
10000442:	53                   	push   ebx
10000443:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000449:	83 ec 0c             	sub    esp,0xc
1000044c:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
1000044f:	74 5d                	je     100004ae <_ssfn_fc.part.1+0x75>
10000451:	31 f6                	xor    esi,esi
10000453:	8b 03                	mov    eax,DWORD PTR [ebx]
10000455:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
10000459:	74 35                	je     10000490 <_ssfn_fc.part.1+0x57>
1000045b:	31 ed                	xor    ebp,ebp
1000045d:	8b 03                	mov    eax,DWORD PTR [ebx]
1000045f:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000462:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000465:	85 c0                	test   eax,eax
10000467:	74 0c                	je     10000475 <_ssfn_fc.part.1+0x3c>
10000469:	83 ec 0c             	sub    esp,0xc
1000046c:	50                   	push   eax
1000046d:	e8 fc ff ff ff       	call   1000046e <_ssfn_fc.part.1+0x35>	1000046e: R_386_PC32	free
10000472:	83 c4 10             	add    esp,0x10
10000475:	83 c5 04             	add    ebp,0x4
10000478:	81 fd 00 04 00 00    	cmp    ebp,0x400
1000047e:	75 dd                	jne    1000045d <_ssfn_fc.part.1+0x24>
10000480:	83 ec 0c             	sub    esp,0xc
10000483:	8b 03                	mov    eax,DWORD PTR [ebx]
10000485:	ff 34 30             	push   DWORD PTR [eax+esi*1]
10000488:	e8 fc ff ff ff       	call   10000489 <_ssfn_fc.part.1+0x50>	10000489: R_386_PC32	free
1000048d:	83 c4 10             	add    esp,0x10
10000490:	83 c6 04             	add    esi,0x4
10000493:	81 fe 00 04 00 00    	cmp    esi,0x400
10000499:	75 b8                	jne    10000453 <_ssfn_fc.part.1+0x1a>
1000049b:	83 ec 0c             	sub    esp,0xc
1000049e:	ff 33                	push   DWORD PTR [ebx]
100004a0:	e8 fc ff ff ff       	call   100004a1 <_ssfn_fc.part.1+0x68>	100004a1: R_386_PC32	free
100004a5:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004ab:	83 c4 10             	add    esp,0x10
100004ae:	83 c3 04             	add    ebx,0x4
100004b1:	39 fb                	cmp    ebx,edi
100004b3:	75 97                	jne    1000044c <_ssfn_fc.part.1+0x13>
100004b5:	83 c4 0c             	add    esp,0xc
100004b8:	5b                   	pop    ebx
100004b9:	5e                   	pop    esi
100004ba:	5f                   	pop    edi
100004bb:	5d                   	pop    ebp
100004bc:	c3                   	ret    

100004bd <_ssfn_l>:
100004bd:	57                   	push   edi
100004be:	56                   	push   esi
100004bf:	53                   	push   ebx
100004c0:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004c4:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004c8:	39 ce                	cmp    esi,ecx
100004ca:	89 f3                	mov    ebx,esi
100004cc:	0f 9d c1             	setge  cl
100004cf:	c1 eb 1f             	shr    ebx,0x1f
100004d2:	09 d9                	or     ecx,ebx
100004d4:	89 fb                	mov    ebx,edi
100004d6:	c1 eb 1f             	shr    ebx,0x1f
100004d9:	08 d9                	or     cl,bl
100004db:	0f 85 e9 00 00 00    	jne    100005ca <_ssfn_l+0x10d>
100004e1:	39 d7                	cmp    edi,edx
100004e3:	0f 8d e1 00 00 00    	jge    100005ca <_ssfn_l+0x10d>
100004e9:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004ef:	8d 51 08             	lea    edx,[ecx+0x8]
100004f2:	8d 4f 08             	lea    ecx,[edi+0x8]
100004f5:	c1 fa 04             	sar    edx,0x4
100004f8:	c1 f9 04             	sar    ecx,0x4
100004fb:	39 ca                	cmp    edx,ecx
100004fd:	75 1a                	jne    10000519 <_ssfn_l+0x5c>
100004ff:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
10000505:	8d 4e 08             	lea    ecx,[esi+0x8]
10000508:	83 c2 08             	add    edx,0x8
1000050b:	c1 f9 04             	sar    ecx,0x4
1000050e:	c1 fa 04             	sar    edx,0x4
10000511:	39 ca                	cmp    edx,ecx
10000513:	0f 84 b1 00 00 00    	je     100005ca <_ssfn_l+0x10d>
10000519:	89 c3                	mov    ebx,eax
1000051b:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000521:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
10000527:	7f 3e                	jg     10000567 <_ssfn_l+0xaa>
10000529:	05 00 02 00 00       	add    eax,0x200
1000052e:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000534:	52                   	push   edx
10000535:	01 c0                	add    eax,eax
10000537:	52                   	push   edx
10000538:	50                   	push   eax
10000539:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
1000053f:	e8 fc ff ff ff       	call   10000540 <_ssfn_l+0x83>	10000540: R_386_PC32	realloc
10000544:	83 c4 10             	add    esp,0x10
10000547:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
1000054d:	85 c0                	test   eax,eax
1000054f:	75 16                	jne    10000567 <_ssfn_l+0xaa>
10000551:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000055b:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000565:	eb 63                	jmp    100005ca <_ssfn_l+0x10d>
10000567:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
1000056e:	75 26                	jne    10000596 <_ssfn_l+0xd9>
10000570:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000576:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
1000057c:	66 89 10             	mov    WORD PTR [eax],dx
1000057f:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000585:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000058b:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
1000058f:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000596:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
1000059c:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005a2:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005a6:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005ac:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005b2:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005b7:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005bd:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005c4:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005ca:	5b                   	pop    ebx
100005cb:	5e                   	pop    esi
100005cc:	5f                   	pop    edi
100005cd:	c3                   	ret    

100005ce <_ssfn_b>:
100005ce:	55                   	push   ebp
100005cf:	57                   	push   edi
100005d0:	56                   	push   esi
100005d1:	53                   	push   ebx
100005d2:	83 ec 4c             	sub    esp,0x4c
100005d5:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005d9:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005dd:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005e1:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005e5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005e9:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005ed:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005f1:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005f5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005f9:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005fd:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10000601:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
10000605:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000609:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000060d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000611:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000618:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000061c:	83 f8 04             	cmp    eax,0x4
1000061f:	75 28                	jne    10000649 <_ssfn_b+0x7b>
10000621:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000625:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000629:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000062d:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000631:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000635:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000639:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000063d:	83 c4 4c             	add    esp,0x4c
10000640:	5b                   	pop    ebx
10000641:	5e                   	pop    esi
10000642:	5f                   	pop    edi
10000643:	5d                   	pop    ebp
10000644:	e9 74 fe ff ff       	jmp    100004bd <_ssfn_l>
10000649:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000064d:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000651:	75 0e                	jne    10000661 <_ssfn_b+0x93>
10000653:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000657:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000065b:	0f 84 19 01 00 00    	je     1000077a <_ssfn_b+0x1ac>
10000661:	be 02 00 00 00       	mov    esi,0x2
10000666:	89 d8                	mov    eax,ebx
10000668:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
1000066c:	99                   	cdq    
1000066d:	f7 fe                	idiv   esi
1000066f:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000673:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000677:	89 e8                	mov    eax,ebp
10000679:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
1000067d:	99                   	cdq    
1000067e:	f7 fe                	idiv   esi
10000680:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000684:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000688:	89 f8                	mov    eax,edi
1000068a:	29 d8                	sub    eax,ebx
1000068c:	99                   	cdq    
1000068d:	f7 fe                	idiv   esi
1000068f:	01 c3                	add    ebx,eax
10000691:	89 c8                	mov    eax,ecx
10000693:	29 e8                	sub    eax,ebp
10000695:	99                   	cdq    
10000696:	f7 fe                	idiv   esi
10000698:	01 e8                	add    eax,ebp
1000069a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000069e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006a2:	29 f8                	sub    eax,edi
100006a4:	99                   	cdq    
100006a5:	f7 fe                	idiv   esi
100006a7:	01 f8                	add    eax,edi
100006a9:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006ad:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006b1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006b5:	29 c8                	sub    eax,ecx
100006b7:	99                   	cdq    
100006b8:	f7 fe                	idiv   esi
100006ba:	01 c8                	add    eax,ecx
100006bc:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006c0:	89 d8                	mov    eax,ebx
100006c2:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006c6:	99                   	cdq    
100006c7:	f7 fe                	idiv   esi
100006c9:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006cc:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006d0:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006d4:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006d8:	99                   	cdq    
100006d9:	f7 fe                	idiv   esi
100006db:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006de:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006e2:	29 d8                	sub    eax,ebx
100006e4:	99                   	cdq    
100006e5:	f7 fe                	idiv   esi
100006e7:	83 ec 0c             	sub    esp,0xc
100006ea:	01 d8                	add    eax,ebx
100006ec:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006f0:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006f4:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006f8:	99                   	cdq    
100006f9:	f7 fe                	idiv   esi
100006fb:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006ff:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000703:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000707:	29 c8                	sub    eax,ecx
10000709:	99                   	cdq    
1000070a:	f7 fe                	idiv   esi
1000070c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000070f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000713:	29 e8                	sub    eax,ebp
10000715:	99                   	cdq    
10000716:	f7 fe                	idiv   esi
10000718:	8d 34 28             	lea    esi,[eax+ebp*1]
1000071b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000071f:	8d 78 01             	lea    edi,[eax+0x1]
10000722:	57                   	push   edi
10000723:	56                   	push   esi
10000724:	53                   	push   ebx
10000725:	55                   	push   ebp
10000726:	51                   	push   ecx
10000727:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000072b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000072f:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000733:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000737:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000073b:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000073f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000743:	e8 86 fe ff ff       	call   100005ce <_ssfn_b>
10000748:	83 c4 24             	add    esp,0x24
1000074b:	57                   	push   edi
1000074c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000750:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000754:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000758:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000075c:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000760:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000764:	56                   	push   esi
10000765:	53                   	push   ebx
10000766:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000076a:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000076e:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000772:	e8 57 fe ff ff       	call   100005ce <_ssfn_b>
10000777:	83 c4 30             	add    esp,0x30
1000077a:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
1000077f:	0f 85 9c fe ff ff    	jne    10000621 <_ssfn_b+0x53>
10000785:	83 c4 4c             	add    esp,0x4c
10000788:	5b                   	pop    ebx
10000789:	5e                   	pop    esi
1000078a:	5f                   	pop    edi
1000078b:	5d                   	pop    ebp
1000078c:	c3                   	ret    

1000078d <_ssfn__zreceive>:
1000078d:	56                   	push   esi
1000078e:	53                   	push   ebx
1000078f:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000792:	7d 1d                	jge    100007b1 <_ssfn__zreceive+0x24>
10000794:	8b 18                	mov    ebx,DWORD PTR [eax]
10000796:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000799:	89 08                	mov    DWORD PTR [eax],ecx
1000079b:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000079e:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100007a1:	d3 e3                	shl    ebx,cl
100007a3:	83 c1 08             	add    ecx,0x8
100007a6:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007a9:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007ac:	83 f9 18             	cmp    ecx,0x18
100007af:	7e e3                	jle    10000794 <_ssfn__zreceive+0x7>
100007b1:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007b4:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007b7:	89 f3                	mov    ebx,esi
100007b9:	88 d1                	mov    cl,dl
100007bb:	d3 eb                	shr    ebx,cl
100007bd:	88 d1                	mov    cl,dl
100007bf:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007c2:	bb 01 00 00 00       	mov    ebx,0x1
100007c7:	d3 e3                	shl    ebx,cl
100007c9:	8d 43 ff             	lea    eax,[ebx-0x1]
100007cc:	5b                   	pop    ebx
100007cd:	21 f0                	and    eax,esi
100007cf:	5e                   	pop    esi
100007d0:	c3                   	ret    

100007d1 <ssfn_utf8>:
100007d1:	56                   	push   esi
100007d2:	53                   	push   ebx
100007d3:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007d7:	8b 11                	mov    edx,DWORD PTR [ecx]
100007d9:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007dc:	89 f0                	mov    eax,esi
100007de:	84 c0                	test   al,al
100007e0:	0f be d8             	movsx  ebx,al
100007e3:	78 04                	js     100007e9 <ssfn_utf8+0x18>
100007e5:	89 d8                	mov    eax,ebx
100007e7:	eb 7d                	jmp    10000866 <ssfn_utf8+0x95>
100007e9:	f7 c6 20 00 00 00    	test   esi,0x20
100007ef:	75 14                	jne    10000805 <ssfn_utf8+0x34>
100007f1:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007f4:	c1 e3 06             	shl    ebx,0x6
100007f7:	83 e0 3f             	and    eax,0x3f
100007fa:	81 e3 c0 07 00 00    	and    ebx,0x7c0
10000800:	42                   	inc    edx
10000801:	09 d8                	or     eax,ebx
10000803:	eb 5f                	jmp    10000864 <ssfn_utf8+0x93>
10000805:	f7 c6 10 00 00 00    	test   esi,0x10
1000080b:	75 20                	jne    1000082d <ssfn_utf8+0x5c>
1000080d:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000811:	c1 e3 0c             	shl    ebx,0xc
10000814:	c1 e0 06             	shl    eax,0x6
10000817:	0f b7 db             	movzx  ebx,bx
1000081a:	25 c0 0f 00 00       	and    eax,0xfc0
1000081f:	83 c2 02             	add    edx,0x2
10000822:	09 d8                	or     eax,ebx
10000824:	8a 1a                	mov    bl,BYTE PTR [edx]
10000826:	83 e3 3f             	and    ebx,0x3f
10000829:	09 d8                	or     eax,ebx
1000082b:	eb 37                	jmp    10000864 <ssfn_utf8+0x93>
1000082d:	31 c0                	xor    eax,eax
1000082f:	83 e6 08             	and    esi,0x8
10000832:	75 32                	jne    10000866 <ssfn_utf8+0x95>
10000834:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000838:	c1 e3 12             	shl    ebx,0x12
1000083b:	c1 e0 0c             	shl    eax,0xc
1000083e:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000844:	25 00 f0 03 00       	and    eax,0x3f000
10000849:	83 c2 03             	add    edx,0x3
1000084c:	09 d8                	or     eax,ebx
1000084e:	8a 1a                	mov    bl,BYTE PTR [edx]
10000850:	83 e3 3f             	and    ebx,0x3f
10000853:	09 d8                	or     eax,ebx
10000855:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
10000859:	c1 e3 06             	shl    ebx,0x6
1000085c:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000862:	09 d8                	or     eax,ebx
10000864:	89 11                	mov    DWORD PTR [ecx],edx
10000866:	ff 01                	inc    DWORD PTR [ecx]
10000868:	5b                   	pop    ebx
10000869:	5e                   	pop    esi
1000086a:	c3                   	ret    

1000086b <_ssfn_c>:
1000086b:	55                   	push   ebp
1000086c:	57                   	push   edi
1000086d:	56                   	push   esi
1000086e:	53                   	push   ebx
1000086f:	83 ec 14             	sub    esp,0x14
10000872:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
10000878:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
1000087c:	85 c0                	test   eax,eax
1000087e:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000884:	0f 84 e6 00 00 00    	je     10000970 <_ssfn_c+0x105>
1000088a:	31 ff                	xor    edi,edi
1000088c:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000890:	0f 84 f3 00 00 00    	je     10000989 <_ssfn_c+0x11e>
10000896:	85 d2                	test   edx,edx
10000898:	0f 84 eb 00 00 00    	je     10000989 <_ssfn_c+0x11e>
1000089e:	80 3a 00             	cmp    BYTE PTR [edx],0x0
100008a1:	0f 84 e2 00 00 00    	je     10000989 <_ssfn_c+0x11e>
100008a7:	89 d6                	mov    esi,edx
100008a9:	89 cd                	mov    ebp,ecx
100008ab:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008ae:	89 c3                	mov    ebx,eax
100008b0:	85 d2                	test   edx,edx
100008b2:	74 38                	je     100008ec <_ssfn_c+0x81>
100008b4:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008b7:	31 c0                	xor    eax,eax
100008b9:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008bc:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008bf:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008c3:	66 85 d2             	test   dx,dx
100008c6:	74 24                	je     100008ec <_ssfn_c+0x81>
100008c8:	01 da                	add    edx,ebx
100008ca:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008ce:	8a 0a                	mov    cl,BYTE PTR [edx]
100008d0:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008d4:	84 c9                	test   cl,cl
100008d6:	0f 84 9e 00 00 00    	je     1000097a <_ssfn_c+0x10f>
100008dc:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008de:	0f 85 90 00 00 00    	jne    10000974 <_ssfn_c+0x109>
100008e4:	47                   	inc    edi
100008e5:	42                   	inc    edx
100008e6:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008ea:	eb e2                	jmp    100008ce <_ssfn_c+0x63>
100008ec:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008f0:	8d 44 24 10          	lea    eax,[esp+0x10]
100008f4:	50                   	push   eax
100008f5:	e8 fc ff ff ff       	call   100008f6 <_ssfn_c+0x8b>	100008f6: R_386_PC32	ssfn_utf8
100008fa:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008fe:	29 f2                	sub    edx,esi
10000900:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
10000903:	5a                   	pop    edx
10000904:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000908:	89 06                	mov    DWORD PTR [esi],eax
1000090a:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
1000090d:	89 df                	mov    edi,ebx
1000090f:	31 db                	xor    ebx,ebx
10000911:	8a 17                	mov    dl,BYTE PTR [edi]
10000913:	80 fa ff             	cmp    dl,0xff
10000916:	75 08                	jne    10000920 <_ssfn_c+0xb5>
10000918:	81 c3 ff ff 00 00    	add    ebx,0xffff
1000091e:	eb 2a                	jmp    1000094a <_ssfn_c+0xdf>
10000920:	88 d1                	mov    cl,dl
10000922:	83 e1 c0             	and    ecx,0xffffffc0
10000925:	80 f9 c0             	cmp    cl,0xc0
10000928:	75 16                	jne    10000940 <_ssfn_c+0xd5>
1000092a:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000092e:	c1 e2 08             	shl    edx,0x8
10000931:	83 c7 02             	add    edi,0x2
10000934:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000093a:	09 ca                	or     edx,ecx
1000093c:	01 d3                	add    ebx,edx
1000093e:	eb 27                	jmp    10000967 <_ssfn_c+0xfc>
10000940:	80 f9 80             	cmp    cl,0x80
10000943:	75 08                	jne    1000094d <_ssfn_c+0xe2>
10000945:	83 e2 3f             	and    edx,0x3f
10000948:	01 d3                	add    ebx,edx
1000094a:	47                   	inc    edi
1000094b:	eb 1a                	jmp    10000967 <_ssfn_c+0xfc>
1000094d:	39 d8                	cmp    eax,ebx
1000094f:	74 38                	je     10000989 <_ssfn_c+0x11e>
10000951:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000955:	83 e2 40             	and    edx,0x40
10000958:	80 fa 01             	cmp    dl,0x1
1000095b:	19 d2                	sbb    edx,edx
1000095d:	83 c2 06             	add    edx,0x6
10000960:	0f af d1             	imul   edx,ecx
10000963:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
10000967:	43                   	inc    ebx
10000968:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
1000096e:	76 a1                	jbe    10000911 <_ssfn_c+0xa6>
10000970:	31 ff                	xor    edi,edi
10000972:	eb 15                	jmp    10000989 <_ssfn_c+0x11e>
10000974:	40                   	inc    eax
10000975:	e9 42 ff ff ff       	jmp    100008bc <_ssfn_c+0x51>
1000097a:	29 f7                	sub    edi,esi
1000097c:	05 00 f0 00 00       	add    eax,0xf000
10000981:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000984:	e9 7b ff ff ff       	jmp    10000904 <_ssfn_c+0x99>
10000989:	83 c4 14             	add    esp,0x14
1000098c:	89 f8                	mov    eax,edi
1000098e:	5b                   	pop    ebx
1000098f:	5e                   	pop    esi
10000990:	5f                   	pop    edi
10000991:	5d                   	pop    ebp
10000992:	c3                   	ret    

10000993 <_ssfn_zlib_decode>:
10000993:	55                   	push   ebp
10000994:	57                   	push   edi
10000995:	56                   	push   esi
10000996:	53                   	push   ebx
10000997:	81 ec c8 19 00 00    	sub    esp,0x19c8
1000099d:	6a 08                	push   0x8
1000099f:	e8 fc ff ff ff       	call   100009a0 <_ssfn_zlib_decode+0xd>	100009a0: R_386_PC32	malloc
100009a4:	83 c4 10             	add    esp,0x10
100009a7:	89 c2                	mov    edx,eax
100009a9:	85 c0                	test   eax,eax
100009ab:	0f 84 eb 04 00 00    	je     10000e9c <_ssfn_zlib_decode+0x509>
100009b1:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009b8:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009bf:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009c6:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009cd:	31 c0                	xor    eax,eax
100009cf:	83 c2 08             	add    edx,0x8
100009d2:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009d9:	c6 80 00 d8 03 10 08 	mov    BYTE PTR [eax+0x1003d800],0x8	100009db: R_386_32	.bss
100009e0:	40                   	inc    eax
100009e1:	3d 90 00 00 00       	cmp    eax,0x90
100009e6:	75 f1                	jne    100009d9 <_ssfn_zlib_decode+0x46>
100009e8:	c6 80 00 d8 03 10 09 	mov    BYTE PTR [eax+0x1003d800],0x9	100009ea: R_386_32	.bss
100009ef:	40                   	inc    eax
100009f0:	3d 00 01 00 00       	cmp    eax,0x100
100009f5:	75 f1                	jne    100009e8 <_ssfn_zlib_decode+0x55>
100009f7:	c6 80 00 d8 03 10 07 	mov    BYTE PTR [eax+0x1003d800],0x7	100009f9: R_386_32	.bss
100009fe:	40                   	inc    eax
100009ff:	3d 18 01 00 00       	cmp    eax,0x118
10000a04:	75 f1                	jne    100009f7 <_ssfn_zlib_decode+0x64>
10000a06:	c7 05 18 d9 03 10 08 08 08 08 	mov    DWORD PTR ds:0x1003d918,0x8080808	10000a08: R_386_32	.bss
10000a10:	c7 05 1c d9 03 10 08 08 08 08 	mov    DWORD PTR ds:0x1003d91c,0x8080808	10000a12: R_386_32	.bss
10000a1a:	31 c0                	xor    eax,eax
10000a1c:	c6 80 e0 d7 03 10 05 	mov    BYTE PTR [eax+0x1003d7e0],0x5	10000a1e: R_386_32	.bss
10000a23:	40                   	inc    eax
10000a24:	83 f8 20             	cmp    eax,0x20
10000a27:	75 f3                	jne    10000a1c <_ssfn_zlib_decode+0x89>
10000a29:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a34:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a3f:	ba 01 00 00 00       	mov    edx,0x1
10000a44:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a4b:	e8 3d fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a50:	ba 02 00 00 00       	mov    edx,0x2
10000a55:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a59:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a60:	e8 28 fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a65:	89 c6                	mov    esi,eax
10000a67:	85 c0                	test   eax,eax
10000a69:	0f 85 09 01 00 00    	jne    10000b78 <_ssfn_zlib_decode+0x1e5>
10000a6f:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a76:	83 e2 07             	and    edx,0x7
10000a79:	74 0c                	je     10000a87 <_ssfn_zlib_decode+0xf4>
10000a7b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a82:	e8 06 fd ff ff       	call   1000078d <_ssfn__zreceive>
10000a87:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a8e:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a95:	31 c0                	xor    eax,eax
10000a97:	31 db                	xor    ebx,ebx
10000a99:	85 d2                	test   edx,edx
10000a9b:	7f 14                	jg     10000ab1 <_ssfn_zlib_decode+0x11e>
10000a9d:	84 db                	test   bl,bl
10000a9f:	74 22                	je     10000ac3 <_ssfn_zlib_decode+0x130>
10000aa1:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000aa8:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aaf:	eb 12                	jmp    10000ac3 <_ssfn_zlib_decode+0x130>
10000ab1:	40                   	inc    eax
10000ab2:	83 ea 08             	sub    edx,0x8
10000ab5:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000abc:	b3 01                	mov    bl,0x1
10000abe:	c1 e9 08             	shr    ecx,0x8
10000ac1:	eb d6                	jmp    10000a99 <_ssfn_zlib_decode+0x106>
10000ac3:	83 f8 04             	cmp    eax,0x4
10000ac6:	74 1d                	je     10000ae5 <_ssfn_zlib_decode+0x152>
10000ac8:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000acf:	40                   	inc    eax
10000ad0:	8d 4a 01             	lea    ecx,[edx+0x1]
10000ad3:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ada:	8a 12                	mov    dl,BYTE PTR [edx]
10000adc:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000ae3:	eb de                	jmp    10000ac3 <_ssfn_zlib_decode+0x130>
10000ae5:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000aed:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000af5:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000afd:	c1 e3 08             	shl    ebx,0x8
10000b00:	01 c3                	add    ebx,eax
10000b02:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b0a:	c1 e0 08             	shl    eax,0x8
10000b0d:	01 d0                	add    eax,edx
10000b0f:	89 da                	mov    edx,ebx
10000b11:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b17:	39 d0                	cmp    eax,edx
10000b19:	0f 85 69 03 00 00    	jne    10000e88 <_ssfn_zlib_decode+0x4f5>
10000b1f:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b26:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b29:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b30:	73 14                	jae    10000b46 <_ssfn_zlib_decode+0x1b3>
10000b32:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b39:	e8 19 f7 ff ff       	call   10000257 <_ssfn__zexpand>
10000b3e:	85 c0                	test   eax,eax
10000b40:	0f 84 42 03 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000b46:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b4d:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b54:	39 f3                	cmp    ebx,esi
10000b56:	74 09                	je     10000b61 <_ssfn_zlib_decode+0x1ce>
10000b58:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b5b:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b5e:	46                   	inc    esi
10000b5f:	eb e5                	jmp    10000b46 <_ssfn_zlib_decode+0x1b3>
10000b61:	01 da                	add    edx,ebx
10000b63:	01 c3                	add    ebx,eax
10000b65:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b6c:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b73:	e9 fc 02 00 00       	jmp    10000e74 <_ssfn_zlib_decode+0x4e1>
10000b78:	83 f8 03             	cmp    eax,0x3
10000b7b:	0f 84 07 03 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000b81:	4e                   	dec    esi
10000b82:	75 2d                	jne    10000bb1 <_ssfn_zlib_decode+0x21e>
10000b84:	b9 20 01 00 00       	mov    ecx,0x120
10000b89:	ba 00 d8 03 10       	mov    edx,0x1003d800	10000b8a: R_386_32	.bss
10000b8e:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b95:	e8 1c f7 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000b9a:	85 c0                	test   eax,eax
10000b9c:	0f 84 e6 02 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ba2:	b9 20 00 00 00       	mov    ecx,0x20
10000ba7:	ba e0 d7 03 10       	mov    edx,0x1003d7e0	10000ba8: R_386_32	.bss
10000bac:	e9 78 01 00 00       	jmp    10000d29 <_ssfn_zlib_decode+0x396>
10000bb1:	ba 05 00 00 00       	mov    edx,0x5
10000bb6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bbd:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bc1:	e8 c7 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bc6:	89 df                	mov    edi,ebx
10000bc8:	ba 05 00 00 00       	mov    edx,0x5
10000bcd:	89 c5                	mov    ebp,eax
10000bcf:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bd6:	e8 b2 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bdb:	ba 04 00 00 00       	mov    edx,0x4
10000be0:	89 c6                	mov    esi,eax
10000be2:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000be9:	e8 9f fb ff ff       	call   1000078d <_ssfn__zreceive>
10000bee:	b9 13 00 00 00       	mov    ecx,0x13
10000bf3:	83 c0 04             	add    eax,0x4
10000bf6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bfa:	31 c0                	xor    eax,eax
10000bfc:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bfe:	31 ff                	xor    edi,edi
10000c00:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c04:	7e 1f                	jle    10000c25 <_ssfn_zlib_decode+0x292>
10000c06:	ba 03 00 00 00       	mov    edx,0x3
10000c0b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c12:	47                   	inc    edi
10000c13:	e8 75 fb ff ff       	call   1000078d <_ssfn__zreceive>
10000c18:	0f b6 97 3f c9 00 10 	movzx  edx,BYTE PTR [edi+0x1000c93f]	10000c1b: R_386_32	.text
10000c1f:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c23:	eb db                	jmp    10000c00 <_ssfn_zlib_decode+0x26d>
10000c25:	b9 13 00 00 00       	mov    ecx,0x13
10000c2a:	89 da                	mov    edx,ebx
10000c2c:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c33:	e8 7e f6 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000c38:	85 c0                	test   eax,eax
10000c3a:	0f 84 48 02 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000c40:	8d 46 01             	lea    eax,[esi+0x1]
10000c43:	81 c5 01 01 00 00    	add    ebp,0x101
10000c49:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c4d:	31 f6                	xor    esi,esi
10000c4f:	01 e8                	add    eax,ebp
10000c51:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c55:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c59:	0f 8e 9f 00 00 00    	jle    10000cfe <_ssfn_zlib_decode+0x36b>
10000c5f:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c66:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c6d:	e8 35 f5 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000c72:	83 f8 12             	cmp    eax,0x12
10000c75:	0f 87 0d 02 00 00    	ja     10000e88 <_ssfn_zlib_decode+0x4f5>
10000c7b:	83 f8 0f             	cmp    eax,0xf
10000c7e:	7f 07                	jg     10000c87 <_ssfn_zlib_decode+0x2f4>
10000c80:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c84:	46                   	inc    esi
10000c85:	eb ce                	jmp    10000c55 <_ssfn_zlib_decode+0x2c2>
10000c87:	83 f8 10             	cmp    eax,0x10
10000c8a:	75 22                	jne    10000cae <_ssfn_zlib_decode+0x31b>
10000c8c:	ba 02 00 00 00       	mov    edx,0x2
10000c91:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c98:	e8 f0 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000c9d:	85 f6                	test   esi,esi
10000c9f:	8d 58 03             	lea    ebx,[eax+0x3]
10000ca2:	0f 84 e0 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ca8:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000cac:	eb 31                	jmp    10000cdf <_ssfn_zlib_decode+0x34c>
10000cae:	83 f8 11             	cmp    eax,0x11
10000cb1:	75 16                	jne    10000cc9 <_ssfn_zlib_decode+0x336>
10000cb3:	ba 03 00 00 00       	mov    edx,0x3
10000cb8:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cbf:	e8 c9 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000cc4:	8d 58 03             	lea    ebx,[eax+0x3]
10000cc7:	eb 14                	jmp    10000cdd <_ssfn_zlib_decode+0x34a>
10000cc9:	ba 07 00 00 00       	mov    edx,0x7
10000cce:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cd5:	e8 b3 fa ff ff       	call   1000078d <_ssfn__zreceive>
10000cda:	8d 58 0b             	lea    ebx,[eax+0xb]
10000cdd:	31 c0                	xor    eax,eax
10000cdf:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000ce3:	29 f2                	sub    edx,esi
10000ce5:	39 da                	cmp    edx,ebx
10000ce7:	0f 8c 9b 01 00 00    	jl     10000e88 <_ssfn_zlib_decode+0x4f5>
10000ced:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000cf1:	89 d9                	mov    ecx,ebx
10000cf3:	89 d7                	mov    edi,edx
10000cf5:	01 de                	add    esi,ebx
10000cf7:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000cf9:	e9 57 ff ff ff       	jmp    10000c55 <_ssfn_zlib_decode+0x2c2>
10000cfe:	0f 85 84 01 00 00    	jne    10000e88 <_ssfn_zlib_decode+0x4f5>
10000d04:	89 e9                	mov    ecx,ebp
10000d06:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d0a:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d11:	e8 a0 f5 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000d16:	85 c0                	test   eax,eax
10000d18:	0f 84 6a 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d1e:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d22:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d26:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d29:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d30:	e8 81 f5 ff ff       	call   100002b6 <_ssfn__zbuild_huffman>
10000d35:	85 c0                	test   eax,eax
10000d37:	0f 84 4b 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d3d:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d44:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d4b:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d52:	e8 50 f4 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000d57:	89 c3                	mov    ebx,eax
10000d59:	3d ff 00 00 00       	cmp    eax,0xff
10000d5e:	7f 34                	jg     10000d94 <_ssfn_zlib_decode+0x401>
10000d60:	85 c0                	test   eax,eax
10000d62:	0f 88 20 01 00 00    	js     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d68:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d6f:	77 1d                	ja     10000d8e <_ssfn_zlib_decode+0x3fb>
10000d71:	89 ea                	mov    edx,ebp
10000d73:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d7a:	e8 d8 f4 ff ff       	call   10000257 <_ssfn__zexpand>
10000d7f:	85 c0                	test   eax,eax
10000d81:	0f 84 01 01 00 00    	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000d87:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d8e:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d91:	45                   	inc    ebp
10000d92:	eb b0                	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000d94:	3d 00 01 00 00       	cmp    eax,0x100
10000d99:	75 0c                	jne    10000da7 <_ssfn_zlib_decode+0x414>
10000d9b:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000da2:	e9 cd 00 00 00       	jmp    10000e74 <_ssfn_zlib_decode+0x4e1>
10000da7:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000dad:	8b 14 85 60 ca 00 10 	mov    edx,DWORD PTR [eax*4+0x1000ca60]	10000db0: R_386_32	.text
10000db4:	8b 1c 85 e0 ca 00 10 	mov    ebx,DWORD PTR [eax*4+0x1000cae0]	10000db7: R_386_32	.text
10000dbb:	85 d2                	test   edx,edx
10000dbd:	74 0e                	je     10000dcd <_ssfn_zlib_decode+0x43a>
10000dbf:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dc6:	e8 c2 f9 ff ff       	call   1000078d <_ssfn__zreceive>
10000dcb:	01 c3                	add    ebx,eax
10000dcd:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000dd4:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000ddb:	e8 c7 f3 ff ff       	call   100001a7 <_ssfn__zhuffman_decode>
10000de0:	85 c0                	test   eax,eax
10000de2:	0f 88 a0 00 00 00    	js     10000e88 <_ssfn_zlib_decode+0x4f5>
10000de8:	8b 14 85 60 c9 00 10 	mov    edx,DWORD PTR [eax*4+0x1000c960]	10000deb: R_386_32	.text
10000def:	8b 3c 85 e0 c9 00 10 	mov    edi,DWORD PTR [eax*4+0x1000c9e0]	10000df2: R_386_32	.text
10000df6:	85 d2                	test   edx,edx
10000df8:	74 0e                	je     10000e08 <_ssfn_zlib_decode+0x475>
10000dfa:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e01:	e8 87 f9 ff ff       	call   1000078d <_ssfn__zreceive>
10000e06:	01 c7                	add    edi,eax
10000e08:	89 e8                	mov    eax,ebp
10000e0a:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e11:	39 f8                	cmp    eax,edi
10000e13:	7c 73                	jl     10000e88 <_ssfn_zlib_decode+0x4f5>
10000e15:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e19:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e20:	73 19                	jae    10000e3b <_ssfn_zlib_decode+0x4a8>
10000e22:	89 ea                	mov    edx,ebp
10000e24:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e2b:	e8 27 f4 ff ff       	call   10000257 <_ssfn__zexpand>
10000e30:	85 c0                	test   eax,eax
10000e32:	74 54                	je     10000e88 <_ssfn_zlib_decode+0x4f5>
10000e34:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e3b:	89 ee                	mov    esi,ebp
10000e3d:	29 fe                	sub    esi,edi
10000e3f:	4f                   	dec    edi
10000e40:	75 19                	jne    10000e5b <_ssfn_zlib_decode+0x4c8>
10000e42:	85 db                	test   ebx,ebx
10000e44:	0f 84 fa fe ff ff    	je     10000d44 <_ssfn_zlib_decode+0x3b1>
10000e4a:	8a 06                	mov    al,BYTE PTR [esi]
10000e4c:	01 eb                	add    ebx,ebp
10000e4e:	45                   	inc    ebp
10000e4f:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e52:	39 dd                	cmp    ebp,ebx
10000e54:	75 f8                	jne    10000e4e <_ssfn_zlib_decode+0x4bb>
10000e56:	e9 e9 fe ff ff       	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000e5b:	85 db                	test   ebx,ebx
10000e5d:	0f 84 e1 fe ff ff    	je     10000d44 <_ssfn_zlib_decode+0x3b1>
10000e63:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e66:	89 ef                	mov    edi,ebp
10000e68:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e69:	39 f0                	cmp    eax,esi
10000e6b:	75 fb                	jne    10000e68 <_ssfn_zlib_decode+0x4d5>
10000e6d:	01 dd                	add    ebp,ebx
10000e6f:	e9 d0 fe ff ff       	jmp    10000d44 <_ssfn_zlib_decode+0x3b1>
10000e74:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e79:	0f 84 c0 fb ff ff    	je     10000a3f <_ssfn_zlib_decode+0xac>
10000e7f:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e86:	eb 14                	jmp    10000e9c <_ssfn_zlib_decode+0x509>
10000e88:	83 ec 0c             	sub    esp,0xc
10000e8b:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e92:	e8 fc ff ff ff       	call   10000e93 <_ssfn_zlib_decode+0x500>	10000e93: R_386_PC32	free
10000e97:	83 c4 10             	add    esp,0x10
10000e9a:	31 c0                	xor    eax,eax
10000e9c:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000ea2:	5b                   	pop    ebx
10000ea3:	5e                   	pop    esi
10000ea4:	5f                   	pop    edi
10000ea5:	5d                   	pop    ebp
10000ea6:	c3                   	ret    

10000ea7 <ssfn_load>:
10000ea7:	55                   	push   ebp
10000ea8:	57                   	push   edi
10000ea9:	56                   	push   esi
10000eaa:	53                   	push   ebx
10000eab:	83 ec 1c             	sub    esp,0x1c
10000eae:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000eb2:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000eb6:	85 ff                	test   edi,edi
10000eb8:	0f 84 d0 01 00 00    	je     1000108e <ssfn_load+0x1e7>
10000ebe:	85 f6                	test   esi,esi
10000ec0:	0f 84 c8 01 00 00    	je     1000108e <ssfn_load+0x1e7>
10000ec6:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ec9:	0f 85 a8 00 00 00    	jne    10000f77 <ssfn_load+0xd0>
10000ecf:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000ed3:	0f 85 9e 00 00 00    	jne    10000f77 <ssfn_load+0xd0>
10000ed9:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000edd:	74 0a                	je     10000ee9 <ssfn_load+0x42>
10000edf:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ee4:	e9 aa 01 00 00       	jmp    10001093 <ssfn_load+0x1ec>
10000ee9:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000eec:	a8 04                	test   al,0x4
10000eee:	75 05                	jne    10000ef5 <ssfn_load+0x4e>
10000ef0:	83 c6 0a             	add    esi,0xa
10000ef3:	eb 08                	jmp    10000efd <ssfn_load+0x56>
10000ef5:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000ef9:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000efd:	a8 08                	test   al,0x8
10000eff:	74 07                	je     10000f08 <ssfn_load+0x61>
10000f01:	46                   	inc    esi
10000f02:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f06:	eb f7                	jmp    10000eff <ssfn_load+0x58>
10000f08:	a8 10                	test   al,0x10
10000f0a:	74 07                	je     10000f13 <ssfn_load+0x6c>
10000f0c:	46                   	inc    esi
10000f0d:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f11:	eb f7                	jmp    10000f0a <ssfn_load+0x63>
10000f13:	83 ec 0c             	sub    esp,0xc
10000f16:	56                   	push   esi
10000f17:	e8 fc ff ff ff       	call   10000f18 <ssfn_load+0x71>	10000f18: R_386_PC32	_ssfn_zlib_decode
10000f1c:	83 c4 10             	add    esp,0x10
10000f1f:	89 c6                	mov    esi,eax
10000f21:	85 c0                	test   eax,eax
10000f23:	74 ba                	je     10000edf <ssfn_load+0x38>
10000f25:	50                   	push   eax
10000f26:	50                   	push   eax
10000f27:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f2d:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f34:	50                   	push   eax
10000f35:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f3b:	e8 fc ff ff ff       	call   10000f3c <ssfn_load+0x95>	10000f3c: R_386_PC32	realloc
10000f40:	83 c4 10             	add    esp,0x10
10000f43:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f49:	85 c0                	test   eax,eax
10000f4b:	75 0f                	jne    10000f5c <ssfn_load+0xb5>
10000f4d:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f57:	e9 1a 01 00 00       	jmp    10001076 <ssfn_load+0x1cf>
10000f5c:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f62:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f65:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f6b:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f6e:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f71:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f77:	50                   	push   eax
10000f78:	6a 04                	push   0x4
10000f7a:	68 09 c8 00 10       	push   0x1000c809	10000f7b: R_386_32	.text
10000f7f:	56                   	push   esi
10000f80:	e8 fc ff ff ff       	call   10000f81 <ssfn_load+0xda>	10000f81: R_386_PC32	memcmp
10000f85:	83 c4 10             	add    esp,0x10
10000f88:	89 c5                	mov    ebp,eax
10000f8a:	85 c0                	test   eax,eax
10000f8c:	75 29                	jne    10000fb7 <ssfn_load+0x110>
10000f8e:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f91:	01 f3                	add    ebx,esi
10000f93:	83 c6 08             	add    esi,0x8
10000f96:	39 de                	cmp    esi,ebx
10000f98:	0f 83 f5 00 00 00    	jae    10001093 <ssfn_load+0x1ec>
10000f9e:	50                   	push   eax
10000f9f:	50                   	push   eax
10000fa0:	56                   	push   esi
10000fa1:	57                   	push   edi
10000fa2:	e8 fc ff ff ff       	call   10000fa3 <ssfn_load+0xfc>	10000fa3: R_386_PC32	ssfn_load
10000fa7:	83 c4 10             	add    esp,0x10
10000faa:	85 c0                	test   eax,eax
10000fac:	0f 85 e1 00 00 00    	jne    10001093 <ssfn_load+0x1ec>
10000fb2:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fb5:	eb df                	jmp    10000f96 <ssfn_load+0xef>
10000fb7:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fba:	83 e0 0f             	and    eax,0xf
10000fbd:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fc1:	53                   	push   ebx
10000fc2:	6a 04                	push   0x4
10000fc4:	68 0e c8 00 10       	push   0x1000c80e	10000fc5: R_386_32	.text
10000fc9:	56                   	push   esi
10000fca:	e8 fc ff ff ff       	call   10000fcb <ssfn_load+0x124>	10000fcb: R_386_PC32	memcmp
10000fcf:	83 c4 10             	add    esp,0x10
10000fd2:	89 c5                	mov    ebp,eax
10000fd4:	85 c0                	test   eax,eax
10000fd6:	0f 85 03 ff ff ff    	jne    10000edf <ssfn_load+0x38>
10000fdc:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fdf:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fe3:	51                   	push   ecx
10000fe4:	6a 04                	push   0x4
10000fe6:	68 13 c8 00 10       	push   0x1000c813	10000fe7: R_386_32	.text
10000feb:	50                   	push   eax
10000fec:	e8 fc ff ff ff       	call   10000fed <ssfn_load+0x146>	10000fed: R_386_PC32	memcmp
10000ff1:	83 c4 10             	add    esp,0x10
10000ff4:	85 c0                	test   eax,eax
10000ff6:	0f 85 e3 fe ff ff    	jne    10000edf <ssfn_load+0x38>
10000ffc:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10001001:	0f 87 d8 fe ff ff    	ja     10000edf <ssfn_load+0x38>
10001007:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
1000100b:	39 cb                	cmp    ebx,ecx
1000100d:	0f 86 cc fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001013:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10001016:	39 c3                	cmp    ebx,eax
10001018:	0f 86 c1 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
1000101e:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001021:	0f 86 b8 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001027:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000102a:	0f 86 af fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001030:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001033:	0f 86 a6 fe ff ff    	jbe    10000edf <ssfn_load+0x38>
10001039:	39 c1                	cmp    ecx,eax
1000103b:	0f 83 9e fe ff ff    	jae    10000edf <ssfn_load+0x38>
10001041:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10001046:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001049:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
1000104f:	40                   	inc    eax
10001050:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
10001056:	52                   	push   edx
10001057:	c1 e0 02             	shl    eax,0x2
1000105a:	52                   	push   edx
1000105b:	50                   	push   eax
1000105c:	ff 33                	push   DWORD PTR [ebx]
1000105e:	e8 fc ff ff ff       	call   1000105f <ssfn_load+0x1b8>	1000105f: R_386_PC32	realloc
10001063:	83 c4 10             	add    esp,0x10
10001066:	89 03                	mov    DWORD PTR [ebx],eax
10001068:	85 c0                	test   eax,eax
1000106a:	75 0f                	jne    1000107b <ssfn_load+0x1d4>
1000106c:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
10001076:	83 cd ff             	or     ebp,0xffffffff
10001079:	eb 18                	jmp    10001093 <ssfn_load+0x1ec>
1000107b:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001081:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001085:	89 f8                	mov    eax,edi
10001087:	e8 ad f3 ff ff       	call   10000439 <_ssfn_fc.part.1>
1000108c:	eb 05                	jmp    10001093 <ssfn_load+0x1ec>
1000108e:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10001093:	83 c4 1c             	add    esp,0x1c
10001096:	89 e8                	mov    eax,ebp
10001098:	5b                   	pop    ebx
10001099:	5e                   	pop    esi
1000109a:	5f                   	pop    edi
1000109b:	5d                   	pop    ebp
1000109c:	c3                   	ret    

1000109d <ssfn_free>:
1000109d:	57                   	push   edi
1000109e:	56                   	push   esi
1000109f:	53                   	push   ebx
100010a0:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010a4:	85 db                	test   ebx,ebx
100010a6:	74 7e                	je     10001126 <ssfn_free+0x89>
100010a8:	89 d8                	mov    eax,ebx
100010aa:	e8 8a f3 ff ff       	call   10000439 <_ssfn_fc.part.1>
100010af:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010b6:	74 32                	je     100010ea <ssfn_free+0x4d>
100010b8:	31 f6                	xor    esi,esi
100010ba:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010c0:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010c6:	7e 16                	jle    100010de <ssfn_free+0x41>
100010c8:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010cb:	85 c0                	test   eax,eax
100010cd:	74 0c                	je     100010db <ssfn_free+0x3e>
100010cf:	83 ec 0c             	sub    esp,0xc
100010d2:	50                   	push   eax
100010d3:	e8 fc ff ff ff       	call   100010d4 <ssfn_free+0x37>	100010d4: R_386_PC32	free
100010d8:	83 c4 10             	add    esp,0x10
100010db:	46                   	inc    esi
100010dc:	eb dc                	jmp    100010ba <ssfn_free+0x1d>
100010de:	83 ec 0c             	sub    esp,0xc
100010e1:	50                   	push   eax
100010e2:	e8 fc ff ff ff       	call   100010e3 <ssfn_free+0x46>	100010e3: R_386_PC32	free
100010e7:	83 c4 10             	add    esp,0x10
100010ea:	31 f6                	xor    esi,esi
100010ec:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010ef:	85 c0                	test   eax,eax
100010f1:	74 0c                	je     100010ff <ssfn_free+0x62>
100010f3:	83 ec 0c             	sub    esp,0xc
100010f6:	50                   	push   eax
100010f7:	e8 fc ff ff ff       	call   100010f8 <ssfn_free+0x5b>	100010f8: R_386_PC32	free
100010fc:	83 c4 10             	add    esp,0x10
100010ff:	46                   	inc    esi
10001100:	83 fe 05             	cmp    esi,0x5
10001103:	75 e7                	jne    100010ec <ssfn_free+0x4f>
10001105:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000110b:	85 c0                	test   eax,eax
1000110d:	74 0c                	je     1000111b <ssfn_free+0x7e>
1000110f:	83 ec 0c             	sub    esp,0xc
10001112:	50                   	push   eax
10001113:	e8 fc ff ff ff       	call   10001114 <ssfn_free+0x77>	10001114: R_386_PC32	free
10001118:	83 c4 10             	add    esp,0x10
1000111b:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001120:	31 c0                	xor    eax,eax
10001122:	89 df                	mov    edi,ebx
10001124:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001126:	5b                   	pop    ebx
10001127:	5e                   	pop    esi
10001128:	5f                   	pop    edi
10001129:	c3                   	ret    

1000112a <ssfn_mem>:
1000112a:	55                   	push   ebp
1000112b:	31 c0                	xor    eax,eax
1000112d:	57                   	push   edi
1000112e:	56                   	push   esi
1000112f:	53                   	push   ebx
10001130:	83 ec 08             	sub    esp,0x8
10001133:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001137:	85 d2                	test   edx,edx
10001139:	0f 84 8e 00 00 00    	je     100011cd <ssfn_mem+0xa3>
1000113f:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001144:	31 c9                	xor    ecx,ecx
10001146:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
1000114d:	41                   	inc    ecx
1000114e:	8d 04 98             	lea    eax,[eax+ebx*4]
10001151:	83 f9 05             	cmp    ecx,0x5
10001154:	75 f0                	jne    10001146 <ssfn_mem+0x1c>
10001156:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
1000115c:	31 c9                	xor    ecx,ecx
1000115e:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001165:	89 34 24             	mov    DWORD PTR [esp],esi
10001168:	85 f6                	test   esi,esi
1000116a:	74 48                	je     100011b4 <ssfn_mem+0x8a>
1000116c:	31 db                	xor    ebx,ebx
1000116e:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001171:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001174:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
10001178:	85 ff                	test   edi,edi
1000117a:	74 2a                	je     100011a6 <ssfn_mem+0x7c>
1000117c:	31 f6                	xor    esi,esi
1000117e:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001182:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001185:	85 ed                	test   ebp,ebp
10001187:	74 0f                	je     10001198 <ssfn_mem+0x6e>
10001189:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
1000118d:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001191:	0f af fd             	imul   edi,ebp
10001194:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
10001198:	46                   	inc    esi
10001199:	81 fe 00 01 00 00    	cmp    esi,0x100
1000119f:	75 dd                	jne    1000117e <ssfn_mem+0x54>
100011a1:	05 00 04 00 00       	add    eax,0x400
100011a6:	43                   	inc    ebx
100011a7:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011ad:	75 bf                	jne    1000116e <ssfn_mem+0x44>
100011af:	05 00 04 00 00       	add    eax,0x400
100011b4:	41                   	inc    ecx
100011b5:	83 f9 11             	cmp    ecx,0x11
100011b8:	75 a4                	jne    1000115e <ssfn_mem+0x34>
100011ba:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011c1:	74 0a                	je     100011cd <ssfn_mem+0xa3>
100011c3:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011c9:	01 d2                	add    edx,edx
100011cb:	01 d0                	add    eax,edx
100011cd:	83 c4 08             	add    esp,0x8
100011d0:	5b                   	pop    ebx
100011d1:	5e                   	pop    esi
100011d2:	5f                   	pop    edi
100011d3:	5d                   	pop    ebp
100011d4:	c3                   	ret    

100011d5 <ssfn_select>:
100011d5:	55                   	push   ebp
100011d6:	57                   	push   edi
100011d7:	56                   	push   esi
100011d8:	53                   	push   ebx
100011d9:	83 ec 1c             	sub    esp,0x1c
100011dc:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011e0:	85 db                	test   ebx,ebx
100011e2:	75 0a                	jne    100011ee <ssfn_select+0x19>
100011e4:	be fc ff ff ff       	mov    esi,0xfffffffc
100011e9:	e9 13 01 00 00       	jmp    10001301 <ssfn_select+0x12c>
100011ee:	89 d8                	mov    eax,ebx
100011f0:	e8 44 f2 ff ff       	call   10000439 <_ssfn_fc.part.1>
100011f5:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011f9:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011ff:	0f 85 e9 00 00 00    	jne    100012ee <ssfn_select+0x119>
10001205:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001209:	83 e8 08             	sub    eax,0x8
1000120c:	3d b8 00 00 00       	cmp    eax,0xb8
10001211:	0f 87 de 00 00 00    	ja     100012f5 <ssfn_select+0x120>
10001217:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
1000121f:	75 76                	jne    10001297 <ssfn_select+0xc2>
10001221:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001226:	74 bc                	je     100011e4 <ssfn_select+0xf>
10001228:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000122c:	80 38 00             	cmp    BYTE PTR [eax],0x0
1000122f:	74 b3                	je     100011e4 <ssfn_select+0xf>
10001231:	31 ed                	xor    ebp,ebp
10001233:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001237:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000123b:	74 03                	je     10001240 <ssfn_select+0x6b>
1000123d:	45                   	inc    ebp
1000123e:	eb f3                	jmp    10001233 <ssfn_select+0x5e>
10001240:	8d 43 14             	lea    eax,[ebx+0x14]
10001243:	89 df                	mov    edi,ebx
10001245:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001249:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
1000124f:	31 d2                	xor    edx,edx
10001251:	89 04 24             	mov    DWORD PTR [esp],eax
10001254:	39 14 24             	cmp    DWORD PTR [esp],edx
10001257:	7e 33                	jle    1000128c <ssfn_select+0xb7>
10001259:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
1000125d:	8b 07                	mov    eax,DWORD PTR [edi]
1000125f:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001262:	50                   	push   eax
10001263:	8d 41 20             	lea    eax,[ecx+0x20]
10001266:	55                   	push   ebp
10001267:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000126b:	50                   	push   eax
1000126c:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001270:	e8 fc ff ff ff       	call   10001271 <ssfn_select+0x9c>	10001271: R_386_PC32	memcmp
10001275:	83 c4 10             	add    esp,0x10
10001278:	85 c0                	test   eax,eax
1000127a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000127e:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001282:	75 05                	jne    10001289 <ssfn_select+0xb4>
10001284:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
10001287:	eb 34                	jmp    100012bd <ssfn_select+0xe8>
10001289:	42                   	inc    edx
1000128a:	eb c8                	jmp    10001254 <ssfn_select+0x7f>
1000128c:	83 c7 04             	add    edi,0x4
1000128f:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001293:	75 b4                	jne    10001249 <ssfn_select+0x74>
10001295:	eb 65                	jmp    100012fc <ssfn_select+0x127>
10001297:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
1000129f:	74 15                	je     100012b6 <ssfn_select+0xe1>
100012a1:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012a6:	7f 54                	jg     100012fc <ssfn_select+0x127>
100012a8:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012ac:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012b4:	74 46                	je     100012fc <ssfn_select+0x127>
100012b6:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012bd:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012c1:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012c8:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012ce:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012d8:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012dc:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012e2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012e6:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012ec:	eb 13                	jmp    10001301 <ssfn_select+0x12c>
100012ee:	be fb ff ff ff       	mov    esi,0xfffffffb
100012f3:	eb 0c                	jmp    10001301 <ssfn_select+0x12c>
100012f5:	be fa ff ff ff       	mov    esi,0xfffffffa
100012fa:	eb 05                	jmp    10001301 <ssfn_select+0x12c>
100012fc:	be fd ff ff ff       	mov    esi,0xfffffffd
10001301:	83 c4 1c             	add    esp,0x1c
10001304:	89 f0                	mov    eax,esi
10001306:	5b                   	pop    ebx
10001307:	5e                   	pop    esi
10001308:	5f                   	pop    edi
10001309:	5d                   	pop    ebp
1000130a:	c3                   	ret    

1000130b <ssfn_render>:
1000130b:	55                   	push   ebp
1000130c:	57                   	push   edi
1000130d:	56                   	push   esi
1000130e:	53                   	push   ebx
1000130f:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001315:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
1000131c:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
10001327:	85 ed                	test   ebp,ebp
10001329:	0f 94 c2             	sete   dl
1000132c:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001334:	0f 94 c0             	sete   al
10001337:	08 c2                	or     dl,al
10001339:	74 0a                	je     10001345 <ssfn_render+0x3a>
1000133b:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001340:	e9 14 1e 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
10001345:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
1000134c:	31 c9                	xor    ecx,ecx
1000134e:	8a 00                	mov    al,BYTE PTR [eax]
10001350:	84 c0                	test   al,al
10001352:	0f 84 01 1e 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001358:	3c 0d                	cmp    al,0xd
1000135a:	75 0f                	jne    1000136b <ssfn_render+0x60>
1000135c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001363:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001369:	eb 31                	jmp    1000139c <ssfn_render+0x91>
1000136b:	3c 0a                	cmp    al,0xa
1000136d:	75 37                	jne    100013a6 <ssfn_render+0x9b>
1000136f:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001376:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000137c:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
1000137f:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001385:	85 c0                	test   eax,eax
10001387:	75 06                	jne    1000138f <ssfn_render+0x84>
10001389:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
1000138f:	01 d0                	add    eax,edx
10001391:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10001398:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
1000139c:	b9 01 00 00 00       	mov    ecx,0x1
100013a1:	e9 b3 1d 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
100013a6:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013a9:	85 c0                	test   eax,eax
100013ab:	74 3e                	je     100013eb <ssfn_render+0xe0>
100013ad:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013b0:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
100013b7:	56                   	push   esi
100013b8:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013bf:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013c6:	e8 a0 f4 ff ff       	call   1000086b <_ssfn_c>
100013cb:	5b                   	pop    ebx
100013cc:	85 c0                	test   eax,eax
100013ce:	0f 85 71 02 00 00    	jne    10001645 <ssfn_render+0x33a>
100013d4:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013da:	81 e2 00 01 00 00    	and    edx,0x100
100013e0:	0f 84 fd 01 00 00    	je     100015e3 <ssfn_render+0x2d8>
100013e6:	e9 1d 02 00 00       	jmp    10001608 <ssfn_render+0x2fd>
100013eb:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013f1:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013f8:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100013fc:	3d fd 00 00 00       	cmp    eax,0xfd
10001401:	7f 08                	jg     1000140b <ssfn_render+0x100>
10001403:	89 c3                	mov    ebx,eax
10001405:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001409:	eb 3f                	jmp    1000144a <ssfn_render+0x13f>
1000140b:	31 db                	xor    ebx,ebx
1000140d:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001415:	eb 33                	jmp    1000144a <ssfn_render+0x13f>
10001417:	85 c0                	test   eax,eax
10001419:	0f 84 64 01 00 00    	je     10001583 <ssfn_render+0x278>
1000141f:	43                   	inc    ebx
10001420:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001424:	7e 28                	jle    1000144e <ssfn_render+0x143>
10001426:	85 c0                	test   eax,eax
10001428:	0f 85 17 02 00 00    	jne    10001645 <ssfn_render+0x33a>
1000142e:	31 db                	xor    ebx,ebx
10001430:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001438:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
10001440:	74 92                	je     100013d4 <ssfn_render+0xc9>
10001442:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
1000144a:	31 c0                	xor    eax,eax
1000144c:	eb d2                	jmp    10001420 <ssfn_render+0x115>
1000144e:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001452:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
10001459:	74 bc                	je     10001417 <ssfn_render+0x10c>
1000145b:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001466:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
1000146d:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001474:	7e 50                	jle    100014c6 <ssfn_render+0x1bb>
10001476:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
10001479:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
1000147d:	c1 fa 04             	sar    edx,0x4
10001480:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
10001486:	80 e2 03             	and    dl,0x3
10001489:	75 32                	jne    100014bd <ssfn_render+0x1b2>
1000148b:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
1000148f:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001495:	75 26                	jne    100014bd <ssfn_render+0x1b2>
10001497:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
1000149e:	50                   	push   eax
1000149f:	89 f8                	mov    eax,edi
100014a1:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014a8:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014af:	e8 b7 f3 ff ff       	call   1000086b <_ssfn_c>
100014b4:	59                   	pop    ecx
100014b5:	85 c0                	test   eax,eax
100014b7:	0f 85 04 01 00 00    	jne    100015c1 <ssfn_render+0x2b6>
100014bd:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014c4:	eb a0                	jmp    10001466 <ssfn_render+0x15b>
100014c6:	85 c0                	test   eax,eax
100014c8:	0f 85 51 ff ff ff    	jne    1000141f <ssfn_render+0x114>
100014ce:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014d9:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014e0:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014e7:	0f 8e f9 1b 00 00    	jle    100030e6 <ssfn_render+0x1ddb>
100014ed:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014f0:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014f4:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014fa:	74 09                	je     10001505 <ssfn_render+0x1fa>
100014fc:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001503:	eb d4                	jmp    100014d9 <ssfn_render+0x1ce>
10001505:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000150c:	57                   	push   edi
1000150d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001514:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000151b:	e8 4b f3 ff ff       	call   1000086b <_ssfn_c>
10001520:	5a                   	pop    edx
10001521:	85 c0                	test   eax,eax
10001523:	74 d7                	je     100014fc <ssfn_render+0x1f1>
10001525:	e9 97 00 00 00       	jmp    100015c1 <ssfn_render+0x2b6>
1000152a:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000152d:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10001531:	c1 fa 04             	sar    edx,0x4
10001534:	31 ca                	xor    edx,ecx
10001536:	80 e2 03             	and    dl,0x3
10001539:	0f 84 b7 1b 00 00    	je     100030f6 <ssfn_render+0x1deb>
1000153f:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001546:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000154d:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10001553:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000155a:	7f ce                	jg     1000152a <ssfn_render+0x21f>
1000155c:	83 e1 03             	and    ecx,0x3
1000155f:	83 f9 03             	cmp    ecx,0x3
10001562:	75 1f                	jne    10001583 <ssfn_render+0x278>
10001564:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000156f:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001576:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000157d:	0f 8f 9c 1b 00 00    	jg     1000311f <ssfn_render+0x1e14>
10001583:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000158e:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001595:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000159c:	7e 3e                	jle    100015dc <ssfn_render+0x2d1>
1000159e:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100015a1:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015a8:	57                   	push   edi
100015a9:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100015b0:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100015b7:	e8 af f2 ff ff       	call   1000086b <_ssfn_c>
100015bc:	5a                   	pop    edx
100015bd:	85 c0                	test   eax,eax
100015bf:	74 12                	je     100015d3 <ssfn_render+0x2c8>
100015c1:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100015c8:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
100015cb:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
100015ce:	e9 4c fe ff ff       	jmp    1000141f <ssfn_render+0x114>
100015d3:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100015da:	eb b2                	jmp    1000158e <ssfn_render+0x283>
100015dc:	31 c0                	xor    eax,eax
100015de:	e9 3c fe ff ff       	jmp    1000141f <ssfn_render+0x114>
100015e3:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015e9:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015f4:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100015fa:	7f 16                	jg     10001612 <ssfn_render+0x307>
100015fc:	89 da                	mov    edx,ebx
100015fe:	31 c0                	xor    eax,eax
10001600:	39 da                	cmp    edx,ebx
10001602:	7e 15                	jle    10001619 <ssfn_render+0x30e>
10001604:	85 c0                	test   eax,eax
10001606:	75 3d                	jne    10001645 <ssfn_render+0x33a>
10001608:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
1000160d:	e9 47 1b 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
10001612:	bb 04 00 00 00       	mov    ebx,0x4
10001617:	eb e5                	jmp    100015fe <ssfn_render+0x2f3>
10001619:	85 c0                	test   eax,eax
1000161b:	75 28                	jne    10001645 <ssfn_render+0x33a>
1000161d:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001625:	74 1b                	je     10001642 <ssfn_render+0x337>
10001627:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
1000162b:	8b 09                	mov    ecx,DWORD PTR [ecx]
1000162d:	85 c9                	test   ecx,ecx
1000162f:	74 11                	je     10001642 <ssfn_render+0x337>
10001631:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001634:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001638:	78 08                	js     10001642 <ssfn_render+0x337>
1000163a:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
1000163d:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
10001640:	01 c8                	add    eax,ecx
10001642:	42                   	inc    edx
10001643:	eb bb                	jmp    10001600 <ssfn_render+0x2f5>
10001645:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001648:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
1000164d:	85 d2                	test   edx,edx
1000164f:	0f 84 04 1b 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001655:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
10001659:	0f 84 fa 1a 00 00    	je     10003159 <ssfn_render+0x1e4e>
1000165f:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001665:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001669:	85 ff                	test   edi,edi
1000166b:	0f 84 e8 1a 00 00    	je     10003159 <ssfn_render+0x1e4e>
10001671:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
10001678:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
1000167c:	c1 ef 10             	shr    edi,0x10
1000167f:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10001683:	83 ff 10             	cmp    edi,0x10
10001686:	0f 87 af fc ff ff    	ja     1000133b <ssfn_render+0x30>
1000168c:	8d 70 06             	lea    esi,[eax+0x6]
1000168f:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001695:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10001699:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
1000169f:	89 f7                	mov    edi,esi
100016a1:	81 e7 00 02 00 00    	and    edi,0x200
100016a7:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016ab:	75 34                	jne    100016e1 <ssfn_render+0x3d6>
100016ad:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100016b1:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
100016b8:	85 c9                	test   ecx,ecx
100016ba:	74 25                	je     100016e1 <ssfn_render+0x3d6>
100016bc:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100016c0:	0f b6 ff             	movzx  edi,bh
100016c3:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016c6:	85 c9                	test   ecx,ecx
100016c8:	74 17                	je     100016e1 <ssfn_render+0x3d6>
100016ca:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
100016cf:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016d2:	85 c9                	test   ecx,ecx
100016d4:	74 0b                	je     100016e1 <ssfn_render+0x3d6>
100016d6:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016dc:	e9 25 0d 00 00       	jmp    10002406 <ssfn_render+0x10fb>
100016e1:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016e5:	f7 c6 40 00 00 00    	test   esi,0x40
100016eb:	75 1a                	jne    10001707 <ssfn_render+0x3fc>
100016ed:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016f1:	7e 10                	jle    10001703 <ssfn_render+0x3f8>
100016f3:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016f7:	83 c7 04             	add    edi,0x4
100016fa:	83 e7 fc             	and    edi,0xfffffffc
100016fd:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001701:	eb 04                	jmp    10001707 <ssfn_render+0x3fc>
10001703:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001707:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
1000170c:	f7 c6 02 00 00 00    	test   esi,0x2
10001712:	74 14                	je     10001728 <ssfn_render+0x41d>
10001714:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
10001717:	c0 eb 05             	shr    bl,0x5
1000171a:	89 df                	mov    edi,ebx
1000171c:	83 f7 01             	xor    edi,0x1
1000171f:	83 e7 01             	and    edi,0x1
10001722:	89 fb                	mov    ebx,edi
10001724:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001728:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
1000172d:	83 e6 01             	and    esi,0x1
10001730:	74 10                	je     10001742 <ssfn_render+0x437>
10001732:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
10001736:	75 0a                	jne    10001742 <ssfn_render+0x437>
10001738:	8d 51 40             	lea    edx,[ecx+0x40]
1000173b:	c1 fa 06             	sar    edx,0x6
1000173e:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
10001742:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
10001746:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000174b:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000174f:	99                   	cdq    
10001750:	f7 f9                	idiv   ecx
10001752:	89 c1                	mov    ecx,eax
10001754:	31 c0                	xor    eax,eax
10001756:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
1000175b:	74 0c                	je     10001769 <ssfn_render+0x45e>
1000175d:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001761:	be 04 00 00 00       	mov    esi,0x4
10001766:	99                   	cdq    
10001767:	f7 fe                	idiv   esi
10001769:	01 c8                	add    eax,ecx
1000176b:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
10001770:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001775:	01 f0                	add    eax,esi
10001777:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
1000177b:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000177f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001783:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
10001788:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000178c:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001791:	0f 8f c2 19 00 00    	jg     10003159 <ssfn_render+0x1e4e>
10001797:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
1000179c:	0f 85 f0 00 00 00    	jne    10001892 <ssfn_render+0x587>
100017a2:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017a6:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017aa:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
100017b1:	75 2f                	jne    100017e2 <ssfn_render+0x4d7>
100017b3:	83 ec 0c             	sub    esp,0xc
100017b6:	68 00 04 00 00       	push   0x400
100017bb:	e8 fc ff ff ff       	call   100017bc <ssfn_render+0x4b1>	100017bc: R_386_PC32	malloc
100017c0:	83 c4 10             	add    esp,0x10
100017c3:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
100017c9:	85 c0                	test   eax,eax
100017cb:	75 08                	jne    100017d5 <ssfn_render+0x4ca>
100017cd:	83 c9 ff             	or     ecx,0xffffffff
100017d0:	e9 84 19 00 00       	jmp    10003159 <ssfn_render+0x1e4e>
100017d5:	89 c7                	mov    edi,eax
100017d7:	b9 00 01 00 00       	mov    ecx,0x100
100017dc:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017e0:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017e2:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017e6:	0f b6 dc             	movzx  ebx,ah
100017e9:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017ef:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017f2:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017f5:	75 3a                	jne    10001831 <ssfn_render+0x526>
100017f7:	83 ec 0c             	sub    esp,0xc
100017fa:	68 00 04 00 00       	push   0x400
100017ff:	e8 fc ff ff ff       	call   10001800 <ssfn_render+0x4f5>	10001800: R_386_PC32	malloc
10001804:	89 03                	mov    DWORD PTR [ebx],eax
10001806:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000180d:	83 c4 10             	add    esp,0x10
10001810:	89 c2                	mov    edx,eax
10001812:	0f b6 c4             	movzx  eax,ah
10001815:	c1 ea 10             	shr    edx,0x10
10001818:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000181f:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
10001822:	85 d2                	test   edx,edx
10001824:	74 a7                	je     100017cd <ssfn_render+0x4c2>
10001826:	b9 00 01 00 00       	mov    ecx,0x100
1000182b:	31 c0                	xor    eax,eax
1000182d:	89 d7                	mov    edi,edx
1000182f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001831:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001838:	83 ec 0c             	sub    esp,0xc
1000183b:	0f b6 cc             	movzx  ecx,ah
1000183e:	89 c2                	mov    edx,eax
10001840:	0f b6 c0             	movzx  eax,al
10001843:	c1 ea 10             	shr    edx,0x10
10001846:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000184d:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001850:	8d 1c 82             	lea    ebx,[edx+eax*4]
10001853:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001857:	83 c0 08             	add    eax,0x8
1000185a:	50                   	push   eax
1000185b:	e8 fc ff ff ff       	call   1000185c <ssfn_render+0x551>	1000185c: R_386_PC32	malloc
10001860:	89 03                	mov    DWORD PTR [ebx],eax
10001862:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
10001868:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000186f:	83 c4 10             	add    esp,0x10
10001872:	89 c2                	mov    edx,eax
10001874:	0f b6 cc             	movzx  ecx,ah
10001877:	c1 ea 10             	shr    edx,0x10
1000187a:	0f b6 c0             	movzx  eax,al
1000187d:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001884:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001887:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000188b:	75 0e                	jne    1000189b <ssfn_render+0x590>
1000188d:	e9 3b ff ff ff       	jmp    100017cd <ssfn_render+0x4c2>
10001892:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001895:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000189b:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
100018a1:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018a5:	74 2a                	je     100018d1 <ssfn_render+0x5c6>
100018a7:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018ac:	74 23                	je     100018d1 <ssfn_render+0x5c6>
100018ae:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100018b1:	bb 04 00 00 00       	mov    ebx,0x4
100018b6:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100018ba:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
100018be:	89 cf                	mov    edi,ecx
100018c0:	29 c7                	sub    edi,eax
100018c2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100018c6:	0f af c7             	imul   eax,edi
100018c9:	99                   	cdq    
100018ca:	f7 fb                	idiv   ebx
100018cc:	99                   	cdq    
100018cd:	f7 f9                	idiv   ecx
100018cf:	eb 02                	jmp    100018d3 <ssfn_render+0x5c8>
100018d1:	31 c0                	xor    eax,eax
100018d3:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018d9:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018dd:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018e1:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018e9:	66 89 32             	mov    WORD PTR [edx],si
100018ec:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018f1:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018f7:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100018fa:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001900:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001906:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001909:	01 c3                	add    ebx,eax
1000190b:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
1000190e:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001914:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
1000191a:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
1000191d:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
10001920:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
10001926:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000192c:	8a 12                	mov    dl,BYTE PTR [edx]
1000192e:	83 e2 3f             	and    edx,0x3f
10001931:	01 d0                	add    eax,edx
10001933:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
10001936:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000193a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001940:	8d 50 08             	lea    edx,[eax+0x8]
10001943:	b0 ff                	mov    al,0xff
10001945:	89 d7                	mov    edi,edx
10001947:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001949:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000194f:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
10001953:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001959:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
1000195d:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001961:	c1 e0 04             	shl    eax,0x4
10001964:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10001968:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000196c:	c1 e0 04             	shl    eax,0x4
1000196f:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001973:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001979:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
1000197d:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10001981:	0f 8e 4d 0a 00 00    	jle    100023d4 <ssfn_render+0x10c9>
10001987:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000198b:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000198f:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001992:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001995:	8a 12                	mov    dl,BYTE PTR [edx]
10001997:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000199b:	83 e2 40             	and    edx,0x40
1000199e:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
100019a2:	88 c2                	mov    dl,al
100019a4:	21 ca                	and    edx,ecx
100019a6:	fe c2                	inc    dl
100019a8:	75 14                	jne    100019be <ssfn_render+0x6b3>
100019aa:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019af:	19 c0                	sbb    eax,eax
100019b1:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
100019b5:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100019b9:	e9 09 0a 00 00       	jmp    100023c7 <ssfn_render+0x10bc>
100019be:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100019c2:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
100019c5:	c1 e0 04             	shl    eax,0x4
100019c8:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
100019cc:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019d1:	99                   	cdq    
100019d2:	f7 fe                	idiv   esi
100019d4:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100019d8:	0f b6 c1             	movzx  eax,cl
100019db:	c1 e0 04             	shl    eax,0x4
100019de:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019e3:	99                   	cdq    
100019e4:	f7 fe                	idiv   esi
100019e6:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019ea:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019ee:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019f2:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019f6:	c1 e2 10             	shl    edx,0x10
100019f9:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100019fe:	74 0e                	je     10001a0e <ssfn_render+0x703>
10001a00:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a04:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a09:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a0c:	eb 0c                	jmp    10001a1a <ssfn_render+0x70f>
10001a0e:	c1 e0 08             	shl    eax,0x8
10001a11:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a16:	09 d0                	or     eax,edx
10001a18:	09 c3                	or     ebx,eax
10001a1a:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a1d:	8a 01                	mov    al,BYTE PTR [ecx]
10001a1f:	84 c0                	test   al,al
10001a21:	0f 88 17 05 00 00    	js     10001f3e <ssfn_render+0xc33>
10001a27:	89 c7                	mov    edi,eax
10001a29:	83 e7 3f             	and    edi,0x3f
10001a2c:	a8 40                	test   al,0x40
10001a2e:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a32:	74 10                	je     10001a44 <ssfn_render+0x739>
10001a34:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a38:	89 f8                	mov    eax,edi
10001a3a:	41                   	inc    ecx
10001a3b:	c1 e0 08             	shl    eax,0x8
10001a3e:	09 c2                	or     edx,eax
10001a40:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a44:	8d 41 01             	lea    eax,[ecx+0x1]
10001a47:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a51:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a55:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a60:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a64:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a68:	83 c0 04             	add    eax,0x4
10001a6b:	c1 f8 02             	sar    eax,0x2
10001a6e:	01 c7                	add    edi,eax
10001a70:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a77:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a7b:	0f 8f d7 01 00 00    	jg     10001c58 <ssfn_render+0x94d>
10001a81:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a84:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a88:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a8c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a90:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a94:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a97:	c1 e0 04             	shl    eax,0x4
10001a9a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a9f:	99                   	cdq    
10001aa0:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001aa4:	01 c6                	add    esi,eax
10001aa6:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001aaa:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001aae:	c1 e0 04             	shl    eax,0x4
10001ab1:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001ab6:	99                   	cdq    
10001ab7:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001abb:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001abf:	01 c3                	add    ebx,eax
10001ac1:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001ac5:	89 c8                	mov    eax,ecx
10001ac7:	01 c9                	add    ecx,ecx
10001ac9:	c1 f8 02             	sar    eax,0x2
10001acc:	83 e1 06             	and    ecx,0x6
10001acf:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001ad3:	d3 f8                	sar    eax,cl
10001ad5:	83 e0 03             	and    eax,0x3
10001ad8:	89 c1                	mov    ecx,eax
10001ada:	83 f8 02             	cmp    eax,0x2
10001add:	74 4a                	je     10001b29 <ssfn_render+0x81e>
10001adf:	83 f8 03             	cmp    eax,0x3
10001ae2:	0f 84 e4 00 00 00    	je     10001bcc <ssfn_render+0x8c1>
10001ae8:	49                   	dec    ecx
10001ae9:	74 20                	je     10001b0b <ssfn_render+0x800>
10001aeb:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001af1:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001af7:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001afd:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001b03:	83 c7 02             	add    edi,0x2
10001b06:	e9 41 01 00 00       	jmp    10001c4c <ssfn_render+0x941>
10001b0b:	83 c7 02             	add    edi,0x2
10001b0e:	50                   	push   eax
10001b0f:	50                   	push   eax
10001b10:	89 e8                	mov    eax,ebp
10001b12:	53                   	push   ebx
10001b13:	56                   	push   esi
10001b14:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b18:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b1c:	e8 9c e9 ff ff       	call   100004bd <_ssfn_l>
10001b21:	83 c4 10             	add    esp,0x10
10001b24:	e9 23 01 00 00       	jmp    10001c4c <ssfn_render+0x941>
10001b29:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b2d:	83 c7 04             	add    edi,0x4
10001b30:	c1 e0 04             	shl    eax,0x4
10001b33:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b38:	99                   	cdq    
10001b39:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b3d:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b41:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b45:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b49:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b4d:	c1 e0 04             	shl    eax,0x4
10001b50:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b55:	99                   	cdq    
10001b56:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b5a:	83 ec 0c             	sub    esp,0xc
10001b5d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b61:	6a 00                	push   0x0
10001b63:	53                   	push   ebx
10001b64:	56                   	push   esi
10001b65:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b69:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b6d:	99                   	cdq    
10001b6e:	f7 f9                	idiv   ecx
10001b70:	01 d8                	add    eax,ebx
10001b72:	50                   	push   eax
10001b73:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b77:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b7b:	99                   	cdq    
10001b7c:	f7 f9                	idiv   ecx
10001b7e:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b82:	50                   	push   eax
10001b83:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b87:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b8b:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b91:	99                   	cdq    
10001b92:	f7 f9                	idiv   ecx
10001b94:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b9a:	50                   	push   eax
10001b9b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001b9f:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001ba5:	99                   	cdq    
10001ba6:	f7 f9                	idiv   ecx
10001ba8:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001bae:	50                   	push   eax
10001baf:	89 e8                	mov    eax,ebp
10001bb1:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bb7:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bbd:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001bc1:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001bc5:	e8 04 ea ff ff       	call   100005ce <_ssfn_b>
10001bca:	eb 7d                	jmp    10001c49 <ssfn_render+0x93e>
10001bcc:	83 ec 0c             	sub    esp,0xc
10001bcf:	83 c7 06             	add    edi,0x6
10001bd2:	6a 00                	push   0x0
10001bd4:	53                   	push   ebx
10001bd5:	56                   	push   esi
10001bd6:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001bda:	c1 e0 04             	shl    eax,0x4
10001bdd:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001be2:	99                   	cdq    
10001be3:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001be7:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001beb:	50                   	push   eax
10001bec:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001bf0:	c1 e0 04             	shl    eax,0x4
10001bf3:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001bf8:	99                   	cdq    
10001bf9:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001bfd:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001c01:	50                   	push   eax
10001c02:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c06:	c1 e0 04             	shl    eax,0x4
10001c09:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c0e:	99                   	cdq    
10001c0f:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c13:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c17:	50                   	push   eax
10001c18:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c1c:	c1 e0 04             	shl    eax,0x4
10001c1f:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c24:	99                   	cdq    
10001c25:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c29:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c2d:	50                   	push   eax
10001c2e:	89 e8                	mov    eax,ebp
10001c30:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c36:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c3c:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c40:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c44:	e8 85 e9 ff ff       	call   100005ce <_ssfn_b>
10001c49:	83 c4 30             	add    esp,0x30
10001c4c:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c53:	e9 18 fe ff ff       	jmp    10001a70 <ssfn_render+0x765>
10001c58:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c5e:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c64:	75 0e                	jne    10001c74 <ssfn_render+0x969>
10001c66:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c6c:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c72:	74 2e                	je     10001ca2 <ssfn_render+0x997>
10001c74:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c7a:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c80:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c84:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c8a:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c90:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c96:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c9b:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001ca2:	b3 fe                	mov    bl,0xfe
10001ca4:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001cab:	0f 8e 16 07 00 00    	jle    100023c7 <ssfn_render+0x10bc>
10001cb1:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001cb9:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001cc1:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001cc9:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001cd1:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001cd9:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001cdd:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001ce1:	0f 8d de 06 00 00    	jge    100023c5 <ssfn_render+0x10ba>
10001ce7:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001ced:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001cf8:	83 e8 03             	sub    eax,0x3
10001cfb:	31 f6                	xor    esi,esi
10001cfd:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001d01:	89 f8                	mov    eax,edi
10001d03:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d07:	c1 f8 02             	sar    eax,0x2
10001d0a:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d0e:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d15:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d19:	0f 8e 16 01 00 00    	jle    10001e35 <ssfn_render+0xb2a>
10001d1f:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d25:	8d 47 01             	lea    eax,[edi+0x1]
10001d28:	01 c0                	add    eax,eax
10001d2a:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d2e:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d32:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d37:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d3b:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d3f:	7d 0c                	jge    10001d4d <ssfn_render+0xa42>
10001d41:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d45:	0f 8f db 00 00 00    	jg     10001e26 <ssfn_render+0xb1b>
10001d4b:	eb 0a                	jmp    10001d57 <ssfn_render+0xa4c>
10001d4d:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d51:	0f 8e cf 00 00 00    	jle    10001e26 <ssfn_render+0xb1b>
10001d57:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d5c:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d60:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d65:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d69:	89 d8                	mov    eax,ebx
10001d6b:	c1 fa 04             	sar    edx,0x4
10001d6e:	c1 f8 04             	sar    eax,0x4
10001d71:	39 c2                	cmp    edx,eax
10001d73:	75 0a                	jne    10001d7f <ssfn_render+0xa74>
10001d75:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d79:	01 c8                	add    eax,ecx
10001d7b:	d1 f8                	sar    eax,1
10001d7d:	eb 1a                	jmp    10001d99 <ssfn_render+0xa8e>
10001d7f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d83:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d87:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d8b:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d8f:	0f af c1             	imul   eax,ecx
10001d92:	99                   	cdq    
10001d93:	f7 fb                	idiv   ebx
10001d95:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d99:	c1 f8 04             	sar    eax,0x4
10001d9c:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001da1:	74 04                	je     10001da7 <ssfn_render+0xa9c>
10001da3:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001da7:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001dac:	75 3f                	jne    10001ded <ssfn_render+0xae2>
10001dae:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001db3:	74 38                	je     10001ded <ssfn_render+0xae2>
10001db5:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001db9:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001dbf:	f7 db                	neg    ebx
10001dc1:	01 c2                	add    edx,eax
10001dc3:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001dc7:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dcb:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dcf:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001dd3:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001dd7:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001ddb:	74 10                	je     10001ded <ssfn_render+0xae2>
10001ddd:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001de1:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001de5:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001de9:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001ded:	31 d2                	xor    edx,edx
10001def:	39 f2                	cmp    edx,esi
10001df1:	75 0b                	jne    10001dfe <ssfn_render+0xaf3>
10001df3:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001dfb:	46                   	inc    esi
10001dfc:	eb 28                	jmp    10001e26 <ssfn_render+0xb1b>
10001dfe:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e06:	39 c1                	cmp    ecx,eax
10001e08:	7d 03                	jge    10001e0d <ssfn_render+0xb02>
10001e0a:	42                   	inc    edx
10001e0b:	eb e2                	jmp    10001def <ssfn_render+0xae4>
10001e0d:	89 f1                	mov    ecx,esi
10001e0f:	49                   	dec    ecx
10001e10:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e18:	39 d1                	cmp    ecx,edx
10001e1a:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e22:	7f eb                	jg     10001e0f <ssfn_render+0xb04>
10001e24:	eb cd                	jmp    10001df3 <ssfn_render+0xae8>
10001e26:	8d 47 02             	lea    eax,[edi+0x2]
10001e29:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e30:	e9 d9 fe ff ff       	jmp    10001d0e <ssfn_render+0xa03>
10001e35:	83 fe 01             	cmp    esi,0x1
10001e38:	7e 1f                	jle    10001e59 <ssfn_render+0xb4e>
10001e3a:	f7 c6 01 00 00 00    	test   esi,0x1
10001e40:	74 24                	je     10001e66 <ssfn_render+0xb5b>
10001e42:	8d 46 ff             	lea    eax,[esi-0x1]
10001e45:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e4d:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e55:	89 c6                	mov    esi,eax
10001e57:	eb 0d                	jmp    10001e66 <ssfn_render+0xb5b>
10001e59:	85 f6                	test   esi,esi
10001e5b:	0f 84 c7 00 00 00    	je     10001f28 <ssfn_render+0xc1d>
10001e61:	be 01 00 00 00       	mov    esi,0x1
10001e66:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e6c:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e70:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e74:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e78:	39 d1                	cmp    ecx,edx
10001e7a:	7d 0b                	jge    10001e87 <ssfn_render+0xb7c>
10001e7c:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e80:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e84:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e87:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e92:	31 c0                	xor    eax,eax
10001e94:	31 d2                	xor    edx,edx
10001e96:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e99:	39 d1                	cmp    ecx,edx
10001e9b:	7e 7d                	jle    10001f1a <ssfn_render+0xc0f>
10001e9d:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ea5:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001ead:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001eb1:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001eb5:	79 02                	jns    10001eb9 <ssfn_render+0xbae>
10001eb7:	31 c0                	xor    eax,eax
10001eb9:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001ebd:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001ec1:	39 cf                	cmp    edi,ecx
10001ec3:	7e 04                	jle    10001ec9 <ssfn_render+0xbbe>
10001ec5:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001ec9:	85 d2                	test   edx,edx
10001ecb:	74 12                	je     10001edf <ssfn_render+0xbd4>
10001ecd:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001ed5:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ed9:	39 c8                	cmp    eax,ecx
10001edb:	7d 02                	jge    10001edf <ssfn_render+0xbd4>
10001edd:	89 c8                	mov    eax,ecx
10001edf:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001ee3:	7d 2b                	jge    10001f10 <ssfn_render+0xc05>
10001ee5:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001ee9:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001eef:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001ef2:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001ef6:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001efa:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001efe:	75 05                	jne    10001f05 <ssfn_render+0xbfa>
10001f00:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f05:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f09:	40                   	inc    eax
10001f0a:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f0e:	eb cf                	jmp    10001edf <ssfn_render+0xbd4>
10001f10:	83 c2 02             	add    edx,0x2
10001f13:	b0 01                	mov    al,0x1
10001f15:	e9 7c ff ff ff       	jmp    10001e96 <ssfn_render+0xb8b>
10001f1a:	83 e6 fe             	and    esi,0xfffffffe
10001f1d:	84 c0                	test   al,al
10001f1f:	74 07                	je     10001f28 <ssfn_render+0xc1d>
10001f21:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f28:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f2c:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f30:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f34:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f39:	e9 9b fd ff ff       	jmp    10001cd9 <ssfn_render+0x9ce>
10001f3e:	88 c2                	mov    dl,al
10001f40:	80 e2 60             	and    dl,0x60
10001f43:	0f 85 95 02 00 00    	jne    100021de <ssfn_render+0xed3>
10001f49:	83 e0 1f             	and    eax,0x1f
10001f4c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f50:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f57:	c1 fb 04             	sar    ebx,0x4
10001f5a:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f5e:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f62:	40                   	inc    eax
10001f63:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f67:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f6b:	c1 f8 04             	sar    eax,0x4
10001f6e:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f72:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f76:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f7b:	99                   	cdq    
10001f7c:	f7 fe                	idiv   esi
10001f7e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f82:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f86:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f8b:	99                   	cdq    
10001f8c:	f7 fe                	idiv   esi
10001f8e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f92:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f98:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f9c:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001fa0:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fa3:	39 d6                	cmp    esi,edx
10001fa5:	7d 0a                	jge    10001fb1 <ssfn_render+0xca6>
10001fa7:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fab:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001fae:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001fb1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001fb5:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001fbd:	0f af c3             	imul   eax,ebx
10001fc0:	31 ff                	xor    edi,edi
10001fc2:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fc6:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001fca:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001fce:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001fd2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fd6:	29 d8                	sub    eax,ebx
10001fd8:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fdc:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fe0:	0f 8d b1 00 00 00    	jge    10002097 <ssfn_render+0xd8c>
10001fe6:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001fea:	99                   	cdq    
10001feb:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001fef:	89 c6                	mov    esi,eax
10001ff1:	31 c0                	xor    eax,eax
10001ff3:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001ff8:	74 0e                	je     10002008 <ssfn_render+0xcfd>
10001ffa:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001ffe:	bb 04 00 00 00       	mov    ebx,0x4
10002003:	29 f8                	sub    eax,edi
10002005:	99                   	cdq    
10002006:	f7 fb                	idiv   ebx
10002008:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000200c:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002017:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
1000201b:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
10002020:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002027:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000202b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000202f:	39 d8                	cmp    eax,ebx
10002031:	7d 4e                	jge    10002081 <ssfn_render+0xd76>
10002033:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002037:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
1000203c:	99                   	cdq    
1000203d:	f7 fb                	idiv   ebx
1000203f:	8d 14 06             	lea    edx,[esi+eax*1]
10002042:	83 e0 07             	and    eax,0x7
10002045:	c1 fa 03             	sar    edx,0x3
10002048:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
1000204d:	0f a3 c2             	bt     edx,eax
10002050:	72 0e                	jb     10002060 <ssfn_render+0xd55>
10002052:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10002056:	43                   	inc    ebx
10002057:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
1000205e:	eb c0                	jmp    10002020 <ssfn_render+0xd15>
10002060:	31 c0                	xor    eax,eax
10002062:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10002066:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000206a:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10002070:	40                   	inc    eax
10002071:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10002075:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10002079:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
1000207d:	7d e3                	jge    10002062 <ssfn_render+0xd57>
1000207f:	eb d1                	jmp    10002052 <ssfn_render+0xd47>
10002081:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002085:	47                   	inc    edi
10002086:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000208a:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000208e:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
10002092:	e9 45 ff ff ff       	jmp    10001fdc <ssfn_render+0xcd1>
10002097:	b3 fe                	mov    bl,0xfe
10002099:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
100020a0:	0f 85 21 03 00 00    	jne    100023c7 <ssfn_render+0x10bc>
100020a6:	31 c0                	xor    eax,eax
100020a8:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020ac:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
100020b1:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100020b5:	0f 95 c0             	setne  al
100020b8:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100020bc:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020c0:	4f                   	dec    edi
100020c1:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100020c5:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
100020cd:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100020d1:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100020d8:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020dc:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020e0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020e4:	31 c0                	xor    eax,eax
100020e6:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020e9:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020ed:	83 c1 04             	add    ecx,0x4
100020f0:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020f4:	0f 8d c0 02 00 00    	jge    100023ba <ssfn_render+0x10af>
100020fa:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100020fe:	8d 77 01             	lea    esi,[edi+0x1]
10002101:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002105:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002109:	4f                   	dec    edi
1000210a:	be 01 00 00 00       	mov    esi,0x1
1000210f:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002113:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002117:	7e 63                	jle    1000217c <ssfn_render+0xe71>
10002119:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000211d:	b9 01 00 00 00       	mov    ecx,0x1
10002122:	89 ca                	mov    edx,ecx
10002124:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002128:	7e 45                	jle    1000216f <ssfn_render+0xe64>
1000212a:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002130:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002135:	75 34                	jne    1000216b <ssfn_render+0xe60>
10002137:	89 c7                	mov    edi,eax
10002139:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
1000213d:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
10002141:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002145:	74 0c                	je     10002153 <ssfn_render+0xe48>
10002147:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000214b:	01 d7                	add    edi,edx
1000214d:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
10002151:	75 18                	jne    1000216b <ssfn_render+0xe60>
10002153:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002157:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
1000215b:	74 06                	je     10002163 <ssfn_render+0xe58>
1000215d:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
10002161:	75 08                	jne    1000216b <ssfn_render+0xe60>
10002163:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
10002167:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
1000216b:	41                   	inc    ecx
1000216c:	40                   	inc    eax
1000216d:	eb b3                	jmp    10002122 <ssfn_render+0xe17>
1000216f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002173:	46                   	inc    esi
10002174:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
10002178:	b0 01                	mov    al,0x1
1000217a:	eb 97                	jmp    10002113 <ssfn_render+0xe08>
1000217c:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10002180:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002184:	bb 01 00 00 00       	mov    ebx,0x1
10002189:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
1000218d:	7e 3d                	jle    100021cc <ssfn_render+0xec1>
1000218f:	b8 01 00 00 00       	mov    eax,0x1
10002194:	89 c2                	mov    edx,eax
10002196:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000219a:	7e 23                	jle    100021bf <ssfn_render+0xeb4>
1000219c:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100021a0:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021a6:	8d 14 07             	lea    edx,[edi+eax*1]
100021a9:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021ae:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100021b2:	75 08                	jne    100021bc <ssfn_render+0xeb1>
100021b4:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100021b8:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
100021bc:	40                   	inc    eax
100021bd:	eb d5                	jmp    10002194 <ssfn_render+0xe89>
100021bf:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100021c3:	43                   	inc    ebx
100021c4:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
100021c8:	b0 01                	mov    al,0x1
100021ca:	eb bd                	jmp    10002189 <ssfn_render+0xe7e>
100021cc:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100021cf:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100021d3:	01 c9                	add    ecx,ecx
100021d5:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
100021d9:	e9 08 ff ff ff       	jmp    100020e6 <ssfn_render+0xddb>
100021de:	b3 fe                	mov    bl,0xfe
100021e0:	80 fa 20             	cmp    dl,0x20
100021e3:	0f 85 de 01 00 00    	jne    100023c7 <ssfn_render+0x10bc>
100021e9:	89 c3                	mov    ebx,eax
100021eb:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021ef:	c1 e3 08             	shl    ebx,0x8
100021f2:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100021f8:	09 c3                	or     ebx,eax
100021fa:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100021fe:	43                   	inc    ebx
100021ff:	40                   	inc    eax
10002200:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002204:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002208:	40                   	inc    eax
10002209:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000220d:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002211:	c1 f8 04             	sar    eax,0x4
10002214:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002218:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000221c:	c1 f8 04             	sar    eax,0x4
1000221f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002223:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002227:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
1000222c:	99                   	cdq    
1000222d:	f7 fe                	idiv   esi
1000222f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002233:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002237:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
1000223c:	99                   	cdq    
1000223d:	f7 fe                	idiv   esi
1000223f:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10002243:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002247:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000224d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002251:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002255:	39 d6                	cmp    esi,edx
10002257:	7d 0b                	jge    10002264 <ssfn_render+0xf59>
10002259:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
1000225d:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10002261:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002264:	83 c1 04             	add    ecx,0x4
10002267:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002272:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002275:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002279:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
1000227d:	72 35                	jb     100022b4 <ssfn_render+0xfa9>
1000227f:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10002283:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002287:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
1000228c:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10002290:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002294:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
1000229b:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
1000229f:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022a7:	31 d2                	xor    edx,edx
100022a9:	31 ff                	xor    edi,edi
100022ab:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022af:	e9 cc 00 00 00       	jmp    10002380 <ssfn_render+0x1075>
100022b4:	8a 11                	mov    dl,BYTE PTR [ecx]
100022b6:	89 d0                	mov    eax,edx
100022b8:	83 e0 7f             	and    eax,0x7f
100022bb:	84 d2                	test   dl,dl
100022bd:	8d 78 01             	lea    edi,[eax+0x1]
100022c0:	78 09                	js     100022cb <ssfn_render+0xfc0>
100022c2:	41                   	inc    ecx
100022c3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100022c7:	89 ca                	mov    edx,ecx
100022c9:	eb 3d                	jmp    10002308 <ssfn_render+0xffd>
100022cb:	48                   	dec    eax
100022cc:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100022d3:	83 f8 fe             	cmp    eax,0xfffffffe
100022d6:	74 16                	je     100022ee <ssfn_render+0xfe3>
100022d8:	8d 5a 01             	lea    ebx,[edx+0x1]
100022db:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022e2:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022e5:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022ec:	eb dd                	jmp    100022cb <ssfn_render+0xfc0>
100022ee:	83 c1 02             	add    ecx,0x2
100022f1:	eb 86                	jmp    10002279 <ssfn_render+0xf6e>
100022f3:	42                   	inc    edx
100022f4:	8d 73 01             	lea    esi,[ebx+0x1]
100022f7:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100022fe:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002301:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002308:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
1000230c:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
10002313:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002318:	75 d9                	jne    100022f3 <ssfn_render+0xfe8>
1000231a:	01 f9                	add    ecx,edi
1000231c:	e9 58 ff ff ff       	jmp    10002279 <ssfn_render+0xf6e>
10002321:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002325:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002329:	99                   	cdq    
1000232a:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
1000232e:	0f af c8             	imul   ecx,eax
10002331:	31 c0                	xor    eax,eax
10002333:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002338:	74 0e                	je     10002348 <ssfn_render+0x103d>
1000233a:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000233e:	bb 04 00 00 00       	mov    ebx,0x4
10002343:	29 f8                	sub    eax,edi
10002345:	99                   	cdq    
10002346:	f7 fb                	idiv   ebx
10002348:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
1000234c:	31 db                	xor    ebx,ebx
1000234e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002352:	31 f6                	xor    esi,esi
10002354:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
1000235b:	01 c1                	add    ecx,eax
1000235d:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10002361:	7f 30                	jg     10002393 <ssfn_render+0x1088>
10002363:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002367:	85 c0                	test   eax,eax
10002369:	79 02                	jns    1000236d <ssfn_render+0x1062>
1000236b:	31 c0                	xor    eax,eax
1000236d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002371:	47                   	inc    edi
10002372:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
10002376:	b2 01                	mov    dl,0x1
10002378:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
1000237c:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
10002380:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002384:	7c 9b                	jl     10002321 <ssfn_render+0x1016>
10002386:	84 d2                	test   dl,dl
10002388:	74 3b                	je     100023c5 <ssfn_render+0x10ba>
1000238a:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10002391:	eb 32                	jmp    100023c5 <ssfn_render+0x10ba>
10002393:	89 d8                	mov    eax,ebx
10002395:	99                   	cdq    
10002396:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
1000239a:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
100023a1:	3c ff                	cmp    al,0xff
100023a3:	74 0e                	je     100023b3 <ssfn_render+0x10a8>
100023a5:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023a9:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023af:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
100023b3:	46                   	inc    esi
100023b4:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
100023b8:	eb a3                	jmp    1000235d <ssfn_render+0x1052>
100023ba:	84 c0                	test   al,al
100023bc:	74 07                	je     100023c5 <ssfn_render+0x10ba>
100023be:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
100023c5:	b3 fe                	mov    bl,0xfe
100023c7:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
100023cb:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
100023cf:	e9 9f f5 ff ff       	jmp    10001973 <ssfn_render+0x668>
100023d4:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100023da:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023dd:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023e0:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023e3:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023e9:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023ed:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023f1:	89 f0                	mov    eax,esi
100023f3:	89 d9                	mov    ecx,ebx
100023f5:	43                   	inc    ebx
100023f6:	39 de                	cmp    esi,ebx
100023f8:	7e 08                	jle    10002402 <ssfn_render+0x10f7>
100023fa:	48                   	dec    eax
100023fb:	29 c8                	sub    eax,ecx
100023fd:	88 42 07             	mov    BYTE PTR [edx+0x7],al
10002400:	eb 04                	jmp    10002406 <ssfn_render+0x10fb>
10002402:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
10002406:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
1000240e:	0f 84 c9 0c 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002414:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
1000241a:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10002420:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002424:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
10002427:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000242b:	0f ba e0 0c          	bt     eax,0xc
1000242f:	72 22                	jb     10002453 <ssfn_render+0x1148>
10002431:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002434:	83 e0 0f             	and    eax,0xf
10002437:	3c 03                	cmp    al,0x3
10002439:	74 18                	je     10002453 <ssfn_render+0x1148>
1000243b:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
1000243f:	84 c9                	test   cl,cl
10002441:	74 10                	je     10002453 <ssfn_render+0x1148>
10002443:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
10002447:	0f af d7             	imul   edx,edi
1000244a:	89 d0                	mov    eax,edx
1000244c:	99                   	cdq    
1000244d:	f7 f9                	idiv   ecx
1000244f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002453:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002457:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
1000245d:	7d 06                	jge    10002465 <ssfn_render+0x115a>
1000245f:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002465:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
1000246b:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
1000246f:	0f b7 13             	movzx  edx,WORD PTR [ebx]
10002472:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002477:	89 d0                	mov    eax,edx
10002479:	99                   	cdq    
1000247a:	f7 f9                	idiv   ecx
1000247c:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002480:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002484:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
10002487:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000248b:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
1000248f:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002493:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
10002498:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
1000249c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024a1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024a5:	99                   	cdq    
100024a6:	f7 f9                	idiv   ecx
100024a8:	31 d2                	xor    edx,edx
100024aa:	83 ff 10             	cmp    edi,0x10
100024ad:	0f 9f c2             	setg   dl
100024b0:	42                   	inc    edx
100024b1:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
100024b5:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
100024b9:	7d 08                	jge    100024c3 <ssfn_render+0x11b8>
100024bb:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100024bf:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100024c3:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
100024c7:	39 c2                	cmp    edx,eax
100024c9:	7d 04                	jge    100024cf <ssfn_render+0x11c4>
100024cb:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024cf:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
100024d4:	74 4c                	je     10002522 <ssfn_render+0x1217>
100024d6:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100024da:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024df:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024e3:	99                   	cdq    
100024e4:	f7 f9                	idiv   ecx
100024e6:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024ea:	81 e2 00 08 00 00    	and    edx,0x800
100024f0:	74 04                	je     100024f6 <ssfn_render+0x11eb>
100024f2:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024f6:	01 d0                	add    eax,edx
100024f8:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024fe:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002502:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002506:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
1000250a:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000250f:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002513:	99                   	cdq    
10002514:	f7 f9                	idiv   ecx
10002516:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000251a:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002520:	eb 22                	jmp    10002544 <ssfn_render+0x1239>
10002522:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002526:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002530:	d1 f8                	sar    eax,1
10002532:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
1000253a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000253e:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002544:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000254b:	8b 18                	mov    ebx,DWORD PTR [eax]
1000254d:	85 db                	test   ebx,ebx
1000254f:	0f 84 2e 09 00 00    	je     10002e83 <ssfn_render+0x1b78>
10002555:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
10002559:	89 d1                	mov    ecx,edx
1000255b:	89 d0                	mov    eax,edx
1000255d:	66 c1 f9 0b          	sar    cx,0xb
10002561:	c1 f8 1f             	sar    eax,0x1f
10002564:	31 c2                	xor    edx,eax
10002566:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
1000256a:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
1000256e:	88 c8                	mov    al,cl
10002570:	83 e0 10             	and    eax,0x10
10002573:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
10002577:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000257b:	83 c0 40             	add    eax,0x40
1000257e:	c1 f8 06             	sar    eax,0x6
10002581:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
10002588:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000258c:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10002590:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002594:	7d 08                	jge    1000259e <ssfn_render+0x1293>
10002596:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000259a:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
1000259e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100025a1:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025a9:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025ad:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
100025b5:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
100025b9:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100025be:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100025c2:	99                   	cdq    
100025c3:	f7 f9                	idiv   ecx
100025c5:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100025c9:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025d0:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025d3:	0f b6 f4             	movzx  esi,ah
100025d6:	89 c2                	mov    edx,eax
100025d8:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025dc:	c1 ea 10             	shr    edx,0x10
100025df:	0f b6 fa             	movzx  edi,dl
100025e2:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025e6:	0f b6 f8             	movzx  edi,al
100025e9:	c1 e8 18             	shr    eax,0x18
100025ec:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025f0:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025f4:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025fb:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100025fe:	0f b6 fc             	movzx  edi,ah
10002601:	89 c2                	mov    edx,eax
10002603:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000260a:	c1 ea 10             	shr    edx,0x10
1000260d:	0f b6 c0             	movzx  eax,al
10002610:	0f b6 f2             	movzx  esi,dl
10002613:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
1000261a:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002621:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002625:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000262c:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002633:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002637:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
1000263b:	0f af c2             	imul   eax,edx
1000263e:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002642:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002646:	8d 04 90             	lea    eax,[eax+edx*4]
10002649:	01 d8                	add    eax,ebx
1000264b:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
10002652:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10002656:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
1000265d:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002662:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
10002669:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000266d:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
10002671:	0f 8d e2 04 00 00    	jge    10002b59 <ssfn_render+0x184e>
10002677:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000267e:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002685:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002689:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
1000268d:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10002691:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002695:	39 d0                	cmp    eax,edx
10002697:	0f 8d bc 04 00 00    	jge    10002b59 <ssfn_render+0x184e>
1000269d:	85 c0                	test   eax,eax
1000269f:	0f 88 94 04 00 00    	js     10002b39 <ssfn_render+0x182e>
100026a5:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026ab:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026af:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100026b3:	c1 e1 08             	shl    ecx,0x8
100026b6:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100026be:	89 c8                	mov    eax,ecx
100026c0:	0f af c3             	imul   eax,ebx
100026c3:	99                   	cdq    
100026c4:	f7 fe                	idiv   esi
100026c6:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100026cd:	c1 f8 08             	sar    eax,0x8
100026d0:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
100026d7:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026dd:	0f af c3             	imul   eax,ebx
100026e0:	99                   	cdq    
100026e1:	f7 fe                	idiv   esi
100026e3:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026e7:	c1 f8 08             	sar    eax,0x8
100026ea:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026f1:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026f5:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100026fc:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
10002703:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000270a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
1000270e:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002712:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002716:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000271a:	0f 8d 19 04 00 00    	jge    10002b39 <ssfn_render+0x182e>
10002720:	85 c0                	test   eax,eax
10002722:	0f 88 ff 03 00 00    	js     10002b27 <ssfn_render+0x181c>
10002728:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000272f:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002733:	75 42                	jne    10002777 <ssfn_render+0x146c>
10002735:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002739:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002740:	b9 10 00 00 00       	mov    ecx,0x10
10002745:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002748:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
1000274f:	89 c2                	mov    edx,eax
10002751:	0f b6 fc             	movzx  edi,ah
10002754:	d3 ea                	shr    edx,cl
10002756:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
1000275d:	0f b6 f2             	movzx  esi,dl
10002760:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002764:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000276b:	d3 e8                	shr    eax,cl
1000276d:	0f b6 c0             	movzx  eax,al
10002770:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002777:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000277d:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10002781:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002784:	c1 e1 08             	shl    ecx,0x8
10002787:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
1000278b:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10002793:	89 c8                	mov    eax,ecx
10002795:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
1000279d:	0f af c3             	imul   eax,ebx
100027a0:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027a8:	99                   	cdq    
100027a9:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
100027b1:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027b5:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100027bd:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
100027c4:	c1 f8 08             	sar    eax,0x8
100027c7:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100027ce:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100027d4:	0f af c3             	imul   eax,ebx
100027d7:	99                   	cdq    
100027d8:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027dc:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027e0:	c1 f8 08             	sar    eax,0x8
100027e3:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027ea:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027f1:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027f5:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100027f9:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100027fd:	0f 8d 3b 02 00 00    	jge    10002a3e <ssfn_render+0x1733>
10002803:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10002807:	c1 fa 08             	sar    edx,0x8
1000280a:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
10002811:	75 25                	jne    10002838 <ssfn_render+0x152d>
10002813:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002818:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
1000281f:	b8 00 01 00 00       	mov    eax,0x100
10002824:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
1000282c:	29 c8                	sub    eax,ecx
1000282e:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10002832:	39 c7                	cmp    edi,eax
10002834:	7e 1c                	jle    10002852 <ssfn_render+0x1547>
10002836:	eb 16                	jmp    1000284e <ssfn_render+0x1543>
10002838:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
10002840:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
10002847:	75 09                	jne    10002852 <ssfn_render+0x1547>
10002849:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
1000284e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002852:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10002856:	0f b7 00             	movzx  eax,WORD PTR [eax]
10002859:	0f af c2             	imul   eax,edx
1000285c:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
10002863:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
10002868:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
1000286d:	c1 f8 08             	sar    eax,0x8
10002870:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
10002877:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
1000287e:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002882:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
10002886:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
1000288a:	0f 8d a1 01 00 00    	jge    10002a31 <ssfn_render+0x1726>
10002890:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002894:	c1 f8 08             	sar    eax,0x8
10002897:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
1000289e:	75 3b                	jne    100028db <ssfn_render+0x15d0>
100028a0:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028a5:	ba 00 01 00 00       	mov    edx,0x100
100028aa:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
100028b2:	29 ca                	sub    edx,ecx
100028b4:	89 f1                	mov    ecx,esi
100028b6:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
100028bd:	39 d1                	cmp    ecx,edx
100028bf:	7c 0e                	jl     100028cf <ssfn_render+0x15c4>
100028c1:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028c5:	81 fa 00 01 00 00    	cmp    edx,0x100
100028cb:	74 22                	je     100028ef <ssfn_render+0x15e4>
100028cd:	89 d1                	mov    ecx,edx
100028cf:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
100028d4:	89 cf                	mov    edi,ecx
100028d6:	c1 ff 08             	sar    edi,0x8
100028d9:	eb 14                	jmp    100028ef <ssfn_render+0x15e4>
100028db:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028e2:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028e9:	74 04                	je     100028ef <ssfn_render+0x15e4>
100028eb:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028ef:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028f3:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028f7:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100028fe:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
10002903:	81 fa ff 00 00 00    	cmp    edx,0xff
10002909:	75 37                	jne    10002942 <ssfn_render+0x1637>
1000290b:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
10002912:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
1000291a:	0f af c7             	imul   eax,edi
1000291d:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002921:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002928:	0f af c7             	imul   eax,edi
1000292b:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
1000292f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10002936:	0f af c7             	imul   eax,edi
10002939:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
1000293d:	e9 e2 00 00 00       	jmp    10002a24 <ssfn_render+0x1719>
10002942:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002948:	74 2d                	je     10002977 <ssfn_render+0x166c>
1000294a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000294d:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002950:	85 c9                	test   ecx,ecx
10002952:	74 23                	je     10002977 <ssfn_render+0x166c>
10002954:	01 c8                	add    eax,ecx
10002956:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
10002959:	89 d9                	mov    ecx,ebx
1000295b:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
10002962:	c1 e9 10             	shr    ecx,0x10
10002965:	0f b6 f7             	movzx  esi,bh
10002968:	0f b6 c1             	movzx  eax,cl
1000296b:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000296f:	0f b6 c3             	movzx  eax,bl
10002972:	c1 eb 18             	shr    ebx,0x18
10002975:	eb 14                	jmp    1000298b <ssfn_render+0x1680>
10002977:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000297b:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000297f:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10002983:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
10002987:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000298b:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002991:	75 25                	jne    100029b8 <ssfn_render+0x16ad>
10002993:	0f af c7             	imul   eax,edi
10002996:	0f af f7             	imul   esi,edi
10002999:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
1000299d:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029a1:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029a7:	0f af cf             	imul   ecx,edi
100029aa:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029ae:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
100029b2:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
100029b6:	eb 6c                	jmp    10002a24 <ssfn_render+0x1719>
100029b8:	0f af f3             	imul   esi,ebx
100029bb:	0f af c3             	imul   eax,ebx
100029be:	b9 ff 00 00 00       	mov    ecx,0xff
100029c3:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
100029ca:	29 d9                	sub    ecx,ebx
100029cc:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100029d0:	0f af d1             	imul   edx,ecx
100029d3:	b9 ff 00 00 00       	mov    ecx,0xff
100029d8:	01 d0                	add    eax,edx
100029da:	0f af c7             	imul   eax,edi
100029dd:	99                   	cdq    
100029de:	f7 f9                	idiv   ecx
100029e0:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029e4:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029e8:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029f0:	01 f0                	add    eax,esi
100029f2:	89 ce                	mov    esi,ecx
100029f4:	0f af c7             	imul   eax,edi
100029f7:	99                   	cdq    
100029f8:	f7 f9                	idiv   ecx
100029fa:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029fe:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
10002a02:	0f af cb             	imul   ecx,ebx
10002a05:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a09:	0f af df             	imul   ebx,edi
10002a0c:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a14:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a18:	01 c8                	add    eax,ecx
10002a1a:	0f af c7             	imul   eax,edi
10002a1d:	99                   	cdq    
10002a1e:	f7 fe                	idiv   esi
10002a20:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a24:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a2c:	e9 51 fe ff ff       	jmp    10002882 <ssfn_render+0x1577>
10002a31:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a39:	e9 b7 fd ff ff       	jmp    100027f5 <ssfn_render+0x14ea>
10002a3e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a43:	74 30                	je     10002a75 <ssfn_render+0x176a>
10002a45:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a49:	31 d2                	xor    edx,edx
10002a4b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a4f:	31 d2                	xor    edx,edx
10002a51:	89 c1                	mov    ecx,eax
10002a53:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a57:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a5b:	31 d2                	xor    edx,edx
10002a5d:	89 c6                	mov    esi,eax
10002a5f:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a63:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a67:	31 d2                	xor    edx,edx
10002a69:	89 c3                	mov    ebx,eax
10002a6b:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a6f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a73:	eb 1c                	jmp    10002a91 <ssfn_render+0x1786>
10002a75:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a79:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a7d:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a81:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a85:	c1 e9 08             	shr    ecx,0x8
10002a88:	c1 ee 08             	shr    esi,0x8
10002a8b:	c1 eb 08             	shr    ebx,0x8
10002a8e:	c1 e8 08             	shr    eax,0x8
10002a91:	83 f8 0f             	cmp    eax,0xf
10002a94:	0f 86 8d 00 00 00    	jbe    10002b27 <ssfn_render+0x181c>
10002a9a:	89 ca                	mov    edx,ecx
10002a9c:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002aa2:	76 05                	jbe    10002aa9 <ssfn_render+0x179e>
10002aa4:	ba ff 00 00 00       	mov    edx,0xff
10002aa9:	b9 10 00 00 00       	mov    ecx,0x10
10002aae:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002ab5:	d3 e2                	shl    edx,cl
10002ab7:	3d ff 00 00 00       	cmp    eax,0xff
10002abc:	89 d1                	mov    ecx,edx
10002abe:	76 05                	jbe    10002ac5 <ssfn_render+0x17ba>
10002ac0:	b8 ff 00 00 00       	mov    eax,0xff
10002ac5:	c1 e0 18             	shl    eax,0x18
10002ac8:	09 c8                	or     eax,ecx
10002aca:	81 fe ff 00 00 00    	cmp    esi,0xff
10002ad0:	76 05                	jbe    10002ad7 <ssfn_render+0x17cc>
10002ad2:	be ff 00 00 00       	mov    esi,0xff
10002ad7:	c1 e6 08             	shl    esi,0x8
10002ada:	09 f0                	or     eax,esi
10002adc:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002ae2:	76 05                	jbe    10002ae9 <ssfn_render+0x17de>
10002ae4:	bb ff 00 00 00       	mov    ebx,0xff
10002ae9:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002aed:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002af1:	d3 e3                	shl    ebx,cl
10002af3:	09 c3                	or     ebx,eax
10002af5:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002afc:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002aff:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002b03:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b07:	75 1e                	jne    10002b27 <ssfn_render+0x181c>
10002b09:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b10:	7e 07                	jle    10002b19 <ssfn_render+0x180e>
10002b12:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b19:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b1d:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b21:	7d 04                	jge    10002b27 <ssfn_render+0x181c>
10002b23:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b27:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b2b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b2f:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b33:	0f 85 ca fb ff ff    	jne    10002703 <ssfn_render+0x13f8>
10002b39:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b40:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b44:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b48:	25 fc ff 00 00       	and    eax,0xfffc
10002b4d:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b54:	e9 10 fb ff ff       	jmp    10002669 <ssfn_render+0x135e>
10002b59:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b60:	0f 84 90 01 00 00    	je     10002cf6 <ssfn_render+0x19eb>
10002b66:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b6e:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b75:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b79:	40                   	inc    eax
10002b7a:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b7e:	29 c7                	sub    edi,eax
10002b80:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b84:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b88:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b8c:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b90:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b94:	7e 09                	jle    10002b9f <ssfn_render+0x1894>
10002b96:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002b9a:	40                   	inc    eax
10002b9b:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b9f:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002ba6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002bad:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002bb1:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bb5:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bb9:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bbd:	0f af c2             	imul   eax,edx
10002bc0:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002bc4:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002bc8:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002bcc:	03 07                	add    eax,DWORD PTR [edi]
10002bce:	89 c7                	mov    edi,eax
10002bd0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002bd4:	c1 e0 18             	shl    eax,0x18
10002bd7:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002bdb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002bdf:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002be3:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002be8:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002bec:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002bf0:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bf4:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002bf8:	0f 8e f8 00 00 00    	jle    10002cf6 <ssfn_render+0x19eb>
10002bfe:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c05:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c0c:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c10:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c14:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c18:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c1c:	39 d0                	cmp    eax,edx
10002c1e:	0f 8d d2 00 00 00    	jge    10002cf6 <ssfn_render+0x19eb>
10002c24:	31 db                	xor    ebx,ebx
10002c26:	85 c0                	test   eax,eax
10002c28:	79 23                	jns    10002c4d <ssfn_render+0x1942>
10002c2a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c31:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c35:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c39:	25 fc ff 00 00       	and    eax,0xfffc
10002c3e:	01 c7                	add    edi,eax
10002c40:	eb aa                	jmp    10002bec <ssfn_render+0x18e1>
10002c42:	85 c0                	test   eax,eax
10002c44:	79 20                	jns    10002c66 <ssfn_render+0x195b>
10002c46:	43                   	inc    ebx
10002c47:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c4b:	7c dd                	jl     10002c2a <ssfn_render+0x191f>
10002c4d:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c54:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c58:	01 d8                	add    eax,ebx
10002c5a:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c5e:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c62:	7c de                	jl     10002c42 <ssfn_render+0x1937>
10002c64:	eb c4                	jmp    10002c2a <ssfn_render+0x191f>
10002c66:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c6a:	7e 06                	jle    10002c72 <ssfn_render+0x1967>
10002c6c:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c70:	7f d4                	jg     10002c46 <ssfn_render+0x193b>
10002c72:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c75:	b8 10 00 00 00       	mov    eax,0x10
10002c7a:	0f b6 f6             	movzx  esi,dh
10002c7d:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c81:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c85:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c89:	89 d0                	mov    eax,edx
10002c8b:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c8f:	d3 e8                	shr    eax,cl
10002c91:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c95:	0f b6 c0             	movzx  eax,al
10002c98:	d3 ea                	shr    edx,cl
10002c9a:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002c9e:	0f b6 f2             	movzx  esi,dl
10002ca1:	29 c1                	sub    ecx,eax
10002ca3:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002ca7:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002cac:	29 f2                	sub    edx,esi
10002cae:	c1 f9 08             	sar    ecx,0x8
10002cb1:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cb6:	01 c8                	add    eax,ecx
10002cb8:	c1 fa 08             	sar    edx,0x8
10002cbb:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cbf:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002cc3:	d3 e0                	shl    eax,cl
10002cc5:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cc9:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002ccd:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002cd1:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cd5:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cda:	d3 e6                	shl    esi,cl
10002cdc:	c1 fa 08             	sar    edx,0x8
10002cdf:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002ce3:	c1 e2 08             	shl    edx,0x8
10002ce6:	09 d0                	or     eax,edx
10002ce8:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002cec:	09 c6                	or     esi,eax
10002cee:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002cf1:	e9 50 ff ff ff       	jmp    10002c46 <ssfn_render+0x193b>
10002cf6:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002cfd:	0f 84 80 01 00 00    	je     10002e83 <ssfn_render+0x1b78>
10002d03:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d07:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d0b:	d1 fa                	sar    edx,1
10002d0d:	40                   	inc    eax
10002d0e:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d12:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d16:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d1a:	7e 09                	jle    10002d25 <ssfn_render+0x1a1a>
10002d1c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d20:	40                   	inc    eax
10002d21:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d25:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d2c:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d33:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d37:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d3b:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d3f:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d43:	01 d0                	add    eax,edx
10002d45:	0f af c1             	imul   eax,ecx
10002d48:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d4c:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d50:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d54:	03 03                	add    eax,DWORD PTR [ebx]
10002d56:	89 c7                	mov    edi,eax
10002d58:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d5c:	c1 e0 18             	shl    eax,0x18
10002d5f:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d63:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d6b:	01 d0                	add    eax,edx
10002d6d:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d71:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d76:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d7a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d7e:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d82:	0f 8e fb 00 00 00    	jle    10002e83 <ssfn_render+0x1b78>
10002d88:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d8f:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d93:	01 d8                	add    eax,ebx
10002d95:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d9c:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002da0:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002da4:	39 d0                	cmp    eax,edx
10002da6:	0f 8d d7 00 00 00    	jge    10002e83 <ssfn_render+0x1b78>
10002dac:	31 f6                	xor    esi,esi
10002dae:	85 c0                	test   eax,eax
10002db0:	0f 89 ad 00 00 00    	jns    10002e63 <ssfn_render+0x1b58>
10002db6:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002dbd:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002dc1:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002dc5:	25 fc ff 00 00       	and    eax,0xfffc
10002dca:	01 c7                	add    edi,eax
10002dcc:	eb ac                	jmp    10002d7a <ssfn_render+0x1a6f>
10002dce:	85 c0                	test   eax,eax
10002dd0:	0f 88 82 00 00 00    	js     10002e58 <ssfn_render+0x1b4d>
10002dd6:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002dd9:	b8 10 00 00 00       	mov    eax,0x10
10002dde:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002de2:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002de6:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002dea:	89 d8                	mov    eax,ebx
10002dec:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002df0:	d3 e8                	shr    eax,cl
10002df2:	0f b6 cf             	movzx  ecx,bh
10002df5:	0f b6 c0             	movzx  eax,al
10002df8:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002dfc:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e00:	d3 eb                	shr    ebx,cl
10002e02:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e06:	0f b6 db             	movzx  ebx,bl
10002e09:	29 c1                	sub    ecx,eax
10002e0b:	29 da                	sub    edx,ebx
10002e0d:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e12:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e17:	c1 f9 08             	sar    ecx,0x8
10002e1a:	c1 fa 08             	sar    edx,0x8
10002e1d:	01 c8                	add    eax,ecx
10002e1f:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e23:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e27:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e2b:	d3 e0                	shl    eax,cl
10002e2d:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e31:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e35:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e3a:	c1 fa 08             	sar    edx,0x8
10002e3d:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e41:	c1 e2 08             	shl    edx,0x8
10002e44:	09 d0                	or     eax,edx
10002e46:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e49:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e4d:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e51:	d3 e2                	shl    edx,cl
10002e53:	09 c2                	or     edx,eax
10002e55:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e58:	46                   	inc    esi
10002e59:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e5d:	0f 8c 53 ff ff ff    	jl     10002db6 <ssfn_render+0x1aab>
10002e63:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e6a:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e6e:	01 f0                	add    eax,esi
10002e70:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e74:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e78:	0f 8c 50 ff ff ff    	jl     10002dce <ssfn_render+0x1ac3>
10002e7e:	e9 33 ff ff ff       	jmp    10002db6 <ssfn_render+0x1aab>
10002e83:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e8a:	74 04                	je     10002e90 <ssfn_render+0x1b85>
10002e8c:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e90:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e94:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002e98:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002e9e:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ea5:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002ea9:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002eb0:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002eb3:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002eb7:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002ebd:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002ec1:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002ec6:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002eca:	99                   	cdq    
10002ecb:	f7 f9                	idiv   ecx
10002ecd:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002ed1:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002ed7:	25 80 00 00 00       	and    eax,0x80
10002edc:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002ee0:	0f 85 f7 01 00 00    	jne    100030dd <ssfn_render+0x1dd2>
10002ee6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ee9:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002eed:	0f 84 ea 01 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002ef3:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002efa:	83 ec 0c             	sub    esp,0xc
10002efd:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f04:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f0b:	51                   	push   ecx
10002f0c:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f13:	e8 53 d9 ff ff       	call   1000086b <_ssfn_c>
10002f18:	83 c4 10             	add    esp,0x10
10002f1b:	85 c0                	test   eax,eax
10002f1d:	0f 84 ba 01 00 00    	je     100030dd <ssfn_render+0x1dd2>
10002f23:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f2b:	0f 86 ac 01 00 00    	jbe    100030dd <ssfn_render+0x1dd2>
10002f31:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f37:	8d 48 06             	lea    ecx,[eax+0x6]
10002f3a:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f40:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f44:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f48:	0f 8e 8f 01 00 00    	jle    100030dd <ssfn_render+0x1dd2>
10002f4e:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f50:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f54:	8a 18                	mov    bl,BYTE PTR [eax]
10002f56:	83 e3 40             	and    ebx,0x40
10002f59:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f5e:	75 14                	jne    10002f74 <ssfn_render+0x1c69>
10002f60:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f64:	75 0e                	jne    10002f74 <ssfn_render+0x1c69>
10002f66:	80 fb 01             	cmp    bl,0x1
10002f69:	19 c0                	sbb    eax,eax
10002f6b:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f6f:	e9 60 01 00 00       	jmp    100030d4 <ssfn_render+0x1dc9>
10002f74:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f78:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f7c:	c1 e6 10             	shl    esi,0x10
10002f7f:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f83:	84 db                	test   bl,bl
10002f85:	74 08                	je     10002f8f <ssfn_render+0x1c84>
10002f87:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f8a:	83 c1 06             	add    ecx,0x6
10002f8d:	eb 0c                	jmp    10002f9b <ssfn_render+0x1c90>
10002f8f:	c1 e2 08             	shl    edx,0x8
10002f92:	83 c1 05             	add    ecx,0x5
10002f95:	89 d0                	mov    eax,edx
10002f97:	09 f0                	or     eax,esi
10002f99:	09 c7                	or     edi,eax
10002f9b:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f9e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002fa2:	01 f8                	add    eax,edi
10002fa4:	8a 10                	mov    dl,BYTE PTR [eax]
10002fa6:	88 d3                	mov    bl,dl
10002fa8:	83 e3 e0             	and    ebx,0xffffffe0
10002fab:	80 fb c0             	cmp    bl,0xc0
10002fae:	0f 85 20 01 00 00    	jne    100030d4 <ssfn_render+0x1dc9>
10002fb4:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002fb8:	c1 e2 08             	shl    edx,0x8
10002fbb:	83 c0 02             	add    eax,0x2
10002fbe:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002fc4:	09 da                	or     edx,ebx
10002fc6:	8d 72 01             	lea    esi,[edx+0x1]
10002fc9:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002fcd:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002fd4:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002fd8:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fdd:	0f 84 f1 00 00 00    	je     100030d4 <ssfn_render+0x1dc9>
10002fe3:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fe7:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002fea:	c1 e3 10             	shl    ebx,0x10
10002fed:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002ff3:	09 d3                	or     ebx,edx
10002ff5:	39 de                	cmp    esi,ebx
10002ff7:	0f 82 cf 00 00 00    	jb     100030cc <ssfn_render+0x1dc1>
10002ffd:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10003000:	89 d7                	mov    edi,edx
10003002:	c1 e7 10             	shl    edi,0x10
10003005:	81 e7 00 00 0f 00    	and    edi,0xf0000
1000300b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000300f:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10003013:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10003017:	39 fe                	cmp    esi,edi
10003019:	0f 87 ad 00 00 00    	ja     100030cc <ssfn_render+0x1dc1>
1000301f:	29 de                	sub    esi,ebx
10003021:	c0 ea 04             	shr    dl,0x4
10003024:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
1000302b:	0f b6 d2             	movzx  edx,dl
1000302e:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10003032:	89 d3                	mov    ebx,edx
10003034:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003038:	c1 e3 10             	shl    ebx,0x10
1000303b:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
1000303e:	09 da                	or     edx,ebx
10003040:	c0 e8 04             	shr    al,0x4
10003043:	c1 e0 18             	shl    eax,0x18
10003046:	09 c2                	or     edx,eax
10003048:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000304c:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
1000304f:	01 c2                	add    edx,eax
10003051:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003054:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10003058:	39 d7                	cmp    edi,edx
1000305a:	76 78                	jbe    100030d4 <ssfn_render+0x1dc9>
1000305c:	8a 1a                	mov    bl,BYTE PTR [edx]
1000305e:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10003065:	89 de                	mov    esi,ebx
10003067:	83 e6 7f             	and    esi,0x7f
1000306a:	39 c6                	cmp    esi,eax
1000306c:	73 1d                	jae    1000308b <ssfn_render+0x1d80>
1000306e:	48                   	dec    eax
1000306f:	bb 02 00 00 00       	mov    ebx,0x2
10003074:	29 f0                	sub    eax,esi
10003076:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
1000307d:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10003080:	84 c0                	test   al,al
10003082:	78 03                	js     10003087 <ssfn_render+0x1d7c>
10003084:	8d 58 02             	lea    ebx,[eax+0x2]
10003087:	01 da                	add    edx,ebx
10003089:	eb cd                	jmp    10003058 <ssfn_render+0x1d4d>
1000308b:	be 01 00 00 00       	mov    esi,0x1
10003090:	84 db                	test   bl,bl
10003092:	78 03                	js     10003097 <ssfn_render+0x1d8c>
10003094:	8d 70 01             	lea    esi,[eax+0x1]
10003097:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
1000309b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000309f:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030a4:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030a8:	99                   	cdq    
100030a9:	f7 fb                	idiv   ebx
100030ab:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
100030b0:	74 0d                	je     100030bf <ssfn_render+0x1db4>
100030b2:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100030b9:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
100030bd:	eb 15                	jmp    100030d4 <ssfn_render+0x1dc9>
100030bf:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
100030c6:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
100030ca:	eb 08                	jmp    100030d4 <ssfn_render+0x1dc9>
100030cc:	83 c0 08             	add    eax,0x8
100030cf:	e9 00 ff ff ff       	jmp    10002fd4 <ssfn_render+0x1cc9>
100030d4:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100030d8:	e9 5d fe ff ff       	jmp    10002f3a <ssfn_render+0x1c2f>
100030dd:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030e4:	eb 73                	jmp    10003159 <ssfn_render+0x1e4e>
100030e6:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030f1:	e9 50 e4 ff ff       	jmp    10001546 <ssfn_render+0x23b>
100030f6:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030fd:	57                   	push   edi
100030fe:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003105:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000310c:	e8 5a d7 ff ff       	call   1000086b <_ssfn_c>
10003111:	5f                   	pop    edi
10003112:	85 c0                	test   eax,eax
10003114:	0f 84 25 e4 ff ff    	je     1000153f <ssfn_render+0x234>
1000311a:	e9 a2 e4 ff ff       	jmp    100015c1 <ssfn_render+0x2b6>
1000311f:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003122:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10003126:	75 0c                	jne    10003134 <ssfn_render+0x1e29>
10003128:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000312f:	e9 3b e4 ff ff       	jmp    1000156f <ssfn_render+0x264>
10003134:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
1000313b:	57                   	push   edi
1000313c:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003143:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
1000314a:	e8 1c d7 ff ff       	call   1000086b <_ssfn_c>
1000314f:	59                   	pop    ecx
10003150:	85 c0                	test   eax,eax
10003152:	74 d4                	je     10003128 <ssfn_render+0x1e1d>
10003154:	e9 68 e4 ff ff       	jmp    100015c1 <ssfn_render+0x2b6>
10003159:	81 c4 dc 05 01 00    	add    esp,0x105dc
1000315f:	89 c8                	mov    eax,ecx
10003161:	5b                   	pop    ebx
10003162:	5e                   	pop    esi
10003163:	5f                   	pop    edi
10003164:	5d                   	pop    ebp
10003165:	c3                   	ret    

10003166 <ssfn_bbox>:
10003166:	55                   	push   ebp
10003167:	57                   	push   edi
10003168:	56                   	push   esi
10003169:	53                   	push   ebx
1000316a:	83 ec 3c             	sub    esp,0x3c
1000316d:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
10003172:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10003176:	0f 94 c0             	sete   al
10003179:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
1000317e:	0f 94 c2             	sete   dl
10003181:	09 d0                	or     eax,edx
10003183:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
10003188:	0f 94 c2             	sete   dl
1000318b:	09 d0                	or     eax,edx
1000318d:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
10003192:	0f 94 c2             	sete   dl
10003195:	09 d0                	or     eax,edx
10003197:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
1000319c:	0f 94 c2             	sete   dl
1000319f:	08 d0                	or     al,dl
100031a1:	0f 85 7c 01 00 00    	jne    10003323 <ssfn_bbox+0x1bd>
100031a7:	85 db                	test   ebx,ebx
100031a9:	0f 84 74 01 00 00    	je     10003323 <ssfn_bbox+0x1bd>
100031af:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031b3:	31 f6                	xor    esi,esi
100031b5:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031bb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031bf:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c5:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100031c9:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031cf:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100031d3:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031d9:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031dd:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031e0:	0f 84 42 01 00 00    	je     10003328 <ssfn_bbox+0x1c2>
100031e6:	8d 54 24 18          	lea    edx,[esp+0x18]
100031ea:	b9 06 00 00 00       	mov    ecx,0x6
100031ef:	89 d7                	mov    edi,edx
100031f1:	89 f0                	mov    eax,esi
100031f3:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100031fd:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100031ff:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10003207:	31 ff                	xor    edi,edi
10003209:	bd 01 00 00 00       	mov    ebp,0x1
1000320e:	50                   	push   eax
1000320f:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003213:	8d 44 24 20          	lea    eax,[esp+0x20]
10003217:	50                   	push   eax
10003218:	53                   	push   ebx
10003219:	e8 fc ff ff ff       	call   1000321a <ssfn_bbox+0xb4>	1000321a: R_386_PC32	ssfn_render
1000321e:	83 c4 10             	add    esp,0x10
10003221:	89 c6                	mov    esi,eax
10003223:	85 c0                	test   eax,eax
10003225:	74 6f                	je     10003296 <ssfn_bbox+0x130>
10003227:	0f 88 fb 00 00 00    	js     10003328 <ssfn_bbox+0x1c2>
1000322d:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003233:	85 c0                	test   eax,eax
10003235:	0f 84 ed 00 00 00    	je     10003328 <ssfn_bbox+0x1c2>
1000323b:	85 ed                	test   ebp,ebp
1000323d:	74 0b                	je     1000324a <ssfn_bbox+0xe4>
1000323f:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003245:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
1000324a:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000324e:	74 12                	je     10003262 <ssfn_bbox+0xfc>
10003250:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
10003256:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000325a:	7d 2f                	jge    1000328b <ssfn_bbox+0x125>
1000325c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003260:	eb 29                	jmp    1000328b <ssfn_bbox+0x125>
10003262:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003265:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
1000326a:	39 cd                	cmp    ebp,ecx
1000326c:	7d 05                	jge    10003273 <ssfn_bbox+0x10d>
1000326e:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
10003273:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
10003277:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
1000327c:	84 d2                	test   dl,dl
1000327e:	75 04                	jne    10003284 <ssfn_bbox+0x11e>
10003280:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003284:	01 ca                	add    edx,ecx
10003286:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
1000328b:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000328f:	31 ed                	xor    ebp,ebp
10003291:	e9 78 ff ff ff       	jmp    1000320e <ssfn_bbox+0xa8>
10003296:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
1000329d:	74 23                	je     100032c2 <ssfn_bbox+0x15c>
1000329f:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100032a2:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032a6:	75 1a                	jne    100032c2 <ssfn_bbox+0x15c>
100032a8:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032ae:	b9 04 00 00 00       	mov    ecx,0x4
100032b3:	99                   	cdq    
100032b4:	f7 f9                	idiv   ecx
100032b6:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
100032bb:	29 f8                	sub    eax,edi
100032bd:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
100032c2:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100032c8:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100032cc:	74 29                	je     100032f7 <ssfn_bbox+0x191>
100032ce:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100032d3:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100032d7:	89 01                	mov    DWORD PTR [ecx],eax
100032d9:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032dd:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032e3:	89 01                	mov    DWORD PTR [ecx],eax
100032e5:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032e9:	89 38                	mov    DWORD PTR [eax],edi
100032eb:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032ef:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032f3:	89 38                	mov    DWORD PTR [eax],edi
100032f5:	eb 31                	jmp    10003328 <ssfn_bbox+0x1c2>
100032f7:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100032fc:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003300:	89 07                	mov    DWORD PTR [edi],eax
10003302:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003307:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
1000330b:	89 07                	mov    DWORD PTR [edi],eax
1000330d:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003311:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003317:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000331b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003321:	eb 05                	jmp    10003328 <ssfn_bbox+0x1c2>
10003323:	be fc ff ff ff       	mov    esi,0xfffffffc
10003328:	83 c4 3c             	add    esp,0x3c
1000332b:	89 f0                	mov    eax,esi
1000332d:	5b                   	pop    ebx
1000332e:	5e                   	pop    esi
1000332f:	5f                   	pop    edi
10003330:	5d                   	pop    ebp
10003331:	c3                   	ret    

10003332 <ssfn_text>:
10003332:	55                   	push   ebp
10003333:	57                   	push   edi
10003334:	56                   	push   esi
10003335:	53                   	push   ebx
10003336:	83 ec 1c             	sub    esp,0x1c
10003339:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000333d:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
10003341:	85 f6                	test   esi,esi
10003343:	0f 84 b2 00 00 00    	je     100033fb <ssfn_text+0xc9>
10003349:	85 ed                	test   ebp,ebp
1000334b:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
10003350:	0f 84 a5 00 00 00    	je     100033fb <ssfn_text+0xc9>
10003356:	83 ec 0c             	sub    esp,0xc
10003359:	6a 18                	push   0x18
1000335b:	e8 fc ff ff ff       	call   1000335c <ssfn_text+0x2a>	1000335c: R_386_PC32	malloc
10003360:	83 c4 10             	add    esp,0x10
10003363:	89 c3                	mov    ebx,eax
10003365:	85 c0                	test   eax,eax
10003367:	0f 84 8e 00 00 00    	je     100033fb <ssfn_text+0xc9>
1000336d:	31 c0                	xor    eax,eax
1000336f:	b9 06 00 00 00       	mov    ecx,0x6
10003374:	89 df                	mov    edi,ebx
10003376:	80 3e 00             	cmp    BYTE PTR [esi],0x0
10003379:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000337b:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000337f:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10003382:	74 79                	je     100033fd <ssfn_text+0xcb>
10003384:	8d 43 0c             	lea    eax,[ebx+0xc]
10003387:	52                   	push   edx
10003388:	52                   	push   edx
10003389:	50                   	push   eax
1000338a:	8d 43 0a             	lea    eax,[ebx+0xa]
1000338d:	50                   	push   eax
1000338e:	8d 43 06             	lea    eax,[ebx+0x6]
10003391:	50                   	push   eax
10003392:	8d 43 04             	lea    eax,[ebx+0x4]
10003395:	50                   	push   eax
10003396:	56                   	push   esi
10003397:	55                   	push   ebp
10003398:	e8 fc ff ff ff       	call   10003399 <ssfn_text+0x67>	10003399: R_386_PC32	ssfn_bbox
1000339d:	83 c4 20             	add    esp,0x20
100033a0:	85 c0                	test   eax,eax
100033a2:	75 59                	jne    100033fd <ssfn_text+0xcb>
100033a4:	83 ec 0c             	sub    esp,0xc
100033a7:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033ab:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033af:	0f af c8             	imul   ecx,eax
100033b2:	c1 e1 02             	shl    ecx,0x2
100033b5:	51                   	push   ecx
100033b6:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100033ba:	e8 fc ff ff ff       	call   100033bb <ssfn_text+0x89>	100033bb: R_386_PC32	malloc
100033bf:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033c3:	89 c7                	mov    edi,eax
100033c5:	89 03                	mov    DWORD PTR [ebx],eax
100033c7:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
100033cb:	83 c4 10             	add    esp,0x10
100033ce:	f3 aa                	rep stos BYTE PTR es:[edi],al
100033d0:	50                   	push   eax
100033d1:	56                   	push   esi
100033d2:	53                   	push   ebx
100033d3:	55                   	push   ebp
100033d4:	e8 fc ff ff ff       	call   100033d5 <ssfn_text+0xa3>	100033d5: R_386_PC32	ssfn_render
100033d9:	83 c4 10             	add    esp,0x10
100033dc:	85 c0                	test   eax,eax
100033de:	7e 04                	jle    100033e4 <ssfn_text+0xb2>
100033e0:	01 c6                	add    esi,eax
100033e2:	eb ec                	jmp    100033d0 <ssfn_text+0x9e>
100033e4:	74 17                	je     100033fd <ssfn_text+0xcb>
100033e6:	83 ec 0c             	sub    esp,0xc
100033e9:	ff 33                	push   DWORD PTR [ebx]
100033eb:	e8 fc ff ff ff       	call   100033ec <ssfn_text+0xba>	100033ec: R_386_PC32	free
100033f0:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033f3:	e8 fc ff ff ff       	call   100033f4 <ssfn_text+0xc2>	100033f4: R_386_PC32	free
100033f8:	83 c4 10             	add    esp,0x10
100033fb:	31 db                	xor    ebx,ebx
100033fd:	83 c4 1c             	add    esp,0x1c
10003400:	89 d8                	mov    eax,ebx
10003402:	5b                   	pop    ebx
10003403:	5e                   	pop    esi
10003404:	5f                   	pop    edi
10003405:	5d                   	pop    ebp
10003406:	c3                   	ret    
10003407:	90                   	nop

10003408 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003408:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000340c:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003412:	8b 10                	mov    edx,DWORD PTR [eax]
10003414:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003418:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
1000341b:	90                   	nop

1000341c <NIContext::drvDarken4(int, int, int)>:
1000341c:	55                   	push   ebp
1000341d:	57                   	push   edi
1000341e:	56                   	push   esi
1000341f:	53                   	push   ebx
10003420:	83 ec 20             	sub    esp,0x20
10003423:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10003427:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000342b:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000342f:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10003433:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003439:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000343d:	8b 10                	mov    edx,DWORD PTR [eax]
1000343f:	56                   	push   esi
10003440:	53                   	push   ebx
10003441:	50                   	push   eax
10003442:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003445:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003449:	89 c2                	mov    edx,eax
1000344b:	0f b6 ec             	movzx  ebp,ah
1000344e:	c1 ea 10             	shr    edx,0x10
10003451:	0f af e9             	imul   ebp,ecx
10003454:	0f b6 d2             	movzx  edx,dl
10003457:	0f b6 c0             	movzx  eax,al
1000345a:	0f af d1             	imul   edx,ecx
1000345d:	0f af c1             	imul   eax,ecx
10003460:	c1 ea 07             	shr    edx,0x7
10003463:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
10003469:	c1 e8 07             	shr    eax,0x7
1000346c:	8b 39                	mov    edi,DWORD PTR [ecx]
1000346e:	c1 e2 10             	shl    edx,0x10
10003471:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003475:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
10003479:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
1000347d:	c1 ed 07             	shr    ebp,0x7
10003480:	c1 e5 08             	shl    ebp,0x8
10003483:	09 ea                	or     edx,ebp
10003485:	09 c2                	or     edx,eax
10003487:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000348b:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
1000348e:	83 c4 2c             	add    esp,0x2c
10003491:	5b                   	pop    ebx
10003492:	5e                   	pop    esi
10003493:	5f                   	pop    edi
10003494:	5d                   	pop    ebp
10003495:	ff e0                	jmp    eax
10003497:	90                   	nop

10003498 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
10003498:	55                   	push   ebp
10003499:	b9 00 40 00 00       	mov    ecx,0x4000
1000349e:	57                   	push   edi
1000349f:	b0 ff                	mov    al,0xff
100034a1:	56                   	push   esi
100034a2:	53                   	push   ebx
100034a3:	83 ec 3c             	sub    esp,0x3c
100034a6:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034aa:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034ae:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
100034b1:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100034b5:	f3 aa                	rep stos BYTE PTR es:[edi],al
100034b7:	85 db                	test   ebx,ebx
100034b9:	75 10                	jne    100034cb <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
100034bb:	83 ec 0c             	sub    esp,0xc
100034be:	68 18 c8 00 10       	push   0x1000c818	100034bf: R_386_32	.text
100034c3:	e8 fc ff ff ff       	call   100034c4 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	100034c4: R_386_PC32	KePanic(char const*)
100034c8:	83 c4 10             	add    esp,0x10
100034cb:	50                   	push   eax
100034cc:	50                   	push   eax
100034cd:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d1:	50                   	push   eax
100034d2:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d6:	50                   	push   eax
100034d7:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034db:	50                   	push   eax
100034dc:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034e0:	50                   	push   eax
100034e1:	56                   	push   esi
100034e2:	68 00 00 00 00       	push   0x0	100034e3: R_386_32	ssfn_ctx
100034e7:	e8 fc ff ff ff       	call   100034e8 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034e8: R_386_PC32	ssfn_bbox
100034ec:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034ef:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034f7:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100034fb:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
10003503:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10003507:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000350c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003510:	0d 00 00 00 ff       	or     eax,0xff000000
10003515:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003519:	83 c4 1c             	add    esp,0x1c
1000351c:	56                   	push   esi
1000351d:	8d 44 24 20          	lea    eax,[esp+0x20]
10003521:	50                   	push   eax
10003522:	68 00 00 00 00       	push   0x0	10003523: R_386_32	ssfn_ctx
10003527:	e8 fc ff ff ff       	call   10003528 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003528: R_386_PC32	ssfn_render
1000352c:	83 c4 10             	add    esp,0x10
1000352f:	89 03                	mov    DWORD PTR [ebx],eax
10003531:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003535:	31 db                	xor    ebx,ebx
10003537:	89 f0                	mov    eax,esi
10003539:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
1000353d:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003541:	7e 3f                	jle    10003582 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
10003543:	31 ff                	xor    edi,edi
10003545:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000354a:	39 f8                	cmp    eax,edi
1000354c:	7e 2c                	jle    1000357a <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
1000354e:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003551:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003554:	83 f8 ff             	cmp    eax,0xffffffff
10003557:	74 1d                	je     10003576 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
10003559:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
1000355f:	25 ff ff ff 00       	and    eax,0xffffff
10003564:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003566:	50                   	push   eax
10003567:	56                   	push   esi
10003568:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000356c:	01 f8                	add    eax,edi
1000356e:	50                   	push   eax
1000356f:	52                   	push   edx
10003570:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003573:	83 c4 10             	add    esp,0x10
10003576:	43                   	inc    ebx
10003577:	47                   	inc    edi
10003578:	eb cb                	jmp    10003545 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
1000357a:	29 c3                	sub    ebx,eax
1000357c:	46                   	inc    esi
1000357d:	83 c3 40             	add    ebx,0x40
10003580:	eb b5                	jmp    10003537 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
10003582:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003587:	83 c4 3c             	add    esp,0x3c
1000358a:	5b                   	pop    ebx
1000358b:	5e                   	pop    esi
1000358c:	5f                   	pop    edi
1000358d:	5d                   	pop    ebp
1000358e:	c3                   	ret    
1000358f:	90                   	nop

10003590 <NIContext::~NIContext()>:
10003590:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003594: R_386_32	ssfn_ctx
10003598:	e9 00 db ff ff       	jmp    1000109d <ssfn_free>
1000359d:	90                   	nop

1000359e <NIContext::NIContext(Video*, int, int, int, int)>:
1000359e:	55                   	push   ebp
1000359f:	ba 00 00 00 00       	mov    edx,0x0	100035a0: R_386_32	ssfn_ctx
100035a4:	57                   	push   edi
100035a5:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035aa:	56                   	push   esi
100035ab:	89 d7                	mov    edi,edx
100035ad:	53                   	push   ebx
100035ae:	81 ec 48 02 00 00    	sub    esp,0x248
100035b4:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
100035bb:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
100035c2:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
100035c8:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
100035cf:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
100035d5:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035dc:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035e2:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035e9:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035ef:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035f6:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100035fc:	31 c0                	xor    eax,eax
100035fe:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003600:	68 00 40 00 00       	push   0x4000
10003605:	e8 fc ff ff ff       	call   10003606 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	10003606: R_386_PC32	malloc
1000360a:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003614:	89 03                	mov    DWORD PTR [ebx],eax
10003616:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
1000361d:	e8 fc ff ff ff       	call   1000361e <NIContext::NIContext(Video*, int, int, int, int)+0x80>	1000361e: R_386_PC32	malloc
10003622:	83 c4 0c             	add    esp,0xc
10003625:	89 c6                	mov    esi,eax
10003627:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003629: R_386_32	kernelProcess
1000362d:	68 31 c8 00 10       	push   0x1000c831	1000362e: R_386_32	.text
10003632:	50                   	push   eax
10003633:	e8 fc ff ff ff       	call   10003634 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003634: R_386_PC32	Directory::Directory(char const*, Process*)
10003638:	83 c4 10             	add    esp,0x10
1000363b:	85 f6                	test   esi,esi
1000363d:	75 10                	jne    1000364f <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
1000363f:	83 ec 0c             	sub    esp,0xc
10003642:	68 45 c8 00 10       	push   0x1000c845	10003643: R_386_32	.text
10003647:	e8 fc ff ff ff       	call   10003648 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003648: R_386_PC32	KePanic(char const*)
1000364c:	83 c4 10             	add    esp,0x10
1000364f:	83 ec 0c             	sub    esp,0xc
10003652:	56                   	push   esi
10003653:	e8 fc ff ff ff       	call   10003654 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003654: R_386_PC32	Directory::open()
10003658:	83 c4 10             	add    esp,0x10
1000365b:	85 c0                	test   eax,eax
1000365d:	75 e0                	jne    1000363f <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
1000365f:	83 ec 0c             	sub    esp,0xc
10003662:	8b 06                	mov    eax,DWORD PTR [esi]
10003664:	8d 4c 24 20          	lea    ecx,[esp+0x20]
10003668:	51                   	push   ecx
10003669:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
10003670:	52                   	push   edx
10003671:	6a 00                	push   0x0
10003673:	68 10 01 00 00       	push   0x110
10003678:	56                   	push   esi
10003679:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000367c:	83 c4 20             	add    esp,0x20
1000367f:	85 c0                	test   eax,eax
10003681:	0f 85 a0 01 00 00    	jne    10003827 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003687:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
1000368f:	0f 85 92 01 00 00    	jne    10003827 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003695:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
1000369c:	83 c9 ff             	or     ecx,0xffffffff
1000369f:	83 ec 0c             	sub    esp,0xc
100036a2:	89 ef                	mov    edi,ebp
100036a4:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036a6:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036ac:	89 ca                	mov    edx,ecx
100036ae:	f7 d2                	not    edx
100036b0:	52                   	push   edx
100036b1:	e8 fc ff ff ff       	call   100036b2 <NIContext::NIContext(Video*, int, int, int, int)+0x114>	100036b2: R_386_PC32	malloc
100036b6:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
100036ba:	47                   	inc    edi
100036bb:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
100036c1:	5a                   	pop    edx
100036c2:	59                   	pop    ecx
100036c3:	55                   	push   ebp
100036c4:	50                   	push   eax
100036c5:	e8 fc ff ff ff       	call   100036c6 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	100036c6: R_386_PC32	strcpy
100036ca:	5f                   	pop    edi
100036cb:	58                   	pop    eax
100036cc:	68 60 c8 00 10       	push   0x1000c860	100036cd: R_386_32	.text
100036d1:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
100036d5:	57                   	push   edi
100036d6:	e8 fc ff ff ff       	call   100036d7 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	100036d7: R_386_PC32	strcpy
100036db:	58                   	pop    eax
100036dc:	5a                   	pop    edx
100036dd:	55                   	push   ebp
100036de:	57                   	push   edi
100036df:	e8 fc ff ff ff       	call   100036e0 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036e0: R_386_PC32	strcat
100036e4:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036eb:	e8 fc ff ff ff       	call   100036ec <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036ec: R_386_PC32	malloc
100036f0:	83 c4 0c             	add    esp,0xc
100036f3:	89 c5                	mov    ebp,eax
100036f5:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036f7: R_386_32	kernelProcess
100036fb:	57                   	push   edi
100036fc:	50                   	push   eax
100036fd:	e8 fc ff ff ff       	call   100036fe <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100036fe: R_386_PC32	File::File(char const*, Process*)
10003702:	83 c4 10             	add    esp,0x10
10003705:	85 ed                	test   ebp,ebp
10003707:	0f 84 52 ff ff ff    	je     1000365f <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
1000370d:	50                   	push   eax
1000370e:	50                   	push   eax
1000370f:	6a 01                	push   0x1
10003711:	55                   	push   ebp
10003712:	e8 fc ff ff ff       	call   10003713 <NIContext::NIContext(Video*, int, int, int, int)+0x175>	10003713: R_386_PC32	File::open(FileOpenMode)
10003717:	83 c4 10             	add    esp,0x10
1000371a:	85 c0                	test   eax,eax
1000371c:	74 0c                	je     1000372a <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
1000371e:	83 ec 0c             	sub    esp,0xc
10003721:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003724:	55                   	push   ebp
10003725:	e9 b4 00 00 00       	jmp    100037de <NIContext::NIContext(Video*, int, int, int, int)+0x240>
1000372a:	50                   	push   eax
1000372b:	8d 44 24 17          	lea    eax,[esp+0x17]
1000372f:	50                   	push   eax
10003730:	8d 44 24 20          	lea    eax,[esp+0x20]
10003734:	50                   	push   eax
10003735:	55                   	push   ebp
10003736:	e8 fc ff ff ff       	call   10003737 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	10003737: R_386_PC32	File::stat(unsigned long long*, bool*)
1000373b:	83 c4 10             	add    esp,0x10
1000373e:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10003743:	74 0e                	je     10003753 <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003745:	83 ec 0c             	sub    esp,0xc
10003748:	55                   	push   ebp
10003749:	e8 fc ff ff ff       	call   1000374a <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	1000374a: R_386_PC32	File::close()
1000374e:	e9 85 00 00 00       	jmp    100037d8 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
10003753:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10003757:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000375b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000375f:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10003763:	83 ec 0c             	sub    esp,0xc
10003766:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000376a:	e8 fc ff ff ff       	call   1000376b <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	1000376b: R_386_PC32	malloc
1000376f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003773:	58                   	pop    eax
10003774:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003777:	8d 54 24 20          	lea    edx,[esp+0x20]
1000377b:	52                   	push   edx
1000377c:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003780:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003784:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003788:	55                   	push   ebp
10003789:	ff 50 0c             	call   DWORD PTR [eax+0xc]
1000378c:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003790:	83 c4 1c             	add    esp,0x1c
10003793:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003797:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000379b:	68 75 c8 00 10       	push   0x1000c875	1000379c: R_386_32	.text
100037a0:	e8 fc ff ff ff       	call   100037a1 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	100037a1: R_386_PC32	Dbg::kprintf(char const*, ...)
100037a5:	83 c4 10             	add    esp,0x10
100037a8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037ac:	85 c0                	test   eax,eax
100037ae:	75 15                	jne    100037c5 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037b0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100037b4:	89 c1                	mov    ecx,eax
100037b6:	c1 f9 1f             	sar    ecx,0x1f
100037b9:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
100037bd:	75 06                	jne    100037c5 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037bf:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100037c3:	74 24                	je     100037e9 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
100037c5:	83 ec 0c             	sub    esp,0xc
100037c8:	55                   	push   ebp
100037c9:	e8 fc ff ff ff       	call   100037ca <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	100037ca: R_386_PC32	File::close()
100037ce:	58                   	pop    eax
100037cf:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100037d3:	e8 fc ff ff ff       	call   100037d4 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	100037d4: R_386_PC32	free
100037d8:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037db:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037de:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037e1:	83 c4 10             	add    esp,0x10
100037e4:	e9 76 fe ff ff       	jmp    1000365f <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037e9:	50                   	push   eax
100037ea:	50                   	push   eax
100037eb:	57                   	push   edi
100037ec:	68 89 c8 00 10       	push   0x1000c889	100037ed: R_386_32	.text
100037f1:	e8 fc ff ff ff       	call   100037f2 <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037f2: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f6:	5a                   	pop    edx
100037f7:	59                   	pop    ecx
100037f8:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100037fc:	68 00 00 00 00       	push   0x0	100037fd: R_386_32	ssfn_ctx
10003801:	e8 fc ff ff ff       	call   10003802 <NIContext::NIContext(Video*, int, int, int, int)+0x264>	10003802: R_386_PC32	ssfn_load
10003806:	5b                   	pop    ebx
10003807:	5f                   	pop    edi
10003808:	50                   	push   eax
10003809:	68 9a c8 00 10       	push   0x1000c89a	1000380a: R_386_32	.text
1000380e:	e8 fc ff ff ff       	call   1000380f <NIContext::NIContext(Video*, int, int, int, int)+0x271>	1000380f: R_386_PC32	Dbg::kprintf(char const*, ...)
10003813:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003816:	e8 fc ff ff ff       	call   10003817 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	10003817: R_386_PC32	File::close()
1000381b:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000381e:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003821:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003824:	83 c4 10             	add    esp,0x10
10003827:	83 ec 0c             	sub    esp,0xc
1000382a:	56                   	push   esi
1000382b:	e8 fc ff ff ff       	call   1000382c <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	1000382c: R_386_PC32	Directory::close()
10003830:	8b 06                	mov    eax,DWORD PTR [esi]
10003832:	89 34 24             	mov    DWORD PTR [esp],esi
10003835:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003838:	b8 00 00 00 00       	mov    eax,0x0	10003839: R_386_32	ssfn_ctx
1000383d:	e8 f7 cb ff ff       	call   10000439 <_ssfn_fc.part.1>
10003842:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003844: R_386_32	ssfn_ctx
1000384c:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000384e: R_386_32	ssfn_ctx
10003856:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	10003858: R_386_32	ssfn_ctx
10003860:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	10003862: R_386_32	ssfn_ctx
1000386a:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	1000386c: R_386_32	ssfn_ctx
10003874:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	10003876: R_386_32	ssfn_ctx
1000387e:	81 c4 4c 02 00 00    	add    esp,0x24c
10003884:	5b                   	pop    ebx
10003885:	5e                   	pop    esi
10003886:	5f                   	pop    edi
10003887:	5d                   	pop    ebp
10003888:	c3                   	ret    
10003889:	90                   	nop

1000388a <NIDesktop::NIDesktop(NIContext*)>:
1000388a:	53                   	push   ebx
1000388b:	83 ec 14             	sub    esp,0x14
1000388e:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10003892:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10003896:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
1000389d:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100038a0:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038a7:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038ae:	6a 08                	push   0x8
100038b0:	e8 fc ff ff ff       	call   100038b1 <NIDesktop::NIDesktop(NIContext*)+0x27>	100038b1: R_386_PC32	malloc
100038b5:	89 03                	mov    DWORD PTR [ebx],eax
100038b7:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100038be:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100038c4:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	100038c6: R_386_32	mouseDesktop
100038ca:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100038cc: R_386_32	guiMouseHandler
	100038d0: R_386_32	clipdrawHandleMouse(int, int, int, int)
100038d4:	83 c4 18             	add    esp,0x18
100038d7:	5b                   	pop    ebx
100038d8:	c3                   	ret    
100038d9:	90                   	nop

100038da <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
100038da:	53                   	push   ebx
100038db:	83 ec 08             	sub    esp,0x8
100038de:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100038e2:	8b 00                	mov    eax,DWORD PTR [eax]
100038e4:	8b 18                	mov    ebx,DWORD PTR [eax]
100038e6:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
100038ea:	74 1d                	je     10003909 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
100038ec:	8b 03                	mov    eax,DWORD PTR [ebx]
100038ee:	85 c0                	test   eax,eax
100038f0:	74 12                	je     10003904 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038f2:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
100038f6:	74 0c                	je     10003904 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038f8:	83 ec 0c             	sub    esp,0xc
100038fb:	50                   	push   eax
100038fc:	e8 fc ff ff ff       	call   100038fd <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	100038fd: R_386_PC32	NIWindow::invalidate()
10003901:	83 c4 10             	add    esp,0x10
10003904:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003907:	eb dd                	jmp    100038e6 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003909:	83 c4 08             	add    esp,0x8
1000390c:	5b                   	pop    ebx
1000390d:	c3                   	ret    

1000390e <NIDesktop::getTopmostWindowAtPixel(int, int)>:
1000390e:	57                   	push   edi
1000390f:	56                   	push   esi
10003910:	53                   	push   ebx
10003911:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003915:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003919:	8b 00                	mov    eax,DWORD PTR [eax]
1000391b:	8b 00                	mov    eax,DWORD PTR [eax]
1000391d:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003920:	85 db                	test   ebx,ebx
10003922:	74 43                	je     10003967 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
10003924:	8b 00                	mov    eax,DWORD PTR [eax]
10003926:	85 c0                	test   eax,eax
10003928:	74 3f                	je     10003969 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
1000392a:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
1000392d:	39 ca                	cmp    edx,ecx
1000392f:	7e 04                	jle    10003935 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003931:	89 d8                	mov    eax,ebx
10003933:	eb e8                	jmp    1000391d <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
10003935:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003938:	01 d6                	add    esi,edx
1000393a:	39 ce                	cmp    esi,ecx
1000393c:	7e f3                	jle    10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000393e:	89 ce                	mov    esi,ecx
10003940:	29 d6                	sub    esi,edx
10003942:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10003945:	8d 34 b2             	lea    esi,[edx+esi*4]
10003948:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000394b:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000394e:	01 d7                	add    edi,edx
10003950:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
10003954:	7f db                	jg     10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003956:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
10003959:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
1000395d:	29 f2                	sub    edx,esi
1000395f:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10003963:	7e cc                	jle    10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003965:	eb 02                	jmp    10003969 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003967:	31 c0                	xor    eax,eax
10003969:	5b                   	pop    ebx
1000396a:	5e                   	pop    esi
1000396b:	5f                   	pop    edi
1000396c:	c3                   	ret    
1000396d:	90                   	nop

1000396e <NIDesktop::renderScanline(int, int, int)>:
1000396e:	55                   	push   ebp
1000396f:	57                   	push   edi
10003970:	56                   	push   esi
10003971:	53                   	push   ebx
10003972:	83 ec 2c             	sub    esp,0x2c
10003975:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003979:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
1000397d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003981:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003985:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003989:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000398b: R_386_32	render
1000398f:	31 c0                	xor    eax,eax
10003991:	89 d7                	mov    edi,edx
10003993:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003995:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003999:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000399d:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000399f: R_386_32	shadow
100039a3:	b0 80                	mov    al,0x80
100039a5:	89 d7                	mov    edi,edx
100039a7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039a9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039ad:	8b 00                	mov    eax,DWORD PTR [eax]
100039af:	8b 00                	mov    eax,DWORD PTR [eax]
100039b1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039b5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100039b9:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100039bd:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100039bf: R_386_32	movingWin
100039c3:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100039c7:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100039ca:	85 c0                	test   eax,eax
100039cc:	75 09                	jne    100039d7 <NIDesktop::renderScanline(int, int, int)+0x69>
100039ce:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039d2:	e9 cf 02 00 00       	jmp    10003ca6 <NIDesktop::renderScanline(int, int, int)+0x338>
100039d7:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100039db:	8b 1f                	mov    ebx,DWORD PTR [edi]
100039dd:	85 db                	test   ebx,ebx
100039df:	74 ed                	je     100039ce <NIDesktop::renderScanline(int, int, int)+0x60>
100039e1:	39 da                	cmp    edx,ebx
100039e3:	75 06                	jne    100039eb <NIDesktop::renderScanline(int, int, int)+0x7d>
100039e5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039e9:	eb d8                	jmp    100039c3 <NIDesktop::renderScanline(int, int, int)+0x55>
100039eb:	83 ec 0c             	sub    esp,0xc
100039ee:	53                   	push   ebx
100039ef:	e8 fc ff ff ff       	call   100039f0 <NIDesktop::renderScanline(int, int, int)+0x82>	100039f0: R_386_PC32	NIWindow::request()
100039f4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100039f7:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
100039fa:	83 c4 10             	add    esp,0x10
100039fd:	01 c2                	add    edx,eax
100039ff:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003a03:	0f 8e ad 00 00 00    	jle    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a09:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a0d:	0f 85 a3 00 00 00    	jne    10003ab6 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a13:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a17:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a1a:	83 c0 06             	add    eax,0x6
10003a1d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a21:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a24:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a27:	01 c8                	add    eax,ecx
10003a29:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003a2d:	39 d0                	cmp    eax,edx
10003a2f:	0f 8e 40 01 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a35:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a39:	7c 75                	jl     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a3b:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a3f:	0f 8f 30 01 00 00    	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a45:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a48:	89 d5                	mov    ebp,edx
10003a4a:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a4d:	29 cd                	sub    ebp,ecx
10003a4f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a53:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003a57:	39 f0                	cmp    eax,esi
10003a59:	7c 1d                	jl     10003a78 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a5b:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003a5e:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003a61:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003a64:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003a68:	7f 0e                	jg     10003a78 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a6a:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003a6e:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003a72:	29 cd                	sub    ebp,ecx
10003a74:	39 d5                	cmp    ebp,edx
10003a76:	7d 07                	jge    10003a7f <NIDesktop::renderScanline(int, int, int)+0x111>
10003a78:	40                   	inc    eax
10003a79:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003a7d:	75 d8                	jne    10003a57 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003a7f:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003a83:	48                   	dec    eax
10003a84:	83 f8 03             	cmp    eax,0x3
10003a87:	77 27                	ja     10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a89:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003a8b: R_386_32	render
10003a90:	75 1e                	jne    10003ab0 <NIDesktop::renderScanline(int, int, int)+0x142>
10003a92:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a99:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a9c: R_386_32	shadow
10003aa0:	0f af c1             	imul   eax,ecx
10003aa3:	d1 f9                	sar    ecx,1
10003aa5:	c1 f8 08             	sar    eax,0x8
10003aa8:	01 c1                	add    ecx,eax
10003aaa:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003aac: R_386_32	shadow
10003ab0:	42                   	inc    edx
10003ab1:	e9 6b ff ff ff       	jmp    10003a21 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003ab6:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003aba:	0f 8d b5 00 00 00    	jge    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ac0:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003ac4:	0f 85 ab 00 00 00    	jne    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003aca:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003ace:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003ad1:	8d 77 fa             	lea    esi,[edi-0x6]
10003ad4:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003ad8:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003adb:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003ade:	01 ce                	add    esi,ecx
10003ae0:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003ae4:	39 c6                	cmp    esi,eax
10003ae6:	0f 8e 89 00 00 00    	jle    10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003aec:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003af0:	7c 7d                	jl     10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003af2:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003af6:	7f 7d                	jg     10003b75 <NIDesktop::renderScanline(int, int, int)+0x207>
10003af8:	89 c7                	mov    edi,eax
10003afa:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003afe:	29 cf                	sub    edi,ecx
10003b00:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b04:	4a                   	dec    edx
10003b05:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b09:	29 d1                	sub    ecx,edx
10003b0b:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b0f:	74 32                	je     10003b43 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b11:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b14:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b17:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b1a:	39 d5                	cmp    ebp,edx
10003b1c:	7e e6                	jle    10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b1e:	89 d5                	mov    ebp,edx
10003b20:	29 fd                	sub    ebp,edi
10003b22:	39 ee                	cmp    esi,ebp
10003b24:	7e 1d                	jle    10003b43 <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b26:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b29:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b2c:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b2f:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b33:	7f cf                	jg     10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b35:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b39:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003b3d:	29 f7                	sub    edi,esi
10003b3f:	39 c7                	cmp    edi,eax
10003b41:	7c c1                	jl     10003b04 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b43:	83 f9 04             	cmp    ecx,0x4
10003b46:	77 27                	ja     10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003b48:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b4a: R_386_32	render
10003b4f:	75 1e                	jne    10003b6f <NIDesktop::renderScanline(int, int, int)+0x201>
10003b51:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003b58:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003b5b: R_386_32	shadow
10003b5f:	0f af d1             	imul   edx,ecx
10003b62:	d1 f9                	sar    ecx,1
10003b64:	c1 fa 08             	sar    edx,0x8
10003b67:	01 d1                	add    ecx,edx
10003b69:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003b6b: R_386_32	shadow
10003b6f:	40                   	inc    eax
10003b70:	e9 63 ff ff ff       	jmp    10003ad8 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003b75:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003b78:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b7c:	0f 8f 00 01 00 00    	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003b82:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003b85:	01 c2                	add    edx,eax
10003b87:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003b8b:	0f 8e f1 00 00 00    	jle    10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003b91:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b95:	29 c2                	sub    edx,eax
10003b97:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003b9a:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b9e:	8d 14 90             	lea    edx,[eax+edx*4]
10003ba1:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003ba4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003ba8:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003bac:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003bb0:	74 09                	je     10003bbb <NIDesktop::renderScanline(int, int, int)+0x24d>
10003bb2:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bb6:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003bb9:	eb 78                	jmp    10003c33 <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003bbb:	31 c9                	xor    ecx,ecx
10003bbd:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003bc0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bc4:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003bc8:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003bcb:	01 cd                	add    ebp,ecx
10003bcd:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003bd1:	01 ca                	add    edx,ecx
10003bd3:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003bd5: R_386_32	render
10003bda:	75 1f                	jne    10003bfb <NIDesktop::renderScanline(int, int, int)+0x28d>
10003bdc:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003bdf: R_386_32	shadow
10003be3:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003be6:	83 c7 7d             	add    edi,0x7d
10003be9:	0f af f7             	imul   esi,edi
10003bec:	d1 ff                	sar    edi,1
10003bee:	c1 fe 08             	sar    esi,0x8
10003bf1:	01 f7                	add    edi,esi
10003bf3:	89 f8                	mov    eax,edi
10003bf5:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003bf7: R_386_32	shadow
10003bfb:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003bfd: R_386_32	render
10003c02:	75 20                	jne    10003c24 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c04:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c0b:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c0e: R_386_32	shadow
10003c12:	0f af f7             	imul   esi,edi
10003c15:	d1 ff                	sar    edi,1
10003c17:	c1 fe 08             	sar    esi,0x8
10003c1a:	01 f7                	add    edi,esi
10003c1c:	89 f8                	mov    eax,edi
10003c1e:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c20: R_386_32	shadow
10003c24:	41                   	inc    ecx
10003c25:	83 f9 04             	cmp    ecx,0x4
10003c28:	75 93                	jne    10003bbd <NIDesktop::renderScanline(int, int, int)+0x24f>
10003c2a:	eb 86                	jmp    10003bb2 <NIDesktop::renderScanline(int, int, int)+0x244>
10003c2c:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c30:	7d 11                	jge    10003c43 <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003c32:	40                   	inc    eax
10003c33:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c36:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c39:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c3d:	39 c2                	cmp    edx,eax
10003c3f:	7f eb                	jg     10003c2c <NIDesktop::renderScanline(int, int, int)+0x2be>
10003c41:	eb 3f                	jmp    10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c43:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c47:	7f 39                	jg     10003c82 <NIDesktop::renderScanline(int, int, int)+0x314>
10003c49:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c4b: R_386_32	render
10003c50:	75 e0                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c52:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c54: R_386_32	render
10003c59:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003c5d:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003c60:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003c63:	0f af ca             	imul   ecx,edx
10003c66:	89 c2                	mov    edx,eax
10003c68:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003c6b:	01 ca                	add    edx,ecx
10003c6d:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003c70:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003c74:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003c77:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003c7a: R_386_32	renderData
10003c7e:	75 b2                	jne    10003c32 <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c80:	eb 44                	jmp    10003cc6 <NIDesktop::renderScanline(int, int, int)+0x358>
10003c82:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003c86:	0f 85 42 fd ff ff    	jne    100039ce <NIDesktop::renderScanline(int, int, int)+0x60>
10003c8c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003c90:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c93:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003c97:	e9 21 fd ff ff       	jmp    100039bd <NIDesktop::renderScanline(int, int, int)+0x4f>
10003c9c:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9e: R_386_32	render
10003ca3:	74 09                	je     10003cae <NIDesktop::renderScanline(int, int, int)+0x340>
10003ca5:	40                   	inc    eax
10003ca6:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003caa:	7c f0                	jl     10003c9c <NIDesktop::renderScanline(int, int, int)+0x32e>
10003cac:	eb 18                	jmp    10003cc6 <NIDesktop::renderScanline(int, int, int)+0x358>
10003cae:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003cb0: R_386_32	render
10003cb5:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003cb8: R_386_32	renderData
10003cc0:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003cc4:	75 df                	jne    10003ca5 <NIDesktop::renderScanline(int, int, int)+0x337>
10003cc6:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cca:	8b 00                	mov    eax,DWORD PTR [eax]
10003ccc:	8b 00                	mov    eax,DWORD PTR [eax]
10003cce:	85 c0                	test   eax,eax
10003cd0:	74 5e                	je     10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cd2:	8b 00                	mov    eax,DWORD PTR [eax]
10003cd4:	85 c0                	test   eax,eax
10003cd6:	74 58                	je     10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cd8:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003cdc:	75 52                	jne    10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cde:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003ce2:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003ce6:	7d 48                	jge    10003d30 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003ce8:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003cea: R_386_32	shadow
10003cee:	3c 80                	cmp    al,0x80
10003cf0:	74 3b                	je     10003d2d <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003cf2:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003cf5: R_386_32	renderData
10003cf9:	0f b6 f0             	movzx  esi,al
10003cfc:	89 d1                	mov    ecx,edx
10003cfe:	0f b6 c6             	movzx  eax,dh
10003d01:	c1 e9 10             	shr    ecx,0x10
10003d04:	0f af c6             	imul   eax,esi
10003d07:	0f b6 c9             	movzx  ecx,cl
10003d0a:	0f b6 d2             	movzx  edx,dl
10003d0d:	0f af ce             	imul   ecx,esi
10003d10:	0f af d6             	imul   edx,esi
10003d13:	c1 e9 07             	shr    ecx,0x7
10003d16:	c1 e8 07             	shr    eax,0x7
10003d19:	c1 e1 10             	shl    ecx,0x10
10003d1c:	c1 e0 08             	shl    eax,0x8
10003d1f:	c1 ea 07             	shr    edx,0x7
10003d22:	09 c1                	or     ecx,eax
10003d24:	09 ca                	or     edx,ecx
10003d26:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d29: R_386_32	renderData
10003d2d:	43                   	inc    ebx
10003d2e:	eb b2                	jmp    10003ce2 <NIDesktop::renderScanline(int, int, int)+0x374>
10003d30:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d34:	83 ec 0c             	sub    esp,0xc
10003d37:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d3a:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d40:	8b 10                	mov    edx,DWORD PTR [eax]
10003d42:	68 00 00 00 00       	push   0x0	10003d43: R_386_32	renderData
10003d47:	6a 00                	push   0x0
10003d49:	6a 01                	push   0x1
10003d4b:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003d4f:	6a 00                	push   0x0
10003d51:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d55:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d59:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003d5d:	50                   	push   eax
10003d5e:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003d61:	83 c4 5c             	add    esp,0x5c
10003d64:	5b                   	pop    ebx
10003d65:	5e                   	pop    esi
10003d66:	5f                   	pop    edi
10003d67:	5d                   	pop    ebp
10003d68:	c3                   	ret    
10003d69:	90                   	nop

10003d6a <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d6a:	53                   	push   ebx
10003d6b:	83 ec 08             	sub    esp,0x8
10003d6e:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d72:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d76:	7d 18                	jge    10003d90 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d78:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d7c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d80:	53                   	push   ebx
10003d81:	43                   	inc    ebx
10003d82:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d86:	e8 fc ff ff ff       	call   10003d87 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d87: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d8b:	83 c4 10             	add    esp,0x10
10003d8e:	eb e2                	jmp    10003d72 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d90:	83 c4 08             	add    esp,0x8
10003d93:	5b                   	pop    ebx
10003d94:	c3                   	ret    
10003d95:	90                   	nop

10003d96 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d96:	55                   	push   ebp
10003d97:	ba 05 00 00 00       	mov    edx,0x5
10003d9c:	57                   	push   edi
10003d9d:	56                   	push   esi
10003d9e:	53                   	push   ebx
10003d9f:	83 ec 0c             	sub    esp,0xc
10003da2:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003da6:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003da9:	83 f8 05             	cmp    eax,0x5
10003dac:	7c 02                	jl     10003db0 <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003dae:	89 c2                	mov    edx,eax
10003db0:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003db4:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003db7:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003dba:	83 ea 05             	sub    edx,0x5
10003dbd:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003dc3:	8d 70 05             	lea    esi,[eax+0x5]
10003dc6:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003dc9:	39 c5                	cmp    ebp,eax
10003dcb:	7f 03                	jg     10003dd0 <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003dcd:	8d 71 ff             	lea    esi,[ecx-0x1]
10003dd0:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003dd3:	89 c1                	mov    ecx,eax
10003dd5:	83 f8 05             	cmp    eax,0x5
10003dd8:	7d 05                	jge    10003ddf <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003dda:	b9 05 00 00 00       	mov    ecx,0x5
10003ddf:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003de2:	83 e9 05             	sub    ecx,0x5
10003de5:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003deb:	8d 58 05             	lea    ebx,[eax+0x5]
10003dee:	8d 6f fb             	lea    ebp,[edi-0x5]
10003df1:	39 c5                	cmp    ebp,eax
10003df3:	7f 03                	jg     10003df8 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003df5:	8d 5f ff             	lea    ebx,[edi-0x1]
10003df8:	83 ec 0c             	sub    esp,0xc
10003dfb:	53                   	push   ebx
10003dfc:	51                   	push   ecx
10003dfd:	56                   	push   esi
10003dfe:	52                   	push   edx
10003dff:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003e03:	e8 fc ff ff ff       	call   10003e04 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e04: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e08:	83 c4 2c             	add    esp,0x2c
10003e0b:	5b                   	pop    ebx
10003e0c:	5e                   	pop    esi
10003e0d:	5f                   	pop    edi
10003e0e:	5d                   	pop    ebp
10003e0f:	c3                   	ret    

10003e10 <NIDesktop::completeRefresh()>:
10003e10:	56                   	push   esi
10003e11:	53                   	push   ebx
10003e12:	31 f6                	xor    esi,esi
10003e14:	50                   	push   eax
10003e15:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e19:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e1c:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e22:	7e 15                	jle    10003e39 <NIDesktop::completeRefresh()+0x29>
10003e24:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e2a:	6a 00                	push   0x0
10003e2c:	56                   	push   esi
10003e2d:	46                   	inc    esi
10003e2e:	53                   	push   ebx
10003e2f:	e8 fc ff ff ff       	call   10003e30 <NIDesktop::completeRefresh()+0x20>	10003e30: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e34:	83 c4 10             	add    esp,0x10
10003e37:	eb e0                	jmp    10003e19 <NIDesktop::completeRefresh()+0x9>
10003e39:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e3f:	83 ec 0c             	sub    esp,0xc
10003e42:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e44:	6a 00                	push   0x0
10003e46:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e49:	05 00 00 00 00       	add    eax,0x0	10003e4a: R_386_32	___mouse_data
10003e4e:	50                   	push   eax
10003e4f:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e52:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e55:	52                   	push   edx
10003e56:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e59:	83 c4 24             	add    esp,0x24
10003e5c:	5b                   	pop    ebx
10003e5d:	5e                   	pop    esi
10003e5e:	c3                   	ret    
10003e5f:	90                   	nop

10003e60 <NIDesktop::addWindow(NIWindow*)>:
10003e60:	56                   	push   esi
10003e61:	53                   	push   ebx
10003e62:	83 ec 0c             	sub    esp,0xc
10003e65:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e69:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e6d:	56                   	push   esi
10003e6e:	ff 33                	push   DWORD PTR [ebx]
10003e70:	e8 fc ff ff ff       	call   10003e71 <NIDesktop::addWindow(NIWindow*)+0x11>	10003e71: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e75:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e79:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e7d:	83 c4 14             	add    esp,0x14
10003e80:	5b                   	pop    ebx
10003e81:	5e                   	pop    esi
10003e82:	e9 0f ff ff ff       	jmp    10003d96 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e87:	90                   	nop

10003e88 <NIDesktop::raiseWindow(NIWindow*)>:
10003e88:	53                   	push   ebx
10003e89:	83 ec 10             	sub    esp,0x10
10003e8c:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e90:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e94:	50                   	push   eax
10003e95:	ff 33                	push   DWORD PTR [ebx]
10003e97:	e8 fc ff ff ff       	call   10003e98 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e98: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e9c:	58                   	pop    eax
10003e9d:	5a                   	pop    edx
10003e9e:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ea2:	ff 33                	push   DWORD PTR [ebx]
10003ea4:	e8 fc ff ff ff       	call   10003ea5 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ea5: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ea9:	59                   	pop    ecx
10003eaa:	58                   	pop    eax
10003eab:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eaf:	53                   	push   ebx
10003eb0:	e8 fc ff ff ff       	call   10003eb1 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003eb1: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eb5:	83 c4 18             	add    esp,0x18
10003eb8:	5b                   	pop    ebx
10003eb9:	c3                   	ret    

10003eba <NIDesktop::deleteWindow(NIWindow*)>:
10003eba:	53                   	push   ebx
10003ebb:	83 ec 10             	sub    esp,0x10
10003ebe:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ec2:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003ec6:	50                   	push   eax
10003ec7:	ff 33                	push   DWORD PTR [ebx]
10003ec9:	e8 fc ff ff ff       	call   10003eca <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003eca: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003ece:	58                   	pop    eax
10003ecf:	5a                   	pop    edx
10003ed0:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ed4:	53                   	push   ebx
10003ed5:	e8 fc ff ff ff       	call   10003ed6 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003ed6: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eda:	83 c4 18             	add    esp,0x18
10003edd:	5b                   	pop    ebx
10003ede:	c3                   	ret    
10003edf:	90                   	nop

10003ee0 <NIDesktop::handleMouse(int, int, int, int)>:
10003ee0:	55                   	push   ebp
10003ee1:	57                   	push   edi
10003ee2:	56                   	push   esi
10003ee3:	53                   	push   ebx
10003ee4:	83 ec 28             	sub    esp,0x28
10003ee7:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003eeb:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003eee:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ef1:	8d 4a 20             	lea    ecx,[edx+0x20]
10003ef4:	51                   	push   ecx
10003ef5:	52                   	push   edx
10003ef6:	8d 50 20             	lea    edx,[eax+0x20]
10003ef9:	52                   	push   edx
10003efa:	50                   	push   eax
10003efb:	53                   	push   ebx
10003efc:	e8 fc ff ff ff       	call   10003efd <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003efd: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003f01:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003f04:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003f08:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f0b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10003f0f:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f13:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003f17:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f1b:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f1e:	83 c4 20             	add    esp,0x20
10003f21:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f24:	85 d2                	test   edx,edx
10003f26:	79 07                	jns    10003f2f <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003f28:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f2f:	85 c0                	test   eax,eax
10003f31:	79 07                	jns    10003f3a <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003f33:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f3a:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f3d:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f43:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f46:	7f 04                	jg     10003f4c <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f48:	48                   	dec    eax
10003f49:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f4c:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f52:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f55:	7f 04                	jg     10003f5b <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003f57:	48                   	dec    eax
10003f58:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f5b:	55                   	push   ebp
10003f5c:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f5f:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f62:	53                   	push   ebx
10003f63:	e8 fc ff ff ff       	call   10003f64 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003f64: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f68:	83 c4 10             	add    esp,0x10
10003f6b:	89 c6                	mov    esi,eax
10003f6d:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f71:	83 e0 01             	and    eax,0x1
10003f74:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f76: R_386_32	movingWin
10003f7b:	0f 84 e1 01 00 00    	je     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
10003f81:	c6 04 24 00          	mov    BYTE PTR [esp],0x0
10003f85:	85 c0                	test   eax,eax
10003f87:	75 0b                	jne    10003f94 <NIDesktop::handleMouse(int, int, int, int)+0xb4>
10003f89:	a0 58 09 04 10       	mov    al,ds:0x10040958	10003f8a: R_386_32	.bss
10003f8e:	83 e0 01             	and    eax,0x1
10003f91:	88 04 24             	mov    BYTE PTR [esp],al
10003f94:	bf 01 00 00 00       	mov    edi,0x1
10003f99:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003f9b: R_386_32	movingWin
10003f9f:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003fa2:	48                   	dec    eax
10003fa3:	39 f8                	cmp    eax,edi
10003fa5:	0f 8e b0 00 00 00    	jle    1000405b <NIDesktop::handleMouse(int, int, int, int)+0x17b>
10003fab:	bd 01 00 00 00       	mov    ebp,0x1
10003fb0:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fb1: R_386_32	movingWin
10003fb5:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10003fb8:	48                   	dec    eax
10003fb9:	39 e8                	cmp    eax,ebp
10003fbb:	0f 8e 94 00 00 00    	jle    10004055 <NIDesktop::handleMouse(int, int, int, int)+0x175>
10003fc1:	8d 04 2f             	lea    eax,[edi+ebp*1]
10003fc4:	89 fa                	mov    edx,edi
10003fc6:	83 e0 1f             	and    eax,0x1f
10003fc9:	83 e2 03             	and    edx,0x3
10003fcc:	09 d0                	or     eax,edx
10003fce:	75 7f                	jne    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10003fd0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003fd4:	2b 05 54 09 04 10    	sub    eax,DWORD PTR ds:0x10040954	10003fd6: R_386_32	.bss
10003fda:	01 e8                	add    eax,ebp
10003fdc:	78 2d                	js     1000400b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10003fde:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003fe1:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10003fe7:	7d 22                	jge    1000400b <NIDesktop::handleMouse(int, int, int, int)+0x12b>
10003fe9:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003fed:	8d 48 01             	lea    ecx,[eax+0x1]
10003ff0:	83 ec 0c             	sub    esp,0xc
10003ff3:	2b 15 50 09 04 10    	sub    edx,DWORD PTR ds:0x10040950	10003ff5: R_386_32	.bss
10003ff9:	51                   	push   ecx
10003ffa:	01 fa                	add    edx,edi
10003ffc:	50                   	push   eax
10003ffd:	8d 42 01             	lea    eax,[edx+0x1]
10004000:	50                   	push   eax
10004001:	52                   	push   edx
10004002:	53                   	push   ebx
10004003:	e8 fc ff ff ff       	call   10004004 <NIDesktop::handleMouse(int, int, int, int)+0x124>	10004004: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004008:	83 c4 20             	add    esp,0x20
1000400b:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
1000400f:	75 3e                	jne    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004011:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004014:	01 e8                	add    eax,ebp
10004016:	2b 05 54 09 04 10    	sub    eax,DWORD PTR ds:0x10040954	10004018: R_386_32	.bss
1000401c:	78 31                	js     1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
1000401e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004021:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10004027:	7d 26                	jge    1000404f <NIDesktop::handleMouse(int, int, int, int)+0x16f>
10004029:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
1000402f:	8b 11                	mov    edx,DWORD PTR [ecx]
10004031:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10004035:	6a 00                	push   0x0
10004037:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000403a:	01 fa                	add    edx,edi
1000403c:	2b 15 50 09 04 10    	sub    edx,DWORD PTR ds:0x10040950	1000403e: R_386_32	.bss
10004042:	52                   	push   edx
10004043:	50                   	push   eax
10004044:	51                   	push   ecx
10004045:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10004049:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000404c:	83 c4 10             	add    esp,0x10
1000404f:	45                   	inc    ebp
10004050:	e9 5b ff ff ff       	jmp    10003fb0 <NIDesktop::handleMouse(int, int, int, int)+0xd0>
10004055:	47                   	inc    edi
10004056:	e9 3e ff ff ff       	jmp    10003f99 <NIDesktop::handleMouse(int, int, int, int)+0xb9>
1000405b:	a1 54 09 04 10       	mov    eax,ds:0x10040954	1000405c: R_386_32	.bss
10004060:	8b 7b 08             	mov    edi,DWORD PTR [ebx+0x8]
10004063:	29 c7                	sub    edi,eax
10004065:	80 3c 24 00          	cmp    BYTE PTR [esp],0x0
10004069:	0f 85 6d 02 00 00    	jne    100042dc <NIDesktop::handleMouse(int, int, int, int)+0x3fc>
1000406f:	89 3c 24             	mov    DWORD PTR [esp],edi
10004072:	85 ff                	test   edi,edi
10004074:	79 07                	jns    1000407d <NIDesktop::handleMouse(int, int, int, int)+0x19d>
10004076:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
1000407d:	8b 4a 20             	mov    ecx,DWORD PTR [edx+0x20]
10004080:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004083:	01 cf                	add    edi,ecx
10004085:	8b aa 0c 04 00 00    	mov    ebp,DWORD PTR [edx+0x40c]
1000408b:	39 ef                	cmp    edi,ebp
1000408d:	7d 05                	jge    10004094 <NIDesktop::handleMouse(int, int, int, int)+0x1b4>
1000408f:	2b 3c 24             	sub    edi,DWORD PTR [esp]
10004092:	eb 0b                	jmp    1000409f <NIDesktop::handleMouse(int, int, int, int)+0x1bf>
10004094:	89 ef                	mov    edi,ebp
10004096:	2b 3c 24             	sub    edi,DWORD PTR [esp]
10004099:	0f 88 c3 00 00 00    	js     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
1000409f:	85 ff                	test   edi,edi
100040a1:	0f 84 bb 00 00 00    	je     10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>
100040a7:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100040ab:	29 c2                	sub    edx,eax
100040ad:	89 d0                	mov    eax,edx
100040af:	79 02                	jns    100040b3 <NIDesktop::handleMouse(int, int, int, int)+0x1d3>
100040b1:	31 d2                	xor    edx,edx
100040b3:	01 c8                	add    eax,ecx
100040b5:	39 c5                	cmp    ebp,eax
100040b7:	7e 04                	jle    100040bd <NIDesktop::handleMouse(int, int, int, int)+0x1dd>
100040b9:	29 d0                	sub    eax,edx
100040bb:	eb 08                	jmp    100040c5 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
100040bd:	89 e8                	mov    eax,ebp
100040bf:	29 d0                	sub    eax,edx
100040c1:	79 02                	jns    100040c5 <NIDesktop::handleMouse(int, int, int, int)+0x1e5>
100040c3:	31 c0                	xor    eax,eax
100040c5:	83 ec 0c             	sub    esp,0xc
100040c8:	8d 2c 10             	lea    ebp,[eax+edx*1]
100040cb:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100040cf:	55                   	push   ebp
100040d0:	2b 05 50 09 04 10    	sub    eax,DWORD PTR ds:0x10040950	100040d2: R_386_32	.bss
100040d6:	52                   	push   edx
100040d7:	8d 48 01             	lea    ecx,[eax+0x1]
100040da:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
100040de:	51                   	push   ecx
100040df:	50                   	push   eax
100040e0:	53                   	push   ebx
100040e1:	e8 fc ff ff ff       	call   100040e2 <NIDesktop::handleMouse(int, int, int, int)+0x202>	100040e2: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
100040e6:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100040ea:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	100040ec: R_386_32	movingWin
100040f0:	83 c4 14             	add    esp,0x14
100040f3:	2b 05 50 09 04 10    	sub    eax,DWORD PTR ds:0x10040950	100040f5: R_386_32	.bss
100040f9:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
100040fc:	55                   	push   ebp
100040fd:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004101:	52                   	push   edx
10004102:	50                   	push   eax
10004103:	48                   	dec    eax
10004104:	50                   	push   eax
10004105:	53                   	push   ebx
10004106:	e8 fc ff ff ff       	call   10004107 <NIDesktop::handleMouse(int, int, int, int)+0x227>	10004107: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
1000410b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000410e:	83 c4 18             	add    esp,0x18
10004111:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004117:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004119:	6a 00                	push   0x0
1000411b:	6a 01                	push   0x1
1000411d:	57                   	push   edi
1000411e:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004121:	2b 05 50 09 04 10    	sub    eax,DWORD PTR ds:0x10040950	10004123: R_386_32	.bss
10004127:	50                   	push   eax
10004128:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000412c:	52                   	push   edx
1000412d:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004130:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004133:	83 c4 18             	add    esp,0x18
10004136:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000413c:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000413e:	6a 00                	push   0x0
10004140:	6a 01                	push   0x1
10004142:	57                   	push   edi
10004143:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	10004145: R_386_32	movingWin
10004149:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000414c:	2b 05 50 09 04 10    	sub    eax,DWORD PTR ds:0x10040950	1000414e: R_386_32	.bss
10004152:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
10004155:	48                   	dec    eax
10004156:	50                   	push   eax
10004157:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000415b:	52                   	push   edx
1000415c:	ff 51 28             	call   DWORD PTR [ecx+0x28]
1000415f:	83 c4 20             	add    esp,0x20
10004162:	85 f6                	test   esi,esi
10004164:	0f 84 3e 01 00 00    	je     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000416a:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
1000416f:	0f 84 33 01 00 00    	je     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004175:	8b 0d 58 09 04 10    	mov    ecx,DWORD PTR ds:0x10040958	10004177: R_386_32	.bss
1000417b:	83 e1 01             	and    ecx,0x1
1000417e:	0f 85 e7 00 00 00    	jne    1000426b <NIDesktop::handleMouse(int, int, int, int)+0x38b>
10004184:	a1 00 00 00 00       	mov    eax,ds:0x0	10004185: R_386_32	milliTenthsSinceBoot
10004189:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	1000418b: R_386_32	milliTenthsSinceBoot
1000418f:	2b 05 48 09 04 10    	sub    eax,DWORD PTR ds:0x10040948	10004191: R_386_32	.bss
10004195:	bf b7 0b 00 00       	mov    edi,0xbb7
1000419a:	1b 15 4c 09 04 10    	sbb    edx,DWORD PTR ds:0x1004094c	1000419c: R_386_32	.bss
100041a0:	39 c7                	cmp    edi,eax
100041a2:	19 d1                	sbb    ecx,edx
100041a4:	0f 82 95 00 00 00    	jb     1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041aa:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100041ad:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041b0:	29 d0                	sub    eax,edx
100041b2:	83 f8 18             	cmp    eax,0x18
100041b5:	0f 8f 84 00 00 00    	jg     1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041bb:	f6 46 3c 01          	test   BYTE PTR [esi+0x3c],0x1
100041bf:	75 7e                	jne    1000423f <NIDesktop::handleMouse(int, int, int, int)+0x35f>
100041c1:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100041c5:	74 26                	je     100041ed <NIDesktop::handleMouse(int, int, int, int)+0x30d>
100041c7:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
100041ca:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
100041cd:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
100041d0:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
100041d3:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
100041d6:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
100041d9:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
100041dc:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
100041df:	57                   	push   edi
100041e0:	57                   	push   edi
100041e1:	56                   	push   esi
100041e2:	53                   	push   ebx
100041e3:	e8 fc ff ff ff       	call   100041e4 <NIDesktop::handleMouse(int, int, int, int)+0x304>	100041e4: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
100041e8:	83 c4 10             	add    esp,0x10
100041eb:	eb 3b                	jmp    10004228 <NIDesktop::handleMouse(int, int, int, int)+0x348>
100041ed:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
100041f0:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
100041f7:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
100041fa:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004201:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004204:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004207:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000420a:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
1000420d:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004210:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004213:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
10004219:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000421c:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000421f:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
10004225:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004228:	83 ec 0c             	sub    esp,0xc
1000422b:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
1000422f:	56                   	push   esi
10004230:	e8 fc ff ff ff       	call   10004231 <NIDesktop::handleMouse(int, int, int, int)+0x351>	10004231: R_386_PC32	NIWindow::rerender()
10004235:	89 1c 24             	mov    DWORD PTR [esp],ebx
10004238:	e8 fc ff ff ff       	call   10004239 <NIDesktop::handleMouse(int, int, int, int)+0x359>	10004239: R_386_PC32	NIDesktop::completeRefresh()
1000423d:	eb 11                	jmp    10004250 <NIDesktop::handleMouse(int, int, int, int)+0x370>
1000423f:	8b 03                	mov    eax,DWORD PTR [ebx]
10004241:	8b 00                	mov    eax,DWORD PTR [eax]
10004243:	39 30                	cmp    DWORD PTR [eax],esi
10004245:	74 0c                	je     10004253 <NIDesktop::handleMouse(int, int, int, int)+0x373>
10004247:	51                   	push   ecx
10004248:	51                   	push   ecx
10004249:	56                   	push   esi
1000424a:	53                   	push   ebx
1000424b:	e8 fc ff ff ff       	call   1000424c <NIDesktop::handleMouse(int, int, int, int)+0x36c>	1000424c: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
10004250:	83 c4 10             	add    esp,0x10
10004253:	a1 00 00 00 00       	mov    eax,ds:0x0	10004254: R_386_32	milliTenthsSinceBoot
10004258:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	1000425a: R_386_32	milliTenthsSinceBoot
1000425e:	a3 48 09 04 10       	mov    ds:0x10040948,eax	1000425f: R_386_32	.bss
10004263:	89 15 4c 09 04 10    	mov    DWORD PTR ds:0x1004094c,edx	10004265: R_386_32	.bss
10004269:	eb 3d                	jmp    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000426b:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	1000426d: R_386_32	movingWin
10004272:	75 34                	jne    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004274:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004277:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
1000427a:	83 f8 18             	cmp    eax,0x18
1000427d:	7f 29                	jg     100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
1000427f:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004283:	75 23                	jne    100042a8 <NIDesktop::handleMouse(int, int, int, int)+0x3c8>
10004285:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004288:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	1000428a: R_386_32	movingWin
1000428e:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
10004291:	a3 50 09 04 10       	mov    ds:0x10040950,eax	10004292: R_386_32	.bss
10004296:	89 15 54 09 04 10    	mov    DWORD PTR ds:0x10040954,edx	10004298: R_386_32	.bss
1000429c:	52                   	push   edx
1000429d:	52                   	push   edx
1000429e:	56                   	push   esi
1000429f:	53                   	push   ebx
100042a0:	e8 fc ff ff ff       	call   100042a1 <NIDesktop::handleMouse(int, int, int, int)+0x3c1>	100042a1: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100042a5:	83 c4 10             	add    esp,0x10
100042a8:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100042ab:	83 ec 0c             	sub    esp,0xc
100042ae:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100042b4:	8b 0a                	mov    ecx,DWORD PTR [edx]
100042b6:	6a 00                	push   0x0
100042b8:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100042bb:	05 00 00 00 00       	add    eax,0x0	100042bc: R_386_32	___mouse_data
100042c0:	50                   	push   eax
100042c1:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
100042c4:	ff 73 08             	push   DWORD PTR [ebx+0x8]
100042c7:	52                   	push   edx
100042c8:	ff 51 30             	call   DWORD PTR [ecx+0x30]
100042cb:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100042cf:	a3 58 09 04 10       	mov    ds:0x10040958,eax	100042d0: R_386_32	.bss
100042d4:	83 c4 3c             	add    esp,0x3c
100042d7:	5b                   	pop    ebx
100042d8:	5e                   	pop    esi
100042d9:	5f                   	pop    edi
100042da:	5d                   	pop    ebp
100042db:	c3                   	ret    
100042dc:	89 7a 18             	mov    DWORD PTR [edx+0x18],edi
100042df:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100042e1: R_386_32	movingWin
100042e9:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100042ec:	2b 05 50 09 04 10    	sub    eax,DWORD PTR ds:0x10040950	100042ee: R_386_32	.bss
100042f2:	89 42 1c             	mov    DWORD PTR [edx+0x1c],eax
100042f5:	50                   	push   eax
100042f6:	50                   	push   eax
100042f7:	52                   	push   edx
100042f8:	53                   	push   ebx
100042f9:	e8 fc ff ff ff       	call   100042fa <NIDesktop::handleMouse(int, int, int, int)+0x41a>	100042fa: R_386_PC32	NIDesktop::addWindow(NIWindow*)
100042fe:	83 c4 10             	add    esp,0x10
10004301:	e9 5c fe ff ff       	jmp    10004162 <NIDesktop::handleMouse(int, int, int, int)+0x282>

10004306 <clipdrawHandleMouse(int, int, int, int)>:
10004306:	83 ec 18             	sub    esp,0x18
10004309:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000430d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004311:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004315:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004319:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000431b: R_386_32	mouseDesktop
1000431f:	e8 fc ff ff ff       	call   10004320 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004320: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004324:	83 c4 2c             	add    esp,0x2c
10004327:	c3                   	ret    

10004328 <drawVGAChar(int, int, int)>:
10004328:	55                   	push   ebp
10004329:	57                   	push   edi
1000432a:	56                   	push   esi
1000432b:	53                   	push   ebx
1000432c:	31 db                	xor    ebx,ebx
1000432e:	83 ec 1c             	sub    esp,0x1c
10004331:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10004335:	c1 e0 04             	shl    eax,0x4
10004338:	89 04 24             	mov    DWORD PTR [esp],eax
1000433b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000433f:	c1 e0 04             	shl    eax,0x4
10004342:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004346:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000434a:	c1 e0 03             	shl    eax,0x3
1000434d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004351:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004354:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10004358:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	1000435b: R_386_32	cp
1000435f:	8d 3c 19             	lea    edi,[ecx+ebx*1]
10004362:	31 f6                	xor    esi,esi
10004364:	84 c0                	test   al,al
10004366:	79 22                	jns    1000438a <drawVGAChar(int, int, int)+0x62>
10004368:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
1000436c:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000436e: R_386_32	screen
10004372:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004374:	6a 00                	push   0x0
10004376:	57                   	push   edi
10004377:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000437b:	8d 2c 06             	lea    ebp,[esi+eax*1]
1000437e:	55                   	push   ebp
1000437f:	52                   	push   edx
10004380:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10004383:	83 c4 10             	add    esp,0x10
10004386:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
1000438a:	d1 e0                	shl    eax,1
1000438c:	46                   	inc    esi
1000438d:	83 fe 08             	cmp    esi,0x8
10004390:	75 d2                	jne    10004364 <drawVGAChar(int, int, int)+0x3c>
10004392:	43                   	inc    ebx
10004393:	83 fb 10             	cmp    ebx,0x10
10004396:	75 b9                	jne    10004351 <drawVGAChar(int, int, int)+0x29>
10004398:	83 c4 1c             	add    esp,0x1c
1000439b:	5b                   	pop    ebx
1000439c:	5e                   	pop    esi
1000439d:	5f                   	pop    edi
1000439e:	5d                   	pop    ebp
1000439f:	c3                   	ret    

100043a0 <monikaBsod(char*)>:
100043a0:	55                   	push   ebp
100043a1:	57                   	push   edi
100043a2:	31 ff                	xor    edi,edi
100043a4:	56                   	push   esi
100043a5:	53                   	push   ebx
100043a6:	31 db                	xor    ebx,ebx
100043a8:	83 ec 24             	sub    esp,0x24
100043ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100043ac: R_386_32	screen
100043b0:	8b 10                	mov    edx,DWORD PTR [eax]
100043b2:	68 ff ff ff 00       	push   0xffffff
100043b7:	50                   	push   eax
100043b8:	ff 52 40             	call   DWORD PTR [edx+0x40]
100043bb:	83 c4 10             	add    esp,0x10
100043be:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	100043c0: R_386_32	justMonika
100043c4:	8d 43 01             	lea    eax,[ebx+0x1]
100043c7:	84 c9                	test   cl,cl
100043c9:	79 0e                	jns    100043d9 <monikaBsod(char*)+0x39>
100043cb:	8d 51 80             	lea    edx,[ecx-0x80]
100043ce:	83 c3 02             	add    ebx,0x2
100043d1:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	100043d3: R_386_32	justMonika
100043d7:	eb 04                	jmp    100043dd <monikaBsod(char*)+0x3d>
100043d9:	89 c3                	mov    ebx,eax
100043db:	b2 01                	mov    dl,0x1
100043dd:	0f b6 c1             	movzx  eax,cl
100043e0:	83 e1 03             	and    ecx,0x3
100043e3:	89 c6                	mov    esi,eax
100043e5:	6b c9 55             	imul   ecx,ecx,0x55
100043e8:	c1 fe 05             	sar    esi,0x5
100043eb:	c1 f8 02             	sar    eax,0x2
100043ee:	83 e6 03             	and    esi,0x3
100043f1:	83 e0 07             	and    eax,0x7
100043f4:	6b f6 55             	imul   esi,esi,0x55
100043f7:	6b c0 24             	imul   eax,eax,0x24
100043fa:	c1 e6 10             	shl    esi,0x10
100043fd:	c1 e0 08             	shl    eax,0x8
10004400:	09 f0                	or     eax,esi
10004402:	31 f6                	xor    esi,esi
10004404:	09 c8                	or     eax,ecx
10004406:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000440a:	0f b6 c2             	movzx  eax,dl
1000440d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004411:	8d 04 37             	lea    eax,[edi+esi*1]
10004414:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10004418:	7f 10                	jg     1000442a <monikaBsod(char*)+0x8a>
1000441a:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
1000441e:	81 ff ff af 04 00    	cmp    edi,0x4afff
10004424:	7e 98                	jle    100043be <monikaBsod(char*)+0x1e>
10004426:	31 db                	xor    ebx,ebx
10004428:	eb 25                	jmp    1000444f <monikaBsod(char*)+0xaf>
1000442a:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000442c: R_386_32	screen
10004430:	b9 80 02 00 00       	mov    ecx,0x280
10004435:	8b 2a                	mov    ebp,DWORD PTR [edx]
10004437:	46                   	inc    esi
10004438:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000443c:	99                   	cdq    
1000443d:	f7 f9                	idiv   ecx
1000443f:	50                   	push   eax
10004440:	52                   	push   edx
10004441:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004443: R_386_32	screen
10004447:	ff 55 24             	call   DWORD PTR [ebp+0x24]
1000444a:	83 c4 10             	add    esp,0x10
1000444d:	eb c2                	jmp    10004411 <monikaBsod(char*)+0x71>
1000444f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10004453:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
10004457:	84 c0                	test   al,al
10004459:	74 1d                	je     10004478 <monikaBsod(char*)+0xd8>
1000445b:	b9 19 00 00 00       	mov    ecx,0x19
10004460:	52                   	push   edx
10004461:	50                   	push   eax
10004462:	89 d8                	mov    eax,ebx
10004464:	43                   	inc    ebx
10004465:	99                   	cdq    
10004466:	f7 f9                	idiv   ecx
10004468:	83 c0 0a             	add    eax,0xa
1000446b:	42                   	inc    edx
1000446c:	50                   	push   eax
1000446d:	52                   	push   edx
1000446e:	e8 fc ff ff ff       	call   1000446f <monikaBsod(char*)+0xcf>	1000446f: R_386_PC32	drawVGAChar(int, int, int)
10004473:	83 c4 10             	add    esp,0x10
10004476:	eb d7                	jmp    1000444f <monikaBsod(char*)+0xaf>
10004478:	f4                   	hlt    
10004479:	eb fd                	jmp    10004478 <monikaBsod(char*)+0xd8>
1000447b:	90                   	nop

1000447c <NIWindow::invalidate()>:
1000447c:	53                   	push   ebx
1000447d:	83 ec 08             	sub    esp,0x8
10004480:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004484:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004488:	74 1d                	je     100044a7 <NIWindow::invalidate()+0x2b>
1000448a:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
1000448e:	74 17                	je     100044a7 <NIWindow::invalidate()+0x2b>
10004490:	83 ec 0c             	sub    esp,0xc
10004493:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004496:	e8 fc ff ff ff       	call   10004497 <NIWindow::invalidate()+0x1b>	10004497: R_386_PC32	free
1000449b:	59                   	pop    ecx
1000449c:	ff 73 14             	push   DWORD PTR [ebx+0x14]
1000449f:	e8 fc ff ff ff       	call   100044a0 <NIWindow::invalidate()+0x24>	100044a0: R_386_PC32	free
100044a4:	83 c4 10             	add    esp,0x10
100044a7:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100044ae:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100044b5:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
100044b9:	83 c4 08             	add    esp,0x8
100044bc:	5b                   	pop    ebx
100044bd:	c3                   	ret    

100044be <NIWindow::putpixel(int, int, unsigned int)>:
100044be:	56                   	push   esi
100044bf:	53                   	push   ebx
100044c0:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100044c4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100044c8:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
100044cb:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
100044cf:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100044d3:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100044d7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100044da:	83 fe 04             	cmp    esi,0x4
100044dd:	75 05                	jne    100044e4 <NIWindow::putpixel(int, int, unsigned int)+0x26>
100044df:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
100044e2:	eb 0e                	jmp    100044f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100044e4:	83 fe 02             	cmp    esi,0x2
100044e7:	75 06                	jne    100044ef <NIWindow::putpixel(int, int, unsigned int)+0x31>
100044e9:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
100044ed:	eb 03                	jmp    100044f2 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100044ef:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
100044f2:	5b                   	pop    ebx
100044f3:	5e                   	pop    esi
100044f4:	c3                   	ret    
100044f5:	90                   	nop

100044f6 <NIWindow::rerender()>:
100044f6:	55                   	push   ebp
100044f7:	57                   	push   edi
100044f8:	56                   	push   esi
100044f9:	53                   	push   ebx
100044fa:	83 ec 0c             	sub    esp,0xc
100044fd:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004501:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004505:	74 0c                	je     10004513 <NIWindow::rerender()+0x1d>
10004507:	83 ec 0c             	sub    esp,0xc
1000450a:	53                   	push   ebx
1000450b:	e8 fc ff ff ff       	call   1000450c <NIWindow::rerender()+0x16>	1000450c: R_386_PC32	NIWindow::invalidate()
10004510:	83 c4 10             	add    esp,0x10
10004513:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10004516:	83 ec 0c             	sub    esp,0xc
10004519:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
1000451c:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004523:	50                   	push   eax
10004524:	e8 fc ff ff ff       	call   10004525 <NIWindow::rerender()+0x2f>	10004525: R_386_PC32	malloc
10004529:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
1000452d:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004530:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004534:	89 34 24             	mov    DWORD PTR [esp],esi
10004537:	e8 fc ff ff ff       	call   10004538 <NIWindow::rerender()+0x42>	10004538: R_386_PC32	malloc
1000453c:	83 c4 10             	add    esp,0x10
1000453f:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004542:	31 c0                	xor    eax,eax
10004544:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004547:	7e 6a                	jle    100045b3 <NIWindow::rerender()+0xbd>
10004549:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10004550:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004553:	01 d6                	add    esi,edx
10004555:	83 f8 06             	cmp    eax,0x6
10004558:	7f 1b                	jg     10004575 <NIWindow::rerender()+0x7f>
1000455a:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	1000455d: R_386_32	curveLookup7
10004561:	66 89 0e             	mov    WORD PTR [esi],cx
10004564:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
10004567:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	1000456a: R_386_32	curveLookup7
1000456e:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
10004573:	eb 3b                	jmp    100045b0 <NIWindow::rerender()+0xba>
10004575:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004578:	8d 79 fa             	lea    edi,[ecx-0x6]
1000457b:	39 c7                	cmp    edi,eax
1000457d:	7f 22                	jg     100045a1 <NIWindow::rerender()+0xab>
1000457f:	29 c1                	sub    ecx,eax
10004581:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004584: R_386_32	curveLookup7
10004588:	66 89 0e             	mov    WORD PTR [esi],cx
1000458b:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000458e:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004591:	29 c1                	sub    ecx,eax
10004593:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004596: R_386_32	curveLookup7
1000459a:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
1000459f:	eb 0f                	jmp    100045b0 <NIWindow::rerender()+0xba>
100045a1:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
100045a6:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100045a9:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
100045b0:	40                   	inc    eax
100045b1:	eb 91                	jmp    10004544 <NIWindow::rerender()+0x4e>
100045b3:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
100045b7:	31 ff                	xor    edi,edi
100045b9:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
100045bc:	7e 30                	jle    100045ee <NIWindow::rerender()+0xf8>
100045be:	31 c0                	xor    eax,eax
100045c0:	83 ff 19             	cmp    edi,0x19
100045c3:	0f 9e c0             	setle  al
100045c6:	31 ed                	xor    ebp,ebp
100045c8:	89 c6                	mov    esi,eax
100045ca:	4e                   	dec    esi
100045cb:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
100045d1:	81 c6 ff ff ff 00    	add    esi,0xffffff
100045d7:	39 6b 20             	cmp    DWORD PTR [ebx+0x20],ebp
100045da:	7e 0f                	jle    100045eb <NIWindow::rerender()+0xf5>
100045dc:	56                   	push   esi
100045dd:	57                   	push   edi
100045de:	55                   	push   ebp
100045df:	45                   	inc    ebp
100045e0:	53                   	push   ebx
100045e1:	e8 fc ff ff ff       	call   100045e2 <NIWindow::rerender()+0xec>	100045e2: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100045e6:	83 c4 10             	add    esp,0x10
100045e9:	eb ec                	jmp    100045d7 <NIWindow::rerender()+0xe1>
100045eb:	47                   	inc    edi
100045ec:	eb cb                	jmp    100045b9 <NIWindow::rerender()+0xc3>
100045ee:	83 c4 0c             	add    esp,0xc
100045f1:	5b                   	pop    ebx
100045f2:	5e                   	pop    esi
100045f3:	5f                   	pop    edi
100045f4:	5d                   	pop    ebp
100045f5:	c3                   	ret    

100045f6 <NIWindow::changeContext(NIContext*, int, int)>:
100045f6:	55                   	push   ebp
100045f7:	57                   	push   edi
100045f8:	56                   	push   esi
100045f9:	53                   	push   ebx
100045fa:	83 ec 18             	sub    esp,0x18
100045fd:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004601:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004605:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10004609:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000460d:	53                   	push   ebx
1000460e:	e8 fc ff ff ff       	call   1000460f <NIWindow::changeContext(NIContext*, int, int)+0x19>	1000460f: R_386_PC32	NIWindow::invalidate()
10004613:	89 33                	mov    DWORD PTR [ebx],esi
10004615:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
10004618:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
1000461b:	83 c4 10             	add    esp,0x10
1000461e:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004624:	83 f8 08             	cmp    eax,0x8
10004627:	7f 09                	jg     10004632 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10004629:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10004630:	eb 15                	jmp    10004647 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004632:	83 f8 10             	cmp    eax,0x10
10004635:	7f 09                	jg     10004640 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004637:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
1000463e:	eb 07                	jmp    10004647 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004640:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004647:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
1000464b:	83 c4 0c             	add    esp,0xc
1000464e:	5b                   	pop    ebx
1000464f:	5e                   	pop    esi
10004650:	5f                   	pop    edi
10004651:	5d                   	pop    ebp
10004652:	e9 9f fe ff ff       	jmp    100044f6 <NIWindow::rerender()>
10004657:	90                   	nop

10004658 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10004658:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000465c:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10004660:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
10004664:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004667:	c7 40 3c 00 00 00 00 	mov    DWORD PTR [eax+0x3c],0x0
1000466e:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10004672:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
10004676:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004679:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004680:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10004687:	e9 6a ff ff ff       	jmp    100045f6 <NIWindow::changeContext(NIContext*, int, int)>

1000468c <NIWindow::request()>:
1000468c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004690:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
10004694:	75 05                	jne    1000469b <NIWindow::request()+0xf>
10004696:	e9 5b fe ff ff       	jmp    100044f6 <NIWindow::rerender()>
1000469b:	c3                   	ret    

1000469c <NIWindow::SHADOW_TEST()>:
1000469c:	55                   	push   ebp
1000469d:	57                   	push   edi
1000469e:	56                   	push   esi
1000469f:	53                   	push   ebx
100046a0:	83 ec 28             	sub    esp,0x28
100046a3:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
100046a7:	53                   	push   ebx
100046a8:	e8 fc ff ff ff       	call   100046a9 <NIWindow::SHADOW_TEST()+0xd>	100046a9: R_386_PC32	NIWindow::request()
100046ad:	83 c4 10             	add    esp,0x10
100046b0:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100046b3:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100046b6:	74 10                	je     100046c8 <NIWindow::SHADOW_TEST()+0x2c>
100046b8:	83 ec 0c             	sub    esp,0xc
100046bb:	68 5c cb 00 10       	push   0x1000cb5c	100046bc: R_386_32	.text
100046c0:	e8 fc ff ff ff       	call   100046c1 <NIWindow::SHADOW_TEST()+0x25>	100046c1: R_386_PC32	KePanic(char const*)
100046c5:	83 c4 10             	add    esp,0x10
100046c8:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100046cc:	0f 85 28 01 00 00    	jne    100047fa <NIWindow::SHADOW_TEST()+0x15e>
100046d2:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
100046da:	31 ff                	xor    edi,edi
100046dc:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
100046df:	0f 8e 15 01 00 00    	jle    100047fa <NIWindow::SHADOW_TEST()+0x15e>
100046e5:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100046e8:	8d 04 b8             	lea    eax,[eax+edi*4]
100046eb:	0f b7 30             	movzx  esi,WORD PTR [eax]
100046ee:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
100046f2:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
100046f6:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100046fa:	89 34 24             	mov    DWORD PTR [esp],esi
100046fd:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10004700:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
10004703:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10004707:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
1000470a:	0f 8e d4 00 00 00    	jle    100047e4 <NIWindow::SHADOW_TEST()+0x148>
10004710:	83 ff 05             	cmp    edi,0x5
10004713:	7e 1f                	jle    10004734 <NIWindow::SHADOW_TEST()+0x98>
10004715:	8d 41 fb             	lea    eax,[ecx-0x5]
10004718:	39 f8                	cmp    eax,edi
1000471a:	7e 18                	jle    10004734 <NIWindow::SHADOW_TEST()+0x98>
1000471c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004720:	83 c0 05             	add    eax,0x5
10004723:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004726:	7d 0c                	jge    10004734 <NIWindow::SHADOW_TEST()+0x98>
10004728:	8d 45 fb             	lea    eax,[ebp-0x5]
1000472b:	3b 04 24             	cmp    eax,DWORD PTR [esp]
1000472e:	0f 8f a8 00 00 00    	jg     100047dc <NIWindow::SHADOW_TEST()+0x140>
10004734:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
10004738:	be ea 01 00 00       	mov    esi,0x1ea
1000473d:	29 f9                	sub    ecx,edi
1000473f:	89 f0                	mov    eax,esi
10004741:	83 c1 04             	add    ecx,0x4
10004744:	99                   	cdq    
10004745:	f7 f9                	idiv   ecx
10004747:	89 c1                	mov    ecx,eax
10004749:	89 f0                	mov    eax,esi
1000474b:	99                   	cdq    
1000474c:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
10004750:	83 f8 0a             	cmp    eax,0xa
10004753:	7d 05                	jge    1000475a <NIWindow::SHADOW_TEST()+0xbe>
10004755:	b8 0a 00 00 00       	mov    eax,0xa
1000475a:	39 c1                	cmp    ecx,eax
1000475c:	7d 02                	jge    10004760 <NIWindow::SHADOW_TEST()+0xc4>
1000475e:	89 c1                	mov    ecx,eax
10004760:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
10004763:	b8 ea 01 00 00       	mov    eax,0x1ea
10004768:	83 c5 04             	add    ebp,0x4
1000476b:	99                   	cdq    
1000476c:	f7 fd                	idiv   ebp
1000476e:	89 c6                	mov    esi,eax
10004770:	83 f8 0a             	cmp    eax,0xa
10004773:	7d 05                	jge    1000477a <NIWindow::SHADOW_TEST()+0xde>
10004775:	be 0a 00 00 00       	mov    esi,0xa
1000477a:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000477d:	8d 68 05             	lea    ebp,[eax+0x5]
10004780:	b8 ea 01 00 00       	mov    eax,0x1ea
10004785:	99                   	cdq    
10004786:	f7 fd                	idiv   ebp
10004788:	39 c6                	cmp    esi,eax
1000478a:	7d 02                	jge    1000478e <NIWindow::SHADOW_TEST()+0xf2>
1000478c:	89 c6                	mov    esi,eax
1000478e:	89 f0                	mov    eax,esi
10004790:	89 ca                	mov    edx,ecx
10004792:	0f af c6             	imul   eax,esi
10004795:	0f af d1             	imul   edx,ecx
10004798:	0f af f1             	imul   esi,ecx
1000479b:	01 d0                	add    eax,edx
1000479d:	8d 04 c6             	lea    eax,[esi+eax*8]
100047a0:	c1 f8 08             	sar    eax,0x8
100047a3:	83 f8 66             	cmp    eax,0x66
100047a6:	7e 46                	jle    100047ee <NIWindow::SHADOW_TEST()+0x152>
100047a8:	8d 50 9a             	lea    edx,[eax-0x66]
100047ab:	d1 fa                	sar    edx,1
100047ad:	8d 42 66             	lea    eax,[edx+0x66]
100047b0:	83 f8 73             	cmp    eax,0x73
100047b3:	7e 39                	jle    100047ee <NIWindow::SHADOW_TEST()+0x152>
100047b5:	83 ea 0d             	sub    edx,0xd
100047b8:	c1 fa 02             	sar    edx,0x2
100047bb:	8d 42 73             	lea    eax,[edx+0x73]
100047be:	83 f8 7f             	cmp    eax,0x7f
100047c1:	7f 19                	jg     100047dc <NIWindow::SHADOW_TEST()+0x140>
100047c3:	50                   	push   eax
100047c4:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100047c7:	01 f8                	add    eax,edi
100047c9:	50                   	push   eax
100047ca:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100047ce:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
100047d1:	50                   	push   eax
100047d2:	ff 33                	push   DWORD PTR [ebx]
100047d4:	e8 fc ff ff ff       	call   100047d5 <NIWindow::SHADOW_TEST()+0x139>	100047d5: R_386_PC32	NIContext::drvDarken4(int, int, int)
100047d9:	83 c4 10             	add    esp,0x10
100047dc:	ff 04 24             	inc    DWORD PTR [esp]
100047df:	e9 19 ff ff ff       	jmp    100046fd <NIWindow::SHADOW_TEST()+0x61>
100047e4:	47                   	inc    edi
100047e5:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
100047e9:	e9 ee fe ff ff       	jmp    100046dc <NIWindow::SHADOW_TEST()+0x40>
100047ee:	83 f8 0a             	cmp    eax,0xa
100047f1:	7d d0                	jge    100047c3 <NIWindow::SHADOW_TEST()+0x127>
100047f3:	b8 0a 00 00 00       	mov    eax,0xa
100047f8:	eb c9                	jmp    100047c3 <NIWindow::SHADOW_TEST()+0x127>
100047fa:	83 c4 1c             	add    esp,0x1c
100047fd:	5b                   	pop    ebx
100047fe:	5e                   	pop    esi
100047ff:	5f                   	pop    edi
10004800:	5d                   	pop    ebp
10004801:	c3                   	ret    

10004802 <NIWindow::realdraw()>:
10004802:	55                   	push   ebp
10004803:	57                   	push   edi
10004804:	56                   	push   esi
10004805:	53                   	push   ebx
10004806:	83 ec 18             	sub    esp,0x18
10004809:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000480d:	53                   	push   ebx
1000480e:	e8 fc ff ff ff       	call   1000480f <NIWindow::realdraw()+0xd>	1000480f: R_386_PC32	NIWindow::request()
10004813:	83 c4 10             	add    esp,0x10
10004816:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004819:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
1000481c:	74 10                	je     1000482e <NIWindow::realdraw()+0x2c>
1000481e:	83 ec 0c             	sub    esp,0xc
10004821:	68 5c cb 00 10       	push   0x1000cb5c	10004822: R_386_32	.text
10004826:	e8 fc ff ff ff       	call   10004827 <NIWindow::realdraw()+0x25>	10004827: R_386_PC32	KePanic(char const*)
1000482b:	83 c4 10             	add    esp,0x10
1000482e:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004832:	75 46                	jne    1000487a <NIWindow::realdraw()+0x78>
10004834:	31 f6                	xor    esi,esi
10004836:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
10004839:	7e 3f                	jle    1000487a <NIWindow::realdraw()+0x78>
1000483b:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000483e:	8d 04 b0             	lea    eax,[eax+esi*4]
10004841:	0f b7 28             	movzx  ebp,WORD PTR [eax]
10004844:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
10004848:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000484b:	89 c2                	mov    edx,eax
1000484d:	29 fa                	sub    edx,edi
1000484f:	39 ea                	cmp    edx,ebp
10004851:	7e 24                	jle    10004877 <NIWindow::realdraw()+0x75>
10004853:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004856:	0f af c6             	imul   eax,esi
10004859:	01 e8                	add    eax,ebp
1000485b:	ff 34 82             	push   DWORD PTR [edx+eax*4]
1000485e:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004861:	01 f0                	add    eax,esi
10004863:	50                   	push   eax
10004864:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10004867:	01 e8                	add    eax,ebp
10004869:	45                   	inc    ebp
1000486a:	50                   	push   eax
1000486b:	ff 33                	push   DWORD PTR [ebx]
1000486d:	e8 fc ff ff ff       	call   1000486e <NIWindow::realdraw()+0x6c>	1000486e: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004872:	83 c4 10             	add    esp,0x10
10004875:	eb d1                	jmp    10004848 <NIWindow::realdraw()+0x46>
10004877:	46                   	inc    esi
10004878:	eb bc                	jmp    10004836 <NIWindow::realdraw()+0x34>
1000487a:	83 c4 0c             	add    esp,0xc
1000487d:	5b                   	pop    ebx
1000487e:	5e                   	pop    esi
1000487f:	5f                   	pop    edi
10004880:	5d                   	pop    ebp
10004881:	c3                   	ret    

10004882 <read_u32>:
10004882:	8b 00                	mov    eax,DWORD PTR [eax]
10004884:	86 e0                	xchg   al,ah
10004886:	c1 c0 10             	rol    eax,0x10
10004889:	86 e0                	xchg   al,ah
1000488b:	c3                   	ret    

1000488c <write_u32>:
1000488c:	86 f2                	xchg   dl,dh
1000488e:	c1 c2 10             	rol    edx,0x10
10004891:	86 f2                	xchg   dl,dh
10004893:	89 10                	mov    DWORD PTR [eax],edx
10004895:	c3                   	ret    

10004896 <get_sample>:
10004896:	53                   	push   ebx
10004897:	89 c2                	mov    edx,eax
10004899:	8b 58 10             	mov    ebx,DWORD PTR [eax+0x10]
1000489c:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000489f:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
100048a2:	d3 f8                	sar    eax,cl
100048a4:	23 02                	and    eax,DWORD PTR [edx]
100048a6:	2b 4a 0c             	sub    ecx,DWORD PTR [edx+0xc]
100048a9:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
100048ac:	83 f9 07             	cmp    ecx,0x7
100048af:	76 0a                	jbe    100048bb <get_sample+0x25>
100048b1:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
100048b4:	89 4a 04             	mov    DWORD PTR [edx+0x4],ecx
100048b7:	43                   	inc    ebx
100048b8:	89 5a 10             	mov    DWORD PTR [edx+0x10],ebx
100048bb:	5b                   	pop    ebx
100048bc:	c3                   	ret    

100048bd <calculate_image_size>:
100048bd:	57                   	push   edi
100048be:	56                   	push   esi
100048bf:	53                   	push   ebx
100048c0:	85 c9                	test   ecx,ecx
100048c2:	0f 84 00 01 00 00    	je     100049c8 <calculate_image_size+0x10b>
100048c8:	89 c7                	mov    edi,eax
100048ca:	85 c0                	test   eax,eax
100048cc:	0f 84 f6 00 00 00    	je     100049c8 <calculate_image_size+0x10b>
100048d2:	8d 42 ff             	lea    eax,[edx-0x1]
100048d5:	bb 47 00 00 00       	mov    ebx,0x47
100048da:	85 d0                	test   eax,edx
100048dc:	0f 85 eb 00 00 00    	jne    100049cd <calculate_image_size+0x110>
100048e2:	8b b7 f0 00 00 00    	mov    esi,DWORD PTR [edi+0xf0]
100048e8:	83 fa 01             	cmp    edx,0x1
100048eb:	0f 84 a4 00 00 00    	je     10004995 <calculate_image_size+0xd8>
100048f1:	83 fa 02             	cmp    edx,0x2
100048f4:	0f 84 a2 00 00 00    	je     1000499c <calculate_image_size+0xdf>
100048fa:	83 fa 04             	cmp    edx,0x4
100048fd:	0f 84 a0 00 00 00    	je     100049a3 <calculate_image_size+0xe6>
10004903:	8d 82 00 ff ff ff    	lea    eax,[edx-0x100]
10004909:	a9 ff fe ff ff       	test   eax,0xfffffeff
1000490e:	75 3a                	jne    1000494a <calculate_image_size+0x8d>
10004910:	bb 50 00 00 00       	mov    ebx,0x50
10004915:	85 f6                	test   esi,esi
10004917:	0f 84 b0 00 00 00    	je     100049cd <calculate_image_size+0x110>
1000491d:	0f b6 87 f8 00 00 00 	movzx  eax,BYTE PTR [edi+0xf8]
10004924:	0f af 87 b0 09 00 00 	imul   eax,DWORD PTR [edi+0x9b0]
1000492b:	bb 03 00 00 00       	mov    ebx,0x3
10004930:	f7 e6                	mul    esi
10004932:	0f 80 95 00 00 00    	jo     100049cd <calculate_image_size+0x110>
10004938:	8d 70 0f             	lea    esi,[eax+0xf]
1000493b:	83 fe 0e             	cmp    esi,0xe
1000493e:	0f 86 89 00 00 00    	jbe    100049cd <calculate_image_size+0x110>
10004944:	c1 ee 03             	shr    esi,0x3
10004947:	4e                   	dec    esi
10004948:	eb 60                	jmp    100049aa <calculate_image_size+0xed>
1000494a:	bb 47 00 00 00       	mov    ebx,0x47
1000494f:	83 fa 40             	cmp    edx,0x40
10004952:	75 14                	jne    10004968 <calculate_image_size+0xab>
10004954:	80 bf f9 00 00 00 00 	cmp    BYTE PTR [edi+0xf9],0x0
1000495b:	75 70                	jne    100049cd <calculate_image_size+0x110>
1000495d:	80 bf f8 00 00 00 08 	cmp    BYTE PTR [edi+0xf8],0x8
10004964:	76 44                	jbe    100049aa <calculate_image_size+0xed>
10004966:	eb 65                	jmp    100049cd <calculate_image_size+0x110>
10004968:	83 fa 10             	cmp    edx,0x10
1000496b:	75 19                	jne    10004986 <calculate_image_size+0xc9>
1000496d:	80 bf f9 00 00 00 00 	cmp    BYTE PTR [edi+0xf9],0x0
10004974:	75 57                	jne    100049cd <calculate_image_size+0x110>
10004976:	80 bf f8 00 00 00 08 	cmp    BYTE PTR [edi+0xf8],0x8
1000497d:	77 4e                	ja     100049cd <calculate_image_size+0x110>
1000497f:	ba 02 00 00 00       	mov    edx,0x2
10004984:	eb 29                	jmp    100049af <calculate_image_size+0xf2>
10004986:	83 fa 20             	cmp    edx,0x20
10004989:	75 42                	jne    100049cd <calculate_image_size+0x110>
1000498b:	66 83 bf f8 00 00 00 10 	cmp    WORD PTR [edi+0xf8],0x10
10004993:	75 38                	jne    100049cd <calculate_image_size+0x110>
10004995:	ba 04 00 00 00       	mov    edx,0x4
1000499a:	eb 13                	jmp    100049af <calculate_image_size+0xf2>
1000499c:	ba 08 00 00 00       	mov    edx,0x8
100049a1:	eb 0c                	jmp    100049af <calculate_image_size+0xf2>
100049a3:	ba 03 00 00 00       	mov    edx,0x3
100049a8:	eb 05                	jmp    100049af <calculate_image_size+0xf2>
100049aa:	ba 01 00 00 00       	mov    edx,0x1
100049af:	bb 03 00 00 00       	mov    ebx,0x3
100049b4:	89 f0                	mov    eax,esi
100049b6:	f7 e2                	mul    edx
100049b8:	70 13                	jo     100049cd <calculate_image_size+0x110>
100049ba:	f7 a7 f4 00 00 00    	mul    DWORD PTR [edi+0xf4]
100049c0:	70 0b                	jo     100049cd <calculate_image_size+0x110>
100049c2:	89 01                	mov    DWORD PTR [ecx],eax
100049c4:	31 db                	xor    ebx,ebx
100049c6:	eb 05                	jmp    100049cd <calculate_image_size+0x110>
100049c8:	bb 50 00 00 00       	mov    ebx,0x50
100049cd:	89 d8                	mov    eax,ebx
100049cf:	5b                   	pop    ebx
100049d0:	5e                   	pop    esi
100049d1:	5f                   	pop    edi
100049d2:	c3                   	ret    

100049d3 <is_critical_chunk>:
100049d3:	85 c0                	test   eax,eax
100049d5:	74 0d                	je     100049e4 <is_critical_chunk+0x11>
100049d7:	8a 40 08             	mov    al,BYTE PTR [eax+0x8]
100049da:	c0 e8 05             	shr    al,0x5
100049dd:	83 f0 01             	xor    eax,0x1
100049e0:	83 e0 01             	and    eax,0x1
100049e3:	c3                   	ret    
100049e4:	31 c0                	xor    eax,eax
100049e6:	c3                   	ret    

100049e7 <paeth>:
100049e7:	55                   	push   ebp
100049e8:	57                   	push   edi
100049e9:	56                   	push   esi
100049ea:	53                   	push   ebx
100049eb:	89 cf                	mov    edi,ecx
100049ed:	0f b6 da             	movzx  ebx,dl
100049f0:	0f b6 f1             	movzx  esi,cl
100049f3:	29 f3                	sub    ebx,esi
100049f5:	0f b6 f0             	movzx  esi,al
100049f8:	01 f3                	add    ebx,esi
100049fa:	0f bf db             	movsx  ebx,bx
100049fd:	0f b6 f2             	movzx  esi,dl
10004a00:	89 dd                	mov    ebp,ebx
10004a02:	29 f5                	sub    ebp,esi
10004a04:	89 ee                	mov    esi,ebp
10004a06:	c1 fd 1f             	sar    ebp,0x1f
10004a09:	31 ee                	xor    esi,ebp
10004a0b:	29 ee                	sub    esi,ebp
10004a0d:	0f b6 c9             	movzx  ecx,cl
10004a10:	89 dd                	mov    ebp,ebx
10004a12:	29 cd                	sub    ebp,ecx
10004a14:	89 e9                	mov    ecx,ebp
10004a16:	c1 fd 1f             	sar    ebp,0x1f
10004a19:	31 e9                	xor    ecx,ebp
10004a1b:	29 e9                	sub    ecx,ebp
10004a1d:	0f b6 e8             	movzx  ebp,al
10004a20:	29 eb                	sub    ebx,ebp
10004a22:	89 dd                	mov    ebp,ebx
10004a24:	c1 fd 1f             	sar    ebp,0x1f
10004a27:	31 eb                	xor    ebx,ebp
10004a29:	29 eb                	sub    ebx,ebp
10004a2b:	89 cd                	mov    ebp,ecx
10004a2d:	66 39 ce             	cmp    si,cx
10004a30:	7f 02                	jg     10004a34 <paeth+0x4d>
10004a32:	89 f5                	mov    ebp,esi
10004a34:	66 39 dd             	cmp    bp,bx
10004a37:	7d 09                	jge    10004a42 <paeth+0x5b>
10004a39:	66 39 ce             	cmp    si,cx
10004a3c:	7f 06                	jg     10004a44 <paeth+0x5d>
10004a3e:	89 d7                	mov    edi,edx
10004a40:	eb 02                	jmp    10004a44 <paeth+0x5d>
10004a42:	89 c7                	mov    edi,eax
10004a44:	89 f8                	mov    eax,edi
10004a46:	5b                   	pop    ebx
10004a47:	5e                   	pop    esi
10004a48:	5f                   	pop    edi
10004a49:	5d                   	pop    ebp
10004a4a:	c3                   	ret    

10004a4b <sample_to_target>:
10004a4b:	55                   	push   ebp
10004a4c:	57                   	push   edi
10004a4d:	56                   	push   esi
10004a4e:	53                   	push   ebx
10004a4f:	89 ce                	mov    esi,ecx
10004a51:	39 ca                	cmp    edx,ecx
10004a53:	75 0c                	jne    10004a61 <sample_to_target+0x16>
10004a55:	89 c3                	mov    ebx,eax
10004a57:	89 c2                	mov    edx,eax
10004a59:	3b 4c 24 14          	cmp    ecx,DWORD PTR [esp+0x14]
10004a5d:	75 0d                	jne    10004a6c <sample_to_target+0x21>
10004a5f:	eb 4a                	jmp    10004aab <sample_to_target+0x60>
10004a61:	0f b7 c0             	movzx  eax,ax
10004a64:	29 ca                	sub    edx,ecx
10004a66:	88 d1                	mov    cl,dl
10004a68:	d3 f8                	sar    eax,cl
10004a6a:	89 c2                	mov    edx,eax
10004a6c:	3b 74 24 14          	cmp    esi,DWORD PTR [esp+0x14]
10004a70:	76 0d                	jbe    10004a7f <sample_to_target+0x34>
10004a72:	0f b7 da             	movzx  ebx,dx
10004a75:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
10004a79:	89 f1                	mov    ecx,esi
10004a7b:	d3 fb                	sar    ebx,cl
10004a7d:	eb 2c                	jmp    10004aab <sample_to_target+0x60>
10004a7f:	89 f0                	mov    eax,esi
10004a81:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10004a85:	89 f3                	mov    ebx,esi
10004a87:	29 d9                	sub    ecx,ebx
10004a89:	31 db                	xor    ebx,ebx
10004a8b:	0f b7 fa             	movzx  edi,dx
10004a8e:	84 c9                	test   cl,cl
10004a90:	78 0a                	js     10004a9c <sample_to_target+0x51>
10004a92:	89 fd                	mov    ebp,edi
10004a94:	d3 e5                	shl    ebp,cl
10004a96:	09 eb                	or     ebx,ebp
10004a98:	29 c1                	sub    ecx,eax
10004a9a:	eb f2                	jmp    10004a8e <sample_to_target+0x43>
10004a9c:	89 f0                	mov    eax,esi
10004a9e:	00 c8                	add    al,cl
10004aa0:	74 09                	je     10004aab <sample_to_target+0x60>
10004aa2:	0f b7 d2             	movzx  edx,dx
10004aa5:	f7 d9                	neg    ecx
10004aa7:	d3 fa                	sar    edx,cl
10004aa9:	09 d3                	or     ebx,edx
10004aab:	89 d8                	mov    eax,ebx
10004aad:	5b                   	pop    ebx
10004aae:	5e                   	pop    esi
10004aaf:	5f                   	pop    edi
10004ab0:	5d                   	pop    ebp
10004ab1:	c3                   	ret    

10004ab2 <check_chrm_int>:
10004ab2:	ba 01 00 00 00       	mov    edx,0x1
10004ab7:	85 c0                	test   eax,eax
10004ab9:	74 37                	je     10004af2 <check_chrm_int+0x40>
10004abb:	ba 22 00 00 00       	mov    edx,0x22
10004ac0:	83 38 00             	cmp    DWORD PTR [eax],0x0
10004ac3:	78 2d                	js     10004af2 <check_chrm_int+0x40>
10004ac5:	83 78 04 00          	cmp    DWORD PTR [eax+0x4],0x0
10004ac9:	78 27                	js     10004af2 <check_chrm_int+0x40>
10004acb:	83 78 08 00          	cmp    DWORD PTR [eax+0x8],0x0
10004acf:	78 21                	js     10004af2 <check_chrm_int+0x40>
10004ad1:	83 78 0c 00          	cmp    DWORD PTR [eax+0xc],0x0
10004ad5:	78 1b                	js     10004af2 <check_chrm_int+0x40>
10004ad7:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10004adb:	78 15                	js     10004af2 <check_chrm_int+0x40>
10004add:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10004ae1:	78 0f                	js     10004af2 <check_chrm_int+0x40>
10004ae3:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10004ae7:	78 09                	js     10004af2 <check_chrm_int+0x40>
10004ae9:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10004aec:	c1 fa 1f             	sar    edx,0x1f
10004aef:	83 e2 22             	and    edx,0x22
10004af2:	89 d0                	mov    eax,edx
10004af4:	c3                   	ret    

10004af5 <update_row_info>:
10004af5:	57                   	push   edi
10004af6:	56                   	push   esi
10004af7:	53                   	push   ebx
10004af8:	89 c2                	mov    edx,eax
10004afa:	8a 80 fc 00 00 00    	mov    al,BYTE PTR [eax+0xfc]
10004b00:	89 c7                	mov    edi,eax
10004b02:	8d 9a e0 08 00 00    	lea    ebx,[edx+0x8e0]
10004b08:	8b 8a e0 0f 00 00    	mov    ecx,DWORD PTR [edx+0xfe0]
10004b0e:	8b 82 e8 0f 00 00    	mov    eax,DWORD PTR [edx+0xfe8]
10004b14:	89 c6                	mov    esi,eax
10004b16:	c1 e6 04             	shl    esi,0x4
10004b19:	8b 74 33 04          	mov    esi,DWORD PTR [ebx+esi*1+0x4]
10004b1d:	4e                   	dec    esi
10004b1e:	39 f1                	cmp    ecx,esi
10004b20:	75 47                	jne    10004b69 <update_row_info+0x74>
10004b22:	8b 8a c0 09 00 00    	mov    ecx,DWORD PTR [edx+0x9c0]
10004b28:	39 c8                	cmp    eax,ecx
10004b2a:	75 0e                	jne    10004b3a <update_row_info+0x45>
10004b2c:	c7 42 70 06 00 00 00 	mov    DWORD PTR [edx+0x70],0x6
10004b33:	b8 4b 00 00 00       	mov    eax,0x4b
10004b38:	eb 65                	jmp    10004b9f <update_row_info+0xaa>
10004b3a:	c7 82 e0 0f 00 00 00 00 00 00 	mov    DWORD PTR [edx+0xfe0],0x0
10004b44:	40                   	inc    eax
10004b45:	89 82 e8 0f 00 00    	mov    DWORD PTR [edx+0xfe8],eax
10004b4b:	8b 82 e8 0f 00 00    	mov    eax,DWORD PTR [edx+0xfe8]
10004b51:	89 c6                	mov    esi,eax
10004b53:	c1 e6 04             	shl    esi,0x4
10004b56:	01 de                	add    esi,ebx
10004b58:	83 3e 00             	cmp    DWORD PTR [esi],0x0
10004b5b:	74 06                	je     10004b63 <update_row_info+0x6e>
10004b5d:	83 7e 04 00          	cmp    DWORD PTR [esi+0x4],0x0
10004b61:	75 13                	jne    10004b76 <update_row_info+0x81>
10004b63:	39 c1                	cmp    ecx,eax
10004b65:	7f dd                	jg     10004b44 <update_row_info+0x4f>
10004b67:	eb 0d                	jmp    10004b76 <update_row_info+0x81>
10004b69:	ff 82 e4 0f 00 00    	inc    DWORD PTR [edx+0xfe4]
10004b6f:	41                   	inc    ecx
10004b70:	89 8a e0 0f 00 00    	mov    DWORD PTR [edx+0xfe0],ecx
10004b76:	31 c0                	xor    eax,eax
10004b78:	89 fb                	mov    ebx,edi
10004b7a:	84 db                	test   bl,bl
10004b7c:	74 21                	je     10004b9f <update_row_info+0xaa>
10004b7e:	8b 9a e8 0f 00 00    	mov    ebx,DWORD PTR [edx+0xfe8]
10004b84:	8b 8a e0 0f 00 00    	mov    ecx,DWORD PTR [edx+0xfe0]
10004b8a:	0f af 0c 9d 20 d6 00 10 	imul   ecx,DWORD PTR [ebx*4+0x1000d620]	10004b8e: R_386_32	.text
10004b92:	03 0c 9d 58 d6 00 10 	add    ecx,DWORD PTR [ebx*4+0x1000d658]	10004b95: R_386_32	.text
10004b99:	89 8a e4 0f 00 00    	mov    DWORD PTR [edx+0xfe4],ecx
10004b9f:	5b                   	pop    ebx
10004ba0:	5e                   	pop    esi
10004ba1:	5f                   	pop    edi
10004ba2:	c3                   	ret    

10004ba3 <buffer_read_fn>:
10004ba3:	53                   	push   ebx
10004ba4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10004ba8:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10004bac:	8b 4a 24             	mov    ecx,DWORD PTR [edx+0x24]
10004baf:	83 c8 ff             	or     eax,0xffffffff
10004bb2:	39 d9                	cmp    ecx,ebx
10004bb4:	72 10                	jb     10004bc6 <buffer_read_fn+0x23>
10004bb6:	8b 42 28             	mov    eax,DWORD PTR [edx+0x28]
10004bb9:	01 42 10             	add    DWORD PTR [edx+0x10],eax
10004bbc:	89 5a 28             	mov    DWORD PTR [edx+0x28],ebx
10004bbf:	29 d9                	sub    ecx,ebx
10004bc1:	89 4a 24             	mov    DWORD PTR [edx+0x24],ecx
10004bc4:	31 c0                	xor    eax,eax
10004bc6:	5b                   	pop    ebx
10004bc7:	c3                   	ret    

10004bc8 <load3>:
10004bc8:	83 ec 1c             	sub    esp,0x1c
10004bcb:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10004bd3:	66 8b 10             	mov    dx,WORD PTR [eax]
10004bd6:	66 89 54 24 0c       	mov    WORD PTR [esp+0xc],dx
10004bdb:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10004bde:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
10004be2:	66 0f 6e 44 24 0c    	movd   xmm0,DWORD PTR [esp+0xc]
10004be8:	83 c4 1c             	add    esp,0x1c
10004beb:	c3                   	ret    

10004bec <check_exif>:
10004bec:	85 c0                	test   eax,eax
10004bee:	74 67                	je     10004c57 <check_exif+0x6b>
10004bf0:	53                   	push   ebx
10004bf1:	83 ec 18             	sub    esp,0x18
10004bf4:	89 c2                	mov    edx,eax
10004bf6:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10004bf9:	b8 01 00 00 00       	mov    eax,0x1
10004bfe:	85 db                	test   ebx,ebx
10004c00:	74 5b                	je     10004c5d <check_exif+0x71>
10004c02:	8b 12                	mov    edx,DWORD PTR [edx]
10004c04:	b8 11 00 00 00       	mov    eax,0x11
10004c09:	83 fa 03             	cmp    edx,0x3
10004c0c:	76 4f                	jbe    10004c5d <check_exif+0x71>
10004c0e:	b8 4f 00 00 00       	mov    eax,0x4f
10004c13:	85 d2                	test   edx,edx
10004c15:	78 46                	js     10004c5d <check_exif+0x71>
10004c17:	c7 44 24 08 49 49 2a 00 	mov    DWORD PTR [esp+0x8],0x2a4949
10004c1f:	c7 44 24 0c 4d 4d 00 2a 	mov    DWORD PTR [esp+0xc],0x2a004d4d
10004c27:	52                   	push   edx
10004c28:	6a 04                	push   0x4
10004c2a:	8d 44 24 10          	lea    eax,[esp+0x10]
10004c2e:	50                   	push   eax
10004c2f:	53                   	push   ebx
10004c30:	e8 fc ff ff ff       	call   10004c31 <check_exif+0x45>	10004c31: R_386_PC32	memcmp
10004c35:	83 c4 10             	add    esp,0x10
10004c38:	85 c0                	test   eax,eax
10004c3a:	74 21                	je     10004c5d <check_exif+0x71>
10004c3c:	50                   	push   eax
10004c3d:	6a 04                	push   0x4
10004c3f:	8d 44 24 14          	lea    eax,[esp+0x14]
10004c43:	50                   	push   eax
10004c44:	53                   	push   ebx
10004c45:	e8 fc ff ff ff       	call   10004c46 <check_exif+0x5a>	10004c46: R_386_PC32	memcmp
10004c4a:	83 c4 10             	add    esp,0x10
10004c4d:	85 c0                	test   eax,eax
10004c4f:	0f 95 c0             	setne  al
10004c52:	0f b6 c0             	movzx  eax,al
10004c55:	eb 06                	jmp    10004c5d <check_exif+0x71>
10004c57:	b8 01 00 00 00       	mov    eax,0x1
10004c5c:	c3                   	ret    
10004c5d:	83 c4 18             	add    esp,0x18
10004c60:	5b                   	pop    ebx
10004c61:	c3                   	ret    

10004c62 <defilter_sub4>:
10004c62:	83 c0 04             	add    eax,0x4
10004c65:	0f 57 c9             	xorps  xmm1,xmm1
10004c68:	83 f8 04             	cmp    eax,0x4
10004c6b:	76 17                	jbe    10004c84 <defilter_sub4+0x22>
10004c6d:	66 0f 6e 02          	movd   xmm0,DWORD PTR [edx]
10004c71:	66 0f fc c1          	paddb  xmm0,xmm1
10004c75:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004c79:	83 c2 04             	add    edx,0x4
10004c7c:	83 e8 04             	sub    eax,0x4
10004c7f:	0f 28 c8             	movaps xmm1,xmm0
10004c82:	eb e4                	jmp    10004c68 <defilter_sub4+0x6>
10004c84:	c3                   	ret    

10004c85 <store3>:
10004c85:	83 ec 1c             	sub    esp,0x1c
10004c88:	66 0f 7e c2          	movd   edx,xmm0
10004c8c:	66 0f 7e 44 24 0c    	movd   DWORD PTR [esp+0xc],xmm0
10004c92:	66 89 10             	mov    WORD PTR [eax],dx
10004c95:	8a 54 24 0e          	mov    dl,BYTE PTR [esp+0xe]
10004c99:	88 50 02             	mov    BYTE PTR [eax+0x2],dl
10004c9c:	83 c4 1c             	add    esp,0x1c
10004c9f:	c3                   	ret    

10004ca0 <defilter_sub3>:
10004ca0:	53                   	push   ebx
10004ca1:	83 ec 08             	sub    esp,0x8
10004ca4:	89 c3                	mov    ebx,eax
10004ca6:	89 d1                	mov    ecx,edx
10004ca8:	0f 57 c9             	xorps  xmm1,xmm1
10004cab:	83 fb 03             	cmp    ebx,0x3
10004cae:	76 1a                	jbe    10004cca <defilter_sub3+0x2a>
10004cb0:	66 0f 6e 01          	movd   xmm0,DWORD PTR [ecx]
10004cb4:	66 0f fc c1          	paddb  xmm0,xmm1
10004cb8:	0f 28 c8             	movaps xmm1,xmm0
10004cbb:	89 c8                	mov    eax,ecx
10004cbd:	e8 c3 ff ff ff       	call   10004c85 <store3>
10004cc2:	83 c1 03             	add    ecx,0x3
10004cc5:	83 eb 03             	sub    ebx,0x3
10004cc8:	eb e1                	jmp    10004cab <defilter_sub3+0xb>
10004cca:	85 db                	test   ebx,ebx
10004ccc:	74 13                	je     10004ce1 <defilter_sub3+0x41>
10004cce:	89 c8                	mov    eax,ecx
10004cd0:	e8 f3 fe ff ff       	call   10004bc8 <load3>
10004cd5:	66 0f fc c1          	paddb  xmm0,xmm1
10004cd9:	89 c8                	mov    eax,ecx
10004cdb:	83 c4 08             	add    esp,0x8
10004cde:	5b                   	pop    ebx
10004cdf:	eb a4                	jmp    10004c85 <store3>
10004ce1:	83 c4 08             	add    esp,0x8
10004ce4:	5b                   	pop    ebx
10004ce5:	c3                   	ret    

10004ce6 <defilter_avg4>:
10004ce6:	83 c0 04             	add    eax,0x4
10004ce9:	0f 57 c0             	xorps  xmm0,xmm0
10004cec:	0f 28 1d 90 d6 00 10 	movaps xmm3,XMMWORD PTR ds:0x1000d690	10004cef: R_386_32	.text
10004cf3:	83 f8 04             	cmp    eax,0x4
10004cf6:	76 32                	jbe    10004d2a <defilter_avg4+0x44>
10004cf8:	66 0f 6e 11          	movd   xmm2,DWORD PTR [ecx]
10004cfc:	0f 28 e0             	movaps xmm4,xmm0
10004cff:	66 0f e0 e2          	pavgb  xmm4,xmm2
10004d03:	66 0f 6e 0a          	movd   xmm1,DWORD PTR [edx]
10004d07:	0f 57 c2             	xorps  xmm0,xmm2
10004d0a:	0f 54 c3             	andps  xmm0,xmm3
10004d0d:	0f 28 e9             	movaps xmm5,xmm1
10004d10:	66 0f f8 e8          	psubb  xmm5,xmm0
10004d14:	0f 28 c5             	movaps xmm0,xmm5
10004d17:	66 0f fc c4          	paddb  xmm0,xmm4
10004d1b:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004d1f:	83 c1 04             	add    ecx,0x4
10004d22:	83 c2 04             	add    edx,0x4
10004d25:	83 e8 04             	sub    eax,0x4
10004d28:	eb c9                	jmp    10004cf3 <defilter_avg4+0xd>
10004d2a:	c3                   	ret    

10004d2b <defilter_avg3>:
10004d2b:	56                   	push   esi
10004d2c:	53                   	push   ebx
10004d2d:	53                   	push   ebx
10004d2e:	89 c6                	mov    esi,eax
10004d30:	89 d3                	mov    ebx,edx
10004d32:	0f 57 c9             	xorps  xmm1,xmm1
10004d35:	0f 28 1d 90 d6 00 10 	movaps xmm3,XMMWORD PTR ds:0x1000d690	10004d38: R_386_32	.text
10004d3c:	83 fe 03             	cmp    esi,0x3
10004d3f:	76 32                	jbe    10004d73 <defilter_avg3+0x48>
10004d41:	66 0f 6e 11          	movd   xmm2,DWORD PTR [ecx]
10004d45:	0f 28 e1             	movaps xmm4,xmm1
10004d48:	66 0f e0 e2          	pavgb  xmm4,xmm2
10004d4c:	66 0f 6e 03          	movd   xmm0,DWORD PTR [ebx]
10004d50:	0f 57 d1             	xorps  xmm2,xmm1
10004d53:	0f 54 d3             	andps  xmm2,xmm3
10004d56:	66 0f f8 c2          	psubb  xmm0,xmm2
10004d5a:	66 0f fc c4          	paddb  xmm0,xmm4
10004d5e:	0f 28 c8             	movaps xmm1,xmm0
10004d61:	89 d8                	mov    eax,ebx
10004d63:	e8 1d ff ff ff       	call   10004c85 <store3>
10004d68:	83 c1 03             	add    ecx,0x3
10004d6b:	83 c3 03             	add    ebx,0x3
10004d6e:	83 ee 03             	sub    esi,0x3
10004d71:	eb c9                	jmp    10004d3c <defilter_avg3+0x11>
10004d73:	85 f6                	test   esi,esi
10004d75:	74 34                	je     10004dab <defilter_avg3+0x80>
10004d77:	89 c8                	mov    eax,ecx
10004d79:	e8 4a fe ff ff       	call   10004bc8 <load3>
10004d7e:	0f 28 d8             	movaps xmm3,xmm0
10004d81:	89 d8                	mov    eax,ebx
10004d83:	e8 40 fe ff ff       	call   10004bc8 <load3>
10004d88:	0f 28 d1             	movaps xmm2,xmm1
10004d8b:	66 0f e0 d3          	pavgb  xmm2,xmm3
10004d8f:	66 0f fc c2          	paddb  xmm0,xmm2
10004d93:	0f 57 cb             	xorps  xmm1,xmm3
10004d96:	0f 54 0d 90 d6 00 10 	andps  xmm1,XMMWORD PTR ds:0x1000d690	10004d99: R_386_32	.text
10004d9d:	66 0f f8 c1          	psubb  xmm0,xmm1
10004da1:	89 d8                	mov    eax,ebx
10004da3:	5a                   	pop    edx
10004da4:	5b                   	pop    ebx
10004da5:	5e                   	pop    esi
10004da6:	e9 da fe ff ff       	jmp    10004c85 <store3>
10004dab:	58                   	pop    eax
10004dac:	5b                   	pop    ebx
10004dad:	5e                   	pop    esi
10004dae:	c3                   	ret    

10004daf <defilter_paeth4>:
10004daf:	83 c0 04             	add    eax,0x4
10004db2:	0f 57 ed             	xorps  xmm5,xmm5
10004db5:	0f 28 e5             	movaps xmm4,xmm5
10004db8:	83 f8 04             	cmp    eax,0x4
10004dbb:	77 01                	ja     10004dbe <defilter_paeth4+0xf>
10004dbd:	c3                   	ret    
10004dbe:	83 ec 3c             	sub    esp,0x3c
10004dc1:	66 0f 6e 19          	movd   xmm3,DWORD PTR [ecx]
10004dc5:	0f 57 f6             	xorps  xmm6,xmm6
10004dc8:	66 0f 60 de          	punpcklbw xmm3,xmm6
10004dcc:	66 0f 6e 12          	movd   xmm2,DWORD PTR [edx]
10004dd0:	0f 28 fa             	movaps xmm7,xmm2
10004dd3:	66 0f 60 fe          	punpcklbw xmm7,xmm6
10004dd7:	0f 29 7c 24 20       	movaps XMMWORD PTR [esp+0x20],xmm7
10004ddc:	0f 28 d3             	movaps xmm2,xmm3
10004ddf:	66 0f f9 d4          	psubw  xmm2,xmm4
10004de3:	0f 28 cd             	movaps xmm1,xmm5
10004de6:	66 0f f9 cc          	psubw  xmm1,xmm4
10004dea:	0f 28 c1             	movaps xmm0,xmm1
10004ded:	66 0f fd c2          	paddw  xmm0,xmm2
10004df1:	0f 28 f2             	movaps xmm6,xmm2
10004df4:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004df9:	0f 29 74 24 10       	movaps XMMWORD PTR [esp+0x10],xmm6
10004dfe:	0f 28 f9             	movaps xmm7,xmm1
10004e01:	66 0f 71 e7 0f       	psraw  xmm7,0xf
10004e06:	0f 28 f0             	movaps xmm6,xmm0
10004e09:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004e0e:	0f 29 34 24          	movaps XMMWORD PTR [esp],xmm6
10004e12:	0f 57 cf             	xorps  xmm1,xmm7
10004e15:	66 0f f9 cf          	psubw  xmm1,xmm7
10004e19:	0f 57 54 24 10       	xorps  xmm2,XMMWORD PTR [esp+0x10]
10004e1e:	66 0f f9 54 24 10    	psubw  xmm2,XMMWORD PTR [esp+0x10]
10004e24:	0f 28 f2             	movaps xmm6,xmm2
10004e27:	66 0f ea f1          	pminsw xmm6,xmm1
10004e2b:	0f 57 04 24          	xorps  xmm0,XMMWORD PTR [esp]
10004e2f:	66 0f f9 04 24       	psubw  xmm0,XMMWORD PTR [esp]
10004e34:	66 0f ea c6          	pminsw xmm0,xmm6
10004e38:	66 0f 75 c8          	pcmpeqw xmm1,xmm0
10004e3c:	0f 28 f9             	movaps xmm7,xmm1
10004e3f:	0f 55 fc             	andnps xmm7,xmm4
10004e42:	66 0f 75 c2          	pcmpeqw xmm0,xmm2
10004e46:	0f 54 cb             	andps  xmm1,xmm3
10004e49:	0f 56 cf             	orps   xmm1,xmm7
10004e4c:	0f 28 d0             	movaps xmm2,xmm0
10004e4f:	0f 55 d1             	andnps xmm2,xmm1
10004e52:	0f 54 c5             	andps  xmm0,xmm5
10004e55:	0f 56 c2             	orps   xmm0,xmm2
10004e58:	0f 28 6c 24 20       	movaps xmm5,XMMWORD PTR [esp+0x20]
10004e5d:	66 0f fc e8          	paddb  xmm5,xmm0
10004e61:	0f 28 c5             	movaps xmm0,xmm5
10004e64:	66 0f 67 c5          	packuswb xmm0,xmm5
10004e68:	66 0f 7e 02          	movd   DWORD PTR [edx],xmm0
10004e6c:	83 c1 04             	add    ecx,0x4
10004e6f:	83 c2 04             	add    edx,0x4
10004e72:	83 e8 04             	sub    eax,0x4
10004e75:	0f 28 e3             	movaps xmm4,xmm3
10004e78:	83 f8 04             	cmp    eax,0x4
10004e7b:	0f 87 40 ff ff ff    	ja     10004dc1 <defilter_paeth4+0x12>
10004e81:	83 c4 3c             	add    esp,0x3c
10004e84:	c3                   	ret    

10004e85 <defilter_paeth3>:
10004e85:	56                   	push   esi
10004e86:	53                   	push   ebx
10004e87:	83 ec 24             	sub    esp,0x24
10004e8a:	89 c6                	mov    esi,eax
10004e8c:	89 d3                	mov    ebx,edx
10004e8e:	0f 57 ed             	xorps  xmm5,xmm5
10004e91:	0f 29 2c 24          	movaps XMMWORD PTR [esp],xmm5
10004e95:	0f 28 e5             	movaps xmm4,xmm5
10004e98:	83 fe 03             	cmp    esi,0x3
10004e9b:	0f 86 b3 00 00 00    	jbe    10004f54 <defilter_paeth3+0xcf>
10004ea1:	66 0f 6e 29          	movd   xmm5,DWORD PTR [ecx]
10004ea5:	0f 57 c9             	xorps  xmm1,xmm1
10004ea8:	66 0f 60 e9          	punpcklbw xmm5,xmm1
10004eac:	66 0f 6e 03          	movd   xmm0,DWORD PTR [ebx]
10004eb0:	0f 28 f8             	movaps xmm7,xmm0
10004eb3:	66 0f 60 f9          	punpcklbw xmm7,xmm1
10004eb7:	0f 29 7c 24 10       	movaps XMMWORD PTR [esp+0x10],xmm7
10004ebc:	0f 28 c5             	movaps xmm0,xmm5
10004ebf:	66 0f f9 c4          	psubw  xmm0,xmm4
10004ec3:	0f 28 14 24          	movaps xmm2,XMMWORD PTR [esp]
10004ec7:	66 0f f9 d4          	psubw  xmm2,xmm4
10004ecb:	0f 28 c8             	movaps xmm1,xmm0
10004ece:	66 0f fd ca          	paddw  xmm1,xmm2
10004ed2:	0f 28 f0             	movaps xmm6,xmm0
10004ed5:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004eda:	0f 28 fa             	movaps xmm7,xmm2
10004edd:	66 0f 71 e7 0f       	psraw  xmm7,0xf
10004ee2:	0f 28 d9             	movaps xmm3,xmm1
10004ee5:	66 0f 71 e3 0f       	psraw  xmm3,0xf
10004eea:	0f 57 d7             	xorps  xmm2,xmm7
10004eed:	66 0f f9 d7          	psubw  xmm2,xmm7
10004ef1:	0f 57 c6             	xorps  xmm0,xmm6
10004ef4:	66 0f f9 c6          	psubw  xmm0,xmm6
10004ef8:	0f 28 f0             	movaps xmm6,xmm0
10004efb:	66 0f ea f2          	pminsw xmm6,xmm2
10004eff:	0f 57 cb             	xorps  xmm1,xmm3
10004f02:	66 0f f9 cb          	psubw  xmm1,xmm3
10004f06:	66 0f ea f1          	pminsw xmm6,xmm1
10004f0a:	66 0f 75 d6          	pcmpeqw xmm2,xmm6
10004f0e:	0f 28 ca             	movaps xmm1,xmm2
10004f11:	0f 55 cc             	andnps xmm1,xmm4
10004f14:	66 0f 75 c6          	pcmpeqw xmm0,xmm6
10004f18:	0f 54 d5             	andps  xmm2,xmm5
10004f1b:	0f 56 d1             	orps   xmm2,xmm1
10004f1e:	0f 28 f0             	movaps xmm6,xmm0
10004f21:	0f 55 f2             	andnps xmm6,xmm2
10004f24:	0f 54 04 24          	andps  xmm0,XMMWORD PTR [esp]
10004f28:	0f 56 c6             	orps   xmm0,xmm6
10004f2b:	0f 28 5c 24 10       	movaps xmm3,XMMWORD PTR [esp+0x10]
10004f30:	66 0f fc d8          	paddb  xmm3,xmm0
10004f34:	0f 28 c3             	movaps xmm0,xmm3
10004f37:	66 0f 67 c3          	packuswb xmm0,xmm3
10004f3b:	89 d8                	mov    eax,ebx
10004f3d:	e8 43 fd ff ff       	call   10004c85 <store3>
10004f42:	83 c1 03             	add    ecx,0x3
10004f45:	83 c3 03             	add    ebx,0x3
10004f48:	83 ee 03             	sub    esi,0x3
10004f4b:	0f 29 1c 24          	movaps XMMWORD PTR [esp],xmm3
10004f4f:	e9 41 ff ff ff       	jmp    10004e95 <defilter_paeth3+0x10>
10004f54:	85 f6                	test   esi,esi
10004f56:	0f 84 af 00 00 00    	je     1000500b <defilter_paeth3+0x186>
10004f5c:	89 c8                	mov    eax,ecx
10004f5e:	e8 65 fc ff ff       	call   10004bc8 <load3>
10004f63:	0f 57 c9             	xorps  xmm1,xmm1
10004f66:	0f 28 e8             	movaps xmm5,xmm0
10004f69:	66 0f 60 e9          	punpcklbw xmm5,xmm1
10004f6d:	89 d8                	mov    eax,ebx
10004f6f:	e8 54 fc ff ff       	call   10004bc8 <load3>
10004f74:	0f 28 f8             	movaps xmm7,xmm0
10004f77:	66 0f 60 f9          	punpcklbw xmm7,xmm1
10004f7b:	0f 29 7c 24 10       	movaps XMMWORD PTR [esp+0x10],xmm7
10004f80:	0f 28 d5             	movaps xmm2,xmm5
10004f83:	66 0f f9 d4          	psubw  xmm2,xmm4
10004f87:	0f 28 04 24          	movaps xmm0,XMMWORD PTR [esp]
10004f8b:	66 0f f9 c4          	psubw  xmm0,xmm4
10004f8f:	0f 28 c8             	movaps xmm1,xmm0
10004f92:	66 0f fd ca          	paddw  xmm1,xmm2
10004f96:	0f 28 f2             	movaps xmm6,xmm2
10004f99:	66 0f 71 e6 0f       	psraw  xmm6,0xf
10004f9e:	0f 28 f8             	movaps xmm7,xmm0
10004fa1:	66 0f 71 e7 0f       	psraw  xmm7,0xf
10004fa6:	0f 28 d9             	movaps xmm3,xmm1
10004fa9:	66 0f 71 e3 0f       	psraw  xmm3,0xf
10004fae:	0f 57 c7             	xorps  xmm0,xmm7
10004fb1:	66 0f f9 c7          	psubw  xmm0,xmm7
10004fb5:	0f 57 d6             	xorps  xmm2,xmm6
10004fb8:	66 0f f9 d6          	psubw  xmm2,xmm6
10004fbc:	0f 28 f2             	movaps xmm6,xmm2
10004fbf:	66 0f ea f0          	pminsw xmm6,xmm0
10004fc3:	0f 57 cb             	xorps  xmm1,xmm3
10004fc6:	66 0f f9 cb          	psubw  xmm1,xmm3
10004fca:	66 0f ea f1          	pminsw xmm6,xmm1
10004fce:	66 0f 75 c6          	pcmpeqw xmm0,xmm6
10004fd2:	0f 28 f8             	movaps xmm7,xmm0
10004fd5:	0f 55 fc             	andnps xmm7,xmm4
10004fd8:	66 0f 75 f2          	pcmpeqw xmm6,xmm2
10004fdc:	0f 54 c5             	andps  xmm0,xmm5
10004fdf:	0f 56 c7             	orps   xmm0,xmm7
10004fe2:	0f 28 e6             	movaps xmm4,xmm6
10004fe5:	0f 55 e0             	andnps xmm4,xmm0
10004fe8:	0f 28 1c 24          	movaps xmm3,XMMWORD PTR [esp]
10004fec:	0f 54 de             	andps  xmm3,xmm6
10004fef:	0f 56 dc             	orps   xmm3,xmm4
10004ff2:	66 0f fc 5c 24 10    	paddb  xmm3,XMMWORD PTR [esp+0x10]
10004ff8:	0f 28 c3             	movaps xmm0,xmm3
10004ffb:	66 0f 67 c3          	packuswb xmm0,xmm3
10004fff:	89 d8                	mov    eax,ebx
10005001:	83 c4 24             	add    esp,0x24
10005004:	5b                   	pop    ebx
10005005:	5e                   	pop    esi
10005006:	e9 7a fc ff ff       	jmp    10004c85 <store3>
1000500b:	83 c4 24             	add    esp,0x24
1000500e:	5b                   	pop    ebx
1000500f:	5e                   	pop    esi
10005010:	c3                   	ret    

10005011 <check_png_keyword>:
10005011:	57                   	push   edi
10005012:	56                   	push   esi
10005013:	53                   	push   ebx
10005014:	85 c0                	test   eax,eax
10005016:	74 5b                	je     10005073 <check_png_keyword+0x62>
10005018:	89 c3                	mov    ebx,eax
1000501a:	83 c9 ff             	or     ecx,0xffffffff
1000501d:	31 c0                	xor    eax,eax
1000501f:	89 df                	mov    edi,ebx
10005021:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10005023:	89 ca                	mov    edx,ecx
10005025:	f7 d2                	not    edx
10005027:	89 d1                	mov    ecx,edx
10005029:	8d 7a ff             	lea    edi,[edx-0x1]
1000502c:	83 e9 02             	sub    ecx,0x2
1000502f:	be 01 00 00 00       	mov    esi,0x1
10005034:	83 f9 4e             	cmp    ecx,0x4e
10005037:	77 3f                	ja     10005078 <check_png_keyword+0x67>
10005039:	80 3b 20             	cmp    BYTE PTR [ebx],0x20
1000503c:	74 3a                	je     10005078 <check_png_keyword+0x67>
1000503e:	01 df                	add    edi,ebx
10005040:	80 7f ff 20          	cmp    BYTE PTR [edi-0x1],0x20
10005044:	74 32                	je     10005078 <check_png_keyword+0x67>
10005046:	50                   	push   eax
10005047:	50                   	push   eax
10005048:	68 73 cb 00 10       	push   0x1000cb73	10005049: R_386_32	.text
1000504d:	53                   	push   ebx
1000504e:	e8 fc ff ff ff       	call   1000504f <check_png_keyword+0x3e>	1000504f: R_386_PC32	strstr
10005053:	83 c4 10             	add    esp,0x10
10005056:	85 c0                	test   eax,eax
10005058:	75 1e                	jne    10005078 <check_png_keyword+0x67>
1000505a:	39 fb                	cmp    ebx,edi
1000505c:	74 11                	je     1000506f <check_png_keyword+0x5e>
1000505e:	8a 03                	mov    al,BYTE PTR [ebx]
10005060:	8d 50 e0             	lea    edx,[eax-0x20]
10005063:	80 fa 5e             	cmp    dl,0x5e
10005066:	76 04                	jbe    1000506c <check_png_keyword+0x5b>
10005068:	3c a0                	cmp    al,0xa0
1000506a:	76 07                	jbe    10005073 <check_png_keyword+0x62>
1000506c:	43                   	inc    ebx
1000506d:	eb eb                	jmp    1000505a <check_png_keyword+0x49>
1000506f:	31 f6                	xor    esi,esi
10005071:	eb 05                	jmp    10005078 <check_png_keyword+0x67>
10005073:	be 01 00 00 00       	mov    esi,0x1
10005078:	89 f0                	mov    eax,esi
1000507a:	5b                   	pop    ebx
1000507b:	5e                   	pop    esi
1000507c:	5f                   	pop    edi
1000507d:	c3                   	ret    

1000507e <spng__inflate_init>:
1000507e:	56                   	push   esi
1000507f:	53                   	push   ebx
10005080:	52                   	push   edx
10005081:	89 c3                	mov    ebx,eax
10005083:	8d b0 50 09 00 00    	lea    esi,[eax+0x950]
10005089:	83 b8 6c 09 00 00 00 	cmp    DWORD PTR [eax+0x96c],0x0
10005090:	74 0c                	je     1000509e <spng__inflate_init+0x20>
10005092:	83 ec 0c             	sub    esp,0xc
10005095:	56                   	push   esi
10005096:	e8 fc ff ff ff       	call   10005097 <spng__inflate_init+0x19>	10005097: R_386_PC32	inflateEnd
1000509b:	83 c4 10             	add    esp,0x10
1000509e:	80 4b 74 02          	or     BYTE PTR [ebx+0x74],0x2
100050a2:	c7 83 70 09 00 00 b6 51 00 10 	mov    DWORD PTR [ebx+0x970],0x100051b6	100050a8: R_386_32	.text
100050ac:	c7 83 74 09 00 00 dd 51 00 10 	mov    DWORD PTR [ebx+0x974],0x100051dd	100050b2: R_386_32	.text
100050b6:	89 9b 78 09 00 00    	mov    DWORD PTR [ebx+0x978],ebx
100050bc:	50                   	push   eax
100050bd:	6a 38                	push   0x38
100050bf:	68 76 cb 00 10       	push   0x1000cb76	100050c0: R_386_32	.text
100050c4:	56                   	push   esi
100050c5:	e8 fc ff ff ff       	call   100050c6 <spng__inflate_init+0x48>	100050c6: R_386_PC32	inflateInit_
100050ca:	83 c4 10             	add    esp,0x10
100050cd:	85 c0                	test   eax,eax
100050cf:	74 07                	je     100050d8 <spng__inflate_init+0x5a>
100050d1:	b8 4e 00 00 00       	mov    eax,0x4e
100050d6:	eb 38                	jmp    10005110 <spng__inflate_init+0x92>
100050d8:	8b 53 68             	mov    edx,DWORD PTR [ebx+0x68]
100050db:	f7 d2                	not    edx
100050dd:	83 e2 01             	and    edx,0x1
100050e0:	8d 43 40             	lea    eax,[ebx+0x40]
100050e3:	e8 eb f8 ff ff       	call   100049d3 <is_critical_chunk>
100050e8:	85 c0                	test   eax,eax
100050ea:	74 09                	je     100050f5 <spng__inflate_init+0x77>
100050ec:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
100050f3:	eb 07                	jmp    100050fc <spng__inflate_init+0x7e>
100050f5:	83 bb ec 00 00 00 02 	cmp    DWORD PTR [ebx+0xec],0x2
100050fc:	75 02                	jne    10005100 <spng__inflate_init+0x82>
100050fe:	31 d2                	xor    edx,edx
10005100:	51                   	push   ecx
10005101:	51                   	push   ecx
10005102:	52                   	push   edx
10005103:	56                   	push   esi
10005104:	e8 fc ff ff ff       	call   10005105 <spng__inflate_init+0x87>	10005105: R_386_PC32	inflateValidate
10005109:	83 c4 10             	add    esp,0x10
1000510c:	85 c0                	test   eax,eax
1000510e:	75 c1                	jne    100050d1 <spng__inflate_init+0x53>
10005110:	5a                   	pop    edx
10005111:	5b                   	pop    ebx
10005112:	5e                   	pop    esi
10005113:	c3                   	ret    

10005114 <spng__deflate_init>:
10005114:	57                   	push   edi
10005115:	56                   	push   esi
10005116:	53                   	push   ebx
10005117:	89 c3                	mov    ebx,eax
10005119:	89 d6                	mov    esi,edx
1000511b:	8d b8 50 09 00 00    	lea    edi,[eax+0x950]
10005121:	83 b8 6c 09 00 00 00 	cmp    DWORD PTR [eax+0x96c],0x0
10005128:	74 0c                	je     10005136 <spng__deflate_init+0x22>
1000512a:	83 ec 0c             	sub    esp,0xc
1000512d:	57                   	push   edi
1000512e:	e8 fc ff ff ff       	call   1000512f <spng__deflate_init+0x1b>	1000512f: R_386_PC32	deflateEnd
10005133:	83 c4 10             	add    esp,0x10
10005136:	80 4b 74 04          	or     BYTE PTR [ebx+0x74],0x4
1000513a:	c7 83 70 09 00 00 b6 51 00 10 	mov    DWORD PTR [ebx+0x970],0x100051b6	10005140: R_386_32	.text
10005144:	c7 83 74 09 00 00 dd 51 00 10 	mov    DWORD PTR [ebx+0x974],0x100051dd	1000514a: R_386_32	.text
1000514e:	89 9b 78 09 00 00    	mov    DWORD PTR [ebx+0x978],ebx
10005154:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10005157:	89 83 7c 09 00 00    	mov    DWORD PTR [ebx+0x97c],eax
1000515d:	6a 38                	push   0x38
1000515f:	68 76 cb 00 10       	push   0x1000cb76	10005160: R_386_32	.text
10005164:	ff 76 0c             	push   DWORD PTR [esi+0xc]
10005167:	ff 76 08             	push   DWORD PTR [esi+0x8]
1000516a:	ff 76 04             	push   DWORD PTR [esi+0x4]
1000516d:	6a 08                	push   0x8
1000516f:	ff 36                	push   DWORD PTR [esi]
10005171:	57                   	push   edi
10005172:	e8 fc ff ff ff       	call   10005173 <spng__deflate_init+0x5f>	10005173: R_386_PC32	deflateInit2_
10005177:	83 c4 20             	add    esp,0x20
1000517a:	85 c0                	test   eax,eax
1000517c:	74 05                	je     10005183 <spng__deflate_init+0x6f>
1000517e:	b8 4e 00 00 00       	mov    eax,0x4e
10005183:	5b                   	pop    ebx
10005184:	5e                   	pop    esi
10005185:	5f                   	pop    edi
10005186:	c3                   	ret    

10005187 <file_write_fn>:
10005187:	83 ec 0c             	sub    esp,0xc
1000518a:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000518e:	6a 01                	push   0x1
10005190:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10005194:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10005198:	e8 fc ff ff ff       	call   10005199 <file_write_fn+0x12>	10005199: R_386_PC32	fwrite
1000519d:	48                   	dec    eax
1000519e:	0f 94 c0             	sete   al
100051a1:	0f b6 c0             	movzx  eax,al
100051a4:	8d 44 00 fe          	lea    eax,[eax+eax*1-0x2]
100051a8:	83 c4 1c             	add    esp,0x1c
100051ab:	c3                   	ret    

100051ac <spng__malloc.isra.0>:
100051ac:	83 ec 18             	sub    esp,0x18
100051af:	52                   	push   edx
100051b0:	ff d0                	call   eax
100051b2:	83 c4 1c             	add    esp,0x1c
100051b5:	c3                   	ret    

100051b6 <spng__zalloc>:
100051b6:	53                   	push   ebx
100051b7:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
100051bb:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100051bf:	f7 64 24 0c          	mul    DWORD PTR [esp+0xc]
100051c3:	70 0a                	jo     100051cf <spng__zalloc+0x19>
100051c5:	89 c1                	mov    ecx,eax
100051c7:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
100051ca:	89 ca                	mov    edx,ecx
100051cc:	5b                   	pop    ebx
100051cd:	eb dd                	jmp    100051ac <spng__malloc.isra.0>
100051cf:	31 c0                	xor    eax,eax
100051d1:	5b                   	pop    ebx
100051d2:	c3                   	ret    

100051d3 <spng__free.isra.3>:
100051d3:	83 ec 18             	sub    esp,0x18
100051d6:	52                   	push   edx
100051d7:	ff d0                	call   eax
100051d9:	83 c4 1c             	add    esp,0x1c
100051dc:	c3                   	ret    

100051dd <spng__zfree>:
100051dd:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100051e1:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
100051e4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100051e8:	eb e9                	jmp    100051d3 <spng__free.isra.3>

100051ea <increase_cache_usage>:
100051ea:	89 c1                	mov    ecx,eax
100051ec:	85 d2                	test   edx,edx
100051ee:	74 27                	je     10005217 <increase_cache_usage+0x2d>
100051f0:	85 c0                	test   eax,eax
100051f2:	74 23                	je     10005217 <increase_cache_usage+0x2d>
100051f4:	b8 03 00 00 00       	mov    eax,0x3
100051f9:	03 91 e4 00 00 00    	add    edx,DWORD PTR [ecx+0xe4]
100051ff:	72 1b                	jb     1000521c <increase_cache_usage+0x32>
10005201:	b8 4d 00 00 00       	mov    eax,0x4d
10005206:	3b 91 e0 00 00 00    	cmp    edx,DWORD PTR [ecx+0xe0]
1000520c:	77 0e                	ja     1000521c <increase_cache_usage+0x32>
1000520e:	89 91 e4 00 00 00    	mov    DWORD PTR [ecx+0xe4],edx
10005214:	31 c0                	xor    eax,eax
10005216:	c3                   	ret    
10005217:	b8 50 00 00 00       	mov    eax,0x50
1000521c:	c3                   	ret    

1000521d <decrease_cache_usage>:
1000521d:	53                   	push   ebx
1000521e:	85 d2                	test   edx,edx
10005220:	74 1f                	je     10005241 <decrease_cache_usage+0x24>
10005222:	85 c0                	test   eax,eax
10005224:	74 1b                	je     10005241 <decrease_cache_usage+0x24>
10005226:	8b 88 e4 00 00 00    	mov    ecx,DWORD PTR [eax+0xe4]
1000522c:	bb 50 00 00 00       	mov    ebx,0x50
10005231:	39 ca                	cmp    edx,ecx
10005233:	77 11                	ja     10005246 <decrease_cache_usage+0x29>
10005235:	29 d1                	sub    ecx,edx
10005237:	89 88 e4 00 00 00    	mov    DWORD PTR [eax+0xe4],ecx
1000523d:	31 db                	xor    ebx,ebx
1000523f:	eb 05                	jmp    10005246 <decrease_cache_usage+0x29>
10005241:	bb 50 00 00 00       	mov    ebx,0x50
10005246:	89 d8                	mov    eax,ebx
10005248:	5b                   	pop    ebx
10005249:	c3                   	ret    

1000524a <splt_undo>:
1000524a:	56                   	push   esi
1000524b:	53                   	push   ebx
1000524c:	50                   	push   eax
1000524d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10005251:	6b 83 b4 08 00 00 5c 	imul   eax,DWORD PTR [ebx+0x8b4],0x5c
10005258:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
1000525e:	8d 74 02 a4          	lea    esi,[edx+eax*1-0x5c]
10005262:	8b 56 58             	mov    edx,DWORD PTR [esi+0x58]
10005265:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10005268:	e8 66 ff ff ff       	call   100051d3 <spng__free.isra.3>
1000526d:	ba 5c 00 00 00       	mov    edx,0x5c
10005272:	89 d8                	mov    eax,ebx
10005274:	e8 a4 ff ff ff       	call   1000521d <decrease_cache_usage>
10005279:	6b 56 54 0a          	imul   edx,DWORD PTR [esi+0x54],0xa
1000527d:	89 d8                	mov    eax,ebx
1000527f:	e8 99 ff ff ff       	call   1000521d <decrease_cache_usage>
10005284:	c7 46 58 00 00 00 00 	mov    DWORD PTR [esi+0x58],0x0
1000528b:	ff 8b b4 08 00 00    	dec    DWORD PTR [ebx+0x8b4]
10005291:	5a                   	pop    edx
10005292:	5b                   	pop    ebx
10005293:	5e                   	pop    esi
10005294:	c3                   	ret    

10005295 <text_undo>:
10005295:	56                   	push   esi
10005296:	53                   	push   ebx
10005297:	52                   	push   edx
10005298:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000529c:	6b 83 88 05 00 00 70 	imul   eax,DWORD PTR [ebx+0x588],0x70
100052a3:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
100052a9:	8d 74 02 90          	lea    esi,[edx+eax*1-0x70]
100052ad:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
100052b0:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
100052b3:	e8 1b ff ff ff       	call   100051d3 <spng__free.isra.3>
100052b8:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
100052bc:	74 0b                	je     100052c9 <text_undo+0x34>
100052be:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
100052c1:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
100052c4:	e8 0a ff ff ff       	call   100051d3 <spng__free.isra.3>
100052c9:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100052cc:	89 d8                	mov    eax,ebx
100052ce:	e8 4a ff ff ff       	call   1000521d <decrease_cache_usage>
100052d3:	ba 70 00 00 00       	mov    edx,0x70
100052d8:	89 d8                	mov    eax,ebx
100052da:	e8 3e ff ff ff       	call   1000521d <decrease_cache_usage>
100052df:	c7 46 04 00 00 00 00 	mov    DWORD PTR [esi+0x4],0x0
100052e6:	c7 46 08 00 00 00 00 	mov    DWORD PTR [esi+0x8],0x0
100052ed:	ff 8b 88 05 00 00    	dec    DWORD PTR [ebx+0x588]
100052f3:	58                   	pop    eax
100052f4:	5b                   	pop    ebx
100052f5:	5e                   	pop    esi
100052f6:	c3                   	ret    

100052f7 <chunk_undo>:
100052f7:	56                   	push   esi
100052f8:	53                   	push   ebx
100052f9:	50                   	push   eax
100052fa:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100052fe:	8b 86 d8 08 00 00    	mov    eax,DWORD PTR [esi+0x8d8]
10005304:	8d 98 ff ff ff 0f    	lea    ebx,[eax+0xfffffff]
1000530a:	c1 e3 04             	shl    ebx,0x4
1000530d:	03 9e dc 08 00 00    	add    ebx,DWORD PTR [esi+0x8dc]
10005313:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10005316:	8b 46 64             	mov    eax,DWORD PTR [esi+0x64]
10005319:	e8 b5 fe ff ff       	call   100051d3 <spng__free.isra.3>
1000531e:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10005321:	89 f0                	mov    eax,esi
10005323:	e8 f5 fe ff ff       	call   1000521d <decrease_cache_usage>
10005328:	ba 10 00 00 00       	mov    edx,0x10
1000532d:	89 f0                	mov    eax,esi
1000532f:	e8 e9 fe ff ff       	call   1000521d <decrease_cache_usage>
10005334:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
1000533b:	ff 8e d8 08 00 00    	dec    DWORD PTR [esi+0x8d8]
10005341:	5a                   	pop    edx
10005342:	5b                   	pop    ebx
10005343:	5e                   	pop    esi
10005344:	c3                   	ret    

10005345 <read_data>:
10005345:	85 c0                	test   eax,eax
10005347:	74 50                	je     10005399 <read_data+0x54>
10005349:	85 d2                	test   edx,edx
1000534b:	74 56                	je     100053a3 <read_data+0x5e>
1000534d:	56                   	push   esi
1000534e:	53                   	push   ebx
1000534f:	51                   	push   ecx
10005350:	89 c3                	mov    ebx,eax
10005352:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005356:	74 0d                	je     10005365 <read_data+0x20>
10005358:	b8 50 00 00 00       	mov    eax,0x50
1000535d:	81 fa 00 20 00 00    	cmp    edx,0x2000
10005363:	77 3a                	ja     1000539f <read_data+0x5a>
10005365:	89 d6                	mov    esi,edx
10005367:	52                   	push   edx
10005368:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
1000536b:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
1000536e:	53                   	push   ebx
1000536f:	ff 53 14             	call   DWORD PTR [ebx+0x14]
10005372:	83 c4 10             	add    esp,0x10
10005375:	85 c0                	test   eax,eax
10005377:	74 0f                	je     10005388 <read_data+0x43>
10005379:	8d 50 02             	lea    edx,[eax+0x2]
1000537c:	83 fa 02             	cmp    edx,0x2
1000537f:	76 1e                	jbe    1000539f <read_data+0x5a>
10005381:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10005386:	eb 17                	jmp    1000539f <read_data+0x5a>
10005388:	03 73 04             	add    esi,DWORD PTR [ebx+0x4]
1000538b:	89 73 04             	mov    DWORD PTR [ebx+0x4],esi
1000538e:	b8 03 00 00 00       	mov    eax,0x3
10005393:	72 0a                	jb     1000539f <read_data+0x5a>
10005395:	31 c0                	xor    eax,eax
10005397:	eb 06                	jmp    1000539f <read_data+0x5a>
10005399:	b8 50 00 00 00       	mov    eax,0x50
1000539e:	c3                   	ret    
1000539f:	5a                   	pop    edx
100053a0:	5b                   	pop    ebx
100053a1:	5e                   	pop    esi
100053a2:	c3                   	ret    
100053a3:	31 c0                	xor    eax,eax
100053a5:	c3                   	ret    

100053a6 <read_and_check_crc>:
100053a6:	85 c0                	test   eax,eax
100053a8:	74 5f                	je     10005409 <read_and_check_crc+0x63>
100053aa:	53                   	push   ebx
100053ab:	83 ec 08             	sub    esp,0x8
100053ae:	89 c3                	mov    ebx,eax
100053b0:	ba 04 00 00 00       	mov    edx,0x4
100053b5:	e8 8b ff ff ff       	call   10005345 <read_data>
100053ba:	89 c2                	mov    edx,eax
100053bc:	85 c0                	test   eax,eax
100053be:	75 51                	jne    10005411 <read_and_check_crc+0x6b>
100053c0:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100053c3:	e8 ba f4 ff ff       	call   10004882 <read_u32>
100053c8:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
100053cb:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
100053cf:	75 40                	jne    10005411 <read_and_check_crc+0x6b>
100053d1:	3b 43 54             	cmp    eax,DWORD PTR [ebx+0x54]
100053d4:	74 3b                	je     10005411 <read_and_check_crc+0x6b>
100053d6:	8d 43 40             	lea    eax,[ebx+0x40]
100053d9:	e8 f5 f5 ff ff       	call   100049d3 <is_critical_chunk>
100053de:	85 c0                	test   eax,eax
100053e0:	74 10                	je     100053f2 <read_and_check_crc+0x4c>
100053e2:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
100053e9:	74 26                	je     10005411 <read_and_check_crc+0x6b>
100053eb:	ba 12 00 00 00       	mov    edx,0x12
100053f0:	eb 1f                	jmp    10005411 <read_and_check_crc+0x6b>
100053f2:	8b 83 ec 00 00 00    	mov    eax,DWORD PTR [ebx+0xec]
100053f8:	83 f8 02             	cmp    eax,0x2
100053fb:	74 14                	je     10005411 <read_and_check_crc+0x6b>
100053fd:	31 d2                	xor    edx,edx
100053ff:	48                   	dec    eax
10005400:	0f 95 c2             	setne  dl
10005403:	4a                   	dec    edx
10005404:	83 ca 12             	or     edx,0x12
10005407:	eb 08                	jmp    10005411 <read_and_check_crc+0x6b>
10005409:	ba 50 00 00 00       	mov    edx,0x50
1000540e:	89 d0                	mov    eax,edx
10005410:	c3                   	ret    
10005411:	89 d0                	mov    eax,edx
10005413:	83 c4 08             	add    esp,0x8
10005416:	5b                   	pop    ebx
10005417:	c3                   	ret    

10005418 <read_header>:
10005418:	55                   	push   ebp
10005419:	57                   	push   edi
1000541a:	56                   	push   esi
1000541b:	53                   	push   ebx
1000541c:	83 ec 1c             	sub    esp,0x1c
1000541f:	bd 50 00 00 00       	mov    ebp,0x50
10005424:	85 c0                	test   eax,eax
10005426:	0f 84 cb 00 00 00    	je     100054f7 <read_header+0xdf>
1000542c:	89 c3                	mov    ebx,eax
1000542e:	89 e7                	mov    edi,esp
10005430:	b9 04 00 00 00       	mov    ecx,0x4
10005435:	31 c0                	xor    eax,eax
10005437:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10005439:	89 d8                	mov    eax,ebx
1000543b:	e8 66 ff ff ff       	call   100053a6 <read_and_check_crc>
10005440:	89 c5                	mov    ebp,eax
10005442:	85 c0                	test   eax,eax
10005444:	89 e6                	mov    esi,esp
10005446:	74 0d                	je     10005455 <read_header+0x3d>
10005448:	83 f8 ff             	cmp    eax,0xffffffff
1000544b:	0f 85 a6 00 00 00    	jne    100054f7 <read_header+0xdf>
10005451:	80 4b 74 20          	or     BYTE PTR [ebx+0x74],0x20
10005455:	ba 08 00 00 00       	mov    edx,0x8
1000545a:	89 d8                	mov    eax,ebx
1000545c:	e8 e4 fe ff ff       	call   10005345 <read_data>
10005461:	89 c5                	mov    ebp,eax
10005463:	85 c0                	test   eax,eax
10005465:	0f 85 8c 00 00 00    	jne    100054f7 <read_header+0xdf>
1000546b:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000546e:	83 e8 08             	sub    eax,0x8
10005471:	89 04 24             	mov    DWORD PTR [esp],eax
10005474:	8b 53 10             	mov    edx,DWORD PTR [ebx+0x10]
10005477:	89 d0                	mov    eax,edx
10005479:	e8 04 f4 ff ff       	call   10004882 <read_u32>
1000547e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10005482:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
10005485:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
10005489:	85 c0                	test   eax,eax
1000548b:	78 65                	js     100054f2 <read_header+0xda>
1000548d:	89 43 50             	mov    DWORD PTR [ebx+0x50],eax
10005490:	89 f0                	mov    eax,esi
10005492:	e8 3c f5 ff ff       	call   100049d3 <is_critical_chunk>
10005497:	85 c0                	test   eax,eax
10005499:	8a 43 74             	mov    al,BYTE PTR [ebx+0x74]
1000549c:	74 0e                	je     100054ac <read_header+0x94>
1000549e:	83 bb e8 00 00 00 02 	cmp    DWORD PTR [ebx+0xe8],0x2
100054a5:	75 05                	jne    100054ac <read_header+0x94>
100054a7:	83 c8 40             	or     eax,0x40
100054aa:	eb 0c                	jmp    100054b8 <read_header+0xa0>
100054ac:	83 bb ec 00 00 00 02 	cmp    DWORD PTR [ebx+0xec],0x2
100054b3:	74 f2                	je     100054a7 <read_header+0x8f>
100054b5:	83 e0 bf             	and    eax,0xffffffbf
100054b8:	88 43 74             	mov    BYTE PTR [ebx+0x74],al
100054bb:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
100054bf:	75 25                	jne    100054e6 <read_header+0xce>
100054c1:	50                   	push   eax
100054c2:	6a 00                	push   0x0
100054c4:	6a 00                	push   0x0
100054c6:	6a 00                	push   0x0
100054c8:	e8 fc ff ff ff       	call   100054c9 <read_header+0xb1>	100054c9: R_386_PC32	crc32
100054cd:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100054d0:	83 c4 0c             	add    esp,0xc
100054d3:	6a 04                	push   0x4
100054d5:	8d 54 24 10          	lea    edx,[esp+0x10]
100054d9:	52                   	push   edx
100054da:	50                   	push   eax
100054db:	e8 fc ff ff ff       	call   100054dc <read_header+0xc4>	100054dc: R_386_PC32	crc32
100054e0:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100054e3:	83 c4 10             	add    esp,0x10
100054e6:	8d 7b 40             	lea    edi,[ebx+0x40]
100054e9:	b9 04 00 00 00       	mov    ecx,0x4
100054ee:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100054f0:	eb 05                	jmp    100054f7 <read_header+0xdf>
100054f2:	bd 4f 00 00 00       	mov    ebp,0x4f
100054f7:	89 e8                	mov    eax,ebp
100054f9:	83 c4 1c             	add    esp,0x1c
100054fc:	5b                   	pop    ebx
100054fd:	5e                   	pop    esi
100054fe:	5f                   	pop    edi
100054ff:	5d                   	pop    ebp
10005500:	c3                   	ret    

10005501 <check_ihdr.part.13>:
10005501:	80 78 09 06          	cmp    BYTE PTR [eax+0x9],0x6
10005505:	77 7b                	ja     10005582 <check_ihdr.part.13+0x81>
10005507:	53                   	push   ebx
10005508:	0f b6 50 09          	movzx  edx,BYTE PTR [eax+0x9]
1000550c:	ff 24 95 60 d3 00 10 	jmp    DWORD PTR [edx*4+0x1000d360]	1000550f: R_386_32	.text
10005513:	8a 48 08             	mov    cl,BYTE PTR [eax+0x8]
10005516:	ba 09 00 00 00       	mov    edx,0x9
1000551b:	80 f9 10             	cmp    cl,0x10
1000551e:	77 5e                	ja     1000557e <check_ihdr.part.13+0x7d>
10005520:	bb 16 01 01 00       	mov    ebx,0x10116
10005525:	0f a3 cb             	bt     ebx,ecx
10005528:	72 2c                	jb     10005556 <check_ihdr.part.13+0x55>
1000552a:	eb 52                	jmp    1000557e <check_ihdr.part.13+0x7d>
1000552c:	8a 58 08             	mov    bl,BYTE PTR [eax+0x8]
1000552f:	8d 4b f8             	lea    ecx,[ebx-0x8]
10005532:	ba 09 00 00 00       	mov    edx,0x9
10005537:	80 e1 f7             	and    cl,0xf7
1000553a:	74 1a                	je     10005556 <check_ihdr.part.13+0x55>
1000553c:	eb 40                	jmp    1000557e <check_ihdr.part.13+0x7d>
1000553e:	8a 50 08             	mov    dl,BYTE PTR [eax+0x8]
10005541:	8d 4a fc             	lea    ecx,[edx-0x4]
10005544:	80 e1 fb             	and    cl,0xfb
10005547:	74 0d                	je     10005556 <check_ihdr.part.13+0x55>
10005549:	8d 4a ff             	lea    ecx,[edx-0x1]
1000554c:	ba 09 00 00 00       	mov    edx,0x9
10005551:	80 f9 01             	cmp    cl,0x1
10005554:	77 28                	ja     1000557e <check_ihdr.part.13+0x7d>
10005556:	ba 0b 00 00 00       	mov    edx,0xb
1000555b:	80 78 0a 00          	cmp    BYTE PTR [eax+0xa],0x0
1000555f:	75 1d                	jne    1000557e <check_ihdr.part.13+0x7d>
10005561:	ba 0c 00 00 00       	mov    edx,0xc
10005566:	80 78 0b 00          	cmp    BYTE PTR [eax+0xb],0x0
1000556a:	75 12                	jne    1000557e <check_ihdr.part.13+0x7d>
1000556c:	80 78 0c 02          	cmp    BYTE PTR [eax+0xc],0x2
10005570:	19 d2                	sbb    edx,edx
10005572:	f7 d2                	not    edx
10005574:	83 e2 0d             	and    edx,0xd
10005577:	eb 05                	jmp    1000557e <check_ihdr.part.13+0x7d>
10005579:	ba 0a 00 00 00       	mov    edx,0xa
1000557e:	89 d0                	mov    eax,edx
10005580:	5b                   	pop    ebx
10005581:	c3                   	ret    
10005582:	ba 0a 00 00 00       	mov    edx,0xa
10005587:	89 d0                	mov    eax,edx
10005589:	c3                   	ret    

1000558a <check_plte>:
1000558a:	85 c0                	test   eax,eax
1000558c:	74 30                	je     100055be <check_plte+0x34>
1000558e:	53                   	push   ebx
1000558f:	8b 18                	mov    ebx,DWORD PTR [eax]
10005591:	8d 4b ff             	lea    ecx,[ebx-0x1]
10005594:	b8 01 00 00 00       	mov    eax,0x1
10005599:	81 f9 ff 00 00 00    	cmp    ecx,0xff
1000559f:	77 23                	ja     100055c4 <check_plte+0x3a>
100055a1:	31 c0                	xor    eax,eax
100055a3:	80 7a 09 03          	cmp    BYTE PTR [edx+0x9],0x3
100055a7:	75 1b                	jne    100055c4 <check_plte+0x3a>
100055a9:	0f b6 4a 08          	movzx  ecx,BYTE PTR [edx+0x8]
100055ad:	b8 01 00 00 00       	mov    eax,0x1
100055b2:	d3 e0                	shl    eax,cl
100055b4:	39 c3                	cmp    ebx,eax
100055b6:	0f 97 c0             	seta   al
100055b9:	0f b6 c0             	movzx  eax,al
100055bc:	eb 06                	jmp    100055c4 <check_plte+0x3a>
100055be:	b8 01 00 00 00       	mov    eax,0x1
100055c3:	c3                   	ret    
100055c4:	5b                   	pop    ebx
100055c5:	c3                   	ret    

100055c6 <check_sbit.part.15>:
100055c6:	57                   	push   edi
100055c7:	56                   	push   esi
100055c8:	53                   	push   ebx
100055c9:	51                   	push   ecx
100055ca:	89 d7                	mov    edi,edx
100055cc:	8a 4a 09             	mov    cl,BYTE PTR [edx+0x9]
100055cf:	84 c9                	test   cl,cl
100055d1:	75 1c                	jne    100055ef <check_sbit.part.15+0x29>
100055d3:	8a 00                	mov    al,BYTE PTR [eax]
100055d5:	be 29 00 00 00       	mov    esi,0x29
100055da:	84 c0                	test   al,al
100055dc:	0f 84 d5 00 00 00    	je     100056b7 <check_sbit.part.15+0xf1>
100055e2:	38 42 08             	cmp    BYTE PTR [edx+0x8],al
100055e5:	19 f6                	sbb    esi,esi
100055e7:	83 e6 29             	and    esi,0x29
100055ea:	e9 c8 00 00 00       	jmp    100056b7 <check_sbit.part.15+0xf1>
100055ef:	8d 51 fe             	lea    edx,[ecx-0x2]
100055f2:	80 fa 01             	cmp    dl,0x1
100055f5:	77 4a                	ja     10005641 <check_sbit.part.15+0x7b>
100055f7:	8a 58 01             	mov    bl,BYTE PTR [eax+0x1]
100055fa:	88 5c 24 02          	mov    BYTE PTR [esp+0x2],bl
100055fe:	be 29 00 00 00       	mov    esi,0x29
10005603:	84 db                	test   bl,bl
10005605:	0f 84 ac 00 00 00    	je     100056b7 <check_sbit.part.15+0xf1>
1000560b:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
1000560e:	84 d2                	test   dl,dl
10005610:	0f 84 a1 00 00 00    	je     100056b7 <check_sbit.part.15+0xf1>
10005616:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
10005619:	84 c0                	test   al,al
1000561b:	0f 84 96 00 00 00    	je     100056b7 <check_sbit.part.15+0xf1>
10005621:	b3 08                	mov    bl,0x8
10005623:	80 f9 03             	cmp    cl,0x3
10005626:	74 03                	je     1000562b <check_sbit.part.15+0x65>
10005628:	8a 5f 08             	mov    bl,BYTE PTR [edi+0x8]
1000562b:	38 5c 24 02          	cmp    BYTE PTR [esp+0x2],bl
1000562f:	0f 97 c1             	seta   cl
10005632:	38 da                	cmp    dl,bl
10005634:	0f 97 c2             	seta   dl
10005637:	08 d1                	or     cl,dl
10005639:	75 77                	jne    100056b2 <check_sbit.part.15+0xec>
1000563b:	31 f6                	xor    esi,esi
1000563d:	38 d8                	cmp    al,bl
1000563f:	eb 6f                	jmp    100056b0 <check_sbit.part.15+0xea>
10005641:	80 f9 04             	cmp    cl,0x4
10005644:	75 1f                	jne    10005665 <check_sbit.part.15+0x9f>
10005646:	8a 10                	mov    dl,BYTE PTR [eax]
10005648:	be 29 00 00 00       	mov    esi,0x29
1000564d:	84 d2                	test   dl,dl
1000564f:	74 66                	je     100056b7 <check_sbit.part.15+0xf1>
10005651:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
10005654:	84 c0                	test   al,al
10005656:	74 5f                	je     100056b7 <check_sbit.part.15+0xf1>
10005658:	8a 4f 08             	mov    cl,BYTE PTR [edi+0x8]
1000565b:	38 ca                	cmp    dl,cl
1000565d:	77 53                	ja     100056b2 <check_sbit.part.15+0xec>
1000565f:	31 f6                	xor    esi,esi
10005661:	38 c8                	cmp    al,cl
10005663:	eb 4b                	jmp    100056b0 <check_sbit.part.15+0xea>
10005665:	31 f6                	xor    esi,esi
10005667:	80 f9 06             	cmp    cl,0x6
1000566a:	75 4b                	jne    100056b7 <check_sbit.part.15+0xf1>
1000566c:	8a 58 01             	mov    bl,BYTE PTR [eax+0x1]
1000566f:	84 db                	test   bl,bl
10005671:	74 3f                	je     100056b2 <check_sbit.part.15+0xec>
10005673:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
10005676:	88 54 24 02          	mov    BYTE PTR [esp+0x2],dl
1000567a:	84 d2                	test   dl,dl
1000567c:	74 34                	je     100056b2 <check_sbit.part.15+0xec>
1000567e:	8a 48 03             	mov    cl,BYTE PTR [eax+0x3]
10005681:	84 c9                	test   cl,cl
10005683:	74 2d                	je     100056b2 <check_sbit.part.15+0xec>
10005685:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
10005688:	88 44 24 03          	mov    BYTE PTR [esp+0x3],al
1000568c:	84 c0                	test   al,al
1000568e:	74 22                	je     100056b2 <check_sbit.part.15+0xec>
10005690:	8a 57 08             	mov    dl,BYTE PTR [edi+0x8]
10005693:	38 54 24 02          	cmp    BYTE PTR [esp+0x2],dl
10005697:	0f 97 c0             	seta   al
1000569a:	89 c7                	mov    edi,eax
1000569c:	38 d3                	cmp    bl,dl
1000569e:	0f 97 c3             	seta   bl
100056a1:	09 fb                	or     ebx,edi
100056a3:	38 d1                	cmp    cl,dl
100056a5:	0f 97 c1             	seta   cl
100056a8:	08 cb                	or     bl,cl
100056aa:	75 06                	jne    100056b2 <check_sbit.part.15+0xec>
100056ac:	38 54 24 03          	cmp    BYTE PTR [esp+0x3],dl
100056b0:	76 05                	jbe    100056b7 <check_sbit.part.15+0xf1>
100056b2:	be 29 00 00 00       	mov    esi,0x29
100056b7:	89 f0                	mov    eax,esi
100056b9:	5a                   	pop    edx
100056ba:	5b                   	pop    ebx
100056bb:	5e                   	pop    esi
100056bc:	5f                   	pop    edi
100056bd:	c3                   	ret    

100056be <check_phys>:
100056be:	ba 01 00 00 00       	mov    edx,0x1
100056c3:	85 c0                	test   eax,eax
100056c5:	74 19                	je     100056e0 <check_phys+0x22>
100056c7:	ba 37 00 00 00       	mov    edx,0x37
100056cc:	80 78 08 01          	cmp    BYTE PTR [eax+0x8],0x1
100056d0:	77 0e                	ja     100056e0 <check_phys+0x22>
100056d2:	83 38 00             	cmp    DWORD PTR [eax],0x0
100056d5:	78 09                	js     100056e0 <check_phys+0x22>
100056d7:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
100056da:	c1 fa 1f             	sar    edx,0x1f
100056dd:	83 e2 37             	and    edx,0x37
100056e0:	89 d0                	mov    eax,edx
100056e2:	c3                   	ret    

100056e3 <check_time>:
100056e3:	ba 01 00 00 00       	mov    edx,0x1
100056e8:	85 c0                	test   eax,eax
100056ea:	74 2c                	je     10005718 <check_time+0x35>
100056ec:	8a 48 02             	mov    cl,BYTE PTR [eax+0x2]
100056ef:	49                   	dec    ecx
100056f0:	ba 01 00 00 00       	mov    edx,0x1
100056f5:	80 f9 0b             	cmp    cl,0xb
100056f8:	77 1e                	ja     10005718 <check_time+0x35>
100056fa:	8a 48 03             	mov    cl,BYTE PTR [eax+0x3]
100056fd:	49                   	dec    ecx
100056fe:	80 f9 1e             	cmp    cl,0x1e
10005701:	77 15                	ja     10005718 <check_time+0x35>
10005703:	80 78 04 17          	cmp    BYTE PTR [eax+0x4],0x17
10005707:	77 0f                	ja     10005718 <check_time+0x35>
10005709:	80 78 05 3b          	cmp    BYTE PTR [eax+0x5],0x3b
1000570d:	77 09                	ja     10005718 <check_time+0x35>
1000570f:	31 d2                	xor    edx,edx
10005711:	80 78 06 3c          	cmp    BYTE PTR [eax+0x6],0x3c
10005715:	0f 97 c2             	seta   dl
10005718:	89 d0                	mov    eax,edx
1000571a:	c3                   	ret    

1000571b <check_png_text>:
1000571b:	85 c0                	test   eax,eax
1000571d:	74 33                	je     10005752 <check_png_text+0x37>
1000571f:	85 d2                	test   edx,edx
10005721:	74 2f                	je     10005752 <check_png_text+0x37>
10005723:	56                   	push   esi
10005724:	53                   	push   ebx
10005725:	51                   	push   ecx
10005726:	89 c6                	mov    esi,eax
10005728:	31 db                	xor    ebx,ebx
1000572a:	8a 0c 1e             	mov    cl,BYTE PTR [esi+ebx*1]
1000572d:	80 f9 a0             	cmp    cl,0xa0
10005730:	0f 97 c0             	seta   al
10005733:	80 f9 0a             	cmp    cl,0xa
10005736:	0f 94 44 24 03       	sete   BYTE PTR [esp+0x3]
1000573b:	0a 44 24 03          	or     al,BYTE PTR [esp+0x3]
1000573f:	75 08                	jne    10005749 <check_png_text+0x2e>
10005741:	83 e9 20             	sub    ecx,0x20
10005744:	80 f9 5e             	cmp    cl,0x5e
10005747:	77 0f                	ja     10005758 <check_png_text+0x3d>
10005749:	43                   	inc    ebx
1000574a:	39 da                	cmp    edx,ebx
1000574c:	75 dc                	jne    1000572a <check_png_text+0xf>
1000574e:	31 c0                	xor    eax,eax
10005750:	eb 0b                	jmp    1000575d <check_png_text+0x42>
10005752:	b8 01 00 00 00       	mov    eax,0x1
10005757:	c3                   	ret    
10005758:	b8 01 00 00 00       	mov    eax,0x1
1000575d:	5a                   	pop    edx
1000575e:	5b                   	pop    ebx
1000575f:	5e                   	pop    esi
10005760:	c3                   	ret    

10005761 <read_chunk_bytes>:
10005761:	57                   	push   edi
10005762:	56                   	push   esi
10005763:	53                   	push   ebx
10005764:	85 c0                	test   eax,eax
10005766:	74 42                	je     100057aa <read_chunk_bytes+0x49>
10005768:	8b 48 50             	mov    ecx,DWORD PTR [eax+0x50]
1000576b:	39 d1                	cmp    ecx,edx
1000576d:	0f 92 c3             	setb   bl
10005770:	85 c9                	test   ecx,ecx
10005772:	0f 94 c1             	sete   cl
10005775:	08 cb                	or     bl,cl
10005777:	75 31                	jne    100057aa <read_chunk_bytes+0x49>
10005779:	85 d2                	test   edx,edx
1000577b:	74 2d                	je     100057aa <read_chunk_bytes+0x49>
1000577d:	89 d6                	mov    esi,edx
1000577f:	89 c3                	mov    ebx,eax
10005781:	e8 bf fb ff ff       	call   10005345 <read_data>
10005786:	89 c7                	mov    edi,eax
10005788:	85 c0                	test   eax,eax
1000578a:	75 23                	jne    100057af <read_chunk_bytes+0x4e>
1000578c:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
10005790:	75 13                	jne    100057a5 <read_chunk_bytes+0x44>
10005792:	50                   	push   eax
10005793:	56                   	push   esi
10005794:	ff 73 10             	push   DWORD PTR [ebx+0x10]
10005797:	ff 73 54             	push   DWORD PTR [ebx+0x54]
1000579a:	e8 fc ff ff ff       	call   1000579b <read_chunk_bytes+0x3a>	1000579b: R_386_PC32	crc32
1000579f:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100057a2:	83 c4 10             	add    esp,0x10
100057a5:	29 73 50             	sub    DWORD PTR [ebx+0x50],esi
100057a8:	eb 05                	jmp    100057af <read_chunk_bytes+0x4e>
100057aa:	bf 50 00 00 00       	mov    edi,0x50
100057af:	89 f8                	mov    eax,edi
100057b1:	5b                   	pop    ebx
100057b2:	5e                   	pop    esi
100057b3:	5f                   	pop    edi
100057b4:	c3                   	ret    

100057b5 <read_scanline_bytes>:
100057b5:	85 d2                	test   edx,edx
100057b7:	0f 84 c4 00 00 00    	je     10005881 <read_scanline_bytes+0xcc>
100057bd:	85 c0                	test   eax,eax
100057bf:	0f 84 bc 00 00 00    	je     10005881 <read_scanline_bytes+0xcc>
100057c5:	55                   	push   ebp
100057c6:	57                   	push   edi
100057c7:	56                   	push   esi
100057c8:	53                   	push   ebx
100057c9:	83 ec 0c             	sub    esp,0xc
100057cc:	89 c3                	mov    ebx,eax
100057ce:	8d b8 50 09 00 00    	lea    edi,[eax+0x950]
100057d4:	89 88 60 09 00 00    	mov    DWORD PTR [eax+0x960],ecx
100057da:	89 90 5c 09 00 00    	mov    DWORD PTR [eax+0x95c],edx
100057e0:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
100057e7:	0f 84 90 00 00 00    	je     1000587d <read_scanline_bytes+0xc8>
100057ed:	52                   	push   edx
100057ee:	52                   	push   edx
100057ef:	6a 00                	push   0x0
100057f1:	57                   	push   edi
100057f2:	e8 fc ff ff ff       	call   100057f3 <read_scanline_bytes+0x3e>	100057f3: R_386_PC32	inflate
100057f7:	83 c4 10             	add    esp,0x10
100057fa:	85 c0                	test   eax,eax
100057fc:	74 e2                	je     100057e0 <read_scanline_bytes+0x2b>
100057fe:	83 f8 01             	cmp    eax,0x1
10005801:	75 10                	jne    10005813 <read_scanline_bytes+0x5e>
10005803:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
1000580a:	74 d4                	je     100057e0 <read_scanline_bytes+0x2b>
1000580c:	b8 3e 00 00 00       	mov    eax,0x3e
10005811:	eb 79                	jmp    1000588c <read_scanline_bytes+0xd7>
10005813:	83 f8 fb             	cmp    eax,0xfffffffb
10005816:	75 6f                	jne    10005887 <read_scanline_bytes+0xd2>
10005818:	8d 73 48             	lea    esi,[ebx+0x48]
1000581b:	50                   	push   eax
1000581c:	6a 04                	push   0x4
1000581e:	68 0c d6 00 10       	push   0x1000d60c	1000581f: R_386_32	.text
10005823:	56                   	push   esi
10005824:	e8 fc ff ff ff       	call   10005825 <read_scanline_bytes+0x70>	10005825: R_386_PC32	memcmp
10005829:	83 c4 10             	add    esp,0x10
1000582c:	85 c0                	test   eax,eax
1000582e:	75 dc                	jne    1000580c <read_scanline_bytes+0x57>
10005830:	8b 6b 50             	mov    ebp,DWORD PTR [ebx+0x50]
10005833:	85 ed                	test   ebp,ebp
10005835:	75 0d                	jne    10005844 <read_scanline_bytes+0x8f>
10005837:	89 d8                	mov    eax,ebx
10005839:	e8 da fb ff ff       	call   10005418 <read_header>
1000583e:	85 c0                	test   eax,eax
10005840:	74 d9                	je     1000581b <read_scanline_bytes+0x66>
10005842:	eb 48                	jmp    1000588c <read_scanline_bytes+0xd7>
10005844:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005848:	74 0f                	je     10005859 <read_scanline_bytes+0xa4>
1000584a:	81 fd ff 1f 00 00    	cmp    ebp,0x1fff
10005850:	76 0a                	jbe    1000585c <read_scanline_bytes+0xa7>
10005852:	bd 00 20 00 00       	mov    ebp,0x2000
10005857:	eb 03                	jmp    1000585c <read_scanline_bytes+0xa7>
10005859:	8b 6b 44             	mov    ebp,DWORD PTR [ebx+0x44]
1000585c:	89 ea                	mov    edx,ebp
1000585e:	89 d8                	mov    eax,ebx
10005860:	e8 fc fe ff ff       	call   10005761 <read_chunk_bytes>
10005865:	85 c0                	test   eax,eax
10005867:	75 23                	jne    1000588c <read_scanline_bytes+0xd7>
10005869:	89 ab 54 09 00 00    	mov    DWORD PTR [ebx+0x954],ebp
1000586f:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10005872:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
10005878:	e9 63 ff ff ff       	jmp    100057e0 <read_scanline_bytes+0x2b>
1000587d:	31 c0                	xor    eax,eax
1000587f:	eb 0b                	jmp    1000588c <read_scanline_bytes+0xd7>
10005881:	b8 50 00 00 00       	mov    eax,0x50
10005886:	c3                   	ret    
10005887:	b8 3f 00 00 00       	mov    eax,0x3f
1000588c:	83 c4 0c             	add    esp,0xc
1000588f:	5b                   	pop    ebx
10005890:	5e                   	pop    esi
10005891:	5f                   	pop    edi
10005892:	5d                   	pop    ebp
10005893:	c3                   	ret    

10005894 <discard_chunk_bytes>:
10005894:	85 c0                	test   eax,eax
10005896:	74 3f                	je     100058d7 <discard_chunk_bytes+0x43>
10005898:	57                   	push   edi
10005899:	56                   	push   esi
1000589a:	53                   	push   ebx
1000589b:	89 d3                	mov    ebx,edx
1000589d:	85 d2                	test   edx,edx
1000589f:	75 04                	jne    100058a5 <discard_chunk_bytes+0x11>
100058a1:	31 c0                	xor    eax,eax
100058a3:	eb 38                	jmp    100058dd <discard_chunk_bytes+0x49>
100058a5:	89 c6                	mov    esi,eax
100058a7:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
100058ab:	74 22                	je     100058cf <discard_chunk_bytes+0x3b>
100058ad:	bf 00 20 00 00       	mov    edi,0x2000
100058b2:	81 fb ff 1f 00 00    	cmp    ebx,0x1fff
100058b8:	77 02                	ja     100058bc <discard_chunk_bytes+0x28>
100058ba:	89 df                	mov    edi,ebx
100058bc:	89 fa                	mov    edx,edi
100058be:	89 f0                	mov    eax,esi
100058c0:	e8 9c fe ff ff       	call   10005761 <read_chunk_bytes>
100058c5:	85 c0                	test   eax,eax
100058c7:	75 14                	jne    100058dd <discard_chunk_bytes+0x49>
100058c9:	29 fb                	sub    ebx,edi
100058cb:	75 e0                	jne    100058ad <discard_chunk_bytes+0x19>
100058cd:	eb d2                	jmp    100058a1 <discard_chunk_bytes+0xd>
100058cf:	5b                   	pop    ebx
100058d0:	5e                   	pop    esi
100058d1:	5f                   	pop    edi
100058d2:	e9 8a fe ff ff       	jmp    10005761 <read_chunk_bytes>
100058d7:	b8 50 00 00 00       	mov    eax,0x50
100058dc:	c3                   	ret    
100058dd:	5b                   	pop    ebx
100058de:	5e                   	pop    esi
100058df:	5f                   	pop    edi
100058e0:	c3                   	ret    

100058e1 <read_chunk_bytes2>:
100058e1:	55                   	push   ebp
100058e2:	57                   	push   edi
100058e3:	56                   	push   esi
100058e4:	53                   	push   ebx
100058e5:	83 ec 1c             	sub    esp,0x1c
100058e8:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
100058ec:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
100058f0:	85 c0                	test   eax,eax
100058f2:	0f 84 ad 00 00 00    	je     100059a5 <read_chunk_bytes2+0xc4>
100058f8:	89 c3                	mov    ebx,eax
100058fa:	8b 40 50             	mov    eax,DWORD PTR [eax+0x50]
100058fd:	39 c8                	cmp    eax,ecx
100058ff:	0f 92 c1             	setb   cl
10005902:	85 c0                	test   eax,eax
10005904:	0f 94 c0             	sete   al
10005907:	08 c1                	or     cl,al
10005909:	0f 85 96 00 00 00    	jne    100059a5 <read_chunk_bytes2+0xc4>
1000590f:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
10005914:	0f 84 8b 00 00 00    	je     100059a5 <read_chunk_bytes2+0xc4>
1000591a:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
1000591e:	74 0f                	je     1000592f <read_chunk_bytes2+0x4e>
10005920:	b8 00 20 00 00       	mov    eax,0x2000
10005925:	81 7c 24 04 00 20 00 00 	cmp    DWORD PTR [esp+0x4],0x2000
1000592d:	77 04                	ja     10005933 <read_chunk_bytes2+0x52>
1000592f:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10005933:	89 c5                	mov    ebp,eax
10005935:	3b 44 24 04          	cmp    eax,DWORD PTR [esp+0x4]
10005939:	76 04                	jbe    1000593f <read_chunk_bytes2+0x5e>
1000593b:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
1000593f:	55                   	push   ebp
10005940:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10005944:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
10005947:	53                   	push   ebx
10005948:	ff 53 14             	call   DWORD PTR [ebx+0x14]
1000594b:	89 c2                	mov    edx,eax
1000594d:	83 c4 10             	add    esp,0x10
10005950:	85 c0                	test   eax,eax
10005952:	75 5d                	jne    100059b1 <read_chunk_bytes2+0xd0>
10005954:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005958:	75 0b                	jne    10005965 <read_chunk_bytes2+0x84>
1000595a:	8b 73 10             	mov    esi,DWORD PTR [ebx+0x10]
1000595d:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10005961:	89 e9                	mov    ecx,ebp
10005963:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005965:	89 e8                	mov    eax,ebp
10005967:	03 43 04             	add    eax,DWORD PTR [ebx+0x4]
1000596a:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000596d:	72 3d                	jb     100059ac <read_chunk_bytes2+0xcb>
1000596f:	f6 43 74 40          	test   BYTE PTR [ebx+0x74],0x40
10005973:	75 1c                	jne    10005991 <read_chunk_bytes2+0xb0>
10005975:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10005979:	50                   	push   eax
1000597a:	55                   	push   ebp
1000597b:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
1000597f:	ff 73 54             	push   DWORD PTR [ebx+0x54]
10005982:	e8 fc ff ff ff       	call   10005983 <read_chunk_bytes2+0xa2>	10005983: R_386_PC32	crc32
10005987:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
1000598a:	83 c4 10             	add    esp,0x10
1000598d:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10005991:	29 6b 50             	sub    DWORD PTR [ebx+0x50],ebp
10005994:	01 6c 24 08          	add    DWORD PTR [esp+0x8],ebp
10005998:	b8 00 20 00 00       	mov    eax,0x2000
1000599d:	29 6c 24 04          	sub    DWORD PTR [esp+0x4],ebp
100059a1:	75 90                	jne    10005933 <read_chunk_bytes2+0x52>
100059a3:	eb 0c                	jmp    100059b1 <read_chunk_bytes2+0xd0>
100059a5:	ba 50 00 00 00       	mov    edx,0x50
100059aa:	eb 05                	jmp    100059b1 <read_chunk_bytes2+0xd0>
100059ac:	ba 03 00 00 00       	mov    edx,0x3
100059b1:	89 d0                	mov    eax,edx
100059b3:	83 c4 1c             	add    esp,0x1c
100059b6:	5b                   	pop    ebx
100059b7:	5e                   	pop    esi
100059b8:	5f                   	pop    edi
100059b9:	5d                   	pop    ebp
100059ba:	c3                   	ret    

100059bb <file_read_fn>:
100059bb:	53                   	push   ebx
100059bc:	83 ec 08             	sub    esp,0x8
100059bf:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100059c3:	53                   	push   ebx
100059c4:	6a 01                	push   0x1
100059c6:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100059ca:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
100059ce:	e8 fc ff ff ff       	call   100059cf <file_read_fn+0x14>	100059cf: R_386_PC32	fread
100059d3:	83 c4 10             	add    esp,0x10
100059d6:	48                   	dec    eax
100059d7:	74 0f                	je     100059e8 <file_read_fn+0x2d>
100059d9:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100059dc:	83 e0 20             	and    eax,0x20
100059df:	66 83 f8 01          	cmp    ax,0x1
100059e3:	19 d2                	sbb    edx,edx
100059e5:	4a                   	dec    edx
100059e6:	eb 02                	jmp    100059ea <file_read_fn+0x2f>
100059e8:	31 d2                	xor    edx,edx
100059ea:	89 d0                	mov    eax,edx
100059ec:	83 c4 08             	add    esp,0x8
100059ef:	5b                   	pop    ebx
100059f0:	c3                   	ret    

100059f1 <require_bytes>:
100059f1:	85 c0                	test   eax,eax
100059f3:	0f 84 9f 00 00 00    	je     10005a98 <require_bytes+0xa7>
100059f9:	57                   	push   edi
100059fa:	56                   	push   esi
100059fb:	53                   	push   ebx
100059fc:	89 d6                	mov    esi,edx
100059fe:	89 c3                	mov    ebx,eax
10005a00:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005a04:	74 4a                	je     10005a50 <require_bytes+0x5f>
10005a06:	8b 50 08             	mov    edx,DWORD PTR [eax+0x8]
10005a09:	31 c0                	xor    eax,eax
10005a0b:	39 f2                	cmp    edx,esi
10005a0d:	0f 83 8b 00 00 00    	jae    10005a9e <require_bytes+0xad>
10005a13:	81 fa 0b 20 00 00    	cmp    edx,0x200b
10005a19:	77 0d                	ja     10005a28 <require_bytes+0x37>
10005a1b:	b8 0c 20 00 00       	mov    eax,0x200c
10005a20:	81 fe 0c 20 00 00    	cmp    esi,0x200c
10005a26:	76 02                	jbe    10005a2a <require_bytes+0x39>
10005a28:	89 f0                	mov    eax,esi
10005a2a:	52                   	push   edx
10005a2b:	52                   	push   edx
10005a2c:	50                   	push   eax
10005a2d:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10005a30:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005a33:	83 c4 10             	add    esp,0x10
10005a36:	85 c0                	test   eax,eax
10005a38:	75 0e                	jne    10005a48 <require_bytes+0x57>
10005a3a:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005a41:	b8 02 00 00 00       	mov    eax,0x2
10005a46:	eb 56                	jmp    10005a9e <require_bytes+0xad>
10005a48:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10005a4b:	89 73 08             	mov    DWORD PTR [ebx+0x8],esi
10005a4e:	eb 41                	jmp    10005a91 <require_bytes+0xa0>
10005a50:	b8 03 00 00 00       	mov    eax,0x3
10005a55:	03 73 3c             	add    esi,DWORD PTR [ebx+0x3c]
10005a58:	72 44                	jb     10005a9e <require_bytes+0xad>
10005a5a:	8b 7b 38             	mov    edi,DWORD PTR [ebx+0x38]
10005a5d:	31 c0                	xor    eax,eax
10005a5f:	39 fe                	cmp    esi,edi
10005a61:	76 3b                	jbe    10005a9e <require_bytes+0xad>
10005a63:	81 ff 00 40 00 00    	cmp    edi,0x4000
10005a69:	73 05                	jae    10005a70 <require_bytes+0x7f>
10005a6b:	bf 00 40 00 00       	mov    edi,0x4000
10005a70:	39 fe                	cmp    esi,edi
10005a72:	76 04                	jbe    10005a78 <require_bytes+0x87>
10005a74:	01 ff                	add    edi,edi
10005a76:	eb f8                	jmp    10005a70 <require_bytes+0x7f>
10005a78:	50                   	push   eax
10005a79:	50                   	push   eax
10005a7a:	57                   	push   edi
10005a7b:	ff 73 30             	push   DWORD PTR [ebx+0x30]
10005a7e:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005a81:	83 c4 10             	add    esp,0x10
10005a84:	85 c0                	test   eax,eax
10005a86:	74 b2                	je     10005a3a <require_bytes+0x49>
10005a88:	89 43 30             	mov    DWORD PTR [ebx+0x30],eax
10005a8b:	89 7b 38             	mov    DWORD PTR [ebx+0x38],edi
10005a8e:	03 43 3c             	add    eax,DWORD PTR [ebx+0x3c]
10005a91:	89 43 34             	mov    DWORD PTR [ebx+0x34],eax
10005a94:	31 c0                	xor    eax,eax
10005a96:	eb 06                	jmp    10005a9e <require_bytes+0xad>
10005a98:	b8 50 00 00 00       	mov    eax,0x50
10005a9d:	c3                   	ret    
10005a9e:	5b                   	pop    ebx
10005a9f:	5e                   	pop    esi
10005aa0:	5f                   	pop    edi
10005aa1:	c3                   	ret    

10005aa2 <write_data.part.19>:
10005aa2:	55                   	push   ebp
10005aa3:	57                   	push   edi
10005aa4:	56                   	push   esi
10005aa5:	53                   	push   ebx
10005aa6:	83 ec 0c             	sub    esp,0xc
10005aa9:	89 c3                	mov    ebx,eax
10005aab:	89 d6                	mov    esi,edx
10005aad:	89 cd                	mov    ebp,ecx
10005aaf:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005ab3:	74 33                	je     10005ae8 <write_data.part.19+0x46>
10005ab5:	b8 50 00 00 00       	mov    eax,0x50
10005aba:	81 f9 00 20 00 00    	cmp    ecx,0x2000
10005ac0:	77 54                	ja     10005b16 <write_data.part.19+0x74>
10005ac2:	51                   	push   ecx
10005ac3:	52                   	push   edx
10005ac4:	ff 73 1c             	push   DWORD PTR [ebx+0x1c]
10005ac7:	53                   	push   ebx
10005ac8:	ff 53 18             	call   DWORD PTR [ebx+0x18]
10005acb:	83 c4 10             	add    esp,0x10
10005ace:	85 c0                	test   eax,eax
10005ad0:	74 39                	je     10005b0b <write_data.part.19+0x69>
10005ad2:	8d 50 02             	lea    edx,[eax+0x2]
10005ad5:	83 fa 02             	cmp    edx,0x2
10005ad8:	76 05                	jbe    10005adf <write_data.part.19+0x3d>
10005ada:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10005adf:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005ae6:	eb 2e                	jmp    10005b16 <write_data.part.19+0x74>
10005ae8:	89 ca                	mov    edx,ecx
10005aea:	e8 02 ff ff ff       	call   100059f1 <require_bytes>
10005aef:	85 c0                	test   eax,eax
10005af1:	74 0e                	je     10005b01 <write_data.part.19+0x5f>
10005af3:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10005afa:	b8 02 00 00 00       	mov    eax,0x2
10005aff:	eb 15                	jmp    10005b16 <write_data.part.19+0x74>
10005b01:	8b 7b 34             	mov    edi,DWORD PTR [ebx+0x34]
10005b04:	89 e9                	mov    ecx,ebp
10005b06:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005b08:	01 6b 34             	add    DWORD PTR [ebx+0x34],ebp
10005b0b:	03 6b 3c             	add    ebp,DWORD PTR [ebx+0x3c]
10005b0e:	89 6b 3c             	mov    DWORD PTR [ebx+0x3c],ebp
10005b11:	19 c0                	sbb    eax,eax
10005b13:	83 e0 03             	and    eax,0x3
10005b16:	83 c4 0c             	add    esp,0xc
10005b19:	5b                   	pop    ebx
10005b1a:	5e                   	pop    esi
10005b1b:	5f                   	pop    edi
10005b1c:	5d                   	pop    ebp
10005b1d:	c3                   	ret    

10005b1e <write_header>:
10005b1e:	55                   	push   ebp
10005b1f:	57                   	push   edi
10005b20:	56                   	push   esi
10005b21:	53                   	push   ebx
10005b22:	83 ec 0c             	sub    esp,0xc
10005b25:	bd 50 00 00 00       	mov    ebp,0x50
10005b2a:	85 c0                	test   eax,eax
10005b2c:	74 62                	je     10005b90 <write_header+0x72>
10005b2e:	85 d2                	test   edx,edx
10005b30:	74 5e                	je     10005b90 <write_header+0x72>
10005b32:	85 c9                	test   ecx,ecx
10005b34:	78 5a                	js     10005b90 <write_header+0x72>
10005b36:	89 ce                	mov    esi,ecx
10005b38:	89 d7                	mov    edi,edx
10005b3a:	89 c3                	mov    ebx,eax
10005b3c:	8d 51 0c             	lea    edx,[ecx+0xc]
10005b3f:	e8 ad fe ff ff       	call   100059f1 <require_bytes>
10005b44:	89 c5                	mov    ebp,eax
10005b46:	85 c0                	test   eax,eax
10005b48:	75 46                	jne    10005b90 <write_header+0x72>
10005b4a:	50                   	push   eax
10005b4b:	6a 00                	push   0x0
10005b4d:	6a 00                	push   0x0
10005b4f:	6a 00                	push   0x0
10005b51:	e8 fc ff ff ff       	call   10005b52 <write_header+0x34>	10005b52: R_386_PC32	crc32
10005b56:	83 c4 0c             	add    esp,0xc
10005b59:	6a 04                	push   0x4
10005b5b:	57                   	push   edi
10005b5c:	50                   	push   eax
10005b5d:	e8 fc ff ff ff       	call   10005b5e <write_header+0x40>	10005b5e: R_386_PC32	crc32
10005b62:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
10005b65:	8b 07                	mov    eax,DWORD PTR [edi]
10005b67:	89 43 48             	mov    DWORD PTR [ebx+0x48],eax
10005b6a:	89 73 44             	mov    DWORD PTR [ebx+0x44],esi
10005b6d:	83 c4 10             	add    esp,0x10
10005b70:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005b74:	74 0e                	je     10005b84 <write_header+0x66>
10005b76:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10005b79:	83 c0 08             	add    eax,0x8
10005b7c:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10005b80:	89 06                	mov    DWORD PTR [esi],eax
10005b82:	eb 0c                	jmp    10005b90 <write_header+0x72>
10005b84:	8b 43 34             	mov    eax,DWORD PTR [ebx+0x34]
10005b87:	83 c0 08             	add    eax,0x8
10005b8a:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10005b8e:	89 07                	mov    DWORD PTR [edi],eax
10005b90:	89 e8                	mov    eax,ebp
10005b92:	83 c4 0c             	add    esp,0xc
10005b95:	5b                   	pop    ebx
10005b96:	5e                   	pop    esi
10005b97:	5f                   	pop    edi
10005b98:	5d                   	pop    ebp
10005b99:	c3                   	ret    

10005b9a <finish_chunk>:
10005b9a:	85 c0                	test   eax,eax
10005b9c:	0f 84 aa 00 00 00    	je     10005c4c <finish_chunk+0xb2>
10005ba2:	55                   	push   ebp
10005ba3:	57                   	push   edi
10005ba4:	56                   	push   esi
10005ba5:	53                   	push   ebx
10005ba6:	83 ec 0c             	sub    esp,0xc
10005ba9:	f6 40 74 01          	test   BYTE PTR [eax+0x74],0x1
10005bad:	74 05                	je     10005bb4 <finish_chunk+0x1a>
10005baf:	8b 48 0c             	mov    ecx,DWORD PTR [eax+0xc]
10005bb2:	eb 03                	jmp    10005bb7 <finish_chunk+0x1d>
10005bb4:	8b 48 34             	mov    ecx,DWORD PTR [eax+0x34]
10005bb7:	8d 71 08             	lea    esi,[ecx+0x8]
10005bba:	89 c3                	mov    ebx,eax
10005bbc:	8b 50 44             	mov    edx,DWORD PTR [eax+0x44]
10005bbf:	89 c8                	mov    eax,ecx
10005bc1:	e8 c6 ec ff ff       	call   1000488c <write_u32>
10005bc6:	8b 43 48             	mov    eax,DWORD PTR [ebx+0x48]
10005bc9:	89 41 04             	mov    DWORD PTR [ecx+0x4],eax
10005bcc:	50                   	push   eax
10005bcd:	ff 73 44             	push   DWORD PTR [ebx+0x44]
10005bd0:	56                   	push   esi
10005bd1:	ff 73 4c             	push   DWORD PTR [ebx+0x4c]
10005bd4:	e8 fc ff ff ff       	call   10005bd5 <finish_chunk+0x3b>	10005bd5: R_386_PC32	crc32
10005bd9:	89 c2                	mov    edx,eax
10005bdb:	89 43 4c             	mov    DWORD PTR [ebx+0x4c],eax
10005bde:	8b 43 44             	mov    eax,DWORD PTR [ebx+0x44]
10005be1:	01 f0                	add    eax,esi
10005be3:	e8 a4 ec ff ff       	call   1000488c <write_u32>
10005be8:	83 c4 10             	add    esp,0x10
10005beb:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005bef:	8b 73 44             	mov    esi,DWORD PTR [ebx+0x44]
10005bf2:	74 30                	je     10005c24 <finish_chunk+0x8a>
10005bf4:	8b 7b 0c             	mov    edi,DWORD PTR [ebx+0xc]
10005bf7:	83 c6 0c             	add    esi,0xc
10005bfa:	31 ed                	xor    ebp,ebp
10005bfc:	85 f6                	test   esi,esi
10005bfe:	74 48                	je     10005c48 <finish_chunk+0xae>
10005c00:	01 ef                	add    edi,ebp
10005c02:	bd 00 20 00 00       	mov    ebp,0x2000
10005c07:	81 fe ff 1f 00 00    	cmp    esi,0x1fff
10005c0d:	77 02                	ja     10005c11 <finish_chunk+0x77>
10005c0f:	89 f5                	mov    ebp,esi
10005c11:	89 e9                	mov    ecx,ebp
10005c13:	89 fa                	mov    edx,edi
10005c15:	89 d8                	mov    eax,ebx
10005c17:	e8 86 fe ff ff       	call   10005aa2 <write_data.part.19>
10005c1c:	85 c0                	test   eax,eax
10005c1e:	75 32                	jne    10005c52 <finish_chunk+0xb8>
10005c20:	29 ee                	sub    esi,ebp
10005c22:	eb d8                	jmp    10005bfc <finish_chunk+0x62>
10005c24:	89 f0                	mov    eax,esi
10005c26:	03 43 3c             	add    eax,DWORD PTR [ebx+0x3c]
10005c29:	72 0d                	jb     10005c38 <finish_chunk+0x9e>
10005c2b:	83 c0 0c             	add    eax,0xc
10005c2e:	89 43 3c             	mov    DWORD PTR [ebx+0x3c],eax
10005c31:	83 f8 0b             	cmp    eax,0xb
10005c34:	77 0c                	ja     10005c42 <finish_chunk+0xa8>
10005c36:	eb 03                	jmp    10005c3b <finish_chunk+0xa1>
10005c38:	89 43 3c             	mov    DWORD PTR [ebx+0x3c],eax
10005c3b:	b8 03 00 00 00       	mov    eax,0x3
10005c40:	eb 10                	jmp    10005c52 <finish_chunk+0xb8>
10005c42:	83 c6 0c             	add    esi,0xc
10005c45:	01 73 34             	add    DWORD PTR [ebx+0x34],esi
10005c48:	31 c0                	xor    eax,eax
10005c4a:	eb 06                	jmp    10005c52 <finish_chunk+0xb8>
10005c4c:	b8 50 00 00 00       	mov    eax,0x50
10005c51:	c3                   	ret    
10005c52:	83 c4 0c             	add    esp,0xc
10005c55:	5b                   	pop    ebx
10005c56:	5e                   	pop    esi
10005c57:	5f                   	pop    edi
10005c58:	5d                   	pop    ebp
10005c59:	c3                   	ret    

10005c5a <write_chunk>:
10005c5a:	55                   	push   ebp
10005c5b:	57                   	push   edi
10005c5c:	56                   	push   esi
10005c5d:	53                   	push   ebx
10005c5e:	83 ec 1c             	sub    esp,0x1c
10005c61:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10005c65:	85 c0                	test   eax,eax
10005c67:	74 3e                	je     10005ca7 <write_chunk+0x4d>
10005c69:	89 c5                	mov    ebp,eax
10005c6b:	85 c9                	test   ecx,ecx
10005c6d:	75 09                	jne    10005c78 <write_chunk+0x1e>
10005c6f:	b8 50 00 00 00       	mov    eax,0x50
10005c74:	85 db                	test   ebx,ebx
10005c76:	75 34                	jne    10005cac <write_chunk+0x52>
10005c78:	89 ce                	mov    esi,ecx
10005c7a:	83 ec 0c             	sub    esp,0xc
10005c7d:	8d 44 24 18          	lea    eax,[esp+0x18]
10005c81:	50                   	push   eax
10005c82:	89 d9                	mov    ecx,ebx
10005c84:	89 e8                	mov    eax,ebp
10005c86:	e8 93 fe ff ff       	call   10005b1e <write_header>
10005c8b:	83 c4 10             	add    esp,0x10
10005c8e:	85 c0                	test   eax,eax
10005c90:	75 1a                	jne    10005cac <write_chunk+0x52>
10005c92:	85 db                	test   ebx,ebx
10005c94:	74 08                	je     10005c9e <write_chunk+0x44>
10005c96:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10005c9a:	89 d9                	mov    ecx,ebx
10005c9c:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005c9e:	89 e8                	mov    eax,ebp
10005ca0:	e8 f5 fe ff ff       	call   10005b9a <finish_chunk>
10005ca5:	eb 05                	jmp    10005cac <write_chunk+0x52>
10005ca7:	b8 50 00 00 00       	mov    eax,0x50
10005cac:	83 c4 1c             	add    esp,0x1c
10005caf:	5b                   	pop    ebx
10005cb0:	5e                   	pop    esi
10005cb1:	5f                   	pop    edi
10005cb2:	5d                   	pop    ebp
10005cb3:	c3                   	ret    

10005cb4 <calculate_subimages>:
10005cb4:	85 c0                	test   eax,eax
10005cb6:	0f 84 2a 01 00 00    	je     10005de6 <calculate_subimages+0x132>
10005cbc:	55                   	push   ebp
10005cbd:	57                   	push   edi
10005cbe:	56                   	push   esi
10005cbf:	53                   	push   ebx
10005cc0:	89 c1                	mov    ecx,eax
10005cc2:	8d b8 e0 08 00 00    	lea    edi,[eax+0x8e0]
10005cc8:	8b 90 f0 00 00 00    	mov    edx,DWORD PTR [eax+0xf0]
10005cce:	8b 80 f4 00 00 00    	mov    eax,DWORD PTR [eax+0xf4]
10005cd4:	80 b9 fc 00 00 00 01 	cmp    BYTE PTR [ecx+0xfc],0x1
10005cdb:	0f 85 94 00 00 00    	jne    10005d75 <calculate_subimages+0xc1>
10005ce1:	8d 5a 07             	lea    ebx,[edx+0x7]
10005ce4:	c1 eb 03             	shr    ebx,0x3
10005ce7:	89 99 e0 08 00 00    	mov    DWORD PTR [ecx+0x8e0],ebx
10005ced:	8d 70 07             	lea    esi,[eax+0x7]
10005cf0:	c1 ee 03             	shr    esi,0x3
10005cf3:	89 b1 e4 08 00 00    	mov    DWORD PTR [ecx+0x8e4],esi
10005cf9:	8d 5a 03             	lea    ebx,[edx+0x3]
10005cfc:	89 dd                	mov    ebp,ebx
10005cfe:	c1 ed 03             	shr    ebp,0x3
10005d01:	89 a9 f0 08 00 00    	mov    DWORD PTR [ecx+0x8f0],ebp
10005d07:	89 b1 f4 08 00 00    	mov    DWORD PTR [ecx+0x8f4],esi
10005d0d:	c1 eb 02             	shr    ebx,0x2
10005d10:	89 99 00 09 00 00    	mov    DWORD PTR [ecx+0x900],ebx
10005d16:	8d 70 03             	lea    esi,[eax+0x3]
10005d19:	89 f3                	mov    ebx,esi
10005d1b:	c1 eb 03             	shr    ebx,0x3
10005d1e:	89 99 04 09 00 00    	mov    DWORD PTR [ecx+0x904],ebx
10005d24:	8d 5a 01             	lea    ebx,[edx+0x1]
10005d27:	89 dd                	mov    ebp,ebx
10005d29:	c1 ed 02             	shr    ebp,0x2
10005d2c:	89 a9 10 09 00 00    	mov    DWORD PTR [ecx+0x910],ebp
10005d32:	c1 ee 02             	shr    esi,0x2
10005d35:	89 b1 14 09 00 00    	mov    DWORD PTR [ecx+0x914],esi
10005d3b:	d1 eb                	shr    ebx,1
10005d3d:	89 99 20 09 00 00    	mov    DWORD PTR [ecx+0x920],ebx
10005d43:	8d 58 01             	lea    ebx,[eax+0x1]
10005d46:	89 de                	mov    esi,ebx
10005d48:	c1 ee 02             	shr    esi,0x2
10005d4b:	89 b1 24 09 00 00    	mov    DWORD PTR [ecx+0x924],esi
10005d51:	89 d6                	mov    esi,edx
10005d53:	d1 ee                	shr    esi,1
10005d55:	89 b1 30 09 00 00    	mov    DWORD PTR [ecx+0x930],esi
10005d5b:	d1 eb                	shr    ebx,1
10005d5d:	89 99 34 09 00 00    	mov    DWORD PTR [ecx+0x934],ebx
10005d63:	89 91 40 09 00 00    	mov    DWORD PTR [ecx+0x940],edx
10005d69:	d1 e8                	shr    eax,1
10005d6b:	89 81 44 09 00 00    	mov    DWORD PTR [ecx+0x944],eax
10005d71:	31 db                	xor    ebx,ebx
10005d73:	eb 0e                	jmp    10005d83 <calculate_subimages+0xcf>
10005d75:	89 91 e0 08 00 00    	mov    DWORD PTR [ecx+0x8e0],edx
10005d7b:	89 81 e4 08 00 00    	mov    DWORD PTR [ecx+0x8e4],eax
10005d81:	eb ee                	jmp    10005d71 <calculate_subimages+0xbd>
10005d83:	89 de                	mov    esi,ebx
10005d85:	c1 e6 04             	shl    esi,0x4
10005d88:	8b 94 31 e0 08 00 00 	mov    edx,DWORD PTR [ecx+esi*1+0x8e0]
10005d8f:	85 d2                	test   edx,edx
10005d91:	74 49                	je     10005ddc <calculate_subimages+0x128>
10005d93:	83 bc 31 e4 08 00 00 00 	cmp    DWORD PTR [ecx+esi*1+0x8e4],0x0
10005d9b:	74 3f                	je     10005ddc <calculate_subimages+0x128>
10005d9d:	0f b6 81 f8 00 00 00 	movzx  eax,BYTE PTR [ecx+0xf8]
10005da4:	0f af 81 b0 09 00 00 	imul   eax,DWORD PTR [ecx+0x9b0]
10005dab:	f7 e2                	mul    edx
10005dad:	70 3d                	jo     10005dec <calculate_subimages+0x138>
10005daf:	83 c0 0f             	add    eax,0xf
10005db2:	83 f8 0e             	cmp    eax,0xe
10005db5:	76 35                	jbe    10005dec <calculate_subimages+0x138>
10005db7:	c1 e8 03             	shr    eax,0x3
10005dba:	89 84 31 ec 08 00 00 	mov    DWORD PTR [ecx+esi*1+0x8ec],eax
10005dc1:	8b 91 bc 09 00 00    	mov    edx,DWORD PTR [ecx+0x9bc]
10005dc7:	c1 e2 04             	shl    edx,0x4
10005dca:	39 44 17 0c          	cmp    DWORD PTR [edi+edx*1+0xc],eax
10005dce:	73 06                	jae    10005dd6 <calculate_subimages+0x122>
10005dd0:	89 99 bc 09 00 00    	mov    DWORD PTR [ecx+0x9bc],ebx
10005dd6:	89 99 c0 09 00 00    	mov    DWORD PTR [ecx+0x9c0],ebx
10005ddc:	43                   	inc    ebx
10005ddd:	83 fb 07             	cmp    ebx,0x7
10005de0:	75 a1                	jne    10005d83 <calculate_subimages+0xcf>
10005de2:	31 c0                	xor    eax,eax
10005de4:	eb 0b                	jmp    10005df1 <calculate_subimages+0x13d>
10005de6:	b8 50 00 00 00       	mov    eax,0x50
10005deb:	c3                   	ret    
10005dec:	b8 03 00 00 00       	mov    eax,0x3
10005df1:	5b                   	pop    ebx
10005df2:	5e                   	pop    esi
10005df3:	5f                   	pop    edi
10005df4:	5d                   	pop    ebp
10005df5:	c3                   	ret    

10005df6 <spng__inflate_stream>:
10005df6:	55                   	push   ebp
10005df7:	57                   	push   edi
10005df8:	56                   	push   esi
10005df9:	53                   	push   ebx
10005dfa:	83 ec 2c             	sub    esp,0x2c
10005dfd:	89 c3                	mov    ebx,eax
10005dff:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
10005e03:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
10005e07:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10005e0b:	e8 6e f2 ff ff       	call   1000507e <spng__inflate_init>
10005e10:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10005e14:	85 c0                	test   eax,eax
10005e16:	0f 85 c4 01 00 00    	jne    10005fe0 <spng__inflate_stream+0x1ea>
10005e1c:	8b 83 e0 00 00 00    	mov    eax,DWORD PTR [ebx+0xe0]
10005e22:	2b 83 e4 00 00 00    	sub    eax,DWORD PTR [ebx+0xe4]
10005e28:	8b b3 dc 00 00 00    	mov    esi,DWORD PTR [ebx+0xdc]
10005e2e:	39 c6                	cmp    esi,eax
10005e30:	76 02                	jbe    10005e34 <spng__inflate_stream+0x3e>
10005e32:	89 c6                	mov    esi,eax
10005e34:	39 74 24 40          	cmp    DWORD PTR [esp+0x40],esi
10005e38:	0f 87 90 01 00 00    	ja     10005fce <spng__inflate_stream+0x1d8>
10005e3e:	2b 74 24 40          	sub    esi,DWORD PTR [esp+0x40]
10005e42:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10005e45:	ba 00 20 00 00       	mov    edx,0x2000
10005e4a:	e8 5d f3 ff ff       	call   100051ac <spng__malloc.isra.0>
10005e4f:	89 c5                	mov    ebp,eax
10005e51:	85 c0                	test   eax,eax
10005e53:	0f 84 7f 01 00 00    	je     10005fd8 <spng__inflate_stream+0x1e2>
10005e59:	8d 83 50 09 00 00    	lea    eax,[ebx+0x950]
10005e5f:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10005e63:	83 7c 24 44 00       	cmp    DWORD PTR [esp+0x44],0x0
10005e68:	74 16                	je     10005e80 <spng__inflate_stream+0x8a>
10005e6a:	85 ff                	test   edi,edi
10005e6c:	74 12                	je     10005e80 <spng__inflate_stream+0x8a>
10005e6e:	89 bb 54 09 00 00    	mov    DWORD PTR [ebx+0x954],edi
10005e74:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10005e78:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
10005e7e:	eb 14                	jmp    10005e94 <spng__inflate_stream+0x9e>
10005e80:	c7 83 54 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x954],0x0
10005e8a:	c7 83 50 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x950],0x0
10005e94:	c7 83 60 09 00 00 00 20 00 00 	mov    DWORD PTR [ebx+0x960],0x2000
10005e9e:	89 ab 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],ebp
10005ea4:	d1 ee                	shr    esi,1
10005ea6:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10005eaa:	be 00 20 00 00       	mov    esi,0x2000
10005eaf:	51                   	push   ecx
10005eb0:	51                   	push   ecx
10005eb1:	6a 00                	push   0x0
10005eb3:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10005eb7:	e8 fc ff ff ff       	call   10005eb8 <spng__inflate_stream+0xc2>	10005eb8: R_386_PC32	inflate
10005ebc:	83 c4 10             	add    esp,0x10
10005ebf:	83 f8 01             	cmp    eax,0x1
10005ec2:	0f 84 b2 00 00 00    	je     10005f7a <spng__inflate_stream+0x184>
10005ec8:	83 f8 fb             	cmp    eax,0xfffffffb
10005ecb:	74 08                	je     10005ed5 <spng__inflate_stream+0xdf>
10005ecd:	85 c0                	test   eax,eax
10005ecf:	0f 85 8a 00 00 00    	jne    10005f5f <spng__inflate_stream+0x169>
10005ed5:	83 bb 60 09 00 00 00 	cmp    DWORD PTR [ebx+0x960],0x0
10005edc:	75 47                	jne    10005f25 <spng__inflate_stream+0x12f>
10005ede:	83 c8 ff             	or     eax,0xffffffff
10005ee1:	31 d2                	xor    edx,edx
10005ee3:	f7 f6                	div    esi
10005ee5:	48                   	dec    eax
10005ee6:	0f 84 cd 00 00 00    	je     10005fb9 <spng__inflate_stream+0x1c3>
10005eec:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
10005ef0:	0f 82 c3 00 00 00    	jb     10005fb9 <spng__inflate_stream+0x1c3>
10005ef6:	8d 3c 36             	lea    edi,[esi+esi*1]
10005ef9:	52                   	push   edx
10005efa:	52                   	push   edx
10005efb:	57                   	push   edi
10005efc:	55                   	push   ebp
10005efd:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005f00:	83 c4 10             	add    esp,0x10
10005f03:	85 c0                	test   eax,eax
10005f05:	75 0a                	jne    10005f11 <spng__inflate_stream+0x11b>
10005f07:	bf 02 00 00 00       	mov    edi,0x2
10005f0c:	e9 ad 00 00 00       	jmp    10005fbe <spng__inflate_stream+0x1c8>
10005f11:	89 b3 60 09 00 00    	mov    DWORD PTR [ebx+0x960],esi
10005f17:	01 c6                	add    esi,eax
10005f19:	89 b3 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],esi
10005f1f:	89 c5                	mov    ebp,eax
10005f21:	89 fe                	mov    esi,edi
10005f23:	eb 8a                	jmp    10005eaf <spng__inflate_stream+0xb9>
10005f25:	83 bb 54 09 00 00 00 	cmp    DWORD PTR [ebx+0x954],0x0
10005f2c:	75 81                	jne    10005eaf <spng__inflate_stream+0xb9>
10005f2e:	8b 4b 50             	mov    ecx,DWORD PTR [ebx+0x50]
10005f31:	81 f9 00 20 00 00    	cmp    ecx,0x2000
10005f37:	76 0b                	jbe    10005f44 <spng__inflate_stream+0x14e>
10005f39:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
10005f3d:	74 05                	je     10005f44 <spng__inflate_stream+0x14e>
10005f3f:	b9 00 20 00 00       	mov    ecx,0x2000
10005f44:	89 ca                	mov    edx,ecx
10005f46:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
10005f4a:	89 d8                	mov    eax,ebx
10005f4c:	e8 10 f8 ff ff       	call   10005761 <read_chunk_bytes>
10005f51:	89 c7                	mov    edi,eax
10005f53:	85 c0                	test   eax,eax
10005f55:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10005f59:	74 0b                	je     10005f66 <spng__inflate_stream+0x170>
10005f5b:	85 c9                	test   ecx,ecx
10005f5d:	75 5f                	jne    10005fbe <spng__inflate_stream+0x1c8>
10005f5f:	bf 40 00 00 00       	mov    edi,0x40
10005f64:	eb 58                	jmp    10005fbe <spng__inflate_stream+0x1c8>
10005f66:	89 8b 54 09 00 00    	mov    DWORD PTR [ebx+0x954],ecx
10005f6c:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10005f6f:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
10005f75:	e9 35 ff ff ff       	jmp    10005eaf <spng__inflate_stream+0xb9>
10005f7a:	8b b3 64 09 00 00    	mov    esi,DWORD PTR [ebx+0x964]
10005f80:	85 f6                	test   esi,esi
10005f82:	74 db                	je     10005f5f <spng__inflate_stream+0x169>
10005f84:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10005f88:	0f 82 79 ff ff ff    	jb     10005f07 <spng__inflate_stream+0x111>
10005f8e:	50                   	push   eax
10005f8f:	50                   	push   eax
10005f90:	56                   	push   esi
10005f91:	55                   	push   ebp
10005f92:	ff 53 5c             	call   DWORD PTR [ebx+0x5c]
10005f95:	89 c7                	mov    edi,eax
10005f97:	83 c4 10             	add    esp,0x10
10005f9a:	85 c0                	test   eax,eax
10005f9c:	0f 84 65 ff ff ff    	je     10005f07 <spng__inflate_stream+0x111>
10005fa2:	89 f2                	mov    edx,esi
10005fa4:	89 d8                	mov    eax,ebx
10005fa6:	e8 3f f2 ff ff       	call   100051ea <increase_cache_usage>
10005fab:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10005faf:	89 38                	mov    DWORD PTR [eax],edi
10005fb1:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10005fb5:	89 30                	mov    DWORD PTR [eax],esi
10005fb7:	eb 27                	jmp    10005fe0 <spng__inflate_stream+0x1ea>
10005fb9:	bf 4d 00 00 00       	mov    edi,0x4d
10005fbe:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10005fc1:	89 ea                	mov    edx,ebp
10005fc3:	e8 0b f2 ff ff       	call   100051d3 <spng__free.isra.3>
10005fc8:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10005fcc:	eb 12                	jmp    10005fe0 <spng__inflate_stream+0x1ea>
10005fce:	c7 44 24 08 4d 00 00 00 	mov    DWORD PTR [esp+0x8],0x4d
10005fd6:	eb 08                	jmp    10005fe0 <spng__inflate_stream+0x1ea>
10005fd8:	c7 44 24 08 02 00 00 00 	mov    DWORD PTR [esp+0x8],0x2
10005fe0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10005fe4:	83 c4 2c             	add    esp,0x2c
10005fe7:	5b                   	pop    ebx
10005fe8:	5e                   	pop    esi
10005fe9:	5f                   	pop    edi
10005fea:	5d                   	pop    ebp
10005feb:	c3                   	ret    

10005fec <read_chunks>:
10005fec:	85 c0                	test   eax,eax
10005fee:	0f 84 60 18 00 00    	je     10007854 <read_chunks+0x1868>
10005ff4:	55                   	push   ebp
10005ff5:	89 e5                	mov    ebp,esp
10005ff7:	57                   	push   edi
10005ff8:	56                   	push   esi
10005ff9:	53                   	push   ebx
10005ffa:	83 ec 4c             	sub    esp,0x4c
10005ffd:	8b 58 70             	mov    ebx,DWORD PTR [eax+0x70]
10006000:	b9 46 00 00 00       	mov    ecx,0x46
10006005:	85 db                	test   ebx,ebx
10006007:	0f 84 b7 19 00 00    	je     100079c4 <read_chunks+0x19d8>
1000600d:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10006011:	75 16                	jne    10006029 <read_chunks+0x3d>
10006013:	b9 50 00 00 00       	mov    ecx,0x50
10006018:	f6 40 74 08          	test   BYTE PTR [eax+0x74],0x8
1000601c:	0f 84 a2 19 00 00    	je     100079c4 <read_chunks+0x19d8>
10006022:	31 c9                	xor    ecx,ecx
10006024:	e9 9b 19 00 00       	jmp    100079c4 <read_chunks+0x19d8>
10006029:	89 55 c0             	mov    DWORD PTR [ebp-0x40],edx
1000602c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000602f:	83 fb 02             	cmp    ebx,0x2
10006032:	0f 85 fb 01 00 00    	jne    10006233 <read_chunks+0x247>
10006038:	c7 40 40 08 00 00 00 	mov    DWORD PTR [eax+0x40],0x8
1000603f:	c7 40 44 0d 00 00 00 	mov    DWORD PTR [eax+0x44],0xd
10006046:	ba 1d 00 00 00       	mov    edx,0x1d
1000604b:	e8 f5 f2 ff ff       	call   10005345 <read_data>
10006050:	89 c1                	mov    ecx,eax
10006052:	85 c0                	test   eax,eax
10006054:	0f 85 39 07 00 00    	jne    10006793 <read_chunks+0x7a7>
1000605a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000605d:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10006060:	53                   	push   ebx
10006061:	6a 08                	push   0x8
10006063:	68 18 d6 00 10       	push   0x1000d618	10006064: R_386_32	.text
10006068:	57                   	push   edi
10006069:	e8 fc ff ff ff       	call   1000606a <read_chunks+0x7e>	1000606a: R_386_PC32	memcmp
1000606e:	83 c4 10             	add    esp,0x10
10006071:	85 c0                	test   eax,eax
10006073:	0f 85 74 01 00 00    	jne    100061ed <read_chunks+0x201>
10006079:	8d 47 08             	lea    eax,[edi+0x8]
1000607c:	e8 01 e8 ff ff       	call   10004882 <read_u32>
10006081:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
10006084:	89 43 44             	mov    DWORD PTR [ebx+0x44],eax
10006087:	8b 57 0c             	mov    edx,DWORD PTR [edi+0xc]
1000608a:	89 53 48             	mov    DWORD PTR [ebx+0x48],edx
1000608d:	83 f8 0d             	cmp    eax,0xd
10006090:	0f 85 61 01 00 00    	jne    100061f7 <read_chunks+0x20b>
10006096:	51                   	push   ecx
10006097:	6a 04                	push   0x4
10006099:	68 14 d6 00 10       	push   0x1000d614	1000609a: R_386_32	.text
1000609e:	89 d8                	mov    eax,ebx
100060a0:	83 c0 48             	add    eax,0x48
100060a3:	50                   	push   eax
100060a4:	e8 fc ff ff ff       	call   100060a5 <read_chunks+0xb9>	100060a5: R_386_PC32	memcmp
100060a9:	83 c4 10             	add    esp,0x10
100060ac:	85 c0                	test   eax,eax
100060ae:	0f 85 4d 01 00 00    	jne    10006201 <read_chunks+0x215>
100060b4:	52                   	push   edx
100060b5:	6a 00                	push   0x0
100060b7:	6a 00                	push   0x0
100060b9:	6a 00                	push   0x0
100060bb:	e8 fc ff ff ff       	call   100060bc <read_chunks+0xd0>	100060bc: R_386_PC32	crc32
100060c0:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
100060c3:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100060c6:	83 c4 0c             	add    esp,0xc
100060c9:	6a 11                	push   0x11
100060cb:	8d 57 0c             	lea    edx,[edi+0xc]
100060ce:	52                   	push   edx
100060cf:	50                   	push   eax
100060d0:	e8 fc ff ff ff       	call   100060d1 <read_chunks+0xe5>	100060d1: R_386_PC32	crc32
100060d5:	8b 5d c4             	mov    ebx,DWORD PTR [ebp-0x3c]
100060d8:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
100060db:	8d 47 10             	lea    eax,[edi+0x10]
100060de:	e8 9f e7 ff ff       	call   10004882 <read_u32>
100060e3:	89 c1                	mov    ecx,eax
100060e5:	89 8b f0 00 00 00    	mov    DWORD PTR [ebx+0xf0],ecx
100060eb:	8d 47 14             	lea    eax,[edi+0x14]
100060ee:	e8 8f e7 ff ff       	call   10004882 <read_u32>
100060f3:	89 83 f4 00 00 00    	mov    DWORD PTR [ebx+0xf4],eax
100060f9:	8a 57 18             	mov    dl,BYTE PTR [edi+0x18]
100060fc:	88 93 f8 00 00 00    	mov    BYTE PTR [ebx+0xf8],dl
10006102:	88 55 bc             	mov    BYTE PTR [ebp-0x44],dl
10006105:	8a 5f 19             	mov    bl,BYTE PTR [edi+0x19]
10006108:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
1000610b:	88 9a f9 00 00 00    	mov    BYTE PTR [edx+0xf9],bl
10006111:	89 d6                	mov    esi,edx
10006113:	8a 57 1a             	mov    dl,BYTE PTR [edi+0x1a]
10006116:	88 96 fa 00 00 00    	mov    BYTE PTR [esi+0xfa],dl
1000611c:	8a 57 1b             	mov    dl,BYTE PTR [edi+0x1b]
1000611f:	88 96 fb 00 00 00    	mov    BYTE PTR [esi+0xfb],dl
10006125:	8a 57 1c             	mov    dl,BYTE PTR [edi+0x1c]
10006128:	88 96 fc 00 00 00    	mov    BYTE PTR [esi+0xfc],dl
1000612e:	83 c4 10             	add    esp,0x10
10006131:	85 c9                	test   ecx,ecx
10006133:	0f 8e d2 00 00 00    	jle    1000620b <read_chunks+0x21f>
10006139:	85 c0                	test   eax,eax
1000613b:	0f 8e d4 00 00 00    	jle    10006215 <read_chunks+0x229>
10006141:	3b 8e d4 00 00 00    	cmp    ecx,DWORD PTR [esi+0xd4]
10006147:	0f 87 d2 00 00 00    	ja     1000621f <read_chunks+0x233>
1000614d:	3b 86 d8 00 00 00    	cmp    eax,DWORD PTR [esi+0xd8]
10006153:	0f 87 d0 00 00 00    	ja     10006229 <read_chunks+0x23d>
10006159:	89 f0                	mov    eax,esi
1000615b:	05 f0 00 00 00       	add    eax,0xf0
10006160:	e8 9c f3 ff ff       	call   10005501 <check_ihdr.part.13>
10006165:	89 c1                	mov    ecx,eax
10006167:	85 c0                	test   eax,eax
10006169:	0f 85 24 06 00 00    	jne    10006793 <read_chunks+0x7a7>
1000616f:	80 8e a4 00 00 00 01 	or     BYTE PTR [esi+0xa4],0x1
10006176:	80 8e ac 00 00 00 01 	or     BYTE PTR [esi+0xac],0x1
1000617d:	b8 03 00 00 00       	mov    eax,0x3
10006182:	80 fb 02             	cmp    bl,0x2
10006185:	8a 55 bc             	mov    dl,BYTE PTR [ebp-0x44]
10006188:	74 16                	je     100061a0 <read_chunks+0x1b4>
1000618a:	b8 02 00 00 00       	mov    eax,0x2
1000618f:	80 fb 04             	cmp    bl,0x4
10006192:	74 0c                	je     100061a0 <read_chunks+0x1b4>
10006194:	31 c0                	xor    eax,eax
10006196:	80 fb 06             	cmp    bl,0x6
10006199:	0f 94 c0             	sete   al
1000619c:	8d 44 40 01          	lea    eax,[eax+eax*2+0x1]
100061a0:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100061a3:	89 86 b0 09 00 00    	mov    DWORD PTR [esi+0x9b0],eax
100061a9:	b9 01 00 00 00       	mov    ecx,0x1
100061ae:	80 fa 07             	cmp    dl,0x7
100061b1:	76 09                	jbe    100061bc <read_chunks+0x1d0>
100061b3:	c0 ea 03             	shr    dl,0x3
100061b6:	0f b6 ca             	movzx  ecx,dl
100061b9:	0f af c8             	imul   ecx,eax
100061bc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100061bf:	89 88 b4 09 00 00    	mov    DWORD PTR [eax+0x9b4],ecx
100061c5:	e8 ea fa ff ff       	call   10005cb4 <calculate_subimages>
100061ca:	89 c1                	mov    ecx,eax
100061cc:	85 c0                	test   eax,eax
100061ce:	0f 85 bf 05 00 00    	jne    10006793 <read_chunks+0x7a7>
100061d4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100061d7:	c7 40 70 03 00 00 00 	mov    DWORD PTR [eax+0x70],0x3
100061de:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
100061e2:	0f 84 aa 00 00 00    	je     10006292 <read_chunks+0x2a6>
100061e8:	e9 35 fe ff ff       	jmp    10006022 <read_chunks+0x36>
100061ed:	b9 04 00 00 00       	mov    ecx,0x4
100061f2:	e9 9c 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
100061f7:	b9 0e 00 00 00       	mov    ecx,0xe
100061fc:	e9 92 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
10006201:	b9 0f 00 00 00       	mov    ecx,0xf
10006206:	e9 88 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
1000620b:	b9 05 00 00 00       	mov    ecx,0x5
10006210:	e9 7e 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
10006215:	b9 06 00 00 00       	mov    ecx,0x6
1000621a:	e9 74 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
1000621f:	b9 07 00 00 00       	mov    ecx,0x7
10006224:	e9 6a 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
10006229:	b9 08 00 00 00       	mov    ecx,0x8
1000622e:	e9 60 05 00 00       	jmp    10006793 <read_chunks+0x7a7>
10006233:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10006237:	0f 85 e5 fd ff ff    	jne    10006022 <read_chunks+0x36>
1000623d:	83 fb 06             	cmp    ebx,0x6
10006240:	75 50                	jne    10006292 <read_chunks+0x2a6>
10006242:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006245:	c7 40 70 08 00 00 00 	mov    DWORD PTR [eax+0x70],0x8
1000624c:	80 48 75 01          	or     BYTE PTR [eax+0x75],0x1
10006250:	eb 40                	jmp    10006292 <read_chunks+0x2a6>
10006252:	83 78 70 03          	cmp    DWORD PTR [eax+0x70],0x3
10006256:	0f 87 84 05 00 00    	ja     100067e0 <read_chunks+0x7f4>
1000625c:	80 b8 f9 00 00 00 03 	cmp    BYTE PTR [eax+0xf9],0x3
10006263:	0f 84 65 05 00 00    	je     100067ce <read_chunks+0x7e2>
10006269:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000626c:	8d b8 b4 00 00 00    	lea    edi,[eax+0xb4]
10006272:	b9 04 00 00 00       	mov    ecx,0x4
10006277:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006279:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000627c:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
1000627f:	83 f8 03             	cmp    eax,0x3
10006282:	0f 87 03 15 00 00    	ja     1000778b <read_chunks+0x179f>
10006288:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000628b:	c7 40 70 04 00 00 00 	mov    DWORD PTR [eax+0x70],0x4
10006292:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006295:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
10006298:	83 f8 08             	cmp    eax,0x8
1000629b:	0f 85 a5 15 00 00    	jne    10007846 <read_chunks+0x185a>
100062a1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100062a4:	80 60 74 df          	and    BYTE PTR [eax+0x74],0xdf
100062a8:	c7 80 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xa0],0x0
100062b2:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [eax+0xac]
100062b8:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100062bb:	89 86 b0 00 00 00    	mov    DWORD PTR [esi+0xb0],eax
100062c1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100062c4:	e8 4f f1 ff ff       	call   10005418 <read_header>
100062c9:	89 c1                	mov    ecx,eax
100062cb:	85 c0                	test   eax,eax
100062cd:	0f 85 d0 14 00 00    	jne    100077a3 <read_chunks+0x17b7>
100062d3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100062d6:	f6 40 74 20          	test   BYTE PTR [eax+0x74],0x20
100062da:	0f 85 c2 04 00 00    	jne    100067a2 <read_chunks+0x7b6>
100062e0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100062e3:	80 60 74 df          	and    BYTE PTR [eax+0x74],0xdf
100062e7:	c7 80 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xa0],0x0
100062f1:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [eax+0xac]
100062f7:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100062fa:	89 86 b0 00 00 00    	mov    DWORD PTR [esi+0xb0],eax
10006300:	8d 7d d8             	lea    edi,[ebp-0x28]
10006303:	8d 76 40             	lea    esi,[esi+0x40]
10006306:	b9 04 00 00 00       	mov    ecx,0x4
1000630b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000630d:	50                   	push   eax
1000630e:	6a 04                	push   0x4
10006310:	68 0c d6 00 10       	push   0x1000d60c	10006311: R_386_32	.text
10006315:	8d 7d e0             	lea    edi,[ebp-0x20]
10006318:	57                   	push   edi
10006319:	e8 fc ff ff ff       	call   1000631a <read_chunks+0x32e>	1000631a: R_386_PC32	memcmp
1000631e:	83 c4 10             	add    esp,0x10
10006321:	85 c0                	test   eax,eax
10006323:	8d 75 d8             	lea    esi,[ebp-0x28]
10006326:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006329:	0f 84 23 ff ff ff    	je     10006252 <read_chunks+0x266>
1000632f:	80 60 75 fe          	and    BYTE PTR [eax+0x75],0xfe
10006333:	50                   	push   eax
10006334:	6a 04                	push   0x4
10006336:	68 10 d6 00 10       	push   0x1000d610	10006337: R_386_32	.text
1000633b:	57                   	push   edi
1000633c:	e8 fc ff ff ff       	call   1000633d <read_chunks+0x351>	1000633d: R_386_PC32	memcmp
10006341:	83 c4 10             	add    esp,0x10
10006344:	85 c0                	test   eax,eax
10006346:	0f 84 a9 04 00 00    	je     100067f5 <read_chunks+0x809>
1000634c:	50                   	push   eax
1000634d:	6a 04                	push   0x4
1000634f:	68 00 d6 00 10       	push   0x1000d600	10006350: R_386_32	.text
10006354:	57                   	push   edi
10006355:	e8 fc ff ff ff       	call   10006356 <read_chunks+0x36a>	10006356: R_386_PC32	memcmp
1000635a:	83 c4 10             	add    esp,0x10
1000635d:	85 c0                	test   eax,eax
1000635f:	0f 84 90 04 00 00    	je     100067f5 <read_chunks+0x809>
10006365:	50                   	push   eax
10006366:	6a 04                	push   0x4
10006368:	68 fc d5 00 10       	push   0x1000d5fc	10006369: R_386_32	.text
1000636d:	57                   	push   edi
1000636e:	e8 fc ff ff ff       	call   1000636f <read_chunks+0x383>	1000636f: R_386_PC32	memcmp
10006373:	83 c4 10             	add    esp,0x10
10006376:	85 c0                	test   eax,eax
10006378:	0f 84 77 04 00 00    	je     100067f5 <read_chunks+0x809>
1000637e:	50                   	push   eax
1000637f:	6a 04                	push   0x4
10006381:	68 f4 d5 00 10       	push   0x1000d5f4	10006382: R_386_32	.text
10006386:	57                   	push   edi
10006387:	e8 fc ff ff ff       	call   10006388 <read_chunks+0x39c>	10006388: R_386_PC32	memcmp
1000638c:	83 c4 10             	add    esp,0x10
1000638f:	85 c0                	test   eax,eax
10006391:	0f 84 5e 04 00 00    	je     100067f5 <read_chunks+0x809>
10006397:	50                   	push   eax
10006398:	6a 04                	push   0x4
1000639a:	68 f0 d5 00 10       	push   0x1000d5f0	1000639b: R_386_32	.text
1000639f:	57                   	push   edi
100063a0:	e8 fc ff ff ff       	call   100063a1 <read_chunks+0x3b5>	100063a1: R_386_PC32	memcmp
100063a5:	83 c4 10             	add    esp,0x10
100063a8:	85 c0                	test   eax,eax
100063aa:	0f 84 45 04 00 00    	je     100067f5 <read_chunks+0x809>
100063b0:	53                   	push   ebx
100063b1:	6a 04                	push   0x4
100063b3:	68 e0 d5 00 10       	push   0x1000d5e0	100063b4: R_386_32	.text
100063b8:	57                   	push   edi
100063b9:	e8 fc ff ff ff       	call   100063ba <read_chunks+0x3ce>	100063ba: R_386_PC32	memcmp
100063be:	83 c4 10             	add    esp,0x10
100063c1:	85 c0                	test   eax,eax
100063c3:	0f 84 2c 04 00 00    	je     100067f5 <read_chunks+0x809>
100063c9:	51                   	push   ecx
100063ca:	6a 04                	push   0x4
100063cc:	68 04 d6 00 10       	push   0x1000d604	100063cd: R_386_32	.text
100063d1:	57                   	push   edi
100063d2:	e8 fc ff ff ff       	call   100063d3 <read_chunks+0x3e7>	100063d3: R_386_PC32	memcmp
100063d7:	83 c4 10             	add    esp,0x10
100063da:	85 c0                	test   eax,eax
100063dc:	0f 84 13 04 00 00    	je     100067f5 <read_chunks+0x809>
100063e2:	52                   	push   edx
100063e3:	6a 04                	push   0x4
100063e5:	68 dc d5 00 10       	push   0x1000d5dc	100063e6: R_386_32	.text
100063ea:	57                   	push   edi
100063eb:	e8 fc ff ff ff       	call   100063ec <read_chunks+0x400>	100063ec: R_386_PC32	memcmp
100063f0:	83 c4 10             	add    esp,0x10
100063f3:	85 c0                	test   eax,eax
100063f5:	0f 84 fa 03 00 00    	je     100067f5 <read_chunks+0x809>
100063fb:	50                   	push   eax
100063fc:	6a 04                	push   0x4
100063fe:	68 d8 d5 00 10       	push   0x1000d5d8	100063ff: R_386_32	.text
10006403:	57                   	push   edi
10006404:	e8 fc ff ff ff       	call   10006405 <read_chunks+0x419>	10006405: R_386_PC32	memcmp
10006409:	83 c4 10             	add    esp,0x10
1000640c:	85 c0                	test   eax,eax
1000640e:	0f 84 e1 03 00 00    	je     100067f5 <read_chunks+0x809>
10006414:	50                   	push   eax
10006415:	6a 04                	push   0x4
10006417:	68 d0 d5 00 10       	push   0x1000d5d0	10006418: R_386_32	.text
1000641c:	57                   	push   edi
1000641d:	e8 fc ff ff ff       	call   1000641e <read_chunks+0x432>	1000641e: R_386_PC32	memcmp
10006422:	83 c4 10             	add    esp,0x10
10006425:	85 c0                	test   eax,eax
10006427:	0f 84 c8 03 00 00    	je     100067f5 <read_chunks+0x809>
1000642d:	50                   	push   eax
1000642e:	6a 04                	push   0x4
10006430:	68 cc d5 00 10       	push   0x1000d5cc	10006431: R_386_32	.text
10006435:	57                   	push   edi
10006436:	e8 fc ff ff ff       	call   10006437 <read_chunks+0x44b>	10006437: R_386_PC32	memcmp
1000643b:	83 c4 10             	add    esp,0x10
1000643e:	85 c0                	test   eax,eax
10006440:	0f 84 af 03 00 00    	je     100067f5 <read_chunks+0x809>
10006446:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006449:	8b 58 10             	mov    ebx,DWORD PTR [eax+0x10]
1000644c:	89 f0                	mov    eax,esi
1000644e:	e8 80 e5 ff ff       	call   100049d3 <is_critical_chunk>
10006453:	85 c0                	test   eax,eax
10006455:	0f 85 c9 03 00 00    	jne    10006824 <read_chunks+0x838>
1000645b:	56                   	push   esi
1000645c:	6a 04                	push   0x4
1000645e:	68 00 d6 00 10       	push   0x1000d600	1000645f: R_386_32	.text
10006463:	57                   	push   edi
10006464:	e8 fc ff ff ff       	call   10006465 <read_chunks+0x479>	10006465: R_386_PC32	memcmp
10006469:	83 c4 10             	add    esp,0x10
1000646c:	85 c0                	test   eax,eax
1000646e:	0f 84 b2 04 00 00    	je     10006926 <read_chunks+0x93a>
10006474:	51                   	push   ecx
10006475:	6a 04                	push   0x4
10006477:	68 fc d5 00 10       	push   0x1000d5fc	10006478: R_386_32	.text
1000647c:	57                   	push   edi
1000647d:	e8 fc ff ff ff       	call   1000647e <read_chunks+0x492>	1000647e: R_386_PC32	memcmp
10006482:	83 c4 10             	add    esp,0x10
10006485:	85 c0                	test   eax,eax
10006487:	0f 84 5b 05 00 00    	je     100069e8 <read_chunks+0x9fc>
1000648d:	52                   	push   edx
1000648e:	6a 04                	push   0x4
10006490:	68 f4 d5 00 10       	push   0x1000d5f4	10006491: R_386_32	.text
10006495:	57                   	push   edi
10006496:	e8 fc ff ff ff       	call   10006497 <read_chunks+0x4ab>	10006497: R_386_PC32	memcmp
1000649b:	83 c4 10             	add    esp,0x10
1000649e:	85 c0                	test   eax,eax
100064a0:	0f 84 9e 05 00 00    	je     10006a44 <read_chunks+0xa58>
100064a6:	50                   	push   eax
100064a7:	6a 04                	push   0x4
100064a9:	68 f0 d5 00 10       	push   0x1000d5f0	100064aa: R_386_32	.text
100064ae:	57                   	push   edi
100064af:	e8 fc ff ff ff       	call   100064b0 <read_chunks+0x4c4>	100064b0: R_386_PC32	memcmp
100064b4:	83 c4 10             	add    esp,0x10
100064b7:	85 c0                	test   eax,eax
100064b9:	0f 84 84 06 00 00    	je     10006b43 <read_chunks+0xb57>
100064bf:	50                   	push   eax
100064c0:	6a 04                	push   0x4
100064c2:	68 e0 d5 00 10       	push   0x1000d5e0	100064c3: R_386_32	.text
100064c7:	57                   	push   edi
100064c8:	e8 fc ff ff ff       	call   100064c9 <read_chunks+0x4dd>	100064c9: R_386_PC32	memcmp
100064cd:	83 c4 10             	add    esp,0x10
100064d0:	85 c0                	test   eax,eax
100064d2:	0f 84 be 06 00 00    	je     10006b96 <read_chunks+0xbaa>
100064d8:	50                   	push   eax
100064d9:	6a 04                	push   0x4
100064db:	68 04 d6 00 10       	push   0x1000d604	100064dc: R_386_32	.text
100064e0:	57                   	push   edi
100064e1:	e8 fc ff ff ff       	call   100064e2 <read_chunks+0x4f6>	100064e2: R_386_PC32	memcmp
100064e6:	83 c4 10             	add    esp,0x10
100064e9:	85 c0                	test   eax,eax
100064eb:	0f 84 71 07 00 00    	je     10006c62 <read_chunks+0xc76>
100064f1:	50                   	push   eax
100064f2:	6a 04                	push   0x4
100064f4:	68 dc d5 00 10       	push   0x1000d5dc	100064f5: R_386_32	.text
100064f9:	57                   	push   edi
100064fa:	e8 fc ff ff ff       	call   100064fb <read_chunks+0x50f>	100064fb: R_386_PC32	memcmp
100064ff:	83 c4 10             	add    esp,0x10
10006502:	85 c0                	test   eax,eax
10006504:	0f 84 44 08 00 00    	je     10006d4e <read_chunks+0xd62>
1000650a:	50                   	push   eax
1000650b:	6a 04                	push   0x4
1000650d:	68 d8 d5 00 10       	push   0x1000d5d8	1000650e: R_386_32	.text
10006512:	57                   	push   edi
10006513:	e8 fc ff ff ff       	call   10006514 <read_chunks+0x528>	10006514: R_386_PC32	memcmp
10006518:	83 c4 10             	add    esp,0x10
1000651b:	85 c0                	test   eax,eax
1000651d:	0f 84 96 08 00 00    	je     10006db9 <read_chunks+0xdcd>
10006523:	50                   	push   eax
10006524:	6a 04                	push   0x4
10006526:	68 d0 d5 00 10       	push   0x1000d5d0	10006527: R_386_32	.text
1000652b:	57                   	push   edi
1000652c:	e8 fc ff ff ff       	call   1000652d <read_chunks+0x541>	1000652d: R_386_PC32	memcmp
10006531:	83 c4 10             	add    esp,0x10
10006534:	85 c0                	test   eax,eax
10006536:	0f 84 f6 08 00 00    	je     10006e32 <read_chunks+0xe46>
1000653c:	56                   	push   esi
1000653d:	6a 04                	push   0x4
1000653f:	68 cc d5 00 10       	push   0x1000d5cc	10006540: R_386_32	.text
10006544:	57                   	push   edi
10006545:	e8 fc ff ff ff       	call   10006546 <read_chunks+0x55a>	10006546: R_386_PC32	memcmp
1000654a:	83 c4 10             	add    esp,0x10
1000654d:	85 c0                	test   eax,eax
1000654f:	0f 84 72 09 00 00    	je     10006ec7 <read_chunks+0xedb>
10006555:	53                   	push   ebx
10006556:	6a 04                	push   0x4
10006558:	68 c8 d5 00 10       	push   0x1000d5c8	10006559: R_386_32	.text
1000655d:	57                   	push   edi
1000655e:	e8 fc ff ff ff       	call   1000655f <read_chunks+0x573>	1000655f: R_386_PC32	memcmp
10006563:	83 c4 10             	add    esp,0x10
10006566:	85 c0                	test   eax,eax
10006568:	0f 84 c6 09 00 00    	je     10006f34 <read_chunks+0xf48>
1000656e:	51                   	push   ecx
1000656f:	6a 04                	push   0x4
10006571:	68 f8 d5 00 10       	push   0x1000d5f8	10006572: R_386_32	.text
10006576:	57                   	push   edi
10006577:	e8 fc ff ff ff       	call   10006578 <read_chunks+0x58c>	10006578: R_386_PC32	memcmp
1000657c:	83 c4 10             	add    esp,0x10
1000657f:	85 c0                	test   eax,eax
10006581:	0f 84 71 0a 00 00    	je     10006ff8 <read_chunks+0x100c>
10006587:	50                   	push   eax
10006588:	6a 04                	push   0x4
1000658a:	68 ec d5 00 10       	push   0x1000d5ec	1000658b: R_386_32	.text
1000658f:	57                   	push   edi
10006590:	e8 fc ff ff ff       	call   10006591 <read_chunks+0x5a5>	10006591: R_386_PC32	memcmp
10006595:	83 c4 10             	add    esp,0x10
10006598:	85 c0                	test   eax,eax
1000659a:	0f 84 61 0b 00 00    	je     10007101 <read_chunks+0x1115>
100065a0:	50                   	push   eax
100065a1:	6a 04                	push   0x4
100065a3:	68 e8 d5 00 10       	push   0x1000d5e8	100065a4: R_386_32	.text
100065a8:	57                   	push   edi
100065a9:	e8 fc ff ff ff       	call   100065aa <read_chunks+0x5be>	100065aa: R_386_PC32	memcmp
100065ae:	83 c4 10             	add    esp,0x10
100065b1:	85 c0                	test   eax,eax
100065b3:	0f 84 48 0b 00 00    	je     10007101 <read_chunks+0x1115>
100065b9:	56                   	push   esi
100065ba:	6a 04                	push   0x4
100065bc:	68 e4 d5 00 10       	push   0x1000d5e4	100065bd: R_386_32	.text
100065c1:	57                   	push   edi
100065c2:	e8 fc ff ff ff       	call   100065c3 <read_chunks+0x5d7>	100065c3: R_386_PC32	memcmp
100065c7:	83 c4 10             	add    esp,0x10
100065ca:	85 c0                	test   eax,eax
100065cc:	0f 84 2f 0b 00 00    	je     10007101 <read_chunks+0x1115>
100065d2:	56                   	push   esi
100065d3:	6a 04                	push   0x4
100065d5:	68 d4 d5 00 10       	push   0x1000d5d4	100065d6: R_386_32	.text
100065da:	57                   	push   edi
100065db:	e8 fc ff ff ff       	call   100065dc <read_chunks+0x5f0>	100065dc: R_386_PC32	memcmp
100065e0:	83 c4 10             	add    esp,0x10
100065e3:	85 c0                	test   eax,eax
100065e5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100065e8:	0f 85 37 10 00 00    	jne    10007625 <read_chunks+0x1639>
100065ee:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
100065f2:	0f 84 a4 13 00 00    	je     1000799c <read_chunks+0x19b0>
100065f8:	f6 80 a9 00 00 00 10 	test   BYTE PTR [eax+0xa9],0x10
100065ff:	0f 85 66 11 00 00    	jne    1000776b <read_chunks+0x177f>
10006605:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10006608:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
1000660b:	85 c0                	test   eax,eax
1000660d:	0f 84 ce 0e 00 00    	je     100074e1 <read_chunks+0x14f5>
10006613:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006616:	80 88 a5 00 00 00 10 	or     BYTE PTR [eax+0xa5],0x10
1000661d:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10006620:	8d 50 5c             	lea    edx,[eax+0x5c]
10006623:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006626:	e8 bf eb ff ff       	call   100051ea <increase_cache_usage>
1000662b:	89 c6                	mov    esi,eax
1000662d:	85 c0                	test   eax,eax
1000662f:	0f 85 0d 13 00 00    	jne    10007942 <read_chunks+0x1956>
10006635:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006638:	8b 80 b4 08 00 00    	mov    eax,DWORD PTR [eax+0x8b4]
1000663e:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10006641:	8d 48 01             	lea    ecx,[eax+0x1]
10006644:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006647:	89 88 b4 08 00 00    	mov    DWORD PTR [eax+0x8b4],ecx
1000664d:	85 c9                	test   ecx,ecx
1000664f:	0f 84 51 13 00 00    	je     100079a6 <read_chunks+0x19ba>
10006655:	83 c8 ff             	or     eax,0xffffffff
10006658:	31 d2                	xor    edx,edx
1000665a:	f7 f1                	div    ecx
1000665c:	83 f8 5b             	cmp    eax,0x5b
1000665f:	0f 86 41 13 00 00    	jbe    100079a6 <read_chunks+0x19ba>
10006665:	53                   	push   ebx
10006666:	53                   	push   ebx
10006667:	6b c9 5c             	imul   ecx,ecx,0x5c
1000666a:	51                   	push   ecx
1000666b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000666e:	ff b0 b8 08 00 00    	push   DWORD PTR [eax+0x8b8]
10006674:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
10006677:	83 c4 10             	add    esp,0x10
1000667a:	85 c0                	test   eax,eax
1000667c:	0f 84 20 10 00 00    	je     100076a2 <read_chunks+0x16b6>
10006682:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006685:	89 87 b8 08 00 00    	mov    DWORD PTR [edi+0x8b8],eax
1000668b:	6b 97 b4 08 00 00 5c 	imul   edx,DWORD PTR [edi+0x8b4],0x5c
10006692:	8d 5c 10 a4          	lea    ebx,[eax+edx*1-0x5c]
10006696:	b9 17 00 00 00       	mov    ecx,0x17
1000669b:	89 df                	mov    edi,ebx
1000669d:	89 f0                	mov    eax,esi
1000669f:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100066a1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100066a4:	c7 80 a0 00 00 00 4a 52 00 10 	mov    DWORD PTR [eax+0xa0],0x1000524a	100066aa: R_386_32	.text
100066ae:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
100066b1:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
100066b4:	e8 f3 ea ff ff       	call   100051ac <spng__malloc.isra.0>
100066b9:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100066bc:	85 c0                	test   eax,eax
100066be:	0f 84 de 0f 00 00    	je     100076a2 <read_chunks+0x16b6>
100066c4:	89 43 58             	mov    DWORD PTR [ebx+0x58],eax
100066c7:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
100066ca:	89 c2                	mov    edx,eax
100066cc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100066cf:	e8 0d f2 ff ff       	call   100058e1 <read_chunk_bytes2>
100066d4:	89 c1                	mov    ecx,eax
100066d6:	85 c0                	test   eax,eax
100066d8:	0f 85 c5 10 00 00    	jne    100077a3 <read_chunks+0x17b7>
100066de:	51                   	push   ecx
100066df:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100066e2:	83 f8 50             	cmp    eax,0x50
100066e5:	76 05                	jbe    100066ec <read_chunks+0x700>
100066e7:	b8 50 00 00 00       	mov    eax,0x50
100066ec:	50                   	push   eax
100066ed:	6a 00                	push   0x0
100066ef:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100066f2:	e8 fc ff ff ff       	call   100066f3 <read_chunks+0x707>	100066f3: R_386_PC32	memchr
100066f7:	83 c4 10             	add    esp,0x10
100066fa:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100066fd:	85 c0                	test   eax,eax
100066ff:	0f 84 e6 0d 00 00    	je     100074eb <read_chunks+0x14ff>
10006705:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10006708:	2b 45 c0             	sub    eax,DWORD PTR [ebp-0x40]
1000670b:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
1000670e:	89 df                	mov    edi,ebx
10006710:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
10006713:	89 c1                	mov    ecx,eax
10006715:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006717:	89 d8                	mov    eax,ebx
10006719:	e8 f3 e8 ff ff       	call   10005011 <check_png_keyword>
1000671e:	85 c0                	test   eax,eax
10006720:	0f 85 c5 0d 00 00    	jne    100074eb <read_chunks+0x14ff>
10006726:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006729:	8b 80 b4 08 00 00    	mov    eax,DWORD PTR [eax+0x8b4]
1000672f:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
10006732:	8d 78 ff             	lea    edi,[eax-0x1]
10006735:	31 f6                	xor    esi,esi
10006737:	39 fe                	cmp    esi,edi
10006739:	0f 82 b6 0d 00 00    	jb     100074f5 <read_chunks+0x1509>
1000673f:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10006742:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
10006745:	83 f8 02             	cmp    eax,0x2
10006748:	0f 86 93 0d 00 00    	jbe    100074e1 <read_chunks+0x14f5>
1000674e:	8b 7d b4             	mov    edi,DWORD PTR [ebp-0x4c]
10006751:	8a 57 01             	mov    dl,BYTE PTR [edi+0x1]
10006754:	88 53 50             	mov    BYTE PTR [ebx+0x50],dl
10006757:	83 e8 02             	sub    eax,0x2
1000675a:	b9 0a 00 00 00       	mov    ecx,0xa
1000675f:	80 fa 10             	cmp    dl,0x10
10006762:	0f 85 b3 0d 00 00    	jne    1000751b <read_chunks+0x152f>
10006768:	31 d2                	xor    edx,edx
1000676a:	f7 f1                	div    ecx
1000676c:	85 d2                	test   edx,edx
1000676e:	0f 85 6d 0d 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006774:	89 43 54             	mov    DWORD PTR [ebx+0x54],eax
10006777:	8b 53 54             	mov    edx,DWORD PTR [ebx+0x54]
1000677a:	85 d2                	test   edx,edx
1000677c:	0f 84 5f 0d 00 00    	je     100074e1 <read_chunks+0x14f5>
10006782:	81 fa 99 99 99 19    	cmp    edx,0x19999999
10006788:	0f 86 a0 0d 00 00    	jbe    1000752e <read_chunks+0x1542>
1000678e:	b9 03 00 00 00       	mov    ecx,0x3
10006793:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006796:	c7 40 70 00 00 00 00 	mov    DWORD PTR [eax+0x70],0x0
1000679d:	e9 22 12 00 00       	jmp    100079c4 <read_chunks+0x19d8>
100067a2:	8b 80 a0 00 00 00    	mov    eax,DWORD PTR [eax+0xa0]
100067a8:	85 c0                	test   eax,eax
100067aa:	74 0b                	je     100067b7 <read_chunks+0x7cb>
100067ac:	83 ec 0c             	sub    esp,0xc
100067af:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100067b2:	ff d0                	call   eax
100067b4:	83 c4 10             	add    esp,0x10
100067b7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100067ba:	8b 80 b0 00 00 00    	mov    eax,DWORD PTR [eax+0xb0]
100067c0:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100067c3:	89 86 ac 00 00 00    	mov    DWORD PTR [esi+0xac],eax
100067c9:	e9 12 fb ff ff       	jmp    100062e0 <read_chunks+0x2f4>
100067ce:	f6 80 ac 00 00 00 02 	test   BYTE PTR [eax+0xac],0x2
100067d5:	0f 85 8e fa ff ff    	jne    10006269 <read_chunks+0x27d>
100067db:	e9 7c 10 00 00       	jmp    1000785c <read_chunks+0x1870>
100067e0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100067e3:	f6 40 75 01          	test   BYTE PTR [eax+0x75],0x1
100067e7:	0f 84 2f 01 00 00    	je     1000691c <read_chunks+0x930>
100067ed:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100067f0:	e9 7c 0f 00 00       	jmp    10007771 <read_chunks+0x1785>
100067f5:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100067f8:	85 d2                	test   edx,edx
100067fa:	0f 84 e1 0c 00 00    	je     100074e1 <read_chunks+0x14f5>
10006800:	81 fa 00 03 00 00    	cmp    edx,0x300
10006806:	76 05                	jbe    1000680d <read_chunks+0x821>
10006808:	ba 00 03 00 00       	mov    edx,0x300
1000680d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006810:	e8 4c ef ff ff       	call   10005761 <read_chunk_bytes>
10006815:	89 c1                	mov    ecx,eax
10006817:	85 c0                	test   eax,eax
10006819:	0f 84 27 fc ff ff    	je     10006446 <read_chunks+0x45a>
1000681f:	e9 7f 0f 00 00       	jmp    100077a3 <read_chunks+0x17b7>
10006824:	50                   	push   eax
10006825:	6a 04                	push   0x4
10006827:	68 10 d6 00 10       	push   0x1000d610	10006828: R_386_32	.text
1000682c:	57                   	push   edi
1000682d:	e8 fc ff ff ff       	call   1000682e <read_chunks+0x842>	1000682e: R_386_PC32	memcmp
10006832:	83 c4 10             	add    esp,0x10
10006835:	85 c0                	test   eax,eax
10006837:	0f 85 89 00 00 00    	jne    100068c6 <read_chunks+0x8da>
1000683d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006840:	f6 80 a5 00 00 00 07 	test   BYTE PTR [eax+0xa5],0x7
10006847:	0f 85 cf 00 00 00    	jne    1000691c <read_chunks+0x930>
1000684d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10006850:	b9 03 00 00 00       	mov    ecx,0x3
10006855:	31 d2                	xor    edx,edx
10006857:	f7 f1                	div    ecx
10006859:	89 c6                	mov    esi,eax
1000685b:	85 d2                	test   edx,edx
1000685d:	0f 85 7e 0c 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006863:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006866:	89 b0 00 01 00 00    	mov    DWORD PTR [eax+0x100],esi
1000686c:	8d 90 f0 00 00 00    	lea    edx,[eax+0xf0]
10006872:	05 00 01 00 00       	add    eax,0x100
10006877:	e8 0e ed ff ff       	call   1000558a <check_plte>
1000687c:	85 c0                	test   eax,eax
1000687e:	0f 85 5d 0c 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006884:	8b 4d c4             	mov    ecx,DWORD PTR [ebp-0x3c]
10006887:	8d 14 b1             	lea    edx,[ecx+esi*4]
1000688a:	39 d1                	cmp    ecx,edx
1000688c:	74 22                	je     100068b0 <read_chunks+0x8c4>
1000688e:	8a 03                	mov    al,BYTE PTR [ebx]
10006890:	88 81 04 01 00 00    	mov    BYTE PTR [ecx+0x104],al
10006896:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006899:	88 81 05 01 00 00    	mov    BYTE PTR [ecx+0x105],al
1000689f:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
100068a2:	88 81 06 01 00 00    	mov    BYTE PTR [ecx+0x106],al
100068a8:	83 c3 03             	add    ebx,0x3
100068ab:	83 c1 04             	add    ecx,0x4
100068ae:	eb da                	jmp    1000688a <read_chunks+0x89e>
100068b0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100068b3:	80 88 a4 00 00 00 02 	or     BYTE PTR [eax+0xa4],0x2
100068ba:	80 88 ac 00 00 00 02 	or     BYTE PTR [eax+0xac],0x2
100068c1:	e9 fb f9 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
100068c6:	50                   	push   eax
100068c7:	6a 04                	push   0x4
100068c9:	68 08 d6 00 10       	push   0x1000d608	100068ca: R_386_32	.text
100068ce:	57                   	push   edi
100068cf:	e8 fc ff ff ff       	call   100068d0 <read_chunks+0x8e4>	100068d0: R_386_PC32	memcmp
100068d4:	83 c4 10             	add    esp,0x10
100068d7:	85 c0                	test   eax,eax
100068d9:	75 28                	jne    10006903 <read_chunks+0x917>
100068db:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100068de:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
100068e2:	75 38                	jne    1000691c <read_chunks+0x930>
100068e4:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100068e8:	0f 85 f3 0b 00 00    	jne    100074e1 <read_chunks+0x14f5>
100068ee:	e8 b3 ea ff ff       	call   100053a6 <read_and_check_crc>
100068f3:	89 c1                	mov    ecx,eax
100068f5:	83 f8 ff             	cmp    eax,0xffffffff
100068f8:	0f 85 83 0e 00 00    	jne    10007781 <read_chunks+0x1795>
100068fe:	e9 76 f9 ff ff       	jmp    10006279 <read_chunks+0x28d>
10006903:	50                   	push   eax
10006904:	6a 04                	push   0x4
10006906:	68 14 d6 00 10       	push   0x1000d614	10006907: R_386_32	.text
1000690b:	57                   	push   edi
1000690c:	e8 fc ff ff ff       	call   1000690d <read_chunks+0x921>	1000690d: R_386_PC32	memcmp
10006911:	83 c4 10             	add    esp,0x10
10006914:	85 c0                	test   eax,eax
10006916:	0f 85 4a 0f 00 00    	jne    10007866 <read_chunks+0x187a>
1000691c:	b9 10 00 00 00       	mov    ecx,0x10
10006921:	e9 ab 0e 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006926:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006929:	8a 88 a4 00 00 00    	mov    cl,BYTE PTR [eax+0xa4]
1000692f:	f6 c1 02             	test   cl,0x2
10006932:	75 e8                	jne    1000691c <read_chunks+0x930>
10006934:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006938:	74 e2                	je     1000691c <read_chunks+0x930>
1000693a:	f6 c1 04             	test   cl,0x4
1000693d:	0f 85 2d 0f 00 00    	jne    10007870 <read_chunks+0x1884>
10006943:	83 7d dc 20          	cmp    DWORD PTR [ebp-0x24],0x20
10006947:	0f 85 94 0b 00 00    	jne    100074e1 <read_chunks+0x14f5>
1000694d:	89 d8                	mov    eax,ebx
1000694f:	e8 2e df ff ff       	call   10004882 <read_u32>
10006954:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006957:	89 86 04 05 00 00    	mov    DWORD PTR [esi+0x504],eax
1000695d:	8d 43 04             	lea    eax,[ebx+0x4]
10006960:	e8 1d df ff ff       	call   10004882 <read_u32>
10006965:	89 86 08 05 00 00    	mov    DWORD PTR [esi+0x508],eax
1000696b:	8d 43 08             	lea    eax,[ebx+0x8]
1000696e:	e8 0f df ff ff       	call   10004882 <read_u32>
10006973:	89 86 0c 05 00 00    	mov    DWORD PTR [esi+0x50c],eax
10006979:	8d 43 0c             	lea    eax,[ebx+0xc]
1000697c:	e8 01 df ff ff       	call   10004882 <read_u32>
10006981:	89 86 10 05 00 00    	mov    DWORD PTR [esi+0x510],eax
10006987:	8d 43 10             	lea    eax,[ebx+0x10]
1000698a:	e8 f3 de ff ff       	call   10004882 <read_u32>
1000698f:	89 86 14 05 00 00    	mov    DWORD PTR [esi+0x514],eax
10006995:	8d 43 14             	lea    eax,[ebx+0x14]
10006998:	e8 e5 de ff ff       	call   10004882 <read_u32>
1000699d:	89 86 18 05 00 00    	mov    DWORD PTR [esi+0x518],eax
100069a3:	8d 43 18             	lea    eax,[ebx+0x18]
100069a6:	e8 d7 de ff ff       	call   10004882 <read_u32>
100069ab:	89 86 1c 05 00 00    	mov    DWORD PTR [esi+0x51c],eax
100069b1:	8d 43 1c             	lea    eax,[ebx+0x1c]
100069b4:	e8 c9 de ff ff       	call   10004882 <read_u32>
100069b9:	89 86 20 05 00 00    	mov    DWORD PTR [esi+0x520],eax
100069bf:	89 f0                	mov    eax,esi
100069c1:	05 04 05 00 00       	add    eax,0x504
100069c6:	e8 e7 e0 ff ff       	call   10004ab2 <check_chrm_int>
100069cb:	85 c0                	test   eax,eax
100069cd:	0f 85 a7 0e 00 00    	jne    1000787a <read_chunks+0x188e>
100069d3:	83 c9 04             	or     ecx,0x4
100069d6:	88 8e a4 00 00 00    	mov    BYTE PTR [esi+0xa4],cl
100069dc:	80 8e ac 00 00 00 04 	or     BYTE PTR [esi+0xac],0x4
100069e3:	e9 d9 f8 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
100069e8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100069eb:	8a 90 a4 00 00 00    	mov    dl,BYTE PTR [eax+0xa4]
100069f1:	f6 c2 02             	test   dl,0x2
100069f4:	0f 85 22 ff ff ff    	jne    1000691c <read_chunks+0x930>
100069fa:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
100069fe:	0f 84 18 ff ff ff    	je     1000691c <read_chunks+0x930>
10006a04:	f6 c2 10             	test   dl,0x10
10006a07:	0f 85 77 0e 00 00    	jne    10007884 <read_chunks+0x1898>
10006a0d:	83 7d dc 04          	cmp    DWORD PTR [ebp-0x24],0x4
10006a11:	0f 85 ca 0a 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006a17:	89 d8                	mov    eax,ebx
10006a19:	e8 64 de ff ff       	call   10004882 <read_u32>
10006a1e:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006a21:	89 86 7c 05 00 00    	mov    DWORD PTR [esi+0x57c],eax
10006a27:	85 c0                	test   eax,eax
10006a29:	0f 8e 5f 0e 00 00    	jle    1000788e <read_chunks+0x18a2>
10006a2f:	83 ca 10             	or     edx,0x10
10006a32:	88 96 a4 00 00 00    	mov    BYTE PTR [esi+0xa4],dl
10006a38:	80 8e ac 00 00 00 10 	or     BYTE PTR [esi+0xac],0x10
10006a3f:	e9 7d f8 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006a44:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a47:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
10006a4d:	a8 02                	test   al,0x2
10006a4f:	0f 85 c7 fe ff ff    	jne    1000691c <read_chunks+0x930>
10006a55:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006a58:	83 7f 70 08          	cmp    DWORD PTR [edi+0x70],0x8
10006a5c:	0f 84 ba fe ff ff    	je     1000691c <read_chunks+0x930>
10006a62:	a8 20                	test   al,0x20
10006a64:	0f 85 2e 0e 00 00    	jne    10007898 <read_chunks+0x18ac>
10006a6a:	8a 87 f9 00 00 00    	mov    al,BYTE PTR [edi+0xf9]
10006a70:	84 c0                	test   al,al
10006a72:	75 17                	jne    10006a8b <read_chunks+0xa9f>
10006a74:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006a78:	0f 85 63 0a 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006a7e:	8a 03                	mov    al,BYTE PTR [ebx]
10006a80:	88 87 80 05 00 00    	mov    BYTE PTR [edi+0x580],al
10006a86:	e9 87 00 00 00       	jmp    10006b12 <read_chunks+0xb26>
10006a8b:	8d 50 fe             	lea    edx,[eax-0x2]
10006a8e:	80 fa 01             	cmp    dl,0x1
10006a91:	77 29                	ja     10006abc <read_chunks+0xad0>
10006a93:	83 7d dc 03          	cmp    DWORD PTR [ebp-0x24],0x3
10006a97:	0f 85 44 0a 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006a9d:	8a 03                	mov    al,BYTE PTR [ebx]
10006a9f:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006aa2:	88 87 81 05 00 00    	mov    BYTE PTR [edi+0x581],al
10006aa8:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006aab:	88 87 82 05 00 00    	mov    BYTE PTR [edi+0x582],al
10006ab1:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
10006ab4:	88 87 83 05 00 00    	mov    BYTE PTR [edi+0x583],al
10006aba:	eb 56                	jmp    10006b12 <read_chunks+0xb26>
10006abc:	3c 04                	cmp    al,0x4
10006abe:	75 1c                	jne    10006adc <read_chunks+0xaf0>
10006ac0:	83 7d dc 02          	cmp    DWORD PTR [ebp-0x24],0x2
10006ac4:	0f 85 17 0a 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006aca:	8a 03                	mov    al,BYTE PTR [ebx]
10006acc:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006acf:	88 86 80 05 00 00    	mov    BYTE PTR [esi+0x580],al
10006ad5:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006ad8:	89 f7                	mov    edi,esi
10006ada:	eb 30                	jmp    10006b0c <read_chunks+0xb20>
10006adc:	3c 06                	cmp    al,0x6
10006ade:	75 32                	jne    10006b12 <read_chunks+0xb26>
10006ae0:	83 7d dc 04          	cmp    DWORD PTR [ebp-0x24],0x4
10006ae4:	0f 85 f7 09 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006aea:	8a 03                	mov    al,BYTE PTR [ebx]
10006aec:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006aef:	88 86 81 05 00 00    	mov    BYTE PTR [esi+0x581],al
10006af5:	8a 43 01             	mov    al,BYTE PTR [ebx+0x1]
10006af8:	89 f7                	mov    edi,esi
10006afa:	88 86 82 05 00 00    	mov    BYTE PTR [esi+0x582],al
10006b00:	8a 43 02             	mov    al,BYTE PTR [ebx+0x2]
10006b03:	88 86 83 05 00 00    	mov    BYTE PTR [esi+0x583],al
10006b09:	8a 43 03             	mov    al,BYTE PTR [ebx+0x3]
10006b0c:	88 87 84 05 00 00    	mov    BYTE PTR [edi+0x584],al
10006b12:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b15:	8d 90 f0 00 00 00    	lea    edx,[eax+0xf0]
10006b1b:	05 80 05 00 00       	add    eax,0x580
10006b20:	e8 a1 ea ff ff       	call   100055c6 <check_sbit.part.15>
10006b25:	85 c0                	test   eax,eax
10006b27:	0f 85 75 0d 00 00    	jne    100078a2 <read_chunks+0x18b6>
10006b2d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b30:	80 88 a4 00 00 00 20 	or     BYTE PTR [eax+0xa4],0x20
10006b37:	80 88 ac 00 00 00 20 	or     BYTE PTR [eax+0xac],0x20
10006b3e:	e9 7e f7 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006b43:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b46:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
10006b4c:	a8 02                	test   al,0x2
10006b4e:	0f 85 c8 fd ff ff    	jne    1000691c <read_chunks+0x930>
10006b54:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006b57:	83 7e 70 08          	cmp    DWORD PTR [esi+0x70],0x8
10006b5b:	0f 84 bb fd ff ff    	je     1000691c <read_chunks+0x930>
10006b61:	a8 40                	test   al,0x40
10006b63:	0f 85 43 0d 00 00    	jne    100078ac <read_chunks+0x18c0>
10006b69:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006b6d:	0f 85 6e 09 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006b73:	8a 03                	mov    al,BYTE PTR [ebx]
10006b75:	88 86 85 05 00 00    	mov    BYTE PTR [esi+0x585],al
10006b7b:	3c 03                	cmp    al,0x3
10006b7d:	0f 87 33 0d 00 00    	ja     100078b6 <read_chunks+0x18ca>
10006b83:	80 8e a4 00 00 00 40 	or     BYTE PTR [esi+0xa4],0x40
10006b8a:	80 8e ac 00 00 00 40 	or     BYTE PTR [esi+0xac],0x40
10006b91:	e9 2b f7 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006b96:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b99:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006b9d:	0f 84 79 fd ff ff    	je     1000691c <read_chunks+0x930>
10006ba3:	f6 80 a5 00 00 00 01 	test   BYTE PTR [eax+0xa5],0x1
10006baa:	0f 85 10 0d 00 00    	jne    100078c0 <read_chunks+0x18d4>
10006bb0:	8a 80 f9 00 00 00    	mov    al,BYTE PTR [eax+0xf9]
10006bb6:	88 c2                	mov    dl,al
10006bb8:	80 e2 fb             	and    dl,0xfb
10006bbb:	75 1b                	jne    10006bd8 <read_chunks+0xbec>
10006bbd:	83 7d dc 02          	cmp    DWORD PTR [ebp-0x24],0x2
10006bc1:	0f 85 1a 09 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006bc7:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006bca:	86 e0                	xchg   al,ah
10006bcc:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006bcf:	66 89 86 90 05 00 00 	mov    WORD PTR [esi+0x590],ax
10006bd6:	eb 71                	jmp    10006c49 <read_chunks+0xc5d>
10006bd8:	80 fa 02             	cmp    dl,0x2
10006bdb:	75 35                	jne    10006c12 <read_chunks+0xc26>
10006bdd:	83 7d dc 06          	cmp    DWORD PTR [ebp-0x24],0x6
10006be1:	0f 85 fa 08 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006be7:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006bea:	86 e0                	xchg   al,ah
10006bec:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006bef:	66 89 87 92 05 00 00 	mov    WORD PTR [edi+0x592],ax
10006bf6:	66 8b 43 02          	mov    ax,WORD PTR [ebx+0x2]
10006bfa:	86 e0                	xchg   al,ah
10006bfc:	66 89 87 94 05 00 00 	mov    WORD PTR [edi+0x594],ax
10006c03:	66 8b 43 04          	mov    ax,WORD PTR [ebx+0x4]
10006c07:	86 e0                	xchg   al,ah
10006c09:	66 89 87 96 05 00 00 	mov    WORD PTR [edi+0x596],ax
10006c10:	eb 37                	jmp    10006c49 <read_chunks+0xc5d>
10006c12:	3c 03                	cmp    al,0x3
10006c14:	75 33                	jne    10006c49 <read_chunks+0xc5d>
10006c16:	83 7d dc 01          	cmp    DWORD PTR [ebp-0x24],0x1
10006c1a:	0f 85 c1 08 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006c20:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c23:	f6 80 a4 00 00 00 02 	test   BYTE PTR [eax+0xa4],0x2
10006c2a:	0f 84 9a 0c 00 00    	je     100078ca <read_chunks+0x18de>
10006c30:	0f b6 13             	movzx  edx,BYTE PTR [ebx]
10006c33:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006c36:	66 89 96 98 05 00 00 	mov    WORD PTR [esi+0x598],dx
10006c3d:	3b 96 00 01 00 00    	cmp    edx,DWORD PTR [esi+0x100]
10006c43:	0f 83 8b 0c 00 00    	jae    100078d4 <read_chunks+0x18e8>
10006c49:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c4c:	80 88 a5 00 00 00 01 	or     BYTE PTR [eax+0xa5],0x1
10006c53:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c56:	80 88 ad 00 00 00 01 	or     BYTE PTR [eax+0xad],0x1
10006c5d:	e9 5f f6 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006c62:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c65:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006c69:	0f 84 ad fc ff ff    	je     1000691c <read_chunks+0x930>
10006c6f:	f6 80 a5 00 00 00 04 	test   BYTE PTR [eax+0xa5],0x4
10006c76:	0f 85 62 0c 00 00    	jne    100078de <read_chunks+0x18f2>
10006c7c:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10006c7f:	85 c0                	test   eax,eax
10006c81:	0f 84 5a 08 00 00    	je     100074e1 <read_chunks+0x14f5>
10006c87:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006c8a:	8a 96 f9 00 00 00    	mov    dl,BYTE PTR [esi+0xf9]
10006c90:	84 d2                	test   dl,dl
10006c92:	75 1a                	jne    10006cae <read_chunks+0xcc2>
10006c94:	83 f8 02             	cmp    eax,0x2
10006c97:	0f 85 44 08 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006c9d:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006ca0:	86 e0                	xchg   al,ah
10006ca2:	66 89 86 9c 07 00 00 	mov    WORD PTR [esi+0x79c],ax
10006ca9:	e9 87 00 00 00       	jmp    10006d35 <read_chunks+0xd49>
10006cae:	80 fa 02             	cmp    dl,0x2
10006cb1:	75 34                	jne    10006ce7 <read_chunks+0xcfb>
10006cb3:	83 f8 06             	cmp    eax,0x6
10006cb6:	0f 85 25 08 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006cbc:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006cbf:	86 e0                	xchg   al,ah
10006cc1:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006cc4:	66 89 86 9e 07 00 00 	mov    WORD PTR [esi+0x79e],ax
10006ccb:	66 8b 43 02          	mov    ax,WORD PTR [ebx+0x2]
10006ccf:	86 e0                	xchg   al,ah
10006cd1:	66 89 86 a0 07 00 00 	mov    WORD PTR [esi+0x7a0],ax
10006cd8:	66 8b 43 04          	mov    ax,WORD PTR [ebx+0x4]
10006cdc:	86 e0                	xchg   al,ah
10006cde:	66 89 86 a2 07 00 00 	mov    WORD PTR [esi+0x7a2],ax
10006ce5:	eb 4e                	jmp    10006d35 <read_chunks+0xd49>
10006ce7:	80 fa 03             	cmp    dl,0x3
10006cea:	75 35                	jne    10006d21 <read_chunks+0xd35>
10006cec:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006cef:	3b 87 00 01 00 00    	cmp    eax,DWORD PTR [edi+0x100]
10006cf5:	0f 87 e6 07 00 00    	ja     100074e1 <read_chunks+0x14f5>
10006cfb:	f6 87 a4 00 00 00 02 	test   BYTE PTR [edi+0xa4],0x2
10006d02:	0f 84 e0 0b 00 00    	je     100078e8 <read_chunks+0x18fc>
10006d08:	8d 97 a8 07 00 00    	lea    edx,[edi+0x7a8]
10006d0e:	89 d7                	mov    edi,edx
10006d10:	89 de                	mov    esi,ebx
10006d12:	89 c1                	mov    ecx,eax
10006d14:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006d16:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006d19:	89 86 a4 07 00 00    	mov    DWORD PTR [esi+0x7a4],eax
10006d1f:	eb 14                	jmp    10006d35 <read_chunks+0xd49>
10006d21:	80 fa 04             	cmp    dl,0x4
10006d24:	75 0a                	jne    10006d30 <read_chunks+0xd44>
10006d26:	b9 24 00 00 00       	mov    ecx,0x24
10006d2b:	e9 a1 0a 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006d30:	80 fa 06             	cmp    dl,0x6
10006d33:	74 f1                	je     10006d26 <read_chunks+0xd3a>
10006d35:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d38:	80 88 a5 00 00 00 04 	or     BYTE PTR [eax+0xa5],0x4
10006d3f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d42:	80 88 ad 00 00 00 04 	or     BYTE PTR [eax+0xad],0x4
10006d49:	e9 73 f5 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006d4e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d51:	f6 80 a4 00 00 00 02 	test   BYTE PTR [eax+0xa4],0x2
10006d58:	0f 84 94 0b 00 00    	je     100078f2 <read_chunks+0x1906>
10006d5e:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006d62:	0f 84 b4 fb ff ff    	je     1000691c <read_chunks+0x930>
10006d68:	f6 80 a5 00 00 00 02 	test   BYTE PTR [eax+0xa5],0x2
10006d6f:	0f 85 87 0b 00 00    	jne    100078fc <read_chunks+0x1910>
10006d75:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10006d78:	d1 ea                	shr    edx,1
10006d7a:	3b 90 00 01 00 00    	cmp    edx,DWORD PTR [eax+0x100]
10006d80:	0f 85 5b 07 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006d86:	31 c0                	xor    eax,eax
10006d88:	39 c2                	cmp    edx,eax
10006d8a:	74 14                	je     10006da0 <read_chunks+0xdb4>
10006d8c:	66 8b 0c 43          	mov    cx,WORD PTR [ebx+eax*2]
10006d90:	86 e9                	xchg   cl,ch
10006d92:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006d95:	66 89 8c 47 9a 05 00 00 	mov    WORD PTR [edi+eax*2+0x59a],cx
10006d9d:	40                   	inc    eax
10006d9e:	eb e8                	jmp    10006d88 <read_chunks+0xd9c>
10006da0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006da3:	80 88 a5 00 00 00 02 	or     BYTE PTR [eax+0xa5],0x2
10006daa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006dad:	80 88 ad 00 00 00 02 	or     BYTE PTR [eax+0xad],0x2
10006db4:	e9 08 f5 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006db9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006dbc:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006dc0:	0f 84 56 fb ff ff    	je     1000691c <read_chunks+0x930>
10006dc6:	8a 88 a5 00 00 00    	mov    cl,BYTE PTR [eax+0xa5]
10006dcc:	f6 c1 08             	test   cl,0x8
10006dcf:	0f 85 31 0b 00 00    	jne    10007906 <read_chunks+0x191a>
10006dd5:	83 7d dc 09          	cmp    DWORD PTR [ebp-0x24],0x9
10006dd9:	0f 85 02 07 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006ddf:	89 d8                	mov    eax,ebx
10006de1:	e8 9c da ff ff       	call   10004882 <read_u32>
10006de6:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006de9:	89 86 a8 08 00 00    	mov    DWORD PTR [esi+0x8a8],eax
10006def:	8d 43 04             	lea    eax,[ebx+0x4]
10006df2:	e8 8b da ff ff       	call   10004882 <read_u32>
10006df7:	89 86 ac 08 00 00    	mov    DWORD PTR [esi+0x8ac],eax
10006dfd:	8a 43 08             	mov    al,BYTE PTR [ebx+0x8]
10006e00:	88 86 b0 08 00 00    	mov    BYTE PTR [esi+0x8b0],al
10006e06:	89 f0                	mov    eax,esi
10006e08:	05 a8 08 00 00       	add    eax,0x8a8
10006e0d:	e8 ac e8 ff ff       	call   100056be <check_phys>
10006e12:	85 c0                	test   eax,eax
10006e14:	0f 85 f6 0a 00 00    	jne    10007910 <read_chunks+0x1924>
10006e1a:	83 c9 08             	or     ecx,0x8
10006e1d:	88 8e a5 00 00 00    	mov    BYTE PTR [esi+0xa5],cl
10006e23:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e26:	80 88 ad 00 00 00 08 	or     BYTE PTR [eax+0xad],0x8
10006e2d:	e9 8f f4 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006e32:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e35:	0f b6 b0 a5 00 00 00 	movzx  esi,BYTE PTR [eax+0xa5]
10006e3c:	f7 c6 20 00 00 00    	test   esi,0x20
10006e42:	75 65                	jne    10006ea9 <read_chunks+0xebd>
10006e44:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10006e48:	75 69                	jne    10006eb3 <read_chunks+0xec7>
10006e4a:	66 8b 03             	mov    ax,WORD PTR [ebx]
10006e4d:	86 e0                	xchg   al,ah
10006e4f:	66 89 45 d0          	mov    WORD PTR [ebp-0x30],ax
10006e53:	8a 43 06             	mov    al,BYTE PTR [ebx+0x6]
10006e56:	8b 53 02             	mov    edx,DWORD PTR [ebx+0x2]
10006e59:	89 55 d2             	mov    DWORD PTR [ebp-0x2e],edx
10006e5c:	88 45 d6             	mov    BYTE PTR [ebp-0x2a],al
10006e5f:	8d 45 d0             	lea    eax,[ebp-0x30]
10006e62:	e8 7c e8 ff ff       	call   100056e3 <check_time>
10006e67:	85 c0                	test   eax,eax
10006e69:	75 52                	jne    10006ebd <read_chunks+0xed1>
10006e6b:	89 f0                	mov    eax,esi
10006e6d:	83 c8 20             	or     eax,0x20
10006e70:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006e73:	88 87 a5 00 00 00    	mov    BYTE PTR [edi+0xa5],al
10006e79:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e7c:	f6 80 a9 00 00 00 20 	test   BYTE PTR [eax+0xa9],0x20
10006e83:	75 15                	jne    10006e9a <read_chunks+0xeae>
10006e85:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006e88:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10006e8b:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006e8e:	89 86 bc 08 00 00    	mov    DWORD PTR [esi+0x8bc],eax
10006e94:	89 96 c0 08 00 00    	mov    DWORD PTR [esi+0x8c0],edx
10006e9a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e9d:	80 88 ad 00 00 00 20 	or     BYTE PTR [eax+0xad],0x20
10006ea4:	e9 18 f4 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006ea9:	b9 1f 00 00 00       	mov    ecx,0x1f
10006eae:	e9 1e 09 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006eb3:	b9 11 00 00 00       	mov    ecx,0x11
10006eb8:	e9 f0 08 00 00       	jmp    100077ad <read_chunks+0x17c1>
10006ebd:	b9 3b 00 00 00       	mov    ecx,0x3b
10006ec2:	e9 0a 09 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006ec7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006eca:	83 78 70 08          	cmp    DWORD PTR [eax+0x70],0x8
10006ece:	0f 84 48 fa ff ff    	je     1000691c <read_chunks+0x930>
10006ed4:	8a 90 a5 00 00 00    	mov    dl,BYTE PTR [eax+0xa5]
10006eda:	f6 c2 40             	test   dl,0x40
10006edd:	0f 85 37 0a 00 00    	jne    1000791a <read_chunks+0x192e>
10006ee3:	83 7d dc 09          	cmp    DWORD PTR [ebp-0x24],0x9
10006ee7:	0f 85 f4 05 00 00    	jne    100074e1 <read_chunks+0x14f5>
10006eed:	89 d8                	mov    eax,ebx
10006eef:	e8 8e d9 ff ff       	call   10004882 <read_u32>
10006ef4:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
10006ef7:	89 87 c4 08 00 00    	mov    DWORD PTR [edi+0x8c4],eax
10006efd:	8d 43 04             	lea    eax,[ebx+0x4]
10006f00:	e8 7d d9 ff ff       	call   10004882 <read_u32>
10006f05:	89 87 c8 08 00 00    	mov    DWORD PTR [edi+0x8c8],eax
10006f0b:	8a 43 08             	mov    al,BYTE PTR [ebx+0x8]
10006f0e:	88 87 cc 08 00 00    	mov    BYTE PTR [edi+0x8cc],al
10006f14:	3c 01                	cmp    al,0x1
10006f16:	0f 87 08 0a 00 00    	ja     10007924 <read_chunks+0x1938>
10006f1c:	83 ca 40             	or     edx,0x40
10006f1f:	88 97 a5 00 00 00    	mov    BYTE PTR [edi+0xa5],dl
10006f25:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f28:	80 88 ad 00 00 00 40 	or     BYTE PTR [eax+0xad],0x40
10006f2f:	e9 8d f3 ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10006f34:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f37:	80 b8 a5 00 00 00 00 	cmp    BYTE PTR [eax+0xa5],0x0
10006f3e:	0f 88 aa 00 00 00    	js     10006fee <read_chunks+0x1002>
10006f44:	80 88 a5 00 00 00 80 	or     BYTE PTR [eax+0xa5],0x80
10006f4b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f4e:	80 b8 a9 00 00 00 00 	cmp    BYTE PTR [eax+0xa9],0x0
10006f55:	0f 88 10 08 00 00    	js     1000776b <read_chunks+0x177f>
10006f5b:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
10006f5e:	89 f2                	mov    edx,esi
10006f60:	e8 85 e2 ff ff       	call   100051ea <increase_cache_usage>
10006f65:	85 c0                	test   eax,eax
10006f67:	0f 85 d5 09 00 00    	jne    10007942 <read_chunks+0x1956>
10006f6d:	89 75 d0             	mov    DWORD PTR [ebp-0x30],esi
10006f70:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f73:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
10006f76:	89 f2                	mov    edx,esi
10006f78:	e8 2f e2 ff ff       	call   100051ac <spng__malloc.isra.0>
10006f7d:	89 c3                	mov    ebx,eax
10006f7f:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10006f82:	85 c0                	test   eax,eax
10006f84:	0f 84 c2 09 00 00    	je     1000794c <read_chunks+0x1960>
10006f8a:	89 f1                	mov    ecx,esi
10006f8c:	89 c2                	mov    edx,eax
10006f8e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f91:	e8 4b e9 ff ff       	call   100058e1 <read_chunk_bytes2>
10006f96:	85 c0                	test   eax,eax
10006f98:	74 10                	je     10006faa <read_chunks+0xfbe>
10006f9a:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10006f9d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006fa0:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10006fa3:	89 da                	mov    edx,ebx
10006fa5:	e9 a7 07 00 00       	jmp    10007751 <read_chunks+0x1765>
10006faa:	8d 45 d0             	lea    eax,[ebp-0x30]
10006fad:	e8 3a dc ff ff       	call   10004bec <check_exif>
10006fb2:	85 c0                	test   eax,eax
10006fb4:	74 17                	je     10006fcd <read_chunks+0xfe1>
10006fb6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006fb9:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
10006fbc:	89 da                	mov    edx,ebx
10006fbe:	e8 10 e2 ff ff       	call   100051d3 <spng__free.isra.3>
10006fc3:	b9 3d 00 00 00       	mov    ecx,0x3d
10006fc8:	e9 04 08 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006fcd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006fd0:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10006fd3:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
10006fd6:	89 86 d0 08 00 00    	mov    DWORD PTR [esi+0x8d0],eax
10006fdc:	89 96 d4 08 00 00    	mov    DWORD PTR [esi+0x8d4],edx
10006fe2:	80 8e ad 00 00 00 80 	or     BYTE PTR [esi+0xad],0x80
10006fe9:	e9 7d 07 00 00       	jmp    1000776b <read_chunks+0x177f>
10006fee:	b9 21 00 00 00       	mov    ecx,0x21
10006ff3:	e9 d9 07 00 00       	jmp    100077d1 <read_chunks+0x17e5>
10006ff8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006ffb:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
10007001:	a8 02                	test   al,0x2
10007003:	0f 85 13 f9 ff ff    	jne    1000691c <read_chunks+0x930>
10007009:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
1000700c:	83 7f 70 08          	cmp    DWORD PTR [edi+0x70],0x8
10007010:	0f 84 06 f9 ff ff    	je     1000691c <read_chunks+0x930>
10007016:	a8 08                	test   al,0x8
10007018:	0f 85 10 09 00 00    	jne    1000792e <read_chunks+0x1942>
1000701e:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
10007021:	89 75 c0             	mov    DWORD PTR [ebp-0x40],esi
10007024:	85 f6                	test   esi,esi
10007026:	0f 84 b5 04 00 00    	je     100074e1 <read_chunks+0x14f5>
1000702c:	83 c8 08             	or     eax,0x8
1000702f:	88 87 a4 00 00 00    	mov    BYTE PTR [edi+0xa4],al
10007035:	8b 5d c0             	mov    ebx,DWORD PTR [ebp-0x40]
10007038:	83 fb 51             	cmp    ebx,0x51
1000703b:	76 05                	jbe    10007042 <read_chunks+0x1056>
1000703d:	bb 51 00 00 00       	mov    ebx,0x51
10007042:	89 da                	mov    edx,ebx
10007044:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007047:	e8 15 e7 ff ff       	call   10005761 <read_chunk_bytes>
1000704c:	89 c1                	mov    ecx,eax
1000704e:	85 c0                	test   eax,eax
10007050:	0f 85 4d 07 00 00    	jne    100077a3 <read_chunks+0x17b7>
10007056:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007059:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
1000705c:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
1000705f:	52                   	push   edx
10007060:	53                   	push   ebx
10007061:	6a 00                	push   0x0
10007063:	50                   	push   eax
10007064:	e8 fc ff ff ff       	call   10007065 <read_chunks+0x1079>	10007065: R_386_PC32	memchr
10007069:	83 c4 10             	add    esp,0x10
1000706c:	85 c0                	test   eax,eax
1000706e:	75 0a                	jne    1000707a <read_chunks+0x108e>
10007070:	b9 27 00 00 00       	mov    ecx,0x27
10007075:	e9 57 07 00 00       	jmp    100077d1 <read_chunks+0x17e5>
1000707a:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000707d:	2b 45 bc             	sub    eax,DWORD PTR [ebp-0x44]
10007080:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10007083:	83 f8 4f             	cmp    eax,0x4f
10007086:	77 e8                	ja     10007070 <read_chunks+0x1084>
10007088:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000708b:	05 24 05 00 00       	add    eax,0x524
10007090:	89 c7                	mov    edi,eax
10007092:	8b 75 bc             	mov    esi,DWORD PTR [ebp-0x44]
10007095:	8b 4d b8             	mov    ecx,DWORD PTR [ebp-0x48]
10007098:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000709a:	e8 72 df ff ff       	call   10005011 <check_png_keyword>
1000709f:	85 c0                	test   eax,eax
100070a1:	75 cd                	jne    10007070 <read_chunks+0x1084>
100070a3:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100070a6:	83 c0 02             	add    eax,0x2
100070a9:	39 45 c0             	cmp    DWORD PTR [ebp-0x40],eax
100070ac:	0f 82 2f 04 00 00    	jb     100074e1 <read_chunks+0x14f5>
100070b2:	8b 55 b4             	mov    edx,DWORD PTR [ebp-0x4c]
100070b5:	80 7a 01 00          	cmp    BYTE PTR [edx+0x1],0x0
100070b9:	0f 85 79 08 00 00    	jne    10007938 <read_chunks+0x194c>
100070bf:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
100070c2:	8d 8f 74 05 00 00    	lea    ecx,[edi+0x574]
100070c8:	89 fe                	mov    esi,edi
100070ca:	8d 97 78 05 00 00    	lea    edx,[edi+0x578]
100070d0:	57                   	push   edi
100070d1:	83 eb 02             	sub    ebx,0x2
100070d4:	2b 5d b8             	sub    ebx,DWORD PTR [ebp-0x48]
100070d7:	53                   	push   ebx
100070d8:	03 45 bc             	add    eax,DWORD PTR [ebp-0x44]
100070db:	50                   	push   eax
100070dc:	6a 00                	push   0x0
100070de:	89 f0                	mov    eax,esi
100070e0:	e8 11 ed ff ff       	call   10005df6 <spng__inflate_stream>
100070e5:	89 c1                	mov    ecx,eax
100070e7:	83 c4 10             	add    esp,0x10
100070ea:	85 c0                	test   eax,eax
100070ec:	0f 85 b1 06 00 00    	jne    100077a3 <read_chunks+0x17b7>
100070f2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070f5:	80 88 ac 00 00 00 08 	or     BYTE PTR [eax+0xac],0x8
100070fc:	e9 6a 06 00 00       	jmp    1000776b <read_chunks+0x177f>
10007101:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007104:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10007107:	85 c0                	test   eax,eax
10007109:	0f 84 d2 03 00 00    	je     100074e1 <read_chunks+0x14f5>
1000710f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007112:	80 88 a4 00 00 00 80 	or     BYTE PTR [eax+0xa4],0x80
10007119:	80 b8 a8 00 00 00 00 	cmp    BYTE PTR [eax+0xa8],0x0
10007120:	0f 88 45 06 00 00    	js     1000776b <read_chunks+0x177f>
10007126:	ba 70 00 00 00       	mov    edx,0x70
1000712b:	e8 ba e0 ff ff       	call   100051ea <increase_cache_usage>
10007130:	89 c6                	mov    esi,eax
10007132:	85 c0                	test   eax,eax
10007134:	0f 85 08 08 00 00    	jne    10007942 <read_chunks+0x1956>
1000713a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000713d:	8b 80 88 05 00 00    	mov    eax,DWORD PTR [eax+0x588]
10007143:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10007146:	8d 48 01             	lea    ecx,[eax+0x1]
10007149:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000714c:	89 88 88 05 00 00    	mov    DWORD PTR [eax+0x588],ecx
10007152:	85 c9                	test   ecx,ecx
10007154:	0f 84 4c 08 00 00    	je     100079a6 <read_chunks+0x19ba>
1000715a:	83 c8 ff             	or     eax,0xffffffff
1000715d:	31 d2                	xor    edx,edx
1000715f:	f7 f1                	div    ecx
10007161:	83 f8 6f             	cmp    eax,0x6f
10007164:	0f 86 3c 08 00 00    	jbe    100079a6 <read_chunks+0x19ba>
1000716a:	53                   	push   ebx
1000716b:	53                   	push   ebx
1000716c:	6b c9 70             	imul   ecx,ecx,0x70
1000716f:	51                   	push   ecx
10007170:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007173:	ff b0 8c 05 00 00    	push   DWORD PTR [eax+0x58c]
10007179:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
1000717c:	83 c4 10             	add    esp,0x10
1000717f:	85 c0                	test   eax,eax
10007181:	0f 84 c5 07 00 00    	je     1000794c <read_chunks+0x1960>
10007187:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
1000718a:	89 87 8c 05 00 00    	mov    DWORD PTR [edi+0x58c],eax
10007190:	6b 97 88 05 00 00 70 	imul   edx,DWORD PTR [edi+0x588],0x70
10007197:	8d 5c 10 90          	lea    ebx,[eax+edx*1-0x70]
1000719b:	b9 1c 00 00 00       	mov    ecx,0x1c
100071a0:	89 df                	mov    edi,ebx
100071a2:	89 f0                	mov    eax,esi
100071a4:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100071a6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071a9:	c7 80 a0 00 00 00 95 52 00 10 	mov    DWORD PTR [eax+0xa0],0x10005295	100071af: R_386_32	.text
100071b3:	c7 45 c0 00 01 00 00 	mov    DWORD PTR [ebp-0x40],0x100
100071ba:	81 7d bc ff 00 00 00 	cmp    DWORD PTR [ebp-0x44],0xff
100071c1:	77 06                	ja     100071c9 <read_chunks+0x11dd>
100071c3:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100071c6:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100071c9:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100071cc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071cf:	e8 8d e5 ff ff       	call   10005761 <read_chunk_bytes>
100071d4:	89 c1                	mov    ecx,eax
100071d6:	85 c0                	test   eax,eax
100071d8:	0f 85 c5 05 00 00    	jne    100077a3 <read_chunks+0x17b7>
100071de:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071e1:	8b 70 10             	mov    esi,DWORD PTR [eax+0x10]
100071e4:	52                   	push   edx
100071e5:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100071e8:	83 f8 50             	cmp    eax,0x50
100071eb:	76 05                	jbe    100071f2 <read_chunks+0x1206>
100071ed:	b8 50 00 00 00       	mov    eax,0x50
100071f2:	50                   	push   eax
100071f3:	6a 00                	push   0x0
100071f5:	56                   	push   esi
100071f6:	e8 fc ff ff ff       	call   100071f7 <read_chunks+0x120b>	100071f7: R_386_PC32	memchr
100071fb:	83 c4 10             	add    esp,0x10
100071fe:	89 c7                	mov    edi,eax
10007200:	85 c0                	test   eax,eax
10007202:	0f 84 8a 07 00 00    	je     10007992 <read_chunks+0x19a6>
10007208:	29 f0                	sub    eax,esi
1000720a:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
1000720d:	50                   	push   eax
1000720e:	6a 04                	push   0x4
10007210:	68 ec d5 00 10       	push   0x1000d5ec	10007211: R_386_32	.text
10007215:	8d 55 e0             	lea    edx,[ebp-0x20]
10007218:	52                   	push   edx
10007219:	e8 fc ff ff ff       	call   1000721a <read_chunks+0x122e>	1000721a: R_386_PC32	memcmp
1000721e:	83 c4 10             	add    esp,0x10
10007221:	85 c0                	test   eax,eax
10007223:	8d 55 e0             	lea    edx,[ebp-0x20]
10007226:	75 1f                	jne    10007247 <read_chunks+0x125b>
10007228:	c7 03 01 00 00 00    	mov    DWORD PTR [ebx],0x1
1000722e:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10007231:	48                   	dec    eax
10007232:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
10007235:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10007238:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
1000723b:	0f 84 04 01 00 00    	je     10007345 <read_chunks+0x1359>
10007241:	40                   	inc    eax
10007242:	e9 fe 00 00 00       	jmp    10007345 <read_chunks+0x1359>
10007247:	50                   	push   eax
10007248:	6a 04                	push   0x4
1000724a:	68 e8 d5 00 10       	push   0x1000d5e8	1000724b: R_386_32	.text
1000724f:	52                   	push   edx
10007250:	e8 fc ff ff ff       	call   10007251 <read_chunks+0x1265>	10007251: R_386_PC32	memcmp
10007255:	83 c4 10             	add    esp,0x10
10007258:	85 c0                	test   eax,eax
1000725a:	8d 55 e0             	lea    edx,[ebp-0x20]
1000725d:	75 2e                	jne    1000728d <read_chunks+0x12a1>
1000725f:	c7 03 02 00 00 00    	mov    DWORD PTR [ebx],0x2
10007265:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10007268:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
1000726b:	83 f8 02             	cmp    eax,0x2
1000726e:	0f 86 e2 06 00 00    	jbe    10007956 <read_chunks+0x196a>
10007274:	80 7f 01 00          	cmp    BYTE PTR [edi+0x1],0x0
10007278:	0f 85 e2 06 00 00    	jne    10007960 <read_chunks+0x1974>
1000727e:	c6 43 10 01          	mov    BYTE PTR [ebx+0x10],0x1
10007282:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10007285:	83 c0 02             	add    eax,0x2
10007288:	e9 b8 00 00 00       	jmp    10007345 <read_chunks+0x1359>
1000728d:	50                   	push   eax
1000728e:	6a 04                	push   0x4
10007290:	68 e4 d5 00 10       	push   0x1000d5e4	10007291: R_386_32	.text
10007295:	52                   	push   edx
10007296:	e8 fc ff ff ff       	call   10007297 <read_chunks+0x12ab>	10007297: R_386_PC32	memcmp
1000729b:	83 c4 10             	add    esp,0x10
1000729e:	85 c0                	test   eax,eax
100072a0:	0f 85 c4 06 00 00    	jne    1000796a <read_chunks+0x197e>
100072a6:	c7 03 03 00 00 00    	mov    DWORD PTR [ebx],0x3
100072ac:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100072af:	2b 45 b8             	sub    eax,DWORD PTR [ebp-0x48]
100072b2:	83 f8 04             	cmp    eax,0x4
100072b5:	77 0a                	ja     100072c1 <read_chunks+0x12d5>
100072b7:	b9 2f 00 00 00       	mov    ecx,0x2f
100072bc:	e9 10 05 00 00       	jmp    100077d1 <read_chunks+0x17e5>
100072c1:	8a 47 01             	mov    al,BYTE PTR [edi+0x1]
100072c4:	88 43 10             	mov    BYTE PTR [ebx+0x10],al
100072c7:	3c 01                	cmp    al,0x1
100072c9:	0f 87 a5 06 00 00    	ja     10007974 <read_chunks+0x1988>
100072cf:	80 7f 02 00          	cmp    BYTE PTR [edi+0x2],0x0
100072d3:	0f 85 a5 06 00 00    	jne    1000797e <read_chunks+0x1992>
100072d9:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100072dc:	83 c0 03             	add    eax,0x3
100072df:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
100072e2:	50                   	push   eax
100072e3:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100072e6:	2b 45 ac             	sub    eax,DWORD PTR [ebp-0x54]
100072e9:	50                   	push   eax
100072ea:	6a 00                	push   0x0
100072ec:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
100072ef:	01 f0                	add    eax,esi
100072f1:	50                   	push   eax
100072f2:	e8 fc ff ff ff       	call   100072f3 <read_chunks+0x1307>	100072f3: R_386_PC32	memchr
100072f7:	83 c4 10             	add    esp,0x10
100072fa:	85 c0                	test   eax,eax
100072fc:	0f 84 86 06 00 00    	je     10007988 <read_chunks+0x199c>
10007302:	8b 7d c0             	mov    edi,DWORD PTR [ebp-0x40]
10007305:	01 f7                	add    edi,esi
10007307:	89 fa                	mov    edx,edi
10007309:	29 c2                	sub    edx,eax
1000730b:	4a                   	dec    edx
1000730c:	7e a9                	jle    100072b7 <read_chunks+0x12cb>
1000730e:	29 f0                	sub    eax,esi
10007310:	40                   	inc    eax
10007311:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
10007314:	50                   	push   eax
10007315:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10007318:	2b 45 b0             	sub    eax,DWORD PTR [ebp-0x50]
1000731b:	50                   	push   eax
1000731c:	6a 00                	push   0x0
1000731e:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10007321:	01 f0                	add    eax,esi
10007323:	50                   	push   eax
10007324:	e8 fc ff ff ff       	call   10007325 <read_chunks+0x1339>	10007325: R_386_PC32	memchr
10007329:	83 c4 10             	add    esp,0x10
1000732c:	85 c0                	test   eax,eax
1000732e:	74 87                	je     100072b7 <read_chunks+0x12cb>
10007330:	39 c7                	cmp    edi,eax
10007332:	74 83                	je     100072b7 <read_chunks+0x12cb>
10007334:	29 f0                	sub    eax,esi
10007336:	40                   	inc    eax
10007337:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000733a:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000733d:	2b 45 b4             	sub    eax,DWORD PTR [ebp-0x4c]
10007340:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10007343:	eb 11                	jmp    10007356 <read_chunks+0x136a>
10007345:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10007348:	c7 45 b0 00 00 00 00 	mov    DWORD PTR [ebp-0x50],0x0
1000734f:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [ebp-0x54],0x0
10007356:	80 7b 10 00          	cmp    BYTE PTR [ebx+0x10],0x0
1000735a:	74 7c                	je     100073d8 <read_chunks+0x13ec>
1000735c:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
1000735f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007362:	e8 83 de ff ff       	call   100051ea <increase_cache_usage>
10007367:	85 c0                	test   eax,eax
10007369:	0f 85 d3 05 00 00    	jne    10007942 <read_chunks+0x1956>
1000736f:	50                   	push   eax
10007370:	50                   	push   eax
10007371:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10007374:	6a 01                	push   0x1
10007376:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007379:	ff 50 60             	call   DWORD PTR [eax+0x60]
1000737c:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000737f:	83 c4 10             	add    esp,0x10
10007382:	85 c0                	test   eax,eax
10007384:	0f 84 18 03 00 00    	je     100076a2 <read_chunks+0x16b6>
1000738a:	89 c7                	mov    edi,eax
1000738c:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
1000738f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007391:	8d 4b 0c             	lea    ecx,[ebx+0xc]
10007394:	8d 53 08             	lea    edx,[ebx+0x8]
10007397:	57                   	push   edi
10007398:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
1000739b:	2b 45 b4             	sub    eax,DWORD PTR [ebp-0x4c]
1000739e:	50                   	push   eax
1000739f:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
100073a2:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100073a5:	03 46 10             	add    eax,DWORD PTR [esi+0x10]
100073a8:	50                   	push   eax
100073a9:	6a 01                	push   0x1
100073ab:	89 f0                	mov    eax,esi
100073ad:	e8 44 ea ff ff       	call   10005df6 <spng__inflate_stream>
100073b2:	89 c1                	mov    ecx,eax
100073b4:	83 c4 10             	add    esp,0x10
100073b7:	85 c0                	test   eax,eax
100073b9:	0f 85 e4 03 00 00    	jne    100077a3 <read_chunks+0x17b7>
100073bf:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100073c2:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100073c5:	c6 44 02 ff 00       	mov    BYTE PTR [edx+eax*1-0x1],0x0
100073ca:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100073cd:	03 53 0c             	add    edx,DWORD PTR [ebx+0xc]
100073d0:	89 53 1c             	mov    DWORD PTR [ebx+0x1c],edx
100073d3:	e9 83 00 00 00       	jmp    1000745b <read_chunks+0x146f>
100073d8:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100073db:	40                   	inc    eax
100073dc:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
100073df:	89 c2                	mov    edx,eax
100073e1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100073e4:	e8 01 de ff ff       	call   100051ea <increase_cache_usage>
100073e9:	85 c0                	test   eax,eax
100073eb:	0f 85 51 05 00 00    	jne    10007942 <read_chunks+0x1956>
100073f1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100073f4:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
100073f7:	8b 55 a8             	mov    edx,DWORD PTR [ebp-0x58]
100073fa:	e8 ad dd ff ff       	call   100051ac <spng__malloc.isra.0>
100073ff:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10007402:	85 c0                	test   eax,eax
10007404:	0f 84 98 02 00 00    	je     100076a2 <read_chunks+0x16b6>
1000740a:	89 c7                	mov    edi,eax
1000740c:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
1000740f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007411:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
10007414:	39 75 bc             	cmp    DWORD PTR [ebp-0x44],esi
10007417:	77 23                	ja     1000743c <read_chunks+0x1450>
10007419:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000741c:	8b 75 b4             	mov    esi,DWORD PTR [ebp-0x4c]
1000741f:	8d 14 30             	lea    edx,[eax+esi*1]
10007422:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10007425:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10007428:	29 f2                	sub    edx,esi
1000742a:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
1000742d:	8b 75 bc             	mov    esi,DWORD PTR [ebp-0x44]
10007430:	c6 04 30 00          	mov    BYTE PTR [eax+esi*1],0x0
10007434:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10007437:	89 43 1c             	mov    DWORD PTR [ebx+0x1c],eax
1000743a:	eb 1f                	jmp    1000745b <read_chunks+0x146f>
1000743c:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
1000743f:	2b 4d c0             	sub    ecx,DWORD PTR [ebp-0x40]
10007442:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10007445:	03 53 04             	add    edx,DWORD PTR [ebx+0x4]
10007448:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000744b:	e8 91 e4 ff ff       	call   100058e1 <read_chunk_bytes2>
10007450:	89 c1                	mov    ecx,eax
10007452:	85 c0                	test   eax,eax
10007454:	74 c3                	je     10007419 <read_chunks+0x142d>
10007456:	e9 48 03 00 00       	jmp    100077a3 <read_chunks+0x17b7>
1000745b:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
1000745e:	89 f0                	mov    eax,esi
10007460:	e8 ac db ff ff       	call   10005011 <check_png_keyword>
10007465:	85 c0                	test   eax,eax
10007467:	0f 85 25 05 00 00    	jne    10007992 <read_chunks+0x19a6>
1000746d:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10007470:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10007473:	83 c9 ff             	or     ecx,0xffffffff
10007476:	31 c0                	xor    eax,eax
10007478:	8b 7d c0             	mov    edi,DWORD PTR [ebp-0x40]
1000747b:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000747d:	89 ca                	mov    edx,ecx
1000747f:	f7 d2                	not    edx
10007481:	8d 52 ff             	lea    edx,[edx-0x1]
10007484:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
10007487:	8b 3b                	mov    edi,DWORD PTR [ebx]
10007489:	83 ff 03             	cmp    edi,0x3
1000748c:	74 26                	je     100074b4 <read_chunks+0x14c8>
1000748e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007491:	f6 40 74 10          	test   BYTE PTR [eax+0x74],0x10
10007495:	74 25                	je     100074bc <read_chunks+0x14d0>
10007497:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
1000749a:	e8 7c e2 ff ff       	call   1000571b <check_png_text>
1000749f:	85 c0                	test   eax,eax
100074a1:	74 19                	je     100074bc <read_chunks+0x14d0>
100074a3:	31 c9                	xor    ecx,ecx
100074a5:	83 ff 02             	cmp    edi,0x2
100074a8:	0f 94 c1             	sete   cl
100074ab:	8d 4c 09 2b          	lea    ecx,[ecx+ecx*1+0x2b]
100074af:	e9 1d 03 00 00       	jmp    100077d1 <read_chunks+0x17e5>
100074b4:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
100074b7:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
100074ba:	eb 06                	jmp    100074c2 <read_chunks+0x14d6>
100074bc:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100074bf:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
100074c2:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100074c5:	01 f0                	add    eax,esi
100074c7:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100074ca:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
100074cd:	01 f0                	add    eax,esi
100074cf:	89 43 18             	mov    DWORD PTR [ebx+0x18],eax
100074d2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100074d5:	80 88 ac 00 00 00 80 	or     BYTE PTR [eax+0xac],0x80
100074dc:	e9 8a 02 00 00       	jmp    1000776b <read_chunks+0x177f>
100074e1:	b9 11 00 00 00       	mov    ecx,0x11
100074e6:	e9 e6 02 00 00       	jmp    100077d1 <read_chunks+0x17e5>
100074eb:	b9 38 00 00 00       	mov    ecx,0x38
100074f0:	e9 dc 02 00 00       	jmp    100077d1 <read_chunks+0x17e5>
100074f5:	6b c6 5c             	imul   eax,esi,0x5c
100074f8:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
100074fb:	03 82 b8 08 00 00    	add    eax,DWORD PTR [edx+0x8b8]
10007501:	52                   	push   edx
10007502:	52                   	push   edx
10007503:	53                   	push   ebx
10007504:	50                   	push   eax
10007505:	e8 fc ff ff ff       	call   10007506 <read_chunks+0x151a>	10007506: R_386_PC32	strcmp
1000750a:	83 c4 10             	add    esp,0x10
1000750d:	85 c0                	test   eax,eax
1000750f:	0f 84 9b 04 00 00    	je     100079b0 <read_chunks+0x19c4>
10007515:	46                   	inc    esi
10007516:	e9 1c f2 ff ff       	jmp    10006737 <read_chunks+0x74b>
1000751b:	80 fa 08             	cmp    dl,0x8
1000751e:	0f 85 96 04 00 00    	jne    100079ba <read_chunks+0x19ce>
10007524:	b9 06 00 00 00       	mov    ecx,0x6
10007529:	e9 3a f2 ff ff       	jmp    10006768 <read_chunks+0x77c>
1000752e:	6b f2 0a             	imul   esi,edx,0xa
10007531:	89 f2                	mov    edx,esi
10007533:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007536:	e8 af dc ff ff       	call   100051ea <increase_cache_usage>
1000753b:	85 c0                	test   eax,eax
1000753d:	0f 85 ff 03 00 00    	jne    10007942 <read_chunks+0x1956>
10007543:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007546:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
10007549:	89 f2                	mov    edx,esi
1000754b:	e8 5c dc ff ff       	call   100051ac <spng__malloc.isra.0>
10007550:	89 43 58             	mov    DWORD PTR [ebx+0x58],eax
10007553:	85 c0                	test   eax,eax
10007555:	75 13                	jne    1000756a <read_chunks+0x157e>
10007557:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000755a:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
1000755d:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10007560:	e8 6e dc ff ff       	call   100051d3 <spng__free.isra.3>
10007565:	e9 38 01 00 00       	jmp    100076a2 <read_chunks+0x16b6>
1000756a:	8b 75 c0             	mov    esi,DWORD PTR [ebp-0x40]
1000756d:	8b 7d b8             	mov    edi,DWORD PTR [ebp-0x48]
10007570:	8d 54 3e 02          	lea    edx,[esi+edi*1+0x2]
10007574:	8a 4b 50             	mov    cl,BYTE PTR [ebx+0x50]
10007577:	80 f9 10             	cmp    cl,0x10
1000757a:	75 6a                	jne    100075e6 <read_chunks+0x15fa>
1000757c:	6b 4b 54 0a          	imul   ecx,DWORD PTR [ebx+0x54],0xa
10007580:	01 d1                	add    ecx,edx
10007582:	39 ca                	cmp    edx,ecx
10007584:	74 38                	je     100075be <read_chunks+0x15d2>
10007586:	66 8b 1a             	mov    bx,WORD PTR [edx]
10007589:	86 fb                	xchg   bl,bh
1000758b:	66 89 18             	mov    WORD PTR [eax],bx
1000758e:	66 8b 5a 02          	mov    bx,WORD PTR [edx+0x2]
10007592:	86 fb                	xchg   bl,bh
10007594:	66 89 58 02          	mov    WORD PTR [eax+0x2],bx
10007598:	66 8b 5a 04          	mov    bx,WORD PTR [edx+0x4]
1000759c:	86 fb                	xchg   bl,bh
1000759e:	66 89 58 04          	mov    WORD PTR [eax+0x4],bx
100075a2:	66 8b 5a 06          	mov    bx,WORD PTR [edx+0x6]
100075a6:	86 fb                	xchg   bl,bh
100075a8:	66 89 58 06          	mov    WORD PTR [eax+0x6],bx
100075ac:	66 8b 5a 08          	mov    bx,WORD PTR [edx+0x8]
100075b0:	86 fb                	xchg   bl,bh
100075b2:	66 89 58 08          	mov    WORD PTR [eax+0x8],bx
100075b6:	83 c2 0a             	add    edx,0xa
100075b9:	83 c0 0a             	add    eax,0xa
100075bc:	eb c4                	jmp    10007582 <read_chunks+0x1596>
100075be:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075c1:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
100075c4:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100075c7:	e8 07 dc ff ff       	call   100051d3 <spng__free.isra.3>
100075cc:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
100075cf:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075d2:	e8 46 dc ff ff       	call   1000521d <decrease_cache_usage>
100075d7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075da:	80 88 ad 00 00 00 10 	or     BYTE PTR [eax+0xad],0x10
100075e1:	e9 85 01 00 00       	jmp    1000776b <read_chunks+0x177f>
100075e6:	80 f9 08             	cmp    cl,0x8
100075e9:	75 d3                	jne    100075be <read_chunks+0x15d2>
100075eb:	6b 4b 54 06          	imul   ecx,DWORD PTR [ebx+0x54],0x6
100075ef:	01 d1                	add    ecx,edx
100075f1:	39 ca                	cmp    edx,ecx
100075f3:	74 c9                	je     100075be <read_chunks+0x15d2>
100075f5:	0f b6 1a             	movzx  ebx,BYTE PTR [edx]
100075f8:	66 89 18             	mov    WORD PTR [eax],bx
100075fb:	0f b6 5a 01          	movzx  ebx,BYTE PTR [edx+0x1]
100075ff:	66 89 58 02          	mov    WORD PTR [eax+0x2],bx
10007603:	0f b6 5a 02          	movzx  ebx,BYTE PTR [edx+0x2]
10007607:	66 89 58 04          	mov    WORD PTR [eax+0x4],bx
1000760b:	0f b6 5a 03          	movzx  ebx,BYTE PTR [edx+0x3]
1000760f:	66 89 58 06          	mov    WORD PTR [eax+0x6],bx
10007613:	66 8b 5a 04          	mov    bx,WORD PTR [edx+0x4]
10007617:	86 fb                	xchg   bl,bh
10007619:	66 89 58 08          	mov    WORD PTR [eax+0x8],bx
1000761d:	83 c2 06             	add    edx,0x6
10007620:	83 c0 0a             	add    eax,0xa
10007623:	eb cc                	jmp    100075f1 <read_chunks+0x1605>
10007625:	80 88 a6 00 00 00 01 	or     BYTE PTR [eax+0xa6],0x1
1000762c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000762f:	80 78 74 00          	cmp    BYTE PTR [eax+0x74],0x0
10007633:	0f 89 32 01 00 00    	jns    1000776b <read_chunks+0x177f>
10007639:	f6 80 aa 00 00 00 01 	test   BYTE PTR [eax+0xaa],0x1
10007640:	0f 85 25 01 00 00    	jne    1000776b <read_chunks+0x177f>
10007646:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
10007649:	8d 56 10             	lea    edx,[esi+0x10]
1000764c:	e8 99 db ff ff       	call   100051ea <increase_cache_usage>
10007651:	85 c0                	test   eax,eax
10007653:	0f 85 e9 02 00 00    	jne    10007942 <read_chunks+0x1956>
10007659:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000765c:	8b 80 d8 08 00 00    	mov    eax,DWORD PTR [eax+0x8d8]
10007662:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10007665:	8d 48 01             	lea    ecx,[eax+0x1]
10007668:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000766b:	89 88 d8 08 00 00    	mov    DWORD PTR [eax+0x8d8],ecx
10007671:	85 c9                	test   ecx,ecx
10007673:	0f 84 15 f1 ff ff    	je     1000678e <read_chunks+0x7a2>
10007679:	83 c8 ff             	or     eax,0xffffffff
1000767c:	31 d2                	xor    edx,edx
1000767e:	f7 f1                	div    ecx
10007680:	83 f8 0f             	cmp    eax,0xf
10007683:	0f 86 05 f1 ff ff    	jbe    1000678e <read_chunks+0x7a2>
10007689:	50                   	push   eax
1000768a:	50                   	push   eax
1000768b:	c1 e1 04             	shl    ecx,0x4
1000768e:	51                   	push   ecx
1000768f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007692:	ff b0 dc 08 00 00    	push   DWORD PTR [eax+0x8dc]
10007698:	ff 50 5c             	call   DWORD PTR [eax+0x5c]
1000769b:	83 c4 10             	add    esp,0x10
1000769e:	85 c0                	test   eax,eax
100076a0:	75 0a                	jne    100076ac <read_chunks+0x16c0>
100076a2:	b9 02 00 00 00       	mov    ecx,0x2
100076a7:	e9 e7 f0 ff ff       	jmp    10006793 <read_chunks+0x7a7>
100076ac:	8b 7d c4             	mov    edi,DWORD PTR [ebp-0x3c]
100076af:	89 87 dc 08 00 00    	mov    DWORD PTR [edi+0x8dc],eax
100076b5:	8b bf d8 08 00 00    	mov    edi,DWORD PTR [edi+0x8d8]
100076bb:	89 7d c0             	mov    DWORD PTR [ebp-0x40],edi
100076be:	8d 9f ff ff ff 0f    	lea    ebx,[edi+0xfffffff]
100076c4:	c1 e3 04             	shl    ebx,0x4
100076c7:	01 c3                	add    ebx,eax
100076c9:	8d 53 04             	lea    edx,[ebx+0x4]
100076cc:	b9 03 00 00 00       	mov    ecx,0x3
100076d1:	31 c0                	xor    eax,eax
100076d3:	89 d7                	mov    edi,edx
100076d5:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100076d7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076da:	c7 80 a0 00 00 00 f7 52 00 10 	mov    DWORD PTR [eax+0xa0],0x100052f7	100076e0: R_386_32	.text
100076e4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100076e7:	89 03                	mov    DWORD PTR [ebx],eax
100076e9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076ec:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100076ef:	83 f8 03             	cmp    eax,0x3
100076f2:	77 1b                	ja     1000770f <read_chunks+0x1723>
100076f4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076f7:	8a 80 a4 00 00 00    	mov    al,BYTE PTR [eax+0xa4]
100076fd:	88 45 c0             	mov    BYTE PTR [ebp-0x40],al
10007700:	83 e0 02             	and    eax,0x2
10007703:	3c 01                	cmp    al,0x1
10007705:	19 c0                	sbb    eax,eax
10007707:	83 c0 02             	add    eax,0x2
1000770a:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000770d:	eb 0c                	jmp    1000771b <read_chunks+0x172f>
1000770f:	83 f8 07             	cmp    eax,0x7
10007712:	76 07                	jbe    1000771b <read_chunks+0x172f>
10007714:	c7 43 0c 08 00 00 00 	mov    DWORD PTR [ebx+0xc],0x8
1000771b:	85 f6                	test   esi,esi
1000771d:	74 42                	je     10007761 <read_chunks+0x1775>
1000771f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007722:	8b 40 58             	mov    eax,DWORD PTR [eax+0x58]
10007725:	89 f2                	mov    edx,esi
10007727:	e8 80 da ff ff       	call   100051ac <spng__malloc.isra.0>
1000772c:	89 c7                	mov    edi,eax
1000772e:	85 c0                	test   eax,eax
10007730:	0f 84 6c ff ff ff    	je     100076a2 <read_chunks+0x16b6>
10007736:	89 f1                	mov    ecx,esi
10007738:	89 c2                	mov    edx,eax
1000773a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000773d:	e8 9f e1 ff ff       	call   100058e1 <read_chunk_bytes2>
10007742:	85 c0                	test   eax,eax
10007744:	74 15                	je     1000775b <read_chunks+0x176f>
10007746:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10007749:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000774c:	8b 40 64             	mov    eax,DWORD PTR [eax+0x64]
1000774f:	89 fa                	mov    edx,edi
10007751:	e8 7d da ff ff       	call   100051d3 <spng__free.isra.3>
10007756:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
10007759:	eb 48                	jmp    100077a3 <read_chunks+0x17b7>
1000775b:	89 73 04             	mov    DWORD PTR [ebx+0x4],esi
1000775e:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
10007761:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007764:	80 88 ae 00 00 00 01 	or     BYTE PTR [eax+0xae],0x1
1000776b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000776e:	8b 50 50             	mov    edx,DWORD PTR [eax+0x50]
10007771:	e8 1e e1 ff ff       	call   10005894 <discard_chunk_bytes>
10007776:	89 c1                	mov    ecx,eax
10007778:	85 c0                	test   eax,eax
1000777a:	75 27                	jne    100077a3 <read_chunks+0x17b7>
1000777c:	e9 40 eb ff ff       	jmp    100062c1 <read_chunks+0x2d5>
10007781:	85 c0                	test   eax,eax
10007783:	0f 84 f0 ea ff ff    	je     10006279 <read_chunks+0x28d>
10007789:	eb 18                	jmp    100077a3 <read_chunks+0x17b7>
1000778b:	83 f8 08             	cmp    eax,0x8
1000778e:	0f 85 fe ea ff ff    	jne    10006292 <read_chunks+0x2a6>
10007794:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007797:	c7 40 70 09 00 00 00 	mov    DWORD PTR [eax+0x70],0x9
1000779e:	e9 ef ea ff ff       	jmp    10006292 <read_chunks+0x2a6>
100077a3:	83 f9 22             	cmp    ecx,0x22
100077a6:	7f 12                	jg     100077ba <read_chunks+0x17ce>
100077a8:	83 f9 15             	cmp    ecx,0x15
100077ab:	7d 24                	jge    100077d1 <read_chunks+0x17e5>
100077ad:	8d 41 f0             	lea    eax,[ecx-0x10]
100077b0:	83 f8 01             	cmp    eax,0x1
100077b3:	76 1c                	jbe    100077d1 <read_chunks+0x17e5>
100077b5:	e9 d9 ef ff ff       	jmp    10006793 <read_chunks+0x7a7>
100077ba:	83 f9 24             	cmp    ecx,0x24
100077bd:	0f 8c d0 ef ff ff    	jl     10006793 <read_chunks+0x7a7>
100077c3:	83 f9 3d             	cmp    ecx,0x3d
100077c6:	7e 09                	jle    100077d1 <read_chunks+0x17e5>
100077c8:	83 f9 40             	cmp    ecx,0x40
100077cb:	0f 85 c2 ef ff ff    	jne    10006793 <read_chunks+0x7a7>
100077d1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077d4:	f6 40 74 10          	test   BYTE PTR [eax+0x74],0x10
100077d8:	0f 85 b5 ef ff ff    	jne    10006793 <read_chunks+0x7a7>
100077de:	89 4d c0             	mov    DWORD PTR [ebp-0x40],ecx
100077e1:	83 c0 40             	add    eax,0x40
100077e4:	e8 ea d1 ff ff       	call   100049d3 <is_critical_chunk>
100077e9:	85 c0                	test   eax,eax
100077eb:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
100077ee:	0f 85 9f ef ff ff    	jne    10006793 <read_chunks+0x7a7>
100077f4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077f7:	8b 50 50             	mov    edx,DWORD PTR [eax+0x50]
100077fa:	e8 95 e0 ff ff       	call   10005894 <discard_chunk_bytes>
100077ff:	89 c1                	mov    ecx,eax
10007801:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007804:	85 c9                	test   ecx,ecx
10007806:	0f 85 8a ef ff ff    	jne    10006796 <read_chunks+0x7aa>
1000780c:	8b 80 a0 00 00 00    	mov    eax,DWORD PTR [eax+0xa0]
10007812:	85 c0                	test   eax,eax
10007814:	74 0b                	je     10007821 <read_chunks+0x1835>
10007816:	83 ec 0c             	sub    esp,0xc
10007819:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000781c:	ff d0                	call   eax
1000781e:	83 c4 10             	add    esp,0x10
10007821:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007824:	8b 80 b0 00 00 00    	mov    eax,DWORD PTR [eax+0xb0]
1000782a:	8b 75 c4             	mov    esi,DWORD PTR [ebp-0x3c]
1000782d:	89 86 ac 00 00 00    	mov    DWORD PTR [esi+0xac],eax
10007833:	80 66 74 df          	and    BYTE PTR [esi+0x74],0xdf
10007837:	c7 86 a0 00 00 00 00 00 00 00 	mov    DWORD PTR [esi+0xa0],0x0
10007841:	e9 4c ea ff ff       	jmp    10006292 <read_chunks+0x2a6>
10007846:	83 f8 03             	cmp    eax,0x3
10007849:	0f 86 52 ea ff ff    	jbe    100062a1 <read_chunks+0x2b5>
1000784f:	e9 ce e7 ff ff       	jmp    10006022 <read_chunks+0x36>
10007854:	b9 50 00 00 00       	mov    ecx,0x50
10007859:	89 c8                	mov    eax,ecx
1000785b:	c3                   	ret    
1000785c:	b9 4c 00 00 00       	mov    ecx,0x4c
10007861:	e9 2d ef ff ff       	jmp    10006793 <read_chunks+0x7a7>
10007866:	b9 14 00 00 00       	mov    ecx,0x14
1000786b:	e9 23 ef ff ff       	jmp    10006793 <read_chunks+0x7a7>
10007870:	b9 16 00 00 00       	mov    ecx,0x16
10007875:	e9 57 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000787a:	b9 22 00 00 00       	mov    ecx,0x22
1000787f:	e9 4d ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007884:	b9 17 00 00 00       	mov    ecx,0x17
10007889:	e9 43 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000788e:	b9 26 00 00 00       	mov    ecx,0x26
10007893:	e9 39 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007898:	b9 19 00 00 00       	mov    ecx,0x19
1000789d:	e9 2f ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078a2:	b9 29 00 00 00       	mov    ecx,0x29
100078a7:	e9 25 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078ac:	b9 1a 00 00 00       	mov    ecx,0x1a
100078b1:	e9 1b ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078b6:	b9 2a 00 00 00       	mov    ecx,0x2a
100078bb:	e9 11 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078c0:	b9 1b 00 00 00       	mov    ecx,0x1b
100078c5:	e9 07 ff ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078ca:	b9 34 00 00 00       	mov    ecx,0x34
100078cf:	e9 fd fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078d4:	b9 35 00 00 00       	mov    ecx,0x35
100078d9:	e9 f3 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078de:	b9 1d 00 00 00       	mov    ecx,0x1d
100078e3:	e9 e9 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078e8:	b9 25 00 00 00       	mov    ecx,0x25
100078ed:	e9 df fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078f2:	b9 36 00 00 00       	mov    ecx,0x36
100078f7:	e9 d5 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100078fc:	b9 1c 00 00 00       	mov    ecx,0x1c
10007901:	e9 cb fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007906:	b9 1e 00 00 00       	mov    ecx,0x1e
1000790b:	e9 c1 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007910:	b9 37 00 00 00       	mov    ecx,0x37
10007915:	e9 b7 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000791a:	b9 20 00 00 00       	mov    ecx,0x20
1000791f:	e9 ad fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007924:	b9 3c 00 00 00       	mov    ecx,0x3c
10007929:	e9 a3 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000792e:	b9 18 00 00 00       	mov    ecx,0x18
10007933:	e9 99 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007938:	b9 28 00 00 00       	mov    ecx,0x28
1000793d:	e9 8f fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007942:	b9 4d 00 00 00       	mov    ecx,0x4d
10007947:	e9 47 ee ff ff       	jmp    10006793 <read_chunks+0x7a7>
1000794c:	b9 02 00 00 00       	mov    ecx,0x2
10007951:	e9 57 fe ff ff       	jmp    100077ad <read_chunks+0x17c1>
10007956:	b9 2d 00 00 00       	mov    ecx,0x2d
1000795b:	e9 71 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007960:	b9 2e 00 00 00       	mov    ecx,0x2e
10007965:	e9 67 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000796a:	b9 50 00 00 00       	mov    ecx,0x50
1000796f:	e9 1f ee ff ff       	jmp    10006793 <read_chunks+0x7a7>
10007974:	b9 30 00 00 00       	mov    ecx,0x30
10007979:	e9 53 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000797e:	b9 31 00 00 00       	mov    ecx,0x31
10007983:	e9 49 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007988:	b9 32 00 00 00       	mov    ecx,0x32
1000798d:	e9 3f fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
10007992:	b9 2c 00 00 00       	mov    ecx,0x2c
10007997:	e9 35 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
1000799c:	b9 10 00 00 00       	mov    ecx,0x10
100079a1:	e9 07 fe ff ff       	jmp    100077ad <read_chunks+0x17c1>
100079a6:	b9 03 00 00 00       	mov    ecx,0x3
100079ab:	e9 fd fd ff ff       	jmp    100077ad <read_chunks+0x17c1>
100079b0:	b9 39 00 00 00       	mov    ecx,0x39
100079b5:	e9 17 fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100079ba:	b9 3a 00 00 00       	mov    ecx,0x3a
100079bf:	e9 0d fe ff ff       	jmp    100077d1 <read_chunks+0x17e5>
100079c4:	89 c8                	mov    eax,ecx
100079c6:	8d 65 f4             	lea    esp,[ebp-0xc]
100079c9:	5b                   	pop    ebx
100079ca:	5e                   	pop    esi
100079cb:	5f                   	pop    edi
100079cc:	5d                   	pop    ebp
100079cd:	c3                   	ret    

100079ce <spng_decode_scanline>:
100079ce:	55                   	push   ebp
100079cf:	57                   	push   edi
100079d0:	56                   	push   esi
100079d1:	53                   	push   ebx
100079d2:	81 ec 8c 00 00 00    	sub    esp,0x8c
100079d8:	8b ac 24 a0 00 00 00 	mov    ebp,DWORD PTR [esp+0xa0]
100079df:	83 bc 24 a4 00 00 00 00 	cmp    DWORD PTR [esp+0xa4],0x0
100079e7:	0f 84 53 0e 00 00    	je     10008840 <spng_decode_scanline+0xe72>
100079ed:	85 ed                	test   ebp,ebp
100079ef:	0f 84 4b 0e 00 00    	je     10008840 <spng_decode_scanline+0xe72>
100079f5:	bb 4b 00 00 00       	mov    ebx,0x4b
100079fa:	83 7d 70 05          	cmp    DWORD PTR [ebp+0x70],0x5
100079fe:	0f 87 4f 0e 00 00    	ja     10008853 <spng_decode_scanline+0xe85>
10007a04:	8b 85 dc 0f 00 00    	mov    eax,DWORD PTR [ebp+0xfdc]
10007a0a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10007a0e:	8b 85 c4 09 00 00    	mov    eax,DWORD PTR [ebp+0x9c4]
10007a14:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10007a18:	8b 95 98 09 00 00    	mov    edx,DWORD PTR [ebp+0x998]
10007a1e:	0f b6 85 f8 00 00 00 	movzx  eax,BYTE PTR [ebp+0xf8]
10007a25:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10007a29:	bb 08 00 00 00       	mov    ebx,0x8
10007a2e:	29 c3                	sub    ebx,eax
10007a30:	b8 01 00 00 00       	mov    eax,0x1
10007a35:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10007a39:	d3 e0                	shl    eax,cl
10007a3b:	48                   	dec    eax
10007a3c:	88 44 24 58          	mov    BYTE PTR [esp+0x58],al
10007a40:	89 5c 24 5c          	mov    DWORD PTR [esp+0x5c],ebx
10007a44:	89 5c 24 60          	mov    DWORD PTR [esp+0x60],ebx
10007a48:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10007a4c:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10007a50:	89 54 24 68          	mov    DWORD PTR [esp+0x68],edx
10007a54:	8b 8d e8 0f 00 00    	mov    ecx,DWORD PTR [ebp+0xfe8]
10007a5a:	8b 45 6c             	mov    eax,DWORD PTR [ebp+0x6c]
10007a5d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10007a61:	89 c8                	mov    eax,ecx
10007a63:	c1 e0 04             	shl    eax,0x4
10007a66:	8d 84 05 e0 08 00 00 	lea    eax,[ebp+eax*1+0x8e0]
10007a6d:	8a 5c 24 2c          	mov    bl,BYTE PTR [esp+0x2c]
10007a71:	88 5c 24 47          	mov    BYTE PTR [esp+0x47],bl
10007a75:	f6 44 24 2c 08       	test   BYTE PTR [esp+0x2c],0x8
10007a7a:	74 08                	je     10007a84 <spng_decode_scanline+0xb6>
10007a7c:	c7 44 24 0c 08 00 00 00 	mov    DWORD PTR [esp+0xc],0x8
10007a84:	c7 44 24 38 08 00 00 00 	mov    DWORD PTR [esp+0x38],0x8
10007a8c:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
10007a91:	74 13                	je     10007aa6 <spng_decode_scanline+0xd8>
10007a93:	31 db                	xor    ebx,ebx
10007a95:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
10007a9a:	0f 95 c3             	setne  bl
10007a9d:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10007aa1:	83 44 24 38 03       	add    DWORD PTR [esp+0x38],0x3
10007aa6:	bb 42 00 00 00       	mov    ebx,0x42
10007aab:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
10007aae:	39 b4 24 a8 00 00 00 	cmp    DWORD PTR [esp+0xa8],esi
10007ab5:	0f 82 98 0d 00 00    	jb     10008853 <spng_decode_scanline+0xe85>
10007abb:	8b 78 0c             	mov    edi,DWORD PTR [eax+0xc]
10007abe:	89 3c 24             	mov    DWORD PTR [esp],edi
10007ac1:	8b 30                	mov    esi,DWORD PTR [eax]
10007ac3:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10007ac7:	8b b5 e0 0f 00 00    	mov    esi,DWORD PTR [ebp+0xfe0]
10007acd:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10007ad0:	48                   	dec    eax
10007ad1:	39 c6                	cmp    esi,eax
10007ad3:	75 23                	jne    10007af8 <spng_decode_scanline+0x12a>
10007ad5:	3b 8d c0 09 00 00    	cmp    ecx,DWORD PTR [ebp+0x9c0]
10007adb:	75 1b                	jne    10007af8 <spng_decode_scanline+0x12a>
10007add:	8d 4f ff             	lea    ecx,[edi-0x1]
10007ae0:	89 e8                	mov    eax,ebp
10007ae2:	e8 ce dc ff ff       	call   100057b5 <read_scanline_bytes>
10007ae7:	89 c3                	mov    ebx,eax
10007ae9:	85 c0                	test   eax,eax
10007aeb:	0f 85 5b 0d 00 00    	jne    1000884c <spng_decode_scanline+0xe7e>
10007af1:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
10007af6:	eb 33                	jmp    10007b2b <spng_decode_scanline+0x15d>
10007af8:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007afb:	89 e8                	mov    eax,ebp
10007afd:	e8 b3 dc ff ff       	call   100057b5 <read_scanline_bytes>
10007b02:	89 c3                	mov    ebx,eax
10007b04:	85 c0                	test   eax,eax
10007b06:	0f 85 40 0d 00 00    	jne    1000884c <spng_decode_scanline+0xe7e>
10007b0c:	8b 85 98 09 00 00    	mov    eax,DWORD PTR [ebp+0x998]
10007b12:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007b15:	8a 44 38 ff          	mov    al,BYTE PTR [eax+edi*1-0x1]
10007b19:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
10007b1d:	3c 04                	cmp    al,0x4
10007b1f:	76 0a                	jbe    10007b2b <spng_decode_scanline+0x15d>
10007b21:	bb 41 00 00 00       	mov    ebx,0x41
10007b26:	e9 21 0d 00 00       	jmp    1000884c <spng_decode_scanline+0xe7e>
10007b2b:	85 f6                	test   esi,esi
10007b2d:	75 16                	jne    10007b45 <spng_decode_scanline+0x177>
10007b2f:	80 bd ec 0f 00 00 01 	cmp    BYTE PTR [ebp+0xfec],0x1
10007b36:	76 0d                	jbe    10007b45 <spng_decode_scanline+0x177>
10007b38:	31 c0                	xor    eax,eax
10007b3a:	8b bd 9c 09 00 00    	mov    edi,DWORD PTR [ebp+0x99c]
10007b40:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007b43:	f3 aa                	rep stos BYTE PTR es:[edi],al
10007b45:	8b 9d 98 09 00 00    	mov    ebx,DWORD PTR [ebp+0x998]
10007b4b:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10007b52:	74 23                	je     10007b77 <spng_decode_scanline+0x1a9>
10007b54:	8b b5 9c 09 00 00    	mov    esi,DWORD PTR [ebp+0x99c]
10007b5a:	85 f6                	test   esi,esi
10007b5c:	0f 94 c2             	sete   dl
10007b5f:	85 db                	test   ebx,ebx
10007b61:	0f 94 c0             	sete   al
10007b64:	08 c2                	or     dl,al
10007b66:	0f 85 db 0c 00 00    	jne    10008847 <spng_decode_scanline+0xe79>
10007b6c:	83 3c 24 00          	cmp    DWORD PTR [esp],0x0
10007b70:	75 24                	jne    10007b96 <spng_decode_scanline+0x1c8>
10007b72:	e9 d0 0c 00 00       	jmp    10008847 <spng_decode_scanline+0xe79>
10007b77:	81 7d 6c 00 02 00 00 	cmp    DWORD PTR [ebp+0x6c],0x200
10007b7e:	74 d4                	je     10007b54 <spng_decode_scanline+0x186>
10007b80:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007b83:	8d 50 ff             	lea    edx,[eax-0x1]
10007b86:	d1 ea                	shr    edx,1
10007b88:	31 c0                	xor    eax,eax
10007b8a:	39 c2                	cmp    edx,eax
10007b8c:	74 c6                	je     10007b54 <spng_decode_scanline+0x186>
10007b8e:	66 c1 04 43 08       	rol    WORD PTR [ebx+eax*2],0x8
10007b93:	40                   	inc    eax
10007b94:	eb f4                	jmp    10007b8a <spng_decode_scanline+0x1bc>
10007b96:	0f b6 85 ec 0f 00 00 	movzx  eax,BYTE PTR [ebp+0xfec]
10007b9d:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
10007ba1:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007ba4:	4f                   	dec    edi
10007ba5:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10007ba9:	85 c0                	test   eax,eax
10007bab:	0f 84 36 01 00 00    	je     10007ce7 <spng_decode_scanline+0x319>
10007bb1:	83 f8 02             	cmp    eax,0x2
10007bb4:	0f 84 af 00 00 00    	je     10007c69 <spng_decode_scanline+0x29b>
10007bba:	8b bd b4 09 00 00    	mov    edi,DWORD PTR [ebp+0x9b4]
10007bc0:	89 3c 24             	mov    DWORD PTR [esp],edi
10007bc3:	83 ff 04             	cmp    edi,0x4
10007bc6:	75 47                	jne    10007c0f <spng_decode_scanline+0x241>
10007bc8:	83 f8 01             	cmp    eax,0x1
10007bcb:	75 10                	jne    10007bdd <spng_decode_scanline+0x20f>
10007bcd:	89 da                	mov    edx,ebx
10007bcf:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007bd3:	e8 8a d0 ff ff       	call   10004c62 <defilter_sub4>
10007bd8:	e9 0a 01 00 00       	jmp    10007ce7 <spng_decode_scanline+0x319>
10007bdd:	83 f8 03             	cmp    eax,0x3
10007be0:	75 12                	jne    10007bf4 <spng_decode_scanline+0x226>
10007be2:	89 f1                	mov    ecx,esi
10007be4:	89 da                	mov    edx,ebx
10007be6:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007bea:	e8 f7 d0 ff ff       	call   10004ce6 <defilter_avg4>
10007bef:	e9 f3 00 00 00       	jmp    10007ce7 <spng_decode_scanline+0x319>
10007bf4:	83 f8 04             	cmp    eax,0x4
10007bf7:	0f 85 24 ff ff ff    	jne    10007b21 <spng_decode_scanline+0x153>
10007bfd:	89 f1                	mov    ecx,esi
10007bff:	89 da                	mov    edx,ebx
10007c01:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007c05:	e8 a5 d1 ff ff       	call   10004daf <defilter_paeth4>
10007c0a:	e9 d8 00 00 00       	jmp    10007ce7 <spng_decode_scanline+0x319>
10007c0f:	83 3c 24 03          	cmp    DWORD PTR [esp],0x3
10007c13:	74 10                	je     10007c25 <spng_decode_scanline+0x257>
10007c15:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007c18:	f7 d8                	neg    eax
10007c1a:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10007c1e:	31 ff                	xor    edi,edi
10007c20:	e9 99 00 00 00       	jmp    10007cbe <spng_decode_scanline+0x2f0>
10007c25:	83 f8 01             	cmp    eax,0x1
10007c28:	75 10                	jne    10007c3a <spng_decode_scanline+0x26c>
10007c2a:	89 da                	mov    edx,ebx
10007c2c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007c30:	e8 6b d0 ff ff       	call   10004ca0 <defilter_sub3>
10007c35:	e9 ad 00 00 00       	jmp    10007ce7 <spng_decode_scanline+0x319>
10007c3a:	83 f8 03             	cmp    eax,0x3
10007c3d:	75 12                	jne    10007c51 <spng_decode_scanline+0x283>
10007c3f:	89 f1                	mov    ecx,esi
10007c41:	89 da                	mov    edx,ebx
10007c43:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007c47:	e8 df d0 ff ff       	call   10004d2b <defilter_avg3>
10007c4c:	e9 96 00 00 00       	jmp    10007ce7 <spng_decode_scanline+0x319>
10007c51:	83 f8 04             	cmp    eax,0x4
10007c54:	0f 85 c7 fe ff ff    	jne    10007b21 <spng_decode_scanline+0x153>
10007c5a:	89 f1                	mov    ecx,esi
10007c5c:	89 da                	mov    edx,ebx
10007c5e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10007c62:	e8 1e d2 ff ff       	call   10004e85 <defilter_paeth3>
10007c67:	eb 7e                	jmp    10007ce7 <spng_decode_scanline+0x319>
10007c69:	31 c0                	xor    eax,eax
10007c6b:	39 44 24 1c          	cmp    DWORD PTR [esp+0x1c],eax
10007c6f:	76 76                	jbe    10007ce7 <spng_decode_scanline+0x319>
10007c71:	8a 14 06             	mov    dl,BYTE PTR [esi+eax*1]
10007c74:	00 14 03             	add    BYTE PTR [ebx+eax*1],dl
10007c77:	40                   	inc    eax
10007c78:	eb f1                	jmp    10007c6b <spng_decode_scanline+0x29d>
10007c7a:	8a 04 3e             	mov    al,BYTE PTR [esi+edi*1]
10007c7d:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
10007c81:	39 3c 24             	cmp    DWORD PTR [esp],edi
10007c84:	77 40                	ja     10007cc6 <spng_decode_scanline+0x2f8>
10007c86:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10007c8a:	0f b6 04 03          	movzx  eax,BYTE PTR [ebx+eax*1]
10007c8e:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10007c92:	0f b6 0c 0e          	movzx  ecx,BYTE PTR [esi+ecx*1]
10007c96:	8a 14 3b             	mov    dl,BYTE PTR [ebx+edi*1]
10007c99:	88 54 24 24          	mov    BYTE PTR [esp+0x24],dl
10007c9d:	80 7c 24 10 03       	cmp    BYTE PTR [esp+0x10],0x3
10007ca2:	74 28                	je     10007ccc <spng_decode_scanline+0x2fe>
10007ca4:	80 7c 24 10 04       	cmp    BYTE PTR [esp+0x10],0x4
10007ca9:	74 2c                	je     10007cd7 <spng_decode_scanline+0x309>
10007cab:	80 7c 24 10 01       	cmp    BYTE PTR [esp+0x10],0x1
10007cb0:	74 2f                	je     10007ce1 <spng_decode_scanline+0x313>
10007cb2:	8a 44 24 24          	mov    al,BYTE PTR [esp+0x24]
10007cb6:	88 04 3b             	mov    BYTE PTR [ebx+edi*1],al
10007cb9:	47                   	inc    edi
10007cba:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10007cbe:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
10007cc2:	77 b6                	ja     10007c7a <spng_decode_scanline+0x2ac>
10007cc4:	eb 21                	jmp    10007ce7 <spng_decode_scanline+0x319>
10007cc6:	31 c9                	xor    ecx,ecx
10007cc8:	31 c0                	xor    eax,eax
10007cca:	eb ca                	jmp    10007c96 <spng_decode_scanline+0x2c8>
10007ccc:	0f b6 54 24 26       	movzx  edx,BYTE PTR [esp+0x26]
10007cd1:	01 d0                	add    eax,edx
10007cd3:	d1 f8                	sar    eax,1
10007cd5:	eb 0a                	jmp    10007ce1 <spng_decode_scanline+0x313>
10007cd7:	0f b6 54 24 26       	movzx  edx,BYTE PTR [esp+0x26]
10007cdc:	e8 06 cd ff ff       	call   100049e7 <paeth>
10007ce1:	00 44 24 24          	add    BYTE PTR [esp+0x24],al
10007ce5:	eb cb                	jmp    10007cb2 <spng_decode_scanline+0x2e4>
10007ce7:	8d 85 d4 0b 00 00    	lea    eax,[ebp+0xbd4]
10007ced:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10007cf1:	8a 44 24 20          	mov    al,BYTE PTR [esp+0x20]
10007cf5:	88 85 ec 0f 00 00    	mov    BYTE PTR [ebp+0xfec],al
10007cfb:	8b 85 98 09 00 00    	mov    eax,DWORD PTR [ebp+0x998]
10007d01:	89 04 24             	mov    DWORD PTR [esp],eax
10007d04:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10007d0b:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10007d0f:	89 c6                	mov    esi,eax
10007d11:	66 c7 44 24 14 00 00 	mov    WORD PTR [esp+0x14],0x0
10007d18:	31 c9                	xor    ecx,ecx
10007d1a:	66 c7 44 24 24 00 00 	mov    WORD PTR [esp+0x24],0x0
10007d21:	31 ff                	xor    edi,edi
10007d23:	c6 44 24 44 00       	mov    BYTE PTR [esp+0x44],0x0
10007d28:	c6 44 24 26 00       	mov    BYTE PTR [esp+0x26],0x0
10007d2d:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
10007d32:	c6 44 24 10 00       	mov    BYTE PTR [esp+0x10],0x0
10007d37:	31 db                	xor    ebx,ebx
10007d39:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007d3d:	0f 84 eb 04 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007d43:	f6 44 24 47 40       	test   BYTE PTR [esp+0x47],0x40
10007d48:	74 20                	je     10007d6a <spng_decode_scanline+0x39c>
10007d4a:	80 7c 24 2c 00       	cmp    BYTE PTR [esp+0x2c],0x0
10007d4f:	0f 88 d9 04 00 00    	js     1000822e <spng_decode_scanline+0x860>
10007d55:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
10007d5c:	8b 34 24             	mov    esi,DWORD PTR [esp]
10007d5f:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10007d63:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007d65:	e9 c4 04 00 00       	jmp    1000822e <spng_decode_scanline+0x860>
10007d6a:	66 f7 44 24 2c 00 01 	test   WORD PTR [esp+0x2c],0x100
10007d71:	0f 84 e8 00 00 00    	je     10007e5f <spng_decode_scanline+0x491>
10007d77:	0f b6 8d f8 00 00 00 	movzx  ecx,BYTE PTR [ebp+0xf8]
10007d7e:	ba 08 00 00 00       	mov    edx,0x8
10007d83:	29 ca                	sub    edx,ecx
10007d85:	b8 01 00 00 00       	mov    eax,0x1
10007d8a:	d3 e0                	shl    eax,cl
10007d8c:	48                   	dec    eax
10007d8d:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
10007d91:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
10007d95:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
10007d99:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
10007d9d:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007da0:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
10007da4:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
10007da9:	74 3c                	je     10007de7 <spng_decode_scanline+0x419>
10007dab:	83 7c 24 04 20       	cmp    DWORD PTR [esp+0x4],0x20
10007db0:	74 14                	je     10007dc6 <spng_decode_scanline+0x3f8>
10007db2:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10007db6:	03 9c 24 a4 00 00 00 	add    ebx,DWORD PTR [esp+0xa4]
10007dbd:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007dc4:	eb 0b                	jmp    10007dd1 <spng_decode_scanline+0x403>
10007dc6:	31 db                	xor    ebx,ebx
10007dc8:	83 f9 10             	cmp    ecx,0x10
10007dcb:	75 67                	jne    10007e34 <spng_decode_scanline+0x466>
10007dcd:	31 c0                	xor    eax,eax
10007dcf:	eb 3d                	jmp    10007e0e <spng_decode_scanline+0x440>
10007dd1:	39 f3                	cmp    ebx,esi
10007dd3:	0f 84 55 04 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007dd9:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007ddd:	e8 b4 ca ff ff       	call   10004896 <get_sample>
10007de2:	88 06                	mov    BYTE PTR [esi],al
10007de4:	46                   	inc    esi
10007de5:	eb ea                	jmp    10007dd1 <spng_decode_scanline+0x403>
10007de7:	31 db                	xor    ebx,ebx
10007de9:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007ded:	0f 84 3b 04 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007df3:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007df7:	e8 9a ca ff ff       	call   10004896 <get_sample>
10007dfc:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007e03:	88 04 5e             	mov    BYTE PTR [esi+ebx*2],al
10007e06:	c6 44 5e 01 ff       	mov    BYTE PTR [esi+ebx*2+0x1],0xff
10007e0b:	43                   	inc    ebx
10007e0c:	eb db                	jmp    10007de9 <spng_decode_scanline+0x41b>
10007e0e:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
10007e12:	0f 84 16 04 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007e18:	8b 34 24             	mov    esi,DWORD PTR [esp]
10007e1b:	66 8b 14 46          	mov    dx,WORD PTR [esi+eax*2]
10007e1f:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007e26:	66 89 14 86          	mov    WORD PTR [esi+eax*4],dx
10007e2a:	66 c7 44 86 02 ff ff 	mov    WORD PTR [esi+eax*4+0x2],0xffff
10007e31:	40                   	inc    eax
10007e32:	eb da                	jmp    10007e0e <spng_decode_scanline+0x440>
10007e34:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
10007e38:	0f 84 f0 03 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007e3e:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10007e42:	e8 4f ca ff ff       	call   10004896 <get_sample>
10007e47:	0f b6 c0             	movzx  eax,al
10007e4a:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
10007e51:	66 89 04 9f          	mov    WORD PTR [edi+ebx*4],ax
10007e55:	66 c7 44 9f 02 ff ff 	mov    WORD PTR [edi+ebx*4+0x2],0xffff
10007e5c:	43                   	inc    ebx
10007e5d:	eb d5                	jmp    10007e34 <spng_decode_scanline+0x466>
10007e5f:	8a 85 f9 00 00 00    	mov    al,BYTE PTR [ebp+0xf9]
10007e65:	3c 02                	cmp    al,0x2
10007e67:	0f 85 8d 00 00 00    	jne    10007efa <spng_decode_scanline+0x52c>
10007e6d:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10007e74:	75 24                	jne    10007e9a <spng_decode_scanline+0x4cc>
10007e76:	6b c3 06             	imul   eax,ebx,0x6
10007e79:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10007e7c:	66 8b 3c 07          	mov    di,WORD PTR [edi+eax*1]
10007e80:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007e83:	66 8b 4c 01 02       	mov    cx,WORD PTR [ecx+eax*1+0x2]
10007e88:	66 89 4c 24 24       	mov    WORD PTR [esp+0x24],cx
10007e8d:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10007e90:	66 8b 4c 01 04       	mov    cx,WORD PTR [ecx+eax*1+0x4]
10007e95:	e9 cd 02 00 00       	jmp    10008167 <spng_decode_scanline+0x799>
10007e9a:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10007e9f:	75 31                	jne    10007ed2 <spng_decode_scanline+0x504>
10007ea1:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007ea4:	6b 5c 24 08 03       	imul   ebx,DWORD PTR [esp+0x8],0x3
10007ea9:	01 c3                	add    ebx,eax
10007eab:	8b 8c 24 a4 00 00 00 	mov    ecx,DWORD PTR [esp+0xa4]
10007eb2:	39 c3                	cmp    ebx,eax
10007eb4:	0f 84 74 03 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007eba:	66 8b 10             	mov    dx,WORD PTR [eax]
10007ebd:	66 89 11             	mov    WORD PTR [ecx],dx
10007ec0:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
10007ec3:	88 51 02             	mov    BYTE PTR [ecx+0x2],dl
10007ec6:	c6 41 03 ff          	mov    BYTE PTR [ecx+0x3],0xff
10007eca:	83 c1 04             	add    ecx,0x4
10007ecd:	83 c0 03             	add    eax,0x3
10007ed0:	eb e0                	jmp    10007eb2 <spng_decode_scanline+0x4e4>
10007ed2:	8d 04 5b             	lea    eax,[ebx+ebx*2]
10007ed5:	8b 14 24             	mov    edx,DWORD PTR [esp]
10007ed8:	8a 14 02             	mov    dl,BYTE PTR [edx+eax*1]
10007edb:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10007edf:	8b 14 24             	mov    edx,DWORD PTR [esp]
10007ee2:	8a 54 02 01          	mov    dl,BYTE PTR [edx+eax*1+0x1]
10007ee6:	88 54 24 20          	mov    BYTE PTR [esp+0x20],dl
10007eea:	8b 14 24             	mov    edx,DWORD PTR [esp]
10007eed:	8a 44 02 02          	mov    al,BYTE PTR [edx+eax*1+0x2]
10007ef1:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
10007ef5:	e9 82 02 00 00       	jmp    1000817c <spng_decode_scanline+0x7ae>
10007efa:	3c 03                	cmp    al,0x3
10007efc:	0f 85 4e 01 00 00    	jne    10008050 <spng_decode_scanline+0x682>
10007f02:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10007f06:	83 e0 05             	and    eax,0x5
10007f09:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10007f0d:	80 bd f8 00 00 00 08 	cmp    BYTE PTR [ebp+0xf8],0x8
10007f14:	0f 85 9a 00 00 00    	jne    10007fb4 <spng_decode_scanline+0x5e6>
10007f1a:	85 c0                	test   eax,eax
10007f1c:	0f 84 8a 00 00 00    	je     10007fac <spng_decode_scanline+0x5de>
10007f22:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10007f27:	75 3e                	jne    10007f67 <spng_decode_scanline+0x599>
10007f29:	31 d2                	xor    edx,edx
10007f2b:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10007f2f:	0f 84 f9 02 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007f35:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007f38:	0f b6 04 10          	movzx  eax,BYTE PTR [eax+edx*1]
10007f3c:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10007f40:	8d 0c 87             	lea    ecx,[edi+eax*4]
10007f43:	8a 01                	mov    al,BYTE PTR [ecx]
10007f45:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10007f4c:	88 04 96             	mov    BYTE PTR [esi+edx*4],al
10007f4f:	8a 41 01             	mov    al,BYTE PTR [ecx+0x1]
10007f52:	88 44 96 01          	mov    BYTE PTR [esi+edx*4+0x1],al
10007f56:	8a 41 02             	mov    al,BYTE PTR [ecx+0x2]
10007f59:	88 44 96 02          	mov    BYTE PTR [esi+edx*4+0x2],al
10007f5d:	8a 41 03             	mov    al,BYTE PTR [ecx+0x3]
10007f60:	88 44 96 03          	mov    BYTE PTR [esi+edx*4+0x3],al
10007f64:	42                   	inc    edx
10007f65:	eb c4                	jmp    10007f2b <spng_decode_scanline+0x55d>
10007f67:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
10007f6c:	0f 85 bc 02 00 00    	jne    1000822e <spng_decode_scanline+0x860>
10007f72:	8b 14 24             	mov    edx,DWORD PTR [esp]
10007f75:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10007f79:	01 d3                	add    ebx,edx
10007f7b:	89 df                	mov    edi,ebx
10007f7d:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10007f84:	39 d7                	cmp    edi,edx
10007f86:	0f 84 a2 02 00 00    	je     1000822e <spng_decode_scanline+0x860>
10007f8c:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
10007f8f:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10007f93:	8d 0c 8e             	lea    ecx,[esi+ecx*4]
10007f96:	8a 19                	mov    bl,BYTE PTR [ecx]
10007f98:	88 18                	mov    BYTE PTR [eax],bl
10007f9a:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
10007f9d:	88 58 01             	mov    BYTE PTR [eax+0x1],bl
10007fa0:	8a 49 02             	mov    cl,BYTE PTR [ecx+0x2]
10007fa3:	88 48 02             	mov    BYTE PTR [eax+0x2],cl
10007fa6:	42                   	inc    edx
10007fa7:	83 c0 03             	add    eax,0x3
10007faa:	eb d8                	jmp    10007f84 <spng_decode_scanline+0x5b6>
10007fac:	8b 04 24             	mov    eax,DWORD PTR [esp]
10007faf:	8a 04 18             	mov    al,BYTE PTR [eax+ebx*1]
10007fb2:	eb 45                	jmp    10007ff9 <spng_decode_scanline+0x62b>
10007fb4:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10007fb8:	8d 44 24 58          	lea    eax,[esp+0x58]
10007fbc:	e8 d5 c8 ff ff       	call   10004896 <get_sample>
10007fc1:	83 7c 24 48 00       	cmp    DWORD PTR [esp+0x48],0x0
10007fc6:	74 31                	je     10007ff9 <spng_decode_scanline+0x62b>
10007fc8:	0f b6 c0             	movzx  eax,al
10007fcb:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10007fcf:	8d 04 81             	lea    eax,[ecx+eax*4]
10007fd2:	8a 10                	mov    dl,BYTE PTR [eax]
10007fd4:	88 16                	mov    BYTE PTR [esi],dl
10007fd6:	8a 50 01             	mov    dl,BYTE PTR [eax+0x1]
10007fd9:	88 56 01             	mov    BYTE PTR [esi+0x1],dl
10007fdc:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
10007fdf:	88 56 02             	mov    BYTE PTR [esi+0x2],dl
10007fe2:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
10007fe7:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10007feb:	0f 85 33 02 00 00    	jne    10008224 <spng_decode_scanline+0x856>
10007ff1:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
10007ff4:	e9 e1 01 00 00       	jmp    100081da <spng_decode_scanline+0x80c>
10007ff9:	0f b6 c0             	movzx  eax,al
10007ffc:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10008000:	8d 04 87             	lea    eax,[edi+eax*4]
10008003:	0f b6 38             	movzx  edi,BYTE PTR [eax]
10008006:	0f b6 48 01          	movzx  ecx,BYTE PTR [eax+0x1]
1000800a:	8a 50 02             	mov    dl,BYTE PTR [eax+0x2]
1000800d:	88 54 24 14          	mov    BYTE PTR [esp+0x14],dl
10008011:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
10008015:	89 fa                	mov    edx,edi
10008017:	c1 e2 08             	shl    edx,0x8
1000801a:	66 89 54 24 24       	mov    WORD PTR [esp+0x24],dx
1000801f:	89 fa                	mov    edx,edi
10008021:	0f b6 fa             	movzx  edi,dl
10008024:	0b 7c 24 24          	or     edi,DWORD PTR [esp+0x24]
10008028:	89 ca                	mov    edx,ecx
1000802a:	c1 e2 08             	shl    edx,0x8
1000802d:	09 d1                	or     ecx,edx
1000802f:	66 89 4c 24 24       	mov    WORD PTR [esp+0x24],cx
10008034:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10008038:	c1 e1 08             	shl    ecx,0x8
1000803b:	89 ca                	mov    edx,ecx
1000803d:	0f b6 4c 24 14       	movzx  ecx,BYTE PTR [esp+0x14]
10008042:	09 d1                	or     ecx,edx
10008044:	89 c2                	mov    edx,eax
10008046:	c1 e2 08             	shl    edx,0x8
10008049:	09 d0                	or     eax,edx
1000804b:	e9 b8 01 00 00       	jmp    10008208 <spng_decode_scanline+0x83a>
10008050:	3c 06                	cmp    al,0x6
10008052:	75 5e                	jne    100080b2 <spng_decode_scanline+0x6e4>
10008054:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008057:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
1000805e:	75 25                	jne    10008085 <spng_decode_scanline+0x6b7>
10008060:	66 8b 3c d8          	mov    di,WORD PTR [eax+ebx*8]
10008064:	66 8b 44 d8 02       	mov    ax,WORD PTR [eax+ebx*8+0x2]
10008069:	66 89 44 24 24       	mov    WORD PTR [esp+0x24],ax
1000806e:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008071:	66 8b 4c d8 04       	mov    cx,WORD PTR [eax+ebx*8+0x4]
10008076:	66 8b 44 d8 06       	mov    ax,WORD PTR [eax+ebx*8+0x6]
1000807b:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
10008080:	e9 fc 00 00 00       	jmp    10008181 <spng_decode_scanline+0x7b3>
10008085:	8a 04 98             	mov    al,BYTE PTR [eax+ebx*4]
10008088:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
1000808c:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000808f:	8a 44 98 01          	mov    al,BYTE PTR [eax+ebx*4+0x1]
10008093:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
10008097:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000809a:	8a 44 98 02          	mov    al,BYTE PTR [eax+ebx*4+0x2]
1000809e:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
100080a2:	8b 04 24             	mov    eax,DWORD PTR [esp]
100080a5:	8a 44 98 03          	mov    al,BYTE PTR [eax+ebx*4+0x3]
100080a9:	88 44 24 44          	mov    BYTE PTR [esp+0x44],al
100080ad:	e9 cf 00 00 00       	jmp    10008181 <spng_decode_scanline+0x7b3>
100080b2:	84 c0                	test   al,al
100080b4:	75 63                	jne    10008119 <spng_decode_scanline+0x74b>
100080b6:	8a 44 24 47          	mov    al,BYTE PTR [esp+0x47]
100080ba:	83 e0 01             	and    eax,0x1
100080bd:	88 44 24 48          	mov    BYTE PTR [esp+0x48],al
100080c1:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
100080c8:	75 22                	jne    100080ec <spng_decode_scanline+0x71e>
100080ca:	8b 04 24             	mov    eax,DWORD PTR [esp]
100080cd:	66 8b 3c 58          	mov    di,WORD PTR [eax+ebx*2]
100080d1:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
100080d6:	0f 84 84 00 00 00    	je     10008160 <spng_decode_scanline+0x792>
100080dc:	31 c0                	xor    eax,eax
100080de:	66 39 bd 9c 07 00 00 	cmp    WORD PTR [ebp+0x79c],di
100080e5:	0f 95 c0             	setne  al
100080e8:	f7 d8                	neg    eax
100080ea:	eb 46                	jmp    10008132 <spng_decode_scanline+0x764>
100080ec:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
100080f0:	8d 44 24 58          	lea    eax,[esp+0x58]
100080f4:	e8 9d c7 ff ff       	call   10004896 <get_sample>
100080f9:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
100080fd:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10008102:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10008106:	74 68                	je     10008170 <spng_decode_scanline+0x7a2>
10008108:	0f b6 c0             	movzx  eax,al
1000810b:	66 39 85 9c 07 00 00 	cmp    WORD PTR [ebp+0x79c],ax
10008112:	0f 95 c0             	setne  al
10008115:	f7 d8                	neg    eax
10008117:	eb 35                	jmp    1000814e <spng_decode_scanline+0x780>
10008119:	3c 04                	cmp    al,0x4
1000811b:	75 64                	jne    10008181 <spng_decode_scanline+0x7b3>
1000811d:	8b 04 24             	mov    eax,DWORD PTR [esp]
10008120:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
10008127:	75 17                	jne    10008140 <spng_decode_scanline+0x772>
10008129:	66 8b 3c 98          	mov    di,WORD PTR [eax+ebx*4]
1000812d:	66 8b 44 98 02       	mov    ax,WORD PTR [eax+ebx*4+0x2]
10008132:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
10008137:	89 f9                	mov    ecx,edi
10008139:	66 89 7c 24 24       	mov    WORD PTR [esp+0x24],di
1000813e:	eb 41                	jmp    10008181 <spng_decode_scanline+0x7b3>
10008140:	8a 04 58             	mov    al,BYTE PTR [eax+ebx*2]
10008143:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
10008147:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000814a:	8a 44 58 01          	mov    al,BYTE PTR [eax+ebx*2+0x1]
1000814e:	88 44 24 44          	mov    BYTE PTR [esp+0x44],al
10008152:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
10008156:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
1000815a:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
1000815e:	eb 21                	jmp    10008181 <spng_decode_scanline+0x7b3>
10008160:	89 f9                	mov    ecx,edi
10008162:	66 89 7c 24 24       	mov    WORD PTR [esp+0x24],di
10008167:	66 c7 44 24 14 ff ff 	mov    WORD PTR [esp+0x14],0xffff
1000816e:	eb 11                	jmp    10008181 <spng_decode_scanline+0x7b3>
10008170:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
10008174:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
10008178:	88 44 24 20          	mov    BYTE PTR [esp+0x20],al
1000817c:	c6 44 24 44 ff       	mov    BYTE PTR [esp+0x44],0xff
10008181:	f6 44 24 04 05       	test   BYTE PTR [esp+0x4],0x5
10008186:	74 57                	je     100081df <spng_decode_scanline+0x811>
10008188:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
1000818f:	75 2a                	jne    100081bb <spng_decode_scanline+0x7ed>
10008191:	89 f8                	mov    eax,edi
10008193:	0f b6 c4             	movzx  eax,ah
10008196:	66 89 44 24 10       	mov    WORD PTR [esp+0x10],ax
1000819b:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000819f:	0f b6 c4             	movzx  eax,ah
100081a2:	66 89 44 24 20       	mov    WORD PTR [esp+0x20],ax
100081a7:	0f b6 c5             	movzx  eax,ch
100081aa:	66 89 44 24 26       	mov    WORD PTR [esp+0x26],ax
100081af:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100081b3:	0f b6 c4             	movzx  eax,ah
100081b6:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
100081bb:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
100081bf:	88 06                	mov    BYTE PTR [esi],al
100081c1:	8a 44 24 20          	mov    al,BYTE PTR [esp+0x20]
100081c5:	88 46 01             	mov    BYTE PTR [esi+0x1],al
100081c8:	8a 44 24 26          	mov    al,BYTE PTR [esp+0x26]
100081cc:	88 46 02             	mov    BYTE PTR [esi+0x2],al
100081cf:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
100081d4:	75 4e                	jne    10008224 <spng_decode_scanline+0x856>
100081d6:	8a 44 24 44          	mov    al,BYTE PTR [esp+0x44]
100081da:	88 46 03             	mov    BYTE PTR [esi+0x3],al
100081dd:	eb 45                	jmp    10008224 <spng_decode_scanline+0x856>
100081df:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
100081e4:	75 3e                	jne    10008224 <spng_decode_scanline+0x856>
100081e6:	80 bd f8 00 00 00 10 	cmp    BYTE PTR [ebp+0xf8],0x10
100081ed:	74 1e                	je     1000820d <spng_decode_scanline+0x83f>
100081ef:	0f b6 7c 24 10       	movzx  edi,BYTE PTR [esp+0x10]
100081f4:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
100081f9:	66 89 44 24 24       	mov    WORD PTR [esp+0x24],ax
100081fe:	0f b6 4c 24 26       	movzx  ecx,BYTE PTR [esp+0x26]
10008203:	0f b6 44 24 44       	movzx  eax,BYTE PTR [esp+0x44]
10008208:	66 89 44 24 14       	mov    WORD PTR [esp+0x14],ax
1000820d:	66 89 3e             	mov    WORD PTR [esi],di
10008210:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10008214:	66 89 46 02          	mov    WORD PTR [esi+0x2],ax
10008218:	66 89 4e 04          	mov    WORD PTR [esi+0x4],cx
1000821c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10008220:	66 89 46 06          	mov    WORD PTR [esi+0x6],ax
10008224:	43                   	inc    ebx
10008225:	03 74 24 38          	add    esi,DWORD PTR [esp+0x38]
10008229:	e9 0b fb ff ff       	jmp    10007d39 <spng_decode_scanline+0x36b>
1000822e:	f6 44 24 2c 01       	test   BYTE PTR [esp+0x2c],0x1
10008233:	0f 84 e4 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
10008239:	8d b5 cc 0b 00 00    	lea    esi,[ebp+0xbcc]
1000823f:	8b 9d b4 09 00 00    	mov    ebx,DWORD PTR [ebp+0x9b4]
10008245:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
1000824a:	75 3e                	jne    1000828a <spng_decode_scanline+0x8bc>
1000824c:	31 ff                	xor    edi,edi
1000824e:	80 bd f9 00 00 00 00 	cmp    BYTE PTR [ebp+0xf9],0x0
10008255:	0f 84 c2 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
1000825b:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
1000825f:	0f 84 b8 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
10008265:	50                   	push   eax
10008266:	53                   	push   ebx
10008267:	56                   	push   esi
10008268:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000826c:	e8 fc ff ff ff       	call   1000826d <spng_decode_scanline+0x89f>	1000826d: R_386_PC32	memcmp
10008271:	83 c4 10             	add    esp,0x10
10008274:	85 c0                	test   eax,eax
10008276:	75 0c                	jne    10008284 <spng_decode_scanline+0x8b6>
10008278:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
1000827f:	c6 44 b8 03 00       	mov    BYTE PTR [eax+edi*4+0x3],0x0
10008284:	47                   	inc    edi
10008285:	01 1c 24             	add    DWORD PTR [esp],ebx
10008288:	eb d1                	jmp    1000825b <spng_decode_scanline+0x88d>
1000828a:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
1000828f:	75 4a                	jne    100082db <spng_decode_scanline+0x90d>
10008291:	80 bd f9 00 00 00 00 	cmp    BYTE PTR [ebp+0xf9],0x0
10008298:	0f 84 7f 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
1000829e:	31 ff                	xor    edi,edi
100082a0:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100082a7:	8d 50 06             	lea    edx,[eax+0x6]
100082aa:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
100082ae:	0f 84 69 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
100082b4:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100082b8:	51                   	push   ecx
100082b9:	53                   	push   ebx
100082ba:	56                   	push   esi
100082bb:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100082bf:	e8 fc ff ff ff       	call   100082c0 <spng_decode_scanline+0x8f2>	100082c0: R_386_PC32	memcmp
100082c4:	83 c4 10             	add    esp,0x10
100082c7:	85 c0                	test   eax,eax
100082c9:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100082cd:	75 06                	jne    100082d5 <spng_decode_scanline+0x907>
100082cf:	66 c7 04 fa 00 00    	mov    WORD PTR [edx+edi*8],0x0
100082d5:	47                   	inc    edi
100082d6:	01 1c 24             	add    DWORD PTR [esp],ebx
100082d9:	eb cf                	jmp    100082aa <spng_decode_scanline+0x8dc>
100082db:	0f b6 8d f8 00 00 00 	movzx  ecx,BYTE PTR [ebp+0xf8]
100082e2:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
100082e7:	0f 85 94 00 00 00    	jne    10008381 <spng_decode_scanline+0x9b3>
100082ed:	83 f9 10             	cmp    ecx,0x10
100082f0:	75 3b                	jne    1000832d <spng_decode_scanline+0x95f>
100082f2:	31 ff                	xor    edi,edi
100082f4:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100082fb:	8d 50 01             	lea    edx,[eax+0x1]
100082fe:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
10008302:	0f 84 15 01 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
10008308:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
1000830c:	52                   	push   edx
1000830d:	53                   	push   ebx
1000830e:	56                   	push   esi
1000830f:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10008313:	e8 fc ff ff ff       	call   10008314 <spng_decode_scanline+0x946>	10008314: R_386_PC32	memcmp
10008318:	83 c4 10             	add    esp,0x10
1000831b:	85 c0                	test   eax,eax
1000831d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10008321:	75 04                	jne    10008327 <spng_decode_scanline+0x959>
10008323:	c6 04 7a 00          	mov    BYTE PTR [edx+edi*2],0x0
10008327:	47                   	inc    edi
10008328:	01 1c 24             	add    DWORD PTR [esp],ebx
1000832b:	eb d1                	jmp    100082fe <spng_decode_scanline+0x930>
1000832d:	ba 08 00 00 00       	mov    edx,0x8
10008332:	29 ca                	sub    edx,ecx
10008334:	b8 01 00 00 00       	mov    eax,0x1
10008339:	d3 e0                	shl    eax,cl
1000833b:	48                   	dec    eax
1000833c:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
10008340:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
10008344:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
10008348:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
1000834c:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000834f:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
10008353:	31 f6                	xor    esi,esi
10008355:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10008359:	0f 84 be 00 00 00    	je     1000841d <spng_decode_scanline+0xa4f>
1000835f:	8a 9d cc 0b 00 00    	mov    bl,BYTE PTR [ebp+0xbcc]
10008365:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10008369:	e8 28 c5 ff ff       	call   10004896 <get_sample>
1000836e:	38 c3                	cmp    bl,al
10008370:	75 0c                	jne    1000837e <spng_decode_scanline+0x9b0>
10008372:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008379:	c6 44 70 01 00       	mov    BYTE PTR [eax+esi*2+0x1],0x0
1000837e:	46                   	inc    esi
1000837f:	eb d4                	jmp    10008355 <spng_decode_scanline+0x987>
10008381:	83 7c 24 04 20       	cmp    DWORD PTR [esp+0x4],0x20
10008386:	0f 85 91 00 00 00    	jne    1000841d <spng_decode_scanline+0xa4f>
1000838c:	83 f9 10             	cmp    ecx,0x10
1000838f:	75 3a                	jne    100083cb <spng_decode_scanline+0x9fd>
10008391:	31 ff                	xor    edi,edi
10008393:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
1000839a:	8d 50 02             	lea    edx,[eax+0x2]
1000839d:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
100083a1:	74 7a                	je     1000841d <spng_decode_scanline+0xa4f>
100083a3:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100083a7:	50                   	push   eax
100083a8:	6a 02                	push   0x2
100083aa:	56                   	push   esi
100083ab:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100083af:	e8 fc ff ff ff       	call   100083b0 <spng_decode_scanline+0x9e2>	100083b0: R_386_PC32	memcmp
100083b4:	83 c4 10             	add    esp,0x10
100083b7:	85 c0                	test   eax,eax
100083b9:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100083bd:	75 06                	jne    100083c5 <spng_decode_scanline+0x9f7>
100083bf:	66 c7 04 ba 00 00    	mov    WORD PTR [edx+edi*4],0x0
100083c5:	47                   	inc    edi
100083c6:	01 1c 24             	add    DWORD PTR [esp],ebx
100083c9:	eb d2                	jmp    1000839d <spng_decode_scanline+0x9cf>
100083cb:	ba 08 00 00 00       	mov    edx,0x8
100083d0:	29 ca                	sub    edx,ecx
100083d2:	b8 01 00 00 00       	mov    eax,0x1
100083d7:	d3 e0                	shl    eax,cl
100083d9:	48                   	dec    eax
100083da:	88 44 24 6c          	mov    BYTE PTR [esp+0x6c],al
100083de:	89 54 24 70          	mov    DWORD PTR [esp+0x70],edx
100083e2:	89 54 24 74          	mov    DWORD PTR [esp+0x74],edx
100083e6:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100083ea:	8b 04 24             	mov    eax,DWORD PTR [esp]
100083ed:	89 44 24 7c          	mov    DWORD PTR [esp+0x7c],eax
100083f1:	31 f6                	xor    esi,esi
100083f3:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
100083f7:	74 24                	je     1000841d <spng_decode_scanline+0xa4f>
100083f9:	8a 9d cc 0b 00 00    	mov    bl,BYTE PTR [ebp+0xbcc]
100083ff:	8d 44 24 6c          	lea    eax,[esp+0x6c]
10008403:	e8 8e c4 ff ff       	call   10004896 <get_sample>
10008408:	38 c3                	cmp    bl,al
1000840a:	75 0e                	jne    1000841a <spng_decode_scanline+0xa4c>
1000840c:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008413:	66 c7 44 b0 02 00 00 	mov    WORD PTR [eax+esi*4+0x2],0x0
1000841a:	46                   	inc    esi
1000841b:	eb d6                	jmp    100083f3 <spng_decode_scanline+0xa25>
1000841d:	f6 44 24 2c 10       	test   BYTE PTR [esp+0x2c],0x10
10008422:	0f 84 bb 02 00 00    	je     100086e3 <spng_decode_scanline+0xd15>
10008428:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
1000842d:	0f 85 c7 00 00 00    	jne    100084fa <spng_decode_scanline+0xb2c>
10008433:	31 f6                	xor    esi,esi
10008435:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10008439:	0f 84 a4 02 00 00    	je     100086e3 <spng_decode_scanline+0xd15>
1000843f:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008446:	8b 1c b0             	mov    ebx,DWORD PTR [eax+esi*4]
10008449:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
10008450:	0f b6 c3             	movzx  eax,bl
10008453:	83 ec 0c             	sub    esp,0xc
10008456:	6a 08                	push   0x8
10008458:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000845c:	e8 ea c5 ff ff       	call   10004a4b <sample_to_target>
10008461:	88 44 24 40          	mov    BYTE PTR [esp+0x40],al
10008465:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
1000846c:	0f b6 c7             	movzx  eax,bh
1000846f:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
10008476:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000847a:	e8 cc c5 ff ff       	call   10004a4b <sample_to_target>
1000847f:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10008483:	88 c5                	mov    ch,al
10008485:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10008489:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
10008490:	89 d8                	mov    eax,ebx
10008492:	c1 e8 10             	shr    eax,0x10
10008495:	0f b6 c0             	movzx  eax,al
10008498:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000849f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100084a3:	e8 a3 c5 ff ff       	call   10004a4b <sample_to_target>
100084a8:	0f b6 f8             	movzx  edi,al
100084ab:	89 f8                	mov    eax,edi
100084ad:	c1 e0 10             	shl    eax,0x10
100084b0:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100084b4:	81 e7 ff ff 00 ff    	and    edi,0xff00ffff
100084ba:	09 c7                	or     edi,eax
100084bc:	0f b6 8d d8 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd8]
100084c3:	89 d8                	mov    eax,ebx
100084c5:	c1 e8 18             	shr    eax,0x18
100084c8:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
100084cf:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100084d3:	e8 73 c5 ff ff       	call   10004a4b <sample_to_target>
100084d8:	83 c4 10             	add    esp,0x10
100084db:	c1 e0 18             	shl    eax,0x18
100084de:	81 e7 ff ff ff 00    	and    edi,0xffffff
100084e4:	09 c7                	or     edi,eax
100084e6:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100084ea:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100084f1:	89 3c b0             	mov    DWORD PTR [eax+esi*4],edi
100084f4:	46                   	inc    esi
100084f5:	e9 3b ff ff ff       	jmp    10008435 <spng_decode_scanline+0xa67>
100084fa:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
100084ff:	0f 85 c5 00 00 00    	jne    100085ca <spng_decode_scanline+0xbfc>
10008505:	31 db                	xor    ebx,ebx
10008507:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
1000850b:	0f 84 d2 01 00 00    	je     100086e3 <spng_decode_scanline+0xd15>
10008511:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
10008518:	8b 3c d8             	mov    edi,DWORD PTR [eax+ebx*8]
1000851b:	8b 74 d8 04          	mov    esi,DWORD PTR [eax+ebx*8+0x4]
1000851f:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
10008526:	0f b7 c7             	movzx  eax,di
10008529:	83 ec 0c             	sub    esp,0xc
1000852c:	6a 10                	push   0x10
1000852e:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10008532:	e8 14 c5 ff ff       	call   10004a4b <sample_to_target>
10008537:	66 89 44 24 4c       	mov    WORD PTR [esp+0x4c],ax
1000853c:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
10008543:	89 f8                	mov    eax,edi
10008545:	c1 e8 10             	shr    eax,0x10
10008548:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
1000854f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10008553:	e8 f3 c4 ff ff       	call   10004a4b <sample_to_target>
10008558:	c1 e0 10             	shl    eax,0x10
1000855b:	0f b7 54 24 4c       	movzx  edx,WORD PTR [esp+0x4c]
10008560:	09 c2                	or     edx,eax
10008562:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
10008566:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
1000856d:	0f b7 c6             	movzx  eax,si
10008570:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
10008577:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000857b:	e8 cb c4 ff ff       	call   10004a4b <sample_to_target>
10008580:	66 89 44 24 50       	mov    WORD PTR [esp+0x50],ax
10008585:	0f b6 8d d8 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd8]
1000858c:	89 f0                	mov    eax,esi
1000858e:	c1 e8 10             	shr    eax,0x10
10008591:	c7 04 24 10 00 00 00 	mov    DWORD PTR [esp],0x10
10008598:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000859c:	e8 aa c4 ff ff       	call   10004a4b <sample_to_target>
100085a1:	83 c4 10             	add    esp,0x10
100085a4:	c1 e0 10             	shl    eax,0x10
100085a7:	0f b7 54 24 40       	movzx  edx,WORD PTR [esp+0x40]
100085ac:	09 c2                	or     edx,eax
100085ae:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
100085b2:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100085b9:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100085bd:	89 34 d8             	mov    DWORD PTR [eax+ebx*8],esi
100085c0:	89 54 d8 04          	mov    DWORD PTR [eax+ebx*8+0x4],edx
100085c4:	43                   	inc    ebx
100085c5:	e9 3d ff ff ff       	jmp    10008507 <spng_decode_scanline+0xb39>
100085ca:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
100085cf:	0f 85 92 00 00 00    	jne    10008667 <spng_decode_scanline+0xc99>
100085d5:	6b 7c 24 08 03       	imul   edi,DWORD PTR [esp+0x8],0x3
100085da:	03 bc 24 a4 00 00 00 	add    edi,DWORD PTR [esp+0xa4]
100085e1:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
100085e8:	39 f7                	cmp    edi,esi
100085ea:	0f 84 f3 00 00 00    	je     100086e3 <spng_decode_scanline+0xd15>
100085f0:	66 8b 06             	mov    ax,WORD PTR [esi]
100085f3:	66 89 44 24 6c       	mov    WORD PTR [esp+0x6c],ax
100085f8:	8a 5e 02             	mov    bl,BYTE PTR [esi+0x2]
100085fb:	0f b6 8d d5 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd5]
10008602:	0f b6 c0             	movzx  eax,al
10008605:	83 ec 0c             	sub    esp,0xc
10008608:	6a 08                	push   0x8
1000860a:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000860e:	e8 38 c4 ff ff       	call   10004a4b <sample_to_target>
10008613:	88 44 24 7c          	mov    BYTE PTR [esp+0x7c],al
10008617:	0f b6 8d d6 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd6]
1000861e:	0f b6 44 24 7d       	movzx  eax,BYTE PTR [esp+0x7d]
10008623:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000862a:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000862e:	e8 18 c4 ff ff       	call   10004a4b <sample_to_target>
10008633:	88 44 24 7d          	mov    BYTE PTR [esp+0x7d],al
10008637:	0f b6 8d d7 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd7]
1000863e:	0f b6 c3             	movzx  eax,bl
10008641:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
10008648:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000864c:	e8 fa c3 ff ff       	call   10004a4b <sample_to_target>
10008651:	83 c4 10             	add    esp,0x10
10008654:	88 44 24 6e          	mov    BYTE PTR [esp+0x6e],al
10008658:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
1000865c:	66 89 16             	mov    WORD PTR [esi],dx
1000865f:	88 46 02             	mov    BYTE PTR [esi+0x2],al
10008662:	83 c6 03             	add    esi,0x3
10008665:	eb 81                	jmp    100085e8 <spng_decode_scanline+0xc1a>
10008667:	83 7c 24 04 40       	cmp    DWORD PTR [esp+0x4],0x40
1000866c:	75 36                	jne    100086a4 <spng_decode_scanline+0xcd6>
1000866e:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
10008672:	03 b4 24 a4 00 00 00 	add    esi,DWORD PTR [esp+0xa4]
10008679:	8b 9c 24 a4 00 00 00 	mov    ebx,DWORD PTR [esp+0xa4]
10008680:	39 de                	cmp    esi,ebx
10008682:	74 5f                	je     100086e3 <spng_decode_scanline+0xd15>
10008684:	0f b6 8d d4 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd4]
1000868b:	0f b6 03             	movzx  eax,BYTE PTR [ebx]
1000868e:	83 ec 0c             	sub    esp,0xc
10008691:	6a 08                	push   0x8
10008693:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10008697:	e8 af c3 ff ff       	call   10004a4b <sample_to_target>
1000869c:	83 c4 10             	add    esp,0x10
1000869f:	88 03                	mov    BYTE PTR [ebx],al
100086a1:	43                   	inc    ebx
100086a2:	eb dc                	jmp    10008680 <spng_decode_scanline+0xcb2>
100086a4:	83 7c 24 04 10       	cmp    DWORD PTR [esp+0x4],0x10
100086a9:	75 38                	jne    100086e3 <spng_decode_scanline+0xd15>
100086ab:	31 db                	xor    ebx,ebx
100086ad:	39 5c 24 08          	cmp    DWORD PTR [esp+0x8],ebx
100086b1:	74 30                	je     100086e3 <spng_decode_scanline+0xd15>
100086b3:	0f b6 8d d4 0f 00 00 	movzx  ecx,BYTE PTR [ebp+0xfd4]
100086ba:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100086c1:	0f b6 04 58          	movzx  eax,BYTE PTR [eax+ebx*2]
100086c5:	83 ec 0c             	sub    esp,0xc
100086c8:	6a 08                	push   0x8
100086ca:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100086ce:	e8 78 c3 ff ff       	call   10004a4b <sample_to_target>
100086d3:	83 c4 10             	add    esp,0x10
100086d6:	8b bc 24 a4 00 00 00 	mov    edi,DWORD PTR [esp+0xa4]
100086dd:	88 04 5f             	mov    BYTE PTR [edi+ebx*2],al
100086e0:	43                   	inc    ebx
100086e1:	eb ca                	jmp    100086ad <spng_decode_scanline+0xcdf>
100086e3:	f6 44 24 2c 02       	test   BYTE PTR [esp+0x2c],0x2
100086e8:	75 2f                	jne    10008719 <spng_decode_scanline+0xd4b>
100086ea:	8b 85 9c 09 00 00    	mov    eax,DWORD PTR [ebp+0x99c]
100086f0:	8b 95 98 09 00 00    	mov    edx,DWORD PTR [ebp+0x998]
100086f6:	89 95 9c 09 00 00    	mov    DWORD PTR [ebp+0x99c],edx
100086fc:	89 85 98 09 00 00    	mov    DWORD PTR [ebp+0x998],eax
10008702:	89 e8                	mov    eax,ebp
10008704:	e8 ec c3 ff ff       	call   10004af5 <update_row_info>
10008709:	89 c3                	mov    ebx,eax
1000870b:	83 f8 4b             	cmp    eax,0x4b
1000870e:	0f 85 3f 01 00 00    	jne    10008853 <spng_decode_scanline+0xe85>
10008714:	e9 f8 00 00 00       	jmp    10008811 <spng_decode_scanline+0xe43>
10008719:	83 7c 24 04 01       	cmp    DWORD PTR [esp+0x4],0x1
1000871e:	75 47                	jne    10008767 <spng_decode_scanline+0xd99>
10008720:	31 c0                	xor    eax,eax
10008722:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
10008726:	74 c2                	je     100086ea <spng_decode_scanline+0xd1c>
10008728:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
1000872f:	0f b6 14 86          	movzx  edx,BYTE PTR [esi+eax*4]
10008733:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10008737:	66 8b 14 57          	mov    dx,WORD PTR [edi+edx*2]
1000873b:	88 14 86             	mov    BYTE PTR [esi+eax*4],dl
1000873e:	89 f7                	mov    edi,esi
10008740:	0f b6 54 86 01       	movzx  edx,BYTE PTR [esi+eax*4+0x1]
10008745:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10008749:	66 8b 14 56          	mov    dx,WORD PTR [esi+edx*2]
1000874d:	88 54 87 01          	mov    BYTE PTR [edi+eax*4+0x1],dl
10008751:	89 fe                	mov    esi,edi
10008753:	0f b6 54 87 02       	movzx  edx,BYTE PTR [edi+eax*4+0x2]
10008758:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
1000875c:	66 8b 14 57          	mov    dx,WORD PTR [edi+edx*2]
10008760:	88 54 86 02          	mov    BYTE PTR [esi+eax*4+0x2],dl
10008764:	40                   	inc    eax
10008765:	eb bb                	jmp    10008722 <spng_decode_scanline+0xd54>
10008767:	83 7c 24 04 02       	cmp    DWORD PTR [esp+0x4],0x2
1000876c:	75 54                	jne    100087c2 <spng_decode_scanline+0xdf4>
1000876e:	31 c0                	xor    eax,eax
10008770:	39 44 24 08          	cmp    DWORD PTR [esp+0x8],eax
10008774:	0f 84 70 ff ff ff    	je     100086ea <spng_decode_scanline+0xd1c>
1000877a:	8b b4 24 a4 00 00 00 	mov    esi,DWORD PTR [esp+0xa4]
10008781:	8b 0c c6             	mov    ecx,DWORD PTR [esi+eax*8]
10008784:	8b 7c c6 04          	mov    edi,DWORD PTR [esi+eax*8+0x4]
10008788:	89 3c 24             	mov    DWORD PTR [esp],edi
1000878b:	89 fa                	mov    edx,edi
1000878d:	0f b7 d9             	movzx  ebx,cx
10008790:	c1 e9 10             	shr    ecx,0x10
10008793:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10008797:	0f b7 0c 4e          	movzx  ecx,WORD PTR [esi+ecx*2]
1000879b:	89 ce                	mov    esi,ecx
1000879d:	c1 e6 10             	shl    esi,0x10
100087a0:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100087a4:	0f b7 0c 5f          	movzx  ecx,WORD PTR [edi+ebx*2]
100087a8:	09 f1                	or     ecx,esi
100087aa:	0f b7 da             	movzx  ebx,dx
100087ad:	66 8b 14 5f          	mov    dx,WORD PTR [edi+ebx*2]
100087b1:	8b 9c 24 a4 00 00 00 	mov    ebx,DWORD PTR [esp+0xa4]
100087b8:	89 0c c3             	mov    DWORD PTR [ebx+eax*8],ecx
100087bb:	89 54 c3 04          	mov    DWORD PTR [ebx+eax*8+0x4],edx
100087bf:	40                   	inc    eax
100087c0:	eb ae                	jmp    10008770 <spng_decode_scanline+0xda2>
100087c2:	83 7c 24 04 04       	cmp    DWORD PTR [esp+0x4],0x4
100087c7:	0f 85 1d ff ff ff    	jne    100086ea <spng_decode_scanline+0xd1c>
100087cd:	6b 44 24 08 03       	imul   eax,DWORD PTR [esp+0x8],0x3
100087d2:	03 84 24 a4 00 00 00 	add    eax,DWORD PTR [esp+0xa4]
100087d9:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
100087dd:	0f 84 07 ff ff ff    	je     100086ea <spng_decode_scanline+0xd1c>
100087e3:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100087e7:	0f b6 16             	movzx  edx,BYTE PTR [esi]
100087ea:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
100087ee:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
100087f2:	88 16                	mov    BYTE PTR [esi],dl
100087f4:	0f b6 56 01          	movzx  edx,BYTE PTR [esi+0x1]
100087f8:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
100087fc:	88 56 01             	mov    BYTE PTR [esi+0x1],dl
100087ff:	0f b6 56 02          	movzx  edx,BYTE PTR [esi+0x2]
10008803:	66 8b 14 53          	mov    dx,WORD PTR [ebx+edx*2]
10008807:	88 56 02             	mov    BYTE PTR [esi+0x2],dl
1000880a:	83 44 24 28 03       	add    DWORD PTR [esp+0x28],0x3
1000880f:	eb c8                	jmp    100087d9 <spng_decode_scanline+0xe0b>
10008811:	8b 55 50             	mov    edx,DWORD PTR [ebp+0x50]
10008814:	85 d2                	test   edx,edx
10008816:	74 16                	je     1000882e <spng_decode_scanline+0xe60>
10008818:	89 e8                	mov    eax,ebp
1000881a:	e8 75 d0 ff ff       	call   10005894 <discard_chunk_bytes>
1000881f:	85 c0                	test   eax,eax
10008821:	74 0b                	je     1000882e <spng_decode_scanline+0xe60>
10008823:	c7 45 70 00 00 00 00 	mov    DWORD PTR [ebp+0x70],0x0
1000882a:	89 c3                	mov    ebx,eax
1000882c:	eb 25                	jmp    10008853 <spng_decode_scanline+0xe85>
1000882e:	8d bd c4 00 00 00    	lea    edi,[ebp+0xc4]
10008834:	8d 75 40             	lea    esi,[ebp+0x40]
10008837:	b9 04 00 00 00       	mov    ecx,0x4
1000883c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000883e:	eb 13                	jmp    10008853 <spng_decode_scanline+0xe85>
10008840:	bb 01 00 00 00       	mov    ebx,0x1
10008845:	eb 0c                	jmp    10008853 <spng_decode_scanline+0xe85>
10008847:	bb 50 00 00 00       	mov    ebx,0x50
1000884c:	c7 45 70 00 00 00 00 	mov    DWORD PTR [ebp+0x70],0x0
10008853:	89 d8                	mov    eax,ebx
10008855:	81 c4 8c 00 00 00    	add    esp,0x8c
1000885b:	5b                   	pop    ebx
1000885c:	5e                   	pop    esi
1000885d:	5f                   	pop    edi
1000885e:	5d                   	pop    ebp
1000885f:	c3                   	ret    

10008860 <spng_decode_row>:
10008860:	55                   	push   ebp
10008861:	57                   	push   edi
10008862:	56                   	push   esi
10008863:	53                   	push   ebx
10008864:	83 ec 3c             	sub    esp,0x3c
10008867:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
1000886b:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
1000886f:	85 db                	test   ebx,ebx
10008871:	0f 84 dc 01 00 00    	je     10008a53 <spng_decode_row+0x1f3>
10008877:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
1000887c:	0f 84 d1 01 00 00    	je     10008a53 <spng_decode_row+0x1f3>
10008882:	b8 4b 00 00 00       	mov    eax,0x4b
10008887:	83 7b 70 05          	cmp    DWORD PTR [ebx+0x70],0x5
1000888b:	0f 87 c7 01 00 00    	ja     10008a58 <spng_decode_row+0x1f8>
10008891:	8b 93 ac 09 00 00    	mov    edx,DWORD PTR [ebx+0x9ac]
10008897:	b8 42 00 00 00       	mov    eax,0x42
1000889c:	39 d1                	cmp    ecx,edx
1000889e:	0f 82 b4 01 00 00    	jb     10008a58 <spng_decode_row+0x1f8>
100088a4:	8b ab e8 0f 00 00    	mov    ebp,DWORD PTR [ebx+0xfe8]
100088aa:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
100088b1:	74 05                	je     100088b8 <spng_decode_row+0x58>
100088b3:	83 fd 06             	cmp    ebp,0x6
100088b6:	75 14                	jne    100088cc <spng_decode_row+0x6c>
100088b8:	52                   	push   edx
100088b9:	51                   	push   ecx
100088ba:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100088be:	53                   	push   ebx
100088bf:	e8 fc ff ff ff       	call   100088c0 <spng_decode_row+0x60>	100088c0: R_386_PC32	spng_decode_scanline
100088c4:	83 c4 10             	add    esp,0x10
100088c7:	e9 8c 01 00 00       	jmp    10008a58 <spng_decode_row+0x1f8>
100088cc:	50                   	push   eax
100088cd:	52                   	push   edx
100088ce:	ff b3 a0 09 00 00    	push   DWORD PTR [ebx+0x9a0]
100088d4:	53                   	push   ebx
100088d5:	e8 fc ff ff ff       	call   100088d6 <spng_decode_row+0x76>	100088d6: R_386_PC32	spng_decode_scanline
100088da:	83 c4 10             	add    esp,0x10
100088dd:	85 c0                	test   eax,eax
100088df:	74 09                	je     100088ea <spng_decode_row+0x8a>
100088e1:	83 f8 4b             	cmp    eax,0x4b
100088e4:	0f 85 6e 01 00 00    	jne    10008a58 <spng_decode_row+0x1f8>
100088ea:	8b 43 6c             	mov    eax,DWORD PTR [ebx+0x6c]
100088ed:	83 f8 02             	cmp    eax,0x2
100088f0:	0f 84 d8 00 00 00    	je     100089ce <spng_decode_row+0x16e>
100088f6:	83 f8 04             	cmp    eax,0x4
100088f9:	0f 84 d6 00 00 00    	je     100089d5 <spng_decode_row+0x175>
100088ff:	83 f8 40             	cmp    eax,0x40
10008902:	0f 84 d4 00 00 00    	je     100089dc <spng_decode_row+0x17c>
10008908:	83 f8 10             	cmp    eax,0x10
1000890b:	0f 84 d2 00 00 00    	je     100089e3 <spng_decode_row+0x183>
10008911:	f6 c4 03             	test   ah,0x3
10008914:	0f 84 d0 00 00 00    	je     100089ea <spng_decode_row+0x18a>
1000891a:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
10008920:	80 f9 07             	cmp    cl,0x7
10008923:	0f 87 9d 00 00 00    	ja     100089c6 <spng_decode_row+0x166>
10008929:	0f b6 f9             	movzx  edi,cl
1000892c:	b8 08 00 00 00       	mov    eax,0x8
10008931:	89 c2                	mov    edx,eax
10008933:	29 fa                	sub    edx,edi
10008935:	be 01 00 00 00       	mov    esi,0x1
1000893a:	d3 e6                	shl    esi,cl
1000893c:	8d 4e ff             	lea    ecx,[esi-0x1]
1000893f:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10008943:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10008947:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
1000894b:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
1000894f:	8b b3 a0 09 00 00    	mov    esi,DWORD PTR [ebx+0x9a0]
10008955:	89 74 24 2c          	mov    DWORD PTR [esp+0x2c],esi
10008959:	99                   	cdq    
1000895a:	f7 ff                	idiv   edi
1000895c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10008960:	31 f6                	xor    esi,esi
10008962:	8d bd 8e 00 00 00    	lea    edi,[ebp+0x8e]
10008968:	c1 e7 04             	shl    edi,0x4
1000896b:	8d 04 1f             	lea    eax,[edi+ebx*1]
1000896e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10008972:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10008976:	3b 30                	cmp    esi,DWORD PTR [eax]
10008978:	0f 83 d1 00 00 00    	jae    10008a4f <spng_decode_row+0x1ef>
1000897e:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10008982:	e8 0f bf ff ff       	call   10004896 <get_sample>
10008987:	8b 14 ad 3c d6 00 10 	mov    edx,DWORD PTR [ebp*4+0x1000d63c]	1000898a: R_386_32	.text
1000898e:	0f af d6             	imul   edx,esi
10008991:	03 14 ad 74 d6 00 10 	add    edx,DWORD PTR [ebp*4+0x1000d674]	10008994: R_386_32	.text
10008998:	0f b6 c0             	movzx  eax,al
1000899b:	0f b6 8b f8 00 00 00 	movzx  ecx,BYTE PTR [ebx+0xf8]
100089a2:	0f af ca             	imul   ecx,edx
100089a5:	83 e1 07             	and    ecx,0x7
100089a8:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
100089ac:	29 cf                	sub    edi,ecx
100089ae:	89 f9                	mov    ecx,edi
100089b0:	d3 e0                	shl    eax,cl
100089b2:	89 c1                	mov    ecx,eax
100089b4:	89 d0                	mov    eax,edx
100089b6:	31 d2                	xor    edx,edx
100089b8:	f7 74 24 04          	div    DWORD PTR [esp+0x4]
100089bc:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
100089c0:	08 0c 07             	or     BYTE PTR [edi+eax*1],cl
100089c3:	46                   	inc    esi
100089c4:	eb ac                	jmp    10008972 <spng_decode_row+0x112>
100089c6:	8b 83 b4 09 00 00    	mov    eax,DWORD PTR [ebx+0x9b4]
100089cc:	eb 21                	jmp    100089ef <spng_decode_row+0x18f>
100089ce:	b8 08 00 00 00       	mov    eax,0x8
100089d3:	eb 1a                	jmp    100089ef <spng_decode_row+0x18f>
100089d5:	b8 03 00 00 00       	mov    eax,0x3
100089da:	eb 13                	jmp    100089ef <spng_decode_row+0x18f>
100089dc:	b8 01 00 00 00       	mov    eax,0x1
100089e1:	eb 0c                	jmp    100089ef <spng_decode_row+0x18f>
100089e3:	b8 02 00 00 00       	mov    eax,0x2
100089e8:	eb 05                	jmp    100089ef <spng_decode_row+0x18f>
100089ea:	b8 04 00 00 00       	mov    eax,0x4
100089ef:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
100089f7:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
100089ff:	8d 95 8e 00 00 00    	lea    edx,[ebp+0x8e]
10008a05:	c1 e2 04             	shl    edx,0x4
10008a08:	8d 34 13             	lea    esi,[ebx+edx*1]
10008a0b:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10008a0f:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10008a13:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10008a17:	3b 0f                	cmp    ecx,DWORD PTR [edi]
10008a19:	73 34                	jae    10008a4f <spng_decode_row+0x1ef>
10008a1b:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10008a1f:	0f af 14 ad 3c d6 00 10 	imul   edx,DWORD PTR [ebp*4+0x1000d63c]	10008a23: R_386_32	.text
10008a27:	03 14 ad 74 d6 00 10 	add    edx,DWORD PTR [ebp*4+0x1000d674]	10008a2a: R_386_32	.text
10008a2e:	0f af d0             	imul   edx,eax
10008a31:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10008a35:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
10008a39:	03 b3 a0 09 00 00    	add    esi,DWORD PTR [ebx+0x9a0]
10008a3f:	89 d7                	mov    edi,edx
10008a41:	89 c1                	mov    ecx,eax
10008a43:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008a45:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10008a49:	01 44 24 08          	add    DWORD PTR [esp+0x8],eax
10008a4d:	eb c0                	jmp    10008a0f <spng_decode_row+0x1af>
10008a4f:	31 c0                	xor    eax,eax
10008a51:	eb 05                	jmp    10008a58 <spng_decode_row+0x1f8>
10008a53:	b8 01 00 00 00       	mov    eax,0x1
10008a58:	83 c4 3c             	add    esp,0x3c
10008a5b:	5b                   	pop    ebx
10008a5c:	5e                   	pop    esi
10008a5d:	5f                   	pop    edi
10008a5e:	5d                   	pop    ebp
10008a5f:	c3                   	ret    

10008a60 <spng_get_row_info>:
10008a60:	57                   	push   edi
10008a61:	56                   	push   esi
10008a62:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10008a66:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10008a6a:	85 d2                	test   edx,edx
10008a6c:	74 2e                	je     10008a9c <spng_get_row_info+0x3c>
10008a6e:	85 f6                	test   esi,esi
10008a70:	74 2a                	je     10008a9c <spng_get_row_info+0x3c>
10008a72:	8b 4e 70             	mov    ecx,DWORD PTR [esi+0x70]
10008a75:	b8 01 00 00 00       	mov    eax,0x1
10008a7a:	83 f9 04             	cmp    ecx,0x4
10008a7d:	76 22                	jbe    10008aa1 <spng_get_row_info+0x41>
10008a7f:	b8 4b 00 00 00       	mov    eax,0x4b
10008a84:	83 f9 05             	cmp    ecx,0x5
10008a87:	75 18                	jne    10008aa1 <spng_get_row_info+0x41>
10008a89:	81 c6 e0 0f 00 00    	add    esi,0xfe0
10008a8f:	b9 04 00 00 00       	mov    ecx,0x4
10008a94:	89 d7                	mov    edi,edx
10008a96:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008a98:	31 c0                	xor    eax,eax
10008a9a:	eb 05                	jmp    10008aa1 <spng_get_row_info+0x41>
10008a9c:	b8 01 00 00 00       	mov    eax,0x1
10008aa1:	5e                   	pop    esi
10008aa2:	5f                   	pop    edi
10008aa3:	c3                   	ret    

10008aa4 <spng_encode_chunks>:
10008aa4:	55                   	push   ebp
10008aa5:	57                   	push   edi
10008aa6:	56                   	push   esi
10008aa7:	53                   	push   ebx
10008aa8:	83 ec 5c             	sub    esp,0x5c
10008aab:	8b 5c 24 70          	mov    ebx,DWORD PTR [esp+0x70]
10008aaf:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [esp+0x4],0x1
10008ab7:	85 db                	test   ebx,ebx
10008ab9:	0f 84 cc 0c 00 00    	je     1000978b <spng_encode_chunks+0xce7>
10008abf:	c7 44 24 04 51 00 00 00 	mov    DWORD PTR [esp+0x4],0x51
10008ac7:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
10008acb:	0f 84 ba 0c 00 00    	je     1000978b <spng_encode_chunks+0xce7>
10008ad1:	8b 43 70             	mov    eax,DWORD PTR [ebx+0x70]
10008ad4:	83 f8 03             	cmp    eax,0x3
10008ad7:	0f 87 05 0c 00 00    	ja     100096e2 <spng_encode_chunks+0xc3e>
10008add:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
10008ae4:	0f 84 d1 0b 00 00    	je     100096bb <spng_encode_chunks+0xc17>
10008aea:	b9 08 00 00 00       	mov    ecx,0x8
10008aef:	ba 18 d6 00 10       	mov    edx,0x1000d618	10008af0: R_386_32	.text
10008af4:	89 d8                	mov    eax,ebx
10008af6:	e8 a7 cf ff ff       	call   10005aa2 <write_data.part.19>
10008afb:	89 c7                	mov    edi,eax
10008afd:	85 c0                	test   eax,eax
10008aff:	0f 85 c1 0b 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008b05:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008b0b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10008b0f:	8b 93 f0 00 00 00    	mov    edx,DWORD PTR [ebx+0xf0]
10008b15:	e8 72 bd ff ff       	call   1000488c <write_u32>
10008b1a:	8d 83 d8 0b 00 00    	lea    eax,[ebx+0xbd8]
10008b20:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10008b24:	8b 93 f4 00 00 00    	mov    edx,DWORD PTR [ebx+0xf4]
10008b2a:	e8 5d bd ff ff       	call   1000488c <write_u32>
10008b2f:	8a 83 fc 00 00 00    	mov    al,BYTE PTR [ebx+0xfc]
10008b35:	8b 93 f8 00 00 00    	mov    edx,DWORD PTR [ebx+0xf8]
10008b3b:	89 93 dc 0b 00 00    	mov    DWORD PTR [ebx+0xbdc],edx
10008b41:	88 83 e0 0b 00 00    	mov    BYTE PTR [ebx+0xbe0],al
10008b47:	83 ec 0c             	sub    esp,0xc
10008b4a:	6a 0d                	push   0xd
10008b4c:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008b52:	ba 14 d6 00 10       	mov    edx,0x1000d614	10008b53: R_386_32	.text
10008b57:	89 d8                	mov    eax,ebx
10008b59:	e8 fc d0 ff ff       	call   10005c5a <write_chunk>
10008b5e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10008b62:	83 c4 10             	add    esp,0x10
10008b65:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
10008b6a:	0f 85 52 0b 00 00    	jne    100096c2 <spng_encode_chunks+0xc1e>
10008b70:	f6 83 ac 00 00 00 04 	test   BYTE PTR [ebx+0xac],0x4
10008b77:	75 12                	jne    10008b8b <spng_encode_chunks+0xe7>
10008b79:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
10008b80:	0f 84 eb 00 00 00    	je     10008c71 <spng_encode_chunks+0x1cd>
10008b86:	e9 b1 00 00 00       	jmp    10008c3c <spng_encode_chunks+0x198>
10008b8b:	8b 93 04 05 00 00    	mov    edx,DWORD PTR [ebx+0x504]
10008b91:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008b97:	e8 f0 bc ff ff       	call   1000488c <write_u32>
10008b9c:	8b 93 08 05 00 00    	mov    edx,DWORD PTR [ebx+0x508]
10008ba2:	8d 83 d8 0b 00 00    	lea    eax,[ebx+0xbd8]
10008ba8:	e8 df bc ff ff       	call   1000488c <write_u32>
10008bad:	8b 93 0c 05 00 00    	mov    edx,DWORD PTR [ebx+0x50c]
10008bb3:	8d 83 dc 0b 00 00    	lea    eax,[ebx+0xbdc]
10008bb9:	e8 ce bc ff ff       	call   1000488c <write_u32>
10008bbe:	8b 93 10 05 00 00    	mov    edx,DWORD PTR [ebx+0x510]
10008bc4:	8d 83 e0 0b 00 00    	lea    eax,[ebx+0xbe0]
10008bca:	e8 bd bc ff ff       	call   1000488c <write_u32>
10008bcf:	8b 93 14 05 00 00    	mov    edx,DWORD PTR [ebx+0x514]
10008bd5:	8d 83 e4 0b 00 00    	lea    eax,[ebx+0xbe4]
10008bdb:	e8 ac bc ff ff       	call   1000488c <write_u32>
10008be0:	8b 93 18 05 00 00    	mov    edx,DWORD PTR [ebx+0x518]
10008be6:	8d 83 e8 0b 00 00    	lea    eax,[ebx+0xbe8]
10008bec:	e8 9b bc ff ff       	call   1000488c <write_u32>
10008bf1:	8b 93 1c 05 00 00    	mov    edx,DWORD PTR [ebx+0x51c]
10008bf7:	8d 83 ec 0b 00 00    	lea    eax,[ebx+0xbec]
10008bfd:	e8 8a bc ff ff       	call   1000488c <write_u32>
10008c02:	8b 93 20 05 00 00    	mov    edx,DWORD PTR [ebx+0x520]
10008c08:	8d 83 f0 0b 00 00    	lea    eax,[ebx+0xbf0]
10008c0e:	e8 79 bc ff ff       	call   1000488c <write_u32>
10008c13:	83 ec 0c             	sub    esp,0xc
10008c16:	6a 20                	push   0x20
10008c18:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008c1e:	ba 00 d6 00 10       	mov    edx,0x1000d600	10008c1f: R_386_32	.text
10008c23:	89 d8                	mov    eax,ebx
10008c25:	e8 30 d0 ff ff       	call   10005c5a <write_chunk>
10008c2a:	89 c7                	mov    edi,eax
10008c2c:	83 c4 10             	add    esp,0x10
10008c2f:	85 c0                	test   eax,eax
10008c31:	0f 84 42 ff ff ff    	je     10008b79 <spng_encode_chunks+0xd5>
10008c37:	e9 8a 0a 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10008c3c:	8b 93 7c 05 00 00    	mov    edx,DWORD PTR [ebx+0x57c]
10008c42:	8d 83 d4 0b 00 00    	lea    eax,[ebx+0xbd4]
10008c48:	e8 3f bc ff ff       	call   1000488c <write_u32>
10008c4d:	83 ec 0c             	sub    esp,0xc
10008c50:	6a 04                	push   0x4
10008c52:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008c58:	ba fc d5 00 10       	mov    edx,0x1000d5fc	10008c59: R_386_32	.text
10008c5d:	89 d8                	mov    eax,ebx
10008c5f:	e8 f6 cf ff ff       	call   10005c5a <write_chunk>
10008c64:	89 c7                	mov    edi,eax
10008c66:	83 c4 10             	add    esp,0x10
10008c69:	85 c0                	test   eax,eax
10008c6b:	0f 85 55 0a 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008c71:	f6 83 ac 00 00 00 08 	test   BYTE PTR [ebx+0xac],0x8
10008c78:	0f 84 f8 00 00 00    	je     10008d76 <spng_encode_chunks+0x2d2>
10008c7e:	83 ec 0c             	sub    esp,0xc
10008c81:	ff b3 74 05 00 00    	push   DWORD PTR [ebx+0x574]
10008c87:	e8 fc ff ff ff       	call   10008c88 <spng_encode_chunks+0x1e4>	10008c88: R_386_PC32	compressBound
10008c8c:	89 c2                	mov    edx,eax
10008c8e:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10008c92:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
10008c95:	e8 12 c5 ff ff       	call   100051ac <spng__malloc.isra.0>
10008c9a:	89 c5                	mov    ebp,eax
10008c9c:	83 c4 10             	add    esp,0x10
10008c9f:	85 c0                	test   eax,eax
10008ca1:	0f 84 44 09 00 00    	je     100095eb <spng_encode_chunks+0xb47>
10008ca7:	83 ec 0c             	sub    esp,0xc
10008caa:	6a ff                	push   0xffffffff
10008cac:	ff b3 74 05 00 00    	push   DWORD PTR [ebx+0x574]
10008cb2:	ff b3 78 05 00 00    	push   DWORD PTR [ebx+0x578]
10008cb8:	8d 44 24 54          	lea    eax,[esp+0x54]
10008cbc:	50                   	push   eax
10008cbd:	55                   	push   ebp
10008cbe:	e8 fc ff ff ff       	call   10008cbf <spng_encode_chunks+0x21b>	10008cbf: R_386_PC32	compress2
10008cc3:	83 c4 20             	add    esp,0x20
10008cc6:	85 c0                	test   eax,eax
10008cc8:	74 0a                	je     10008cd4 <spng_encode_chunks+0x230>
10008cca:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008ccd:	89 ea                	mov    edx,ebp
10008ccf:	e9 6f 07 00 00       	jmp    10009443 <spng_encode_chunks+0x99f>
10008cd4:	8d b3 24 05 00 00    	lea    esi,[ebx+0x524]
10008cda:	83 c9 ff             	or     ecx,0xffffffff
10008cdd:	31 c0                	xor    eax,eax
10008cdf:	89 f7                	mov    edi,esi
10008ce1:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10008ce3:	f7 d1                	not    ecx
10008ce5:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10008ce9:	89 c8                	mov    eax,ecx
10008ceb:	48                   	dec    eax
10008cec:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10008cf0:	89 c8                	mov    eax,ecx
10008cf2:	40                   	inc    eax
10008cf3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10008cf7:	89 c1                	mov    ecx,eax
10008cf9:	03 4c 24 3c          	add    ecx,DWORD PTR [esp+0x3c]
10008cfd:	0f 82 9b 06 00 00    	jb     1000939e <spng_encode_chunks+0x8fa>
10008d03:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10008d0b:	83 ec 0c             	sub    esp,0xc
10008d0e:	8d 44 24 4c          	lea    eax,[esp+0x4c]
10008d12:	50                   	push   eax
10008d13:	ba f8 d5 00 10       	mov    edx,0x1000d5f8	10008d14: R_386_32	.text
10008d18:	89 d8                	mov    eax,ebx
10008d1a:	e8 ff cd ff ff       	call   10005b1e <write_header>
10008d1f:	89 c7                	mov    edi,eax
10008d21:	83 c4 10             	add    esp,0x10
10008d24:	85 c0                	test   eax,eax
10008d26:	74 0a                	je     10008d32 <spng_encode_chunks+0x28e>
10008d28:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008d2b:	89 ea                	mov    edx,ebp
10008d2d:	e9 57 07 00 00       	jmp    10009489 <spng_encode_chunks+0x9e5>
10008d32:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10008d36:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10008d3a:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008d3c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10008d40:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10008d44:	c6 44 30 01 00       	mov    BYTE PTR [eax+esi*1+0x1],0x0
10008d49:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10008d4d:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10008d51:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
10008d55:	89 c7                	mov    edi,eax
10008d57:	89 ee                	mov    esi,ebp
10008d59:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008d5b:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10008d5e:	89 ea                	mov    edx,ebp
10008d60:	e8 6e c4 ff ff       	call   100051d3 <spng__free.isra.3>
10008d65:	89 d8                	mov    eax,ebx
10008d67:	e8 2e ce ff ff       	call   10005b9a <finish_chunk>
10008d6c:	89 c7                	mov    edi,eax
10008d6e:	85 c0                	test   eax,eax
10008d70:	0f 85 50 09 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008d76:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
10008d7d:	75 12                	jne    10008d91 <spng_encode_chunks+0x2ed>
10008d7f:	f6 83 ac 00 00 00 40 	test   BYTE PTR [ebx+0xac],0x40
10008d86:	0f 84 d0 00 00 00    	je     10008e5c <spng_encode_chunks+0x3b8>
10008d8c:	e9 a7 00 00 00       	jmp    10008e38 <spng_encode_chunks+0x394>
10008d91:	80 bb f9 00 00 00 06 	cmp    BYTE PTR [ebx+0xf9],0x6
10008d98:	0f 87 1d 09 00 00    	ja     100096bb <spng_encode_chunks+0xc17>
10008d9e:	0f b6 83 f9 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf9]
10008da5:	ff 24 85 8c d3 00 10 	jmp    DWORD PTR [eax*4+0x1000d38c]	10008da8: R_386_32	.text
10008dac:	8a 83 80 05 00 00    	mov    al,BYTE PTR [ebx+0x580]
10008db2:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10008db8:	b8 01 00 00 00       	mov    eax,0x1
10008dbd:	eb 51                	jmp    10008e10 <spng_encode_chunks+0x36c>
10008dbf:	8a 83 83 05 00 00    	mov    al,BYTE PTR [ebx+0x583]
10008dc5:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
10008dcc:	66 89 93 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],dx
10008dd3:	88 83 d6 0b 00 00    	mov    BYTE PTR [ebx+0xbd6],al
10008dd9:	b8 03 00 00 00       	mov    eax,0x3
10008dde:	eb 30                	jmp    10008e10 <spng_encode_chunks+0x36c>
10008de0:	8a 83 80 05 00 00    	mov    al,BYTE PTR [ebx+0x580]
10008de6:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10008dec:	8a 83 84 05 00 00    	mov    al,BYTE PTR [ebx+0x584]
10008df2:	88 83 d5 0b 00 00    	mov    BYTE PTR [ebx+0xbd5],al
10008df8:	b8 02 00 00 00       	mov    eax,0x2
10008dfd:	eb 11                	jmp    10008e10 <spng_encode_chunks+0x36c>
10008dff:	8b 83 81 05 00 00    	mov    eax,DWORD PTR [ebx+0x581]
10008e05:	89 83 d4 0b 00 00    	mov    DWORD PTR [ebx+0xbd4],eax
10008e0b:	b8 04 00 00 00       	mov    eax,0x4
10008e10:	83 ec 0c             	sub    esp,0xc
10008e13:	50                   	push   eax
10008e14:	8d 8b d4 0b 00 00    	lea    ecx,[ebx+0xbd4]
10008e1a:	ba f4 d5 00 10       	mov    edx,0x1000d5f4	10008e1b: R_386_32	.text
10008e1f:	89 d8                	mov    eax,ebx
10008e21:	e8 34 ce ff ff       	call   10005c5a <write_chunk>
10008e26:	89 c7                	mov    edi,eax
10008e28:	83 c4 10             	add    esp,0x10
10008e2b:	85 c0                	test   eax,eax
10008e2d:	0f 84 4c ff ff ff    	je     10008d7f <spng_encode_chunks+0x2db>
10008e33:	e9 8e 08 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10008e38:	8d 8b 85 05 00 00    	lea    ecx,[ebx+0x585]
10008e3e:	83 ec 0c             	sub    esp,0xc
10008e41:	6a 01                	push   0x1
10008e43:	ba f0 d5 00 10       	mov    edx,0x1000d5f0	10008e44: R_386_32	.text
10008e48:	89 d8                	mov    eax,ebx
10008e4a:	e8 0b ce ff ff       	call   10005c5a <write_chunk>
10008e4f:	89 c7                	mov    edi,eax
10008e51:	83 c4 10             	add    esp,0x10
10008e54:	85 c0                	test   eax,eax
10008e56:	0f 85 6a 08 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008e5c:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
10008e63:	75 2f                	jne    10008e94 <spng_encode_chunks+0x3f0>
10008e65:	eb 1a                	jmp    10008e81 <spng_encode_chunks+0x3dd>
10008e67:	89 f2                	mov    edx,esi
10008e69:	c1 e2 04             	shl    edx,0x4
10008e6c:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
10008e72:	83 7a 0c 01          	cmp    DWORD PTR [edx+0xc],0x1
10008e76:	74 20                	je     10008e98 <spng_encode_chunks+0x3f4>
10008e78:	46                   	inc    esi
10008e79:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
10008e7f:	72 e6                	jb     10008e67 <spng_encode_chunks+0x3c3>
10008e81:	f6 83 ac 00 00 00 02 	test   BYTE PTR [ebx+0xac],0x2
10008e88:	74 50                	je     10008eda <spng_encode_chunks+0x436>
10008e8a:	8d 93 d4 0b 00 00    	lea    edx,[ebx+0xbd4]
10008e90:	31 c0                	xor    eax,eax
10008e92:	eb 51                	jmp    10008ee5 <spng_encode_chunks+0x441>
10008e94:	31 f6                	xor    esi,esi
10008e96:	eb e1                	jmp    10008e79 <spng_encode_chunks+0x3d5>
10008e98:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
10008e9b:	83 ec 0c             	sub    esp,0xc
10008e9e:	ff 72 04             	push   DWORD PTR [edx+0x4]
10008ea1:	89 d8                	mov    eax,ebx
10008ea3:	e8 b2 cd ff ff       	call   10005c5a <write_chunk>
10008ea8:	89 c7                	mov    edi,eax
10008eaa:	83 c4 10             	add    esp,0x10
10008ead:	85 c0                	test   eax,eax
10008eaf:	74 c7                	je     10008e78 <spng_encode_chunks+0x3d4>
10008eb1:	e9 10 08 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10008eb6:	83 ec 0c             	sub    esp,0xc
10008eb9:	8d 0c 49             	lea    ecx,[ecx+ecx*2]
10008ebc:	51                   	push   ecx
10008ebd:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10008ec1:	ba 10 d6 00 10       	mov    edx,0x1000d610	10008ec2: R_386_32	.text
10008ec6:	89 d8                	mov    eax,ebx
10008ec8:	e8 8d cd ff ff       	call   10005c5a <write_chunk>
10008ecd:	89 c7                	mov    edi,eax
10008ecf:	83 c4 10             	add    esp,0x10
10008ed2:	85 c0                	test   eax,eax
10008ed4:	0f 85 ec 07 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008eda:	f6 83 ad 00 00 00 01 	test   BYTE PTR [ebx+0xad],0x1
10008ee1:	75 77                	jne    10008f5a <spng_encode_chunks+0x4b6>
10008ee3:	eb 63                	jmp    10008f48 <spng_encode_chunks+0x4a4>
10008ee5:	8b 8b 00 01 00 00    	mov    ecx,DWORD PTR [ebx+0x100]
10008eeb:	39 c8                	cmp    eax,ecx
10008eed:	73 c7                	jae    10008eb6 <spng_encode_chunks+0x412>
10008eef:	8a 8c 83 04 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x104]
10008ef6:	88 0a                	mov    BYTE PTR [edx],cl
10008ef8:	8a 8c 83 05 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x105]
10008eff:	88 4a 01             	mov    BYTE PTR [edx+0x1],cl
10008f02:	8a 8c 83 06 01 00 00 	mov    cl,BYTE PTR [ebx+eax*4+0x106]
10008f09:	88 4a 02             	mov    BYTE PTR [edx+0x2],cl
10008f0c:	40                   	inc    eax
10008f0d:	83 c2 03             	add    edx,0x3
10008f10:	eb d3                	jmp    10008ee5 <spng_encode_chunks+0x441>
10008f12:	66 8b 83 90 05 00 00 	mov    ax,WORD PTR [ebx+0x590]
10008f19:	86 e0                	xchg   al,ah
10008f1b:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
10008f22:	b8 02 00 00 00       	mov    eax,0x2
10008f27:	83 ec 0c             	sub    esp,0xc
10008f2a:	50                   	push   eax
10008f2b:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10008f2f:	ba e0 d5 00 10       	mov    edx,0x1000d5e0	10008f30: R_386_32	.text
10008f34:	89 d8                	mov    eax,ebx
10008f36:	e8 1f cd ff ff       	call   10005c5a <write_chunk>
10008f3b:	89 c7                	mov    edi,eax
10008f3d:	83 c4 10             	add    esp,0x10
10008f40:	85 c0                	test   eax,eax
10008f42:	0f 85 7e 07 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008f48:	f6 83 ad 00 00 00 02 	test   BYTE PTR [ebx+0xad],0x2
10008f4f:	0f 85 9c 00 00 00    	jne    10008ff1 <spng_encode_chunks+0x54d>
10008f55:	e9 8c 00 00 00       	jmp    10008fe6 <spng_encode_chunks+0x542>
10008f5a:	80 bb f9 00 00 00 06 	cmp    BYTE PTR [ebx+0xf9],0x6
10008f61:	0f 87 54 07 00 00    	ja     100096bb <spng_encode_chunks+0xc17>
10008f67:	0f b6 83 f9 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf9]
10008f6e:	ff 24 85 a8 d3 00 10 	jmp    DWORD PTR [eax*4+0x1000d3a8]	10008f71: R_386_32	.text
10008f75:	66 8b 83 92 05 00 00 	mov    ax,WORD PTR [ebx+0x592]
10008f7c:	86 e0                	xchg   al,ah
10008f7e:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
10008f85:	66 8b 83 94 05 00 00 	mov    ax,WORD PTR [ebx+0x594]
10008f8c:	86 e0                	xchg   al,ah
10008f8e:	66 89 83 d6 0b 00 00 	mov    WORD PTR [ebx+0xbd6],ax
10008f95:	66 8b 83 96 05 00 00 	mov    ax,WORD PTR [ebx+0x596]
10008f9c:	86 e0                	xchg   al,ah
10008f9e:	66 89 83 d8 0b 00 00 	mov    WORD PTR [ebx+0xbd8],ax
10008fa5:	b8 06 00 00 00       	mov    eax,0x6
10008faa:	e9 78 ff ff ff       	jmp    10008f27 <spng_encode_chunks+0x483>
10008faf:	8b 83 98 05 00 00    	mov    eax,DWORD PTR [ebx+0x598]
10008fb5:	88 83 d4 0b 00 00    	mov    BYTE PTR [ebx+0xbd4],al
10008fbb:	b8 01 00 00 00       	mov    eax,0x1
10008fc0:	e9 62 ff ff ff       	jmp    10008f27 <spng_encode_chunks+0x483>
10008fc5:	83 ec 0c             	sub    esp,0xc
10008fc8:	52                   	push   edx
10008fc9:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10008fcd:	ba dc d5 00 10       	mov    edx,0x1000d5dc	10008fce: R_386_32	.text
10008fd2:	89 d8                	mov    eax,ebx
10008fd4:	e8 81 cc ff ff       	call   10005c5a <write_chunk>
10008fd9:	89 c7                	mov    edi,eax
10008fdb:	83 c4 10             	add    esp,0x10
10008fde:	85 c0                	test   eax,eax
10008fe0:	0f 85 e0 06 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10008fe6:	f6 83 ad 00 00 00 04 	test   BYTE PTR [ebx+0xad],0x4
10008fed:	75 39                	jne    10009028 <spng_encode_chunks+0x584>
10008fef:	eb 73                	jmp    10009064 <spng_encode_chunks+0x5c0>
10008ff1:	8b 83 00 01 00 00    	mov    eax,DWORD PTR [ebx+0x100]
10008ff7:	8d 14 00             	lea    edx,[eax+eax*1]
10008ffa:	31 c0                	xor    eax,eax
10008ffc:	3b 83 00 01 00 00    	cmp    eax,DWORD PTR [ebx+0x100]
10009002:	73 c1                	jae    10008fc5 <spng_encode_chunks+0x521>
10009004:	66 8b 8c 43 9a 05 00 00 	mov    cx,WORD PTR [ebx+eax*2+0x59a]
1000900c:	66 c1 e9 08          	shr    cx,0x8
10009010:	88 8c 43 d4 0b 00 00 	mov    BYTE PTR [ebx+eax*2+0xbd4],cl
10009017:	8a 8c 43 9a 05 00 00 	mov    cl,BYTE PTR [ebx+eax*2+0x59a]
1000901e:	88 8c 43 d5 0b 00 00 	mov    BYTE PTR [ebx+eax*2+0xbd5],cl
10009025:	40                   	inc    eax
10009026:	eb d4                	jmp    10008ffc <spng_encode_chunks+0x558>
10009028:	8a 83 f9 00 00 00    	mov    al,BYTE PTR [ebx+0xf9]
1000902e:	84 c0                	test   al,al
10009030:	75 41                	jne    10009073 <spng_encode_chunks+0x5cf>
10009032:	66 8b 83 9c 07 00 00 	mov    ax,WORD PTR [ebx+0x79c]
10009039:	86 e0                	xchg   al,ah
1000903b:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
10009042:	83 ec 0c             	sub    esp,0xc
10009045:	6a 02                	push   0x2
10009047:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000904b:	ba 04 d6 00 10       	mov    edx,0x1000d604	1000904c: R_386_32	.text
10009050:	89 d8                	mov    eax,ebx
10009052:	e8 03 cc ff ff       	call   10005c5a <write_chunk>
10009057:	89 c7                	mov    edi,eax
10009059:	83 c4 10             	add    esp,0x10
1000905c:	85 c0                	test   eax,eax
1000905e:	0f 85 62 06 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10009064:	f6 83 ad 00 00 00 08 	test   BYTE PTR [ebx+0xad],0x8
1000906b:	0f 84 9e 00 00 00    	je     1000910f <spng_encode_chunks+0x66b>
10009071:	eb 50                	jmp    100090c3 <spng_encode_chunks+0x61f>
10009073:	3c 02                	cmp    al,0x2
10009075:	75 37                	jne    100090ae <spng_encode_chunks+0x60a>
10009077:	66 8b 83 9e 07 00 00 	mov    ax,WORD PTR [ebx+0x79e]
1000907e:	86 e0                	xchg   al,ah
10009080:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
10009087:	66 8b 83 a0 07 00 00 	mov    ax,WORD PTR [ebx+0x7a0]
1000908e:	86 e0                	xchg   al,ah
10009090:	66 89 83 d6 0b 00 00 	mov    WORD PTR [ebx+0xbd6],ax
10009097:	66 8b 83 a2 07 00 00 	mov    ax,WORD PTR [ebx+0x7a2]
1000909e:	86 e0                	xchg   al,ah
100090a0:	66 89 83 d8 0b 00 00 	mov    WORD PTR [ebx+0xbd8],ax
100090a7:	83 ec 0c             	sub    esp,0xc
100090aa:	6a 06                	push   0x6
100090ac:	eb 99                	jmp    10009047 <spng_encode_chunks+0x5a3>
100090ae:	3c 03                	cmp    al,0x3
100090b0:	75 b2                	jne    10009064 <spng_encode_chunks+0x5c0>
100090b2:	8d 8b a8 07 00 00    	lea    ecx,[ebx+0x7a8]
100090b8:	83 ec 0c             	sub    esp,0xc
100090bb:	ff b3 a4 07 00 00    	push   DWORD PTR [ebx+0x7a4]
100090c1:	eb 88                	jmp    1000904b <spng_encode_chunks+0x5a7>
100090c3:	8b 93 a8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8a8]
100090c9:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100090cd:	e8 ba b7 ff ff       	call   1000488c <write_u32>
100090d2:	8b 93 ac 08 00 00    	mov    edx,DWORD PTR [ebx+0x8ac]
100090d8:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100090dc:	e8 ab b7 ff ff       	call   1000488c <write_u32>
100090e1:	8a 83 b0 08 00 00    	mov    al,BYTE PTR [ebx+0x8b0]
100090e7:	88 83 dc 0b 00 00    	mov    BYTE PTR [ebx+0xbdc],al
100090ed:	83 ec 0c             	sub    esp,0xc
100090f0:	6a 09                	push   0x9
100090f2:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100090f6:	ba d8 d5 00 10       	mov    edx,0x1000d5d8	100090f7: R_386_32	.text
100090fb:	89 d8                	mov    eax,ebx
100090fd:	e8 58 cb ff ff       	call   10005c5a <write_chunk>
10009102:	89 c7                	mov    edi,eax
10009104:	83 c4 10             	add    esp,0x10
10009107:	85 c0                	test   eax,eax
10009109:	0f 85 b7 05 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
1000910f:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
10009116:	0f 84 b5 01 00 00    	je     100092d1 <spng_encode_chunks+0x82d>
1000911c:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10009124:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
1000912c:	eb 15                	jmp    10009143 <spng_encode_chunks+0x69f>
1000912e:	89 d8                	mov    eax,ebx
10009130:	e8 65 ca ff ff       	call   10005b9a <finish_chunk>
10009135:	89 c7                	mov    edi,eax
10009137:	85 c0                	test   eax,eax
10009139:	0f 85 87 05 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
1000913f:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10009143:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10009147:	3b 83 b4 08 00 00    	cmp    eax,DWORD PTR [ebx+0x8b4]
1000914d:	0f 83 7e 01 00 00    	jae    100092d1 <spng_encode_chunks+0x82d>
10009153:	6b 6c 24 10 5c       	imul   ebp,DWORD PTR [esp+0x10],0x5c
10009158:	03 ab b8 08 00 00    	add    ebp,DWORD PTR [ebx+0x8b8]
1000915e:	83 c9 ff             	or     ecx,0xffffffff
10009161:	31 c0                	xor    eax,eax
10009163:	89 ef                	mov    edi,ebp
10009165:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10009167:	f7 d1                	not    ecx
10009169:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
1000916d:	89 c8                	mov    eax,ecx
1000916f:	48                   	dec    eax
10009170:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10009174:	8a 45 50             	mov    al,BYTE PTR [ebp+0x50]
10009177:	3c 08                	cmp    al,0x8
10009179:	75 06                	jne    10009181 <spng_encode_chunks+0x6dd>
1000917b:	6b 45 54 06          	imul   eax,DWORD PTR [ebp+0x54],0x6
1000917f:	eb 0c                	jmp    1000918d <spng_encode_chunks+0x6e9>
10009181:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10009185:	3c 10                	cmp    al,0x10
10009187:	75 08                	jne    10009191 <spng_encode_chunks+0x6ed>
10009189:	6b 45 54 0a          	imul   eax,DWORD PTR [ebp+0x54],0xa
1000918d:	8d 4c 01 01          	lea    ecx,[ecx+eax*1+0x1]
10009191:	83 ec 0c             	sub    esp,0xc
10009194:	8d 44 24 4c          	lea    eax,[esp+0x4c]
10009198:	50                   	push   eax
10009199:	ba d4 d5 00 10       	mov    edx,0x1000d5d4	1000919a: R_386_32	.text
1000919e:	89 d8                	mov    eax,ebx
100091a0:	e8 79 c9 ff ff       	call   10005b1e <write_header>
100091a5:	89 c7                	mov    edi,eax
100091a7:	83 c4 10             	add    esp,0x10
100091aa:	85 c0                	test   eax,eax
100091ac:	0f 85 14 05 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
100091b2:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100091b6:	89 ee                	mov    esi,ebp
100091b8:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100091bc:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100091be:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100091c2:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100091c6:	8d 44 30 02          	lea    eax,[eax+esi*1+0x2]
100091ca:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100091ce:	8a 55 50             	mov    dl,BYTE PTR [ebp+0x50]
100091d1:	88 50 ff             	mov    BYTE PTR [eax-0x1],dl
100091d4:	8a 45 50             	mov    al,BYTE PTR [ebp+0x50]
100091d7:	3c 08                	cmp    al,0x8
100091d9:	75 7e                	jne    10009259 <spng_encode_chunks+0x7b5>
100091db:	31 c0                	xor    eax,eax
100091dd:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100091e5:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100091e9:	3b 75 54             	cmp    esi,DWORD PTR [ebp+0x54]
100091ec:	0f 83 3c ff ff ff    	jae    1000912e <spng_encode_chunks+0x68a>
100091f2:	6b 54 24 0c 0a       	imul   edx,DWORD PTR [esp+0xc],0xa
100091f7:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
100091fa:	66 8b 3c 16          	mov    di,WORD PTR [esi+edx*1]
100091fe:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009202:	89 f9                	mov    ecx,edi
10009204:	88 0c 06             	mov    BYTE PTR [esi+eax*1],cl
10009207:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
1000920a:	66 8b 7c 16 02       	mov    di,WORD PTR [esi+edx*1+0x2]
1000920f:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009213:	89 f9                	mov    ecx,edi
10009215:	88 4c 06 01          	mov    BYTE PTR [esi+eax*1+0x1],cl
10009219:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
1000921c:	66 8b 7c 16 04       	mov    di,WORD PTR [esi+edx*1+0x4]
10009221:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009225:	89 f9                	mov    ecx,edi
10009227:	88 4c 06 02          	mov    BYTE PTR [esi+eax*1+0x2],cl
1000922b:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
1000922e:	66 8b 7c 16 06       	mov    di,WORD PTR [esi+edx*1+0x6]
10009233:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10009237:	89 f9                	mov    ecx,edi
10009239:	88 4c 06 03          	mov    BYTE PTR [esi+eax*1+0x3],cl
1000923d:	8b 75 58             	mov    esi,DWORD PTR [ebp+0x58]
10009240:	66 8b 54 16 08       	mov    dx,WORD PTR [esi+edx*1+0x8]
10009245:	86 f2                	xchg   dl,dh
10009247:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000924b:	66 89 54 06 04       	mov    WORD PTR [esi+eax*1+0x4],dx
10009250:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
10009254:	83 c0 06             	add    eax,0x6
10009257:	eb 8c                	jmp    100091e5 <spng_encode_chunks+0x741>
10009259:	3c 10                	cmp    al,0x10
1000925b:	0f 85 cd fe ff ff    	jne    1000912e <spng_encode_chunks+0x68a>
10009261:	31 c0                	xor    eax,eax
10009263:	31 d2                	xor    edx,edx
10009265:	3b 55 54             	cmp    edx,DWORD PTR [ebp+0x54]
10009268:	0f 83 c0 fe ff ff    	jae    1000912e <spng_encode_chunks+0x68a>
1000926e:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
10009271:	66 8b 0c 01          	mov    cx,WORD PTR [ecx+eax*1]
10009275:	86 e9                	xchg   cl,ch
10009277:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000927b:	66 89 0c 06          	mov    WORD PTR [esi+eax*1],cx
1000927f:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
10009282:	66 8b 4c 01 02       	mov    cx,WORD PTR [ecx+eax*1+0x2]
10009287:	86 e9                	xchg   cl,ch
10009289:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000928d:	66 89 4c 06 02       	mov    WORD PTR [esi+eax*1+0x2],cx
10009292:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
10009295:	66 8b 4c 01 04       	mov    cx,WORD PTR [ecx+eax*1+0x4]
1000929a:	86 e9                	xchg   cl,ch
1000929c:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100092a0:	66 89 4c 06 04       	mov    WORD PTR [esi+eax*1+0x4],cx
100092a5:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
100092a8:	66 8b 4c 01 06       	mov    cx,WORD PTR [ecx+eax*1+0x6]
100092ad:	86 e9                	xchg   cl,ch
100092af:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100092b3:	66 89 4c 06 06       	mov    WORD PTR [esi+eax*1+0x6],cx
100092b8:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
100092bb:	66 8b 4c 01 08       	mov    cx,WORD PTR [ecx+eax*1+0x8]
100092c0:	86 e9                	xchg   cl,ch
100092c2:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100092c6:	66 89 4c 06 08       	mov    WORD PTR [esi+eax*1+0x8],cx
100092cb:	42                   	inc    edx
100092cc:	83 c0 0a             	add    eax,0xa
100092cf:	eb 94                	jmp    10009265 <spng_encode_chunks+0x7c1>
100092d1:	f6 83 ad 00 00 00 20 	test   BYTE PTR [ebx+0xad],0x20
100092d8:	75 32                	jne    1000930c <spng_encode_chunks+0x868>
100092da:	80 bb ac 00 00 00 00 	cmp    BYTE PTR [ebx+0xac],0x0
100092e1:	0f 89 0e 03 00 00    	jns    100095f5 <spng_encode_chunks+0xb51>
100092e7:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100092ef:	8d 7c 24 40          	lea    edi,[esp+0x40]
100092f3:	be 7c d3 00 10       	mov    esi,0x1000d37c	100092f4: R_386_32	.text
100092f8:	b9 04 00 00 00       	mov    ecx,0x4
100092fd:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100092ff:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
10009307:	e9 29 02 00 00       	jmp    10009535 <spng_encode_chunks+0xa91>
1000930c:	66 8b 83 bc 08 00 00 	mov    ax,WORD PTR [ebx+0x8bc]
10009313:	86 e0                	xchg   al,ah
10009315:	66 89 83 d4 0b 00 00 	mov    WORD PTR [ebx+0xbd4],ax
1000931c:	8a 83 c2 08 00 00    	mov    al,BYTE PTR [ebx+0x8c2]
10009322:	8b 93 be 08 00 00    	mov    edx,DWORD PTR [ebx+0x8be]
10009328:	89 93 d6 0b 00 00    	mov    DWORD PTR [ebx+0xbd6],edx
1000932e:	88 83 da 0b 00 00    	mov    BYTE PTR [ebx+0xbda],al
10009334:	83 ec 0c             	sub    esp,0xc
10009337:	6a 07                	push   0x7
10009339:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000933d:	ba d0 d5 00 10       	mov    edx,0x1000d5d0	1000933e: R_386_32	.text
10009342:	89 d8                	mov    eax,ebx
10009344:	e8 11 c9 ff ff       	call   10005c5a <write_chunk>
10009349:	89 c7                	mov    edi,eax
1000934b:	83 c4 10             	add    esp,0x10
1000934e:	85 c0                	test   eax,eax
10009350:	74 88                	je     100092da <spng_encode_chunks+0x836>
10009352:	e9 6f 03 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10009357:	83 fe 03             	cmp    esi,0x3
1000935a:	0f 85 2f 02 00 00    	jne    1000958f <spng_encode_chunks+0xaeb>
10009360:	8b 7d 14             	mov    edi,DWORD PTR [ebp+0x14]
10009363:	85 ff                	test   edi,edi
10009365:	0f 84 50 03 00 00    	je     100096bb <spng_encode_chunks+0xc17>
1000936b:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
1000936e:	85 f6                	test   esi,esi
10009370:	0f 84 45 03 00 00    	je     100096bb <spng_encode_chunks+0xc17>
10009376:	89 d1                	mov    ecx,edx
10009378:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000937a:	f7 d1                	not    ecx
1000937c:	8d 79 ff             	lea    edi,[ecx-0x1]
1000937f:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10009383:	89 d1                	mov    ecx,edx
10009385:	89 f7                	mov    edi,esi
10009387:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10009389:	89 c8                	mov    eax,ecx
1000938b:	f7 d0                	not    eax
1000938d:	48                   	dec    eax
1000938e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10009392:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10009396:	03 74 24 18          	add    esi,DWORD PTR [esp+0x18]
1000939a:	01 c6                	add    esi,eax
1000939c:	73 0a                	jae    100093a8 <spng_encode_chunks+0x904>
1000939e:	bf 03 00 00 00       	mov    edi,0x3
100093a3:	e9 1e 03 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
100093a8:	83 c6 04             	add    esi,0x4
100093ab:	83 fe 03             	cmp    esi,0x3
100093ae:	76 ee                	jbe    1000939e <spng_encode_chunks+0x8fa>
100093b0:	80 7d 10 00          	cmp    BYTE PTR [ebp+0x10],0x0
100093b4:	0f 84 ee 01 00 00    	je     100095a8 <spng_encode_chunks+0xb04>
100093ba:	8d 93 8c 00 00 00    	lea    edx,[ebx+0x8c]
100093c0:	89 d8                	mov    eax,ebx
100093c2:	e8 4d bd ff ff       	call   10005114 <spng__deflate_init>
100093c7:	89 c7                	mov    edi,eax
100093c9:	85 c0                	test   eax,eax
100093cb:	0f 85 f5 02 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
100093d1:	8d bb 50 09 00 00    	lea    edi,[ebx+0x950]
100093d7:	52                   	push   edx
100093d8:	52                   	push   edx
100093d9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100093dd:	57                   	push   edi
100093de:	e8 fc ff ff ff       	call   100093df <spng_encode_chunks+0x93b>	100093df: R_386_PC32	deflateBound
100093e3:	89 c1                	mov    ecx,eax
100093e5:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
100093e8:	89 ca                	mov    edx,ecx
100093ea:	89 4c 24 34          	mov    DWORD PTR [esp+0x34],ecx
100093ee:	e8 b9 bd ff ff       	call   100051ac <spng__malloc.isra.0>
100093f3:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100093f7:	83 c4 10             	add    esp,0x10
100093fa:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
100093ff:	0f 84 e6 01 00 00    	je     100095eb <spng_encode_chunks+0xb47>
10009405:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10009408:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
1000940e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10009412:	89 83 54 09 00 00    	mov    DWORD PTR [ebx+0x954],eax
10009418:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000941c:	89 83 5c 09 00 00    	mov    DWORD PTR [ebx+0x95c],eax
10009422:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10009426:	89 8b 60 09 00 00    	mov    DWORD PTR [ebx+0x960],ecx
1000942c:	50                   	push   eax
1000942d:	50                   	push   eax
1000942e:	6a 04                	push   0x4
10009430:	57                   	push   edi
10009431:	e8 fc ff ff ff       	call   10009432 <spng_encode_chunks+0x98e>	10009432: R_386_PC32	deflate
10009436:	83 c4 10             	add    esp,0x10
10009439:	48                   	dec    eax
1000943a:	74 16                	je     10009452 <spng_encode_chunks+0x9ae>
1000943c:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000943f:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009443:	e8 8b bd ff ff       	call   100051d3 <spng__free.isra.3>
10009448:	bf 40 00 00 00       	mov    edi,0x40
1000944d:	e9 74 02 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10009452:	8b 83 64 09 00 00    	mov    eax,DWORD PTR [ebx+0x964]
10009458:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000945c:	01 c6                	add    esi,eax
1000945e:	0f 82 3a ff ff ff    	jb     1000939e <spng_encode_chunks+0x8fa>
10009464:	83 ec 0c             	sub    esp,0xc
10009467:	8d 44 24 48          	lea    eax,[esp+0x48]
1000946b:	50                   	push   eax
1000946c:	89 f1                	mov    ecx,esi
1000946e:	8b 54 24 3c          	mov    edx,DWORD PTR [esp+0x3c]
10009472:	89 d8                	mov    eax,ebx
10009474:	e8 a5 c6 ff ff       	call   10005b1e <write_header>
10009479:	89 c7                	mov    edi,eax
1000947b:	83 c4 10             	add    esp,0x10
1000947e:	85 c0                	test   eax,eax
10009480:	74 11                	je     10009493 <spng_encode_chunks+0x9ef>
10009482:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10009485:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009489:	e8 45 bd ff ff       	call   100051d3 <spng__free.isra.3>
1000948e:	e9 33 02 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
10009493:	8b 75 04             	mov    esi,DWORD PTR [ebp+0x4]
10009496:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
1000949a:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000949e:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100094a0:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100094a4:	03 4c 24 3c          	add    ecx,DWORD PTR [esp+0x3c]
100094a8:	89 4c 24 3c          	mov    DWORD PTR [esp+0x3c],ecx
100094ac:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100094af:	83 f8 03             	cmp    eax,0x3
100094b2:	0f 85 10 01 00 00    	jne    100095c8 <spng_encode_chunks+0xb24>
100094b8:	8a 45 10             	mov    al,BYTE PTR [ebp+0x10]
100094bb:	88 01                	mov    BYTE PTR [ecx],al
100094bd:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100094c1:	c6 40 01 00          	mov    BYTE PTR [eax+0x1],0x0
100094c5:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100094c9:	8d 50 02             	lea    edx,[eax+0x2]
100094cc:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
100094d0:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100094d4:	40                   	inc    eax
100094d5:	8b 75 14             	mov    esi,DWORD PTR [ebp+0x14]
100094d8:	89 d7                	mov    edi,edx
100094da:	89 c1                	mov    ecx,eax
100094dc:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100094de:	03 44 24 3c          	add    eax,DWORD PTR [esp+0x3c]
100094e2:	89 c2                	mov    edx,eax
100094e4:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
100094e8:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100094ec:	40                   	inc    eax
100094ed:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
100094f0:	89 d7                	mov    edi,edx
100094f2:	89 c1                	mov    ecx,eax
100094f4:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100094f6:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100094fa:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100094fe:	80 7d 10 00          	cmp    BYTE PTR [ebp+0x10],0x0
10009502:	0f 84 d5 00 00 00    	je     100095dd <spng_encode_chunks+0xb39>
10009508:	89 c7                	mov    edi,eax
1000950a:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000950e:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10009512:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009514:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
10009517:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
1000951b:	e8 b3 bc ff ff       	call   100051d3 <spng__free.isra.3>
10009520:	89 d8                	mov    eax,ebx
10009522:	e8 73 c6 ff ff       	call   10005b9a <finish_chunk>
10009527:	89 c7                	mov    edi,eax
10009529:	85 c0                	test   eax,eax
1000952b:	0f 85 95 01 00 00    	jne    100096c6 <spng_encode_chunks+0xc22>
10009531:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10009535:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009539:	3b 83 88 05 00 00    	cmp    eax,DWORD PTR [ebx+0x588]
1000953f:	0f 83 b0 00 00 00    	jae    100095f5 <spng_encode_chunks+0xb51>
10009545:	6b 6c 24 20 70       	imul   ebp,DWORD PTR [esp+0x20],0x70
1000954a:	03 ab 8c 05 00 00    	add    ebp,DWORD PTR [ebx+0x58c]
10009550:	8b 75 00             	mov    esi,DWORD PTR [ebp+0x0]
10009553:	8b 44 b4 40          	mov    eax,DWORD PTR [esp+esi*4+0x40]
10009557:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000955b:	8b 7d 04             	mov    edi,DWORD PTR [ebp+0x4]
1000955e:	83 ca ff             	or     edx,0xffffffff
10009561:	31 c0                	xor    eax,eax
10009563:	89 d1                	mov    ecx,edx
10009565:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10009567:	f7 d1                	not    ecx
10009569:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000956d:	8b 7d 08             	mov    edi,DWORD PTR [ebp+0x8]
10009570:	89 d1                	mov    ecx,edx
10009572:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
10009574:	f7 d1                	not    ecx
10009576:	8d 79 ff             	lea    edi,[ecx-0x1]
10009579:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
1000957d:	83 fe 02             	cmp    esi,0x2
10009580:	0f 85 d1 fd ff ff    	jne    10009357 <spng_encode_chunks+0x8b3>
10009586:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000958a:	8d 70 01             	lea    esi,[eax+0x1]
1000958d:	eb 04                	jmp    10009593 <spng_encode_chunks+0xaef>
1000958f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10009593:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
1000959b:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
100095a3:	e9 08 fe ff ff       	jmp    100093b0 <spng_encode_chunks+0x90c>
100095a8:	31 c0                	xor    eax,eax
100095aa:	03 74 24 14          	add    esi,DWORD PTR [esp+0x14]
100095ae:	0f 92 c0             	setb   al
100095b1:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100095b5:	0f 82 e3 fd ff ff    	jb     1000939e <spng_encode_chunks+0x8fa>
100095bb:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100095c3:	e9 9c fe ff ff       	jmp    10009464 <spng_encode_chunks+0x9c0>
100095c8:	83 f8 02             	cmp    eax,0x2
100095cb:	0f 85 29 ff ff ff    	jne    100094fa <spng_encode_chunks+0xa56>
100095d1:	c6 01 00             	mov    BYTE PTR [ecx],0x0
100095d4:	ff 44 24 3c          	inc    DWORD PTR [esp+0x3c]
100095d8:	e9 1d ff ff ff       	jmp    100094fa <spng_encode_chunks+0xa56>
100095dd:	8b 75 08             	mov    esi,DWORD PTR [ebp+0x8]
100095e0:	89 c7                	mov    edi,eax
100095e2:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
100095e6:	e9 27 ff ff ff       	jmp    10009512 <spng_encode_chunks+0xa6e>
100095eb:	bf 02 00 00 00       	mov    edi,0x2
100095f0:	e9 d1 00 00 00       	jmp    100096c6 <spng_encode_chunks+0xc22>
100095f5:	f6 83 ad 00 00 00 40 	test   BYTE PTR [ebx+0xad],0x40
100095fc:	75 0b                	jne    10009609 <spng_encode_chunks+0xb65>
100095fe:	80 bb ad 00 00 00 00 	cmp    BYTE PTR [ebx+0xad],0x0
10009605:	79 70                	jns    10009677 <spng_encode_chunks+0xbd3>
10009607:	eb 4a                	jmp    10009653 <spng_encode_chunks+0xbaf>
10009609:	8b 93 c4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8c4]
1000960f:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10009613:	e8 74 b2 ff ff       	call   1000488c <write_u32>
10009618:	8b 93 c8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8c8]
1000961e:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10009622:	e8 65 b2 ff ff       	call   1000488c <write_u32>
10009627:	8a 83 cc 08 00 00    	mov    al,BYTE PTR [ebx+0x8cc]
1000962d:	88 83 dc 0b 00 00    	mov    BYTE PTR [ebx+0xbdc],al
10009633:	83 ec 0c             	sub    esp,0xc
10009636:	6a 09                	push   0x9
10009638:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000963c:	ba cc d5 00 10       	mov    edx,0x1000d5cc	1000963d: R_386_32	.text
10009641:	89 d8                	mov    eax,ebx
10009643:	e8 12 c6 ff ff       	call   10005c5a <write_chunk>
10009648:	89 c7                	mov    edi,eax
1000964a:	83 c4 10             	add    esp,0x10
1000964d:	85 c0                	test   eax,eax
1000964f:	74 ad                	je     100095fe <spng_encode_chunks+0xb5a>
10009651:	eb 73                	jmp    100096c6 <spng_encode_chunks+0xc22>
10009653:	8b 8b d4 08 00 00    	mov    ecx,DWORD PTR [ebx+0x8d4]
10009659:	83 ec 0c             	sub    esp,0xc
1000965c:	ff b3 d0 08 00 00    	push   DWORD PTR [ebx+0x8d0]
10009662:	ba c8 d5 00 10       	mov    edx,0x1000d5c8	10009663: R_386_32	.text
10009667:	89 d8                	mov    eax,ebx
10009669:	e8 ec c5 ff ff       	call   10005c5a <write_chunk>
1000966e:	89 c7                	mov    edi,eax
10009670:	83 c4 10             	add    esp,0x10
10009673:	85 c0                	test   eax,eax
10009675:	75 4f                	jne    100096c6 <spng_encode_chunks+0xc22>
10009677:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000967e:	74 56                	je     100096d6 <spng_encode_chunks+0xc32>
10009680:	31 f6                	xor    esi,esi
10009682:	eb 12                	jmp    10009696 <spng_encode_chunks+0xbf2>
10009684:	89 f2                	mov    edx,esi
10009686:	c1 e2 04             	shl    edx,0x4
10009689:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
1000968f:	83 7a 0c 02          	cmp    DWORD PTR [edx+0xc],0x2
10009693:	74 0b                	je     100096a0 <spng_encode_chunks+0xbfc>
10009695:	46                   	inc    esi
10009696:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
1000969c:	72 e6                	jb     10009684 <spng_encode_chunks+0xbe0>
1000969e:	eb 36                	jmp    100096d6 <spng_encode_chunks+0xc32>
100096a0:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
100096a3:	83 ec 0c             	sub    esp,0xc
100096a6:	ff 72 04             	push   DWORD PTR [edx+0x4]
100096a9:	89 d8                	mov    eax,ebx
100096ab:	e8 aa c5 ff ff       	call   10005c5a <write_chunk>
100096b0:	89 c7                	mov    edi,eax
100096b2:	83 c4 10             	add    esp,0x10
100096b5:	85 c0                	test   eax,eax
100096b7:	74 dc                	je     10009695 <spng_encode_chunks+0xbf1>
100096b9:	eb 0b                	jmp    100096c6 <spng_encode_chunks+0xc22>
100096bb:	bf 50 00 00 00       	mov    edi,0x50
100096c0:	eb 04                	jmp    100096c6 <spng_encode_chunks+0xc22>
100096c2:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100096c6:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
100096cd:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
100096d1:	e9 b5 00 00 00       	jmp    1000978b <spng_encode_chunks+0xce7>
100096d6:	c7 43 70 04 00 00 00 	mov    DWORD PTR [ebx+0x70],0x4
100096dd:	e9 a9 00 00 00       	jmp    1000978b <spng_encode_chunks+0xce7>
100096e2:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
100096ea:	83 f8 04             	cmp    eax,0x4
100096ed:	0f 84 98 00 00 00    	je     1000978b <spng_encode_chunks+0xce7>
100096f3:	c7 44 24 04 54 00 00 00 	mov    DWORD PTR [esp+0x4],0x54
100096fb:	83 f8 06             	cmp    eax,0x6
100096fe:	0f 85 87 00 00 00    	jne    1000978b <spng_encode_chunks+0xce7>
10009704:	31 f6                	xor    esi,esi
10009706:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000970d:	75 44                	jne    10009753 <spng_encode_chunks+0xcaf>
1000970f:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10009717:	c7 44 24 44 49 45 4e 44 	mov    DWORD PTR [esp+0x44],0x444e4549
1000971f:	c7 44 24 48 ae 42 60 82 	mov    DWORD PTR [esp+0x48],0x826042ae
10009727:	b9 0c 00 00 00       	mov    ecx,0xc
1000972c:	8d 54 24 40          	lea    edx,[esp+0x40]
10009730:	89 d8                	mov    eax,ebx
10009732:	e8 6b c3 ff ff       	call   10005aa2 <write_data.part.19>
10009737:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000973b:	85 c0                	test   eax,eax
1000973d:	74 45                	je     10009784 <spng_encode_chunks+0xce0>
1000973f:	eb 3a                	jmp    1000977b <spng_encode_chunks+0xcd7>
10009741:	89 f2                	mov    edx,esi
10009743:	c1 e2 04             	shl    edx,0x4
10009746:	03 93 dc 08 00 00    	add    edx,DWORD PTR [ebx+0x8dc]
1000974c:	83 7a 0c 08          	cmp    DWORD PTR [edx+0xc],0x8
10009750:	74 0b                	je     1000975d <spng_encode_chunks+0xcb9>
10009752:	46                   	inc    esi
10009753:	3b b3 d8 08 00 00    	cmp    esi,DWORD PTR [ebx+0x8d8]
10009759:	72 e6                	jb     10009741 <spng_encode_chunks+0xc9d>
1000975b:	eb b2                	jmp    1000970f <spng_encode_chunks+0xc6b>
1000975d:	8b 4a 08             	mov    ecx,DWORD PTR [edx+0x8]
10009760:	83 ec 0c             	sub    esp,0xc
10009763:	ff 72 04             	push   DWORD PTR [edx+0x4]
10009766:	89 d8                	mov    eax,ebx
10009768:	e8 ed c4 ff ff       	call   10005c5a <write_chunk>
1000976d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10009771:	83 c4 10             	add    esp,0x10
10009774:	83 7c 24 04 00       	cmp    DWORD PTR [esp+0x4],0x0
10009779:	74 d7                	je     10009752 <spng_encode_chunks+0xcae>
1000977b:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
10009782:	eb 07                	jmp    1000978b <spng_encode_chunks+0xce7>
10009784:	c7 43 70 09 00 00 00 	mov    DWORD PTR [ebx+0x70],0x9
1000978b:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000978f:	83 c4 5c             	add    esp,0x5c
10009792:	5b                   	pop    ebx
10009793:	5e                   	pop    esi
10009794:	5f                   	pop    edi
10009795:	5d                   	pop    ebp
10009796:	c3                   	ret    

10009797 <encode_scanline>:
10009797:	55                   	push   ebp
10009798:	57                   	push   edi
10009799:	56                   	push   esi
1000979a:	53                   	push   ebx
1000979b:	83 ec 5c             	sub    esp,0x5c
1000979e:	85 d2                	test   edx,edx
100097a0:	74 06                	je     100097a8 <encode_scanline+0x11>
100097a2:	89 c3                	mov    ebx,eax
100097a4:	85 c0                	test   eax,eax
100097a6:	75 0a                	jne    100097b2 <encode_scanline+0x1b>
100097a8:	bf 50 00 00 00       	mov    edi,0x50
100097ad:	e9 90 04 00 00       	jmp    10009c42 <encode_scanline+0x4ab>
100097b2:	8b 80 f0 0f 00 00    	mov    eax,DWORD PTR [eax+0xff0]
100097b8:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
100097bc:	8b 83 e8 0f 00 00    	mov    eax,DWORD PTR [ebx+0xfe8]
100097c2:	c1 e0 04             	shl    eax,0x4
100097c5:	8b 84 03 ec 08 00 00 	mov    eax,DWORD PTR [ebx+eax*1+0x8ec]
100097cc:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100097d0:	48                   	dec    eax
100097d1:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100097d5:	39 c8                	cmp    eax,ecx
100097d7:	77 cf                	ja     100097a8 <encode_scanline+0x11>
100097d9:	89 d6                	mov    esi,edx
100097db:	8b ab f4 0f 00 00    	mov    ebp,DWORD PTR [ebx+0xff4]
100097e1:	8b 83 a4 09 00 00    	mov    eax,DWORD PTR [ebx+0x9a4]
100097e7:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100097eb:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
100097f1:	39 d0                	cmp    eax,edx
100097f3:	74 08                	je     100097fd <encode_scanline+0x66>
100097f5:	89 c7                	mov    edi,eax
100097f7:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100097fb:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100097fd:	f6 44 24 3c 04       	test   BYTE PTR [esp+0x3c],0x4
10009802:	75 21                	jne    10009825 <encode_scanline+0x8e>
10009804:	f7 c5 e0 00 00 00    	test   ebp,0xe0
1000980a:	74 48                	je     10009854 <encode_scanline+0xbd>
1000980c:	83 bb e0 0f 00 00 00 	cmp    DWORD PTR [ebx+0xfe0],0x0
10009813:	75 3f                	jne    10009854 <encode_scanline+0xbd>
10009815:	31 c0                	xor    eax,eax
10009817:	8b bb 9c 09 00 00    	mov    edi,DWORD PTR [ebx+0x99c]
1000981d:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10009821:	f3 aa                	rep stos BYTE PTR es:[edi],al
10009823:	eb 2f                	jmp    10009854 <encode_scanline+0xbd>
10009825:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
1000982b:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000982f:	d1 ee                	shr    esi,1
10009831:	31 c0                	xor    eax,eax
10009833:	39 c6                	cmp    esi,eax
10009835:	74 cd                	je     10009804 <encode_scanline+0x6d>
10009837:	66 8b 3c 42          	mov    di,WORD PTR [edx+eax*2]
1000983b:	66 89 7c 24 0c       	mov    WORD PTR [esp+0xc],di
10009840:	66 c1 ef 08          	shr    di,0x8
10009844:	89 f9                	mov    ecx,edi
10009846:	88 0c 42             	mov    BYTE PTR [edx+eax*2],cl
10009849:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
1000984d:	88 4c 42 01          	mov    BYTE PTR [edx+eax*2+0x1],cl
10009851:	40                   	inc    eax
10009852:	eb df                	jmp    10009833 <encode_scanline+0x9c>
10009854:	89 de                	mov    esi,ebx
10009856:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
1000985c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10009860:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009868:	85 ed                	test   ebp,ebp
1000986a:	0f 84 64 01 00 00    	je     100099d4 <encode_scanline+0x23d>
10009870:	8d 45 ff             	lea    eax,[ebp-0x1]
10009873:	21 e8                	and    eax,ebp
10009875:	75 3f                	jne    100098b6 <encode_scanline+0x11f>
10009877:	83 fd 08             	cmp    ebp,0x8
1000987a:	74 31                	je     100098ad <encode_scanline+0x116>
1000987c:	83 fd 10             	cmp    ebp,0x10
1000987f:	74 19                	je     1000989a <encode_scanline+0x103>
10009881:	83 fd 20             	cmp    ebp,0x20
10009884:	74 1b                	je     100098a1 <encode_scanline+0x10a>
10009886:	83 fd 40             	cmp    ebp,0x40
10009889:	74 1d                	je     100098a8 <encode_scanline+0x111>
1000988b:	b8 04 00 00 00       	mov    eax,0x4
10009890:	81 fd 80 00 00 00    	cmp    ebp,0x80
10009896:	75 1e                	jne    100098b6 <encode_scanline+0x11f>
10009898:	eb 13                	jmp    100098ad <encode_scanline+0x116>
1000989a:	b8 01 00 00 00       	mov    eax,0x1
1000989f:	eb 0c                	jmp    100098ad <encode_scanline+0x116>
100098a1:	b8 02 00 00 00       	mov    eax,0x2
100098a6:	eb 05                	jmp    100098ad <encode_scanline+0x116>
100098a8:	b8 03 00 00 00       	mov    eax,0x3
100098ad:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100098b1:	e9 1e 01 00 00       	jmp    100099d4 <encode_scanline+0x23d>
100098b6:	8b 86 b4 09 00 00    	mov    eax,DWORD PTR [esi+0x9b4]
100098bc:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100098c0:	8b 86 9c 09 00 00    	mov    eax,DWORD PTR [esi+0x99c]
100098c6:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100098ca:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
100098d2:	c7 44 24 34 ff ff ff 7f 	mov    DWORD PTR [esp+0x34],0x7fffffff
100098da:	31 ff                	xor    edi,edi
100098dc:	8d 47 03             	lea    eax,[edi+0x3]
100098df:	0f a3 c5             	bt     ebp,eax
100098e2:	0f 83 e2 00 00 00    	jae    100099ca <encode_scanline+0x233>
100098e8:	81 7c 24 10 ff ff ff 00 	cmp    DWORD PTR [esp+0x10],0xffffff
100098f0:	0f 87 d4 00 00 00    	ja     100099ca <encode_scanline+0x233>
100098f6:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100098fa:	f7 d8                	neg    eax
100098fc:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10009900:	c7 44 24 24 00 00 00 00 	mov    DWORD PTR [esp+0x24],0x0
10009908:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10009910:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009914:	39 4c 24 10          	cmp    DWORD PTR [esp+0x10],ecx
10009918:	0f 86 96 00 00 00    	jbe    100099b4 <encode_scanline+0x21d>
1000991e:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10009922:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10009926:	0f b6 14 08          	movzx  edx,BYTE PTR [eax+ecx*1]
1000992a:	39 4c 24 2c          	cmp    DWORD PTR [esp+0x2c],ecx
1000992e:	77 1d                	ja     1000994d <encode_scanline+0x1b6>
10009930:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009934:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10009938:	0f b6 04 08          	movzx  eax,BYTE PTR [eax+ecx*1]
1000993c:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10009940:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10009944:	8a 1c 19             	mov    bl,BYTE PTR [ecx+ebx*1]
10009947:	88 5c 24 3b          	mov    BYTE PTR [esp+0x3b],bl
1000994b:	eb 07                	jmp    10009954 <encode_scanline+0x1bd>
1000994d:	c6 44 24 3b 00       	mov    BYTE PTR [esp+0x3b],0x0
10009952:	31 c0                	xor    eax,eax
10009954:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10009958:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000995c:	8a 1c 0b             	mov    bl,BYTE PTR [ebx+ecx*1]
1000995f:	83 ff 02             	cmp    edi,0x2
10009962:	74 1f                	je     10009983 <encode_scanline+0x1ec>
10009964:	7f 07                	jg     1000996d <encode_scanline+0x1d6>
10009966:	83 ff 01             	cmp    edi,0x1
10009969:	74 20                	je     1000998b <encode_scanline+0x1f4>
1000996b:	eb 20                	jmp    1000998d <encode_scanline+0x1f6>
1000996d:	83 ff 03             	cmp    edi,0x3
10009970:	74 15                	je     10009987 <encode_scanline+0x1f0>
10009972:	83 ff 04             	cmp    edi,0x4
10009975:	75 16                	jne    1000998d <encode_scanline+0x1f6>
10009977:	0f b6 4c 24 3b       	movzx  ecx,BYTE PTR [esp+0x3b]
1000997c:	e8 66 b0 ff ff       	call   100049e7 <paeth>
10009981:	eb 08                	jmp    1000998b <encode_scanline+0x1f4>
10009983:	29 d3                	sub    ebx,edx
10009985:	eb 06                	jmp    1000998d <encode_scanline+0x1f6>
10009987:	01 d0                	add    eax,edx
10009989:	d1 f8                	sar    eax,1
1000998b:	29 c3                	sub    ebx,eax
1000998d:	0f b6 db             	movzx  ebx,bl
10009990:	83 c3 80             	add    ebx,0xffffff80
10009993:	89 d8                	mov    eax,ebx
10009995:	c1 f8 1f             	sar    eax,0x1f
10009998:	31 c3                	xor    ebx,eax
1000999a:	29 c3                	sub    ebx,eax
1000999c:	b8 80 00 00 00       	mov    eax,0x80
100099a1:	29 d8                	sub    eax,ebx
100099a3:	01 44 24 24          	add    DWORD PTR [esp+0x24],eax
100099a7:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100099ab:	ff 44 24 28          	inc    DWORD PTR [esp+0x28]
100099af:	e9 5c ff ff ff       	jmp    10009910 <encode_scanline+0x179>
100099b4:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
100099b8:	39 4c 24 24          	cmp    DWORD PTR [esp+0x24],ecx
100099bc:	7d 0c                	jge    100099ca <encode_scanline+0x233>
100099be:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100099c2:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100099c6:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100099ca:	47                   	inc    edi
100099cb:	83 ff 05             	cmp    edi,0x5
100099ce:	0f 85 08 ff ff ff    	jne    100098dc <encode_scanline+0x145>
100099d4:	8a 44 24 0c          	mov    al,BYTE PTR [esp+0xc]
100099d8:	84 c0                	test   al,al
100099da:	75 08                	jne    100099e4 <encode_scanline+0x24d>
100099dc:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100099e0:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
100099e4:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100099e8:	88 41 ff             	mov    BYTE PTR [ecx-0x1],al
100099eb:	84 c0                	test   al,al
100099ed:	0f 84 c4 00 00 00    	je     10009ab7 <encode_scanline+0x320>
100099f3:	8b 9e 98 09 00 00    	mov    ebx,DWORD PTR [esi+0x998]
100099f9:	8b ae 9c 09 00 00    	mov    ebp,DWORD PTR [esi+0x99c]
100099ff:	85 db                	test   ebx,ebx
10009a01:	0f 94 c2             	sete   dl
10009a04:	85 ed                	test   ebp,ebp
10009a06:	0f 94 c0             	sete   al
10009a09:	08 c2                	or     dl,al
10009a0b:	0f 85 ad 00 00 00    	jne    10009abe <encode_scanline+0x327>
10009a11:	83 7c 24 1c 01       	cmp    DWORD PTR [esp+0x1c],0x1
10009a16:	0f 86 a2 00 00 00    	jbe    10009abe <encode_scanline+0x327>
10009a1c:	83 7c 24 0c 04       	cmp    DWORD PTR [esp+0xc],0x4
10009a21:	0f 87 86 00 00 00    	ja     10009aad <encode_scanline+0x316>
10009a27:	8b 86 b4 09 00 00    	mov    eax,DWORD PTR [esi+0x9b4]
10009a2d:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10009a31:	f7 d8                	neg    eax
10009a33:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10009a37:	31 ff                	xor    edi,edi
10009a39:	39 7c 24 10          	cmp    DWORD PTR [esp+0x10],edi
10009a3d:	76 78                	jbe    10009ab7 <encode_scanline+0x320>
10009a3f:	0f b6 54 3d 00       	movzx  edx,BYTE PTR [ebp+edi*1+0x0]
10009a44:	39 7c 24 24          	cmp    DWORD PTR [esp+0x24],edi
10009a48:	77 16                	ja     10009a60 <encode_scanline+0x2c9>
10009a4a:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10009a4e:	0f b6 04 03          	movzx  eax,BYTE PTR [ebx+eax*1]
10009a52:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10009a56:	8a 4c 0d 00          	mov    cl,BYTE PTR [ebp+ecx*1+0x0]
10009a5a:	88 4c 24 28          	mov    BYTE PTR [esp+0x28],cl
10009a5e:	eb 07                	jmp    10009a67 <encode_scanline+0x2d0>
10009a60:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
10009a65:	31 c0                	xor    eax,eax
10009a67:	8a 0c 3b             	mov    cl,BYTE PTR [ebx+edi*1]
10009a6a:	88 4c 24 14          	mov    BYTE PTR [esp+0x14],cl
10009a6e:	83 7c 24 0c 03       	cmp    DWORD PTR [esp+0xc],0x3
10009a73:	74 14                	je     10009a89 <encode_scanline+0x2f2>
10009a75:	83 7c 24 0c 04       	cmp    DWORD PTR [esp+0xc],0x4
10009a7a:	74 13                	je     10009a8f <encode_scanline+0x2f8>
10009a7c:	29 d1                	sub    ecx,edx
10009a7e:	88 ca                	mov    dl,cl
10009a80:	83 7c 24 0c 02       	cmp    DWORD PTR [esp+0xc],0x2
10009a85:	75 12                	jne    10009a99 <encode_scanline+0x302>
10009a87:	eb 16                	jmp    10009a9f <encode_scanline+0x308>
10009a89:	01 d0                	add    eax,edx
10009a8b:	d1 f8                	sar    eax,1
10009a8d:	eb 0a                	jmp    10009a99 <encode_scanline+0x302>
10009a8f:	0f b6 4c 24 28       	movzx  ecx,BYTE PTR [esp+0x28]
10009a94:	e8 4e af ff ff       	call   100049e7 <paeth>
10009a99:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10009a9d:	29 c2                	sub    edx,eax
10009a9f:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009aa3:	88 14 38             	mov    BYTE PTR [eax+edi*1],dl
10009aa6:	47                   	inc    edi
10009aa7:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10009aab:	eb 8c                	jmp    10009a39 <encode_scanline+0x2a2>
10009aad:	bf 41 00 00 00       	mov    edi,0x41
10009ab2:	e9 d0 00 00 00       	jmp    10009b87 <encode_scanline+0x3f0>
10009ab7:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009abb:	48                   	dec    eax
10009abc:	75 0a                	jne    10009ac8 <encode_scanline+0x331>
10009abe:	bf 50 00 00 00       	mov    edi,0x50
10009ac3:	e9 bf 00 00 00       	jmp    10009b87 <encode_scanline+0x3f0>
10009ac8:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
10009ad0:	8d 9e 50 09 00 00    	lea    ebx,[esi+0x950]
10009ad6:	89 86 50 09 00 00    	mov    DWORD PTR [esi+0x950],eax
10009adc:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10009ae0:	89 86 54 09 00 00    	mov    DWORD PTR [esi+0x954],eax
10009ae6:	52                   	push   edx
10009ae7:	52                   	push   edx
10009ae8:	6a 00                	push   0x0
10009aea:	53                   	push   ebx
10009aeb:	e8 fc ff ff ff       	call   10009aec <encode_scanline+0x355>	10009aec: R_386_PC32	deflate
10009af0:	89 c7                	mov    edi,eax
10009af2:	83 c4 10             	add    esp,0x10
10009af5:	83 be 60 09 00 00 00 	cmp    DWORD PTR [esi+0x960],0x0
10009afc:	75 43                	jne    10009b41 <encode_scanline+0x3aa>
10009afe:	89 f0                	mov    eax,esi
10009b00:	e8 95 c0 ff ff       	call   10005b9a <finish_chunk>
10009b05:	89 c7                	mov    edi,eax
10009b07:	85 c0                	test   eax,eax
10009b09:	75 7c                	jne    10009b87 <encode_scanline+0x3f0>
10009b0b:	83 ec 0c             	sub    esp,0xc
10009b0e:	8d 44 24 58          	lea    eax,[esp+0x58]
10009b12:	50                   	push   eax
10009b13:	b9 00 20 00 00       	mov    ecx,0x2000
10009b18:	ba 0c d6 00 10       	mov    edx,0x1000d60c	10009b19: R_386_32	.text
10009b1d:	89 f0                	mov    eax,esi
10009b1f:	e8 fa bf ff ff       	call   10005b1e <write_header>
10009b24:	89 c7                	mov    edi,eax
10009b26:	83 c4 10             	add    esp,0x10
10009b29:	85 c0                	test   eax,eax
10009b2b:	75 5a                	jne    10009b87 <encode_scanline+0x3f0>
10009b2d:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10009b31:	89 86 5c 09 00 00    	mov    DWORD PTR [esi+0x95c],eax
10009b37:	c7 86 60 09 00 00 00 20 00 00 	mov    DWORD PTR [esi+0x960],0x2000
10009b41:	83 be 54 09 00 00 00 	cmp    DWORD PTR [esi+0x954],0x0
10009b48:	75 9c                	jne    10009ae6 <encode_scanline+0x34f>
10009b4a:	85 ff                	test   edi,edi
10009b4c:	75 34                	jne    10009b82 <encode_scanline+0x3eb>
10009b4e:	8b 86 9c 09 00 00    	mov    eax,DWORD PTR [esi+0x99c]
10009b54:	8b 96 98 09 00 00    	mov    edx,DWORD PTR [esi+0x998]
10009b5a:	89 96 9c 09 00 00    	mov    DWORD PTR [esi+0x99c],edx
10009b60:	89 86 98 09 00 00    	mov    DWORD PTR [esi+0x998],eax
10009b66:	89 f0                	mov    eax,esi
10009b68:	e8 88 af ff ff       	call   10004af5 <update_row_info>
10009b6d:	89 c7                	mov    edi,eax
10009b6f:	83 f8 4b             	cmp    eax,0x4b
10009b72:	0f 85 ca 00 00 00    	jne    10009c42 <encode_scanline+0x4ab>
10009b78:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
10009b80:	eb 63                	jmp    10009be5 <encode_scanline+0x44e>
10009b82:	bf 40 00 00 00       	mov    edi,0x40
10009b87:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009b8e:	e9 af 00 00 00       	jmp    10009c42 <encode_scanline+0x4ab>
10009b93:	83 f8 01             	cmp    eax,0x1
10009b96:	74 63                	je     10009bfb <encode_scanline+0x464>
10009b98:	83 f8 fb             	cmp    eax,0xfffffffb
10009b9b:	75 7e                	jne    10009c1b <encode_scanline+0x484>
10009b9d:	83 be 60 09 00 00 00 	cmp    DWORD PTR [esi+0x960],0x0
10009ba4:	75 52                	jne    10009bf8 <encode_scanline+0x461>
10009ba6:	89 f0                	mov    eax,esi
10009ba8:	e8 ed bf ff ff       	call   10005b9a <finish_chunk>
10009bad:	85 c0                	test   eax,eax
10009baf:	75 6a                	jne    10009c1b <encode_scanline+0x484>
10009bb1:	83 ec 0c             	sub    esp,0xc
10009bb4:	8d 44 24 58          	lea    eax,[esp+0x58]
10009bb8:	50                   	push   eax
10009bb9:	b9 00 20 00 00       	mov    ecx,0x2000
10009bbe:	ba 0c d6 00 10       	mov    edx,0x1000d60c	10009bbf: R_386_32	.text
10009bc3:	89 f0                	mov    eax,esi
10009bc5:	e8 54 bf ff ff       	call   10005b1e <write_header>
10009bca:	83 c4 10             	add    esp,0x10
10009bcd:	85 c0                	test   eax,eax
10009bcf:	75 4a                	jne    10009c1b <encode_scanline+0x484>
10009bd1:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10009bd5:	89 86 5c 09 00 00    	mov    DWORD PTR [esi+0x95c],eax
10009bdb:	c7 86 60 09 00 00 00 20 00 00 	mov    DWORD PTR [esi+0x960],0x2000
10009be5:	50                   	push   eax
10009be6:	50                   	push   eax
10009be7:	6a 04                	push   0x4
10009be9:	53                   	push   ebx
10009bea:	e8 fc ff ff ff       	call   10009beb <encode_scanline+0x454>	10009beb: R_386_PC32	deflate
10009bef:	83 c4 10             	add    esp,0x10
10009bf2:	85 c0                	test   eax,eax
10009bf4:	74 a7                	je     10009b9d <encode_scanline+0x406>
10009bf6:	eb 9b                	jmp    10009b93 <encode_scanline+0x3fc>
10009bf8:	48                   	dec    eax
10009bf9:	75 ea                	jne    10009be5 <encode_scanline+0x44e>
10009bfb:	b8 00 20 00 00       	mov    eax,0x2000
10009c00:	2b 86 60 09 00 00    	sub    eax,DWORD PTR [esi+0x960]
10009c06:	78 13                	js     10009c1b <encode_scanline+0x484>
10009c08:	3b 46 44             	cmp    eax,DWORD PTR [esi+0x44]
10009c0b:	77 0e                	ja     10009c1b <encode_scanline+0x484>
10009c0d:	89 46 44             	mov    DWORD PTR [esi+0x44],eax
10009c10:	89 f0                	mov    eax,esi
10009c12:	e8 83 bf ff ff       	call   10005b9a <finish_chunk>
10009c17:	85 c0                	test   eax,eax
10009c19:	74 07                	je     10009c22 <encode_scanline+0x48b>
10009c1b:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009c22:	f6 44 24 3c 10       	test   BYTE PTR [esp+0x3c],0x10
10009c27:	74 19                	je     10009c42 <encode_scanline+0x4ab>
10009c29:	83 ec 0c             	sub    esp,0xc
10009c2c:	56                   	push   esi
10009c2d:	e8 fc ff ff ff       	call   10009c2e <encode_scanline+0x497>	10009c2e: R_386_PC32	spng_encode_chunks
10009c32:	83 c4 10             	add    esp,0x10
10009c35:	85 c0                	test   eax,eax
10009c37:	74 09                	je     10009c42 <encode_scanline+0x4ab>
10009c39:	c7 46 70 00 00 00 00 	mov    DWORD PTR [esi+0x70],0x0
10009c40:	89 c7                	mov    edi,eax
10009c42:	89 f8                	mov    eax,edi
10009c44:	83 c4 5c             	add    esp,0x5c
10009c47:	5b                   	pop    ebx
10009c48:	5e                   	pop    esi
10009c49:	5f                   	pop    edi
10009c4a:	5d                   	pop    ebp
10009c4b:	c3                   	ret    

10009c4c <spng_encode_scanline>:
10009c4c:	53                   	push   ebx
10009c4d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10009c51:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009c55:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10009c59:	85 c0                	test   eax,eax
10009c5b:	74 28                	je     10009c85 <spng_encode_scanline+0x39>
10009c5d:	85 d2                	test   edx,edx
10009c5f:	74 24                	je     10009c85 <spng_encode_scanline+0x39>
10009c61:	83 78 70 05          	cmp    DWORD PTR [eax+0x70],0x5
10009c65:	77 25                	ja     10009c8c <spng_encode_scanline+0x40>
10009c67:	8b 98 e8 0f 00 00    	mov    ebx,DWORD PTR [eax+0xfe8]
10009c6d:	81 c3 8e 00 00 00    	add    ebx,0x8e
10009c73:	c1 e3 04             	shl    ebx,0x4
10009c76:	8b 5c 18 0c          	mov    ebx,DWORD PTR [eax+ebx*1+0xc]
10009c7a:	4b                   	dec    ebx
10009c7b:	39 cb                	cmp    ebx,ecx
10009c7d:	77 14                	ja     10009c93 <spng_encode_scanline+0x47>
10009c7f:	5b                   	pop    ebx
10009c80:	e9 12 fb ff ff       	jmp    10009797 <encode_scanline>
10009c85:	b8 01 00 00 00       	mov    eax,0x1
10009c8a:	eb 0c                	jmp    10009c98 <spng_encode_scanline+0x4c>
10009c8c:	b8 4b 00 00 00       	mov    eax,0x4b
10009c91:	eb 05                	jmp    10009c98 <spng_encode_scanline+0x4c>
10009c93:	b8 42 00 00 00       	mov    eax,0x42
10009c98:	5b                   	pop    ebx
10009c99:	c3                   	ret    

10009c9a <encode_row>:
10009c9a:	55                   	push   ebp
10009c9b:	57                   	push   edi
10009c9c:	56                   	push   esi
10009c9d:	53                   	push   ebx
10009c9e:	83 ec 2c             	sub    esp,0x2c
10009ca1:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10009ca5:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
10009ca9:	85 c0                	test   eax,eax
10009cab:	0f 84 6a 01 00 00    	je     10009e1b <encode_row+0x181>
10009cb1:	85 d2                	test   edx,edx
10009cb3:	0f 84 62 01 00 00    	je     10009e1b <encode_row+0x181>
10009cb9:	89 c3                	mov    ebx,eax
10009cbb:	8b a8 e8 0f 00 00    	mov    ebp,DWORD PTR [eax+0xfe8]
10009cc1:	80 b8 fc 00 00 00 00 	cmp    BYTE PTR [eax+0xfc],0x0
10009cc8:	74 0a                	je     10009cd4 <encode_row+0x3a>
10009cca:	83 fd 06             	cmp    ebp,0x6
10009ccd:	0f 94 44 24 18       	sete   BYTE PTR [esp+0x18]
10009cd2:	75 0d                	jne    10009ce1 <encode_row+0x47>
10009cd4:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009cd8:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10009cdc:	e9 2c 01 00 00       	jmp    10009e0d <encode_row+0x173>
10009ce1:	0f b6 80 f8 00 00 00 	movzx  eax,BYTE PTR [eax+0xf8]
10009ce8:	89 04 24             	mov    DWORD PTR [esp],eax
10009ceb:	83 f8 07             	cmp    eax,0x7
10009cee:	76 28                	jbe    10009d18 <encode_row+0x7e>
10009cf0:	8b 83 b8 09 00 00    	mov    eax,DWORD PTR [ebx+0x9b8]
10009cf6:	89 04 24             	mov    DWORD PTR [esp],eax
10009cf9:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10009d01:	31 c0                	xor    eax,eax
10009d03:	8d 95 8e 00 00 00    	lea    edx,[ebp+0x8e]
10009d09:	c1 e2 04             	shl    edx,0x4
10009d0c:	8d 3c 13             	lea    edi,[ebx+edx*1]
10009d0f:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10009d13:	e9 b5 00 00 00       	jmp    10009dcd <encode_row+0x133>
10009d18:	8b 83 98 09 00 00    	mov    eax,DWORD PTR [ebx+0x998]
10009d1e:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10009d22:	be 08 00 00 00       	mov    esi,0x8
10009d27:	89 f0                	mov    eax,esi
10009d29:	31 d2                	xor    edx,edx
10009d2b:	f7 34 24             	div    DWORD PTR [esp]
10009d2e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10009d32:	b8 01 00 00 00       	mov    eax,0x1
10009d37:	8a 0c 24             	mov    cl,BYTE PTR [esp]
10009d3a:	d3 e0                	shl    eax,cl
10009d3c:	48                   	dec    eax
10009d3d:	88 44 24 17          	mov    BYTE PTR [esp+0x17],al
10009d41:	2b 34 24             	sub    esi,DWORD PTR [esp]
10009d44:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10009d48:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10009d4c:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009d50:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10009d54:	f3 aa                	rep stos BYTE PTR es:[edi],al
10009d56:	31 ff                	xor    edi,edi
10009d58:	8d 85 8e 00 00 00    	lea    eax,[ebp+0x8e]
10009d5e:	c1 e0 04             	shl    eax,0x4
10009d61:	01 d8                	add    eax,ebx
10009d63:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10009d67:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10009d6b:	39 38                	cmp    DWORD PTR [eax],edi
10009d6d:	76 56                	jbe    10009dc5 <encode_row+0x12b>
10009d6f:	8b 0c ad 3c d6 00 10 	mov    ecx,DWORD PTR [ebp*4+0x1000d63c]	10009d72: R_386_32	.text
10009d76:	0f af cf             	imul   ecx,edi
10009d79:	03 0c ad 74 d6 00 10 	add    ecx,DWORD PTR [ebp*4+0x1000d674]	10009d7c: R_386_32	.text
10009d80:	89 c8                	mov    eax,ecx
10009d82:	31 d2                	xor    edx,edx
10009d84:	f7 74 24 1c          	div    DWORD PTR [esp+0x1c]
10009d88:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10009d8c:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10009d90:	0f af 0c 24          	imul   ecx,DWORD PTR [esp]
10009d94:	83 e1 07             	and    ecx,0x7
10009d97:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10009d9b:	29 ca                	sub    edx,ecx
10009d9d:	89 d1                	mov    ecx,edx
10009d9f:	d3 f8                	sar    eax,cl
10009da1:	22 44 24 17          	and    al,BYTE PTR [esp+0x17]
10009da5:	0f b6 c0             	movzx  eax,al
10009da8:	89 f1                	mov    ecx,esi
10009daa:	d3 e0                	shl    eax,cl
10009dac:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10009db0:	08 02                	or     BYTE PTR [edx],al
10009db2:	2b 34 24             	sub    esi,DWORD PTR [esp]
10009db5:	83 fe 07             	cmp    esi,0x7
10009db8:	76 08                	jbe    10009dc2 <encode_row+0x128>
10009dba:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
10009dbe:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10009dc2:	47                   	inc    edi
10009dc3:	eb a2                	jmp    10009d67 <encode_row+0xcd>
10009dc5:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
10009dcb:	eb 3c                	jmp    10009e09 <encode_row+0x16f>
10009dcd:	8b 93 98 09 00 00    	mov    edx,DWORD PTR [ebx+0x998]
10009dd3:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10009dd7:	39 07                	cmp    DWORD PTR [edi],eax
10009dd9:	76 2e                	jbe    10009e09 <encode_row+0x16f>
10009ddb:	03 54 24 0c          	add    edx,DWORD PTR [esp+0xc]
10009ddf:	8b 34 ad 3c d6 00 10 	mov    esi,DWORD PTR [ebp*4+0x1000d63c]	10009de2: R_386_32	.text
10009de6:	0f af f0             	imul   esi,eax
10009de9:	03 34 ad 74 d6 00 10 	add    esi,DWORD PTR [ebp*4+0x1000d674]	10009dec: R_386_32	.text
10009df0:	0f af 34 24          	imul   esi,DWORD PTR [esp]
10009df4:	03 74 24 04          	add    esi,DWORD PTR [esp+0x4]
10009df8:	89 d7                	mov    edi,edx
10009dfa:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
10009dfd:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009dff:	40                   	inc    eax
10009e00:	8b 34 24             	mov    esi,DWORD PTR [esp]
10009e03:	01 74 24 0c          	add    DWORD PTR [esp+0xc],esi
10009e07:	eb c4                	jmp    10009dcd <encode_row+0x133>
10009e09:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10009e0d:	89 d8                	mov    eax,ebx
10009e0f:	83 c4 2c             	add    esp,0x2c
10009e12:	5b                   	pop    ebx
10009e13:	5e                   	pop    esi
10009e14:	5f                   	pop    edi
10009e15:	5d                   	pop    ebp
10009e16:	e9 7c f9 ff ff       	jmp    10009797 <encode_scanline>
10009e1b:	b8 50 00 00 00       	mov    eax,0x50
10009e20:	83 c4 2c             	add    esp,0x2c
10009e23:	5b                   	pop    ebx
10009e24:	5e                   	pop    esi
10009e25:	5f                   	pop    edi
10009e26:	5d                   	pop    ebp
10009e27:	c3                   	ret    

10009e28 <spng_encode_row>:
10009e28:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10009e2c:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10009e30:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10009e34:	85 c0                	test   eax,eax
10009e36:	74 17                	je     10009e4f <spng_encode_row+0x27>
10009e38:	85 d2                	test   edx,edx
10009e3a:	74 13                	je     10009e4f <spng_encode_row+0x27>
10009e3c:	83 78 70 05          	cmp    DWORD PTR [eax+0x70],0x5
10009e40:	77 13                	ja     10009e55 <spng_encode_row+0x2d>
10009e42:	39 88 ac 09 00 00    	cmp    DWORD PTR [eax+0x9ac],ecx
10009e48:	77 11                	ja     10009e5b <spng_encode_row+0x33>
10009e4a:	e9 4b fe ff ff       	jmp    10009c9a <encode_row>
10009e4f:	b8 01 00 00 00       	mov    eax,0x1
10009e54:	c3                   	ret    
10009e55:	b8 4b 00 00 00       	mov    eax,0x4b
10009e5a:	c3                   	ret    
10009e5b:	b8 42 00 00 00       	mov    eax,0x42
10009e60:	c3                   	ret    

10009e61 <spng_encode_image>:
10009e61:	55                   	push   ebp
10009e62:	57                   	push   edi
10009e63:	56                   	push   esi
10009e64:	53                   	push   ebx
10009e65:	83 ec 2c             	sub    esp,0x2c
10009e68:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
10009e6c:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
10009e70:	85 db                	test   ebx,ebx
10009e72:	75 0a                	jne    10009e7e <spng_encode_image+0x1d>
10009e74:	b8 01 00 00 00       	mov    eax,0x1
10009e79:	e9 1f 03 00 00       	jmp    1000a19d <spng_encode_image+0x33c>
10009e7e:	b8 46 00 00 00       	mov    eax,0x46
10009e83:	83 7b 70 00          	cmp    DWORD PTR [ebx+0x70],0x0
10009e87:	0f 84 10 03 00 00    	je     1000a19d <spng_encode_image+0x33c>
10009e8d:	b8 51 00 00 00       	mov    eax,0x51
10009e92:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
10009e96:	0f 84 01 03 00 00    	je     1000a19d <spng_encode_image+0x33c>
10009e9c:	8a 8b ac 00 00 00    	mov    cl,BYTE PTR [ebx+0xac]
10009ea2:	b8 0f 00 00 00       	mov    eax,0xf
10009ea7:	f6 c1 01             	test   cl,0x1
10009eaa:	0f 84 ed 02 00 00    	je     1000a19d <spng_encode_image+0x33c>
10009eb0:	b8 47 00 00 00       	mov    eax,0x47
10009eb5:	81 7c 24 4c 00 01 00 00 	cmp    DWORD PTR [esp+0x4c],0x100
10009ebd:	0f 85 da 02 00 00    	jne    1000a19d <spng_encode_image+0x33c>
10009ec3:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10009ecb:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
10009ed1:	80 fa 03             	cmp    dl,0x3
10009ed4:	75 15                	jne    10009eeb <spng_encode_image+0x8a>
10009ed6:	b8 4c 00 00 00       	mov    eax,0x4c
10009edb:	80 e1 02             	and    cl,0x2
10009ede:	0f 84 b9 02 00 00    	je     1000a19d <spng_encode_image+0x33c>
10009ee4:	b8 01 00 00 00       	mov    eax,0x1
10009ee9:	eb 20                	jmp    10009f0b <spng_encode_image+0xaa>
10009eeb:	b8 03 00 00 00       	mov    eax,0x3
10009ef0:	80 fa 02             	cmp    dl,0x2
10009ef3:	74 16                	je     10009f0b <spng_encode_image+0xaa>
10009ef5:	b8 02 00 00 00       	mov    eax,0x2
10009efa:	80 fa 04             	cmp    dl,0x4
10009efd:	74 0c                	je     10009f0b <spng_encode_image+0xaa>
10009eff:	31 c0                	xor    eax,eax
10009f01:	80 fa 06             	cmp    dl,0x6
10009f04:	0f 94 c0             	sete   al
10009f07:	8d 44 40 01          	lea    eax,[eax+eax*2+0x1]
10009f0b:	89 83 b0 09 00 00    	mov    DWORD PTR [ebx+0x9b0],eax
10009f11:	8d 4c 24 1c          	lea    ecx,[esp+0x1c]
10009f15:	ba 00 01 00 00       	mov    edx,0x100
10009f1a:	89 d8                	mov    eax,ebx
10009f1c:	e8 9c a9 ff ff       	call   100048bd <calculate_image_size>
10009f21:	85 c0                	test   eax,eax
10009f23:	0f 85 69 02 00 00    	jne    1000a192 <spng_encode_image+0x331>
10009f29:	89 ef                	mov    edi,ebp
10009f2b:	83 e7 01             	and    edi,0x1
10009f2e:	75 1e                	jne    10009f4e <spng_encode_image+0xed>
10009f30:	83 7c 24 44 00       	cmp    DWORD PTR [esp+0x44],0x0
10009f35:	0f 84 39 ff ff ff    	je     10009e74 <spng_encode_image+0x13>
10009f3b:	b8 42 00 00 00       	mov    eax,0x42
10009f40:	8b 74 24 48          	mov    esi,DWORD PTR [esp+0x48]
10009f44:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
10009f48:	0f 85 4f 02 00 00    	jne    1000a19d <spng_encode_image+0x33c>
10009f4e:	83 ec 0c             	sub    esp,0xc
10009f51:	53                   	push   ebx
10009f52:	e8 fc ff ff ff       	call   10009f53 <spng_encode_image+0xf2>	10009f53: R_386_PC32	spng_encode_chunks
10009f57:	83 c4 10             	add    esp,0x10
10009f5a:	85 c0                	test   eax,eax
10009f5c:	0f 85 30 02 00 00    	jne    1000a192 <spng_encode_image+0x331>
10009f62:	89 d8                	mov    eax,ebx
10009f64:	e8 4b bd ff ff       	call   10005cb4 <calculate_subimages>
10009f69:	85 c0                	test   eax,eax
10009f6b:	0f 85 21 02 00 00    	jne    1000a192 <spng_encode_image+0x331>
10009f71:	8a 93 f8 00 00 00    	mov    dl,BYTE PTR [ebx+0xf8]
10009f77:	b8 01 00 00 00       	mov    eax,0x1
10009f7c:	80 fa 07             	cmp    dl,0x7
10009f7f:	76 0f                	jbe    10009f90 <spng_encode_image+0x12f>
10009f81:	88 d0                	mov    al,dl
10009f83:	c0 e8 03             	shr    al,0x3
10009f86:	0f b6 c0             	movzx  eax,al
10009f89:	0f af 83 b0 09 00 00 	imul   eax,DWORD PTR [ebx+0x9b0]
10009f90:	89 83 b4 09 00 00    	mov    DWORD PTR [ebx+0x9b4],eax
10009f96:	83 7b 78 00          	cmp    DWORD PTR [ebx+0x78],0x0
10009f9a:	75 0a                	jne    10009fa6 <spng_encode_image+0x145>
10009f9c:	c7 83 f4 0f 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xff4],0x0
10009fa6:	80 bb f9 00 00 00 03 	cmp    BYTE PTR [ebx+0xf9],0x3
10009fad:	74 0e                	je     10009fbd <spng_encode_image+0x15c>
10009faf:	80 fa 07             	cmp    dl,0x7
10009fb2:	76 09                	jbe    10009fbd <spng_encode_image+0x15c>
10009fb4:	83 bb f4 0f 00 00 08 	cmp    DWORD PTR [ebx+0xff4],0x8
10009fbb:	75 0c                	jne    10009fc9 <spng_encode_image+0x168>
10009fbd:	c7 83 f4 0f 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xff4],0x0
10009fc7:	eb 09                	jmp    10009fd2 <spng_encode_image+0x171>
10009fc9:	83 bb f4 0f 00 00 00 	cmp    DWORD PTR [ebx+0xff4],0x0
10009fd0:	75 0a                	jne    10009fdc <spng_encode_image+0x17b>
10009fd2:	c7 83 84 00 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x84],0x0
10009fdc:	8d 53 78             	lea    edx,[ebx+0x78]
10009fdf:	89 d8                	mov    eax,ebx
10009fe1:	e8 2e b1 ff ff       	call   10005114 <spng__deflate_init>
10009fe6:	85 c0                	test   eax,eax
10009fe8:	0f 85 a4 01 00 00    	jne    1000a192 <spng_encode_image+0x331>
10009fee:	8b 83 bc 09 00 00    	mov    eax,DWORD PTR [ebx+0x9bc]
10009ff4:	05 8e 00 00 00       	add    eax,0x8e
10009ff9:	c1 e0 04             	shl    eax,0x4
10009ffc:	8b 74 03 0c          	mov    esi,DWORD PTR [ebx+eax*1+0xc]
1000a000:	83 c6 20             	add    esi,0x20
1000a003:	b8 03 00 00 00       	mov    eax,0x3
1000a008:	83 fe 1f             	cmp    esi,0x1f
1000a00b:	0f 86 8c 01 00 00    	jbe    1000a19d <spng_encode_image+0x33c>
1000a011:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a014:	89 f2                	mov    edx,esi
1000a016:	e8 91 b1 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a01b:	89 83 88 09 00 00    	mov    DWORD PTR [ebx+0x988],eax
1000a021:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a024:	89 f2                	mov    edx,esi
1000a026:	e8 81 b1 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a02b:	89 83 8c 09 00 00    	mov    DWORD PTR [ebx+0x98c],eax
1000a031:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000a037:	85 c0                	test   eax,eax
1000a039:	74 04                	je     1000a03f <spng_encode_image+0x1de>
1000a03b:	85 d2                	test   edx,edx
1000a03d:	75 11                	jne    1000a050 <spng_encode_image+0x1ef>
1000a03f:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000a046:	b8 02 00 00 00       	mov    eax,0x2
1000a04b:	e9 4d 01 00 00       	jmp    1000a19d <spng_encode_image+0x33c>
1000a050:	83 c2 10             	add    edx,0x10
1000a053:	89 93 98 09 00 00    	mov    DWORD PTR [ebx+0x998],edx
1000a059:	83 c0 10             	add    eax,0x10
1000a05c:	89 83 9c 09 00 00    	mov    DWORD PTR [ebx+0x99c],eax
1000a062:	83 bb f4 0f 00 00 00 	cmp    DWORD PTR [ebx+0xff4],0x0
1000a069:	74 1d                	je     1000a088 <spng_encode_image+0x227>
1000a06b:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a06e:	89 f2                	mov    edx,esi
1000a070:	e8 37 b1 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a075:	89 83 94 09 00 00    	mov    DWORD PTR [ebx+0x994],eax
1000a07b:	85 c0                	test   eax,eax
1000a07d:	74 c0                	je     1000a03f <spng_encode_image+0x1de>
1000a07f:	83 c0 10             	add    eax,0x10
1000a082:	89 83 a4 09 00 00    	mov    DWORD PTR [ebx+0x9a4],eax
1000a088:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000a08c:	8b 83 f4 00 00 00    	mov    eax,DWORD PTR [ebx+0xf4]
1000a092:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000a096:	c7 43 6c 00 01 00 00 	mov    DWORD PTR [ebx+0x6c],0x100
1000a09d:	c7 83 60 09 00 00 00 20 00 00 	mov    DWORD PTR [ebx+0x960],0x2000
1000a0a7:	83 ec 0c             	sub    esp,0xc
1000a0aa:	8d 83 5c 09 00 00    	lea    eax,[ebx+0x95c]
1000a0b0:	50                   	push   eax
1000a0b1:	b9 00 20 00 00       	mov    ecx,0x2000
1000a0b6:	ba 0c d6 00 10       	mov    edx,0x1000d60c	1000a0b7: R_386_32	.text
1000a0bb:	89 d8                	mov    eax,ebx
1000a0bd:	e8 5c ba ff ff       	call   10005b1e <write_header>
1000a0c2:	83 c4 10             	add    esp,0x10
1000a0c5:	85 c0                	test   eax,eax
1000a0c7:	0f 85 c5 00 00 00    	jne    1000a192 <spng_encode_image+0x331>
1000a0cd:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
1000a0d4:	74 07                	je     1000a0dd <spng_encode_image+0x27c>
1000a0d6:	80 8b f0 0f 00 00 01 	or     BYTE PTR [ebx+0xff0],0x1
1000a0dd:	8a 93 f0 0f 00 00    	mov    dl,BYTE PTR [ebx+0xff0]
1000a0e3:	88 d1                	mov    cl,dl
1000a0e5:	83 c9 02             	or     ecx,0x2
1000a0e8:	88 8b f0 0f 00 00    	mov    BYTE PTR [ebx+0xff0],cl
1000a0ee:	80 bb f8 00 00 00 10 	cmp    BYTE PTR [ebx+0xf8],0x10
1000a0f5:	75 09                	jne    1000a100 <spng_encode_image+0x29f>
1000a0f7:	83 ca 06             	or     edx,0x6
1000a0fa:	88 93 f0 0f 00 00    	mov    BYTE PTR [ebx+0xff0],dl
1000a100:	83 e5 02             	and    ebp,0x2
1000a103:	74 07                	je     1000a10c <spng_encode_image+0x2ab>
1000a105:	80 8b f0 0f 00 00 10 	or     BYTE PTR [ebx+0xff0],0x10
1000a10c:	8d ab e0 08 00 00    	lea    ebp,[ebx+0x8e0]
1000a112:	8b 93 e8 0f 00 00    	mov    edx,DWORD PTR [ebx+0xfe8]
1000a118:	89 d1                	mov    ecx,edx
1000a11a:	c1 e1 04             	shl    ecx,0x4
1000a11d:	01 e9                	add    ecx,ebp
1000a11f:	83 39 00             	cmp    DWORD PTR [ecx],0x0
1000a122:	75 09                	jne    1000a12d <spng_encode_image+0x2cc>
1000a124:	42                   	inc    edx
1000a125:	89 93 e8 0f 00 00    	mov    DWORD PTR [ebx+0xfe8],edx
1000a12b:	eb e5                	jmp    1000a112 <spng_encode_image+0x2b1>
1000a12d:	83 79 04 00          	cmp    DWORD PTR [ecx+0x4],0x0
1000a131:	74 f1                	je     1000a124 <spng_encode_image+0x2c3>
1000a133:	f6 83 f0 0f 00 00 01 	test   BYTE PTR [ebx+0xff0],0x1
1000a13a:	74 0d                	je     1000a149 <spng_encode_image+0x2e8>
1000a13c:	8b 14 95 58 d6 00 10 	mov    edx,DWORD PTR [edx*4+0x1000d658]	1000a13f: R_386_32	.text
1000a143:	89 93 e4 0f 00 00    	mov    DWORD PTR [ebx+0xfe4],edx
1000a149:	8b 93 b4 09 00 00    	mov    edx,DWORD PTR [ebx+0x9b4]
1000a14f:	89 93 b8 09 00 00    	mov    DWORD PTR [ebx+0x9b8],edx
1000a155:	c7 43 70 05 00 00 00 	mov    DWORD PTR [ebx+0x70],0x5
1000a15c:	85 ff                	test   edi,edi
1000a15e:	74 09                	je     1000a169 <spng_encode_image+0x308>
1000a160:	80 8b f0 0f 00 00 08 	or     BYTE PTR [ebx+0xff0],0x8
1000a167:	eb 34                	jmp    1000a19d <spng_encode_image+0x33c>
1000a169:	89 f0                	mov    eax,esi
1000a16b:	31 d2                	xor    edx,edx
1000a16d:	f7 74 24 0c          	div    DWORD PTR [esp+0xc]
1000a171:	89 c6                	mov    esi,eax
1000a173:	8b 93 e4 0f 00 00    	mov    edx,DWORD PTR [ebx+0xfe4]
1000a179:	0f af d6             	imul   edx,esi
1000a17c:	03 54 24 44          	add    edx,DWORD PTR [esp+0x44]
1000a180:	89 f1                	mov    ecx,esi
1000a182:	89 d8                	mov    eax,ebx
1000a184:	e8 11 fb ff ff       	call   10009c9a <encode_row>
1000a189:	85 c0                	test   eax,eax
1000a18b:	74 e6                	je     1000a173 <spng_encode_image+0x312>
1000a18d:	83 f8 4b             	cmp    eax,0x4b
1000a190:	74 09                	je     1000a19b <spng_encode_image+0x33a>
1000a192:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000a199:	eb 02                	jmp    1000a19d <spng_encode_image+0x33c>
1000a19b:	31 c0                	xor    eax,eax
1000a19d:	83 c4 2c             	add    esp,0x2c
1000a1a0:	5b                   	pop    ebx
1000a1a1:	5e                   	pop    esi
1000a1a2:	5f                   	pop    edi
1000a1a3:	5d                   	pop    ebp
1000a1a4:	c3                   	ret    

1000a1a5 <spng_ctx_new2>:
1000a1a5:	57                   	push   edi
1000a1a6:	56                   	push   esi
1000a1a7:	53                   	push   ebx
1000a1a8:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a1ac:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000a1b0:	85 f6                	test   esi,esi
1000a1b2:	75 07                	jne    1000a1bb <spng_ctx_new2+0x16>
1000a1b4:	31 c0                	xor    eax,eax
1000a1b6:	e9 b7 00 00 00       	jmp    1000a272 <spng_ctx_new2+0xcd>
1000a1bb:	89 c3                	mov    ebx,eax
1000a1bd:	83 e3 03             	and    ebx,0x3
1000a1c0:	39 c3                	cmp    ebx,eax
1000a1c2:	75 f0                	jne    1000a1b4 <spng_ctx_new2+0xf>
1000a1c4:	83 3e 00             	cmp    DWORD PTR [esi],0x0
1000a1c7:	74 eb                	je     1000a1b4 <spng_ctx_new2+0xf>
1000a1c9:	83 7e 04 00          	cmp    DWORD PTR [esi+0x4],0x0
1000a1cd:	74 e5                	je     1000a1b4 <spng_ctx_new2+0xf>
1000a1cf:	8b 46 08             	mov    eax,DWORD PTR [esi+0x8]
1000a1d2:	85 c0                	test   eax,eax
1000a1d4:	74 de                	je     1000a1b4 <spng_ctx_new2+0xf>
1000a1d6:	83 7e 0c 00          	cmp    DWORD PTR [esi+0xc],0x0
1000a1da:	74 d8                	je     1000a1b4 <spng_ctx_new2+0xf>
1000a1dc:	52                   	push   edx
1000a1dd:	52                   	push   edx
1000a1de:	68 f8 0f 00 00       	push   0xff8
1000a1e3:	6a 01                	push   0x1
1000a1e5:	ff d0                	call   eax
1000a1e7:	83 c4 10             	add    esp,0x10
1000a1ea:	85 c0                	test   eax,eax
1000a1ec:	74 c6                	je     1000a1b4 <spng_ctx_new2+0xf>
1000a1ee:	8d 78 58             	lea    edi,[eax+0x58]
1000a1f1:	b9 04 00 00 00       	mov    ecx,0x4
1000a1f6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a1f8:	c7 80 d4 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xd4],0x7fffffff
1000a202:	c7 80 d8 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xd8],0x7fffffff
1000a20c:	c7 80 dc 00 00 00 ff ff ff 7f 	mov    DWORD PTR [eax+0xdc],0x7fffffff
1000a216:	c7 80 e0 00 00 00 ff ff ff ff 	mov    DWORD PTR [eax+0xe0],0xffffffff
1000a220:	c7 40 70 01 00 00 00 	mov    DWORD PTR [eax+0x70],0x1
1000a227:	c7 80 e8 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0xe8],0x0
1000a231:	c7 80 ec 00 00 00 01 00 00 00 	mov    DWORD PTR [eax+0xec],0x1
1000a23b:	8d 78 78             	lea    edi,[eax+0x78]
1000a23e:	be b4 d5 00 10       	mov    esi,0x1000d5b4	1000a23f: R_386_32	.text
1000a243:	b9 05 00 00 00       	mov    ecx,0x5
1000a248:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a24a:	8d b8 8c 00 00 00    	lea    edi,[eax+0x8c]
1000a250:	be a0 d5 00 10       	mov    esi,0x1000d5a0	1000a251: R_386_32	.text
1000a255:	b9 05 00 00 00       	mov    ecx,0x5
1000a25a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a25c:	c7 80 f4 0f 00 00 f8 00 00 00 	mov    DWORD PTR [eax+0xff4],0xf8
1000a266:	89 58 68             	mov    DWORD PTR [eax+0x68],ebx
1000a269:	80 e3 02             	and    bl,0x2
1000a26c:	74 04                	je     1000a272 <spng_ctx_new2+0xcd>
1000a26e:	80 48 74 08          	or     BYTE PTR [eax+0x74],0x8
1000a272:	5b                   	pop    ebx
1000a273:	5e                   	pop    esi
1000a274:	5f                   	pop    edi
1000a275:	c3                   	ret    

1000a276 <spng_ctx_new>:
1000a276:	57                   	push   edi
1000a277:	56                   	push   esi
1000a278:	83 ec 14             	sub    esp,0x14
1000a27b:	89 e7                	mov    edi,esp
1000a27d:	be c4 d3 00 10       	mov    esi,0x1000d3c4	1000a27e: R_386_32	.text
1000a282:	b9 04 00 00 00       	mov    ecx,0x4
1000a287:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a289:	50                   	push   eax
1000a28a:	50                   	push   eax
1000a28b:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000a28f:	8d 44 24 0c          	lea    eax,[esp+0xc]
1000a293:	50                   	push   eax
1000a294:	e8 fc ff ff ff       	call   1000a295 <spng_ctx_new+0x1f>	1000a295: R_386_PC32	spng_ctx_new2
1000a299:	83 c4 24             	add    esp,0x24
1000a29c:	5e                   	pop    esi
1000a29d:	5f                   	pop    edi
1000a29e:	c3                   	ret    

1000a29f <spng_ctx_free>:
1000a29f:	57                   	push   edi
1000a2a0:	56                   	push   esi
1000a2a1:	53                   	push   ebx
1000a2a2:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a2a6:	85 db                	test   ebx,ebx
1000a2a8:	0f 84 98 01 00 00    	je     1000a446 <spng_ctx_free+0x1a7>
1000a2ae:	f6 43 74 01          	test   BYTE PTR [ebx+0x74],0x1
1000a2b2:	74 0f                	je     1000a2c3 <spng_ctx_free+0x24>
1000a2b4:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000a2b7:	85 d2                	test   edx,edx
1000a2b9:	74 08                	je     1000a2c3 <spng_ctx_free+0x24>
1000a2bb:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a2be:	e8 10 af ff ff       	call   100051d3 <spng__free.isra.3>
1000a2c3:	80 bb a9 00 00 00 00 	cmp    BYTE PTR [ebx+0xa9],0x0
1000a2ca:	78 0e                	js     1000a2da <spng_ctx_free+0x3b>
1000a2cc:	8b 93 d4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d4]
1000a2d2:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a2d5:	e8 f9 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a2da:	f6 83 a8 00 00 00 08 	test   BYTE PTR [ebx+0xa8],0x8
1000a2e1:	75 0e                	jne    1000a2f1 <spng_ctx_free+0x52>
1000a2e3:	8b 93 78 05 00 00    	mov    edx,DWORD PTR [ebx+0x578]
1000a2e9:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a2ec:	e8 e2 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a2f1:	83 bb b8 08 00 00 00 	cmp    DWORD PTR [ebx+0x8b8],0x0
1000a2f8:	74 30                	je     1000a32a <spng_ctx_free+0x8b>
1000a2fa:	f6 83 a9 00 00 00 10 	test   BYTE PTR [ebx+0xa9],0x10
1000a301:	75 27                	jne    1000a32a <spng_ctx_free+0x8b>
1000a303:	31 f6                	xor    esi,esi
1000a305:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
1000a30b:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a30e:	39 b3 b4 08 00 00    	cmp    DWORD PTR [ebx+0x8b4],esi
1000a314:	76 0f                	jbe    1000a325 <spng_ctx_free+0x86>
1000a316:	6b ce 5c             	imul   ecx,esi,0x5c
1000a319:	8b 54 0a 58          	mov    edx,DWORD PTR [edx+ecx*1+0x58]
1000a31d:	e8 b1 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a322:	46                   	inc    esi
1000a323:	eb e0                	jmp    1000a305 <spng_ctx_free+0x66>
1000a325:	e8 a9 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a32a:	31 ff                	xor    edi,edi
1000a32c:	83 bb 8c 05 00 00 00 	cmp    DWORD PTR [ebx+0x58c],0x0
1000a333:	74 45                	je     1000a37a <spng_ctx_free+0xdb>
1000a335:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
1000a33b:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a33e:	39 bb 88 05 00 00    	cmp    DWORD PTR [ebx+0x588],edi
1000a344:	76 2f                	jbe    1000a375 <spng_ctx_free+0xd6>
1000a346:	80 bb a8 00 00 00 00 	cmp    BYTE PTR [ebx+0xa8],0x0
1000a34d:	78 26                	js     1000a375 <spng_ctx_free+0xd6>
1000a34f:	6b f7 70             	imul   esi,edi,0x70
1000a352:	8b 54 32 04          	mov    edx,DWORD PTR [edx+esi*1+0x4]
1000a356:	e8 78 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a35b:	03 b3 8c 05 00 00    	add    esi,DWORD PTR [ebx+0x58c]
1000a361:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
1000a365:	74 0b                	je     1000a372 <spng_ctx_free+0xd3>
1000a367:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
1000a36a:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a36d:	e8 61 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a372:	47                   	inc    edi
1000a373:	eb c0                	jmp    1000a335 <spng_ctx_free+0x96>
1000a375:	e8 59 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a37a:	83 bb dc 08 00 00 00 	cmp    DWORD PTR [ebx+0x8dc],0x0
1000a381:	74 32                	je     1000a3b5 <spng_ctx_free+0x116>
1000a383:	f6 83 aa 00 00 00 01 	test   BYTE PTR [ebx+0xaa],0x1
1000a38a:	75 29                	jne    1000a3b5 <spng_ctx_free+0x116>
1000a38c:	31 f6                	xor    esi,esi
1000a38e:	8b 93 dc 08 00 00    	mov    edx,DWORD PTR [ebx+0x8dc]
1000a394:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a397:	39 b3 d8 08 00 00    	cmp    DWORD PTR [ebx+0x8d8],esi
1000a39d:	76 11                	jbe    1000a3b0 <spng_ctx_free+0x111>
1000a39f:	89 f1                	mov    ecx,esi
1000a3a1:	c1 e1 04             	shl    ecx,0x4
1000a3a4:	8b 54 0a 08          	mov    edx,DWORD PTR [edx+ecx*1+0x8]
1000a3a8:	e8 26 ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a3ad:	46                   	inc    esi
1000a3ae:	eb de                	jmp    1000a38e <spng_ctx_free+0xef>
1000a3b0:	e8 1e ae ff ff       	call   100051d3 <spng__free.isra.3>
1000a3b5:	8d 83 50 09 00 00    	lea    eax,[ebx+0x950]
1000a3bb:	f6 43 74 04          	test   BYTE PTR [ebx+0x74],0x4
1000a3bf:	74 0b                	je     1000a3cc <spng_ctx_free+0x12d>
1000a3c1:	83 ec 0c             	sub    esp,0xc
1000a3c4:	50                   	push   eax
1000a3c5:	e8 fc ff ff ff       	call   1000a3c6 <spng_ctx_free+0x127>	1000a3c6: R_386_PC32	deflateEnd
1000a3ca:	eb 09                	jmp    1000a3d5 <spng_ctx_free+0x136>
1000a3cc:	83 ec 0c             	sub    esp,0xc
1000a3cf:	50                   	push   eax
1000a3d0:	e8 fc ff ff ff       	call   1000a3d1 <spng_ctx_free+0x132>	1000a3d1: R_386_PC32	inflateEnd
1000a3d5:	83 c4 10             	add    esp,0x10
1000a3d8:	83 7b 2c 00          	cmp    DWORD PTR [ebx+0x2c],0x0
1000a3dc:	75 0b                	jne    1000a3e9 <spng_ctx_free+0x14a>
1000a3de:	8b 53 30             	mov    edx,DWORD PTR [ebx+0x30]
1000a3e1:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a3e4:	e8 ea ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a3e9:	8b 93 c8 09 00 00    	mov    edx,DWORD PTR [ebx+0x9c8]
1000a3ef:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a3f2:	e8 dc ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a3f7:	8b 93 90 09 00 00    	mov    edx,DWORD PTR [ebx+0x990]
1000a3fd:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a400:	e8 ce ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a405:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000a40b:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a40e:	e8 c0 ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a413:	8b 93 8c 09 00 00    	mov    edx,DWORD PTR [ebx+0x98c]
1000a419:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a41c:	e8 b2 ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a421:	8b 93 94 09 00 00    	mov    edx,DWORD PTR [ebx+0x994]
1000a427:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000a42a:	e8 a4 ad ff ff       	call   100051d3 <spng__free.isra.3>
1000a42f:	8b 53 64             	mov    edx,DWORD PTR [ebx+0x64]
1000a432:	b9 fe 03 00 00       	mov    ecx,0x3fe
1000a437:	31 c0                	xor    eax,eax
1000a439:	89 df                	mov    edi,ebx
1000a43b:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000a43d:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
1000a441:	5b                   	pop    ebx
1000a442:	5e                   	pop    esi
1000a443:	5f                   	pop    edi
1000a444:	ff e2                	jmp    edx
1000a446:	5b                   	pop    ebx
1000a447:	5e                   	pop    esi
1000a448:	5f                   	pop    edi
1000a449:	c3                   	ret    

1000a44a <spng_set_png_buffer>:
1000a44a:	53                   	push   ebx
1000a44b:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a44f:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a453:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a457:	85 d2                	test   edx,edx
1000a459:	74 42                	je     1000a49d <spng_set_png_buffer+0x53>
1000a45b:	85 c9                	test   ecx,ecx
1000a45d:	74 3e                	je     1000a49d <spng_set_png_buffer+0x53>
1000a45f:	b8 46 00 00 00       	mov    eax,0x46
1000a464:	83 7a 70 00          	cmp    DWORD PTR [edx+0x70],0x0
1000a468:	74 38                	je     1000a4a2 <spng_set_png_buffer+0x58>
1000a46a:	b8 51 00 00 00       	mov    eax,0x51
1000a46f:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a473:	75 2d                	jne    1000a4a2 <spng_set_png_buffer+0x58>
1000a475:	b8 45 00 00 00       	mov    eax,0x45
1000a47a:	83 7a 10 00          	cmp    DWORD PTR [edx+0x10],0x0
1000a47e:	75 22                	jne    1000a4a2 <spng_set_png_buffer+0x58>
1000a480:	89 4a 10             	mov    DWORD PTR [edx+0x10],ecx
1000a483:	89 4a 20             	mov    DWORD PTR [edx+0x20],ecx
1000a486:	89 1a                	mov    DWORD PTR [edx],ebx
1000a488:	89 5a 24             	mov    DWORD PTR [edx+0x24],ebx
1000a48b:	c7 42 14 a3 4b 00 10 	mov    DWORD PTR [edx+0x14],0x10004ba3	1000a48e: R_386_32	.text
1000a492:	c7 42 70 02 00 00 00 	mov    DWORD PTR [edx+0x70],0x2
1000a499:	31 c0                	xor    eax,eax
1000a49b:	eb 05                	jmp    1000a4a2 <spng_set_png_buffer+0x58>
1000a49d:	b8 01 00 00 00       	mov    eax,0x1
1000a4a2:	5b                   	pop    ebx
1000a4a3:	c3                   	ret    

1000a4a4 <spng_set_png_stream>:
1000a4a4:	56                   	push   esi
1000a4a5:	53                   	push   ebx
1000a4a6:	51                   	push   ecx
1000a4a7:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a4ab:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000a4af:	85 db                	test   ebx,ebx
1000a4b1:	74 6c                	je     1000a51f <spng_set_png_stream+0x7b>
1000a4b3:	85 f6                	test   esi,esi
1000a4b5:	74 68                	je     1000a51f <spng_set_png_stream+0x7b>
1000a4b7:	8b 43 70             	mov    eax,DWORD PTR [ebx+0x70]
1000a4ba:	ba 46 00 00 00       	mov    edx,0x46
1000a4bf:	85 c0                	test   eax,eax
1000a4c1:	74 61                	je     1000a524 <spng_set_png_stream+0x80>
1000a4c3:	ba 45 00 00 00       	mov    edx,0x45
1000a4c8:	83 f8 01             	cmp    eax,0x1
1000a4cb:	77 57                	ja     1000a524 <spng_set_png_stream+0x80>
1000a4cd:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000a4d1:	74 11                	je     1000a4e4 <spng_set_png_stream+0x40>
1000a4d3:	83 7b 30 00          	cmp    DWORD PTR [ebx+0x30],0x0
1000a4d7:	75 4b                	jne    1000a524 <spng_set_png_stream+0x80>
1000a4d9:	89 73 18             	mov    DWORD PTR [ebx+0x18],esi
1000a4dc:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000a4df:	89 43 34             	mov    DWORD PTR [ebx+0x34],eax
1000a4e2:	eb 25                	jmp    1000a509 <spng_set_png_stream+0x65>
1000a4e4:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a4e7:	ba 00 20 00 00       	mov    edx,0x2000
1000a4ec:	e8 bb ac ff ff       	call   100051ac <spng__malloc.isra.0>
1000a4f1:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000a4f4:	ba 02 00 00 00       	mov    edx,0x2
1000a4f9:	85 c0                	test   eax,eax
1000a4fb:	74 27                	je     1000a524 <spng_set_png_stream+0x80>
1000a4fd:	89 73 14             	mov    DWORD PTR [ebx+0x14],esi
1000a500:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000a503:	c7 03 00 20 00 00    	mov    DWORD PTR [ebx],0x2000
1000a509:	c7 43 70 02 00 00 00 	mov    DWORD PTR [ebx+0x70],0x2
1000a510:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000a514:	89 43 1c             	mov    DWORD PTR [ebx+0x1c],eax
1000a517:	80 4b 74 01          	or     BYTE PTR [ebx+0x74],0x1
1000a51b:	31 d2                	xor    edx,edx
1000a51d:	eb 05                	jmp    1000a524 <spng_set_png_stream+0x80>
1000a51f:	ba 01 00 00 00       	mov    edx,0x1
1000a524:	89 d0                	mov    eax,edx
1000a526:	5a                   	pop    edx
1000a527:	5b                   	pop    ebx
1000a528:	5e                   	pop    esi
1000a529:	c3                   	ret    

1000a52a <spng_set_png_file>:
1000a52a:	83 ec 0c             	sub    esp,0xc
1000a52d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000a531:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000a535:	b8 01 00 00 00       	mov    eax,0x1
1000a53a:	85 c9                	test   ecx,ecx
1000a53c:	74 1f                	je     1000a55d <spng_set_png_file+0x33>
1000a53e:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a542:	74 09                	je     1000a54d <spng_set_png_file+0x23>
1000a544:	50                   	push   eax
1000a545:	51                   	push   ecx
1000a546:	68 87 51 00 10       	push   0x10005187	1000a547: R_386_32	.text
1000a54b:	eb 07                	jmp    1000a554 <spng_set_png_file+0x2a>
1000a54d:	50                   	push   eax
1000a54e:	51                   	push   ecx
1000a54f:	68 bb 59 00 10       	push   0x100059bb	1000a550: R_386_32	.text
1000a554:	52                   	push   edx
1000a555:	e8 fc ff ff ff       	call   1000a556 <spng_set_png_file+0x2c>	1000a556: R_386_PC32	spng_set_png_stream
1000a55a:	83 c4 10             	add    esp,0x10
1000a55d:	83 c4 0c             	add    esp,0xc
1000a560:	c3                   	ret    

1000a561 <spng_get_png_buffer>:
1000a561:	53                   	push   ebx
1000a562:	83 ec 10             	sub    esp,0x10
1000a565:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000a569:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000a56d:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000a571:	85 c0                	test   eax,eax
1000a573:	74 04                	je     1000a579 <spng_get_png_buffer+0x18>
1000a575:	85 db                	test   ebx,ebx
1000a577:	75 0e                	jne    1000a587 <spng_get_png_buffer+0x26>
1000a579:	31 c0                	xor    eax,eax
1000a57b:	85 d2                	test   edx,edx
1000a57d:	74 5e                	je     1000a5dd <spng_get_png_buffer+0x7c>
1000a57f:	c7 02 01 00 00 00    	mov    DWORD PTR [edx],0x1
1000a585:	eb 56                	jmp    1000a5dd <spng_get_png_buffer+0x7c>
1000a587:	85 d2                	test   edx,edx
1000a589:	75 04                	jne    1000a58f <spng_get_png_buffer+0x2e>
1000a58b:	8d 54 24 0c          	lea    edx,[esp+0xc]
1000a58f:	f6 40 74 08          	test   BYTE PTR [eax+0x74],0x8
1000a593:	75 08                	jne    1000a59d <spng_get_png_buffer+0x3c>
1000a595:	c7 02 51 00 00 00    	mov    DWORD PTR [edx],0x51
1000a59b:	eb 0d                	jmp    1000a5aa <spng_get_png_buffer+0x49>
1000a59d:	8b 48 70             	mov    ecx,DWORD PTR [eax+0x70]
1000a5a0:	85 c9                	test   ecx,ecx
1000a5a2:	75 0a                	jne    1000a5ae <spng_get_png_buffer+0x4d>
1000a5a4:	c7 02 46 00 00 00    	mov    DWORD PTR [edx],0x46
1000a5aa:	31 c0                	xor    eax,eax
1000a5ac:	eb 2f                	jmp    1000a5dd <spng_get_png_buffer+0x7c>
1000a5ae:	83 f9 09             	cmp    ecx,0x9
1000a5b1:	74 15                	je     1000a5c8 <spng_get_png_buffer+0x67>
1000a5b3:	83 f9 04             	cmp    ecx,0x4
1000a5b6:	76 08                	jbe    1000a5c0 <spng_get_png_buffer+0x5f>
1000a5b8:	c7 02 55 00 00 00    	mov    DWORD PTR [edx],0x55
1000a5be:	eb ea                	jmp    1000a5aa <spng_get_png_buffer+0x49>
1000a5c0:	c7 02 54 00 00 00    	mov    DWORD PTR [edx],0x54
1000a5c6:	eb e2                	jmp    1000a5aa <spng_get_png_buffer+0x49>
1000a5c8:	c7 02 00 00 00 00    	mov    DWORD PTR [edx],0x0
1000a5ce:	c7 40 2c 01 00 00 00 	mov    DWORD PTR [eax+0x2c],0x1
1000a5d5:	8b 50 3c             	mov    edx,DWORD PTR [eax+0x3c]
1000a5d8:	89 13                	mov    DWORD PTR [ebx],edx
1000a5da:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
1000a5dd:	83 c4 10             	add    esp,0x10
1000a5e0:	5b                   	pop    ebx
1000a5e1:	c3                   	ret    

1000a5e2 <spng_set_image_limits>:
1000a5e2:	53                   	push   ebx
1000a5e3:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a5e7:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
1000a5eb:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000a5ef:	b8 01 00 00 00       	mov    eax,0x1
1000a5f4:	85 d2                	test   edx,edx
1000a5f6:	74 16                	je     1000a60e <spng_set_image_limits+0x2c>
1000a5f8:	85 db                	test   ebx,ebx
1000a5fa:	78 12                	js     1000a60e <spng_set_image_limits+0x2c>
1000a5fc:	85 c9                	test   ecx,ecx
1000a5fe:	78 0e                	js     1000a60e <spng_set_image_limits+0x2c>
1000a600:	89 9a d4 00 00 00    	mov    DWORD PTR [edx+0xd4],ebx
1000a606:	89 8a d8 00 00 00    	mov    DWORD PTR [edx+0xd8],ecx
1000a60c:	31 c0                	xor    eax,eax
1000a60e:	5b                   	pop    ebx
1000a60f:	c3                   	ret    

1000a610 <spng_get_image_limits>:
1000a610:	56                   	push   esi
1000a611:	53                   	push   ebx
1000a612:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a616:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a61a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000a61e:	85 f6                	test   esi,esi
1000a620:	0f 94 c3             	sete   bl
1000a623:	85 d2                	test   edx,edx
1000a625:	0f 94 c1             	sete   cl
1000a628:	08 cb                	or     bl,cl
1000a62a:	75 18                	jne    1000a644 <spng_get_image_limits+0x34>
1000a62c:	85 c0                	test   eax,eax
1000a62e:	74 14                	je     1000a644 <spng_get_image_limits+0x34>
1000a630:	8b 88 d4 00 00 00    	mov    ecx,DWORD PTR [eax+0xd4]
1000a636:	89 0e                	mov    DWORD PTR [esi],ecx
1000a638:	8b 80 d8 00 00 00    	mov    eax,DWORD PTR [eax+0xd8]
1000a63e:	89 02                	mov    DWORD PTR [edx],eax
1000a640:	31 c0                	xor    eax,eax
1000a642:	eb 05                	jmp    1000a649 <spng_get_image_limits+0x39>
1000a644:	b8 01 00 00 00       	mov    eax,0x1
1000a649:	5b                   	pop    ebx
1000a64a:	5e                   	pop    esi
1000a64b:	c3                   	ret    

1000a64c <spng_set_chunk_limits>:
1000a64c:	53                   	push   ebx
1000a64d:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a651:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a655:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a659:	b8 01 00 00 00       	mov    eax,0x1
1000a65e:	85 d2                	test   edx,edx
1000a660:	74 1d                	je     1000a67f <spng_set_chunk_limits+0x33>
1000a662:	85 c9                	test   ecx,ecx
1000a664:	78 14                	js     1000a67a <spng_set_chunk_limits+0x2e>
1000a666:	39 d9                	cmp    ecx,ebx
1000a668:	77 10                	ja     1000a67a <spng_set_chunk_limits+0x2e>
1000a66a:	89 8a dc 00 00 00    	mov    DWORD PTR [edx+0xdc],ecx
1000a670:	89 9a e0 00 00 00    	mov    DWORD PTR [edx+0xe0],ebx
1000a676:	31 c0                	xor    eax,eax
1000a678:	eb 05                	jmp    1000a67f <spng_set_chunk_limits+0x33>
1000a67a:	b8 01 00 00 00       	mov    eax,0x1
1000a67f:	5b                   	pop    ebx
1000a680:	c3                   	ret    

1000a681 <spng_get_chunk_limits>:
1000a681:	56                   	push   esi
1000a682:	53                   	push   ebx
1000a683:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a687:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000a68b:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000a68f:	85 f6                	test   esi,esi
1000a691:	0f 94 c3             	sete   bl
1000a694:	85 d2                	test   edx,edx
1000a696:	0f 94 c1             	sete   cl
1000a699:	08 cb                	or     bl,cl
1000a69b:	75 18                	jne    1000a6b5 <spng_get_chunk_limits+0x34>
1000a69d:	85 c0                	test   eax,eax
1000a69f:	74 14                	je     1000a6b5 <spng_get_chunk_limits+0x34>
1000a6a1:	8b 88 dc 00 00 00    	mov    ecx,DWORD PTR [eax+0xdc]
1000a6a7:	89 0e                	mov    DWORD PTR [esi],ecx
1000a6a9:	8b 80 e0 00 00 00    	mov    eax,DWORD PTR [eax+0xe0]
1000a6af:	89 02                	mov    DWORD PTR [edx],eax
1000a6b1:	31 c0                	xor    eax,eax
1000a6b3:	eb 05                	jmp    1000a6ba <spng_get_chunk_limits+0x39>
1000a6b5:	b8 01 00 00 00       	mov    eax,0x1
1000a6ba:	5b                   	pop    ebx
1000a6bb:	5e                   	pop    esi
1000a6bc:	c3                   	ret    

1000a6bd <spng_set_crc_action>:
1000a6bd:	53                   	push   ebx
1000a6be:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a6c2:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000a6c6:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a6ca:	b8 01 00 00 00       	mov    eax,0x1
1000a6cf:	85 d2                	test   edx,edx
1000a6d1:	74 34                	je     1000a707 <spng_set_crc_action+0x4a>
1000a6d3:	b8 51 00 00 00       	mov    eax,0x51
1000a6d8:	f6 42 74 08          	test   BYTE PTR [edx+0x74],0x8
1000a6dc:	75 29                	jne    1000a707 <spng_set_crc_action+0x4a>
1000a6de:	b8 01 00 00 00       	mov    eax,0x1
1000a6e3:	83 f9 02             	cmp    ecx,0x2
1000a6e6:	77 1f                	ja     1000a707 <spng_set_crc_action+0x4a>
1000a6e8:	83 f9 01             	cmp    ecx,0x1
1000a6eb:	74 15                	je     1000a702 <spng_set_crc_action+0x45>
1000a6ed:	83 fb 02             	cmp    ebx,0x2
1000a6f0:	77 10                	ja     1000a702 <spng_set_crc_action+0x45>
1000a6f2:	89 8a e8 00 00 00    	mov    DWORD PTR [edx+0xe8],ecx
1000a6f8:	89 9a ec 00 00 00    	mov    DWORD PTR [edx+0xec],ebx
1000a6fe:	31 c0                	xor    eax,eax
1000a700:	eb 05                	jmp    1000a707 <spng_set_crc_action+0x4a>
1000a702:	b8 01 00 00 00       	mov    eax,0x1
1000a707:	5b                   	pop    ebx
1000a708:	c3                   	ret    

1000a709 <spng_set_option>:
1000a709:	53                   	push   ebx
1000a70a:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000a70e:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000a712:	b8 01 00 00 00       	mov    eax,0x1
1000a717:	85 d2                	test   edx,edx
1000a719:	74 7f                	je     1000a79a <spng_set_option+0x91>
1000a71b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a71f:	8d 58 ff             	lea    ebx,[eax-0x1]
1000a722:	b8 01 00 00 00       	mov    eax,0x1
1000a727:	83 fb 09             	cmp    ebx,0x9
1000a72a:	77 6e                	ja     1000a79a <spng_set_option+0x91>
1000a72c:	ff 24 9d d4 d3 00 10 	jmp    DWORD PTR [ebx*4+0x1000d3d4]	1000a72f: R_386_32	.text
1000a733:	85 c9                	test   ecx,ecx
1000a735:	0f 95 c1             	setne  cl
1000a738:	c1 e1 07             	shl    ecx,0x7
1000a73b:	8a 42 74             	mov    al,BYTE PTR [edx+0x74]
1000a73e:	83 e0 7f             	and    eax,0x7f
1000a741:	09 c8                	or     eax,ecx
1000a743:	88 42 74             	mov    BYTE PTR [edx+0x74],al
1000a746:	eb 03                	jmp    1000a74b <spng_set_option+0x42>
1000a748:	89 4a 78             	mov    DWORD PTR [edx+0x78],ecx
1000a74b:	31 c0                	xor    eax,eax
1000a74d:	eb 4b                	jmp    1000a79a <spng_set_option+0x91>
1000a74f:	89 4a 7c             	mov    DWORD PTR [edx+0x7c],ecx
1000a752:	eb f7                	jmp    1000a74b <spng_set_option+0x42>
1000a754:	89 8a 80 00 00 00    	mov    DWORD PTR [edx+0x80],ecx
1000a75a:	eb ef                	jmp    1000a74b <spng_set_option+0x42>
1000a75c:	89 8a 84 00 00 00    	mov    DWORD PTR [edx+0x84],ecx
1000a762:	eb e7                	jmp    1000a74b <spng_set_option+0x42>
1000a764:	89 8a 8c 00 00 00    	mov    DWORD PTR [edx+0x8c],ecx
1000a76a:	eb df                	jmp    1000a74b <spng_set_option+0x42>
1000a76c:	89 8a 90 00 00 00    	mov    DWORD PTR [edx+0x90],ecx
1000a772:	eb d7                	jmp    1000a74b <spng_set_option+0x42>
1000a774:	89 8a 94 00 00 00    	mov    DWORD PTR [edx+0x94],ecx
1000a77a:	eb cf                	jmp    1000a74b <spng_set_option+0x42>
1000a77c:	89 8a 98 00 00 00    	mov    DWORD PTR [edx+0x98],ecx
1000a782:	eb c7                	jmp    1000a74b <spng_set_option+0x42>
1000a784:	89 c8                	mov    eax,ecx
1000a786:	25 07 ff ff ff       	and    eax,0xffffff07
1000a78b:	75 08                	jne    1000a795 <spng_set_option+0x8c>
1000a78d:	89 8a f4 0f 00 00    	mov    DWORD PTR [edx+0xff4],ecx
1000a793:	eb 05                	jmp    1000a79a <spng_set_option+0x91>
1000a795:	b8 01 00 00 00       	mov    eax,0x1
1000a79a:	5b                   	pop    ebx
1000a79b:	c3                   	ret    

1000a79c <spng_get_option>:
1000a79c:	53                   	push   ebx
1000a79d:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000a7a1:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000a7a5:	85 c9                	test   ecx,ecx
1000a7a7:	74 6d                	je     1000a816 <spng_get_option+0x7a>
1000a7a9:	85 d2                	test   edx,edx
1000a7ab:	74 69                	je     1000a816 <spng_get_option+0x7a>
1000a7ad:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000a7b1:	8d 58 ff             	lea    ebx,[eax-0x1]
1000a7b4:	b8 01 00 00 00       	mov    eax,0x1
1000a7b9:	83 fb 09             	cmp    ebx,0x9
1000a7bc:	77 5d                	ja     1000a81b <spng_get_option+0x7f>
1000a7be:	ff 24 9d fc d3 00 10 	jmp    DWORD PTR [ebx*4+0x1000d3fc]	1000a7c1: R_386_32	.text
1000a7c5:	8a 41 74             	mov    al,BYTE PTR [ecx+0x74]
1000a7c8:	c0 e8 07             	shr    al,0x7
1000a7cb:	0f b6 c0             	movzx  eax,al
1000a7ce:	eb 03                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7d0:	8b 41 78             	mov    eax,DWORD PTR [ecx+0x78]
1000a7d3:	89 02                	mov    DWORD PTR [edx],eax
1000a7d5:	31 c0                	xor    eax,eax
1000a7d7:	eb 42                	jmp    1000a81b <spng_get_option+0x7f>
1000a7d9:	8b 41 7c             	mov    eax,DWORD PTR [ecx+0x7c]
1000a7dc:	eb f5                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7de:	8b 81 80 00 00 00    	mov    eax,DWORD PTR [ecx+0x80]
1000a7e4:	eb ed                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7e6:	8b 81 84 00 00 00    	mov    eax,DWORD PTR [ecx+0x84]
1000a7ec:	eb e5                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7ee:	8b 81 8c 00 00 00    	mov    eax,DWORD PTR [ecx+0x8c]
1000a7f4:	eb dd                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7f6:	8b 81 90 00 00 00    	mov    eax,DWORD PTR [ecx+0x90]
1000a7fc:	eb d5                	jmp    1000a7d3 <spng_get_option+0x37>
1000a7fe:	8b 81 94 00 00 00    	mov    eax,DWORD PTR [ecx+0x94]
1000a804:	eb cd                	jmp    1000a7d3 <spng_get_option+0x37>
1000a806:	8b 81 98 00 00 00    	mov    eax,DWORD PTR [ecx+0x98]
1000a80c:	eb c5                	jmp    1000a7d3 <spng_get_option+0x37>
1000a80e:	8b 81 f4 0f 00 00    	mov    eax,DWORD PTR [ecx+0xff4]
1000a814:	eb bd                	jmp    1000a7d3 <spng_get_option+0x37>
1000a816:	b8 01 00 00 00       	mov    eax,0x1
1000a81b:	5b                   	pop    ebx
1000a81c:	c3                   	ret    

1000a81d <spng_decoded_image_size>:
1000a81d:	57                   	push   edi
1000a81e:	56                   	push   esi
1000a81f:	53                   	push   ebx
1000a820:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000a824:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000a828:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000a82c:	85 db                	test   ebx,ebx
1000a82e:	74 22                	je     1000a852 <spng_decoded_image_size+0x35>
1000a830:	85 f6                	test   esi,esi
1000a832:	74 1e                	je     1000a852 <spng_decoded_image_size+0x35>
1000a834:	ba 01 00 00 00       	mov    edx,0x1
1000a839:	89 d8                	mov    eax,ebx
1000a83b:	e8 ac b7 ff ff       	call   10005fec <read_chunks>
1000a840:	85 c0                	test   eax,eax
1000a842:	75 13                	jne    1000a857 <spng_decoded_image_size+0x3a>
1000a844:	89 f1                	mov    ecx,esi
1000a846:	89 fa                	mov    edx,edi
1000a848:	89 d8                	mov    eax,ebx
1000a84a:	5b                   	pop    ebx
1000a84b:	5e                   	pop    esi
1000a84c:	5f                   	pop    edi
1000a84d:	e9 6b a0 ff ff       	jmp    100048bd <calculate_image_size>
1000a852:	b8 01 00 00 00       	mov    eax,0x1
1000a857:	5b                   	pop    ebx
1000a858:	5e                   	pop    esi
1000a859:	5f                   	pop    edi
1000a85a:	c3                   	ret    

1000a85b <spng_decode_image>:
1000a85b:	55                   	push   ebp
1000a85c:	57                   	push   edi
1000a85d:	56                   	push   esi
1000a85e:	53                   	push   ebx
1000a85f:	83 ec 6c             	sub    esp,0x6c
1000a862:	8b 9c 24 80 00 00 00 	mov    ebx,DWORD PTR [esp+0x80]
1000a869:	85 db                	test   ebx,ebx
1000a86b:	75 0a                	jne    1000a877 <spng_decode_image+0x1c>
1000a86d:	bf 01 00 00 00       	mov    edi,0x1
1000a872:	e9 7d 0a 00 00       	jmp    1000b2f4 <spng_decode_image+0xa99>
1000a877:	bf 51 00 00 00       	mov    edi,0x51
1000a87c:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000a880:	0f 85 6e 0a 00 00    	jne    1000b2f4 <spng_decode_image+0xa99>
1000a886:	bf 4b 00 00 00       	mov    edi,0x4b
1000a88b:	83 7b 70 05          	cmp    DWORD PTR [ebx+0x70],0x5
1000a88f:	0f 87 5f 0a 00 00    	ja     1000b2f4 <spng_decode_image+0xa99>
1000a895:	51                   	push   ecx
1000a896:	8d 83 a8 09 00 00    	lea    eax,[ebx+0x9a8]
1000a89c:	50                   	push   eax
1000a89d:	ff b4 24 94 00 00 00 	push   DWORD PTR [esp+0x94]
1000a8a4:	53                   	push   ebx
1000a8a5:	e8 fc ff ff ff       	call   1000a8a6 <spng_decode_image+0x4b>	1000a8a6: R_386_PC32	spng_decoded_image_size
1000a8aa:	89 c7                	mov    edi,eax
1000a8ac:	83 c4 10             	add    esp,0x10
1000a8af:	85 c0                	test   eax,eax
1000a8b1:	0f 85 e0 09 00 00    	jne    1000b297 <spng_decode_image+0xa3c>
1000a8b7:	31 d2                	xor    edx,edx
1000a8b9:	89 d8                	mov    eax,ebx
1000a8bb:	e8 2c b7 ff ff       	call   10005fec <read_chunks>
1000a8c0:	89 c7                	mov    edi,eax
1000a8c2:	85 c0                	test   eax,eax
1000a8c4:	0f 85 2a 0a 00 00    	jne    1000b2f4 <spng_decode_image+0xa99>
1000a8ca:	0f ba a4 24 90 00 00 00 08 	bt     DWORD PTR [esp+0x90],0x8
1000a8d3:	72 22                	jb     1000a8f7 <spng_decode_image+0x9c>
1000a8d5:	83 bc 24 84 00 00 00 00 	cmp    DWORD PTR [esp+0x84],0x0
1000a8dd:	74 8e                	je     1000a86d <spng_decode_image+0x12>
1000a8df:	bf 42 00 00 00       	mov    edi,0x42
1000a8e4:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
1000a8eb:	39 83 a8 09 00 00    	cmp    DWORD PTR [ebx+0x9a8],eax
1000a8f1:	0f 87 fd 09 00 00    	ja     1000b2f4 <spng_decode_image+0xa99>
1000a8f7:	8b 83 a8 09 00 00    	mov    eax,DWORD PTR [ebx+0x9a8]
1000a8fd:	31 d2                	xor    edx,edx
1000a8ff:	f7 b3 f4 00 00 00    	div    DWORD PTR [ebx+0xf4]
1000a905:	89 83 ac 09 00 00    	mov    DWORD PTR [ebx+0x9ac],eax
1000a90b:	89 d8                	mov    eax,ebx
1000a90d:	e8 6c a7 ff ff       	call   1000507e <spng__inflate_init>
1000a912:	89 c7                	mov    edi,eax
1000a914:	85 c0                	test   eax,eax
1000a916:	0f 85 7b 09 00 00    	jne    1000b297 <spng_decode_image+0xa3c>
1000a91c:	c7 83 54 09 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x954],0x0
1000a926:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000a929:	89 83 50 09 00 00    	mov    DWORD PTR [ebx+0x950],eax
1000a92f:	8b 83 bc 09 00 00    	mov    eax,DWORD PTR [ebx+0x9bc]
1000a935:	05 8e 00 00 00       	add    eax,0x8e
1000a93a:	c1 e0 04             	shl    eax,0x4
1000a93d:	8b 74 03 0c          	mov    esi,DWORD PTR [ebx+eax*1+0xc]
1000a941:	83 c6 20             	add    esi,0x20
1000a944:	bf 03 00 00 00       	mov    edi,0x3
1000a949:	83 fe 1f             	cmp    esi,0x1f
1000a94c:	0f 86 a2 09 00 00    	jbe    1000b2f4 <spng_decode_image+0xa99>
1000a952:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a955:	89 f2                	mov    edx,esi
1000a957:	e8 50 a8 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a95c:	89 83 88 09 00 00    	mov    DWORD PTR [ebx+0x988],eax
1000a962:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a965:	89 f2                	mov    edx,esi
1000a967:	e8 40 a8 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a96c:	89 83 8c 09 00 00    	mov    DWORD PTR [ebx+0x98c],eax
1000a972:	8b 93 88 09 00 00    	mov    edx,DWORD PTR [ebx+0x988]
1000a978:	89 93 98 09 00 00    	mov    DWORD PTR [ebx+0x998],edx
1000a97e:	89 83 9c 09 00 00    	mov    DWORD PTR [ebx+0x99c],eax
1000a984:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
1000a98b:	89 43 6c             	mov    DWORD PTR [ebx+0x6c],eax
1000a98e:	80 bb f9 00 00 00 03 	cmp    BYTE PTR [ebx+0xf9],0x3
1000a995:	0f 94 44 24 30       	sete   BYTE PTR [esp+0x30]
1000a99a:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
1000a9a0:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
1000a9a4:	83 e6 01             	and    esi,0x1
1000a9a7:	c1 e6 03             	shl    esi,0x3
1000a9aa:	74 02                	je     1000a9ae <spng_decode_image+0x153>
1000a9ac:	b1 08                	mov    cl,0x8
1000a9ae:	0f b6 c1             	movzx  eax,cl
1000a9b1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000a9b5:	c6 44 24 20 00       	mov    BYTE PTR [esp+0x20],0x0
1000a9ba:	80 bb fc 00 00 00 00 	cmp    BYTE PTR [ebx+0xfc],0x0
1000a9c1:	74 34                	je     1000a9f7 <spng_decode_image+0x19c>
1000a9c3:	8b 93 ac 09 00 00    	mov    edx,DWORD PTR [ebx+0x9ac]
1000a9c9:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000a9cc:	e8 db a7 ff ff       	call   100051ac <spng__malloc.isra.0>
1000a9d1:	89 83 90 09 00 00    	mov    DWORD PTR [ebx+0x990],eax
1000a9d7:	89 83 a0 09 00 00    	mov    DWORD PTR [ebx+0x9a0],eax
1000a9dd:	c6 44 24 20 01       	mov    BYTE PTR [esp+0x20],0x1
1000a9e2:	85 c0                	test   eax,eax
1000a9e4:	75 11                	jne    1000a9f7 <spng_decode_image+0x19c>
1000a9e6:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000a9ed:	bf 02 00 00 00       	mov    edi,0x2
1000a9f2:	e9 fd 08 00 00       	jmp    1000b2f4 <spng_decode_image+0xa99>
1000a9f7:	83 bb 98 09 00 00 00 	cmp    DWORD PTR [ebx+0x998],0x0
1000a9fe:	74 e6                	je     1000a9e6 <spng_decode_image+0x18b>
1000aa00:	83 bb 9c 09 00 00 00 	cmp    DWORD PTR [ebx+0x99c],0x0
1000aa07:	74 dd                	je     1000a9e6 <spng_decode_image+0x18b>
1000aa09:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000aa0d:	83 e2 01             	and    edx,0x1
1000aa10:	c1 e2 05             	shl    edx,0x5
1000aa13:	83 ce 10             	or     esi,0x10
1000aa16:	09 d6                	or     esi,edx
1000aa18:	89 f1                	mov    ecx,esi
1000aa1a:	89 f0                	mov    eax,esi
1000aa1c:	c0 e8 03             	shr    al,0x3
1000aa1f:	83 f0 01             	xor    eax,0x1
1000aa22:	83 e0 01             	and    eax,0x1
1000aa25:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
1000aa29:	31 c0                	xor    eax,eax
1000aa2b:	83 bc 24 8c 00 00 00 02 	cmp    DWORD PTR [esp+0x8c],0x2
1000aa33:	0f 94 c0             	sete   al
1000aa36:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
1000aa3d:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000aa41:	f6 84 24 90 00 00 00 01 	test   BYTE PTR [esp+0x90],0x1
1000aa49:	74 0e                	je     1000aa59 <spng_decode_image+0x1fe>
1000aa4b:	c6 44 24 0c 01       	mov    BYTE PTR [esp+0xc],0x1
1000aa50:	f6 83 ad 00 00 00 04 	test   BYTE PTR [ebx+0xad],0x4
1000aa57:	75 0d                	jne    1000aa66 <spng_decode_image+0x20b>
1000aa59:	83 a4 24 90 00 00 00 fe 	and    DWORD PTR [esp+0x90],0xfffffffe
1000aa61:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000aa66:	8a 83 f9 00 00 00    	mov    al,BYTE PTR [ebx+0xf9]
1000aa6c:	88 c2                	mov    dl,al
1000aa6e:	83 e2 fd             	and    edx,0xfffffffd
1000aa71:	80 fa 04             	cmp    dl,0x4
1000aa74:	75 08                	jne    1000aa7e <spng_decode_image+0x223>
1000aa76:	83 a4 24 90 00 00 00 fe 	and    DWORD PTR [esp+0x90],0xfffffffe
1000aa7e:	f6 84 24 90 00 00 00 02 	test   BYTE PTR [esp+0x90],0x2
1000aa86:	74 0e                	je     1000aa96 <spng_decode_image+0x23b>
1000aa88:	c6 44 24 18 01       	mov    BYTE PTR [esp+0x18],0x1
1000aa8d:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000aa94:	75 0d                	jne    1000aaa3 <spng_decode_image+0x248>
1000aa96:	83 a4 24 90 00 00 00 fd 	and    DWORD PTR [esp+0x90],0xfffffffd
1000aa9e:	c6 44 24 18 00       	mov    BYTE PTR [esp+0x18],0x0
1000aaa3:	f6 84 24 90 00 00 00 08 	test   BYTE PTR [esp+0x90],0x8
1000aaab:	74 0e                	je     1000aabb <spng_decode_image+0x260>
1000aaad:	c6 44 24 1c 01       	mov    BYTE PTR [esp+0x1c],0x1
1000aab2:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
1000aab9:	75 0d                	jne    1000aac8 <spng_decode_image+0x26d>
1000aabb:	83 a4 24 90 00 00 00 f7 	and    DWORD PTR [esp+0x90],0xfffffff7
1000aac3:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
1000aac8:	8b bc 24 8c 00 00 00 	mov    edi,DWORD PTR [esp+0x8c]
1000aacf:	83 e7 03             	and    edi,0x3
1000aad2:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
1000aad6:	74 1f                	je     1000aaf7 <spng_decode_image+0x29c>
1000aad8:	3c 06                	cmp    al,0x6
1000aada:	0f 85 f5 00 00 00    	jne    1000abd5 <spng_decode_image+0x37a>
1000aae0:	0f b6 83 f8 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf8]
1000aae7:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000aaeb:	0f 94 c0             	sete   al
1000aaee:	89 c5                	mov    ebp,eax
1000aaf0:	31 ff                	xor    edi,edi
1000aaf2:	e9 eb 00 00 00       	jmp    1000abe2 <spng_decode_image+0x387>
1000aaf7:	83 bc 24 8c 00 00 00 04 	cmp    DWORD PTR [esp+0x8c],0x4
1000aaff:	75 21                	jne    1000ab22 <spng_decode_image+0x2c7>
1000ab01:	31 ff                	xor    edi,edi
1000ab03:	3c 02                	cmp    al,0x2
1000ab05:	0f 85 a5 00 00 00    	jne    1000abb0 <spng_decode_image+0x355>
1000ab0b:	0f b6 83 f8 00 00 00 	movzx  eax,BYTE PTR [ebx+0xf8]
1000ab12:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000ab16:	0f 94 c0             	sete   al
1000ab19:	89 c5                	mov    ebp,eax
1000ab1b:	31 ff                	xor    edi,edi
1000ab1d:	e9 a3 00 00 00       	jmp    1000abc5 <spng_decode_image+0x36a>
1000ab22:	f7 84 24 8c 00 00 00 00 03 00 00 	test   DWORD PTR [esp+0x8c],0x300
1000ab2d:	0f 85 81 00 00 00    	jne    1000abb4 <spng_decode_image+0x359>
1000ab33:	83 bc 24 8c 00 00 00 40 	cmp    DWORD PTR [esp+0x8c],0x40
1000ab3b:	75 28                	jne    1000ab65 <spng_decode_image+0x30a>
1000ab3d:	84 c0                	test   al,al
1000ab3f:	0f 85 90 00 00 00    	jne    1000abd5 <spng_decode_image+0x37a>
1000ab45:	8a 83 f8 00 00 00    	mov    al,BYTE PTR [ebx+0xf8]
1000ab4b:	3c 08                	cmp    al,0x8
1000ab4d:	0f 87 82 00 00 00    	ja     1000abd5 <spng_decode_image+0x37a>
1000ab53:	0f b6 d0             	movzx  edx,al
1000ab56:	3b 54 24 10          	cmp    edx,DWORD PTR [esp+0x10]
1000ab5a:	74 70                	je     1000abcc <spng_decode_image+0x371>
1000ab5c:	3c 08                	cmp    al,0x8
1000ab5e:	0f 95 c0             	setne  al
1000ab61:	89 c7                	mov    edi,eax
1000ab63:	eb 4b                	jmp    1000abb0 <spng_decode_image+0x355>
1000ab65:	84 c0                	test   al,al
1000ab67:	75 16                	jne    1000ab7f <spng_decode_image+0x324>
1000ab69:	83 bc 24 8c 00 00 00 10 	cmp    DWORD PTR [esp+0x8c],0x10
1000ab71:	75 0c                	jne    1000ab7f <spng_decode_image+0x324>
1000ab73:	80 bb f8 00 00 00 09 	cmp    BYTE PTR [ebx+0xf8],0x9
1000ab7a:	0f 92 c0             	setb   al
1000ab7d:	eb 2d                	jmp    1000abac <spng_decode_image+0x351>
1000ab7f:	83 bc 24 8c 00 00 00 20 	cmp    DWORD PTR [esp+0x8c],0x20
1000ab87:	75 4c                	jne    1000abd5 <spng_decode_image+0x37a>
1000ab89:	66 83 bb f8 00 00 00 10 	cmp    WORD PTR [ebx+0xf8],0x10
1000ab91:	75 42                	jne    1000abd5 <spng_decode_image+0x37a>
1000ab93:	8a 93 f8 00 00 00    	mov    dl,BYTE PTR [ebx+0xf8]
1000ab99:	3c 04                	cmp    al,0x4
1000ab9b:	75 09                	jne    1000aba6 <spng_decode_image+0x34b>
1000ab9d:	0f b6 c2             	movzx  eax,dl
1000aba0:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
1000aba4:	74 35                	je     1000abdb <spng_decode_image+0x380>
1000aba6:	80 fa 10             	cmp    dl,0x10
1000aba9:	0f 94 c0             	sete   al
1000abac:	89 c7                	mov    edi,eax
1000abae:	eb 27                	jmp    1000abd7 <spng_decode_image+0x37c>
1000abb0:	31 ed                	xor    ebp,ebp
1000abb2:	eb 11                	jmp    1000abc5 <spng_decode_image+0x36a>
1000abb4:	31 ff                	xor    edi,edi
1000abb6:	bd 01 00 00 00       	mov    ebp,0x1
1000abbb:	c6 44 24 14 00       	mov    BYTE PTR [esp+0x14],0x0
1000abc0:	c6 44 24 18 00       	mov    BYTE PTR [esp+0x18],0x0
1000abc5:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000abca:	eb 16                	jmp    1000abe2 <spng_decode_image+0x387>
1000abcc:	31 ff                	xor    edi,edi
1000abce:	bd 01 00 00 00       	mov    ebp,0x1
1000abd3:	eb f0                	jmp    1000abc5 <spng_decode_image+0x36a>
1000abd5:	31 ff                	xor    edi,edi
1000abd7:	31 ed                	xor    ebp,ebp
1000abd9:	eb 07                	jmp    1000abe2 <spng_decode_image+0x387>
1000abdb:	31 ff                	xor    edi,edi
1000abdd:	bd 01 00 00 00       	mov    ebp,0x1
1000abe2:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000abe6:	83 e6 01             	and    esi,0x1
1000abe9:	83 e1 fc             	and    ecx,0xfffffffc
1000abec:	89 ca                	mov    edx,ecx
1000abee:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000abf2:	83 e1 01             	and    ecx,0x1
1000abf5:	01 c9                	add    ecx,ecx
1000abf7:	09 f2                	or     edx,esi
1000abf9:	09 d1                	or     ecx,edx
1000abfb:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000abff:	83 e0 01             	and    eax,0x1
1000ac02:	8d 34 85 00 00 00 00 	lea    esi,[eax*4+0x0]
1000ac09:	89 c8                	mov    eax,ecx
1000ac0b:	83 e0 eb             	and    eax,0xffffffeb
1000ac0e:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000ac12:	83 e2 01             	and    edx,0x1
1000ac15:	c1 e2 04             	shl    edx,0x4
1000ac18:	09 f0                	or     eax,esi
1000ac1a:	09 c2                	or     edx,eax
1000ac1c:	89 e9                	mov    ecx,ebp
1000ac1e:	83 e1 01             	and    ecx,0x1
1000ac21:	c1 e1 06             	shl    ecx,0x6
1000ac24:	83 e2 bf             	and    edx,0xffffffbf
1000ac27:	09 ca                	or     edx,ecx
1000ac29:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
1000ac2d:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
1000ac31:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
1000ac35:	80 e2 02             	and    dl,0x2
1000ac38:	75 38                	jne    1000ac72 <spng_decode_image+0x417>
1000ac3a:	8a 44 24 08          	mov    al,BYTE PTR [esp+0x8]
1000ac3e:	88 83 d5 0f 00 00    	mov    BYTE PTR [ebx+0xfd5],al
1000ac44:	88 83 d6 0f 00 00    	mov    BYTE PTR [ebx+0xfd6],al
1000ac4a:	88 83 d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],al
1000ac50:	88 83 d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],al
1000ac56:	88 83 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],al
1000ac5c:	8a 83 f8 00 00 00    	mov    al,BYTE PTR [ebx+0xf8]
1000ac62:	f6 44 24 26 04       	test   BYTE PTR [esp+0x26],0x4
1000ac67:	0f 85 51 01 00 00    	jne    1000adbe <spng_decode_image+0x563>
1000ac6d:	e9 c7 01 00 00       	jmp    1000ae39 <spng_decode_image+0x5de>
1000ac72:	8b 83 7c 05 00 00    	mov    eax,DWORD PTR [ebx+0x57c]
1000ac78:	31 d2                	xor    edx,edx
1000ac7a:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000ac7e:	89 54 24 2c          	mov    DWORD PTR [esp+0x2c],edx
1000ac82:	df 6c 24 28          	fild   QWORD PTR [esp+0x28]
1000ac86:	d8 35 a8 d6 00 10    	fdiv   DWORD PTR ds:0x1000d6a8	1000ac88: R_386_32	.text
1000ac8c:	f6 84 24 8c 00 00 00 05 	test   BYTE PTR [esp+0x8c],0x5
1000ac94:	74 1b                	je     1000acb1 <spng_decode_image+0x456>
1000ac96:	8d b3 cc 09 00 00    	lea    esi,[ebx+0x9cc]
1000ac9c:	89 b3 c4 09 00 00    	mov    DWORD PTR [ebx+0x9c4],esi
1000aca2:	b9 00 01 00 00       	mov    ecx,0x100
1000aca7:	d9 05 a0 d6 00 10    	fld    DWORD PTR ds:0x1000d6a0	1000aca9: R_386_32	.text
1000acad:	d9 c9                	fxch   st(1)
1000acaf:	eb 36                	jmp    1000ace7 <spng_decode_image+0x48c>
1000acb1:	d9 5c 24 28          	fstp   DWORD PTR [esp+0x28]
1000acb5:	8b 43 58             	mov    eax,DWORD PTR [ebx+0x58]
1000acb8:	ba 00 00 02 00       	mov    edx,0x20000
1000acbd:	e8 ea a4 ff ff       	call   100051ac <spng__malloc.isra.0>
1000acc2:	89 c6                	mov    esi,eax
1000acc4:	89 83 c8 09 00 00    	mov    DWORD PTR [ebx+0x9c8],eax
1000acca:	85 c0                	test   eax,eax
1000accc:	0f 84 14 fd ff ff    	je     1000a9e6 <spng_decode_image+0x18b>
1000acd2:	89 83 c4 09 00 00    	mov    DWORD PTR [ebx+0x9c4],eax
1000acd8:	b9 00 00 01 00       	mov    ecx,0x10000
1000acdd:	d9 05 a4 d6 00 10    	fld    DWORD PTR ds:0x1000d6a4	1000acdf: R_386_32	.text
1000ace3:	d9 44 24 28          	fld    DWORD PTR [esp+0x28]
1000ace7:	d8 0d ac d6 00 10    	fmul   DWORD PTR ds:0x1000d6ac	1000ace9: R_386_32	.text
1000aced:	dd e0                	fucom  st(0)
1000acef:	df e0                	fnstsw ax
1000acf1:	9e                   	sahf   
1000acf2:	7a 40                	jp     1000ad34 <spng_decode_image+0x4d9>
1000acf4:	d9 05 b0 d6 00 10    	fld    DWORD PTR ds:0x1000d6b0	1000acf6: R_386_32	.text
1000acfa:	d9 c9                	fxch   st(1)
1000acfc:	dd e1                	fucom  st(1)
1000acfe:	df e0                	fnstsw ax
1000ad00:	dd d9                	fstp   st(1)
1000ad02:	9e                   	sahf   
1000ad03:	77 2f                	ja     1000ad34 <spng_decode_image+0x4d9>
1000ad05:	d8 15 b4 d6 00 10    	fcom   DWORD PTR ds:0x1000d6b4	1000ad07: R_386_32	.text
1000ad0b:	df e0                	fnstsw ax
1000ad0d:	9e                   	sahf   
1000ad0e:	73 24                	jae    1000ad34 <spng_decode_image+0x4d9>
1000ad10:	d9 ee                	fldz   
1000ad12:	d9 c9                	fxch   st(1)
1000ad14:	dd e1                	fucom  st(1)
1000ad16:	df e0                	fnstsw ax
1000ad18:	dd d9                	fstp   st(1)
1000ad1a:	9e                   	sahf   
1000ad1b:	7a 17                	jp     1000ad34 <spng_decode_image+0x4d9>
1000ad1d:	75 15                	jne    1000ad34 <spng_decode_image+0x4d9>
1000ad1f:	dd d8                	fstp   st(0)
1000ad21:	dd d8                	fstp   st(0)
1000ad23:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000ad2a:	bf 26 00 00 00       	mov    edi,0x26
1000ad2f:	e9 c0 05 00 00       	jmp    1000b2f4 <spng_decode_image+0xa99>
1000ad34:	d9 e8                	fld1   
1000ad36:	de f1                	fdivrp st(1),st
1000ad38:	d9 5c 24 28          	fstp   DWORD PTR [esp+0x28]
1000ad3c:	31 d2                	xor    edx,edx
1000ad3e:	89 4c 24 48          	mov    DWORD PTR [esp+0x48],ecx
1000ad42:	d9 44 24 28          	fld    DWORD PTR [esp+0x28]
1000ad46:	83 ec 10             	sub    esp,0x10
1000ad49:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
1000ad4d:	d9 c0                	fld    st(0)
1000ad4f:	d9 5c 24 54          	fstp   DWORD PTR [esp+0x54]
1000ad53:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
1000ad57:	89 54 24 50          	mov    DWORD PTR [esp+0x50],edx
1000ad5b:	da 7c 24 4c          	fidivr DWORD PTR [esp+0x4c]
1000ad5f:	dd 1c 24             	fstp   QWORD PTR [esp]
1000ad62:	e8 fc ff ff ff       	call   1000ad63 <spng_decode_image+0x508>	1000ad63: R_386_PC32	pow
1000ad67:	d9 44 24 54          	fld    DWORD PTR [esp+0x54]
1000ad6b:	dc c9                	fmul   st(1),st
1000ad6d:	d9 c9                	fxch   st(1)
1000ad6f:	d9 5c 24 6c          	fstp   DWORD PTR [esp+0x6c]
1000ad73:	d9 44 24 6c          	fld    DWORD PTR [esp+0x6c]
1000ad77:	83 c4 10             	add    esp,0x10
1000ad7a:	d8 d1                	fcom   st(1)
1000ad7c:	df e0                	fnstsw ax
1000ad7e:	9e                   	sahf   
1000ad7f:	8b 54 24 40          	mov    edx,DWORD PTR [esp+0x40]
1000ad83:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
1000ad87:	76 04                	jbe    1000ad8d <spng_decode_image+0x532>
1000ad89:	dd d8                	fstp   st(0)
1000ad8b:	d9 c0                	fld    st(0)
1000ad8d:	d9 7c 24 5a          	fnstcw WORD PTR [esp+0x5a]
1000ad91:	66 8b 44 24 5a       	mov    ax,WORD PTR [esp+0x5a]
1000ad96:	80 cc 0c             	or     ah,0xc
1000ad99:	66 89 44 24 58       	mov    WORD PTR [esp+0x58],ax
1000ad9e:	d9 6c 24 58          	fldcw  WORD PTR [esp+0x58]
1000ada2:	db 5c 24 54          	fistp  DWORD PTR [esp+0x54]
1000ada6:	d9 6c 24 5a          	fldcw  WORD PTR [esp+0x5a]
1000adaa:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000adae:	66 89 04 56          	mov    WORD PTR [esi+edx*2],ax
1000adb2:	42                   	inc    edx
1000adb3:	39 d1                	cmp    ecx,edx
1000adb5:	75 87                	jne    1000ad3e <spng_decode_image+0x4e3>
1000adb7:	dd d8                	fstp   st(0)
1000adb9:	e9 7c fe ff ff       	jmp    1000ac3a <spng_decode_image+0x3df>
1000adbe:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000adc4:	84 d2                	test   dl,dl
1000adc6:	75 0e                	jne    1000add6 <spng_decode_image+0x57b>
1000adc8:	8a 93 80 05 00 00    	mov    dl,BYTE PTR [ebx+0x580]
1000adce:	88 93 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],dl
1000add4:	eb 22                	jmp    1000adf8 <spng_decode_image+0x59d>
1000add6:	8d 4a fe             	lea    ecx,[edx-0x2]
1000add9:	80 f9 01             	cmp    cl,0x1
1000addc:	77 22                	ja     1000ae00 <spng_decode_image+0x5a5>
1000adde:	8a 8b 83 05 00 00    	mov    cl,BYTE PTR [ebx+0x583]
1000ade4:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
1000adeb:	66 89 93 d5 0f 00 00 	mov    WORD PTR [ebx+0xfd5],dx
1000adf2:	88 8b d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],cl
1000adf8:	88 83 d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],al
1000adfe:	eb 39                	jmp    1000ae39 <spng_decode_image+0x5de>
1000ae00:	8a 8b 84 05 00 00    	mov    cl,BYTE PTR [ebx+0x584]
1000ae06:	80 fa 04             	cmp    dl,0x4
1000ae09:	75 0e                	jne    1000ae19 <spng_decode_image+0x5be>
1000ae0b:	8a 93 80 05 00 00    	mov    dl,BYTE PTR [ebx+0x580]
1000ae11:	88 93 d4 0f 00 00    	mov    BYTE PTR [ebx+0xfd4],dl
1000ae17:	eb 1a                	jmp    1000ae33 <spng_decode_image+0x5d8>
1000ae19:	66 8b 93 81 05 00 00 	mov    dx,WORD PTR [ebx+0x581]
1000ae20:	66 89 93 d5 0f 00 00 	mov    WORD PTR [ebx+0xfd5],dx
1000ae27:	8a 93 83 05 00 00    	mov    dl,BYTE PTR [ebx+0x583]
1000ae2d:	88 93 d7 0f 00 00    	mov    BYTE PTR [ebx+0xfd7],dl
1000ae33:	88 8b d8 0f 00 00    	mov    BYTE PTR [ebx+0xfd8],cl
1000ae39:	3c 10                	cmp    al,0x10
1000ae3b:	75 37                	jne    1000ae74 <spng_decode_image+0x619>
1000ae3d:	f6 84 24 8c 00 00 00 05 	test   BYTE PTR [esp+0x8c],0x5
1000ae45:	74 2d                	je     1000ae74 <spng_decode_image+0x619>
1000ae47:	80 ab d5 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd5],0x8
1000ae4e:	80 ab d6 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd6],0x8
1000ae55:	80 ab d7 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd7],0x8
1000ae5c:	80 ab d8 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd8],0x8
1000ae63:	80 ab d4 0f 00 00 08 	sub    BYTE PTR [ebx+0xfd4],0x8
1000ae6a:	c7 44 24 08 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x8
1000ae72:	eb 1b                	jmp    1000ae8f <spng_decode_image+0x634>
1000ae74:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000ae78:	48                   	dec    eax
1000ae79:	83 f8 0f             	cmp    eax,0xf
1000ae7c:	76 11                	jbe    1000ae8f <spng_decode_image+0x634>
1000ae7e:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000ae85:	bf 29 00 00 00       	mov    edi,0x29
1000ae8a:	e9 65 04 00 00       	jmp    1000b2f4 <spng_decode_image+0xa99>
1000ae8f:	0f b6 83 d4 0f 00 00 	movzx  eax,BYTE PTR [ebx+0xfd4]
1000ae96:	84 c0                	test   al,al
1000ae98:	74 e4                	je     1000ae7e <spng_decode_image+0x623>
1000ae9a:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000ae9e:	77 de                	ja     1000ae7e <spng_decode_image+0x623>
1000aea0:	0f b6 83 d8 0f 00 00 	movzx  eax,BYTE PTR [ebx+0xfd8]
1000aea7:	88 44 24 26          	mov    BYTE PTR [esp+0x26],al
1000aeab:	84 c0                	test   al,al
1000aead:	74 cf                	je     1000ae7e <spng_decode_image+0x623>
1000aeaf:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000aeb3:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000aeb7:	77 c5                	ja     1000ae7e <spng_decode_image+0x623>
1000aeb9:	8a 8b d5 0f 00 00    	mov    cl,BYTE PTR [ebx+0xfd5]
1000aebf:	84 c9                	test   cl,cl
1000aec1:	74 bb                	je     1000ae7e <spng_decode_image+0x623>
1000aec3:	0f b6 c1             	movzx  eax,cl
1000aec6:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000aeca:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000aece:	77 ae                	ja     1000ae7e <spng_decode_image+0x623>
1000aed0:	8a 93 d6 0f 00 00    	mov    dl,BYTE PTR [ebx+0xfd6]
1000aed6:	84 d2                	test   dl,dl
1000aed8:	74 a4                	je     1000ae7e <spng_decode_image+0x623>
1000aeda:	0f b6 c2             	movzx  eax,dl
1000aedd:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000aee1:	3b 44 24 08          	cmp    eax,DWORD PTR [esp+0x8]
1000aee5:	77 97                	ja     1000ae7e <spng_decode_image+0x623>
1000aee7:	8a 83 d7 0f 00 00    	mov    al,BYTE PTR [ebx+0xfd7]
1000aeed:	84 c0                	test   al,al
1000aeef:	74 8d                	je     1000ae7e <spng_decode_image+0x623>
1000aef1:	0f b6 f0             	movzx  esi,al
1000aef4:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
1000aef8:	3b 74 24 08          	cmp    esi,DWORD PTR [esp+0x8]
1000aefc:	77 80                	ja     1000ae7e <spng_decode_image+0x623>
1000aefe:	38 d1                	cmp    cl,dl
1000af00:	0f 94 c1             	sete   cl
1000af03:	38 c2                	cmp    dl,al
1000af05:	0f 94 c2             	sete   dl
1000af08:	21 d1                	and    ecx,edx
1000af0a:	38 44 24 26          	cmp    BYTE PTR [esp+0x26],al
1000af0e:	0f 94 c2             	sete   dl
1000af11:	21 d1                	and    ecx,edx
1000af13:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
1000af17:	39 74 24 28          	cmp    DWORD PTR [esp+0x28],esi
1000af1b:	0f 94 c0             	sete   al
1000af1e:	84 c1                	test   cl,al
1000af20:	74 0b                	je     1000af2d <spng_decode_image+0x6d2>
1000af22:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
1000af26:	75 05                	jne    1000af2d <spng_decode_image+0x6d2>
1000af28:	c6 44 24 14 00       	mov    BYTE PTR [esp+0x14],0x0
1000af2d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000af31:	83 e0 01             	and    eax,0x1
1000af34:	c1 e0 04             	shl    eax,0x4
1000af37:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
1000af3b:	83 e2 ef             	and    edx,0xffffffef
1000af3e:	09 c2                	or     edx,eax
1000af40:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
1000af44:	80 e2 08             	and    dl,0x8
1000af47:	0f 84 52 01 00 00    	je     1000b09f <spng_decode_image+0x844>
1000af4d:	31 f6                	xor    esi,esi
1000af4f:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000af53:	83 e0 01             	and    eax,0x1
1000af56:	c1 e0 02             	shl    eax,0x2
1000af59:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
1000af5d:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000af61:	83 e0 01             	and    eax,0x1
1000af64:	c1 e0 03             	shl    eax,0x3
1000af67:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000af6b:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000af6f:	83 e1 01             	and    ecx,0x1
1000af72:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000af76:	83 e0 fc             	and    eax,0xfffffffc
1000af79:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000af7d:	83 e2 01             	and    edx,0x1
1000af80:	01 d2                	add    edx,edx
1000af82:	09 c8                	or     eax,ecx
1000af84:	09 d0                	or     eax,edx
1000af86:	83 e0 f3             	and    eax,0xfffffff3
1000af89:	0b 44 24 4c          	or     eax,DWORD PTR [esp+0x4c]
1000af8d:	0b 44 24 50          	or     eax,DWORD PTR [esp+0x50]
1000af91:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000af95:	83 e1 01             	and    ecx,0x1
1000af98:	c1 e1 04             	shl    ecx,0x4
1000af9b:	83 e0 cf             	and    eax,0xffffffcf
1000af9e:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000afa2:	83 e2 01             	and    edx,0x1
1000afa5:	c1 e2 05             	shl    edx,0x5
1000afa8:	09 c8                	or     eax,ecx
1000afaa:	09 d0                	or     eax,edx
1000afac:	89 ea                	mov    edx,ebp
1000afae:	83 e2 01             	and    edx,0x1
1000afb1:	c1 e2 06             	shl    edx,0x6
1000afb4:	83 e0 bf             	and    eax,0xffffffbf
1000afb7:	09 d0                	or     eax,edx
1000afb9:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000afbd:	c6 44 24 10 ff       	mov    BYTE PTR [esp+0x10],0xff
1000afc2:	a8 01                	test   al,0x1
1000afc4:	74 13                	je     1000afd9 <spng_decode_image+0x77e>
1000afc6:	39 b3 a4 07 00 00    	cmp    DWORD PTR [ebx+0x7a4],esi
1000afcc:	76 0b                	jbe    1000afd9 <spng_decode_image+0x77e>
1000afce:	8a 84 33 a8 07 00 00 	mov    al,BYTE PTR [ebx+esi*1+0x7a8]
1000afd5:	88 44 24 10          	mov    BYTE PTR [esp+0x10],al
1000afd9:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
1000afdd:	88 84 b3 07 01 00 00 	mov    BYTE PTR [ebx+esi*4+0x107],al
1000afe4:	0f b6 84 b3 04 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x104]
1000afec:	83 ec 0c             	sub    esp,0xc
1000afef:	6a 08                	push   0x8
1000aff1:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000aff5:	ba 08 00 00 00       	mov    edx,0x8
1000affa:	e8 4c 9a ff ff       	call   10004a4b <sample_to_target>
1000afff:	66 89 44 24 36       	mov    WORD PTR [esp+0x36],ax
1000b004:	0f b6 84 b3 05 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x105]
1000b00c:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b013:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
1000b017:	ba 08 00 00 00       	mov    edx,0x8
1000b01c:	e8 2a 9a ff ff       	call   10004a4b <sample_to_target>
1000b021:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
1000b026:	0f b6 84 b3 06 01 00 00 	movzx  eax,BYTE PTR [ebx+esi*4+0x106]
1000b02e:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b035:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
1000b039:	ba 08 00 00 00       	mov    edx,0x8
1000b03e:	e8 08 9a ff ff       	call   10004a4b <sample_to_target>
1000b043:	66 89 44 24 58       	mov    WORD PTR [esp+0x58],ax
1000b048:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
1000b04d:	c7 04 24 08 00 00 00 	mov    DWORD PTR [esp],0x8
1000b054:	8b 4c 24 38          	mov    ecx,DWORD PTR [esp+0x38]
1000b058:	ba 08 00 00 00       	mov    edx,0x8
1000b05d:	e8 e9 99 ff ff       	call   10004a4b <sample_to_target>
1000b062:	83 c4 10             	add    esp,0x10
1000b065:	8a 4c 24 26          	mov    cl,BYTE PTR [esp+0x26]
1000b069:	88 8c b3 d4 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd4],cl
1000b070:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
1000b074:	88 8c b3 d5 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd5],cl
1000b07b:	8a 4c 24 48          	mov    cl,BYTE PTR [esp+0x48]
1000b07f:	88 8c b3 d6 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd6],cl
1000b086:	88 84 b3 d7 0b 00 00 	mov    BYTE PTR [ebx+esi*4+0xbd7],al
1000b08d:	46                   	inc    esi
1000b08e:	81 fe 00 01 00 00    	cmp    esi,0x100
1000b094:	0f 85 d1 fe ff ff    	jne    1000af6b <spng_decode_image+0x710>
1000b09a:	c6 44 24 0c 00       	mov    BYTE PTR [esp+0xc],0x0
1000b09f:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000b0a3:	83 e1 01             	and    ecx,0x1
1000b0a6:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000b0aa:	83 e2 fc             	and    edx,0xfffffffc
1000b0ad:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000b0b1:	83 e0 01             	and    eax,0x1
1000b0b4:	01 c0                	add    eax,eax
1000b0b6:	09 ca                	or     edx,ecx
1000b0b8:	09 d0                	or     eax,edx
1000b0ba:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000b0be:	83 e6 01             	and    esi,0x1
1000b0c1:	c1 e6 02             	shl    esi,0x2
1000b0c4:	83 e0 f3             	and    eax,0xfffffff3
1000b0c7:	8b 54 24 30          	mov    edx,DWORD PTR [esp+0x30]
1000b0cb:	83 e2 01             	and    edx,0x1
1000b0ce:	c1 e2 03             	shl    edx,0x3
1000b0d1:	09 f0                	or     eax,esi
1000b0d3:	09 d0                	or     eax,edx
1000b0d5:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000b0d9:	83 e2 01             	and    edx,0x1
1000b0dc:	c1 e2 04             	shl    edx,0x4
1000b0df:	83 e0 cf             	and    eax,0xffffffcf
1000b0e2:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
1000b0e6:	83 e1 01             	and    ecx,0x1
1000b0e9:	c1 e1 05             	shl    ecx,0x5
1000b0ec:	09 d0                	or     eax,edx
1000b0ee:	09 c8                	or     eax,ecx
1000b0f0:	89 ea                	mov    edx,ebp
1000b0f2:	83 e2 01             	and    edx,0x1
1000b0f5:	c1 e2 06             	shl    edx,0x6
1000b0f8:	83 e0 bf             	and    eax,0xffffffbf
1000b0fb:	09 d0                	or     eax,edx
1000b0fd:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
1000b101:	a8 01                	test   al,0x1
1000b103:	0f 84 a3 00 00 00    	je     1000b1ac <spng_decode_image+0x951>
1000b109:	8a 8b f8 00 00 00    	mov    cl,BYTE PTR [ebx+0xf8]
1000b10f:	83 ce ff             	or     esi,0xffffffff
1000b112:	80 f9 0f             	cmp    cl,0xf
1000b115:	77 08                	ja     1000b11f <spng_decode_image+0x8c4>
1000b117:	be 01 00 00 00       	mov    esi,0x1
1000b11c:	d3 e6                	shl    esi,cl
1000b11e:	4e                   	dec    esi
1000b11f:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000b125:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000b12a:	74 5f                	je     1000b18b <spng_decode_image+0x930>
1000b12c:	80 fa 02             	cmp    dl,0x2
1000b12f:	75 7b                	jne    1000b1ac <spng_decode_image+0x951>
1000b131:	66 8b 93 9e 07 00 00 	mov    dx,WORD PTR [ebx+0x79e]
1000b138:	66 89 54 24 08       	mov    WORD PTR [esp+0x8],dx
1000b13d:	66 8b ab a0 07 00 00 	mov    bp,WORD PTR [ebx+0x7a0]
1000b144:	66 8b 93 a2 07 00 00 	mov    dx,WORD PTR [ebx+0x7a2]
1000b14b:	80 f9 10             	cmp    cl,0x10
1000b14e:	75 1b                	jne    1000b16b <spng_decode_image+0x910>
1000b150:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
1000b154:	66 89 b3 cc 0b 00 00 	mov    WORD PTR [ebx+0xbcc],si
1000b15b:	66 89 ab ce 0b 00 00 	mov    WORD PTR [ebx+0xbce],bp
1000b162:	66 89 93 d0 0b 00 00 	mov    WORD PTR [ebx+0xbd0],dx
1000b169:	eb 41                	jmp    1000b1ac <spng_decode_image+0x951>
1000b16b:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
1000b16f:	21 f1                	and    ecx,esi
1000b171:	88 8b cc 0b 00 00    	mov    BYTE PTR [ebx+0xbcc],cl
1000b177:	89 e9                	mov    ecx,ebp
1000b179:	21 f1                	and    ecx,esi
1000b17b:	88 8b cd 0b 00 00    	mov    BYTE PTR [ebx+0xbcd],cl
1000b181:	21 f2                	and    edx,esi
1000b183:	88 93 ce 0b 00 00    	mov    BYTE PTR [ebx+0xbce],dl
1000b189:	eb 21                	jmp    1000b1ac <spng_decode_image+0x951>
1000b18b:	84 d2                	test   dl,dl
1000b18d:	75 1d                	jne    1000b1ac <spng_decode_image+0x951>
1000b18f:	66 8b 93 9c 07 00 00 	mov    dx,WORD PTR [ebx+0x79c]
1000b196:	80 f9 10             	cmp    cl,0x10
1000b199:	75 09                	jne    1000b1a4 <spng_decode_image+0x949>
1000b19b:	66 89 93 cc 0b 00 00 	mov    WORD PTR [ebx+0xbcc],dx
1000b1a2:	eb 08                	jmp    1000b1ac <spng_decode_image+0x951>
1000b1a4:	21 f2                	and    edx,esi
1000b1a6:	88 93 cc 0b 00 00    	mov    BYTE PTR [ebx+0xbcc],dl
1000b1ac:	89 fa                	mov    edx,edi
1000b1ae:	83 e2 01             	and    edx,0x1
1000b1b1:	c1 e2 08             	shl    edx,0x8
1000b1b4:	80 e4 fe             	and    ah,0xfe
1000b1b7:	09 c2                	or     edx,eax
1000b1b9:	89 93 dc 0f 00 00    	mov    DWORD PTR [ebx+0xfdc],edx
1000b1bf:	c7 43 70 05 00 00 00 	mov    DWORD PTR [ebx+0x70],0x5
1000b1c6:	8d 8b e0 08 00 00    	lea    ecx,[ebx+0x8e0]
1000b1cc:	8b 83 e8 0f 00 00    	mov    eax,DWORD PTR [ebx+0xfe8]
1000b1d2:	89 c2                	mov    edx,eax
1000b1d4:	c1 e2 04             	shl    edx,0x4
1000b1d7:	01 ca                	add    edx,ecx
1000b1d9:	83 3a 00             	cmp    DWORD PTR [edx],0x0
1000b1dc:	75 09                	jne    1000b1e7 <spng_decode_image+0x98c>
1000b1de:	40                   	inc    eax
1000b1df:	89 83 e8 0f 00 00    	mov    DWORD PTR [ebx+0xfe8],eax
1000b1e5:	eb e5                	jmp    1000b1cc <spng_decode_image+0x971>
1000b1e7:	83 7a 04 00          	cmp    DWORD PTR [edx+0x4],0x0
1000b1eb:	74 f1                	je     1000b1de <spng_decode_image+0x983>
1000b1ed:	f6 44 24 0c 20       	test   BYTE PTR [esp+0xc],0x20
1000b1f2:	74 0d                	je     1000b201 <spng_decode_image+0x9a6>
1000b1f4:	8b 14 85 58 d6 00 10 	mov    edx,DWORD PTR [eax*4+0x1000d658]	1000b1f7: R_386_32	.text
1000b1fb:	89 93 e4 0f 00 00    	mov    DWORD PTR [ebx+0xfe4],edx
1000b201:	ba 08 00 00 00       	mov    edx,0x8
1000b206:	83 bc 24 8c 00 00 00 02 	cmp    DWORD PTR [esp+0x8c],0x2
1000b20e:	74 2f                	je     1000b23f <spng_decode_image+0x9e4>
1000b210:	ba 03 00 00 00       	mov    edx,0x3
1000b215:	83 bc 24 8c 00 00 00 04 	cmp    DWORD PTR [esp+0x8c],0x4
1000b21d:	74 20                	je     1000b23f <spng_decode_image+0x9e4>
1000b21f:	ba 01 00 00 00       	mov    edx,0x1
1000b224:	83 bc 24 8c 00 00 00 40 	cmp    DWORD PTR [esp+0x8c],0x40
1000b22c:	74 11                	je     1000b23f <spng_decode_image+0x9e4>
1000b22e:	31 d2                	xor    edx,edx
1000b230:	83 bc 24 8c 00 00 00 10 	cmp    DWORD PTR [esp+0x8c],0x10
1000b238:	0f 95 c2             	setne  dl
1000b23b:	8d 54 12 02          	lea    edx,[edx+edx*1+0x2]
1000b23f:	8b bb c0 09 00 00    	mov    edi,DWORD PTR [ebx+0x9c0]
1000b245:	8b ac 24 8c 00 00 00 	mov    ebp,DWORD PTR [esp+0x8c]
1000b24c:	81 e5 00 03 00 00    	and    ebp,0x300
1000b252:	39 c7                	cmp    edi,eax
1000b254:	7c 29                	jl     1000b27f <spng_decode_image+0xa24>
1000b256:	89 c1                	mov    ecx,eax
1000b258:	c1 e1 04             	shl    ecx,0x4
1000b25b:	8b b4 0b ec 08 00 00 	mov    esi,DWORD PTR [ebx+ecx*1+0x8ec]
1000b262:	85 f6                	test   esi,esi
1000b264:	74 16                	je     1000b27c <spng_decode_image+0xa21>
1000b266:	4e                   	dec    esi
1000b267:	85 ed                	test   ebp,ebp
1000b269:	75 0a                	jne    1000b275 <spng_decode_image+0xa1a>
1000b26b:	8b b4 0b e0 08 00 00 	mov    esi,DWORD PTR [ebx+ecx*1+0x8e0]
1000b272:	0f af f2             	imul   esi,edx
1000b275:	89 b4 0b e8 08 00 00 	mov    DWORD PTR [ebx+ecx*1+0x8e8],esi
1000b27c:	40                   	inc    eax
1000b27d:	eb d3                	jmp    1000b252 <spng_decode_image+0x9f7>
1000b27f:	8d 93 ec 0f 00 00    	lea    edx,[ebx+0xfec]
1000b285:	b9 01 00 00 00       	mov    ecx,0x1
1000b28a:	89 d8                	mov    eax,ebx
1000b28c:	e8 24 a5 ff ff       	call   100057b5 <read_scanline_bytes>
1000b291:	89 c7                	mov    edi,eax
1000b293:	85 c0                	test   eax,eax
1000b295:	74 09                	je     1000b2a0 <spng_decode_image+0xa45>
1000b297:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b29e:	eb 54                	jmp    1000b2f4 <spng_decode_image+0xa99>
1000b2a0:	80 bb ec 0f 00 00 04 	cmp    BYTE PTR [ebx+0xfec],0x4
1000b2a7:	76 0e                	jbe    1000b2b7 <spng_decode_image+0xa5c>
1000b2a9:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b2b0:	bf 41 00 00 00       	mov    edi,0x41
1000b2b5:	eb 3d                	jmp    1000b2f4 <spng_decode_image+0xa99>
1000b2b7:	0f ba a4 24 90 00 00 00 08 	bt     DWORD PTR [esp+0x90],0x8
1000b2c0:	72 32                	jb     1000b2f4 <spng_decode_image+0xa99>
1000b2c2:	8b 83 ac 09 00 00    	mov    eax,DWORD PTR [ebx+0x9ac]
1000b2c8:	52                   	push   edx
1000b2c9:	50                   	push   eax
1000b2ca:	0f af 83 e4 0f 00 00 	imul   eax,DWORD PTR [ebx+0xfe4]
1000b2d1:	03 84 24 8c 00 00 00 	add    eax,DWORD PTR [esp+0x8c]
1000b2d8:	50                   	push   eax
1000b2d9:	53                   	push   ebx
1000b2da:	e8 fc ff ff ff       	call   1000b2db <spng_decode_image+0xa80>	1000b2db: R_386_PC32	spng_decode_row
1000b2df:	83 c4 10             	add    esp,0x10
1000b2e2:	85 c0                	test   eax,eax
1000b2e4:	74 dc                	je     1000b2c2 <spng_decode_image+0xa67>
1000b2e6:	83 f8 4b             	cmp    eax,0x4b
1000b2e9:	74 09                	je     1000b2f4 <spng_decode_image+0xa99>
1000b2eb:	c7 43 70 00 00 00 00 	mov    DWORD PTR [ebx+0x70],0x0
1000b2f2:	89 c7                	mov    edi,eax
1000b2f4:	89 f8                	mov    eax,edi
1000b2f6:	83 c4 6c             	add    esp,0x6c
1000b2f9:	5b                   	pop    ebx
1000b2fa:	5e                   	pop    esi
1000b2fb:	5f                   	pop    edi
1000b2fc:	5d                   	pop    ebp
1000b2fd:	c3                   	ret    

1000b2fe <spng_get_ihdr>:
1000b2fe:	57                   	push   edi
1000b2ff:	56                   	push   esi
1000b300:	51                   	push   ecx
1000b301:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b305:	85 f6                	test   esi,esi
1000b307:	75 07                	jne    1000b310 <spng_get_ihdr+0x12>
1000b309:	b8 01 00 00 00       	mov    eax,0x1
1000b30e:	eb 28                	jmp    1000b338 <spng_get_ihdr+0x3a>
1000b310:	ba 01 00 00 00       	mov    edx,0x1
1000b315:	89 f0                	mov    eax,esi
1000b317:	e8 d0 ac ff ff       	call   10005fec <read_chunks>
1000b31c:	85 c0                	test   eax,eax
1000b31e:	75 18                	jne    1000b338 <spng_get_ihdr+0x3a>
1000b320:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b325:	74 e2                	je     1000b309 <spng_get_ihdr+0xb>
1000b327:	81 c6 f0 00 00 00    	add    esi,0xf0
1000b32d:	b9 04 00 00 00       	mov    ecx,0x4
1000b332:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b336:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b338:	5a                   	pop    edx
1000b339:	5e                   	pop    esi
1000b33a:	5f                   	pop    edi
1000b33b:	c3                   	ret    

1000b33c <spng_get_plte>:
1000b33c:	57                   	push   edi
1000b33d:	56                   	push   esi
1000b33e:	51                   	push   ecx
1000b33f:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b343:	85 f6                	test   esi,esi
1000b345:	75 07                	jne    1000b34e <spng_get_plte+0x12>
1000b347:	b8 01 00 00 00       	mov    eax,0x1
1000b34c:	eb 35                	jmp    1000b383 <spng_get_plte+0x47>
1000b34e:	31 d2                	xor    edx,edx
1000b350:	89 f0                	mov    eax,esi
1000b352:	e8 95 ac ff ff       	call   10005fec <read_chunks>
1000b357:	85 c0                	test   eax,eax
1000b359:	75 28                	jne    1000b383 <spng_get_plte+0x47>
1000b35b:	f6 86 ac 00 00 00 02 	test   BYTE PTR [esi+0xac],0x2
1000b362:	74 1a                	je     1000b37e <spng_get_plte+0x42>
1000b364:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b369:	74 dc                	je     1000b347 <spng_get_plte+0xb>
1000b36b:	81 c6 00 01 00 00    	add    esi,0x100
1000b371:	b9 01 01 00 00       	mov    ecx,0x101
1000b376:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b37a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b37c:	eb 05                	jmp    1000b383 <spng_get_plte+0x47>
1000b37e:	b8 49 00 00 00       	mov    eax,0x49
1000b383:	5a                   	pop    edx
1000b384:	5e                   	pop    esi
1000b385:	5f                   	pop    edi
1000b386:	c3                   	ret    

1000b387 <spng_get_trns>:
1000b387:	57                   	push   edi
1000b388:	56                   	push   esi
1000b389:	51                   	push   ecx
1000b38a:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b38e:	85 f6                	test   esi,esi
1000b390:	75 07                	jne    1000b399 <spng_get_trns+0x12>
1000b392:	b8 01 00 00 00       	mov    eax,0x1
1000b397:	eb 35                	jmp    1000b3ce <spng_get_trns+0x47>
1000b399:	31 d2                	xor    edx,edx
1000b39b:	89 f0                	mov    eax,esi
1000b39d:	e8 4a ac ff ff       	call   10005fec <read_chunks>
1000b3a2:	85 c0                	test   eax,eax
1000b3a4:	75 28                	jne    1000b3ce <spng_get_trns+0x47>
1000b3a6:	f6 86 ad 00 00 00 04 	test   BYTE PTR [esi+0xad],0x4
1000b3ad:	74 1a                	je     1000b3c9 <spng_get_trns+0x42>
1000b3af:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b3b4:	74 dc                	je     1000b392 <spng_get_trns+0xb>
1000b3b6:	81 c6 9c 07 00 00    	add    esi,0x79c
1000b3bc:	b9 43 00 00 00       	mov    ecx,0x43
1000b3c1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b3c5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b3c7:	eb 05                	jmp    1000b3ce <spng_get_trns+0x47>
1000b3c9:	b8 49 00 00 00       	mov    eax,0x49
1000b3ce:	5a                   	pop    edx
1000b3cf:	5e                   	pop    esi
1000b3d0:	5f                   	pop    edi
1000b3d1:	c3                   	ret    

1000b3d2 <spng_get_chrm>:
1000b3d2:	55                   	push   ebp
1000b3d3:	57                   	push   edi
1000b3d4:	56                   	push   esi
1000b3d5:	53                   	push   ebx
1000b3d6:	83 ec 1c             	sub    esp,0x1c
1000b3d9:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000b3dd:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000b3e1:	85 db                	test   ebx,ebx
1000b3e3:	75 0a                	jne    1000b3ef <spng_get_chrm+0x1d>
1000b3e5:	b8 01 00 00 00       	mov    eax,0x1
1000b3ea:	e9 e9 00 00 00       	jmp    1000b4d8 <spng_get_chrm+0x106>
1000b3ef:	31 d2                	xor    edx,edx
1000b3f1:	89 d8                	mov    eax,ebx
1000b3f3:	e8 f4 ab ff ff       	call   10005fec <read_chunks>
1000b3f8:	85 c0                	test   eax,eax
1000b3fa:	0f 85 d8 00 00 00    	jne    1000b4d8 <spng_get_chrm+0x106>
1000b400:	f6 83 ac 00 00 00 04 	test   BYTE PTR [ebx+0xac],0x4
1000b407:	0f 84 c6 00 00 00    	je     1000b4d3 <spng_get_chrm+0x101>
1000b40d:	85 ed                	test   ebp,ebp
1000b40f:	74 d4                	je     1000b3e5 <spng_get_chrm+0x13>
1000b411:	8b b3 04 05 00 00    	mov    esi,DWORD PTR [ebx+0x504]
1000b417:	31 ff                	xor    edi,edi
1000b419:	89 34 24             	mov    DWORD PTR [esp],esi
1000b41c:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b420:	df 2c 24             	fild   QWORD PTR [esp]
1000b423:	d9 05 a8 d6 00 10    	fld    DWORD PTR ds:0x1000d6a8	1000b425: R_386_32	.text
1000b429:	dc f9                	fdiv   st(1),st
1000b42b:	d9 c9                	fxch   st(1)
1000b42d:	dd 5d 00             	fstp   QWORD PTR [ebp+0x0]
1000b430:	8b b3 08 05 00 00    	mov    esi,DWORD PTR [ebx+0x508]
1000b436:	31 ff                	xor    edi,edi
1000b438:	89 34 24             	mov    DWORD PTR [esp],esi
1000b43b:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b43f:	df 2c 24             	fild   QWORD PTR [esp]
1000b442:	d8 f1                	fdiv   st,st(1)
1000b444:	dd 5d 08             	fstp   QWORD PTR [ebp+0x8]
1000b447:	8b b3 0c 05 00 00    	mov    esi,DWORD PTR [ebx+0x50c]
1000b44d:	31 ff                	xor    edi,edi
1000b44f:	89 34 24             	mov    DWORD PTR [esp],esi
1000b452:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b456:	df 2c 24             	fild   QWORD PTR [esp]
1000b459:	d8 f1                	fdiv   st,st(1)
1000b45b:	dd 5d 10             	fstp   QWORD PTR [ebp+0x10]
1000b45e:	8b b3 10 05 00 00    	mov    esi,DWORD PTR [ebx+0x510]
1000b464:	31 ff                	xor    edi,edi
1000b466:	89 34 24             	mov    DWORD PTR [esp],esi
1000b469:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b46d:	df 2c 24             	fild   QWORD PTR [esp]
1000b470:	d8 f1                	fdiv   st,st(1)
1000b472:	dd 5d 18             	fstp   QWORD PTR [ebp+0x18]
1000b475:	8b b3 20 05 00 00    	mov    esi,DWORD PTR [ebx+0x520]
1000b47b:	31 ff                	xor    edi,edi
1000b47d:	89 34 24             	mov    DWORD PTR [esp],esi
1000b480:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b484:	df 2c 24             	fild   QWORD PTR [esp]
1000b487:	d8 f1                	fdiv   st,st(1)
1000b489:	dd 5d 38             	fstp   QWORD PTR [ebp+0x38]
1000b48c:	8b b3 1c 05 00 00    	mov    esi,DWORD PTR [ebx+0x51c]
1000b492:	31 ff                	xor    edi,edi
1000b494:	89 34 24             	mov    DWORD PTR [esp],esi
1000b497:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b49b:	df 2c 24             	fild   QWORD PTR [esp]
1000b49e:	d8 f1                	fdiv   st,st(1)
1000b4a0:	dd 5d 30             	fstp   QWORD PTR [ebp+0x30]
1000b4a3:	8b b3 14 05 00 00    	mov    esi,DWORD PTR [ebx+0x514]
1000b4a9:	31 ff                	xor    edi,edi
1000b4ab:	89 34 24             	mov    DWORD PTR [esp],esi
1000b4ae:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000b4b2:	df 2c 24             	fild   QWORD PTR [esp]
1000b4b5:	d8 f1                	fdiv   st,st(1)
1000b4b7:	dd 5d 20             	fstp   QWORD PTR [ebp+0x20]
1000b4ba:	8b 8b 18 05 00 00    	mov    ecx,DWORD PTR [ebx+0x518]
1000b4c0:	31 db                	xor    ebx,ebx
1000b4c2:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000b4c5:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
1000b4c9:	df 2c 24             	fild   QWORD PTR [esp]
1000b4cc:	de f1                	fdivrp st(1),st
1000b4ce:	dd 5d 28             	fstp   QWORD PTR [ebp+0x28]
1000b4d1:	eb 05                	jmp    1000b4d8 <spng_get_chrm+0x106>
1000b4d3:	b8 49 00 00 00       	mov    eax,0x49
1000b4d8:	83 c4 1c             	add    esp,0x1c
1000b4db:	5b                   	pop    ebx
1000b4dc:	5e                   	pop    esi
1000b4dd:	5f                   	pop    edi
1000b4de:	5d                   	pop    ebp
1000b4df:	c3                   	ret    

1000b4e0 <spng_get_chrm_int>:
1000b4e0:	57                   	push   edi
1000b4e1:	56                   	push   esi
1000b4e2:	51                   	push   ecx
1000b4e3:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b4e7:	85 f6                	test   esi,esi
1000b4e9:	75 07                	jne    1000b4f2 <spng_get_chrm_int+0x12>
1000b4eb:	b8 01 00 00 00       	mov    eax,0x1
1000b4f0:	eb 35                	jmp    1000b527 <spng_get_chrm_int+0x47>
1000b4f2:	31 d2                	xor    edx,edx
1000b4f4:	89 f0                	mov    eax,esi
1000b4f6:	e8 f1 aa ff ff       	call   10005fec <read_chunks>
1000b4fb:	85 c0                	test   eax,eax
1000b4fd:	75 28                	jne    1000b527 <spng_get_chrm_int+0x47>
1000b4ff:	f6 86 ac 00 00 00 04 	test   BYTE PTR [esi+0xac],0x4
1000b506:	74 1a                	je     1000b522 <spng_get_chrm_int+0x42>
1000b508:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b50d:	74 dc                	je     1000b4eb <spng_get_chrm_int+0xb>
1000b50f:	81 c6 04 05 00 00    	add    esi,0x504
1000b515:	b9 08 00 00 00       	mov    ecx,0x8
1000b51a:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b51e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b520:	eb 05                	jmp    1000b527 <spng_get_chrm_int+0x47>
1000b522:	b8 49 00 00 00       	mov    eax,0x49
1000b527:	5a                   	pop    edx
1000b528:	5e                   	pop    esi
1000b529:	5f                   	pop    edi
1000b52a:	c3                   	ret    

1000b52b <spng_get_gama>:
1000b52b:	56                   	push   esi
1000b52c:	53                   	push   ebx
1000b52d:	83 ec 14             	sub    esp,0x14
1000b530:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000b534:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
1000b538:	85 db                	test   ebx,ebx
1000b53a:	75 07                	jne    1000b543 <spng_get_gama+0x18>
1000b53c:	b8 01 00 00 00       	mov    eax,0x1
1000b541:	eb 3b                	jmp    1000b57e <spng_get_gama+0x53>
1000b543:	31 d2                	xor    edx,edx
1000b545:	89 d8                	mov    eax,ebx
1000b547:	e8 a0 aa ff ff       	call   10005fec <read_chunks>
1000b54c:	85 c0                	test   eax,eax
1000b54e:	75 2e                	jne    1000b57e <spng_get_gama+0x53>
1000b550:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000b557:	74 20                	je     1000b579 <spng_get_gama+0x4e>
1000b559:	85 f6                	test   esi,esi
1000b55b:	74 df                	je     1000b53c <spng_get_gama+0x11>
1000b55d:	8b 8b 7c 05 00 00    	mov    ecx,DWORD PTR [ebx+0x57c]
1000b563:	31 db                	xor    ebx,ebx
1000b565:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000b568:	89 5c 24 04          	mov    DWORD PTR [esp+0x4],ebx
1000b56c:	df 2c 24             	fild   QWORD PTR [esp]
1000b56f:	d8 35 a8 d6 00 10    	fdiv   DWORD PTR ds:0x1000d6a8	1000b571: R_386_32	.text
1000b575:	dd 1e                	fstp   QWORD PTR [esi]
1000b577:	eb 05                	jmp    1000b57e <spng_get_gama+0x53>
1000b579:	b8 49 00 00 00       	mov    eax,0x49
1000b57e:	83 c4 14             	add    esp,0x14
1000b581:	5b                   	pop    ebx
1000b582:	5e                   	pop    esi
1000b583:	c3                   	ret    

1000b584 <spng_get_gama_int>:
1000b584:	56                   	push   esi
1000b585:	53                   	push   ebx
1000b586:	51                   	push   ecx
1000b587:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b58b:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b58f:	85 db                	test   ebx,ebx
1000b591:	75 07                	jne    1000b59a <spng_get_gama_int+0x16>
1000b593:	b8 01 00 00 00       	mov    eax,0x1
1000b598:	eb 29                	jmp    1000b5c3 <spng_get_gama_int+0x3f>
1000b59a:	31 d2                	xor    edx,edx
1000b59c:	89 d8                	mov    eax,ebx
1000b59e:	e8 49 aa ff ff       	call   10005fec <read_chunks>
1000b5a3:	85 c0                	test   eax,eax
1000b5a5:	75 1c                	jne    1000b5c3 <spng_get_gama_int+0x3f>
1000b5a7:	f6 83 ac 00 00 00 10 	test   BYTE PTR [ebx+0xac],0x10
1000b5ae:	74 0e                	je     1000b5be <spng_get_gama_int+0x3a>
1000b5b0:	85 f6                	test   esi,esi
1000b5b2:	74 df                	je     1000b593 <spng_get_gama_int+0xf>
1000b5b4:	8b 93 7c 05 00 00    	mov    edx,DWORD PTR [ebx+0x57c]
1000b5ba:	89 16                	mov    DWORD PTR [esi],edx
1000b5bc:	eb 05                	jmp    1000b5c3 <spng_get_gama_int+0x3f>
1000b5be:	b8 49 00 00 00       	mov    eax,0x49
1000b5c3:	5a                   	pop    edx
1000b5c4:	5b                   	pop    ebx
1000b5c5:	5e                   	pop    esi
1000b5c6:	c3                   	ret    

1000b5c7 <spng_get_iccp>:
1000b5c7:	57                   	push   edi
1000b5c8:	56                   	push   esi
1000b5c9:	51                   	push   ecx
1000b5ca:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b5ce:	85 f6                	test   esi,esi
1000b5d0:	75 07                	jne    1000b5d9 <spng_get_iccp+0x12>
1000b5d2:	b8 01 00 00 00       	mov    eax,0x1
1000b5d7:	eb 35                	jmp    1000b60e <spng_get_iccp+0x47>
1000b5d9:	31 d2                	xor    edx,edx
1000b5db:	89 f0                	mov    eax,esi
1000b5dd:	e8 0a aa ff ff       	call   10005fec <read_chunks>
1000b5e2:	85 c0                	test   eax,eax
1000b5e4:	75 28                	jne    1000b60e <spng_get_iccp+0x47>
1000b5e6:	f6 86 ac 00 00 00 08 	test   BYTE PTR [esi+0xac],0x8
1000b5ed:	74 1a                	je     1000b609 <spng_get_iccp+0x42>
1000b5ef:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b5f4:	74 dc                	je     1000b5d2 <spng_get_iccp+0xb>
1000b5f6:	81 c6 24 05 00 00    	add    esi,0x524
1000b5fc:	b9 16 00 00 00       	mov    ecx,0x16
1000b601:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b605:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b607:	eb 05                	jmp    1000b60e <spng_get_iccp+0x47>
1000b609:	b8 49 00 00 00       	mov    eax,0x49
1000b60e:	5a                   	pop    edx
1000b60f:	5e                   	pop    esi
1000b610:	5f                   	pop    edi
1000b611:	c3                   	ret    

1000b612 <spng_get_sbit>:
1000b612:	56                   	push   esi
1000b613:	53                   	push   ebx
1000b614:	51                   	push   ecx
1000b615:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b619:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b61d:	85 db                	test   ebx,ebx
1000b61f:	75 07                	jne    1000b628 <spng_get_sbit+0x16>
1000b621:	b8 01 00 00 00       	mov    eax,0x1
1000b626:	eb 32                	jmp    1000b65a <spng_get_sbit+0x48>
1000b628:	31 d2                	xor    edx,edx
1000b62a:	89 d8                	mov    eax,ebx
1000b62c:	e8 bb a9 ff ff       	call   10005fec <read_chunks>
1000b631:	85 c0                	test   eax,eax
1000b633:	75 25                	jne    1000b65a <spng_get_sbit+0x48>
1000b635:	f6 83 ac 00 00 00 20 	test   BYTE PTR [ebx+0xac],0x20
1000b63c:	74 17                	je     1000b655 <spng_get_sbit+0x43>
1000b63e:	85 f6                	test   esi,esi
1000b640:	74 df                	je     1000b621 <spng_get_sbit+0xf>
1000b642:	8b 93 80 05 00 00    	mov    edx,DWORD PTR [ebx+0x580]
1000b648:	89 16                	mov    DWORD PTR [esi],edx
1000b64a:	8a 93 84 05 00 00    	mov    dl,BYTE PTR [ebx+0x584]
1000b650:	88 56 04             	mov    BYTE PTR [esi+0x4],dl
1000b653:	eb 05                	jmp    1000b65a <spng_get_sbit+0x48>
1000b655:	b8 49 00 00 00       	mov    eax,0x49
1000b65a:	5a                   	pop    edx
1000b65b:	5b                   	pop    ebx
1000b65c:	5e                   	pop    esi
1000b65d:	c3                   	ret    

1000b65e <spng_get_srgb>:
1000b65e:	56                   	push   esi
1000b65f:	53                   	push   ebx
1000b660:	51                   	push   ecx
1000b661:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b665:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000b669:	85 db                	test   ebx,ebx
1000b66b:	75 07                	jne    1000b674 <spng_get_srgb+0x16>
1000b66d:	b8 01 00 00 00       	mov    eax,0x1
1000b672:	eb 29                	jmp    1000b69d <spng_get_srgb+0x3f>
1000b674:	31 d2                	xor    edx,edx
1000b676:	89 d8                	mov    eax,ebx
1000b678:	e8 6f a9 ff ff       	call   10005fec <read_chunks>
1000b67d:	85 c0                	test   eax,eax
1000b67f:	75 1c                	jne    1000b69d <spng_get_srgb+0x3f>
1000b681:	f6 83 ac 00 00 00 40 	test   BYTE PTR [ebx+0xac],0x40
1000b688:	74 0e                	je     1000b698 <spng_get_srgb+0x3a>
1000b68a:	85 f6                	test   esi,esi
1000b68c:	74 df                	je     1000b66d <spng_get_srgb+0xf>
1000b68e:	8a 93 85 05 00 00    	mov    dl,BYTE PTR [ebx+0x585]
1000b694:	88 16                	mov    BYTE PTR [esi],dl
1000b696:	eb 05                	jmp    1000b69d <spng_get_srgb+0x3f>
1000b698:	b8 49 00 00 00       	mov    eax,0x49
1000b69d:	5a                   	pop    edx
1000b69e:	5b                   	pop    ebx
1000b69f:	5e                   	pop    esi
1000b6a0:	c3                   	ret    

1000b6a1 <spng_get_text>:
1000b6a1:	55                   	push   ebp
1000b6a2:	57                   	push   edi
1000b6a3:	56                   	push   esi
1000b6a4:	53                   	push   ebx
1000b6a5:	83 ec 1c             	sub    esp,0x1c
1000b6a8:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
1000b6ac:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000b6b0:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
1000b6b4:	85 ed                	test   ebp,ebp
1000b6b6:	75 0a                	jne    1000b6c2 <spng_get_text+0x21>
1000b6b8:	bb 01 00 00 00       	mov    ebx,0x1
1000b6bd:	e9 ae 00 00 00       	jmp    1000b770 <spng_get_text+0xcf>
1000b6c2:	31 d2                	xor    edx,edx
1000b6c4:	89 e8                	mov    eax,ebp
1000b6c6:	e8 21 a9 ff ff       	call   10005fec <read_chunks>
1000b6cb:	89 c3                	mov    ebx,eax
1000b6cd:	85 c0                	test   eax,eax
1000b6cf:	0f 85 9b 00 00 00    	jne    1000b770 <spng_get_text+0xcf>
1000b6d5:	80 bd ac 00 00 00 00 	cmp    BYTE PTR [ebp+0xac],0x0
1000b6dc:	0f 89 89 00 00 00    	jns    1000b76b <spng_get_text+0xca>
1000b6e2:	85 f6                	test   esi,esi
1000b6e4:	74 d2                	je     1000b6b8 <spng_get_text+0x17>
1000b6e6:	8b 85 88 05 00 00    	mov    eax,DWORD PTR [ebp+0x588]
1000b6ec:	85 ff                	test   edi,edi
1000b6ee:	75 04                	jne    1000b6f4 <spng_get_text+0x53>
1000b6f0:	89 06                	mov    DWORD PTR [esi],eax
1000b6f2:	eb 7c                	jmp    1000b770 <spng_get_text+0xcf>
1000b6f4:	39 06                	cmp    DWORD PTR [esi],eax
1000b6f6:	72 c0                	jb     1000b6b8 <spng_get_text+0x17>
1000b6f8:	89 fa                	mov    edx,edi
1000b6fa:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
1000b702:	31 c0                	xor    eax,eax
1000b704:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
1000b708:	39 bd 88 05 00 00    	cmp    DWORD PTR [ebp+0x588],edi
1000b70e:	76 60                	jbe    1000b770 <spng_get_text+0xcf>
1000b710:	6b 7c 24 08 70       	imul   edi,DWORD PTR [esp+0x8],0x70
1000b715:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000b719:	8b 8d 8c 05 00 00    	mov    ecx,DWORD PTR [ebp+0x58c]
1000b71f:	01 f9                	add    ecx,edi
1000b721:	8b 31                	mov    esi,DWORD PTR [ecx]
1000b723:	89 72 50             	mov    DWORD PTR [edx+0x50],esi
1000b726:	8b 71 04             	mov    esi,DWORD PTR [ecx+0x4]
1000b729:	83 c9 ff             	or     ecx,0xffffffff
1000b72c:	89 f7                	mov    edi,esi
1000b72e:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000b730:	f7 d1                	not    ecx
1000b732:	89 d7                	mov    edi,edx
1000b734:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b736:	c6 42 5d 00          	mov    BYTE PTR [edx+0x5d],0x0
1000b73a:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000b73e:	03 b5 8c 05 00 00    	add    esi,DWORD PTR [ebp+0x58c]
1000b744:	8a 4e 10             	mov    cl,BYTE PTR [esi+0x10]
1000b747:	88 4a 5c             	mov    BYTE PTR [edx+0x5c],cl
1000b74a:	8b 4e 14             	mov    ecx,DWORD PTR [esi+0x14]
1000b74d:	89 4a 60             	mov    DWORD PTR [edx+0x60],ecx
1000b750:	8b 4e 18             	mov    ecx,DWORD PTR [esi+0x18]
1000b753:	89 4a 64             	mov    DWORD PTR [edx+0x64],ecx
1000b756:	8b 4e 0c             	mov    ecx,DWORD PTR [esi+0xc]
1000b759:	89 4a 54             	mov    DWORD PTR [edx+0x54],ecx
1000b75c:	8b 4e 08             	mov    ecx,DWORD PTR [esi+0x8]
1000b75f:	89 4a 58             	mov    DWORD PTR [edx+0x58],ecx
1000b762:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
1000b766:	83 c2 68             	add    edx,0x68
1000b769:	eb 99                	jmp    1000b704 <spng_get_text+0x63>
1000b76b:	bb 49 00 00 00       	mov    ebx,0x49
1000b770:	89 d8                	mov    eax,ebx
1000b772:	83 c4 1c             	add    esp,0x1c
1000b775:	5b                   	pop    ebx
1000b776:	5e                   	pop    esi
1000b777:	5f                   	pop    edi
1000b778:	5d                   	pop    ebp
1000b779:	c3                   	ret    

1000b77a <spng_get_bkgd>:
1000b77a:	57                   	push   edi
1000b77b:	56                   	push   esi
1000b77c:	51                   	push   ecx
1000b77d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b781:	85 f6                	test   esi,esi
1000b783:	75 07                	jne    1000b78c <spng_get_bkgd+0x12>
1000b785:	b8 01 00 00 00       	mov    eax,0x1
1000b78a:	eb 35                	jmp    1000b7c1 <spng_get_bkgd+0x47>
1000b78c:	31 d2                	xor    edx,edx
1000b78e:	89 f0                	mov    eax,esi
1000b790:	e8 57 a8 ff ff       	call   10005fec <read_chunks>
1000b795:	85 c0                	test   eax,eax
1000b797:	75 28                	jne    1000b7c1 <spng_get_bkgd+0x47>
1000b799:	f6 86 ad 00 00 00 01 	test   BYTE PTR [esi+0xad],0x1
1000b7a0:	74 1a                	je     1000b7bc <spng_get_bkgd+0x42>
1000b7a2:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b7a7:	74 dc                	je     1000b785 <spng_get_bkgd+0xb>
1000b7a9:	81 c6 90 05 00 00    	add    esi,0x590
1000b7af:	b9 0a 00 00 00       	mov    ecx,0xa
1000b7b4:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b7b8:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b7ba:	eb 05                	jmp    1000b7c1 <spng_get_bkgd+0x47>
1000b7bc:	b8 49 00 00 00       	mov    eax,0x49
1000b7c1:	5a                   	pop    edx
1000b7c2:	5e                   	pop    esi
1000b7c3:	5f                   	pop    edi
1000b7c4:	c3                   	ret    

1000b7c5 <spng_get_hist>:
1000b7c5:	57                   	push   edi
1000b7c6:	56                   	push   esi
1000b7c7:	51                   	push   ecx
1000b7c8:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b7cc:	85 f6                	test   esi,esi
1000b7ce:	75 07                	jne    1000b7d7 <spng_get_hist+0x12>
1000b7d0:	b8 01 00 00 00       	mov    eax,0x1
1000b7d5:	eb 35                	jmp    1000b80c <spng_get_hist+0x47>
1000b7d7:	31 d2                	xor    edx,edx
1000b7d9:	89 f0                	mov    eax,esi
1000b7db:	e8 0c a8 ff ff       	call   10005fec <read_chunks>
1000b7e0:	85 c0                	test   eax,eax
1000b7e2:	75 28                	jne    1000b80c <spng_get_hist+0x47>
1000b7e4:	f6 86 ad 00 00 00 02 	test   BYTE PTR [esi+0xad],0x2
1000b7eb:	74 1a                	je     1000b807 <spng_get_hist+0x42>
1000b7ed:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b7f2:	74 dc                	je     1000b7d0 <spng_get_hist+0xb>
1000b7f4:	81 c6 9a 05 00 00    	add    esi,0x59a
1000b7fa:	b9 80 00 00 00       	mov    ecx,0x80
1000b7ff:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b803:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b805:	eb 05                	jmp    1000b80c <spng_get_hist+0x47>
1000b807:	b8 49 00 00 00       	mov    eax,0x49
1000b80c:	5a                   	pop    edx
1000b80d:	5e                   	pop    esi
1000b80e:	5f                   	pop    edi
1000b80f:	c3                   	ret    

1000b810 <spng_get_phys>:
1000b810:	57                   	push   edi
1000b811:	56                   	push   esi
1000b812:	51                   	push   ecx
1000b813:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b817:	85 f6                	test   esi,esi
1000b819:	75 07                	jne    1000b822 <spng_get_phys+0x12>
1000b81b:	b8 01 00 00 00       	mov    eax,0x1
1000b820:	eb 35                	jmp    1000b857 <spng_get_phys+0x47>
1000b822:	31 d2                	xor    edx,edx
1000b824:	89 f0                	mov    eax,esi
1000b826:	e8 c1 a7 ff ff       	call   10005fec <read_chunks>
1000b82b:	85 c0                	test   eax,eax
1000b82d:	75 28                	jne    1000b857 <spng_get_phys+0x47>
1000b82f:	f6 86 ad 00 00 00 08 	test   BYTE PTR [esi+0xad],0x8
1000b836:	74 1a                	je     1000b852 <spng_get_phys+0x42>
1000b838:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b83d:	74 dc                	je     1000b81b <spng_get_phys+0xb>
1000b83f:	81 c6 a8 08 00 00    	add    esi,0x8a8
1000b845:	b9 03 00 00 00       	mov    ecx,0x3
1000b84a:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b84e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b850:	eb 05                	jmp    1000b857 <spng_get_phys+0x47>
1000b852:	b8 49 00 00 00       	mov    eax,0x49
1000b857:	5a                   	pop    edx
1000b858:	5e                   	pop    esi
1000b859:	5f                   	pop    edi
1000b85a:	c3                   	ret    

1000b85b <spng_get_splt>:
1000b85b:	57                   	push   edi
1000b85c:	56                   	push   esi
1000b85d:	53                   	push   ebx
1000b85e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b862:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000b866:	85 db                	test   ebx,ebx
1000b868:	75 07                	jne    1000b871 <spng_get_splt+0x16>
1000b86a:	b8 01 00 00 00       	mov    eax,0x1
1000b86f:	eb 45                	jmp    1000b8b6 <spng_get_splt+0x5b>
1000b871:	31 d2                	xor    edx,edx
1000b873:	89 d8                	mov    eax,ebx
1000b875:	e8 72 a7 ff ff       	call   10005fec <read_chunks>
1000b87a:	85 c0                	test   eax,eax
1000b87c:	75 38                	jne    1000b8b6 <spng_get_splt+0x5b>
1000b87e:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
1000b885:	74 2a                	je     1000b8b1 <spng_get_splt+0x56>
1000b887:	85 f6                	test   esi,esi
1000b889:	74 df                	je     1000b86a <spng_get_splt+0xf>
1000b88b:	8b 8b b4 08 00 00    	mov    ecx,DWORD PTR [ebx+0x8b4]
1000b891:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b896:	75 04                	jne    1000b89c <spng_get_splt+0x41>
1000b898:	89 0e                	mov    DWORD PTR [esi],ecx
1000b89a:	eb 1a                	jmp    1000b8b6 <spng_get_splt+0x5b>
1000b89c:	39 0e                	cmp    DWORD PTR [esi],ecx
1000b89e:	72 ca                	jb     1000b86a <spng_get_splt+0xf>
1000b8a0:	6b c9 5c             	imul   ecx,ecx,0x5c
1000b8a3:	8b b3 b8 08 00 00    	mov    esi,DWORD PTR [ebx+0x8b8]
1000b8a9:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b8ad:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000b8af:	eb 05                	jmp    1000b8b6 <spng_get_splt+0x5b>
1000b8b1:	b8 49 00 00 00       	mov    eax,0x49
1000b8b6:	5b                   	pop    ebx
1000b8b7:	5e                   	pop    esi
1000b8b8:	5f                   	pop    edi
1000b8b9:	c3                   	ret    

1000b8ba <spng_get_time>:
1000b8ba:	56                   	push   esi
1000b8bb:	53                   	push   ebx
1000b8bc:	51                   	push   ecx
1000b8bd:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b8c1:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000b8c5:	85 f6                	test   esi,esi
1000b8c7:	75 07                	jne    1000b8d0 <spng_get_time+0x16>
1000b8c9:	b8 01 00 00 00       	mov    eax,0x1
1000b8ce:	eb 32                	jmp    1000b902 <spng_get_time+0x48>
1000b8d0:	31 d2                	xor    edx,edx
1000b8d2:	89 f0                	mov    eax,esi
1000b8d4:	e8 13 a7 ff ff       	call   10005fec <read_chunks>
1000b8d9:	85 c0                	test   eax,eax
1000b8db:	75 25                	jne    1000b902 <spng_get_time+0x48>
1000b8dd:	f6 86 ad 00 00 00 20 	test   BYTE PTR [esi+0xad],0x20
1000b8e4:	74 17                	je     1000b8fd <spng_get_time+0x43>
1000b8e6:	85 db                	test   ebx,ebx
1000b8e8:	74 df                	je     1000b8c9 <spng_get_time+0xf>
1000b8ea:	8b 96 bc 08 00 00    	mov    edx,DWORD PTR [esi+0x8bc]
1000b8f0:	8b 8e c0 08 00 00    	mov    ecx,DWORD PTR [esi+0x8c0]
1000b8f6:	89 13                	mov    DWORD PTR [ebx],edx
1000b8f8:	89 4b 04             	mov    DWORD PTR [ebx+0x4],ecx
1000b8fb:	eb 05                	jmp    1000b902 <spng_get_time+0x48>
1000b8fd:	b8 49 00 00 00       	mov    eax,0x49
1000b902:	5a                   	pop    edx
1000b903:	5b                   	pop    ebx
1000b904:	5e                   	pop    esi
1000b905:	c3                   	ret    

1000b906 <spng_get_unknown_chunks>:
1000b906:	57                   	push   edi
1000b907:	56                   	push   esi
1000b908:	53                   	push   ebx
1000b909:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000b90d:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000b911:	85 db                	test   ebx,ebx
1000b913:	75 07                	jne    1000b91c <spng_get_unknown_chunks+0x16>
1000b915:	b8 01 00 00 00       	mov    eax,0x1
1000b91a:	eb 47                	jmp    1000b963 <spng_get_unknown_chunks+0x5d>
1000b91c:	31 d2                	xor    edx,edx
1000b91e:	89 d8                	mov    eax,ebx
1000b920:	e8 c7 a6 ff ff       	call   10005fec <read_chunks>
1000b925:	85 c0                	test   eax,eax
1000b927:	75 3a                	jne    1000b963 <spng_get_unknown_chunks+0x5d>
1000b929:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000b930:	74 2c                	je     1000b95e <spng_get_unknown_chunks+0x58>
1000b932:	85 f6                	test   esi,esi
1000b934:	74 df                	je     1000b915 <spng_get_unknown_chunks+0xf>
1000b936:	8b 93 d8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d8]
1000b93c:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b941:	75 04                	jne    1000b947 <spng_get_unknown_chunks+0x41>
1000b943:	89 16                	mov    DWORD PTR [esi],edx
1000b945:	eb 1c                	jmp    1000b963 <spng_get_unknown_chunks+0x5d>
1000b947:	39 16                	cmp    DWORD PTR [esi],edx
1000b949:	72 ca                	jb     1000b915 <spng_get_unknown_chunks+0xf>
1000b94b:	8b b3 dc 08 00 00    	mov    esi,DWORD PTR [ebx+0x8dc]
1000b951:	b9 04 00 00 00       	mov    ecx,0x4
1000b956:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b95a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b95c:	eb 05                	jmp    1000b963 <spng_get_unknown_chunks+0x5d>
1000b95e:	b8 49 00 00 00       	mov    eax,0x49
1000b963:	5b                   	pop    ebx
1000b964:	5e                   	pop    esi
1000b965:	5f                   	pop    edi
1000b966:	c3                   	ret    

1000b967 <spng_get_offs>:
1000b967:	57                   	push   edi
1000b968:	56                   	push   esi
1000b969:	51                   	push   ecx
1000b96a:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b96e:	85 f6                	test   esi,esi
1000b970:	75 07                	jne    1000b979 <spng_get_offs+0x12>
1000b972:	b8 01 00 00 00       	mov    eax,0x1
1000b977:	eb 35                	jmp    1000b9ae <spng_get_offs+0x47>
1000b979:	31 d2                	xor    edx,edx
1000b97b:	89 f0                	mov    eax,esi
1000b97d:	e8 6a a6 ff ff       	call   10005fec <read_chunks>
1000b982:	85 c0                	test   eax,eax
1000b984:	75 28                	jne    1000b9ae <spng_get_offs+0x47>
1000b986:	f6 86 ad 00 00 00 40 	test   BYTE PTR [esi+0xad],0x40
1000b98d:	74 1a                	je     1000b9a9 <spng_get_offs+0x42>
1000b98f:	83 7c 24 14 00       	cmp    DWORD PTR [esp+0x14],0x0
1000b994:	74 dc                	je     1000b972 <spng_get_offs+0xb>
1000b996:	81 c6 c4 08 00 00    	add    esi,0x8c4
1000b99c:	b9 03 00 00 00       	mov    ecx,0x3
1000b9a1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000b9a5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000b9a7:	eb 05                	jmp    1000b9ae <spng_get_offs+0x47>
1000b9a9:	b8 49 00 00 00       	mov    eax,0x49
1000b9ae:	5a                   	pop    edx
1000b9af:	5e                   	pop    esi
1000b9b0:	5f                   	pop    edi
1000b9b1:	c3                   	ret    

1000b9b2 <spng_get_exif>:
1000b9b2:	56                   	push   esi
1000b9b3:	53                   	push   ebx
1000b9b4:	51                   	push   ecx
1000b9b5:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000b9b9:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000b9bd:	85 f6                	test   esi,esi
1000b9bf:	75 07                	jne    1000b9c8 <spng_get_exif+0x16>
1000b9c1:	b8 01 00 00 00       	mov    eax,0x1
1000b9c6:	eb 32                	jmp    1000b9fa <spng_get_exif+0x48>
1000b9c8:	31 d2                	xor    edx,edx
1000b9ca:	89 f0                	mov    eax,esi
1000b9cc:	e8 1b a6 ff ff       	call   10005fec <read_chunks>
1000b9d1:	85 c0                	test   eax,eax
1000b9d3:	75 25                	jne    1000b9fa <spng_get_exif+0x48>
1000b9d5:	80 be ad 00 00 00 00 	cmp    BYTE PTR [esi+0xad],0x0
1000b9dc:	79 17                	jns    1000b9f5 <spng_get_exif+0x43>
1000b9de:	85 db                	test   ebx,ebx
1000b9e0:	74 df                	je     1000b9c1 <spng_get_exif+0xf>
1000b9e2:	8b 96 d0 08 00 00    	mov    edx,DWORD PTR [esi+0x8d0]
1000b9e8:	8b 8e d4 08 00 00    	mov    ecx,DWORD PTR [esi+0x8d4]
1000b9ee:	89 13                	mov    DWORD PTR [ebx],edx
1000b9f0:	89 4b 04             	mov    DWORD PTR [ebx+0x4],ecx
1000b9f3:	eb 05                	jmp    1000b9fa <spng_get_exif+0x48>
1000b9f5:	b8 49 00 00 00       	mov    eax,0x49
1000b9fa:	5a                   	pop    edx
1000b9fb:	5b                   	pop    ebx
1000b9fc:	5e                   	pop    esi
1000b9fd:	c3                   	ret    

1000b9fe <spng_set_ihdr>:
1000b9fe:	57                   	push   edi
1000b9ff:	56                   	push   esi
1000ba00:	53                   	push   ebx
1000ba01:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000ba05:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000ba09:	85 f6                	test   esi,esi
1000ba0b:	74 04                	je     1000ba11 <spng_set_ihdr+0x13>
1000ba0d:	85 db                	test   ebx,ebx
1000ba0f:	75 07                	jne    1000ba18 <spng_set_ihdr+0x1a>
1000ba11:	b8 01 00 00 00       	mov    eax,0x1
1000ba16:	eb 7e                	jmp    1000ba96 <spng_set_ihdr+0x98>
1000ba18:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000ba1c:	75 0b                	jne    1000ba29 <spng_set_ihdr+0x2b>
1000ba1e:	b8 52 00 00 00       	mov    eax,0x52
1000ba23:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000ba27:	74 6d                	je     1000ba96 <spng_set_ihdr+0x98>
1000ba29:	31 d2                	xor    edx,edx
1000ba2b:	89 d8                	mov    eax,ebx
1000ba2d:	e8 ba a5 ff ff       	call   10005fec <read_chunks>
1000ba32:	85 c0                	test   eax,eax
1000ba34:	75 60                	jne    1000ba96 <spng_set_ihdr+0x98>
1000ba36:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
1000ba3d:	75 d2                	jne    1000ba11 <spng_set_ihdr+0x13>
1000ba3f:	8b 0e                	mov    ecx,DWORD PTR [esi]
1000ba41:	b8 05 00 00 00       	mov    eax,0x5
1000ba46:	85 c9                	test   ecx,ecx
1000ba48:	7e 4c                	jle    1000ba96 <spng_set_ihdr+0x98>
1000ba4a:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
1000ba4d:	b8 06 00 00 00       	mov    eax,0x6
1000ba52:	85 d2                	test   edx,edx
1000ba54:	7e 40                	jle    1000ba96 <spng_set_ihdr+0x98>
1000ba56:	b8 07 00 00 00       	mov    eax,0x7
1000ba5b:	39 8b d4 00 00 00    	cmp    DWORD PTR [ebx+0xd4],ecx
1000ba61:	72 33                	jb     1000ba96 <spng_set_ihdr+0x98>
1000ba63:	b8 08 00 00 00       	mov    eax,0x8
1000ba68:	39 93 d8 00 00 00    	cmp    DWORD PTR [ebx+0xd8],edx
1000ba6e:	72 26                	jb     1000ba96 <spng_set_ihdr+0x98>
1000ba70:	89 f0                	mov    eax,esi
1000ba72:	e8 8a 9a ff ff       	call   10005501 <check_ihdr.part.13>
1000ba77:	85 c0                	test   eax,eax
1000ba79:	75 1b                	jne    1000ba96 <spng_set_ihdr+0x98>
1000ba7b:	8d bb f0 00 00 00    	lea    edi,[ebx+0xf0]
1000ba81:	b9 04 00 00 00       	mov    ecx,0x4
1000ba86:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ba88:	80 8b ac 00 00 00 01 	or     BYTE PTR [ebx+0xac],0x1
1000ba8f:	80 8b a8 00 00 00 01 	or     BYTE PTR [ebx+0xa8],0x1
1000ba96:	5b                   	pop    ebx
1000ba97:	5e                   	pop    esi
1000ba98:	5f                   	pop    edi
1000ba99:	c3                   	ret    

1000ba9a <spng_set_plte>:
1000ba9a:	57                   	push   edi
1000ba9b:	56                   	push   esi
1000ba9c:	53                   	push   ebx
1000ba9d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000baa1:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000baa5:	85 f6                	test   esi,esi
1000baa7:	74 04                	je     1000baad <spng_set_plte+0x13>
1000baa9:	85 db                	test   ebx,ebx
1000baab:	75 07                	jne    1000bab4 <spng_set_plte+0x1a>
1000baad:	b8 01 00 00 00       	mov    eax,0x1
1000bab2:	eb 53                	jmp    1000bb07 <spng_set_plte+0x6d>
1000bab4:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bab8:	75 0b                	jne    1000bac5 <spng_set_plte+0x2b>
1000baba:	b8 52 00 00 00       	mov    eax,0x52
1000babf:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bac3:	74 42                	je     1000bb07 <spng_set_plte+0x6d>
1000bac5:	31 d2                	xor    edx,edx
1000bac7:	89 d8                	mov    eax,ebx
1000bac9:	e8 1e a5 ff ff       	call   10005fec <read_chunks>
1000bace:	85 c0                	test   eax,eax
1000bad0:	75 35                	jne    1000bb07 <spng_set_plte+0x6d>
1000bad2:	f6 83 ac 00 00 00 01 	test   BYTE PTR [ebx+0xac],0x1
1000bad9:	74 d2                	je     1000baad <spng_set_plte+0x13>
1000badb:	8d 93 f0 00 00 00    	lea    edx,[ebx+0xf0]
1000bae1:	89 f0                	mov    eax,esi
1000bae3:	e8 a2 9a ff ff       	call   1000558a <check_plte>
1000bae8:	85 c0                	test   eax,eax
1000baea:	75 c1                	jne    1000baad <spng_set_plte+0x13>
1000baec:	8d bb 00 01 00 00    	lea    edi,[ebx+0x100]
1000baf2:	b9 01 01 00 00       	mov    ecx,0x101
1000baf7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000baf9:	80 8b ac 00 00 00 02 	or     BYTE PTR [ebx+0xac],0x2
1000bb00:	80 8b a8 00 00 00 02 	or     BYTE PTR [ebx+0xa8],0x2
1000bb07:	5b                   	pop    ebx
1000bb08:	5e                   	pop    esi
1000bb09:	5f                   	pop    edi
1000bb0a:	c3                   	ret    

1000bb0b <spng_set_trns>:
1000bb0b:	57                   	push   edi
1000bb0c:	56                   	push   esi
1000bb0d:	53                   	push   ebx
1000bb0e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bb12:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bb16:	85 f6                	test   esi,esi
1000bb18:	74 04                	je     1000bb1e <spng_set_trns+0x13>
1000bb1a:	85 db                	test   ebx,ebx
1000bb1c:	75 0a                	jne    1000bb28 <spng_set_trns+0x1d>
1000bb1e:	b8 01 00 00 00       	mov    eax,0x1
1000bb23:	e9 bc 00 00 00       	jmp    1000bbe4 <spng_set_trns+0xd9>
1000bb28:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bb2c:	75 0f                	jne    1000bb3d <spng_set_trns+0x32>
1000bb2e:	b8 52 00 00 00       	mov    eax,0x52
1000bb33:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bb37:	0f 84 a7 00 00 00    	je     1000bbe4 <spng_set_trns+0xd9>
1000bb3d:	31 d2                	xor    edx,edx
1000bb3f:	89 d8                	mov    eax,ebx
1000bb41:	e8 a6 a4 ff ff       	call   10005fec <read_chunks>
1000bb46:	85 c0                	test   eax,eax
1000bb48:	0f 85 96 00 00 00    	jne    1000bbe4 <spng_set_trns+0xd9>
1000bb4e:	8a 8b ac 00 00 00    	mov    cl,BYTE PTR [ebx+0xac]
1000bb54:	f6 c1 01             	test   cl,0x1
1000bb57:	74 78                	je     1000bbd1 <spng_set_trns+0xc6>
1000bb59:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000bb5f:	84 d2                	test   dl,dl
1000bb61:	75 0b                	jne    1000bb6e <spng_set_trns+0x63>
1000bb63:	8b 16                	mov    edx,DWORD PTR [esi]
1000bb65:	66 89 93 9c 07 00 00 	mov    WORD PTR [ebx+0x79c],dx
1000bb6c:	eb 53                	jmp    1000bbc1 <spng_set_trns+0xb6>
1000bb6e:	80 fa 02             	cmp    dl,0x2
1000bb71:	75 22                	jne    1000bb95 <spng_set_trns+0x8a>
1000bb73:	66 8b 56 02          	mov    dx,WORD PTR [esi+0x2]
1000bb77:	66 89 93 9e 07 00 00 	mov    WORD PTR [ebx+0x79e],dx
1000bb7e:	8b 56 04             	mov    edx,DWORD PTR [esi+0x4]
1000bb81:	66 89 93 a0 07 00 00 	mov    WORD PTR [ebx+0x7a0],dx
1000bb88:	66 8b 56 06          	mov    dx,WORD PTR [esi+0x6]
1000bb8c:	66 89 93 a2 07 00 00 	mov    WORD PTR [ebx+0x7a2],dx
1000bb93:	eb 2c                	jmp    1000bbc1 <spng_set_trns+0xb6>
1000bb95:	80 fa 03             	cmp    dl,0x3
1000bb98:	75 3e                	jne    1000bbd8 <spng_set_trns+0xcd>
1000bb9a:	80 e1 02             	and    cl,0x2
1000bb9d:	74 40                	je     1000bbdf <spng_set_trns+0xd4>
1000bb9f:	8b 4e 08             	mov    ecx,DWORD PTR [esi+0x8]
1000bba2:	3b 8b 00 01 00 00    	cmp    ecx,DWORD PTR [ebx+0x100]
1000bba8:	0f 87 70 ff ff ff    	ja     1000bb1e <spng_set_trns+0x13>
1000bbae:	89 8b a4 07 00 00    	mov    DWORD PTR [ebx+0x7a4],ecx
1000bbb4:	8d 93 a8 07 00 00    	lea    edx,[ebx+0x7a8]
1000bbba:	83 c6 0c             	add    esi,0xc
1000bbbd:	89 d7                	mov    edi,edx
1000bbbf:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000bbc1:	80 8b ad 00 00 00 04 	or     BYTE PTR [ebx+0xad],0x4
1000bbc8:	80 8b a9 00 00 00 04 	or     BYTE PTR [ebx+0xa9],0x4
1000bbcf:	eb 13                	jmp    1000bbe4 <spng_set_trns+0xd9>
1000bbd1:	b8 0f 00 00 00       	mov    eax,0xf
1000bbd6:	eb 0c                	jmp    1000bbe4 <spng_set_trns+0xd9>
1000bbd8:	b8 24 00 00 00       	mov    eax,0x24
1000bbdd:	eb 05                	jmp    1000bbe4 <spng_set_trns+0xd9>
1000bbdf:	b8 25 00 00 00       	mov    eax,0x25
1000bbe4:	5b                   	pop    ebx
1000bbe5:	5e                   	pop    esi
1000bbe6:	5f                   	pop    edi
1000bbe7:	c3                   	ret    

1000bbe8 <spng_set_chrm>:
1000bbe8:	57                   	push   edi
1000bbe9:	56                   	push   esi
1000bbea:	53                   	push   ebx
1000bbeb:	83 ec 30             	sub    esp,0x30
1000bbee:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
1000bbf2:	8b 74 24 44          	mov    esi,DWORD PTR [esp+0x44]
1000bbf6:	85 f6                	test   esi,esi
1000bbf8:	0f 84 26 01 00 00    	je     1000bd24 <spng_set_chrm+0x13c>
1000bbfe:	85 db                	test   ebx,ebx
1000bc00:	0f 84 1e 01 00 00    	je     1000bd24 <spng_set_chrm+0x13c>
1000bc06:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bc0a:	75 0f                	jne    1000bc1b <spng_set_chrm+0x33>
1000bc0c:	b8 52 00 00 00       	mov    eax,0x52
1000bc11:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bc15:	0f 84 15 01 00 00    	je     1000bd30 <spng_set_chrm+0x148>
1000bc1b:	31 d2                	xor    edx,edx
1000bc1d:	89 d8                	mov    eax,ebx
1000bc1f:	e8 c8 a3 ff ff       	call   10005fec <read_chunks>
1000bc24:	85 c0                	test   eax,eax
1000bc26:	0f 85 04 01 00 00    	jne    1000bd30 <spng_set_chrm+0x148>
1000bc2c:	d9 05 a8 d6 00 10    	fld    DWORD PTR ds:0x1000d6a8	1000bc2e: R_386_32	.text
1000bc32:	dd 06                	fld    QWORD PTR [esi]
1000bc34:	d8 c9                	fmul   st,st(1)
1000bc36:	d9 7c 24 0e          	fnstcw WORD PTR [esp+0xe]
1000bc3a:	66 8b 44 24 0e       	mov    ax,WORD PTR [esp+0xe]
1000bc3f:	80 cc 0c             	or     ah,0xc
1000bc42:	66 89 44 24 0c       	mov    WORD PTR [esp+0xc],ax
1000bc47:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bc4b:	df 3c 24             	fistp  QWORD PTR [esp]
1000bc4e:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bc52:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bc55:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000bc59:	dd 46 08             	fld    QWORD PTR [esi+0x8]
1000bc5c:	d8 c9                	fmul   st,st(1)
1000bc5e:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bc62:	df 3c 24             	fistp  QWORD PTR [esp]
1000bc65:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bc69:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bc6c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000bc70:	dd 46 10             	fld    QWORD PTR [esi+0x10]
1000bc73:	d8 c9                	fmul   st,st(1)
1000bc75:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bc79:	df 3c 24             	fistp  QWORD PTR [esp]
1000bc7c:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bc80:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bc83:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000bc87:	dd 46 18             	fld    QWORD PTR [esi+0x18]
1000bc8a:	d8 c9                	fmul   st,st(1)
1000bc8c:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bc90:	df 3c 24             	fistp  QWORD PTR [esp]
1000bc93:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bc97:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bc9a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000bc9e:	dd 46 20             	fld    QWORD PTR [esi+0x20]
1000bca1:	d8 c9                	fmul   st,st(1)
1000bca3:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bca7:	df 3c 24             	fistp  QWORD PTR [esp]
1000bcaa:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bcae:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bcb1:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000bcb5:	dd 46 28             	fld    QWORD PTR [esi+0x28]
1000bcb8:	d8 c9                	fmul   st,st(1)
1000bcba:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bcbe:	df 3c 24             	fistp  QWORD PTR [esp]
1000bcc1:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bcc5:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bcc8:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000bccc:	dd 46 30             	fld    QWORD PTR [esi+0x30]
1000bccf:	d8 c9                	fmul   st,st(1)
1000bcd1:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bcd5:	df 3c 24             	fistp  QWORD PTR [esp]
1000bcd8:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bcdc:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bcdf:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000bce3:	dc 4e 38             	fmul   QWORD PTR [esi+0x38]
1000bce6:	d9 6c 24 0c          	fldcw  WORD PTR [esp+0xc]
1000bcea:	df 3c 24             	fistp  QWORD PTR [esp]
1000bced:	d9 6c 24 0e          	fldcw  WORD PTR [esp+0xe]
1000bcf1:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000bcf4:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000bcf8:	8d 74 24 10          	lea    esi,[esp+0x10]
1000bcfc:	89 f0                	mov    eax,esi
1000bcfe:	e8 af 8d ff ff       	call   10004ab2 <check_chrm_int>
1000bd03:	85 c0                	test   eax,eax
1000bd05:	75 24                	jne    1000bd2b <spng_set_chrm+0x143>
1000bd07:	8d bb 04 05 00 00    	lea    edi,[ebx+0x504]
1000bd0d:	b9 08 00 00 00       	mov    ecx,0x8
1000bd12:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bd14:	80 8b ac 00 00 00 04 	or     BYTE PTR [ebx+0xac],0x4
1000bd1b:	80 8b a8 00 00 00 04 	or     BYTE PTR [ebx+0xa8],0x4
1000bd22:	eb 0c                	jmp    1000bd30 <spng_set_chrm+0x148>
1000bd24:	b8 01 00 00 00       	mov    eax,0x1
1000bd29:	eb 05                	jmp    1000bd30 <spng_set_chrm+0x148>
1000bd2b:	b8 22 00 00 00       	mov    eax,0x22
1000bd30:	83 c4 30             	add    esp,0x30
1000bd33:	5b                   	pop    ebx
1000bd34:	5e                   	pop    esi
1000bd35:	5f                   	pop    edi
1000bd36:	c3                   	ret    

1000bd37 <spng_set_chrm_int>:
1000bd37:	57                   	push   edi
1000bd38:	56                   	push   esi
1000bd39:	53                   	push   ebx
1000bd3a:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bd3e:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bd42:	85 f6                	test   esi,esi
1000bd44:	74 4a                	je     1000bd90 <spng_set_chrm_int+0x59>
1000bd46:	85 db                	test   ebx,ebx
1000bd48:	74 46                	je     1000bd90 <spng_set_chrm_int+0x59>
1000bd4a:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bd4e:	75 0b                	jne    1000bd5b <spng_set_chrm_int+0x24>
1000bd50:	b8 52 00 00 00       	mov    eax,0x52
1000bd55:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bd59:	74 41                	je     1000bd9c <spng_set_chrm_int+0x65>
1000bd5b:	31 d2                	xor    edx,edx
1000bd5d:	89 d8                	mov    eax,ebx
1000bd5f:	e8 88 a2 ff ff       	call   10005fec <read_chunks>
1000bd64:	85 c0                	test   eax,eax
1000bd66:	75 34                	jne    1000bd9c <spng_set_chrm_int+0x65>
1000bd68:	89 f0                	mov    eax,esi
1000bd6a:	e8 43 8d ff ff       	call   10004ab2 <check_chrm_int>
1000bd6f:	85 c0                	test   eax,eax
1000bd71:	75 24                	jne    1000bd97 <spng_set_chrm_int+0x60>
1000bd73:	8d bb 04 05 00 00    	lea    edi,[ebx+0x504]
1000bd79:	b9 08 00 00 00       	mov    ecx,0x8
1000bd7e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bd80:	80 8b ac 00 00 00 04 	or     BYTE PTR [ebx+0xac],0x4
1000bd87:	80 8b a8 00 00 00 04 	or     BYTE PTR [ebx+0xa8],0x4
1000bd8e:	eb 0c                	jmp    1000bd9c <spng_set_chrm_int+0x65>
1000bd90:	b8 01 00 00 00       	mov    eax,0x1
1000bd95:	eb 05                	jmp    1000bd9c <spng_set_chrm_int+0x65>
1000bd97:	b8 22 00 00 00       	mov    eax,0x22
1000bd9c:	5b                   	pop    ebx
1000bd9d:	5e                   	pop    esi
1000bd9e:	5f                   	pop    edi
1000bd9f:	c3                   	ret    

1000bda0 <spng_set_gama>:
1000bda0:	57                   	push   edi
1000bda1:	56                   	push   esi
1000bda2:	53                   	push   ebx
1000bda3:	83 ec 20             	sub    esp,0x20
1000bda6:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000bdaa:	dd 44 24 34          	fld    QWORD PTR [esp+0x34]
1000bdae:	85 db                	test   ebx,ebx
1000bdb0:	75 09                	jne    1000bdbb <spng_set_gama+0x1b>
1000bdb2:	dd d8                	fstp   st(0)
1000bdb4:	b8 01 00 00 00       	mov    eax,0x1
1000bdb9:	eb 69                	jmp    1000be24 <spng_set_gama+0x84>
1000bdbb:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bdbf:	75 0b                	jne    1000bdcc <spng_set_gama+0x2c>
1000bdc1:	b8 52 00 00 00       	mov    eax,0x52
1000bdc6:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bdca:	74 56                	je     1000be22 <spng_set_gama+0x82>
1000bdcc:	dd 5c 24 08          	fstp   QWORD PTR [esp+0x8]
1000bdd0:	31 d2                	xor    edx,edx
1000bdd2:	89 d8                	mov    eax,ebx
1000bdd4:	e8 13 a2 ff ff       	call   10005fec <read_chunks>
1000bdd9:	85 c0                	test   eax,eax
1000bddb:	75 47                	jne    1000be24 <spng_set_gama+0x84>
1000bddd:	dd 44 24 08          	fld    QWORD PTR [esp+0x8]
1000bde1:	d8 0d a8 d6 00 10    	fmul   DWORD PTR ds:0x1000d6a8	1000bde3: R_386_32	.text
1000bde7:	d9 7c 24 1e          	fnstcw WORD PTR [esp+0x1e]
1000bdeb:	66 8b 54 24 1e       	mov    dx,WORD PTR [esp+0x1e]
1000bdf0:	80 ce 0c             	or     dh,0xc
1000bdf3:	66 89 54 24 1c       	mov    WORD PTR [esp+0x1c],dx
1000bdf8:	d9 6c 24 1c          	fldcw  WORD PTR [esp+0x1c]
1000bdfc:	df 7c 24 10          	fistp  QWORD PTR [esp+0x10]
1000be00:	d9 6c 24 1e          	fldcw  WORD PTR [esp+0x1e]
1000be04:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000be08:	85 f6                	test   esi,esi
1000be0a:	7e a8                	jle    1000bdb4 <spng_set_gama+0x14>
1000be0c:	89 b3 7c 05 00 00    	mov    DWORD PTR [ebx+0x57c],esi
1000be12:	80 8b ac 00 00 00 10 	or     BYTE PTR [ebx+0xac],0x10
1000be19:	80 8b a8 00 00 00 10 	or     BYTE PTR [ebx+0xa8],0x10
1000be20:	eb 02                	jmp    1000be24 <spng_set_gama+0x84>
1000be22:	dd d8                	fstp   st(0)
1000be24:	83 c4 20             	add    esp,0x20
1000be27:	5b                   	pop    ebx
1000be28:	5e                   	pop    esi
1000be29:	5f                   	pop    edi
1000be2a:	c3                   	ret    

1000be2b <spng_set_gama_int>:
1000be2b:	56                   	push   esi
1000be2c:	53                   	push   ebx
1000be2d:	51                   	push   ecx
1000be2e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000be32:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000be36:	85 db                	test   ebx,ebx
1000be38:	75 07                	jne    1000be41 <spng_set_gama_int+0x16>
1000be3a:	b8 01 00 00 00       	mov    eax,0x1
1000be3f:	eb 36                	jmp    1000be77 <spng_set_gama_int+0x4c>
1000be41:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000be45:	75 0b                	jne    1000be52 <spng_set_gama_int+0x27>
1000be47:	b8 52 00 00 00       	mov    eax,0x52
1000be4c:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000be50:	74 25                	je     1000be77 <spng_set_gama_int+0x4c>
1000be52:	31 d2                	xor    edx,edx
1000be54:	89 d8                	mov    eax,ebx
1000be56:	e8 91 a1 ff ff       	call   10005fec <read_chunks>
1000be5b:	85 c0                	test   eax,eax
1000be5d:	75 18                	jne    1000be77 <spng_set_gama_int+0x4c>
1000be5f:	85 f6                	test   esi,esi
1000be61:	7e d7                	jle    1000be3a <spng_set_gama_int+0xf>
1000be63:	89 b3 7c 05 00 00    	mov    DWORD PTR [ebx+0x57c],esi
1000be69:	80 8b ac 00 00 00 10 	or     BYTE PTR [ebx+0xac],0x10
1000be70:	80 8b a8 00 00 00 10 	or     BYTE PTR [ebx+0xa8],0x10
1000be77:	5a                   	pop    edx
1000be78:	5b                   	pop    ebx
1000be79:	5e                   	pop    esi
1000be7a:	c3                   	ret    

1000be7b <spng_set_iccp>:
1000be7b:	55                   	push   ebp
1000be7c:	57                   	push   edi
1000be7d:	56                   	push   esi
1000be7e:	53                   	push   ebx
1000be7f:	83 ec 0c             	sub    esp,0xc
1000be82:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000be86:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
1000be8a:	85 db                	test   ebx,ebx
1000be8c:	74 04                	je     1000be92 <spng_set_iccp+0x17>
1000be8e:	85 f6                	test   esi,esi
1000be90:	75 07                	jne    1000be99 <spng_set_iccp+0x1e>
1000be92:	bd 01 00 00 00       	mov    ebp,0x1
1000be97:	eb 70                	jmp    1000bf09 <spng_set_iccp+0x8e>
1000be99:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000be9d:	75 0b                	jne    1000beaa <spng_set_iccp+0x2f>
1000be9f:	bd 52 00 00 00       	mov    ebp,0x52
1000bea4:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bea8:	74 5f                	je     1000bf09 <spng_set_iccp+0x8e>
1000beaa:	31 d2                	xor    edx,edx
1000beac:	89 d8                	mov    eax,ebx
1000beae:	e8 39 a1 ff ff       	call   10005fec <read_chunks>
1000beb3:	89 c5                	mov    ebp,eax
1000beb5:	85 c0                	test   eax,eax
1000beb7:	75 50                	jne    1000bf09 <spng_set_iccp+0x8e>
1000beb9:	89 f0                	mov    eax,esi
1000bebb:	e8 51 91 ff ff       	call   10005011 <check_png_keyword>
1000bec0:	89 c5                	mov    ebp,eax
1000bec2:	85 c0                	test   eax,eax
1000bec4:	75 3e                	jne    1000bf04 <spng_set_iccp+0x89>
1000bec6:	83 7e 50 00          	cmp    DWORD PTR [esi+0x50],0x0
1000beca:	74 c6                	je     1000be92 <spng_set_iccp+0x17>
1000becc:	8b 93 78 05 00 00    	mov    edx,DWORD PTR [ebx+0x578]
1000bed2:	85 d2                	test   edx,edx
1000bed4:	74 11                	je     1000bee7 <spng_set_iccp+0x6c>
1000bed6:	f6 83 a8 00 00 00 08 	test   BYTE PTR [ebx+0xa8],0x8
1000bedd:	75 08                	jne    1000bee7 <spng_set_iccp+0x6c>
1000bedf:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000bee2:	e8 ec 92 ff ff       	call   100051d3 <spng__free.isra.3>
1000bee7:	8d bb 24 05 00 00    	lea    edi,[ebx+0x524]
1000beed:	b9 16 00 00 00       	mov    ecx,0x16
1000bef2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000bef4:	80 8b ac 00 00 00 08 	or     BYTE PTR [ebx+0xac],0x8
1000befb:	80 8b a8 00 00 00 08 	or     BYTE PTR [ebx+0xa8],0x8
1000bf02:	eb 05                	jmp    1000bf09 <spng_set_iccp+0x8e>
1000bf04:	bd 27 00 00 00       	mov    ebp,0x27
1000bf09:	89 e8                	mov    eax,ebp
1000bf0b:	83 c4 0c             	add    esp,0xc
1000bf0e:	5b                   	pop    ebx
1000bf0f:	5e                   	pop    esi
1000bf10:	5f                   	pop    edi
1000bf11:	5d                   	pop    ebp
1000bf12:	c3                   	ret    

1000bf13 <spng_set_sbit>:
1000bf13:	56                   	push   esi
1000bf14:	53                   	push   ebx
1000bf15:	51                   	push   ecx
1000bf16:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000bf1a:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000bf1e:	85 f6                	test   esi,esi
1000bf20:	74 04                	je     1000bf26 <spng_set_sbit+0x13>
1000bf22:	85 db                	test   ebx,ebx
1000bf24:	75 07                	jne    1000bf2d <spng_set_sbit+0x1a>
1000bf26:	b8 01 00 00 00       	mov    eax,0x1
1000bf2b:	eb 5b                	jmp    1000bf88 <spng_set_sbit+0x75>
1000bf2d:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bf31:	75 0b                	jne    1000bf3e <spng_set_sbit+0x2b>
1000bf33:	b8 52 00 00 00       	mov    eax,0x52
1000bf38:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bf3c:	74 4a                	je     1000bf88 <spng_set_sbit+0x75>
1000bf3e:	31 d2                	xor    edx,edx
1000bf40:	89 d8                	mov    eax,ebx
1000bf42:	e8 a5 a0 ff ff       	call   10005fec <read_chunks>
1000bf47:	85 c0                	test   eax,eax
1000bf49:	75 3d                	jne    1000bf88 <spng_set_sbit+0x75>
1000bf4b:	8d 93 f0 00 00 00    	lea    edx,[ebx+0xf0]
1000bf51:	89 f0                	mov    eax,esi
1000bf53:	e8 6e 96 ff ff       	call   100055c6 <check_sbit.part.15>
1000bf58:	85 c0                	test   eax,eax
1000bf5a:	75 ca                	jne    1000bf26 <spng_set_sbit+0x13>
1000bf5c:	8a 93 ac 00 00 00    	mov    dl,BYTE PTR [ebx+0xac]
1000bf62:	f6 c2 01             	test   dl,0x1
1000bf65:	74 bf                	je     1000bf26 <spng_set_sbit+0x13>
1000bf67:	8b 0e                	mov    ecx,DWORD PTR [esi]
1000bf69:	89 8b 80 05 00 00    	mov    DWORD PTR [ebx+0x580],ecx
1000bf6f:	8a 4e 04             	mov    cl,BYTE PTR [esi+0x4]
1000bf72:	88 8b 84 05 00 00    	mov    BYTE PTR [ebx+0x584],cl
1000bf78:	83 ca 20             	or     edx,0x20
1000bf7b:	88 93 ac 00 00 00    	mov    BYTE PTR [ebx+0xac],dl
1000bf81:	80 8b a8 00 00 00 20 	or     BYTE PTR [ebx+0xa8],0x20
1000bf88:	5a                   	pop    edx
1000bf89:	5b                   	pop    ebx
1000bf8a:	5e                   	pop    esi
1000bf8b:	c3                   	ret    

1000bf8c <spng_set_srgb>:
1000bf8c:	53                   	push   ebx
1000bf8d:	83 ec 18             	sub    esp,0x18
1000bf90:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000bf94:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
1000bf98:	85 db                	test   ebx,ebx
1000bf9a:	75 07                	jne    1000bfa3 <spng_set_srgb+0x17>
1000bf9c:	b8 01 00 00 00       	mov    eax,0x1
1000bfa1:	eb 3f                	jmp    1000bfe2 <spng_set_srgb+0x56>
1000bfa3:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000bfa7:	75 0b                	jne    1000bfb4 <spng_set_srgb+0x28>
1000bfa9:	b8 52 00 00 00       	mov    eax,0x52
1000bfae:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000bfb2:	74 2e                	je     1000bfe2 <spng_set_srgb+0x56>
1000bfb4:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
1000bfb8:	31 d2                	xor    edx,edx
1000bfba:	89 d8                	mov    eax,ebx
1000bfbc:	e8 2b a0 ff ff       	call   10005fec <read_chunks>
1000bfc1:	85 c0                	test   eax,eax
1000bfc3:	75 1d                	jne    1000bfe2 <spng_set_srgb+0x56>
1000bfc5:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000bfc9:	80 f9 03             	cmp    cl,0x3
1000bfcc:	77 ce                	ja     1000bf9c <spng_set_srgb+0x10>
1000bfce:	88 8b 85 05 00 00    	mov    BYTE PTR [ebx+0x585],cl
1000bfd4:	80 8b ac 00 00 00 40 	or     BYTE PTR [ebx+0xac],0x40
1000bfdb:	80 8b a8 00 00 00 40 	or     BYTE PTR [ebx+0xa8],0x40
1000bfe2:	83 c4 18             	add    esp,0x18
1000bfe5:	5b                   	pop    ebx
1000bfe6:	c3                   	ret    

1000bfe7 <spng_set_text>:
1000bfe7:	55                   	push   ebp
1000bfe8:	57                   	push   edi
1000bfe9:	56                   	push   esi
1000bfea:	53                   	push   ebx
1000bfeb:	83 ec 1c             	sub    esp,0x1c
1000bfee:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000bff2:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000bff6:	85 ed                	test   ebp,ebp
1000bff8:	0f 94 c2             	sete   dl
1000bffb:	85 db                	test   ebx,ebx
1000bffd:	0f 94 c0             	sete   al
1000c000:	08 c2                	or     dl,al
1000c002:	75 07                	jne    1000c00b <spng_set_text+0x24>
1000c004:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c009:	75 0d                	jne    1000c018 <spng_set_text+0x31>
1000c00b:	c7 44 24 04 01 00 00 00 	mov    DWORD PTR [esp+0x4],0x1
1000c013:	e9 11 02 00 00       	jmp    1000c229 <spng_set_text+0x242>
1000c018:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c01c:	75 12                	jne    1000c030 <spng_set_text+0x49>
1000c01e:	c7 44 24 04 52 00 00 00 	mov    DWORD PTR [esp+0x4],0x52
1000c026:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c02a:	0f 84 f9 01 00 00    	je     1000c229 <spng_set_text+0x242>
1000c030:	31 d2                	xor    edx,edx
1000c032:	89 d8                	mov    eax,ebx
1000c034:	e8 b3 9f ff ff       	call   10005fec <read_chunks>
1000c039:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000c03d:	85 c0                	test   eax,eax
1000c03f:	0f 85 e4 01 00 00    	jne    1000c229 <spng_set_text+0x242>
1000c045:	89 ee                	mov    esi,ebp
1000c047:	31 ff                	xor    edi,edi
1000c049:	89 f0                	mov    eax,esi
1000c04b:	e8 c1 8f ff ff       	call   10005011 <check_png_keyword>
1000c050:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000c054:	85 c0                	test   eax,eax
1000c056:	0f 85 89 01 00 00    	jne    1000c1e5 <spng_set_text+0x1fe>
1000c05c:	8b 56 54             	mov    edx,DWORD PTR [esi+0x54]
1000c05f:	85 d2                	test   edx,edx
1000c061:	74 a8                	je     1000c00b <spng_set_text+0x24>
1000c063:	8b 46 58             	mov    eax,DWORD PTR [esi+0x58]
1000c066:	85 c0                	test   eax,eax
1000c068:	74 a1                	je     1000c00b <spng_set_text+0x24>
1000c06a:	8b 4e 50             	mov    ecx,DWORD PTR [esi+0x50]
1000c06d:	83 f9 01             	cmp    ecx,0x1
1000c070:	75 11                	jne    1000c083 <spng_set_text+0x9c>
1000c072:	f6 43 74 10          	test   BYTE PTR [ebx+0x74],0x10
1000c076:	74 5f                	je     1000c0d7 <spng_set_text+0xf0>
1000c078:	e8 9e 96 ff ff       	call   1000571b <check_png_text>
1000c07d:	85 c0                	test   eax,eax
1000c07f:	74 56                	je     1000c0d7 <spng_set_text+0xf0>
1000c081:	eb 88                	jmp    1000c00b <spng_set_text+0x24>
1000c083:	83 f9 02             	cmp    ecx,0x2
1000c086:	75 1e                	jne    1000c0a6 <spng_set_text+0xbf>
1000c088:	f6 43 74 10          	test   BYTE PTR [ebx+0x74],0x10
1000c08c:	74 0d                	je     1000c09b <spng_set_text+0xb4>
1000c08e:	e8 88 96 ff ff       	call   1000571b <check_png_text>
1000c093:	85 c0                	test   eax,eax
1000c095:	0f 85 70 ff ff ff    	jne    1000c00b <spng_set_text+0x24>
1000c09b:	80 7e 5d 00          	cmp    BYTE PTR [esi+0x5d],0x0
1000c09f:	74 36                	je     1000c0d7 <spng_set_text+0xf0>
1000c0a1:	e9 49 01 00 00       	jmp    1000c1ef <spng_set_text+0x208>
1000c0a6:	83 f9 03             	cmp    ecx,0x3
1000c0a9:	0f 85 5c ff ff ff    	jne    1000c00b <spng_set_text+0x24>
1000c0af:	80 7e 5c 01          	cmp    BYTE PTR [esi+0x5c],0x1
1000c0b3:	0f 87 40 01 00 00    	ja     1000c1f9 <spng_set_text+0x212>
1000c0b9:	80 7e 5d 00          	cmp    BYTE PTR [esi+0x5d],0x0
1000c0bd:	0f 85 40 01 00 00    	jne    1000c203 <spng_set_text+0x21c>
1000c0c3:	83 7e 60 00          	cmp    DWORD PTR [esi+0x60],0x0
1000c0c7:	0f 84 40 01 00 00    	je     1000c20d <spng_set_text+0x226>
1000c0cd:	83 7e 64 00          	cmp    DWORD PTR [esi+0x64],0x0
1000c0d1:	0f 84 40 01 00 00    	je     1000c217 <spng_set_text+0x230>
1000c0d7:	47                   	inc    edi
1000c0d8:	83 c6 68             	add    esi,0x68
1000c0db:	39 7c 24 38          	cmp    DWORD PTR [esp+0x38],edi
1000c0df:	0f 85 64 ff ff ff    	jne    1000c049 <spng_set_text+0x62>
1000c0e5:	50                   	push   eax
1000c0e6:	50                   	push   eax
1000c0e7:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
1000c0eb:	6a 70                	push   0x70
1000c0ed:	ff 53 60             	call   DWORD PTR [ebx+0x60]
1000c0f0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000c0f4:	83 c4 10             	add    esp,0x10
1000c0f7:	83 7c 24 08 00       	cmp    DWORD PTR [esp+0x8],0x0
1000c0fc:	0f 84 1f 01 00 00    	je     1000c221 <spng_set_text+0x23a>
1000c102:	31 ff                	xor    edi,edi
1000c104:	83 bb 8c 05 00 00 00 	cmp    DWORD PTR [ebx+0x58c],0x0
1000c10b:	74 45                	je     1000c152 <spng_set_text+0x16b>
1000c10d:	8b 93 8c 05 00 00    	mov    edx,DWORD PTR [ebx+0x58c]
1000c113:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c116:	39 bb 88 05 00 00    	cmp    DWORD PTR [ebx+0x588],edi
1000c11c:	76 2f                	jbe    1000c14d <spng_set_text+0x166>
1000c11e:	80 bb a8 00 00 00 00 	cmp    BYTE PTR [ebx+0xa8],0x0
1000c125:	78 26                	js     1000c14d <spng_set_text+0x166>
1000c127:	6b f7 70             	imul   esi,edi,0x70
1000c12a:	8b 54 32 04          	mov    edx,DWORD PTR [edx+esi*1+0x4]
1000c12e:	e8 a0 90 ff ff       	call   100051d3 <spng__free.isra.3>
1000c133:	03 b3 8c 05 00 00    	add    esi,DWORD PTR [ebx+0x58c]
1000c139:	80 7e 10 00          	cmp    BYTE PTR [esi+0x10],0x0
1000c13d:	74 0b                	je     1000c14a <spng_set_text+0x163>
1000c13f:	8b 56 08             	mov    edx,DWORD PTR [esi+0x8]
1000c142:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c145:	e8 89 90 ff ff       	call   100051d3 <spng__free.isra.3>
1000c14a:	47                   	inc    edi
1000c14b:	eb c0                	jmp    1000c10d <spng_set_text+0x126>
1000c14d:	e8 81 90 ff ff       	call   100051d3 <spng__free.isra.3>
1000c152:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000c156:	8d 50 20             	lea    edx,[eax+0x20]
1000c159:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000c161:	31 c0                	xor    eax,eax
1000c163:	8b 4d 50             	mov    ecx,DWORD PTR [ebp+0x50]
1000c166:	89 4a e0             	mov    DWORD PTR [edx-0x20],ecx
1000c169:	89 52 e4             	mov    DWORD PTR [edx-0x1c],edx
1000c16c:	83 c9 ff             	or     ecx,0xffffffff
1000c16f:	89 ef                	mov    edi,ebp
1000c171:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000c173:	f7 d1                	not    ecx
1000c175:	49                   	dec    ecx
1000c176:	89 d7                	mov    edi,edx
1000c178:	89 ee                	mov    esi,ebp
1000c17a:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000c17c:	8b 4d 58             	mov    ecx,DWORD PTR [ebp+0x58]
1000c17f:	89 4a e8             	mov    DWORD PTR [edx-0x18],ecx
1000c182:	8b 4d 54             	mov    ecx,DWORD PTR [ebp+0x54]
1000c185:	89 4a ec             	mov    DWORD PTR [edx-0x14],ecx
1000c188:	8b 4d 50             	mov    ecx,DWORD PTR [ebp+0x50]
1000c18b:	83 f9 02             	cmp    ecx,0x2
1000c18e:	75 06                	jne    1000c196 <spng_set_text+0x1af>
1000c190:	c6 42 f0 01          	mov    BYTE PTR [edx-0x10],0x1
1000c194:	eb 17                	jmp    1000c1ad <spng_set_text+0x1c6>
1000c196:	83 f9 03             	cmp    ecx,0x3
1000c199:	75 12                	jne    1000c1ad <spng_set_text+0x1c6>
1000c19b:	8a 4d 5c             	mov    cl,BYTE PTR [ebp+0x5c]
1000c19e:	88 4a f0             	mov    BYTE PTR [edx-0x10],cl
1000c1a1:	8b 4d 60             	mov    ecx,DWORD PTR [ebp+0x60]
1000c1a4:	89 4a f4             	mov    DWORD PTR [edx-0xc],ecx
1000c1a7:	8b 4d 64             	mov    ecx,DWORD PTR [ebp+0x64]
1000c1aa:	89 4a f8             	mov    DWORD PTR [edx-0x8],ecx
1000c1ad:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
1000c1b1:	83 c5 68             	add    ebp,0x68
1000c1b4:	83 c2 70             	add    edx,0x70
1000c1b7:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
1000c1bb:	39 7c 24 38          	cmp    DWORD PTR [esp+0x38],edi
1000c1bf:	77 a2                	ja     1000c163 <spng_set_text+0x17c>
1000c1c1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000c1c5:	89 83 8c 05 00 00    	mov    DWORD PTR [ebx+0x58c],eax
1000c1cb:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c1cf:	89 83 88 05 00 00    	mov    DWORD PTR [ebx+0x588],eax
1000c1d5:	80 8b ac 00 00 00 80 	or     BYTE PTR [ebx+0xac],0x80
1000c1dc:	80 8b a8 00 00 00 80 	or     BYTE PTR [ebx+0xa8],0x80
1000c1e3:	eb 44                	jmp    1000c229 <spng_set_text+0x242>
1000c1e5:	c7 44 24 04 2c 00 00 00 	mov    DWORD PTR [esp+0x4],0x2c
1000c1ed:	eb 3a                	jmp    1000c229 <spng_set_text+0x242>
1000c1ef:	c7 44 24 04 2e 00 00 00 	mov    DWORD PTR [esp+0x4],0x2e
1000c1f7:	eb 30                	jmp    1000c229 <spng_set_text+0x242>
1000c1f9:	c7 44 24 04 30 00 00 00 	mov    DWORD PTR [esp+0x4],0x30
1000c201:	eb 26                	jmp    1000c229 <spng_set_text+0x242>
1000c203:	c7 44 24 04 31 00 00 00 	mov    DWORD PTR [esp+0x4],0x31
1000c20b:	eb 1c                	jmp    1000c229 <spng_set_text+0x242>
1000c20d:	c7 44 24 04 32 00 00 00 	mov    DWORD PTR [esp+0x4],0x32
1000c215:	eb 12                	jmp    1000c229 <spng_set_text+0x242>
1000c217:	c7 44 24 04 33 00 00 00 	mov    DWORD PTR [esp+0x4],0x33
1000c21f:	eb 08                	jmp    1000c229 <spng_set_text+0x242>
1000c221:	c7 44 24 04 02 00 00 00 	mov    DWORD PTR [esp+0x4],0x2
1000c229:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000c22d:	83 c4 1c             	add    esp,0x1c
1000c230:	5b                   	pop    ebx
1000c231:	5e                   	pop    esi
1000c232:	5f                   	pop    edi
1000c233:	5d                   	pop    ebp
1000c234:	c3                   	ret    

1000c235 <spng_set_bkgd>:
1000c235:	57                   	push   edi
1000c236:	56                   	push   esi
1000c237:	53                   	push   ebx
1000c238:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c23c:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c240:	85 db                	test   ebx,ebx
1000c242:	74 04                	je     1000c248 <spng_set_bkgd+0x13>
1000c244:	85 f6                	test   esi,esi
1000c246:	75 0a                	jne    1000c252 <spng_set_bkgd+0x1d>
1000c248:	b8 01 00 00 00       	mov    eax,0x1
1000c24d:	e9 ae 00 00 00       	jmp    1000c300 <spng_set_bkgd+0xcb>
1000c252:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c256:	75 0f                	jne    1000c267 <spng_set_bkgd+0x32>
1000c258:	b8 52 00 00 00       	mov    eax,0x52
1000c25d:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c261:	0f 84 99 00 00 00    	je     1000c300 <spng_set_bkgd+0xcb>
1000c267:	31 d2                	xor    edx,edx
1000c269:	89 d8                	mov    eax,ebx
1000c26b:	e8 7c 9d ff ff       	call   10005fec <read_chunks>
1000c270:	85 c0                	test   eax,eax
1000c272:	0f 85 88 00 00 00    	jne    1000c300 <spng_set_bkgd+0xcb>
1000c278:	8b bb ac 00 00 00    	mov    edi,DWORD PTR [ebx+0xac]
1000c27e:	f7 c7 01 00 00 00    	test   edi,0x1
1000c284:	74 c2                	je     1000c248 <spng_set_bkgd+0x13>
1000c286:	8a 93 f9 00 00 00    	mov    dl,BYTE PTR [ebx+0xf9]
1000c28c:	88 d1                	mov    cl,dl
1000c28e:	80 e1 fb             	and    cl,0xfb
1000c291:	75 0c                	jne    1000c29f <spng_set_bkgd+0x6a>
1000c293:	66 8b 16             	mov    dx,WORD PTR [esi]
1000c296:	66 89 93 90 05 00 00 	mov    WORD PTR [ebx+0x590],dx
1000c29d:	eb 45                	jmp    1000c2e4 <spng_set_bkgd+0xaf>
1000c29f:	80 f9 02             	cmp    cl,0x2
1000c2a2:	75 23                	jne    1000c2c7 <spng_set_bkgd+0x92>
1000c2a4:	66 8b 56 02          	mov    dx,WORD PTR [esi+0x2]
1000c2a8:	66 89 93 92 05 00 00 	mov    WORD PTR [ebx+0x592],dx
1000c2af:	66 8b 56 04          	mov    dx,WORD PTR [esi+0x4]
1000c2b3:	66 89 93 94 05 00 00 	mov    WORD PTR [ebx+0x594],dx
1000c2ba:	66 8b 56 06          	mov    dx,WORD PTR [esi+0x6]
1000c2be:	66 89 93 96 05 00 00 	mov    WORD PTR [ebx+0x596],dx
1000c2c5:	eb 1d                	jmp    1000c2e4 <spng_set_bkgd+0xaf>
1000c2c7:	80 fa 03             	cmp    dl,0x3
1000c2ca:	75 18                	jne    1000c2e4 <spng_set_bkgd+0xaf>
1000c2cc:	83 e7 02             	and    edi,0x2
1000c2cf:	74 23                	je     1000c2f4 <spng_set_bkgd+0xbf>
1000c2d1:	0f b7 4e 08          	movzx  ecx,WORD PTR [esi+0x8]
1000c2d5:	3b 8b 00 01 00 00    	cmp    ecx,DWORD PTR [ebx+0x100]
1000c2db:	73 1e                	jae    1000c2fb <spng_set_bkgd+0xc6>
1000c2dd:	66 89 8b 98 05 00 00 	mov    WORD PTR [ebx+0x598],cx
1000c2e4:	80 8b ad 00 00 00 01 	or     BYTE PTR [ebx+0xad],0x1
1000c2eb:	80 8b a9 00 00 00 01 	or     BYTE PTR [ebx+0xa9],0x1
1000c2f2:	eb 0c                	jmp    1000c300 <spng_set_bkgd+0xcb>
1000c2f4:	b8 34 00 00 00       	mov    eax,0x34
1000c2f9:	eb 05                	jmp    1000c300 <spng_set_bkgd+0xcb>
1000c2fb:	b8 35 00 00 00       	mov    eax,0x35
1000c300:	5b                   	pop    ebx
1000c301:	5e                   	pop    esi
1000c302:	5f                   	pop    edi
1000c303:	c3                   	ret    

1000c304 <spng_set_hist>:
1000c304:	57                   	push   edi
1000c305:	56                   	push   esi
1000c306:	53                   	push   ebx
1000c307:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c30b:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c30f:	85 f6                	test   esi,esi
1000c311:	74 48                	je     1000c35b <spng_set_hist+0x57>
1000c313:	85 db                	test   ebx,ebx
1000c315:	74 44                	je     1000c35b <spng_set_hist+0x57>
1000c317:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c31b:	75 0b                	jne    1000c328 <spng_set_hist+0x24>
1000c31d:	b8 52 00 00 00       	mov    eax,0x52
1000c322:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c326:	74 3f                	je     1000c367 <spng_set_hist+0x63>
1000c328:	31 d2                	xor    edx,edx
1000c32a:	89 d8                	mov    eax,ebx
1000c32c:	e8 bb 9c ff ff       	call   10005fec <read_chunks>
1000c331:	85 c0                	test   eax,eax
1000c333:	75 32                	jne    1000c367 <spng_set_hist+0x63>
1000c335:	f6 83 ac 00 00 00 02 	test   BYTE PTR [ebx+0xac],0x2
1000c33c:	74 24                	je     1000c362 <spng_set_hist+0x5e>
1000c33e:	8d bb 9a 05 00 00    	lea    edi,[ebx+0x59a]
1000c344:	b9 80 00 00 00       	mov    ecx,0x80
1000c349:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c34b:	80 8b ad 00 00 00 02 	or     BYTE PTR [ebx+0xad],0x2
1000c352:	80 8b a9 00 00 00 02 	or     BYTE PTR [ebx+0xa9],0x2
1000c359:	eb 0c                	jmp    1000c367 <spng_set_hist+0x63>
1000c35b:	b8 01 00 00 00       	mov    eax,0x1
1000c360:	eb 05                	jmp    1000c367 <spng_set_hist+0x63>
1000c362:	b8 36 00 00 00       	mov    eax,0x36
1000c367:	5b                   	pop    ebx
1000c368:	5e                   	pop    esi
1000c369:	5f                   	pop    edi
1000c36a:	c3                   	ret    

1000c36b <spng_set_phys>:
1000c36b:	57                   	push   edi
1000c36c:	56                   	push   esi
1000c36d:	53                   	push   ebx
1000c36e:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c372:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c376:	85 f6                	test   esi,esi
1000c378:	74 4a                	je     1000c3c4 <spng_set_phys+0x59>
1000c37a:	85 db                	test   ebx,ebx
1000c37c:	74 46                	je     1000c3c4 <spng_set_phys+0x59>
1000c37e:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c382:	75 0b                	jne    1000c38f <spng_set_phys+0x24>
1000c384:	b8 52 00 00 00       	mov    eax,0x52
1000c389:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c38d:	74 41                	je     1000c3d0 <spng_set_phys+0x65>
1000c38f:	31 d2                	xor    edx,edx
1000c391:	89 d8                	mov    eax,ebx
1000c393:	e8 54 9c ff ff       	call   10005fec <read_chunks>
1000c398:	85 c0                	test   eax,eax
1000c39a:	75 34                	jne    1000c3d0 <spng_set_phys+0x65>
1000c39c:	89 f0                	mov    eax,esi
1000c39e:	e8 1b 93 ff ff       	call   100056be <check_phys>
1000c3a3:	85 c0                	test   eax,eax
1000c3a5:	75 24                	jne    1000c3cb <spng_set_phys+0x60>
1000c3a7:	8d bb a8 08 00 00    	lea    edi,[ebx+0x8a8]
1000c3ad:	b9 03 00 00 00       	mov    ecx,0x3
1000c3b2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c3b4:	80 8b ad 00 00 00 08 	or     BYTE PTR [ebx+0xad],0x8
1000c3bb:	80 8b a9 00 00 00 08 	or     BYTE PTR [ebx+0xa9],0x8
1000c3c2:	eb 0c                	jmp    1000c3d0 <spng_set_phys+0x65>
1000c3c4:	b8 01 00 00 00       	mov    eax,0x1
1000c3c9:	eb 05                	jmp    1000c3d0 <spng_set_phys+0x65>
1000c3cb:	b8 37 00 00 00       	mov    eax,0x37
1000c3d0:	5b                   	pop    ebx
1000c3d1:	5e                   	pop    esi
1000c3d2:	5f                   	pop    edi
1000c3d3:	c3                   	ret    

1000c3d4 <spng_set_splt>:
1000c3d4:	55                   	push   ebp
1000c3d5:	57                   	push   edi
1000c3d6:	56                   	push   esi
1000c3d7:	53                   	push   ebx
1000c3d8:	83 ec 1c             	sub    esp,0x1c
1000c3db:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000c3df:	83 7c 24 34 00       	cmp    DWORD PTR [esp+0x34],0x0
1000c3e4:	0f 94 c2             	sete   dl
1000c3e7:	85 db                	test   ebx,ebx
1000c3e9:	0f 94 c0             	sete   al
1000c3ec:	08 c2                	or     dl,al
1000c3ee:	0f 85 c7 00 00 00    	jne    1000c4bb <spng_set_splt+0xe7>
1000c3f4:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c3f9:	0f 84 bc 00 00 00    	je     1000c4bb <spng_set_splt+0xe7>
1000c3ff:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c403:	75 0f                	jne    1000c414 <spng_set_splt+0x40>
1000c405:	be 52 00 00 00       	mov    esi,0x52
1000c40a:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c40e:	0f 84 ba 00 00 00    	je     1000c4ce <spng_set_splt+0xfa>
1000c414:	31 d2                	xor    edx,edx
1000c416:	89 d8                	mov    eax,ebx
1000c418:	e8 cf 9b ff ff       	call   10005fec <read_chunks>
1000c41d:	89 c6                	mov    esi,eax
1000c41f:	85 c0                	test   eax,eax
1000c421:	0f 85 a7 00 00 00    	jne    1000c4ce <spng_set_splt+0xfa>
1000c427:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000c42b:	31 ed                	xor    ebp,ebp
1000c42d:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000c431:	89 f8                	mov    eax,edi
1000c433:	e8 d9 8b ff ff       	call   10005011 <check_png_keyword>
1000c438:	89 c6                	mov    esi,eax
1000c43a:	85 c0                	test   eax,eax
1000c43c:	0f 85 80 00 00 00    	jne    1000c4c2 <spng_set_splt+0xee>
1000c442:	83 c7 5c             	add    edi,0x5c
1000c445:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000c449:	8a 41 50             	mov    al,BYTE PTR [ecx+0x50]
1000c44c:	83 e8 08             	sub    eax,0x8
1000c44f:	a8 f7                	test   al,0xf7
1000c451:	75 76                	jne    1000c4c9 <spng_set_splt+0xf5>
1000c453:	45                   	inc    ebp
1000c454:	39 6c 24 38          	cmp    DWORD PTR [esp+0x38],ebp
1000c458:	75 d3                	jne    1000c42d <spng_set_splt+0x59>
1000c45a:	f6 83 ad 00 00 00 10 	test   BYTE PTR [ebx+0xad],0x10
1000c461:	74 34                	je     1000c497 <spng_set_splt+0xc3>
1000c463:	f6 83 a9 00 00 00 10 	test   BYTE PTR [ebx+0xa9],0x10
1000c46a:	75 2b                	jne    1000c497 <spng_set_splt+0xc3>
1000c46c:	31 ff                	xor    edi,edi
1000c46e:	8b 93 b8 08 00 00    	mov    edx,DWORD PTR [ebx+0x8b8]
1000c474:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c477:	39 bb b4 08 00 00    	cmp    DWORD PTR [ebx+0x8b4],edi
1000c47d:	76 13                	jbe    1000c492 <spng_set_splt+0xbe>
1000c47f:	6b cf 5c             	imul   ecx,edi,0x5c
1000c482:	8b 54 0a 58          	mov    edx,DWORD PTR [edx+ecx*1+0x58]
1000c486:	85 d2                	test   edx,edx
1000c488:	74 05                	je     1000c48f <spng_set_splt+0xbb>
1000c48a:	e8 44 8d ff ff       	call   100051d3 <spng__free.isra.3>
1000c48f:	47                   	inc    edi
1000c490:	eb dc                	jmp    1000c46e <spng_set_splt+0x9a>
1000c492:	e8 3c 8d ff ff       	call   100051d3 <spng__free.isra.3>
1000c497:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000c49b:	89 83 b8 08 00 00    	mov    DWORD PTR [ebx+0x8b8],eax
1000c4a1:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c4a5:	89 83 b4 08 00 00    	mov    DWORD PTR [ebx+0x8b4],eax
1000c4ab:	80 8b ad 00 00 00 10 	or     BYTE PTR [ebx+0xad],0x10
1000c4b2:	80 8b a9 00 00 00 10 	or     BYTE PTR [ebx+0xa9],0x10
1000c4b9:	eb 13                	jmp    1000c4ce <spng_set_splt+0xfa>
1000c4bb:	be 01 00 00 00       	mov    esi,0x1
1000c4c0:	eb 0c                	jmp    1000c4ce <spng_set_splt+0xfa>
1000c4c2:	be 38 00 00 00       	mov    esi,0x38
1000c4c7:	eb 05                	jmp    1000c4ce <spng_set_splt+0xfa>
1000c4c9:	be 3a 00 00 00       	mov    esi,0x3a
1000c4ce:	89 f0                	mov    eax,esi
1000c4d0:	83 c4 1c             	add    esp,0x1c
1000c4d3:	5b                   	pop    ebx
1000c4d4:	5e                   	pop    esi
1000c4d5:	5f                   	pop    edi
1000c4d6:	5d                   	pop    ebp
1000c4d7:	c3                   	ret    

1000c4d8 <spng_set_time>:
1000c4d8:	56                   	push   esi
1000c4d9:	53                   	push   ebx
1000c4da:	51                   	push   ecx
1000c4db:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c4df:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c4e3:	85 f6                	test   esi,esi
1000c4e5:	74 4e                	je     1000c535 <spng_set_time+0x5d>
1000c4e7:	85 db                	test   ebx,ebx
1000c4e9:	74 4a                	je     1000c535 <spng_set_time+0x5d>
1000c4eb:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c4ef:	75 0b                	jne    1000c4fc <spng_set_time+0x24>
1000c4f1:	b8 52 00 00 00       	mov    eax,0x52
1000c4f6:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c4fa:	74 45                	je     1000c541 <spng_set_time+0x69>
1000c4fc:	31 d2                	xor    edx,edx
1000c4fe:	89 d8                	mov    eax,ebx
1000c500:	e8 e7 9a ff ff       	call   10005fec <read_chunks>
1000c505:	85 c0                	test   eax,eax
1000c507:	75 38                	jne    1000c541 <spng_set_time+0x69>
1000c509:	89 f0                	mov    eax,esi
1000c50b:	e8 d3 91 ff ff       	call   100056e3 <check_time>
1000c510:	85 c0                	test   eax,eax
1000c512:	75 28                	jne    1000c53c <spng_set_time+0x64>
1000c514:	8b 16                	mov    edx,DWORD PTR [esi]
1000c516:	8b 4e 04             	mov    ecx,DWORD PTR [esi+0x4]
1000c519:	89 93 bc 08 00 00    	mov    DWORD PTR [ebx+0x8bc],edx
1000c51f:	89 8b c0 08 00 00    	mov    DWORD PTR [ebx+0x8c0],ecx
1000c525:	80 8b ad 00 00 00 20 	or     BYTE PTR [ebx+0xad],0x20
1000c52c:	80 8b a9 00 00 00 20 	or     BYTE PTR [ebx+0xa9],0x20
1000c533:	eb 0c                	jmp    1000c541 <spng_set_time+0x69>
1000c535:	b8 01 00 00 00       	mov    eax,0x1
1000c53a:	eb 05                	jmp    1000c541 <spng_set_time+0x69>
1000c53c:	b8 3b 00 00 00       	mov    eax,0x3b
1000c541:	5a                   	pop    edx
1000c542:	5b                   	pop    ebx
1000c543:	5e                   	pop    esi
1000c544:	c3                   	ret    

1000c545 <spng_set_unknown_chunks>:
1000c545:	55                   	push   ebp
1000c546:	57                   	push   edi
1000c547:	56                   	push   esi
1000c548:	53                   	push   ebx
1000c549:	83 ec 1c             	sub    esp,0x1c
1000c54c:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
1000c550:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000c554:	85 ff                	test   edi,edi
1000c556:	0f 94 c2             	sete   dl
1000c559:	85 db                	test   ebx,ebx
1000c55b:	0f 94 c0             	sete   al
1000c55e:	08 c2                	or     dl,al
1000c560:	75 07                	jne    1000c569 <spng_set_unknown_chunks+0x24>
1000c562:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000c567:	75 0a                	jne    1000c573 <spng_set_unknown_chunks+0x2e>
1000c569:	be 01 00 00 00       	mov    esi,0x1
1000c56e:	e9 d0 00 00 00       	jmp    1000c643 <spng_set_unknown_chunks+0xfe>
1000c573:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c577:	75 0f                	jne    1000c588 <spng_set_unknown_chunks+0x43>
1000c579:	be 52 00 00 00       	mov    esi,0x52
1000c57e:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c582:	0f 84 bb 00 00 00    	je     1000c643 <spng_set_unknown_chunks+0xfe>
1000c588:	31 d2                	xor    edx,edx
1000c58a:	89 d8                	mov    eax,ebx
1000c58c:	e8 5b 9a ff ff       	call   10005fec <read_chunks>
1000c591:	89 c6                	mov    esi,eax
1000c593:	85 c0                	test   eax,eax
1000c595:	0f 85 a8 00 00 00    	jne    1000c643 <spng_set_unknown_chunks+0xfe>
1000c59b:	8d 47 04             	lea    eax,[edi+0x4]
1000c59e:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000c5a6:	bd 01 00 00 00       	mov    ebp,0x1
1000c5ab:	83 38 00             	cmp    DWORD PTR [eax],0x0
1000c5ae:	0f 88 8a 00 00 00    	js     1000c63e <spng_set_unknown_chunks+0xf9>
1000c5b4:	74 06                	je     1000c5bc <spng_set_unknown_chunks+0x77>
1000c5b6:	83 78 04 00          	cmp    DWORD PTR [eax+0x4],0x0
1000c5ba:	74 ad                	je     1000c569 <spng_set_unknown_chunks+0x24>
1000c5bc:	8b 48 08             	mov    ecx,DWORD PTR [eax+0x8]
1000c5bf:	83 f9 08             	cmp    ecx,0x8
1000c5c2:	77 a5                	ja     1000c569 <spng_set_unknown_chunks+0x24>
1000c5c4:	83 c0 10             	add    eax,0x10
1000c5c7:	89 ea                	mov    edx,ebp
1000c5c9:	d3 e2                	shl    edx,cl
1000c5cb:	89 d1                	mov    ecx,edx
1000c5cd:	81 e1 06 01 00 00    	and    ecx,0x106
1000c5d3:	74 94                	je     1000c569 <spng_set_unknown_chunks+0x24>
1000c5d5:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
1000c5d9:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000c5dd:	39 4c 24 38          	cmp    DWORD PTR [esp+0x38],ecx
1000c5e1:	75 c8                	jne    1000c5ab <spng_set_unknown_chunks+0x66>
1000c5e3:	f6 83 ae 00 00 00 01 	test   BYTE PTR [ebx+0xae],0x1
1000c5ea:	74 32                	je     1000c61e <spng_set_unknown_chunks+0xd9>
1000c5ec:	f6 83 aa 00 00 00 01 	test   BYTE PTR [ebx+0xaa],0x1
1000c5f3:	75 29                	jne    1000c61e <spng_set_unknown_chunks+0xd9>
1000c5f5:	31 ed                	xor    ebp,ebp
1000c5f7:	8b 93 dc 08 00 00    	mov    edx,DWORD PTR [ebx+0x8dc]
1000c5fd:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c600:	39 ab d8 08 00 00    	cmp    DWORD PTR [ebx+0x8d8],ebp
1000c606:	76 11                	jbe    1000c619 <spng_set_unknown_chunks+0xd4>
1000c608:	89 e9                	mov    ecx,ebp
1000c60a:	c1 e1 04             	shl    ecx,0x4
1000c60d:	8b 54 0a 08          	mov    edx,DWORD PTR [edx+ecx*1+0x8]
1000c611:	e8 bd 8b ff ff       	call   100051d3 <spng__free.isra.3>
1000c616:	45                   	inc    ebp
1000c617:	eb de                	jmp    1000c5f7 <spng_set_unknown_chunks+0xb2>
1000c619:	e8 b5 8b ff ff       	call   100051d3 <spng__free.isra.3>
1000c61e:	89 bb dc 08 00 00    	mov    DWORD PTR [ebx+0x8dc],edi
1000c624:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000c628:	89 83 d8 08 00 00    	mov    DWORD PTR [ebx+0x8d8],eax
1000c62e:	80 8b ae 00 00 00 01 	or     BYTE PTR [ebx+0xae],0x1
1000c635:	80 8b aa 00 00 00 01 	or     BYTE PTR [ebx+0xaa],0x1
1000c63c:	eb 05                	jmp    1000c643 <spng_set_unknown_chunks+0xfe>
1000c63e:	be 4f 00 00 00       	mov    esi,0x4f
1000c643:	89 f0                	mov    eax,esi
1000c645:	83 c4 1c             	add    esp,0x1c
1000c648:	5b                   	pop    ebx
1000c649:	5e                   	pop    esi
1000c64a:	5f                   	pop    edi
1000c64b:	5d                   	pop    ebp
1000c64c:	c3                   	ret    

1000c64d <spng_set_offs>:
1000c64d:	57                   	push   edi
1000c64e:	56                   	push   esi
1000c64f:	53                   	push   ebx
1000c650:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c654:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000c658:	85 f6                	test   esi,esi
1000c65a:	74 45                	je     1000c6a1 <spng_set_offs+0x54>
1000c65c:	85 db                	test   ebx,ebx
1000c65e:	74 41                	je     1000c6a1 <spng_set_offs+0x54>
1000c660:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c664:	75 0b                	jne    1000c671 <spng_set_offs+0x24>
1000c666:	b8 52 00 00 00       	mov    eax,0x52
1000c66b:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c66f:	74 3c                	je     1000c6ad <spng_set_offs+0x60>
1000c671:	31 d2                	xor    edx,edx
1000c673:	89 d8                	mov    eax,ebx
1000c675:	e8 72 99 ff ff       	call   10005fec <read_chunks>
1000c67a:	85 c0                	test   eax,eax
1000c67c:	75 2f                	jne    1000c6ad <spng_set_offs+0x60>
1000c67e:	80 7e 08 01          	cmp    BYTE PTR [esi+0x8],0x1
1000c682:	77 24                	ja     1000c6a8 <spng_set_offs+0x5b>
1000c684:	8d bb c4 08 00 00    	lea    edi,[ebx+0x8c4]
1000c68a:	b9 03 00 00 00       	mov    ecx,0x3
1000c68f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000c691:	80 8b ad 00 00 00 40 	or     BYTE PTR [ebx+0xad],0x40
1000c698:	80 8b a9 00 00 00 40 	or     BYTE PTR [ebx+0xa9],0x40
1000c69f:	eb 0c                	jmp    1000c6ad <spng_set_offs+0x60>
1000c6a1:	b8 01 00 00 00       	mov    eax,0x1
1000c6a6:	eb 05                	jmp    1000c6ad <spng_set_offs+0x60>
1000c6a8:	b8 3c 00 00 00       	mov    eax,0x3c
1000c6ad:	5b                   	pop    ebx
1000c6ae:	5e                   	pop    esi
1000c6af:	5f                   	pop    edi
1000c6b0:	c3                   	ret    

1000c6b1 <spng_set_exif>:
1000c6b1:	57                   	push   edi
1000c6b2:	56                   	push   esi
1000c6b3:	53                   	push   ebx
1000c6b4:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000c6b8:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
1000c6bc:	85 db                	test   ebx,ebx
1000c6be:	74 6d                	je     1000c72d <spng_set_exif+0x7c>
1000c6c0:	85 ff                	test   edi,edi
1000c6c2:	74 69                	je     1000c72d <spng_set_exif+0x7c>
1000c6c4:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000c6c8:	75 0b                	jne    1000c6d5 <spng_set_exif+0x24>
1000c6ca:	be 52 00 00 00       	mov    esi,0x52
1000c6cf:	f6 43 74 08          	test   BYTE PTR [ebx+0x74],0x8
1000c6d3:	74 64                	je     1000c739 <spng_set_exif+0x88>
1000c6d5:	31 d2                	xor    edx,edx
1000c6d7:	89 d8                	mov    eax,ebx
1000c6d9:	e8 0e 99 ff ff       	call   10005fec <read_chunks>
1000c6de:	89 c6                	mov    esi,eax
1000c6e0:	85 c0                	test   eax,eax
1000c6e2:	75 55                	jne    1000c739 <spng_set_exif+0x88>
1000c6e4:	89 f8                	mov    eax,edi
1000c6e6:	e8 01 85 ff ff       	call   10004bec <check_exif>
1000c6eb:	89 c6                	mov    esi,eax
1000c6ed:	85 c0                	test   eax,eax
1000c6ef:	75 43                	jne    1000c734 <spng_set_exif+0x83>
1000c6f1:	8b 93 d4 08 00 00    	mov    edx,DWORD PTR [ebx+0x8d4]
1000c6f7:	85 d2                	test   edx,edx
1000c6f9:	74 11                	je     1000c70c <spng_set_exif+0x5b>
1000c6fb:	80 bb a9 00 00 00 00 	cmp    BYTE PTR [ebx+0xa9],0x0
1000c702:	78 08                	js     1000c70c <spng_set_exif+0x5b>
1000c704:	8b 43 64             	mov    eax,DWORD PTR [ebx+0x64]
1000c707:	e8 c7 8a ff ff       	call   100051d3 <spng__free.isra.3>
1000c70c:	8b 07                	mov    eax,DWORD PTR [edi]
1000c70e:	8b 57 04             	mov    edx,DWORD PTR [edi+0x4]
1000c711:	89 83 d0 08 00 00    	mov    DWORD PTR [ebx+0x8d0],eax
1000c717:	89 93 d4 08 00 00    	mov    DWORD PTR [ebx+0x8d4],edx
1000c71d:	80 8b ad 00 00 00 80 	or     BYTE PTR [ebx+0xad],0x80
1000c724:	80 8b a9 00 00 00 80 	or     BYTE PTR [ebx+0xa9],0x80
1000c72b:	eb 0c                	jmp    1000c739 <spng_set_exif+0x88>
1000c72d:	be 01 00 00 00       	mov    esi,0x1
1000c732:	eb 05                	jmp    1000c739 <spng_set_exif+0x88>
1000c734:	be 3d 00 00 00       	mov    esi,0x3d
1000c739:	89 f0                	mov    eax,esi
1000c73b:	5b                   	pop    ebx
1000c73c:	5e                   	pop    esi
1000c73d:	5f                   	pop    edi
1000c73e:	c3                   	ret    

1000c73f <spng_strerror>:
1000c73f:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000c743:	8d 50 02             	lea    edx,[eax+0x2]
1000c746:	b8 7d cb 00 10       	mov    eax,0x1000cb7d	1000c747: R_386_32	.text
1000c74b:	83 fa 57             	cmp    edx,0x57
1000c74e:	77 07                	ja     1000c757 <spng_strerror+0x18>
1000c750:	8b 04 95 40 d4 00 10 	mov    eax,DWORD PTR [edx*4+0x1000d440]	1000c753: R_386_32	.text
1000c757:	c3                   	ret    

1000c758 <spng_version_string>:
1000c758:	b8 8b cb 00 10       	mov    eax,0x1000cb8b	1000c759: R_386_32	.text
1000c75d:	c3                   	ret    

1000c75e <List<NIWindow*>::insertAtHead(NIWindow*)>:
1000c75e:	53                   	push   ebx
1000c75f:	83 ec 14             	sub    esp,0x14
1000c762:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000c766:	6a 0c                	push   0xc
1000c768:	e8 fc ff ff ff       	call   1000c769 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	1000c769: R_386_PC32	malloc
1000c76d:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
1000c771:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000c778:	89 10                	mov    DWORD PTR [eax],edx
1000c77a:	83 c4 10             	add    esp,0x10
1000c77d:	8b 13                	mov    edx,DWORD PTR [ebx]
1000c77f:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000c782:	85 d2                	test   edx,edx
1000c784:	74 05                	je     1000c78b <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
1000c786:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
1000c789:	eb 03                	jmp    1000c78e <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
1000c78b:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000c78e:	89 03                	mov    DWORD PTR [ebx],eax
1000c790:	83 c4 08             	add    esp,0x8
1000c793:	5b                   	pop    ebx
1000c794:	c3                   	ret    
1000c795:	90                   	nop

1000c796 <List<NIWindow*>::deleteElement(NIWindow*&)>:
1000c796:	57                   	push   edi
1000c797:	56                   	push   esi
1000c798:	53                   	push   ebx
1000c799:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000c79d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000c7a1:	8b 19                	mov    ebx,DWORD PTR [ecx]
1000c7a3:	85 db                	test   ebx,ebx
1000c7a5:	74 5e                	je     1000c805 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
1000c7a7:	8b 30                	mov    esi,DWORD PTR [eax]
1000c7a9:	89 da                	mov    edx,ebx
1000c7ab:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
1000c7ae:	8b 3a                	mov    edi,DWORD PTR [edx]
1000c7b0:	85 c0                	test   eax,eax
1000c7b2:	74 08                	je     1000c7bc <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000c7b4:	39 f7                	cmp    edi,esi
1000c7b6:	73 04                	jae    1000c7bc <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
1000c7b8:	89 c2                	mov    edx,eax
1000c7ba:	eb ef                	jmp    1000c7ab <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
1000c7bc:	39 f7                	cmp    edi,esi
1000c7be:	75 45                	jne    1000c805 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
1000c7c0:	39 d3                	cmp    ebx,edx
1000c7c2:	75 18                	jne    1000c7dc <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
1000c7c4:	89 01                	mov    DWORD PTR [ecx],eax
1000c7c6:	85 c0                	test   eax,eax
1000c7c8:	75 09                	jne    1000c7d3 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
1000c7ca:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
1000c7d1:	eb 1e                	jmp    1000c7f1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c7d3:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000c7da:	eb 15                	jmp    1000c7f1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c7dc:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000c7df:	85 c0                	test   eax,eax
1000c7e1:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000c7e4:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000c7e7:	74 05                	je     1000c7ee <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
1000c7e9:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
1000c7ec:	eb 03                	jmp    1000c7f1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000c7ee:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
1000c7f1:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
1000c7f9:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
1000c7fd:	5b                   	pop    ebx
1000c7fe:	5e                   	pop    esi
1000c7ff:	5f                   	pop    edi
1000c800:	e9 fc ff ff ff       	jmp    1000c801 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	1000c801: R_386_PC32	operator delete(void*, unsigned long)
1000c805:	5b                   	pop    ebx
1000c806:	5e                   	pop    esi
1000c807:	5f                   	pop    edi
1000c808:	c3                   	ret    
1000c809:	53                   	push   ebx
1000c80a:	46                   	inc    esi
1000c80b:	4e                   	dec    esi
1000c80c:	43                   	inc    ebx
1000c80d:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
1000c810:	4e                   	dec    esi
1000c811:	32 00                	xor    al,BYTE PTR [eax]
1000c813:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
1000c816:	53                   	push   ebx
1000c817:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
1000c81a:	43                   	inc    ebx
1000c81b:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c81c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c81d:	74 65                	je     1000c884 <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
1000c81f:	78 74                	js     1000c895 <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
1000c821:	3a 3a                	cmp    bh,BYTE PTR [edx]
1000c823:	64 72 76             	fs jb  1000c89c <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
1000c826:	52                   	push   edx
1000c827:	65 6e                	outs   dx,BYTE PTR gs:[esi]
1000c829:	64 65 72 54          	fs gs jb 1000c881 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
1000c82d:	54                   	push   esp
1000c82e:	46                   	inc    esi
1000c82f:	34 00                	xor    al,0x0
1000c831:	43                   	inc    ebx
1000c832:	3a 2f                	cmp    ch,BYTE PTR [edi]
1000c834:	42                   	inc    edx
1000c835:	61                   	popa   
1000c836:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c837:	61                   	popa   
1000c838:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c839:	61                   	popa   
1000c83a:	2f                   	das    
1000c83b:	46                   	inc    esi
1000c83c:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c83d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c83e:	74 73                	je     1000c8b3 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
1000c840:	2f                   	das    
1000c841:	53                   	push   ebx
1000c842:	46                   	inc    esi
1000c843:	4e                   	dec    esi
1000c844:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000c847:	4e                   	dec    esi
1000c848:	4e                   	dec    esi
1000c849:	4f                   	dec    edi
1000c84a:	54                   	push   esp
1000c84b:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
1000c84f:	44                   	inc    esp
1000c850:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
1000c853:	4e                   	dec    esi
1000c854:	54                   	push   esp
1000c855:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
1000c859:	45                   	inc    ebp
1000c85a:	43                   	inc    ebx
1000c85b:	54                   	push   esp
1000c85c:	4f                   	dec    edi
1000c85d:	52                   	push   edx
1000c85e:	59                   	pop    ecx
1000c85f:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
1000c862:	2f                   	das    
1000c863:	42                   	inc    edx
1000c864:	61                   	popa   
1000c865:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c866:	61                   	popa   
1000c867:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c868:	61                   	popa   
1000c869:	2f                   	das    
1000c86a:	46                   	inc    esi
1000c86b:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c86c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c86d:	74 73                	je     1000c8e2 <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
1000c86f:	2f                   	das    
1000c870:	53                   	push   ebx
1000c871:	46                   	inc    esi
1000c872:	4e                   	dec    esi
1000c873:	2f                   	das    
1000c874:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
1000c877:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c878:	74 20                	je     1000c89a <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
1000c87a:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
1000c881:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
1000c888:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
1000c88c:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
1000c892:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c893:	74 3a                	je     1000c8cf <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
1000c895:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
1000c89b:	53                   	push   ebx
1000c89c:	46                   	inc    esi
1000c89d:	4e                   	dec    esi
1000c89e:	5f                   	pop    edi
1000c89f:	52                   	push   edx
1000c8a0:	45                   	inc    ebp
1000c8a1:	53                   	push   ebx
1000c8a2:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
1000c8a8:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
1000c8ab:	6d                   	ins    DWORD PTR es:[edi],dx
1000c8ac:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c8ad:	72 79                	jb     1000c928 <List<NIWindow*>::deleteElement(NIWindow*&)+0x192>
1000c8af:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
1000c8b2:	6c                   	ins    BYTE PTR es:[edi],dx
1000c8b3:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c8b4:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
1000c8b7:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
1000c8be:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c8bf:	72 00                	jb     1000c8c1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
1000c8c1:	42                   	inc    edx
1000c8c2:	61                   	popa   
1000c8c3:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
1000c8c7:	6c                   	ins    BYTE PTR es:[edi],dx
1000c8c8:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
1000c8cc:	72 6d                	jb     1000c93b <List<NIWindow*>::deleteElement(NIWindow*&)+0x1a5>
1000c8ce:	61                   	popa   
1000c8cf:	74 00                	je     1000c8d1 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
1000c8d1:	4e                   	dec    esi
1000c8d2:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000c8d3:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000c8d6:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000c8d7:	74 20                	je     1000c8f9 <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
1000c8d9:	66 61                	popaw  
1000c8db:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
1000c8de:	66 6f                	outs   dx,WORD PTR ds:[esi]
1000c8e0:	75 6e                	jne    1000c950 <_ssfn__compute_huffman_codes::length_dezigzag+0x10>
1000c8e2:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000c8e6:	76 61                	jbe    1000c949 <_ssfn__compute_huffman_codes::length_dezigzag+0x9>
1000c8e8:	6c                   	ins    BYTE PTR es:[edi],dx
1000c8e9:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
1000c8f1:	20 76 61             	and    BYTE PTR [esi+0x61],dh
1000c8f4:	6c                   	ins    BYTE PTR es:[edi],dx
1000c8f5:	75 65                	jne    1000c95c <_ssfn__compute_huffman_codes::length_dezigzag+0x1c>
1000c8f7:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000c8fa:	76 61                	jbe    1000c95d <_ssfn__compute_huffman_codes::length_dezigzag+0x1d>
1000c8fc:	6c                   	ins    BYTE PTR es:[edi],dx
1000c8fd:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
1000c905:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
1000c908:	76 61                	jbe    1000c96b <_ssfn__zdist_extra+0xb>
1000c90a:	6c                   	ins    BYTE PTR es:[edi],dx
1000c90b:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
1000c913:	47                   	inc    edi
1000c914:	6c                   	ins    BYTE PTR es:[edi],dx
1000c915:	79 70                	jns    1000c987 <_ssfn__zdist_extra+0x27>
1000c917:	68 20 6e 6f 74       	push   0x746f6e20
1000c91c:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000c91f:	75 6e                	jne    1000c98f <_ssfn__zdist_extra+0x2f>
1000c921:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
1000c925:	66 90                	xchg   ax,ax
1000c927:	66 90                	xchg   ax,ax
1000c929:	66 90                	xchg   ax,ax
1000c92b:	66 90                	xchg   ax,ax
1000c92d:	66 90                	xchg   ax,ax
1000c92f:	66 90                	xchg   ax,ax
1000c931:	66 90                	xchg   ax,ax
1000c933:	66 90                	xchg   ax,ax
1000c935:	66 90                	xchg   ax,ax
1000c937:	66 90                	xchg   ax,ax
1000c939:	66 90                	xchg   ax,ax
1000c93b:	66 90                	xchg   ax,ax
1000c93d:	66 90                	xchg   ax,ax
1000c93f:	90                   	nop

1000c940 <_ssfn__compute_huffman_codes::length_dezigzag>:
1000c940:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
1000c950:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

1000c960 <_ssfn__zdist_extra>:
	...
1000c970:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
1000c980:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
1000c990:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
1000c9a0:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
1000c9b0:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
1000c9c0:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
1000c9d0:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

1000c9e0 <_ssfn__zdist_base>:
1000c9e0:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
1000c9f0:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
1000ca00:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
1000ca10:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
1000ca20:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
1000ca30:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
1000ca40:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
1000ca50:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

1000ca60 <_ssfn__zlength_extra>:
	...
1000ca80:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
1000ca90:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
1000caa0:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
1000cab0:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
1000cac0:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

1000cae0 <_ssfn__zlength_base>:
1000cae0:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
1000caf0:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
1000cb00:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
1000cb10:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
1000cb20:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
1000cb30:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
1000cb40:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
1000cb50:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
1000cb60:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
1000cb70:	29 2e 00 20 20 00 31 2e 32 2e 31 31 00 75 6e 6b     )..  .1.2.11.unk
1000cb80:	6e 6f 77 6e 20 65 72 72 6f 72 00 30 2e 37 2e 30     nown error.0.7.0
1000cb90:	2d 72 63 33 00 65 6e 64 20 6f 66 20 73 74 72 65     -rc3.end of stre
1000cba0:	61 6d 00 73 75 63 63 65 73 73 00 69 6e 76 61 6c     am.success.inval
1000cbb0:	69 64 20 61 72 67 75 6d 65 6e 74 00 6f 75 74 20     id argument.out 
1000cbc0:	6f 66 20 6d 65 6d 6f 72 79 00 61 72 69 74 68 6d     of memory.arithm
1000cbd0:	65 74 69 63 20 6f 76 65 72 66 6c 6f 77 00 69 6e     etic overflow.in
1000cbe0:	76 61 6c 69 64 20 73 69 67 6e 61 74 75 72 65 00     valid signature.
1000cbf0:	69 6e 76 61 6c 69 64 20 69 6d 61 67 65 20 77 69     invalid image wi
1000cc00:	64 74 68 00 69 6e 76 61 6c 69 64 20 69 6d 61 67     dth.invalid imag
1000cc10:	65 20 68 65 69 67 68 74 00 69 6d 61 67 65 20 77     e height.image w
1000cc20:	69 64 74 68 20 65 78 63 65 65 64 73 20 75 73 65     idth exceeds use
1000cc30:	72 20 6c 69 6d 69 74 00 69 6d 61 67 65 20 68 65     r limit.image he
1000cc40:	69 67 68 74 20 65 78 63 65 65 64 73 20 75 73 65     ight exceeds use
1000cc50:	72 20 6c 69 6d 69 74 00 69 6e 76 61 6c 69 64 20     r limit.invalid 
1000cc60:	62 69 74 20 64 65 70 74 68 00 69 6e 76 61 6c 69     bit depth.invali
1000cc70:	64 20 63 6f 6c 6f 72 20 74 79 70 65 00 69 6e 76     d color type.inv
1000cc80:	61 6c 69 64 20 63 6f 6d 70 72 65 73 73 69 6f 6e     alid compression
1000cc90:	20 6d 65 74 68 6f 64 00 69 6e 76 61 6c 69 64 20      method.invalid 
1000cca0:	66 69 6c 74 65 72 20 6d 65 74 68 6f 64 00 69 6e     filter method.in
1000ccb0:	76 61 6c 69 64 20 69 6e 74 65 72 6c 61 63 65 20     valid interlace 
1000ccc0:	6d 65 74 68 6f 64 00 69 6e 76 61 6c 69 64 20 49     method.invalid I
1000ccd0:	48 44 52 20 63 68 75 6e 6b 20 73 69 7a 65 00 6d     HDR chunk size.m
1000cce0:	69 73 73 69 6e 67 20 49 48 44 52 20 63 68 75 6e     issing IHDR chun
1000ccf0:	6b 00 69 6e 76 61 6c 69 64 20 63 68 75 6e 6b 20     k.invalid chunk 
1000cd00:	70 6f 73 69 74 69 6f 6e 00 69 6e 76 61 6c 69 64     position.invalid
1000cd10:	20 63 68 75 6e 6b 20 6c 65 6e 67 74 68 00 69 6e      chunk length.in
1000cd20:	76 61 6c 69 64 20 63 68 75 6e 6b 20 63 68 65 63     valid chunk chec
1000cd30:	6b 73 75 6d 00 69 6e 76 61 6c 69 64 20 63 68 75     ksum.invalid chu
1000cd40:	6e 6b 20 74 79 70 65 00 75 6e 6b 6e 6f 77 6e 20     nk type.unknown 
1000cd50:	63 72 69 74 69 63 61 6c 20 63 68 75 6e 6b 00 64     critical chunk.d
1000cd60:	75 70 6c 69 63 61 74 65 20 50 4c 54 45 20 63 68     uplicate PLTE ch
1000cd70:	75 6e 6b 00 64 75 70 6c 69 63 61 74 65 20 63 48     unk.duplicate cH
1000cd80:	52 4d 20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61     RM chunk.duplica
1000cd90:	74 65 20 67 41 4d 41 20 63 68 75 6e 6b 00 64 75     te gAMA chunk.du
1000cda0:	70 6c 69 63 61 74 65 20 69 43 43 50 20 63 68 75     plicate iCCP chu
1000cdb0:	6e 6b 00 64 75 70 6c 69 63 61 74 65 20 73 42 49     nk.duplicate sBI
1000cdc0:	54 20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74     T chunk.duplicat
1000cdd0:	65 20 73 52 47 42 20 63 68 75 6e 6b 00 64 75 70     e sRGB chunk.dup
1000cde0:	6c 69 63 61 74 65 20 62 4b 47 44 20 63 68 75 6e     licate bKGD chun
1000cdf0:	6b 00 64 75 70 6c 69 63 61 74 65 20 68 49 53 54     k.duplicate hIST
1000ce00:	20 63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74 65      chunk.duplicate
1000ce10:	20 74 52 4e 53 20 63 68 75 6e 6b 00 64 75 70 6c      tRNS chunk.dupl
1000ce20:	69 63 61 74 65 20 70 48 59 73 20 63 68 75 6e 6b     icate pHYs chunk
1000ce30:	00 64 75 70 6c 69 63 61 74 65 20 74 49 4d 45 20     .duplicate tIME 
1000ce40:	63 68 75 6e 6b 00 64 75 70 6c 69 63 61 74 65 20     chunk.duplicate 
1000ce50:	6f 46 46 73 20 63 68 75 6e 6b 00 64 75 70 6c 69     oFFs chunk.dupli
1000ce60:	63 61 74 65 20 65 58 49 66 20 63 68 75 6e 6b 00     cate eXIf chunk.
1000ce70:	69 6e 76 61 6c 69 64 20 63 48 52 4d 20 63 68 75     invalid cHRM chu
1000ce80:	6e 6b 00 69 6e 76 61 6c 69 64 20 70 61 6c 65 74     nk.invalid palet
1000ce90:	74 65 20 28 50 4c 54 45 29 20 69 6e 64 65 78 00     te (PLTE) index.
1000cea0:	74 52 4e 53 20 63 68 75 6e 6b 20 77 69 74 68 20     tRNS chunk with 
1000ceb0:	69 6e 63 6f 6d 70 61 74 69 62 6c 65 20 63 6f 6c     incompatible col
1000cec0:	6f 72 20 74 79 70 65 00 6d 69 73 73 69 6e 67 20     or type.missing 
1000ced0:	70 61 6c 65 74 74 65 20 28 50 4c 54 45 29 20 66     palette (PLTE) f
1000cee0:	6f 72 20 74 52 4e 53 20 63 68 75 6e 6b 00 69 6e     or tRNS chunk.in
1000cef0:	76 61 6c 69 64 20 67 41 4d 41 20 63 68 75 6e 6b     valid gAMA chunk
1000cf00:	00 69 6e 76 61 6c 69 64 20 69 43 43 50 20 70 72     .invalid iCCP pr
1000cf10:	6f 66 69 6c 65 20 6e 61 6d 65 00 69 6e 76 61 6c     ofile name.inval
1000cf20:	69 64 20 69 43 43 50 20 63 6f 6d 70 72 65 73 73     id iCCP compress
1000cf30:	69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76 61 6c     ion method.inval
1000cf40:	69 64 20 73 42 49 54 20 63 68 75 6e 6b 00 69 6e     id sBIT chunk.in
1000cf50:	76 61 6c 69 64 20 73 52 47 42 20 63 68 75 6e 6b     valid sRGB chunk
1000cf60:	00 69 6e 76 61 6c 69 64 20 74 45 58 74 20 63 68     .invalid tEXt ch
1000cf70:	75 6e 6b 00 69 6e 76 61 6c 69 64 20 74 45 58 74     unk.invalid tEXt
1000cf80:	20 6b 65 79 77 6f 72 64 00 69 6e 76 61 6c 69 64      keyword.invalid
1000cf90:	20 7a 54 58 74 20 63 68 75 6e 6b 00 69 6e 76 61      zTXt chunk.inva
1000cfa0:	6c 69 64 20 7a 54 58 74 20 63 6f 6d 70 72 65 73     lid zTXt compres
1000cfb0:	73 69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76 61     sion method.inva
1000cfc0:	6c 69 64 20 69 54 58 74 20 63 68 75 6e 6b 00 69     lid iTXt chunk.i
1000cfd0:	6e 76 61 6c 69 64 20 69 54 58 74 20 63 6f 6d 70     nvalid iTXt comp
1000cfe0:	72 65 73 73 69 6f 6e 20 66 6c 61 67 00 69 6e 76     ression flag.inv
1000cff0:	61 6c 69 64 20 69 54 58 74 20 63 6f 6d 70 72 65     alid iTXt compre
1000d000:	73 73 69 6f 6e 20 6d 65 74 68 6f 64 00 69 6e 76     ssion method.inv
1000d010:	61 6c 69 64 20 69 54 58 74 20 6c 61 6e 67 75 61     alid iTXt langua
1000d020:	67 65 20 74 61 67 00 69 6e 76 61 6c 69 64 20 69     ge tag.invalid i
1000d030:	54 58 74 20 74 72 61 6e 73 6c 61 74 65 64 20 6b     TXt translated k
1000d040:	65 79 00 6d 69 73 73 69 6e 67 20 70 61 6c 65 74     ey.missing palet
1000d050:	74 65 20 66 6f 72 20 62 4b 47 44 20 63 68 75 6e     te for bKGD chun
1000d060:	6b 00 69 6e 76 61 6c 69 64 20 70 61 6c 65 74 74     k.invalid palett
1000d070:	65 20 69 6e 64 65 78 20 66 6f 72 20 62 4b 47 44     e index for bKGD
1000d080:	20 63 68 75 6e 6b 00 6d 69 73 73 69 6e 67 20 70      chunk.missing p
1000d090:	61 6c 65 74 74 65 20 66 6f 72 20 68 49 53 54 20     alette for hIST 
1000d0a0:	63 68 75 6e 6b 00 69 6e 76 61 6c 69 64 20 70 48     chunk.invalid pH
1000d0b0:	59 73 20 63 68 75 6e 6b 00 69 6e 76 61 6c 69 64     Ys chunk.invalid
1000d0c0:	20 73 75 67 67 65 73 74 65 64 20 70 61 6c 65 74      suggested palet
1000d0d0:	74 65 20 6e 61 6d 65 00 64 75 70 6c 69 63 61 74     te name.duplicat
1000d0e0:	65 20 73 75 67 67 65 73 74 65 64 20 70 61 6c 65     e suggested pale
1000d0f0:	74 74 65 20 28 73 50 4c 54 29 20 6e 61 6d 65 00     tte (sPLT) name.
1000d100:	69 6e 76 61 6c 69 64 20 73 75 67 67 65 73 74 65     invalid suggeste
1000d110:	64 20 70 61 6c 65 74 74 65 20 28 73 50 4c 54 29     d palette (sPLT)
1000d120:	20 73 61 6d 70 6c 65 20 64 65 70 74 68 00 69 6e      sample depth.in
1000d130:	76 61 6c 69 64 20 74 49 4d 45 20 63 68 75 6e 6b     valid tIME chunk
1000d140:	00 69 6e 76 61 6c 69 64 20 6f 46 46 73 20 63 68     .invalid oFFs ch
1000d150:	75 6e 6b 00 69 6e 76 61 6c 69 64 20 65 58 49 66     unk.invalid eXIf
1000d160:	20 63 68 75 6e 6b 00 49 44 41 54 20 73 74 72 65      chunk.IDAT stre
1000d170:	61 6d 20 74 6f 6f 20 73 68 6f 72 74 00 49 44 41     am too short.IDA
1000d180:	54 20 73 74 72 65 61 6d 20 65 72 72 6f 72 00 7a     T stream error.z
1000d190:	6c 69 62 20 65 72 72 6f 72 00 69 6e 76 61 6c 69     lib error.invali
1000d1a0:	64 20 73 63 61 6e 6c 69 6e 65 20 66 69 6c 74 65     d scanline filte
1000d1b0:	72 00 6f 75 74 70 75 74 20 62 75 66 66 65 72 20     r.output buffer 
1000d1c0:	74 6f 6f 20 73 6d 61 6c 6c 00 69 2f 6f 20 65 72     too small.i/o er
1000d1d0:	72 6f 72 00 65 6e 64 20 6f 66 20 66 69 6c 65 00     ror.end of file.
1000d1e0:	62 75 66 66 65 72 20 61 6c 72 65 61 64 79 20 73     buffer already s
1000d1f0:	65 74 00 6e 6f 6e 2d 72 65 63 6f 76 65 72 61 62     et.non-recoverab
1000d200:	6c 65 20 73 74 61 74 65 00 69 6e 76 61 6c 69 64     le state.invalid
1000d210:	20 66 6f 72 6d 61 74 00 69 6e 76 61 6c 69 64 20      format.invalid 
1000d220:	66 6c 61 67 73 00 63 68 75 6e 6b 20 6e 6f 74 20     flags.chunk not 
1000d230:	61 76 61 69 6c 61 62 6c 65 00 65 6e 63 6f 64 65     available.encode
1000d240:	20 6f 6e 6c 79 20 63 6f 6e 74 65 78 74 00 72 65      only context.re
1000d250:	61 63 68 65 64 20 65 6e 64 2d 6f 66 2d 69 6d 61     ached end-of-ima
1000d260:	67 65 20 73 74 61 74 65 00 6d 69 73 73 69 6e 67     ge state.missing
1000d270:	20 50 4c 54 45 20 66 6f 72 20 69 6e 64 65 78 65      PLTE for indexe
1000d280:	64 20 69 6d 61 67 65 00 72 65 61 63 68 65 64 20     d image.reached 
1000d290:	63 68 75 6e 6b 2f 63 61 63 68 65 20 6c 69 6d 69     chunk/cache limi
1000d2a0:	74 73 00 7a 6c 69 62 20 69 6e 69 74 20 65 72 72     ts.zlib init err
1000d2b0:	6f 72 00 63 68 75 6e 6b 20 65 78 63 65 65 64 73     or.chunk exceeds
1000d2c0:	20 6d 61 78 69 6d 75 6d 20 73 74 61 6e 64 61 72      maximum standar
1000d2d0:	64 20 6c 65 6e 67 74 68 00 69 6e 74 65 72 6e 61     d length.interna
1000d2e0:	6c 20 65 72 72 6f 72 00 69 6e 76 61 6c 69 64 20     l error.invalid 
1000d2f0:	6f 70 65 72 61 74 69 6f 6e 20 66 6f 72 20 63 6f     operation for co
1000d300:	6e 74 65 78 74 20 74 79 70 65 00 73 6f 75 72 63     ntext type.sourc
1000d310:	65 20 50 4e 47 20 6e 6f 74 20 73 65 74 00 50 4e     e PNG not set.PN
1000d320:	47 20 6f 75 74 70 75 74 20 6e 6f 74 20 73 65 74     G output not set
1000d330:	00 69 6e 76 61 6c 69 64 20 6f 70 65 72 61 74 69     .invalid operati
1000d340:	6f 6e 20 66 6f 72 20 73 74 61 74 65 00 50 4e 47     on for state.PNG
1000d350:	20 6e 6f 74 20 66 69 6e 61 6c 69 7a 65 64 00 90      not finalized..
1000d360:	13 55 00 10 79 55 00 10 2c 55 00 10 3e 55 00 10     .U..yU..,U..>U..	1000d360: R_386_32	.text
	1000d364: R_386_32	.text
	1000d368: R_386_32	.text
	1000d36c: R_386_32	.text
1000d370:	2c 55 00 10 79 55 00 10 2c 55 00 10 00 00 00 00     ,U..yU..,U......	1000d370: R_386_32	.text
	1000d374: R_386_32	.text
	1000d378: R_386_32	.text
1000d380:	ec d5 00 10 e8 d5 00 10 e4 d5 00 10 ac 8d 00 10     ................	1000d380: R_386_32	.text
	1000d384: R_386_32	.text
	1000d388: R_386_32	.text
	1000d38c: R_386_32	.text
1000d390:	bb 96 00 10 bf 8d 00 10 bf 8d 00 10 e0 8d 00 10     ................	1000d390: R_386_32	.text
	1000d394: R_386_32	.text
	1000d398: R_386_32	.text
	1000d39c: R_386_32	.text
1000d3a0:	bb 96 00 10 ff 8d 00 10 12 8f 00 10 bb 96 00 10     ................	1000d3a0: R_386_32	.text
	1000d3a4: R_386_32	.text
	1000d3a8: R_386_32	.text
	1000d3ac: R_386_32	.text
1000d3b0:	75 8f 00 10 af 8f 00 10 12 8f 00 10 bb 96 00 10     u...............	1000d3b0: R_386_32	.text
	1000d3b4: R_386_32	.text
	1000d3b8: R_386_32	.text
	1000d3bc: R_386_32	.text
1000d3c0:	75 8f 00 10 00 00 00 00 00 00 00 00 00 00 00 00     u...............	1000d3c0: R_386_32	.text
	1000d3c4: R_386_32	malloc
	1000d3c8: R_386_32	realloc
	1000d3cc: R_386_32	calloc
1000d3d0:	00 00 00 00 33 a7 00 10 48 a7 00 10 4f a7 00 10     ....3...H...O...	1000d3d0: R_386_32	free
	1000d3d4: R_386_32	.text
	1000d3d8: R_386_32	.text
	1000d3dc: R_386_32	.text
1000d3e0:	54 a7 00 10 5c a7 00 10 64 a7 00 10 6c a7 00 10     T...\...d...l...	1000d3e0: R_386_32	.text
	1000d3e4: R_386_32	.text
	1000d3e8: R_386_32	.text
	1000d3ec: R_386_32	.text
1000d3f0:	74 a7 00 10 7c a7 00 10 84 a7 00 10 c5 a7 00 10     t...|...........	1000d3f0: R_386_32	.text
	1000d3f4: R_386_32	.text
	1000d3f8: R_386_32	.text
	1000d3fc: R_386_32	.text
1000d400:	d0 a7 00 10 d9 a7 00 10 de a7 00 10 e6 a7 00 10     ................	1000d400: R_386_32	.text
	1000d404: R_386_32	.text
	1000d408: R_386_32	.text
	1000d40c: R_386_32	.text
1000d410:	ee a7 00 10 f6 a7 00 10 fe a7 00 10 06 a8 00 10     ................	1000d410: R_386_32	.text
	1000d414: R_386_32	.text
	1000d418: R_386_32	.text
	1000d41c: R_386_32	.text
1000d420:	0e a8 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................	1000d420: R_386_32	.text
	...

1000d440 <CSWTCH.140>:
1000d440:	82 d1 00 10 95 cb 00 10 a3 cb 00 10 ab cb 00 10     ................	1000d440: R_386_32	.text
	1000d444: R_386_32	.text
	1000d448: R_386_32	.text
	1000d44c: R_386_32	.text
1000d450:	bc cb 00 10 ca cb 00 10 de cb 00 10 f0 cb 00 10     ................	1000d450: R_386_32	.text
	1000d454: R_386_32	.text
	1000d458: R_386_32	.text
	1000d45c: R_386_32	.text
1000d460:	04 cc 00 10 19 cc 00 10 38 cc 00 10 58 cc 00 10     ........8...X...	1000d460: R_386_32	.text
	1000d464: R_386_32	.text
	1000d468: R_386_32	.text
	1000d46c: R_386_32	.text
1000d470:	6a cc 00 10 7d cc 00 10 98 cc 00 10 ae cc 00 10     j...}...........	1000d470: R_386_32	.text
	1000d474: R_386_32	.text
	1000d478: R_386_32	.text
	1000d47c: R_386_32	.text
1000d480:	c7 cc 00 10 df cc 00 10 f2 cc 00 10 09 cd 00 10     ................	1000d480: R_386_32	.text
	1000d484: R_386_32	.text
	1000d488: R_386_32	.text
	1000d48c: R_386_32	.text
1000d490:	1e cd 00 10 35 cd 00 10 48 cd 00 10 5f cd 00 10     ....5...H..._...	1000d490: R_386_32	.text
	1000d494: R_386_32	.text
	1000d498: R_386_32	.text
	1000d49c: R_386_32	.text
1000d4a0:	74 cd 00 10 89 cd 00 10 9e cd 00 10 b3 cd 00 10     t...............	1000d4a0: R_386_32	.text
	1000d4a4: R_386_32	.text
	1000d4a8: R_386_32	.text
	1000d4ac: R_386_32	.text
1000d4b0:	c8 cd 00 10 dd cd 00 10 f2 cd 00 10 07 ce 00 10     ................	1000d4b0: R_386_32	.text
	1000d4b4: R_386_32	.text
	1000d4b8: R_386_32	.text
	1000d4bc: R_386_32	.text
1000d4c0:	1c ce 00 10 31 ce 00 10 46 ce 00 10 5b ce 00 10     ....1...F...[...	1000d4c0: R_386_32	.text
	1000d4c4: R_386_32	.text
	1000d4c8: R_386_32	.text
	1000d4cc: R_386_32	.text
1000d4d0:	70 ce 00 10 83 ce 00 10 a0 ce 00 10 c8 ce 00 10     p...............	1000d4d0: R_386_32	.text
	1000d4d4: R_386_32	.text
	1000d4d8: R_386_32	.text
	1000d4dc: R_386_32	.text
1000d4e0:	ee ce 00 10 01 cf 00 10 1b cf 00 10 3b cf 00 10     ............;...	1000d4e0: R_386_32	.text
	1000d4e4: R_386_32	.text
	1000d4e8: R_386_32	.text
	1000d4ec: R_386_32	.text
1000d4f0:	4e cf 00 10 61 cf 00 10 74 cf 00 10 89 cf 00 10     N...a...t.......	1000d4f0: R_386_32	.text
	1000d4f4: R_386_32	.text
	1000d4f8: R_386_32	.text
	1000d4fc: R_386_32	.text
1000d500:	9c cf 00 10 bc cf 00 10 cf cf 00 10 ed cf 00 10     ................	1000d500: R_386_32	.text
	1000d504: R_386_32	.text
	1000d508: R_386_32	.text
	1000d50c: R_386_32	.text
1000d510:	0d d0 00 10 27 d0 00 10 43 d0 00 10 62 d0 00 10     ....'...C...b...	1000d510: R_386_32	.text
	1000d514: R_386_32	.text
	1000d518: R_386_32	.text
	1000d51c: R_386_32	.text
1000d520:	87 d0 00 10 a6 d0 00 10 b9 d0 00 10 d8 d0 00 10     ................	1000d520: R_386_32	.text
	1000d524: R_386_32	.text
	1000d528: R_386_32	.text
	1000d52c: R_386_32	.text
1000d530:	00 d1 00 10 2e d1 00 10 41 d1 00 10 54 d1 00 10     ........A...T...	1000d530: R_386_32	.text
	1000d534: R_386_32	.text
	1000d538: R_386_32	.text
	1000d53c: R_386_32	.text
1000d540:	67 d1 00 10 7d d1 00 10 8f d1 00 10 9a d1 00 10     g...}...........	1000d540: R_386_32	.text
	1000d544: R_386_32	.text
	1000d548: R_386_32	.text
	1000d54c: R_386_32	.text
1000d550:	b2 d1 00 10 ca d1 00 10 d4 d1 00 10 e0 d1 00 10     ................	1000d550: R_386_32	.text
	1000d554: R_386_32	.text
	1000d558: R_386_32	.text
	1000d55c: R_386_32	.text
1000d560:	f3 d1 00 10 09 d2 00 10 18 d2 00 10 26 d2 00 10     ............&...	1000d560: R_386_32	.text
	1000d564: R_386_32	.text
	1000d568: R_386_32	.text
	1000d56c: R_386_32	.text
1000d570:	3a d2 00 10 4e d2 00 10 69 d2 00 10 88 d2 00 10     :...N...i.......	1000d570: R_386_32	.text
	1000d574: R_386_32	.text
	1000d578: R_386_32	.text
	1000d57c: R_386_32	.text
1000d580:	a3 d2 00 10 b3 d2 00 10 d9 d2 00 10 e8 d2 00 10     ................	1000d580: R_386_32	.text
	1000d584: R_386_32	.text
	1000d588: R_386_32	.text
	1000d58c: R_386_32	.text
1000d590:	0b d3 00 10 1e d3 00 10 31 d3 00 10 4d d3 00 10     ........1...M...	1000d590: R_386_32	.text
	1000d594: R_386_32	.text
	1000d598: R_386_32	.text
	1000d59c: R_386_32	.text

1000d5a0 <text_defaults.6014>:
1000d5a0:	ff ff ff ff 0f 00 00 00 08 00 00 00 00 00 00 00     ................
1000d5b0:	01 00 00 00                                         ....

1000d5b4 <image_defaults.6013>:
1000d5b4:	ff ff ff ff 0f 00 00 00 08 00 00 00 01 00 00 00     ................
1000d5c4:	00 00 00 00                                         ....

1000d5c8 <type_exif>:
1000d5c8:	65 58 49 66                                         eXIf

1000d5cc <type_offs>:
1000d5cc:	6f 46 46 73                                         oFFs

1000d5d0 <type_time>:
1000d5d0:	74 49 4d 45                                         tIME

1000d5d4 <type_splt>:
1000d5d4:	73 50 4c 54                                         sPLT

1000d5d8 <type_phys>:
1000d5d8:	70 48 59 73                                         pHYs

1000d5dc <type_hist>:
1000d5dc:	68 49 53 54                                         hIST

1000d5e0 <type_bkgd>:
1000d5e0:	62 4b 47 44                                         bKGD

1000d5e4 <type_itxt>:
1000d5e4:	69 54 58 74                                         iTXt

1000d5e8 <type_ztxt>:
1000d5e8:	7a 54 58 74                                         zTXt

1000d5ec <type_text>:
1000d5ec:	74 45 58 74                                         tEXt

1000d5f0 <type_srgb>:
1000d5f0:	73 52 47 42                                         sRGB

1000d5f4 <type_sbit>:
1000d5f4:	73 42 49 54                                         sBIT

1000d5f8 <type_iccp>:
1000d5f8:	69 43 43 50                                         iCCP

1000d5fc <type_gama>:
1000d5fc:	67 41 4d 41                                         gAMA

1000d600 <type_chrm>:
1000d600:	63 48 52 4d                                         cHRM

1000d604 <type_trns>:
1000d604:	74 52 4e 53                                         tRNS

1000d608 <type_iend>:
1000d608:	49 45 4e 44                                         IEND

1000d60c <type_idat>:
1000d60c:	49 44 41 54                                         IDAT

1000d610 <type_plte>:
1000d610:	50 4c 54 45                                         PLTE

1000d614 <type_ihdr>:
1000d614:	49 48 44 52                                         IHDR

1000d618 <png_signature>:
1000d618:	89 50 4e 47 0d 0a 1a 0a                             .PNG....

1000d620 <adam7_y_delta>:
1000d620:	08 00 00 00 08 00 00 00 08 00 00 00 04 00 00 00     ................
1000d630:	04 00 00 00 02 00 00 00 02 00 00 00                 ............

1000d63c <adam7_x_delta>:
1000d63c:	08 00 00 00 08 00 00 00 04 00 00 00 04 00 00 00     ................
1000d64c:	02 00 00 00 02 00 00 00 01 00 00 00                 ............

1000d658 <adam7_y_start>:
	...
1000d660:	04 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00     ................
1000d670:	01 00 00 00                                         ....

1000d674 <adam7_x_start>:
1000d674:	00 00 00 00 04 00 00 00 00 00 00 00 02 00 00 00     ................
1000d684:	00 00 00 00 01 00 00 00 00 00 00 00 01 01 01 01     ................
1000d694:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 7f 43     ...............C
1000d6a4:	00 ff 7f 47 00 50 c3 47 cd cc 0c 40 ff ff 7f 7f     ...G.P.G...@....
1000d6b4:	00 00 80 00                                         ....
