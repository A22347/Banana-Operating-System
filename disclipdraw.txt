
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	57                   	push   edi
10000001:	56                   	push   esi
10000002:	53                   	push   ebx
10000003:	81 ec fc 00 00 00    	sub    esp,0xfc
10000009:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000000b: R_386_32	screen
1000000f:	e8 fc ff ff ff       	call   10000010 <start(void*)+0x10>	10000010: R_386_PC32	Video::getWidth()
10000014:	89 c6                	mov    esi,eax
10000016:	58                   	pop    eax
10000017:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000019: R_386_32	screen
1000001d:	e8 fc ff ff ff       	call   1000001e <start(void*)+0x1e>	1000001e: R_386_PC32	Video::getHeight()
10000022:	89 c3                	mov    ebx,eax
10000024:	58                   	pop    eax
10000025:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000027: R_386_32	screen
1000002b:	e8 fc ff ff ff       	call   1000002c <start(void*)+0x2c>	1000002c: R_386_PC32	Video::getWidth()
10000030:	5a                   	pop    edx
10000031:	59                   	pop    ecx
10000032:	6a 20                	push   0x20
10000034:	56                   	push   esi
10000035:	53                   	push   ebx
10000036:	50                   	push   eax
10000037:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000039: R_386_32	screen
1000003d:	8d 5c 24 20          	lea    ebx,[esp+0x20]
10000041:	53                   	push   ebx
10000042:	e8 fc ff ff ff       	call   10000043 <start(void*)+0x43>	10000043: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000047:	83 c4 20             	add    esp,0x20
1000004a:	31 f6                	xor    esi,esi
1000004c:	83 ec 0c             	sub    esp,0xc
1000004f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000051: R_386_32	screen
10000055:	e8 fc ff ff ff       	call   10000056 <start(void*)+0x56>	10000056: R_386_PC32	Video::getHeight()
1000005a:	83 c4 10             	add    esp,0x10
1000005d:	39 f0                	cmp    eax,esi
1000005f:	7e 2d                	jle    1000008e <start(void*)+0x8e>
10000061:	31 ff                	xor    edi,edi
10000063:	83 ec 0c             	sub    esp,0xc
10000066:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000068: R_386_32	screen
1000006c:	e8 fc ff ff ff       	call   1000006d <start(void*)+0x6d>	1000006d: R_386_PC32	Video::getWidth()
10000071:	83 c4 10             	add    esp,0x10
10000074:	39 f8                	cmp    eax,edi
10000076:	7e 13                	jle    1000008b <start(void*)+0x8b>
10000078:	68 ff 80 55 00       	push   0x5580ff
1000007d:	56                   	push   esi
1000007e:	57                   	push   edi
1000007f:	53                   	push   ebx
10000080:	e8 fc ff ff ff       	call   10000081 <start(void*)+0x81>	10000081: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10000085:	47                   	inc    edi
10000086:	83 c4 10             	add    esp,0x10
10000089:	eb d8                	jmp    10000063 <start(void*)+0x63>
1000008b:	46                   	inc    esi
1000008c:	eb be                	jmp    1000004c <start(void*)+0x4c>
1000008e:	50                   	push   eax
1000008f:	50                   	push   eax
10000090:	68 40 01 00 00       	push   0x140
10000095:	68 90 01 00 00       	push   0x190
1000009a:	6a 32                	push   0x32
1000009c:	6a 32                	push   0x32
1000009e:	53                   	push   ebx
1000009f:	8d 74 24 34          	lea    esi,[esp+0x34]
100000a3:	56                   	push   esi
100000a4:	e8 fc ff ff ff       	call   100000a5 <start(void*)+0xa5>	100000a5: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000a9:	83 c4 18             	add    esp,0x18
100000ac:	68 4a 01 00 00       	push   0x14a
100000b1:	68 9a 01 00 00       	push   0x19a
100000b6:	6a 2d                	push   0x2d
100000b8:	6a 2d                	push   0x2d
100000ba:	53                   	push   ebx
100000bb:	8d 7c 24 58          	lea    edi,[esp+0x58]
100000bf:	57                   	push   edi
100000c0:	e8 fc ff ff ff       	call   100000c1 <start(void*)+0xc1>	100000c1: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000c5:	83 c4 14             	add    esp,0x14
100000c8:	57                   	push   edi
100000c9:	e8 fc ff ff ff       	call   100000ca <start(void*)+0xca>	100000ca: R_386_PC32	NIWindow::SHADOW_TEST()
100000ce:	89 34 24             	mov    DWORD PTR [esp],esi
100000d1:	e8 fc ff ff ff       	call   100000d2 <start(void*)+0xd2>	100000d2: R_386_PC32	NIWindow::realdraw()
100000d6:	5a                   	pop    edx
100000d7:	59                   	pop    ecx
100000d8:	68 7c 01 00 00       	push   0x17c
100000dd:	68 f4 01 00 00       	push   0x1f4
100000e2:	68 96 00 00 00       	push   0x96
100000e7:	68 c8 00 00 00       	push   0xc8
100000ec:	53                   	push   ebx
100000ed:	8d 74 24 7c          	lea    esi,[esp+0x7c]
100000f1:	56                   	push   esi
100000f2:	e8 fc ff ff ff       	call   100000f3 <start(void*)+0xf3>	100000f3: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000f7:	83 c4 18             	add    esp,0x18
100000fa:	68 86 01 00 00       	push   0x186
100000ff:	68 fe 01 00 00       	push   0x1fe
10000104:	68 91 00 00 00       	push   0x91
10000109:	68 c3 00 00 00       	push   0xc3
1000010e:	53                   	push   ebx
1000010f:	8d bc 24 a0 00 00 00 	lea    edi,[esp+0xa0]
10000116:	57                   	push   edi
10000117:	e8 fc ff ff ff       	call   10000118 <start(void*)+0x118>	10000118: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000011c:	83 c4 14             	add    esp,0x14
1000011f:	57                   	push   edi
10000120:	e8 fc ff ff ff       	call   10000121 <start(void*)+0x121>	10000121: R_386_PC32	NIWindow::SHADOW_TEST()
10000125:	89 34 24             	mov    DWORD PTR [esp],esi
10000128:	e8 fc ff ff ff       	call   10000129 <start(void*)+0x129>	10000129: R_386_PC32	NIWindow::realdraw()
1000012d:	5e                   	pop    esi
1000012e:	5f                   	pop    edi
1000012f:	68 af 00 00 00       	push   0xaf
10000134:	68 0e 01 00 00       	push   0x10e
10000139:	68 90 01 00 00       	push   0x190
1000013e:	6a 7d                	push   0x7d
10000140:	53                   	push   ebx
10000141:	8d b4 24 c4 00 00 00 	lea    esi,[esp+0xc4]
10000148:	56                   	push   esi
10000149:	e8 fc ff ff ff       	call   1000014a <start(void*)+0x14a>	1000014a: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
1000014e:	83 c4 18             	add    esp,0x18
10000151:	68 b9 00 00 00       	push   0xb9
10000156:	68 18 01 00 00       	push   0x118
1000015b:	68 8b 01 00 00       	push   0x18b
10000160:	6a 78                	push   0x78
10000162:	53                   	push   ebx
10000163:	8d 9c 24 e8 00 00 00 	lea    ebx,[esp+0xe8]
1000016a:	53                   	push   ebx
1000016b:	e8 fc ff ff ff       	call   1000016c <start(void*)+0x16c>	1000016c: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000170:	83 c4 14             	add    esp,0x14
10000173:	53                   	push   ebx
10000174:	e8 fc ff ff ff       	call   10000175 <start(void*)+0x175>	10000175: R_386_PC32	NIWindow::SHADOW_TEST()
10000179:	89 34 24             	mov    DWORD PTR [esp],esi
1000017c:	e8 fc ff ff ff       	call   1000017d <start(void*)+0x17d>	1000017d: R_386_PC32	NIWindow::realdraw()
10000181:	83 c4 10             	add    esp,0x10
10000184:	83 ec 0c             	sub    esp,0xc
10000187:	6a 02                	push   0x2
10000189:	e8 fc ff ff ff       	call   1000018a <start(void*)+0x18a>	1000018a: R_386_PC32	blockTask(TaskState)
1000018e:	eb f1                	jmp    10000181 <start(void*)+0x181>

10000190 <begin(void*)>:
10000190:	83 ec 18             	sub    esp,0x18
10000193:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000197:	e8 fc ff ff ff       	call   10000198 <begin(void*)+0x8>	10000198: R_386_PC32	start(void*)

1000019c <NIContext::drvPutpixel4(int, int, unsigned int)>:
1000019c:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100001a0:	8b 00                	mov    eax,DWORD PTR [eax]
100001a2:	8b 10                	mov    edx,DWORD PTR [eax]
100001a4:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100001a8:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
100001ab:	90                   	nop

100001ac <NIContext::drvDarken4(int, int, int)>:
100001ac:	56                   	push   esi
100001ad:	53                   	push   ebx
100001ae:	69 44 24 18 c0 00 00 00 	imul   eax,DWORD PTR [esp+0x18],0xc0
100001b6:	b9 64 00 00 00       	mov    ecx,0x64
100001bb:	31 d2                	xor    edx,edx
100001bd:	f7 f1                	div    ecx
100001bf:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100001c3:	8b 12                	mov    edx,DWORD PTR [edx]
100001c5:	8b 1a                	mov    ebx,DWORD PTR [edx]
100001c7:	89 c1                	mov    ecx,eax
100001c9:	c1 e1 10             	shl    ecx,0x10
100001cc:	89 c6                	mov    esi,eax
100001ce:	c1 e6 08             	shl    esi,0x8
100001d1:	09 f1                	or     ecx,esi
100001d3:	09 c1                	or     ecx,eax
100001d5:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
100001d9:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100001dd:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100001e0:	5b                   	pop    ebx
100001e1:	5e                   	pop    esi
100001e2:	ff e0                	jmp    eax

100001e4 <NIContext::NIContext(Video*, int, int, int, int)>:
100001e4:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100001e8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100001ec:	89 10                	mov    DWORD PTR [eax],edx
100001ee:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100001f2:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100001f5:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100001f9:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
100001fc:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10000200:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000203:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10000207:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
1000020a:	c3                   	ret    
1000020b:	90                   	nop

1000020c <NIWindow::invalidate()>:
1000020c:	56                   	push   esi
1000020d:	53                   	push   ebx
1000020e:	52                   	push   edx
1000020f:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10000213:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
10000217:	74 2e                	je     10000247 <NIWindow::invalidate()+0x3b>
10000219:	83 7b 10 00          	cmp    DWORD PTR [ebx+0x10],0x0
1000021d:	74 28                	je     10000247 <NIWindow::invalidate()+0x3b>
1000021f:	31 f6                	xor    esi,esi
10000221:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10000224:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
10000227:	7e 12                	jle    1000023b <NIWindow::invalidate()+0x2f>
10000229:	83 ec 0c             	sub    esp,0xc
1000022c:	ff 74 f0 04          	push   DWORD PTR [eax+esi*8+0x4]
10000230:	e8 fc ff ff ff       	call   10000231 <NIWindow::invalidate()+0x25>	10000231: R_386_PC32	free
10000235:	46                   	inc    esi
10000236:	83 c4 10             	add    esp,0x10
10000239:	eb e6                	jmp    10000221 <NIWindow::invalidate()+0x15>
1000023b:	83 ec 0c             	sub    esp,0xc
1000023e:	50                   	push   eax
1000023f:	e8 fc ff ff ff       	call   10000240 <NIWindow::invalidate()+0x34>	10000240: R_386_PC32	free
10000244:	83 c4 10             	add    esp,0x10
10000247:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
1000024e:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10000255:	c6 43 08 00          	mov    BYTE PTR [ebx+0x8],0x0
10000259:	58                   	pop    eax
1000025a:	5b                   	pop    ebx
1000025b:	5e                   	pop    esi
1000025c:	c3                   	ret    
1000025d:	90                   	nop

1000025e <NIWindow::putpixel(int, int, unsigned int)>:
1000025e:	56                   	push   esi
1000025f:	53                   	push   ebx
10000260:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10000264:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000268:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000026c:	8b 5a 04             	mov    ebx,DWORD PTR [edx+0x4]
1000026f:	8b 52 10             	mov    edx,DWORD PTR [edx+0x10]
10000272:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000276:	8b 54 f2 04          	mov    edx,DWORD PTR [edx+esi*8+0x4]
1000027a:	83 fb 04             	cmp    ebx,0x4
1000027d:	75 05                	jne    10000284 <NIWindow::putpixel(int, int, unsigned int)+0x26>
1000027f:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
10000282:	eb 0e                	jmp    10000292 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10000284:	83 fb 02             	cmp    ebx,0x2
10000287:	75 06                	jne    1000028f <NIWindow::putpixel(int, int, unsigned int)+0x31>
10000289:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
1000028d:	eb 03                	jmp    10000292 <NIWindow::putpixel(int, int, unsigned int)+0x34>
1000028f:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10000292:	5b                   	pop    ebx
10000293:	5e                   	pop    esi
10000294:	c3                   	ret    
10000295:	90                   	nop

10000296 <NIWindow::rerender()>:
10000296:	55                   	push   ebp
10000297:	57                   	push   edi
10000298:	56                   	push   esi
10000299:	53                   	push   ebx
1000029a:	83 ec 0c             	sub    esp,0xc
1000029d:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100002a1:	80 7b 08 00          	cmp    BYTE PTR [ebx+0x8],0x0
100002a5:	74 0c                	je     100002b3 <NIWindow::rerender()+0x1d>
100002a7:	83 ec 0c             	sub    esp,0xc
100002aa:	53                   	push   ebx
100002ab:	e8 fc ff ff ff       	call   100002ac <NIWindow::rerender()+0x16>	100002ac: R_386_PC32	NIWindow::invalidate()
100002b0:	83 c4 10             	add    esp,0x10
100002b3:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
100002b6:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
100002b9:	83 ec 0c             	sub    esp,0xc
100002bc:	c1 e0 03             	shl    eax,0x3
100002bf:	50                   	push   eax
100002c0:	e8 fc ff ff ff       	call   100002c1 <NIWindow::rerender()+0x2b>	100002c1: R_386_PC32	malloc
100002c5:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100002c8:	83 c4 10             	add    esp,0x10
100002cb:	31 f6                	xor    esi,esi
100002cd:	39 73 0c             	cmp    DWORD PTR [ebx+0xc],esi
100002d0:	7e 4f                	jle    10000321 <NIWindow::rerender()+0x8b>
100002d2:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100002d5:	8d 3c f0             	lea    edi,[eax+esi*8]
100002d8:	83 fe 06             	cmp    esi,0x6
100002db:	7f 09                	jg     100002e6 <NIWindow::rerender()+0x50>
100002dd:	8b 04 b5 00 00 00 00 	mov    eax,DWORD PTR [esi*4+0x0]	100002e0: R_386_32	curveLookup7
100002e4:	eb 13                	jmp    100002f9 <NIWindow::rerender()+0x63>
100002e6:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
100002e9:	8d 50 fa             	lea    edx,[eax-0x6]
100002ec:	39 f2                	cmp    edx,esi
100002ee:	7f 12                	jg     10000302 <NIWindow::rerender()+0x6c>
100002f0:	29 f0                	sub    eax,esi
100002f2:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100002f5: R_386_32	curveLookup7
100002f9:	66 89 07             	mov    WORD PTR [edi],ax
100002fc:	66 89 47 02          	mov    WORD PTR [edi+0x2],ax
10000300:	eb 06                	jmp    10000308 <NIWindow::rerender()+0x72>
10000302:	c7 07 00 00 00 00    	mov    DWORD PTR [edi],0x0
10000308:	83 ec 0c             	sub    esp,0xc
1000030b:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000030e:	0f af 43 04          	imul   eax,DWORD PTR [ebx+0x4]
10000312:	50                   	push   eax
10000313:	e8 fc ff ff ff       	call   10000314 <NIWindow::rerender()+0x7e>	10000314: R_386_PC32	malloc
10000318:	89 47 04             	mov    DWORD PTR [edi+0x4],eax
1000031b:	46                   	inc    esi
1000031c:	83 c4 10             	add    esp,0x10
1000031f:	eb ac                	jmp    100002cd <NIWindow::rerender()+0x37>
10000321:	31 ff                	xor    edi,edi
10000323:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
10000326:	7e 30                	jle    10000358 <NIWindow::rerender()+0xc2>
10000328:	31 c0                	xor    eax,eax
1000032a:	83 ff 19             	cmp    edi,0x19
1000032d:	0f 9e c0             	setle  al
10000330:	89 c6                	mov    esi,eax
10000332:	4e                   	dec    esi
10000333:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
10000339:	81 c6 ff ff ff 00    	add    esi,0xffffff
1000033f:	31 ed                	xor    ebp,ebp
10000341:	39 6b 1c             	cmp    DWORD PTR [ebx+0x1c],ebp
10000344:	7e 0f                	jle    10000355 <NIWindow::rerender()+0xbf>
10000346:	56                   	push   esi
10000347:	57                   	push   edi
10000348:	55                   	push   ebp
10000349:	53                   	push   ebx
1000034a:	e8 fc ff ff ff       	call   1000034b <NIWindow::rerender()+0xb5>	1000034b: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
1000034f:	45                   	inc    ebp
10000350:	83 c4 10             	add    esp,0x10
10000353:	eb ec                	jmp    10000341 <NIWindow::rerender()+0xab>
10000355:	47                   	inc    edi
10000356:	eb cb                	jmp    10000323 <NIWindow::rerender()+0x8d>
10000358:	83 c4 0c             	add    esp,0xc
1000035b:	5b                   	pop    ebx
1000035c:	5e                   	pop    esi
1000035d:	5f                   	pop    edi
1000035e:	5d                   	pop    ebp
1000035f:	c3                   	ret    

10000360 <NIWindow::changeContext(NIContext*, int, int)>:
10000360:	55                   	push   ebp
10000361:	57                   	push   edi
10000362:	56                   	push   esi
10000363:	53                   	push   ebx
10000364:	83 ec 18             	sub    esp,0x18
10000367:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000036b:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
1000036f:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10000373:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000377:	53                   	push   ebx
10000378:	e8 fc ff ff ff       	call   10000379 <NIWindow::changeContext(NIContext*, int, int)+0x19>	10000379: R_386_PC32	NIWindow::invalidate()
1000037d:	89 33                	mov    DWORD PTR [ebx],esi
1000037f:	89 6b 14             	mov    DWORD PTR [ebx+0x14],ebp
10000382:	89 7b 18             	mov    DWORD PTR [ebx+0x18],edi
10000385:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10000388:	83 c4 10             	add    esp,0x10
1000038b:	83 f8 08             	cmp    eax,0x8
1000038e:	7f 09                	jg     10000399 <NIWindow::changeContext(NIContext*, int, int)+0x39>
10000390:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10000397:	eb 15                	jmp    100003ae <NIWindow::changeContext(NIContext*, int, int)+0x4e>
10000399:	83 f8 10             	cmp    eax,0x10
1000039c:	7f 09                	jg     100003a7 <NIWindow::changeContext(NIContext*, int, int)+0x47>
1000039e:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
100003a5:	eb 07                	jmp    100003ae <NIWindow::changeContext(NIContext*, int, int)+0x4e>
100003a7:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
100003ae:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
100003b2:	83 c4 0c             	add    esp,0xc
100003b5:	5b                   	pop    ebx
100003b6:	5e                   	pop    esi
100003b7:	5f                   	pop    edi
100003b8:	5d                   	pop    ebp
100003b9:	e9 d8 fe ff ff       	jmp    10000296 <NIWindow::rerender()>

100003be <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
100003be:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100003c2:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100003c6:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
100003c9:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100003cd:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
100003d0:	c6 40 08 00          	mov    BYTE PTR [eax+0x8],0x0
100003d4:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
100003db:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
100003e2:	e9 79 ff ff ff       	jmp    10000360 <NIWindow::changeContext(NIContext*, int, int)>
100003e7:	90                   	nop

100003e8 <NIWindow::request()>:
100003e8:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100003ec:	80 78 08 00          	cmp    BYTE PTR [eax+0x8],0x0
100003f0:	75 05                	jne    100003f7 <NIWindow::request()+0xf>
100003f2:	e9 9f fe ff ff       	jmp    10000296 <NIWindow::rerender()>
100003f7:	c3                   	ret    

100003f8 <NIWindow::SHADOW_TEST()>:
100003f8:	55                   	push   ebp
100003f9:	57                   	push   edi
100003fa:	56                   	push   esi
100003fb:	53                   	push   ebx
100003fc:	83 ec 28             	sub    esp,0x28
100003ff:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10000403:	53                   	push   ebx
10000404:	e8 fc ff ff ff       	call   10000405 <NIWindow::SHADOW_TEST()+0xd>	10000405: R_386_PC32	NIWindow::request()
10000409:	83 c4 10             	add    esp,0x10
1000040c:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000040f:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10000412:	74 10                	je     10000424 <NIWindow::SHADOW_TEST()+0x2c>
10000414:	83 ec 0c             	sub    esp,0xc
10000417:	68 c7 05 00 10       	push   0x100005c7	10000418: R_386_32	.text
1000041c:	e8 fc ff ff ff       	call   1000041d <NIWindow::SHADOW_TEST()+0x25>	1000041d: R_386_PC32	KePanic(char const*)
10000421:	83 c4 10             	add    esp,0x10
10000424:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10000428:	0f 85 07 01 00 00    	jne    10000535 <NIWindow::SHADOW_TEST()+0x13d>
1000042e:	31 f6                	xor    esi,esi
10000430:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
10000433:	39 f5                	cmp    ebp,esi
10000435:	0f 8e fa 00 00 00    	jle    10000535 <NIWindow::SHADOW_TEST()+0x13d>
1000043b:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000043e:	8d 04 f0             	lea    eax,[eax+esi*8]
10000441:	0f b7 38             	movzx  edi,WORD PTR [eax]
10000444:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
10000448:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000044c:	29 c5                	sub    ebp,eax
1000044e:	29 f5                	sub    ebp,esi
10000450:	83 c5 04             	add    ebp,0x4
10000453:	b9 ea 01 00 00       	mov    ecx,0x1ea
10000458:	89 c8                	mov    eax,ecx
1000045a:	99                   	cdq    
1000045b:	f7 fd                	idiv   ebp
1000045d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000461:	8d 6e 05             	lea    ebp,[esi+0x5]
10000464:	89 c8                	mov    eax,ecx
10000466:	99                   	cdq    
10000467:	f7 fd                	idiv   ebp
10000469:	83 f8 0a             	cmp    eax,0xa
1000046c:	7d 05                	jge    10000473 <NIWindow::SHADOW_TEST()+0x7b>
1000046e:	b8 0a 00 00 00       	mov    eax,0xa
10000473:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10000477:	39 c2                	cmp    edx,eax
10000479:	7d 04                	jge    1000047f <NIWindow::SHADOW_TEST()+0x87>
1000047b:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000047f:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000483:	0f af c0             	imul   eax,eax
10000486:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000048a:	8b 6b 1c             	mov    ebp,DWORD PTR [ebx+0x1c]
1000048d:	2b 6c 24 08          	sub    ebp,DWORD PTR [esp+0x8]
10000491:	39 fd                	cmp    ebp,edi
10000493:	0f 8e 8a 00 00 00    	jle    10000523 <NIWindow::SHADOW_TEST()+0x12b>
10000499:	29 fd                	sub    ebp,edi
1000049b:	83 c5 04             	add    ebp,0x4
1000049e:	b8 ea 01 00 00       	mov    eax,0x1ea
100004a3:	99                   	cdq    
100004a4:	f7 fd                	idiv   ebp
100004a6:	89 c1                	mov    ecx,eax
100004a8:	83 f8 0a             	cmp    eax,0xa
100004ab:	7d 05                	jge    100004b2 <NIWindow::SHADOW_TEST()+0xba>
100004ad:	b9 0a 00 00 00       	mov    ecx,0xa
100004b2:	8d 6f 05             	lea    ebp,[edi+0x5]
100004b5:	b8 ea 01 00 00       	mov    eax,0x1ea
100004ba:	99                   	cdq    
100004bb:	f7 fd                	idiv   ebp
100004bd:	39 c1                	cmp    ecx,eax
100004bf:	7d 02                	jge    100004c3 <NIWindow::SHADOW_TEST()+0xcb>
100004c1:	89 c1                	mov    ecx,eax
100004c3:	89 cd                	mov    ebp,ecx
100004c5:	0f af e9             	imul   ebp,ecx
100004c8:	03 6c 24 0c          	add    ebp,DWORD PTR [esp+0xc]
100004cc:	0f af 4c 24 04       	imul   ecx,DWORD PTR [esp+0x4]
100004d1:	8d 0c e9             	lea    ecx,[ecx+ebp*8]
100004d4:	bd 2c 01 00 00       	mov    ebp,0x12c
100004d9:	89 c8                	mov    eax,ecx
100004db:	99                   	cdq    
100004dc:	f7 fd                	idiv   ebp
100004de:	81 f9 eb 5e 00 00    	cmp    ecx,0x5eeb
100004e4:	7e 0e                	jle    100004f4 <NIWindow::SHADOW_TEST()+0xfc>
100004e6:	83 e8 50             	sub    eax,0x50
100004e9:	b9 02 00 00 00       	mov    ecx,0x2
100004ee:	99                   	cdq    
100004ef:	f7 f9                	idiv   ecx
100004f1:	83 c0 50             	add    eax,0x50
100004f4:	83 f8 5a             	cmp    eax,0x5a
100004f7:	7e 30                	jle    10000529 <NIWindow::SHADOW_TEST()+0x131>
100004f9:	83 e8 5a             	sub    eax,0x5a
100004fc:	d1 f8                	sar    eax,1
100004fe:	83 c0 5a             	add    eax,0x5a
10000501:	83 f8 63             	cmp    eax,0x63
10000504:	7f 17                	jg     1000051d <NIWindow::SHADOW_TEST()+0x125>
10000506:	50                   	push   eax
10000507:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000050a:	01 f0                	add    eax,esi
1000050c:	50                   	push   eax
1000050d:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10000510:	01 f8                	add    eax,edi
10000512:	50                   	push   eax
10000513:	ff 33                	push   DWORD PTR [ebx]
10000515:	e8 fc ff ff ff       	call   10000516 <NIWindow::SHADOW_TEST()+0x11e>	10000516: R_386_PC32	NIContext::drvDarken4(int, int, int)
1000051a:	83 c4 10             	add    esp,0x10
1000051d:	47                   	inc    edi
1000051e:	e9 67 ff ff ff       	jmp    1000048a <NIWindow::SHADOW_TEST()+0x92>
10000523:	46                   	inc    esi
10000524:	e9 07 ff ff ff       	jmp    10000430 <NIWindow::SHADOW_TEST()+0x38>
10000529:	83 f8 0a             	cmp    eax,0xa
1000052c:	7d d8                	jge    10000506 <NIWindow::SHADOW_TEST()+0x10e>
1000052e:	b8 0a 00 00 00       	mov    eax,0xa
10000533:	eb d1                	jmp    10000506 <NIWindow::SHADOW_TEST()+0x10e>
10000535:	83 c4 1c             	add    esp,0x1c
10000538:	5b                   	pop    ebx
10000539:	5e                   	pop    esi
1000053a:	5f                   	pop    edi
1000053b:	5d                   	pop    ebp
1000053c:	c3                   	ret    
1000053d:	90                   	nop

1000053e <NIWindow::realdraw()>:
1000053e:	55                   	push   ebp
1000053f:	57                   	push   edi
10000540:	56                   	push   esi
10000541:	53                   	push   ebx
10000542:	83 ec 28             	sub    esp,0x28
10000545:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10000549:	53                   	push   ebx
1000054a:	e8 fc ff ff ff       	call   1000054b <NIWindow::realdraw()+0xd>	1000054b: R_386_PC32	NIWindow::request()
1000054f:	83 c4 10             	add    esp,0x10
10000552:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10000555:	39 43 0c             	cmp    DWORD PTR [ebx+0xc],eax
10000558:	74 10                	je     1000056a <NIWindow::realdraw()+0x2c>
1000055a:	83 ec 0c             	sub    esp,0xc
1000055d:	68 c7 05 00 10       	push   0x100005c7	1000055e: R_386_32	.text
10000562:	e8 fc ff ff ff       	call   10000563 <NIWindow::realdraw()+0x25>	10000563: R_386_PC32	KePanic(char const*)
10000567:	83 c4 10             	add    esp,0x10
1000056a:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
1000056e:	75 4f                	jne    100005bf <NIWindow::realdraw()+0x81>
10000570:	31 f6                	xor    esi,esi
10000572:	39 73 20             	cmp    DWORD PTR [ebx+0x20],esi
10000575:	7e 48                	jle    100005bf <NIWindow::realdraw()+0x81>
10000577:	8d 2c f5 00 00 00 00 	lea    ebp,[esi*8+0x0]
1000057e:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10000581:	01 e8                	add    eax,ebp
10000583:	0f b7 38             	movzx  edi,WORD PTR [eax]
10000586:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
1000058a:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000058e:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10000591:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000595:	39 f8                	cmp    eax,edi
10000597:	7e 23                	jle    100005bc <NIWindow::realdraw()+0x7e>
10000599:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
1000059c:	8b 44 28 04          	mov    eax,DWORD PTR [eax+ebp*1+0x4]
100005a0:	ff 34 b8             	push   DWORD PTR [eax+edi*4]
100005a3:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100005a6:	01 f0                	add    eax,esi
100005a8:	50                   	push   eax
100005a9:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100005ac:	01 f8                	add    eax,edi
100005ae:	50                   	push   eax
100005af:	ff 33                	push   DWORD PTR [ebx]
100005b1:	e8 fc ff ff ff       	call   100005b2 <NIWindow::realdraw()+0x74>	100005b2: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
100005b6:	47                   	inc    edi
100005b7:	83 c4 10             	add    esp,0x10
100005ba:	eb d2                	jmp    1000058e <NIWindow::realdraw()+0x50>
100005bc:	46                   	inc    esi
100005bd:	eb b3                	jmp    10000572 <NIWindow::realdraw()+0x34>
100005bf:	83 c4 1c             	add    esp,0x1c
100005c2:	5b                   	pop    ebx
100005c3:	5e                   	pop    esi
100005c4:	5f                   	pop    edi
100005c5:	5d                   	pop    ebp
100005c6:	c3                   	ret    
100005c7:	41                   	inc    ecx
100005c8:	53                   	push   ebx
100005c9:	53                   	push   ebx
100005ca:	45                   	inc    ebp
100005cb:	52                   	push   edx
100005cc:	54                   	push   esp
100005cd:	49                   	dec    ecx
100005ce:	4f                   	dec    edi
100005cf:	4e                   	dec    esi
100005d0:	20 46 41             	and    BYTE PTR [esi+0x41],al
100005d3:	49                   	dec    ecx
100005d4:	4c                   	dec    esp
100005d5:	55                   	push   ebp
100005d6:	52                   	push   edx
100005d7:	45                   	inc    ebp
100005d8:	20 28                	and    BYTE PTR [eax],ch
100005da:	41                   	inc    ecx
100005db:	29 2e                	sub    DWORD PTR [esi],ebp
	...
