
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000009: R_386_32	guiPanicHandler
	1000000d: R_386_32	monikaBsod(char*)
10000011:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000013: R_386_32	screen
10000017:	e8 fc ff ff ff       	call   10000018 <start(void*)+0x18>	10000018: R_386_PC32	Video::getWidth()
1000001c:	89 c3                	mov    ebx,eax
1000001e:	58                   	pop    eax
1000001f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000021: R_386_32	screen
10000025:	e8 fc ff ff ff       	call   10000026 <start(void*)+0x26>	10000026: R_386_PC32	Video::getHeight()
1000002a:	5a                   	pop    edx
1000002b:	89 c7                	mov    edi,eax
1000002d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000002f: R_386_32	screen
10000033:	e8 fc ff ff ff       	call   10000034 <start(void*)+0x34>	10000034: R_386_PC32	Video::getWidth()
10000038:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
1000003f:	89 c5                	mov    ebp,eax
10000041:	e8 fc ff ff ff       	call   10000042 <start(void*)+0x42>	10000042: R_386_PC32	malloc
10000046:	59                   	pop    ecx
10000047:	89 c6                	mov    esi,eax
10000049:	58                   	pop    eax
1000004a:	6a 20                	push   0x20
1000004c:	55                   	push   ebp
1000004d:	57                   	push   edi
1000004e:	53                   	push   ebx
1000004f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000051: R_386_32	screen
10000055:	56                   	push   esi
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
1000005b:	83 c4 14             	add    esp,0x14
1000005e:	6a 14                	push   0x14
10000060:	e8 fc ff ff ff       	call   10000061 <start(void*)+0x61>	10000061: R_386_PC32	malloc
10000065:	89 c3                	mov    ebx,eax
10000067:	58                   	pop    eax
10000068:	5a                   	pop    edx
10000069:	56                   	push   esi
1000006a:	53                   	push   ebx
1000006b:	e8 fc ff ff ff       	call   1000006c <start(void*)+0x6c>	1000006c: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000070:	c7 04 24 3c 00 00 00 	mov    DWORD PTR [esp],0x3c
10000077:	e8 fc ff ff ff       	call   10000078 <start(void*)+0x78>	10000078: R_386_PC32	malloc
1000007c:	5f                   	pop    edi
1000007d:	5d                   	pop    ebp
1000007e:	6a 01                	push   0x1
10000080:	6a 01                	push   0x1
10000082:	6a 00                	push   0x0
10000084:	6a 00                	push   0x0
10000086:	56                   	push   esi
10000087:	50                   	push   eax
10000088:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000008c:	e8 fc ff ff ff       	call   1000008d <start(void*)+0x8d>	1000008d: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000091:	83 c4 14             	add    esp,0x14
10000094:	6a 3c                	push   0x3c
10000096:	e8 fc ff ff ff       	call   10000097 <start(void*)+0x97>	10000097: R_386_PC32	malloc
1000009b:	89 c2                	mov    edx,eax
1000009d:	58                   	pop    eax
1000009e:	59                   	pop    ecx
1000009f:	68 40 01 00 00       	push   0x140
100000a4:	68 90 01 00 00       	push   0x190
100000a9:	6a 32                	push   0x32
100000ab:	6a 32                	push   0x32
100000ad:	56                   	push   esi
100000ae:	52                   	push   edx
100000af:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000b3:	e8 fc ff ff ff       	call   100000b4 <start(void*)+0xb4>	100000b4: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000b8:	83 c4 14             	add    esp,0x14
100000bb:	6a 3c                	push   0x3c
100000bd:	e8 fc ff ff ff       	call   100000be <start(void*)+0xbe>	100000be: R_386_PC32	malloc
100000c2:	5f                   	pop    edi
100000c3:	89 c5                	mov    ebp,eax
100000c5:	58                   	pop    eax
100000c6:	68 7c 01 00 00       	push   0x17c
100000cb:	68 f4 01 00 00       	push   0x1f4
100000d0:	68 96 00 00 00       	push   0x96
100000d5:	68 c8 00 00 00       	push   0xc8
100000da:	56                   	push   esi
100000db:	55                   	push   ebp
100000dc:	e8 fc ff ff ff       	call   100000dd <start(void*)+0xdd>	100000dd: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000e1:	83 c4 14             	add    esp,0x14
100000e4:	6a 3c                	push   0x3c
100000e6:	e8 fc ff ff ff       	call   100000e7 <start(void*)+0xe7>	100000e7: R_386_PC32	malloc
100000eb:	89 c7                	mov    edi,eax
100000ed:	58                   	pop    eax
100000ee:	5a                   	pop    edx
100000ef:	68 af 00 00 00       	push   0xaf
100000f4:	68 0e 01 00 00       	push   0x10e
100000f9:	68 90 01 00 00       	push   0x190
100000fe:	6a 7d                	push   0x7d
10000100:	56                   	push   esi
10000101:	57                   	push   edi
10000102:	e8 fc ff ff ff       	call   10000103 <start(void*)+0x103>	10000103: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000107:	83 c4 18             	add    esp,0x18
1000010a:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000010e:	51                   	push   ecx
1000010f:	53                   	push   ebx
10000110:	e8 fc ff ff ff       	call   10000111 <start(void*)+0x111>	10000111: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000115:	59                   	pop    ecx
10000116:	5e                   	pop    esi
10000117:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000011b:	52                   	push   edx
1000011c:	53                   	push   ebx
1000011d:	e8 fc ff ff ff       	call   1000011e <start(void*)+0x11e>	1000011e: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000122:	58                   	pop    eax
10000123:	5a                   	pop    edx
10000124:	55                   	push   ebp
10000125:	53                   	push   ebx
10000126:	e8 fc ff ff ff       	call   10000127 <start(void*)+0x127>	10000127: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012b:	59                   	pop    ecx
1000012c:	5e                   	pop    esi
1000012d:	57                   	push   edi
1000012e:	53                   	push   ebx
1000012f:	e8 fc ff ff ff       	call   10000130 <start(void*)+0x130>	10000130: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000134:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000137:	e8 fc ff ff ff       	call   10000138 <start(void*)+0x138>	10000138: R_386_PC32	NIDesktop::completeRefresh()
1000013c:	83 c4 10             	add    esp,0x10
1000013f:	83 ec 0c             	sub    esp,0xc
10000142:	6a 02                	push   0x2
10000144:	e8 fc ff ff ff       	call   10000145 <start(void*)+0x145>	10000145: R_386_PC32	blockTask(TaskState)
10000149:	eb f1                	jmp    1000013c <start(void*)+0x13c>
1000014b:	90                   	nop

1000014c <begin(void*)>:
1000014c:	83 ec 18             	sub    esp,0x18
1000014f:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000153:	e8 fc ff ff ff       	call   10000154 <begin(void*)+0x8>	10000154: R_386_PC32	start(void*)

10000158 <_ssfn__bitreverse16>:
10000158:	89 c2                	mov    edx,eax
1000015a:	01 c0                	add    eax,eax
1000015c:	d1 fa                	sar    edx,1
1000015e:	25 aa aa 00 00       	and    eax,0xaaaa
10000163:	81 e2 55 55 00 00    	and    edx,0x5555
10000169:	09 c2                	or     edx,eax
1000016b:	89 d0                	mov    eax,edx
1000016d:	c1 e2 02             	shl    edx,0x2
10000170:	c1 f8 02             	sar    eax,0x2
10000173:	81 e2 cc cc 00 00    	and    edx,0xcccc
10000179:	25 33 33 00 00       	and    eax,0x3333
1000017e:	09 d0                	or     eax,edx
10000180:	89 c2                	mov    edx,eax
10000182:	c1 e0 04             	shl    eax,0x4
10000185:	c1 fa 04             	sar    edx,0x4
10000188:	25 f0 f0 00 00       	and    eax,0xf0f0
1000018d:	81 e2 0f 0f 00 00    	and    edx,0xf0f
10000193:	09 c2                	or     edx,eax
10000195:	89 d1                	mov    ecx,edx
10000197:	c1 e2 08             	shl    edx,0x8
1000019a:	c1 f9 08             	sar    ecx,0x8
1000019d:	0f b7 c2             	movzx  eax,dx
100001a0:	09 c8                	or     eax,ecx
100001a2:	c3                   	ret    

100001a3 <_ssfn__zhuffman_decode>:
100001a3:	55                   	push   ebp
100001a4:	57                   	push   edi
100001a5:	56                   	push   esi
100001a6:	53                   	push   ebx
100001a7:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001ab:	7f 1d                	jg     100001ca <_ssfn__zhuffman_decode+0x27>
100001ad:	8b 18                	mov    ebx,DWORD PTR [eax]
100001af:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001b2:	89 08                	mov    DWORD PTR [eax],ecx
100001b4:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001b7:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001ba:	d3 e3                	shl    ebx,cl
100001bc:	83 c1 08             	add    ecx,0x8
100001bf:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001c2:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001c5:	83 f9 18             	cmp    ecx,0x18
100001c8:	eb e1                	jmp    100001ab <_ssfn__zhuffman_decode+0x8>
100001ca:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001cd:	89 f9                	mov    ecx,edi
100001cf:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001d5:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001d9:	89 cb                	mov    ebx,ecx
100001db:	85 c9                	test   ecx,ecx
100001dd:	74 15                	je     100001f4 <_ssfn__zhuffman_decode+0x51>
100001df:	c1 f9 09             	sar    ecx,0x9
100001e2:	89 da                	mov    edx,ebx
100001e4:	d3 ef                	shr    edi,cl
100001e6:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001e9:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001ec:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001f2:	eb 58                	jmp    1000024c <_ssfn__zhuffman_decode+0xa9>
100001f4:	89 d5                	mov    ebp,edx
100001f6:	89 c3                	mov    ebx,eax
100001f8:	be 0a 00 00 00       	mov    esi,0xa
100001fd:	89 f8                	mov    eax,edi
100001ff:	e8 54 ff ff ff       	call   10000158 <_ssfn__bitreverse16>
10000204:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
1000020b:	7c 03                	jl     10000210 <_ssfn__zhuffman_decode+0x6d>
1000020d:	46                   	inc    esi
1000020e:	eb f4                	jmp    10000204 <_ssfn__zhuffman_decode+0x61>
10000210:	83 ca ff             	or     edx,0xffffffff
10000213:	83 fe 10             	cmp    esi,0x10
10000216:	74 34                	je     1000024c <_ssfn__zhuffman_decode+0xa9>
10000218:	8d 14 36             	lea    edx,[esi+esi*1]
1000021b:	b9 10 00 00 00       	mov    ecx,0x10
10000220:	01 ea                	add    edx,ebp
10000222:	29 f1                	sub    ecx,esi
10000224:	d3 f8                	sar    eax,cl
10000226:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
1000022d:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
10000234:	29 c8                	sub    eax,ecx
10000236:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
10000239:	89 f1                	mov    ecx,esi
1000023b:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
10000242:	d3 ef                	shr    edi,cl
10000244:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
10000247:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
1000024c:	5b                   	pop    ebx
1000024d:	89 d0                	mov    eax,edx
1000024f:	5e                   	pop    esi
10000250:	5f                   	pop    edi
10000251:	5d                   	pop    ebp
10000252:	c3                   	ret    

10000253 <_ssfn__zexpand>:
10000253:	55                   	push   ebp
10000254:	57                   	push   edi
10000255:	56                   	push   esi
10000256:	53                   	push   ebx
10000257:	83 ec 0c             	sub    esp,0xc
1000025a:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
1000025d:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000260:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
10000263:	29 f9                	sub    ecx,edi
10000265:	83 f9 08             	cmp    ecx,0x8
10000268:	74 04                	je     1000026e <_ssfn__zexpand+0x1b>
1000026a:	31 c0                	xor    eax,eax
1000026c:	eb 3c                	jmp    100002aa <_ssfn__zexpand+0x57>
1000026e:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000271:	75 f7                	jne    1000026a <_ssfn__zexpand+0x17>
10000273:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
10000277:	75 f1                	jne    1000026a <_ssfn__zexpand+0x17>
10000279:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
1000027d:	75 eb                	jne    1000026a <_ssfn__zexpand+0x17>
1000027f:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
10000282:	89 c3                	mov    ebx,eax
10000284:	89 d6                	mov    esi,edx
10000286:	50                   	push   eax
10000287:	50                   	push   eax
10000288:	55                   	push   ebp
10000289:	57                   	push   edi
1000028a:	e8 fc ff ff ff       	call   1000028b <_ssfn__zexpand+0x38>	1000028b: R_386_PC32	realloc
1000028f:	83 c4 10             	add    esp,0x10
10000292:	85 c0                	test   eax,eax
10000294:	74 d4                	je     1000026a <_ssfn__zexpand+0x17>
10000296:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10000299:	29 fe                	sub    esi,edi
1000029b:	01 c6                	add    esi,eax
1000029d:	01 e8                	add    eax,ebp
1000029f:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
100002a2:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100002a5:	b8 01 00 00 00       	mov    eax,0x1
100002aa:	83 c4 0c             	add    esp,0xc
100002ad:	5b                   	pop    ebx
100002ae:	5e                   	pop    esi
100002af:	5f                   	pop    edi
100002b0:	5d                   	pop    ebp
100002b1:	c3                   	ret    

100002b2 <_ssfn__zbuild_huffman>:
100002b2:	55                   	push   ebp
100002b3:	57                   	push   edi
100002b4:	56                   	push   esi
100002b5:	53                   	push   ebx
100002b6:	89 c3                	mov    ebx,eax
100002b8:	81 ec a0 00 00 00    	sub    esp,0xa0
100002be:	31 c0                	xor    eax,eax
100002c0:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002c3:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002c7:	b9 11 00 00 00       	mov    ecx,0x11
100002cc:	89 ef                	mov    edi,ebp
100002ce:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002d2:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002d4:	b9 00 01 00 00       	mov    ecx,0x100
100002d9:	89 df                	mov    edi,ebx
100002db:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002dd:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002e0:	7d 0f                	jge    100002f1 <_ssfn__zbuild_huffman+0x3f>
100002e2:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002e6:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002ea:	40                   	inc    eax
100002eb:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002ef:	eb ec                	jmp    100002dd <_ssfn__zbuild_huffman+0x2b>
100002f1:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002f9:	b9 01 00 00 00       	mov    ecx,0x1
100002fe:	b8 01 00 00 00       	mov    eax,0x1
10000303:	89 c7                	mov    edi,eax
10000305:	d3 e7                	shl    edi,cl
10000307:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
1000030b:	0f 8f 10 01 00 00    	jg     10000421 <_ssfn__zbuild_huffman+0x16f>
10000311:	41                   	inc    ecx
10000312:	83 f9 10             	cmp    ecx,0x10
10000315:	75 ec                	jne    10000303 <_ssfn__zbuild_huffman+0x51>
10000317:	31 ff                	xor    edi,edi
10000319:	31 f6                	xor    esi,esi
1000031b:	b8 01 00 00 00       	mov    eax,0x1
10000320:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
10000324:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
10000328:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000330:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
10000338:	01 ef                	add    edi,ebp
1000033a:	85 ed                	test   ebp,ebp
1000033c:	74 11                	je     1000034f <_ssfn__zbuild_huffman+0x9d>
1000033e:	ba 01 00 00 00       	mov    edx,0x1
10000343:	88 c1                	mov    cl,al
10000345:	d3 e2                	shl    edx,cl
10000347:	39 fa                	cmp    edx,edi
10000349:	0f 8c d2 00 00 00    	jl     10000421 <_ssfn__zbuild_huffman+0x16f>
1000034f:	89 fa                	mov    edx,edi
10000351:	b9 10 00 00 00       	mov    ecx,0x10
10000356:	01 ff                	add    edi,edi
10000358:	29 c1                	sub    ecx,eax
1000035a:	01 ee                	add    esi,ebp
1000035c:	d3 e2                	shl    edx,cl
1000035e:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
10000365:	40                   	inc    eax
10000366:	83 f8 10             	cmp    eax,0x10
10000369:	75 b5                	jne    10000320 <_ssfn__zbuild_huffman+0x6e>
1000036b:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000036e:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
10000378:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000037c:	31 ff                	xor    edi,edi
1000037e:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10000382:	0f 8d 9d 00 00 00    	jge    10000425 <_ssfn__zbuild_huffman+0x173>
10000388:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000038c:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000390:	89 f2                	mov    edx,esi
10000392:	85 f6                	test   esi,esi
10000394:	0f 84 81 00 00 00    	je     1000041b <_ssfn__zbuild_huffman+0x169>
1000039a:	8d 0c 36             	lea    ecx,[esi+esi*1]
1000039d:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
100003a1:	8d 04 19             	lea    eax,[ecx+ebx*1]
100003a4:	89 e9                	mov    ecx,ebp
100003a6:	89 04 24             	mov    DWORD PTR [esp],eax
100003a9:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003b0:	29 c1                	sub    ecx,eax
100003b2:	89 c8                	mov    eax,ecx
100003b4:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003b7:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003be:	01 c8                	add    eax,ecx
100003c0:	83 fe 09             	cmp    esi,0x9
100003c3:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003ca:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003d2:	7f 42                	jg     10000416 <_ssfn__zbuild_huffman+0x164>
100003d4:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003d8:	89 e8                	mov    eax,ebp
100003da:	e8 79 fd ff ff       	call   10000158 <_ssfn__bitreverse16>
100003df:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003e3:	b9 10 00 00 00       	mov    ecx,0x10
100003e8:	29 f1                	sub    ecx,esi
100003ea:	d3 f8                	sar    eax,cl
100003ec:	88 d1                	mov    cl,dl
100003ee:	89 04 24             	mov    DWORD PTR [esp],eax
100003f1:	89 f2                	mov    edx,esi
100003f3:	b8 01 00 00 00       	mov    eax,0x1
100003f8:	c1 e2 09             	shl    edx,0x9
100003fb:	d3 e0                	shl    eax,cl
100003fd:	09 fa                	or     edx,edi
100003ff:	89 c1                	mov    ecx,eax
10000401:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
10000408:	7f 0c                	jg     10000416 <_ssfn__zbuild_huffman+0x164>
1000040a:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000040d:	01 0c 24             	add    DWORD PTR [esp],ecx
10000410:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
10000414:	eb eb                	jmp    10000401 <_ssfn__zbuild_huffman+0x14f>
10000416:	45                   	inc    ebp
10000417:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
1000041b:	47                   	inc    edi
1000041c:	e9 5d ff ff ff       	jmp    1000037e <_ssfn__zbuild_huffman+0xcc>
10000421:	31 c0                	xor    eax,eax
10000423:	eb 05                	jmp    1000042a <_ssfn__zbuild_huffman+0x178>
10000425:	b8 01 00 00 00       	mov    eax,0x1
1000042a:	81 c4 a0 00 00 00    	add    esp,0xa0
10000430:	5b                   	pop    ebx
10000431:	5e                   	pop    esi
10000432:	5f                   	pop    edi
10000433:	5d                   	pop    ebp
10000434:	c3                   	ret    

10000435 <_ssfn_fc.part.1>:
10000435:	55                   	push   ebp
10000436:	57                   	push   edi
10000437:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
1000043d:	56                   	push   esi
1000043e:	53                   	push   ebx
1000043f:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
10000445:	83 ec 0c             	sub    esp,0xc
10000448:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
1000044b:	74 5d                	je     100004aa <_ssfn_fc.part.1+0x75>
1000044d:	31 f6                	xor    esi,esi
1000044f:	8b 03                	mov    eax,DWORD PTR [ebx]
10000451:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
10000455:	74 35                	je     1000048c <_ssfn_fc.part.1+0x57>
10000457:	31 ed                	xor    ebp,ebp
10000459:	8b 03                	mov    eax,DWORD PTR [ebx]
1000045b:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
1000045e:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000461:	85 c0                	test   eax,eax
10000463:	74 0c                	je     10000471 <_ssfn_fc.part.1+0x3c>
10000465:	83 ec 0c             	sub    esp,0xc
10000468:	50                   	push   eax
10000469:	e8 fc ff ff ff       	call   1000046a <_ssfn_fc.part.1+0x35>	1000046a: R_386_PC32	free
1000046e:	83 c4 10             	add    esp,0x10
10000471:	83 c5 04             	add    ebp,0x4
10000474:	81 fd 00 04 00 00    	cmp    ebp,0x400
1000047a:	75 dd                	jne    10000459 <_ssfn_fc.part.1+0x24>
1000047c:	83 ec 0c             	sub    esp,0xc
1000047f:	8b 03                	mov    eax,DWORD PTR [ebx]
10000481:	ff 34 30             	push   DWORD PTR [eax+esi*1]
10000484:	e8 fc ff ff ff       	call   10000485 <_ssfn_fc.part.1+0x50>	10000485: R_386_PC32	free
10000489:	83 c4 10             	add    esp,0x10
1000048c:	83 c6 04             	add    esi,0x4
1000048f:	81 fe 00 04 00 00    	cmp    esi,0x400
10000495:	75 b8                	jne    1000044f <_ssfn_fc.part.1+0x1a>
10000497:	83 ec 0c             	sub    esp,0xc
1000049a:	ff 33                	push   DWORD PTR [ebx]
1000049c:	e8 fc ff ff ff       	call   1000049d <_ssfn_fc.part.1+0x68>	1000049d: R_386_PC32	free
100004a1:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
100004a7:	83 c4 10             	add    esp,0x10
100004aa:	83 c3 04             	add    ebx,0x4
100004ad:	39 fb                	cmp    ebx,edi
100004af:	75 97                	jne    10000448 <_ssfn_fc.part.1+0x13>
100004b1:	83 c4 0c             	add    esp,0xc
100004b4:	5b                   	pop    ebx
100004b5:	5e                   	pop    esi
100004b6:	5f                   	pop    edi
100004b7:	5d                   	pop    ebp
100004b8:	c3                   	ret    

100004b9 <_ssfn_l>:
100004b9:	57                   	push   edi
100004ba:	56                   	push   esi
100004bb:	53                   	push   ebx
100004bc:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004c0:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004c4:	39 ce                	cmp    esi,ecx
100004c6:	89 f3                	mov    ebx,esi
100004c8:	0f 9d c1             	setge  cl
100004cb:	c1 eb 1f             	shr    ebx,0x1f
100004ce:	09 d9                	or     ecx,ebx
100004d0:	89 fb                	mov    ebx,edi
100004d2:	c1 eb 1f             	shr    ebx,0x1f
100004d5:	08 d9                	or     cl,bl
100004d7:	0f 85 e9 00 00 00    	jne    100005c6 <_ssfn_l+0x10d>
100004dd:	39 d7                	cmp    edi,edx
100004df:	0f 8d e1 00 00 00    	jge    100005c6 <_ssfn_l+0x10d>
100004e5:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004eb:	8d 51 08             	lea    edx,[ecx+0x8]
100004ee:	8d 4f 08             	lea    ecx,[edi+0x8]
100004f1:	c1 fa 04             	sar    edx,0x4
100004f4:	c1 f9 04             	sar    ecx,0x4
100004f7:	39 ca                	cmp    edx,ecx
100004f9:	75 1a                	jne    10000515 <_ssfn_l+0x5c>
100004fb:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
10000501:	8d 4e 08             	lea    ecx,[esi+0x8]
10000504:	83 c2 08             	add    edx,0x8
10000507:	c1 f9 04             	sar    ecx,0x4
1000050a:	c1 fa 04             	sar    edx,0x4
1000050d:	39 ca                	cmp    edx,ecx
1000050f:	0f 84 b1 00 00 00    	je     100005c6 <_ssfn_l+0x10d>
10000515:	89 c3                	mov    ebx,eax
10000517:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
1000051d:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
10000523:	7f 3e                	jg     10000563 <_ssfn_l+0xaa>
10000525:	05 00 02 00 00       	add    eax,0x200
1000052a:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000530:	52                   	push   edx
10000531:	01 c0                	add    eax,eax
10000533:	52                   	push   edx
10000534:	50                   	push   eax
10000535:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
1000053b:	e8 fc ff ff ff       	call   1000053c <_ssfn_l+0x83>	1000053c: R_386_PC32	realloc
10000540:	83 c4 10             	add    esp,0x10
10000543:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
10000549:	85 c0                	test   eax,eax
1000054b:	75 16                	jne    10000563 <_ssfn_l+0xaa>
1000054d:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
10000557:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000561:	eb 63                	jmp    100005c6 <_ssfn_l+0x10d>
10000563:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
1000056a:	75 26                	jne    10000592 <_ssfn_l+0xd9>
1000056c:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000572:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
10000578:	66 89 10             	mov    WORD PTR [eax],dx
1000057b:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000581:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
10000587:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
1000058b:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
10000592:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
10000598:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000059e:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
100005a2:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005a8:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005ae:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005b3:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005b9:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005c0:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005c6:	5b                   	pop    ebx
100005c7:	5e                   	pop    esi
100005c8:	5f                   	pop    edi
100005c9:	c3                   	ret    

100005ca <_ssfn_b>:
100005ca:	55                   	push   ebp
100005cb:	57                   	push   edi
100005cc:	56                   	push   esi
100005cd:	53                   	push   ebx
100005ce:	83 ec 4c             	sub    esp,0x4c
100005d1:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005d5:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005d9:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005dd:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005e1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005e5:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005e9:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005ed:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005f1:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005f5:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005f9:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100005fd:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
10000601:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000605:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10000609:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000060d:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10000614:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000618:	83 f8 04             	cmp    eax,0x4
1000061b:	75 28                	jne    10000645 <_ssfn_b+0x7b>
1000061d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000621:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000625:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10000629:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
1000062d:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000631:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10000635:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000639:	83 c4 4c             	add    esp,0x4c
1000063c:	5b                   	pop    ebx
1000063d:	5e                   	pop    esi
1000063e:	5f                   	pop    edi
1000063f:	5d                   	pop    ebp
10000640:	e9 74 fe ff ff       	jmp    100004b9 <_ssfn_l>
10000645:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000649:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
1000064d:	75 0e                	jne    1000065d <_ssfn_b+0x93>
1000064f:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000653:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000657:	0f 84 19 01 00 00    	je     10000776 <_ssfn_b+0x1ac>
1000065d:	be 02 00 00 00       	mov    esi,0x2
10000662:	89 d8                	mov    eax,ebx
10000664:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10000668:	99                   	cdq    
10000669:	f7 fe                	idiv   esi
1000066b:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
1000066f:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000673:	89 e8                	mov    eax,ebp
10000675:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000679:	99                   	cdq    
1000067a:	f7 fe                	idiv   esi
1000067c:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000680:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000684:	89 f8                	mov    eax,edi
10000686:	29 d8                	sub    eax,ebx
10000688:	99                   	cdq    
10000689:	f7 fe                	idiv   esi
1000068b:	01 c3                	add    ebx,eax
1000068d:	89 c8                	mov    eax,ecx
1000068f:	29 e8                	sub    eax,ebp
10000691:	99                   	cdq    
10000692:	f7 fe                	idiv   esi
10000694:	01 e8                	add    eax,ebp
10000696:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000069a:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000069e:	29 f8                	sub    eax,edi
100006a0:	99                   	cdq    
100006a1:	f7 fe                	idiv   esi
100006a3:	01 f8                	add    eax,edi
100006a5:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006a9:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006ad:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006b1:	29 c8                	sub    eax,ecx
100006b3:	99                   	cdq    
100006b4:	f7 fe                	idiv   esi
100006b6:	01 c8                	add    eax,ecx
100006b8:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006bc:	89 d8                	mov    eax,ebx
100006be:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006c2:	99                   	cdq    
100006c3:	f7 fe                	idiv   esi
100006c5:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006c8:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006cc:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006d0:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006d4:	99                   	cdq    
100006d5:	f7 fe                	idiv   esi
100006d7:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006da:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006de:	29 d8                	sub    eax,ebx
100006e0:	99                   	cdq    
100006e1:	f7 fe                	idiv   esi
100006e3:	83 ec 0c             	sub    esp,0xc
100006e6:	01 d8                	add    eax,ebx
100006e8:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006ec:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006f0:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006f4:	99                   	cdq    
100006f5:	f7 fe                	idiv   esi
100006f7:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006fb:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100006ff:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000703:	29 c8                	sub    eax,ecx
10000705:	99                   	cdq    
10000706:	f7 fe                	idiv   esi
10000708:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000070b:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000070f:	29 e8                	sub    eax,ebp
10000711:	99                   	cdq    
10000712:	f7 fe                	idiv   esi
10000714:	8d 34 28             	lea    esi,[eax+ebp*1]
10000717:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
1000071b:	8d 78 01             	lea    edi,[eax+0x1]
1000071e:	57                   	push   edi
1000071f:	56                   	push   esi
10000720:	53                   	push   ebx
10000721:	55                   	push   ebp
10000722:	51                   	push   ecx
10000723:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000727:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000072b:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
1000072f:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000733:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
10000737:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000073b:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000073f:	e8 86 fe ff ff       	call   100005ca <_ssfn_b>
10000744:	83 c4 24             	add    esp,0x24
10000747:	57                   	push   edi
10000748:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
1000074c:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000750:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000754:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000758:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
1000075c:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000760:	56                   	push   esi
10000761:	53                   	push   ebx
10000762:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
10000766:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000076a:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000076e:	e8 57 fe ff ff       	call   100005ca <_ssfn_b>
10000773:	83 c4 30             	add    esp,0x30
10000776:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
1000077b:	0f 85 9c fe ff ff    	jne    1000061d <_ssfn_b+0x53>
10000781:	83 c4 4c             	add    esp,0x4c
10000784:	5b                   	pop    ebx
10000785:	5e                   	pop    esi
10000786:	5f                   	pop    edi
10000787:	5d                   	pop    ebp
10000788:	c3                   	ret    

10000789 <_ssfn__zreceive>:
10000789:	56                   	push   esi
1000078a:	53                   	push   ebx
1000078b:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
1000078e:	7d 1d                	jge    100007ad <_ssfn__zreceive+0x24>
10000790:	8b 18                	mov    ebx,DWORD PTR [eax]
10000792:	8d 4b 01             	lea    ecx,[ebx+0x1]
10000795:	89 08                	mov    DWORD PTR [eax],ecx
10000797:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
1000079a:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
1000079d:	d3 e3                	shl    ebx,cl
1000079f:	83 c1 08             	add    ecx,0x8
100007a2:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100007a5:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007a8:	83 f9 18             	cmp    ecx,0x18
100007ab:	7e e3                	jle    10000790 <_ssfn__zreceive+0x7>
100007ad:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007b0:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007b3:	89 f3                	mov    ebx,esi
100007b5:	88 d1                	mov    cl,dl
100007b7:	d3 eb                	shr    ebx,cl
100007b9:	88 d1                	mov    cl,dl
100007bb:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007be:	bb 01 00 00 00       	mov    ebx,0x1
100007c3:	d3 e3                	shl    ebx,cl
100007c5:	8d 43 ff             	lea    eax,[ebx-0x1]
100007c8:	5b                   	pop    ebx
100007c9:	21 f0                	and    eax,esi
100007cb:	5e                   	pop    esi
100007cc:	c3                   	ret    

100007cd <ssfn_utf8>:
100007cd:	56                   	push   esi
100007ce:	53                   	push   ebx
100007cf:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007d3:	8b 11                	mov    edx,DWORD PTR [ecx]
100007d5:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007d8:	89 f0                	mov    eax,esi
100007da:	84 c0                	test   al,al
100007dc:	0f be d8             	movsx  ebx,al
100007df:	78 04                	js     100007e5 <ssfn_utf8+0x18>
100007e1:	89 d8                	mov    eax,ebx
100007e3:	eb 7d                	jmp    10000862 <ssfn_utf8+0x95>
100007e5:	f7 c6 20 00 00 00    	test   esi,0x20
100007eb:	75 14                	jne    10000801 <ssfn_utf8+0x34>
100007ed:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007f0:	c1 e3 06             	shl    ebx,0x6
100007f3:	83 e0 3f             	and    eax,0x3f
100007f6:	81 e3 c0 07 00 00    	and    ebx,0x7c0
100007fc:	42                   	inc    edx
100007fd:	09 d8                	or     eax,ebx
100007ff:	eb 5f                	jmp    10000860 <ssfn_utf8+0x93>
10000801:	f7 c6 10 00 00 00    	test   esi,0x10
10000807:	75 20                	jne    10000829 <ssfn_utf8+0x5c>
10000809:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
1000080d:	c1 e3 0c             	shl    ebx,0xc
10000810:	c1 e0 06             	shl    eax,0x6
10000813:	0f b7 db             	movzx  ebx,bx
10000816:	25 c0 0f 00 00       	and    eax,0xfc0
1000081b:	83 c2 02             	add    edx,0x2
1000081e:	09 d8                	or     eax,ebx
10000820:	8a 1a                	mov    bl,BYTE PTR [edx]
10000822:	83 e3 3f             	and    ebx,0x3f
10000825:	09 d8                	or     eax,ebx
10000827:	eb 37                	jmp    10000860 <ssfn_utf8+0x93>
10000829:	31 c0                	xor    eax,eax
1000082b:	83 e6 08             	and    esi,0x8
1000082e:	75 32                	jne    10000862 <ssfn_utf8+0x95>
10000830:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000834:	c1 e3 12             	shl    ebx,0x12
10000837:	c1 e0 0c             	shl    eax,0xc
1000083a:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000840:	25 00 f0 03 00       	and    eax,0x3f000
10000845:	83 c2 03             	add    edx,0x3
10000848:	09 d8                	or     eax,ebx
1000084a:	8a 1a                	mov    bl,BYTE PTR [edx]
1000084c:	83 e3 3f             	and    ebx,0x3f
1000084f:	09 d8                	or     eax,ebx
10000851:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
10000855:	c1 e3 06             	shl    ebx,0x6
10000858:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
1000085e:	09 d8                	or     eax,ebx
10000860:	89 11                	mov    DWORD PTR [ecx],edx
10000862:	ff 01                	inc    DWORD PTR [ecx]
10000864:	5b                   	pop    ebx
10000865:	5e                   	pop    esi
10000866:	c3                   	ret    

10000867 <_ssfn_c>:
10000867:	55                   	push   ebp
10000868:	57                   	push   edi
10000869:	56                   	push   esi
1000086a:	53                   	push   ebx
1000086b:	83 ec 14             	sub    esp,0x14
1000086e:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
10000874:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000878:	85 c0                	test   eax,eax
1000087a:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000880:	0f 84 e6 00 00 00    	je     1000096c <_ssfn_c+0x105>
10000886:	31 ff                	xor    edi,edi
10000888:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
1000088c:	0f 84 f3 00 00 00    	je     10000985 <_ssfn_c+0x11e>
10000892:	85 d2                	test   edx,edx
10000894:	0f 84 eb 00 00 00    	je     10000985 <_ssfn_c+0x11e>
1000089a:	80 3a 00             	cmp    BYTE PTR [edx],0x0
1000089d:	0f 84 e2 00 00 00    	je     10000985 <_ssfn_c+0x11e>
100008a3:	89 d6                	mov    esi,edx
100008a5:	89 cd                	mov    ebp,ecx
100008a7:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008aa:	89 c3                	mov    ebx,eax
100008ac:	85 d2                	test   edx,edx
100008ae:	74 38                	je     100008e8 <_ssfn_c+0x81>
100008b0:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008b3:	31 c0                	xor    eax,eax
100008b5:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008b8:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008bb:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008bf:	66 85 d2             	test   dx,dx
100008c2:	74 24                	je     100008e8 <_ssfn_c+0x81>
100008c4:	01 da                	add    edx,ebx
100008c6:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008ca:	8a 0a                	mov    cl,BYTE PTR [edx]
100008cc:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008d0:	84 c9                	test   cl,cl
100008d2:	0f 84 9e 00 00 00    	je     10000976 <_ssfn_c+0x10f>
100008d8:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008da:	0f 85 90 00 00 00    	jne    10000970 <_ssfn_c+0x109>
100008e0:	47                   	inc    edi
100008e1:	42                   	inc    edx
100008e2:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008e6:	eb e2                	jmp    100008ca <_ssfn_c+0x63>
100008e8:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008ec:	8d 44 24 10          	lea    eax,[esp+0x10]
100008f0:	50                   	push   eax
100008f1:	e8 fc ff ff ff       	call   100008f2 <_ssfn_c+0x8b>	100008f2: R_386_PC32	ssfn_utf8
100008f6:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008fa:	29 f2                	sub    edx,esi
100008fc:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
100008ff:	5a                   	pop    edx
10000900:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000904:	89 06                	mov    DWORD PTR [esi],eax
10000906:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
10000909:	89 df                	mov    edi,ebx
1000090b:	31 db                	xor    ebx,ebx
1000090d:	8a 17                	mov    dl,BYTE PTR [edi]
1000090f:	80 fa ff             	cmp    dl,0xff
10000912:	75 08                	jne    1000091c <_ssfn_c+0xb5>
10000914:	81 c3 ff ff 00 00    	add    ebx,0xffff
1000091a:	eb 2a                	jmp    10000946 <_ssfn_c+0xdf>
1000091c:	88 d1                	mov    cl,dl
1000091e:	83 e1 c0             	and    ecx,0xffffffc0
10000921:	80 f9 c0             	cmp    cl,0xc0
10000924:	75 16                	jne    1000093c <_ssfn_c+0xd5>
10000926:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
1000092a:	c1 e2 08             	shl    edx,0x8
1000092d:	83 c7 02             	add    edi,0x2
10000930:	81 e2 00 3f 00 00    	and    edx,0x3f00
10000936:	09 ca                	or     edx,ecx
10000938:	01 d3                	add    ebx,edx
1000093a:	eb 27                	jmp    10000963 <_ssfn_c+0xfc>
1000093c:	80 f9 80             	cmp    cl,0x80
1000093f:	75 08                	jne    10000949 <_ssfn_c+0xe2>
10000941:	83 e2 3f             	and    edx,0x3f
10000944:	01 d3                	add    ebx,edx
10000946:	47                   	inc    edi
10000947:	eb 1a                	jmp    10000963 <_ssfn_c+0xfc>
10000949:	39 d8                	cmp    eax,ebx
1000094b:	74 38                	je     10000985 <_ssfn_c+0x11e>
1000094d:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000951:	83 e2 40             	and    edx,0x40
10000954:	80 fa 01             	cmp    dl,0x1
10000957:	19 d2                	sbb    edx,edx
10000959:	83 c2 06             	add    edx,0x6
1000095c:	0f af d1             	imul   edx,ecx
1000095f:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
10000963:	43                   	inc    ebx
10000964:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
1000096a:	76 a1                	jbe    1000090d <_ssfn_c+0xa6>
1000096c:	31 ff                	xor    edi,edi
1000096e:	eb 15                	jmp    10000985 <_ssfn_c+0x11e>
10000970:	40                   	inc    eax
10000971:	e9 42 ff ff ff       	jmp    100008b8 <_ssfn_c+0x51>
10000976:	29 f7                	sub    edi,esi
10000978:	05 00 f0 00 00       	add    eax,0xf000
1000097d:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000980:	e9 7b ff ff ff       	jmp    10000900 <_ssfn_c+0x99>
10000985:	83 c4 14             	add    esp,0x14
10000988:	89 f8                	mov    eax,edi
1000098a:	5b                   	pop    ebx
1000098b:	5e                   	pop    esi
1000098c:	5f                   	pop    edi
1000098d:	5d                   	pop    ebp
1000098e:	c3                   	ret    

1000098f <_ssfn_zlib_decode>:
1000098f:	55                   	push   ebp
10000990:	57                   	push   edi
10000991:	56                   	push   esi
10000992:	53                   	push   ebx
10000993:	81 ec c8 19 00 00    	sub    esp,0x19c8
10000999:	6a 08                	push   0x8
1000099b:	e8 fc ff ff ff       	call   1000099c <_ssfn_zlib_decode+0xd>	1000099c: R_386_PC32	malloc
100009a0:	83 c4 10             	add    esp,0x10
100009a3:	89 c2                	mov    edx,eax
100009a5:	85 c0                	test   eax,eax
100009a7:	0f 84 eb 04 00 00    	je     10000e98 <_ssfn_zlib_decode+0x509>
100009ad:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009b4:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009bb:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009c2:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009c9:	31 c0                	xor    eax,eax
100009cb:	83 c2 08             	add    edx,0x8
100009ce:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009d5:	c6 80 40 4e 03 10 08 	mov    BYTE PTR [eax+0x10034e40],0x8	100009d7: R_386_32	.bss
100009dc:	40                   	inc    eax
100009dd:	3d 90 00 00 00       	cmp    eax,0x90
100009e2:	75 f1                	jne    100009d5 <_ssfn_zlib_decode+0x46>
100009e4:	c6 80 40 4e 03 10 09 	mov    BYTE PTR [eax+0x10034e40],0x9	100009e6: R_386_32	.bss
100009eb:	40                   	inc    eax
100009ec:	3d 00 01 00 00       	cmp    eax,0x100
100009f1:	75 f1                	jne    100009e4 <_ssfn_zlib_decode+0x55>
100009f3:	c6 80 40 4e 03 10 07 	mov    BYTE PTR [eax+0x10034e40],0x7	100009f5: R_386_32	.bss
100009fa:	40                   	inc    eax
100009fb:	3d 18 01 00 00       	cmp    eax,0x118
10000a00:	75 f1                	jne    100009f3 <_ssfn_zlib_decode+0x64>
10000a02:	c7 05 58 4f 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034f58,0x8080808	10000a04: R_386_32	.bss
10000a0c:	c7 05 5c 4f 03 10 08 08 08 08 	mov    DWORD PTR ds:0x10034f5c,0x8080808	10000a0e: R_386_32	.bss
10000a16:	31 c0                	xor    eax,eax
10000a18:	c6 80 20 4e 03 10 05 	mov    BYTE PTR [eax+0x10034e20],0x5	10000a1a: R_386_32	.bss
10000a1f:	40                   	inc    eax
10000a20:	83 f8 20             	cmp    eax,0x20
10000a23:	75 f3                	jne    10000a18 <_ssfn_zlib_decode+0x89>
10000a25:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a30:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a3b:	ba 01 00 00 00       	mov    edx,0x1
10000a40:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a47:	e8 3d fd ff ff       	call   10000789 <_ssfn__zreceive>
10000a4c:	ba 02 00 00 00       	mov    edx,0x2
10000a51:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a55:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a5c:	e8 28 fd ff ff       	call   10000789 <_ssfn__zreceive>
10000a61:	89 c6                	mov    esi,eax
10000a63:	85 c0                	test   eax,eax
10000a65:	0f 85 09 01 00 00    	jne    10000b74 <_ssfn_zlib_decode+0x1e5>
10000a6b:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a72:	83 e2 07             	and    edx,0x7
10000a75:	74 0c                	je     10000a83 <_ssfn_zlib_decode+0xf4>
10000a77:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a7e:	e8 06 fd ff ff       	call   10000789 <_ssfn__zreceive>
10000a83:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a8a:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a91:	31 c0                	xor    eax,eax
10000a93:	31 db                	xor    ebx,ebx
10000a95:	85 d2                	test   edx,edx
10000a97:	7f 14                	jg     10000aad <_ssfn_zlib_decode+0x11e>
10000a99:	84 db                	test   bl,bl
10000a9b:	74 22                	je     10000abf <_ssfn_zlib_decode+0x130>
10000a9d:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000aa4:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aab:	eb 12                	jmp    10000abf <_ssfn_zlib_decode+0x130>
10000aad:	40                   	inc    eax
10000aae:	83 ea 08             	sub    edx,0x8
10000ab1:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000ab8:	b3 01                	mov    bl,0x1
10000aba:	c1 e9 08             	shr    ecx,0x8
10000abd:	eb d6                	jmp    10000a95 <_ssfn_zlib_decode+0x106>
10000abf:	83 f8 04             	cmp    eax,0x4
10000ac2:	74 1d                	je     10000ae1 <_ssfn_zlib_decode+0x152>
10000ac4:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000acb:	40                   	inc    eax
10000acc:	8d 4a 01             	lea    ecx,[edx+0x1]
10000acf:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ad6:	8a 12                	mov    dl,BYTE PTR [edx]
10000ad8:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000adf:	eb de                	jmp    10000abf <_ssfn_zlib_decode+0x130>
10000ae1:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000ae9:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000af1:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000af9:	c1 e3 08             	shl    ebx,0x8
10000afc:	01 c3                	add    ebx,eax
10000afe:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000b06:	c1 e0 08             	shl    eax,0x8
10000b09:	01 d0                	add    eax,edx
10000b0b:	89 da                	mov    edx,ebx
10000b0d:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b13:	39 d0                	cmp    eax,edx
10000b15:	0f 85 69 03 00 00    	jne    10000e84 <_ssfn_zlib_decode+0x4f5>
10000b1b:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b22:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b25:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b2c:	73 14                	jae    10000b42 <_ssfn_zlib_decode+0x1b3>
10000b2e:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b35:	e8 19 f7 ff ff       	call   10000253 <_ssfn__zexpand>
10000b3a:	85 c0                	test   eax,eax
10000b3c:	0f 84 42 03 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000b42:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b49:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b50:	39 f3                	cmp    ebx,esi
10000b52:	74 09                	je     10000b5d <_ssfn_zlib_decode+0x1ce>
10000b54:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b57:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b5a:	46                   	inc    esi
10000b5b:	eb e5                	jmp    10000b42 <_ssfn_zlib_decode+0x1b3>
10000b5d:	01 da                	add    edx,ebx
10000b5f:	01 c3                	add    ebx,eax
10000b61:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b68:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b6f:	e9 fc 02 00 00       	jmp    10000e70 <_ssfn_zlib_decode+0x4e1>
10000b74:	83 f8 03             	cmp    eax,0x3
10000b77:	0f 84 07 03 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000b7d:	4e                   	dec    esi
10000b7e:	75 2d                	jne    10000bad <_ssfn_zlib_decode+0x21e>
10000b80:	b9 20 01 00 00       	mov    ecx,0x120
10000b85:	ba 40 4e 03 10       	mov    edx,0x10034e40	10000b86: R_386_32	.bss
10000b8a:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b91:	e8 1c f7 ff ff       	call   100002b2 <_ssfn__zbuild_huffman>
10000b96:	85 c0                	test   eax,eax
10000b98:	0f 84 e6 02 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000b9e:	b9 20 00 00 00       	mov    ecx,0x20
10000ba3:	ba 20 4e 03 10       	mov    edx,0x10034e20	10000ba4: R_386_32	.bss
10000ba8:	e9 78 01 00 00       	jmp    10000d25 <_ssfn_zlib_decode+0x396>
10000bad:	ba 05 00 00 00       	mov    edx,0x5
10000bb2:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bb9:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bbd:	e8 c7 fb ff ff       	call   10000789 <_ssfn__zreceive>
10000bc2:	89 df                	mov    edi,ebx
10000bc4:	ba 05 00 00 00       	mov    edx,0x5
10000bc9:	89 c5                	mov    ebp,eax
10000bcb:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bd2:	e8 b2 fb ff ff       	call   10000789 <_ssfn__zreceive>
10000bd7:	ba 04 00 00 00       	mov    edx,0x4
10000bdc:	89 c6                	mov    esi,eax
10000bde:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000be5:	e8 9f fb ff ff       	call   10000789 <_ssfn__zreceive>
10000bea:	b9 13 00 00 00       	mov    ecx,0x13
10000bef:	83 c0 04             	add    eax,0x4
10000bf2:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bf6:	31 c0                	xor    eax,eax
10000bf8:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bfa:	31 ff                	xor    edi,edi
10000bfc:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000c00:	7e 1f                	jle    10000c21 <_ssfn_zlib_decode+0x292>
10000c02:	ba 03 00 00 00       	mov    edx,0x3
10000c07:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c0e:	47                   	inc    edi
10000c0f:	e8 75 fb ff ff       	call   10000789 <_ssfn__zreceive>
10000c14:	0f b6 97 9f 4a 00 10 	movzx  edx,BYTE PTR [edi+0x10004a9f]	10000c17: R_386_32	.text
10000c1b:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c1f:	eb db                	jmp    10000bfc <_ssfn_zlib_decode+0x26d>
10000c21:	b9 13 00 00 00       	mov    ecx,0x13
10000c26:	89 da                	mov    edx,ebx
10000c28:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c2f:	e8 7e f6 ff ff       	call   100002b2 <_ssfn__zbuild_huffman>
10000c34:	85 c0                	test   eax,eax
10000c36:	0f 84 48 02 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000c3c:	8d 46 01             	lea    eax,[esi+0x1]
10000c3f:	81 c5 01 01 00 00    	add    ebp,0x101
10000c45:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c49:	31 f6                	xor    esi,esi
10000c4b:	01 e8                	add    eax,ebp
10000c4d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c51:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c55:	0f 8e 9f 00 00 00    	jle    10000cfa <_ssfn_zlib_decode+0x36b>
10000c5b:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c62:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c69:	e8 35 f5 ff ff       	call   100001a3 <_ssfn__zhuffman_decode>
10000c6e:	83 f8 12             	cmp    eax,0x12
10000c71:	0f 87 0d 02 00 00    	ja     10000e84 <_ssfn_zlib_decode+0x4f5>
10000c77:	83 f8 0f             	cmp    eax,0xf
10000c7a:	7f 07                	jg     10000c83 <_ssfn_zlib_decode+0x2f4>
10000c7c:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c80:	46                   	inc    esi
10000c81:	eb ce                	jmp    10000c51 <_ssfn_zlib_decode+0x2c2>
10000c83:	83 f8 10             	cmp    eax,0x10
10000c86:	75 22                	jne    10000caa <_ssfn_zlib_decode+0x31b>
10000c88:	ba 02 00 00 00       	mov    edx,0x2
10000c8d:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c94:	e8 f0 fa ff ff       	call   10000789 <_ssfn__zreceive>
10000c99:	85 f6                	test   esi,esi
10000c9b:	8d 58 03             	lea    ebx,[eax+0x3]
10000c9e:	0f 84 e0 01 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000ca4:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000ca8:	eb 31                	jmp    10000cdb <_ssfn_zlib_decode+0x34c>
10000caa:	83 f8 11             	cmp    eax,0x11
10000cad:	75 16                	jne    10000cc5 <_ssfn_zlib_decode+0x336>
10000caf:	ba 03 00 00 00       	mov    edx,0x3
10000cb4:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cbb:	e8 c9 fa ff ff       	call   10000789 <_ssfn__zreceive>
10000cc0:	8d 58 03             	lea    ebx,[eax+0x3]
10000cc3:	eb 14                	jmp    10000cd9 <_ssfn_zlib_decode+0x34a>
10000cc5:	ba 07 00 00 00       	mov    edx,0x7
10000cca:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cd1:	e8 b3 fa ff ff       	call   10000789 <_ssfn__zreceive>
10000cd6:	8d 58 0b             	lea    ebx,[eax+0xb]
10000cd9:	31 c0                	xor    eax,eax
10000cdb:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000cdf:	29 f2                	sub    edx,esi
10000ce1:	39 da                	cmp    edx,ebx
10000ce3:	0f 8c 9b 01 00 00    	jl     10000e84 <_ssfn_zlib_decode+0x4f5>
10000ce9:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000ced:	89 d9                	mov    ecx,ebx
10000cef:	89 d7                	mov    edi,edx
10000cf1:	01 de                	add    esi,ebx
10000cf3:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000cf5:	e9 57 ff ff ff       	jmp    10000c51 <_ssfn_zlib_decode+0x2c2>
10000cfa:	0f 85 84 01 00 00    	jne    10000e84 <_ssfn_zlib_decode+0x4f5>
10000d00:	89 e9                	mov    ecx,ebp
10000d02:	8d 54 24 25          	lea    edx,[esp+0x25]
10000d06:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d0d:	e8 a0 f5 ff ff       	call   100002b2 <_ssfn__zbuild_huffman>
10000d12:	85 c0                	test   eax,eax
10000d14:	0f 84 6a 01 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000d1a:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d1e:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d22:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d25:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d2c:	e8 81 f5 ff ff       	call   100002b2 <_ssfn__zbuild_huffman>
10000d31:	85 c0                	test   eax,eax
10000d33:	0f 84 4b 01 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000d39:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d40:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d47:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d4e:	e8 50 f4 ff ff       	call   100001a3 <_ssfn__zhuffman_decode>
10000d53:	89 c3                	mov    ebx,eax
10000d55:	3d ff 00 00 00       	cmp    eax,0xff
10000d5a:	7f 34                	jg     10000d90 <_ssfn_zlib_decode+0x401>
10000d5c:	85 c0                	test   eax,eax
10000d5e:	0f 88 20 01 00 00    	js     10000e84 <_ssfn_zlib_decode+0x4f5>
10000d64:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d6b:	77 1d                	ja     10000d8a <_ssfn_zlib_decode+0x3fb>
10000d6d:	89 ea                	mov    edx,ebp
10000d6f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d76:	e8 d8 f4 ff ff       	call   10000253 <_ssfn__zexpand>
10000d7b:	85 c0                	test   eax,eax
10000d7d:	0f 84 01 01 00 00    	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000d83:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d8a:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d8d:	45                   	inc    ebp
10000d8e:	eb b0                	jmp    10000d40 <_ssfn_zlib_decode+0x3b1>
10000d90:	3d 00 01 00 00       	cmp    eax,0x100
10000d95:	75 0c                	jne    10000da3 <_ssfn_zlib_decode+0x414>
10000d97:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000d9e:	e9 cd 00 00 00       	jmp    10000e70 <_ssfn_zlib_decode+0x4e1>
10000da3:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000da9:	8b 14 85 c0 4b 00 10 	mov    edx,DWORD PTR [eax*4+0x10004bc0]	10000dac: R_386_32	.text
10000db0:	8b 1c 85 40 4c 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004c40]	10000db3: R_386_32	.text
10000db7:	85 d2                	test   edx,edx
10000db9:	74 0e                	je     10000dc9 <_ssfn_zlib_decode+0x43a>
10000dbb:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dc2:	e8 c2 f9 ff ff       	call   10000789 <_ssfn__zreceive>
10000dc7:	01 c3                	add    ebx,eax
10000dc9:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000dd0:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dd7:	e8 c7 f3 ff ff       	call   100001a3 <_ssfn__zhuffman_decode>
10000ddc:	85 c0                	test   eax,eax
10000dde:	0f 88 a0 00 00 00    	js     10000e84 <_ssfn_zlib_decode+0x4f5>
10000de4:	8b 14 85 c0 4a 00 10 	mov    edx,DWORD PTR [eax*4+0x10004ac0]	10000de7: R_386_32	.text
10000deb:	8b 3c 85 40 4b 00 10 	mov    edi,DWORD PTR [eax*4+0x10004b40]	10000dee: R_386_32	.text
10000df2:	85 d2                	test   edx,edx
10000df4:	74 0e                	je     10000e04 <_ssfn_zlib_decode+0x475>
10000df6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dfd:	e8 87 f9 ff ff       	call   10000789 <_ssfn__zreceive>
10000e02:	01 c7                	add    edi,eax
10000e04:	89 e8                	mov    eax,ebp
10000e06:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e0d:	39 f8                	cmp    eax,edi
10000e0f:	7c 73                	jl     10000e84 <_ssfn_zlib_decode+0x4f5>
10000e11:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e15:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e1c:	73 19                	jae    10000e37 <_ssfn_zlib_decode+0x4a8>
10000e1e:	89 ea                	mov    edx,ebp
10000e20:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e27:	e8 27 f4 ff ff       	call   10000253 <_ssfn__zexpand>
10000e2c:	85 c0                	test   eax,eax
10000e2e:	74 54                	je     10000e84 <_ssfn_zlib_decode+0x4f5>
10000e30:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e37:	89 ee                	mov    esi,ebp
10000e39:	29 fe                	sub    esi,edi
10000e3b:	4f                   	dec    edi
10000e3c:	75 19                	jne    10000e57 <_ssfn_zlib_decode+0x4c8>
10000e3e:	85 db                	test   ebx,ebx
10000e40:	0f 84 fa fe ff ff    	je     10000d40 <_ssfn_zlib_decode+0x3b1>
10000e46:	8a 06                	mov    al,BYTE PTR [esi]
10000e48:	01 eb                	add    ebx,ebp
10000e4a:	45                   	inc    ebp
10000e4b:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e4e:	39 dd                	cmp    ebp,ebx
10000e50:	75 f8                	jne    10000e4a <_ssfn_zlib_decode+0x4bb>
10000e52:	e9 e9 fe ff ff       	jmp    10000d40 <_ssfn_zlib_decode+0x3b1>
10000e57:	85 db                	test   ebx,ebx
10000e59:	0f 84 e1 fe ff ff    	je     10000d40 <_ssfn_zlib_decode+0x3b1>
10000e5f:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e62:	89 ef                	mov    edi,ebp
10000e64:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e65:	39 f0                	cmp    eax,esi
10000e67:	75 fb                	jne    10000e64 <_ssfn_zlib_decode+0x4d5>
10000e69:	01 dd                	add    ebp,ebx
10000e6b:	e9 d0 fe ff ff       	jmp    10000d40 <_ssfn_zlib_decode+0x3b1>
10000e70:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e75:	0f 84 c0 fb ff ff    	je     10000a3b <_ssfn_zlib_decode+0xac>
10000e7b:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e82:	eb 14                	jmp    10000e98 <_ssfn_zlib_decode+0x509>
10000e84:	83 ec 0c             	sub    esp,0xc
10000e87:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e8e:	e8 fc ff ff ff       	call   10000e8f <_ssfn_zlib_decode+0x500>	10000e8f: R_386_PC32	free
10000e93:	83 c4 10             	add    esp,0x10
10000e96:	31 c0                	xor    eax,eax
10000e98:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000e9e:	5b                   	pop    ebx
10000e9f:	5e                   	pop    esi
10000ea0:	5f                   	pop    edi
10000ea1:	5d                   	pop    ebp
10000ea2:	c3                   	ret    

10000ea3 <ssfn_load>:
10000ea3:	55                   	push   ebp
10000ea4:	57                   	push   edi
10000ea5:	56                   	push   esi
10000ea6:	53                   	push   ebx
10000ea7:	83 ec 1c             	sub    esp,0x1c
10000eaa:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000eae:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000eb2:	85 ff                	test   edi,edi
10000eb4:	0f 84 d0 01 00 00    	je     1000108a <ssfn_load+0x1e7>
10000eba:	85 f6                	test   esi,esi
10000ebc:	0f 84 c8 01 00 00    	je     1000108a <ssfn_load+0x1e7>
10000ec2:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ec5:	0f 85 a8 00 00 00    	jne    10000f73 <ssfn_load+0xd0>
10000ecb:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000ecf:	0f 85 9e 00 00 00    	jne    10000f73 <ssfn_load+0xd0>
10000ed5:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000ed9:	74 0a                	je     10000ee5 <ssfn_load+0x42>
10000edb:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ee0:	e9 aa 01 00 00       	jmp    1000108f <ssfn_load+0x1ec>
10000ee5:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000ee8:	a8 04                	test   al,0x4
10000eea:	75 05                	jne    10000ef1 <ssfn_load+0x4e>
10000eec:	83 c6 0a             	add    esi,0xa
10000eef:	eb 08                	jmp    10000ef9 <ssfn_load+0x56>
10000ef1:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000ef5:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000ef9:	a8 08                	test   al,0x8
10000efb:	74 07                	je     10000f04 <ssfn_load+0x61>
10000efd:	46                   	inc    esi
10000efe:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f02:	eb f7                	jmp    10000efb <ssfn_load+0x58>
10000f04:	a8 10                	test   al,0x10
10000f06:	74 07                	je     10000f0f <ssfn_load+0x6c>
10000f08:	46                   	inc    esi
10000f09:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f0d:	eb f7                	jmp    10000f06 <ssfn_load+0x63>
10000f0f:	83 ec 0c             	sub    esp,0xc
10000f12:	56                   	push   esi
10000f13:	e8 fc ff ff ff       	call   10000f14 <ssfn_load+0x71>	10000f14: R_386_PC32	_ssfn_zlib_decode
10000f18:	83 c4 10             	add    esp,0x10
10000f1b:	89 c6                	mov    esi,eax
10000f1d:	85 c0                	test   eax,eax
10000f1f:	74 ba                	je     10000edb <ssfn_load+0x38>
10000f21:	50                   	push   eax
10000f22:	50                   	push   eax
10000f23:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f29:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f30:	50                   	push   eax
10000f31:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f37:	e8 fc ff ff ff       	call   10000f38 <ssfn_load+0x95>	10000f38: R_386_PC32	realloc
10000f3c:	83 c4 10             	add    esp,0x10
10000f3f:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f45:	85 c0                	test   eax,eax
10000f47:	75 0f                	jne    10000f58 <ssfn_load+0xb5>
10000f49:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f53:	e9 1a 01 00 00       	jmp    10001072 <ssfn_load+0x1cf>
10000f58:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f5e:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f61:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f67:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f6a:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f6d:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f73:	50                   	push   eax
10000f74:	6a 04                	push   0x4
10000f76:	68 69 49 00 10       	push   0x10004969	10000f77: R_386_32	.text
10000f7b:	56                   	push   esi
10000f7c:	e8 fc ff ff ff       	call   10000f7d <ssfn_load+0xda>	10000f7d: R_386_PC32	memcmp
10000f81:	83 c4 10             	add    esp,0x10
10000f84:	89 c5                	mov    ebp,eax
10000f86:	85 c0                	test   eax,eax
10000f88:	75 29                	jne    10000fb3 <ssfn_load+0x110>
10000f8a:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f8d:	01 f3                	add    ebx,esi
10000f8f:	83 c6 08             	add    esi,0x8
10000f92:	39 de                	cmp    esi,ebx
10000f94:	0f 83 f5 00 00 00    	jae    1000108f <ssfn_load+0x1ec>
10000f9a:	50                   	push   eax
10000f9b:	50                   	push   eax
10000f9c:	56                   	push   esi
10000f9d:	57                   	push   edi
10000f9e:	e8 fc ff ff ff       	call   10000f9f <ssfn_load+0xfc>	10000f9f: R_386_PC32	ssfn_load
10000fa3:	83 c4 10             	add    esp,0x10
10000fa6:	85 c0                	test   eax,eax
10000fa8:	0f 85 e1 00 00 00    	jne    1000108f <ssfn_load+0x1ec>
10000fae:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fb1:	eb df                	jmp    10000f92 <ssfn_load+0xef>
10000fb3:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fb6:	83 e0 0f             	and    eax,0xf
10000fb9:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fbd:	53                   	push   ebx
10000fbe:	6a 04                	push   0x4
10000fc0:	68 6e 49 00 10       	push   0x1000496e	10000fc1: R_386_32	.text
10000fc5:	56                   	push   esi
10000fc6:	e8 fc ff ff ff       	call   10000fc7 <ssfn_load+0x124>	10000fc7: R_386_PC32	memcmp
10000fcb:	83 c4 10             	add    esp,0x10
10000fce:	89 c5                	mov    ebp,eax
10000fd0:	85 c0                	test   eax,eax
10000fd2:	0f 85 03 ff ff ff    	jne    10000edb <ssfn_load+0x38>
10000fd8:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fdb:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fdf:	51                   	push   ecx
10000fe0:	6a 04                	push   0x4
10000fe2:	68 73 49 00 10       	push   0x10004973	10000fe3: R_386_32	.text
10000fe7:	50                   	push   eax
10000fe8:	e8 fc ff ff ff       	call   10000fe9 <ssfn_load+0x146>	10000fe9: R_386_PC32	memcmp
10000fed:	83 c4 10             	add    esp,0x10
10000ff0:	85 c0                	test   eax,eax
10000ff2:	0f 85 e3 fe ff ff    	jne    10000edb <ssfn_load+0x38>
10000ff8:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10000ffd:	0f 87 d8 fe ff ff    	ja     10000edb <ssfn_load+0x38>
10001003:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10001007:	39 cb                	cmp    ebx,ecx
10001009:	0f 86 cc fe ff ff    	jbe    10000edb <ssfn_load+0x38>
1000100f:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
10001012:	39 c3                	cmp    ebx,eax
10001014:	0f 86 c1 fe ff ff    	jbe    10000edb <ssfn_load+0x38>
1000101a:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
1000101d:	0f 86 b8 fe ff ff    	jbe    10000edb <ssfn_load+0x38>
10001023:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
10001026:	0f 86 af fe ff ff    	jbe    10000edb <ssfn_load+0x38>
1000102c:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
1000102f:	0f 86 a6 fe ff ff    	jbe    10000edb <ssfn_load+0x38>
10001035:	39 c1                	cmp    ecx,eax
10001037:	0f 83 9e fe ff ff    	jae    10000edb <ssfn_load+0x38>
1000103d:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
10001042:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
10001045:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
1000104b:	40                   	inc    eax
1000104c:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
10001052:	52                   	push   edx
10001053:	c1 e0 02             	shl    eax,0x2
10001056:	52                   	push   edx
10001057:	50                   	push   eax
10001058:	ff 33                	push   DWORD PTR [ebx]
1000105a:	e8 fc ff ff ff       	call   1000105b <ssfn_load+0x1b8>	1000105b: R_386_PC32	realloc
1000105f:	83 c4 10             	add    esp,0x10
10001062:	89 03                	mov    DWORD PTR [ebx],eax
10001064:	85 c0                	test   eax,eax
10001066:	75 0f                	jne    10001077 <ssfn_load+0x1d4>
10001068:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
10001072:	83 cd ff             	or     ebp,0xffffffff
10001075:	eb 18                	jmp    1000108f <ssfn_load+0x1ec>
10001077:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
1000107d:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001081:	89 f8                	mov    eax,edi
10001083:	e8 ad f3 ff ff       	call   10000435 <_ssfn_fc.part.1>
10001088:	eb 05                	jmp    1000108f <ssfn_load+0x1ec>
1000108a:	bd fc ff ff ff       	mov    ebp,0xfffffffc
1000108f:	83 c4 1c             	add    esp,0x1c
10001092:	89 e8                	mov    eax,ebp
10001094:	5b                   	pop    ebx
10001095:	5e                   	pop    esi
10001096:	5f                   	pop    edi
10001097:	5d                   	pop    ebp
10001098:	c3                   	ret    

10001099 <ssfn_free>:
10001099:	57                   	push   edi
1000109a:	56                   	push   esi
1000109b:	53                   	push   ebx
1000109c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100010a0:	85 db                	test   ebx,ebx
100010a2:	74 7e                	je     10001122 <ssfn_free+0x89>
100010a4:	89 d8                	mov    eax,ebx
100010a6:	e8 8a f3 ff ff       	call   10000435 <_ssfn_fc.part.1>
100010ab:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010b2:	74 32                	je     100010e6 <ssfn_free+0x4d>
100010b4:	31 f6                	xor    esi,esi
100010b6:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010bc:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010c2:	7e 16                	jle    100010da <ssfn_free+0x41>
100010c4:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010c7:	85 c0                	test   eax,eax
100010c9:	74 0c                	je     100010d7 <ssfn_free+0x3e>
100010cb:	83 ec 0c             	sub    esp,0xc
100010ce:	50                   	push   eax
100010cf:	e8 fc ff ff ff       	call   100010d0 <ssfn_free+0x37>	100010d0: R_386_PC32	free
100010d4:	83 c4 10             	add    esp,0x10
100010d7:	46                   	inc    esi
100010d8:	eb dc                	jmp    100010b6 <ssfn_free+0x1d>
100010da:	83 ec 0c             	sub    esp,0xc
100010dd:	50                   	push   eax
100010de:	e8 fc ff ff ff       	call   100010df <ssfn_free+0x46>	100010df: R_386_PC32	free
100010e3:	83 c4 10             	add    esp,0x10
100010e6:	31 f6                	xor    esi,esi
100010e8:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010eb:	85 c0                	test   eax,eax
100010ed:	74 0c                	je     100010fb <ssfn_free+0x62>
100010ef:	83 ec 0c             	sub    esp,0xc
100010f2:	50                   	push   eax
100010f3:	e8 fc ff ff ff       	call   100010f4 <ssfn_free+0x5b>	100010f4: R_386_PC32	free
100010f8:	83 c4 10             	add    esp,0x10
100010fb:	46                   	inc    esi
100010fc:	83 fe 05             	cmp    esi,0x5
100010ff:	75 e7                	jne    100010e8 <ssfn_free+0x4f>
10001101:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10001107:	85 c0                	test   eax,eax
10001109:	74 0c                	je     10001117 <ssfn_free+0x7e>
1000110b:	83 ec 0c             	sub    esp,0xc
1000110e:	50                   	push   eax
1000110f:	e8 fc ff ff ff       	call   10001110 <ssfn_free+0x77>	10001110: R_386_PC32	free
10001114:	83 c4 10             	add    esp,0x10
10001117:	b9 72 3d 00 00       	mov    ecx,0x3d72
1000111c:	31 c0                	xor    eax,eax
1000111e:	89 df                	mov    edi,ebx
10001120:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001122:	5b                   	pop    ebx
10001123:	5e                   	pop    esi
10001124:	5f                   	pop    edi
10001125:	c3                   	ret    

10001126 <ssfn_mem>:
10001126:	55                   	push   ebp
10001127:	31 c0                	xor    eax,eax
10001129:	57                   	push   edi
1000112a:	56                   	push   esi
1000112b:	53                   	push   ebx
1000112c:	83 ec 08             	sub    esp,0x8
1000112f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001133:	85 d2                	test   edx,edx
10001135:	0f 84 8e 00 00 00    	je     100011c9 <ssfn_mem+0xa3>
1000113b:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001140:	31 c9                	xor    ecx,ecx
10001142:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10001149:	41                   	inc    ecx
1000114a:	8d 04 98             	lea    eax,[eax+ebx*4]
1000114d:	83 f9 05             	cmp    ecx,0x5
10001150:	75 f0                	jne    10001142 <ssfn_mem+0x1c>
10001152:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
10001158:	31 c9                	xor    ecx,ecx
1000115a:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001161:	89 34 24             	mov    DWORD PTR [esp],esi
10001164:	85 f6                	test   esi,esi
10001166:	74 48                	je     100011b0 <ssfn_mem+0x8a>
10001168:	31 db                	xor    ebx,ebx
1000116a:	8b 34 24             	mov    esi,DWORD PTR [esp]
1000116d:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001170:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
10001174:	85 ff                	test   edi,edi
10001176:	74 2a                	je     100011a2 <ssfn_mem+0x7c>
10001178:	31 f6                	xor    esi,esi
1000117a:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
1000117e:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001181:	85 ed                	test   ebp,ebp
10001183:	74 0f                	je     10001194 <ssfn_mem+0x6e>
10001185:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
10001189:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
1000118d:	0f af fd             	imul   edi,ebp
10001190:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
10001194:	46                   	inc    esi
10001195:	81 fe 00 01 00 00    	cmp    esi,0x100
1000119b:	75 dd                	jne    1000117a <ssfn_mem+0x54>
1000119d:	05 00 04 00 00       	add    eax,0x400
100011a2:	43                   	inc    ebx
100011a3:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011a9:	75 bf                	jne    1000116a <ssfn_mem+0x44>
100011ab:	05 00 04 00 00       	add    eax,0x400
100011b0:	41                   	inc    ecx
100011b1:	83 f9 11             	cmp    ecx,0x11
100011b4:	75 a4                	jne    1000115a <ssfn_mem+0x34>
100011b6:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011bd:	74 0a                	je     100011c9 <ssfn_mem+0xa3>
100011bf:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011c5:	01 d2                	add    edx,edx
100011c7:	01 d0                	add    eax,edx
100011c9:	83 c4 08             	add    esp,0x8
100011cc:	5b                   	pop    ebx
100011cd:	5e                   	pop    esi
100011ce:	5f                   	pop    edi
100011cf:	5d                   	pop    ebp
100011d0:	c3                   	ret    

100011d1 <ssfn_select>:
100011d1:	55                   	push   ebp
100011d2:	57                   	push   edi
100011d3:	56                   	push   esi
100011d4:	53                   	push   ebx
100011d5:	83 ec 1c             	sub    esp,0x1c
100011d8:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011dc:	85 db                	test   ebx,ebx
100011de:	75 0a                	jne    100011ea <ssfn_select+0x19>
100011e0:	be fc ff ff ff       	mov    esi,0xfffffffc
100011e5:	e9 13 01 00 00       	jmp    100012fd <ssfn_select+0x12c>
100011ea:	89 d8                	mov    eax,ebx
100011ec:	e8 44 f2 ff ff       	call   10000435 <_ssfn_fc.part.1>
100011f1:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011f5:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011fb:	0f 85 e9 00 00 00    	jne    100012ea <ssfn_select+0x119>
10001201:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001205:	83 e8 08             	sub    eax,0x8
10001208:	3d b8 00 00 00       	cmp    eax,0xb8
1000120d:	0f 87 de 00 00 00    	ja     100012f1 <ssfn_select+0x120>
10001213:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
1000121b:	75 76                	jne    10001293 <ssfn_select+0xc2>
1000121d:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001222:	74 bc                	je     100011e0 <ssfn_select+0xf>
10001224:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001228:	80 38 00             	cmp    BYTE PTR [eax],0x0
1000122b:	74 b3                	je     100011e0 <ssfn_select+0xf>
1000122d:	31 ed                	xor    ebp,ebp
1000122f:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001233:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
10001237:	74 03                	je     1000123c <ssfn_select+0x6b>
10001239:	45                   	inc    ebp
1000123a:	eb f3                	jmp    1000122f <ssfn_select+0x5e>
1000123c:	8d 43 14             	lea    eax,[ebx+0x14]
1000123f:	89 df                	mov    edi,ebx
10001241:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001245:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
1000124b:	31 d2                	xor    edx,edx
1000124d:	89 04 24             	mov    DWORD PTR [esp],eax
10001250:	39 14 24             	cmp    DWORD PTR [esp],edx
10001253:	7e 33                	jle    10001288 <ssfn_select+0xb7>
10001255:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10001259:	8b 07                	mov    eax,DWORD PTR [edi]
1000125b:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
1000125e:	50                   	push   eax
1000125f:	8d 41 20             	lea    eax,[ecx+0x20]
10001262:	55                   	push   ebp
10001263:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10001267:	50                   	push   eax
10001268:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
1000126c:	e8 fc ff ff ff       	call   1000126d <ssfn_select+0x9c>	1000126d: R_386_PC32	memcmp
10001271:	83 c4 10             	add    esp,0x10
10001274:	85 c0                	test   eax,eax
10001276:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000127a:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
1000127e:	75 05                	jne    10001285 <ssfn_select+0xb4>
10001280:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
10001283:	eb 34                	jmp    100012b9 <ssfn_select+0xe8>
10001285:	42                   	inc    edx
10001286:	eb c8                	jmp    10001250 <ssfn_select+0x7f>
10001288:	83 c7 04             	add    edi,0x4
1000128b:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
1000128f:	75 b4                	jne    10001245 <ssfn_select+0x74>
10001291:	eb 65                	jmp    100012f8 <ssfn_select+0x127>
10001293:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
1000129b:	74 15                	je     100012b2 <ssfn_select+0xe1>
1000129d:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
100012a2:	7f 54                	jg     100012f8 <ssfn_select+0x127>
100012a4:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012a8:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012b0:	74 46                	je     100012f8 <ssfn_select+0x127>
100012b2:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012b9:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012bd:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012c4:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012ca:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012d4:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012d8:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012de:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012e2:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012e8:	eb 13                	jmp    100012fd <ssfn_select+0x12c>
100012ea:	be fb ff ff ff       	mov    esi,0xfffffffb
100012ef:	eb 0c                	jmp    100012fd <ssfn_select+0x12c>
100012f1:	be fa ff ff ff       	mov    esi,0xfffffffa
100012f6:	eb 05                	jmp    100012fd <ssfn_select+0x12c>
100012f8:	be fd ff ff ff       	mov    esi,0xfffffffd
100012fd:	83 c4 1c             	add    esp,0x1c
10001300:	89 f0                	mov    eax,esi
10001302:	5b                   	pop    ebx
10001303:	5e                   	pop    esi
10001304:	5f                   	pop    edi
10001305:	5d                   	pop    ebp
10001306:	c3                   	ret    

10001307 <ssfn_render>:
10001307:	55                   	push   ebp
10001308:	57                   	push   edi
10001309:	56                   	push   esi
1000130a:	53                   	push   ebx
1000130b:	81 ec dc 05 01 00    	sub    esp,0x105dc
10001311:	8b ac 24 f0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105f0]
10001318:	c7 84 24 c8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc8],0x0
10001323:	85 ed                	test   ebp,ebp
10001325:	0f 94 c2             	sete   dl
10001328:	83 bc 24 f8 05 01 00 00 	cmp    DWORD PTR [esp+0x105f8],0x0
10001330:	0f 94 c0             	sete   al
10001333:	08 c2                	or     dl,al
10001335:	74 0a                	je     10001341 <ssfn_render+0x3a>
10001337:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
1000133c:	e9 14 1e 00 00       	jmp    10003155 <ssfn_render+0x1e4e>
10001341:	8b 84 24 f8 05 01 00 	mov    eax,DWORD PTR [esp+0x105f8]
10001348:	31 c9                	xor    ecx,ecx
1000134a:	8a 00                	mov    al,BYTE PTR [eax]
1000134c:	84 c0                	test   al,al
1000134e:	0f 84 01 1e 00 00    	je     10003155 <ssfn_render+0x1e4e>
10001354:	3c 0d                	cmp    al,0xd
10001356:	75 0f                	jne    10001367 <ssfn_render+0x60>
10001358:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000135f:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001365:	eb 31                	jmp    10001398 <ssfn_render+0x91>
10001367:	3c 0a                	cmp    al,0xa
10001369:	75 37                	jne    100013a2 <ssfn_render+0x9b>
1000136b:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10001372:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001378:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
1000137b:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001381:	85 c0                	test   eax,eax
10001383:	75 06                	jne    1000138b <ssfn_render+0x84>
10001385:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
1000138b:	01 d0                	add    eax,edx
1000138d:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10001394:	66 89 47 0c          	mov    WORD PTR [edi+0xc],ax
10001398:	b9 01 00 00 00       	mov    ecx,0x1
1000139d:	e9 b3 1d 00 00       	jmp    10003155 <ssfn_render+0x1e4e>
100013a2:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100013a5:	85 c0                	test   eax,eax
100013a7:	74 3e                	je     100013e7 <ssfn_render+0xe0>
100013a9:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013ac:	8d b4 24 c0 00 00 00 	lea    esi,[esp+0xc0]
100013b3:	56                   	push   esi
100013b4:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100013bb:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100013c2:	e8 a0 f4 ff ff       	call   10000867 <_ssfn_c>
100013c7:	5b                   	pop    ebx
100013c8:	85 c0                	test   eax,eax
100013ca:	0f 85 71 02 00 00    	jne    10001641 <ssfn_render+0x33a>
100013d0:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013d6:	81 e2 00 01 00 00    	and    edx,0x100
100013dc:	0f 84 fd 01 00 00    	je     100015df <ssfn_render+0x2d8>
100013e2:	e9 1d 02 00 00       	jmp    10001604 <ssfn_render+0x2fd>
100013e7:	8b 85 b8 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5b8]
100013ed:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013f4:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100013f8:	3d fd 00 00 00       	cmp    eax,0xfd
100013fd:	7f 08                	jg     10001407 <ssfn_render+0x100>
100013ff:	89 c3                	mov    ebx,eax
10001401:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001405:	eb 3f                	jmp    10001446 <ssfn_render+0x13f>
10001407:	31 db                	xor    ebx,ebx
10001409:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001411:	eb 33                	jmp    10001446 <ssfn_render+0x13f>
10001413:	85 c0                	test   eax,eax
10001415:	0f 84 64 01 00 00    	je     1000157f <ssfn_render+0x278>
1000141b:	43                   	inc    ebx
1000141c:	3b 5c 24 10          	cmp    ebx,DWORD PTR [esp+0x10]
10001420:	7e 28                	jle    1000144a <ssfn_render+0x143>
10001422:	85 c0                	test   eax,eax
10001424:	0f 85 17 02 00 00    	jne    10001641 <ssfn_render+0x33a>
1000142a:	31 db                	xor    ebx,ebx
1000142c:	c7 44 24 10 04 00 00 00 	mov    DWORD PTR [esp+0x10],0x4
10001434:	81 7c 24 0c ff 00 00 00 	cmp    DWORD PTR [esp+0xc],0xff
1000143c:	74 92                	je     100013d0 <ssfn_render+0xc9>
1000143e:	c7 44 24 0c ff 00 00 00 	mov    DWORD PTR [esp+0xc],0xff
10001446:	31 c0                	xor    eax,eax
10001448:	eb d2                	jmp    1000141c <ssfn_render+0x115>
1000144a:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
1000144e:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
10001455:	74 bc                	je     10001413 <ssfn_render+0x10c>
10001457:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001462:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
10001469:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
10001470:	7e 50                	jle    100014c2 <ssfn_render+0x1bb>
10001472:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
10001475:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
10001479:	c1 fa 04             	sar    edx,0x4
1000147c:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
10001482:	80 e2 03             	and    dl,0x3
10001485:	75 32                	jne    100014b9 <ssfn_render+0x1b2>
10001487:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
1000148b:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
10001491:	75 26                	jne    100014b9 <ssfn_render+0x1b2>
10001493:	8d 84 24 c0 00 00 00 	lea    eax,[esp+0xc0]
1000149a:	50                   	push   eax
1000149b:	89 f8                	mov    eax,edi
1000149d:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100014a4:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100014ab:	e8 b7 f3 ff ff       	call   10000867 <_ssfn_c>
100014b0:	59                   	pop    ecx
100014b1:	85 c0                	test   eax,eax
100014b3:	0f 85 04 01 00 00    	jne    100015bd <ssfn_render+0x2b6>
100014b9:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014c0:	eb a0                	jmp    10001462 <ssfn_render+0x15b>
100014c2:	85 c0                	test   eax,eax
100014c4:	0f 85 51 ff ff ff    	jne    1000141b <ssfn_render+0x114>
100014ca:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100014d5:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
100014dc:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014e3:	0f 8e f9 1b 00 00    	jle    100030e2 <ssfn_render+0x1ddb>
100014e9:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014ec:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014f0:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014f6:	74 09                	je     10001501 <ssfn_render+0x1fa>
100014f8:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100014ff:	eb d4                	jmp    100014d5 <ssfn_render+0x1ce>
10001501:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10001508:	57                   	push   edi
10001509:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10001510:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10001517:	e8 4b f3 ff ff       	call   10000867 <_ssfn_c>
1000151c:	5a                   	pop    edx
1000151d:	85 c0                	test   eax,eax
1000151f:	74 d7                	je     100014f8 <ssfn_render+0x1f1>
10001521:	e9 97 00 00 00       	jmp    100015bd <ssfn_render+0x2b6>
10001526:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001529:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
1000152d:	c1 fa 04             	sar    edx,0x4
10001530:	31 ca                	xor    edx,ecx
10001532:	80 e2 03             	and    dl,0x3
10001535:	0f 84 b7 1b 00 00    	je     100030f2 <ssfn_render+0x1deb>
1000153b:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001542:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001549:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
1000154f:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001556:	7f ce                	jg     10001526 <ssfn_render+0x21f>
10001558:	83 e1 03             	and    ecx,0x3
1000155b:	83 f9 03             	cmp    ecx,0x3
1000155e:	75 1f                	jne    1000157f <ssfn_render+0x278>
10001560:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000156b:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001572:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001579:	0f 8f 9c 1b 00 00    	jg     1000311b <ssfn_render+0x1e14>
1000157f:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000158a:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10001591:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10001598:	7e 3e                	jle    100015d8 <ssfn_render+0x2d1>
1000159a:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000159d:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100015a4:	57                   	push   edi
100015a5:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
100015ac:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
100015b3:	e8 af f2 ff ff       	call   10000867 <_ssfn_c>
100015b8:	5a                   	pop    edx
100015b9:	85 c0                	test   eax,eax
100015bb:	74 12                	je     100015cf <ssfn_render+0x2c8>
100015bd:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100015c4:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
100015c7:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
100015ca:	e9 4c fe ff ff       	jmp    1000141b <ssfn_render+0x114>
100015cf:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
100015d6:	eb b2                	jmp    1000158a <ssfn_render+0x283>
100015d8:	31 c0                	xor    eax,eax
100015da:	e9 3c fe ff ff       	jmp    1000141b <ssfn_render+0x114>
100015df:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
100015e5:	c7 84 24 c0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xc0],0x0
100015f0:	81 fb fd 00 00 00    	cmp    ebx,0xfd
100015f6:	7f 16                	jg     1000160e <ssfn_render+0x307>
100015f8:	89 da                	mov    edx,ebx
100015fa:	31 c0                	xor    eax,eax
100015fc:	39 da                	cmp    edx,ebx
100015fe:	7e 15                	jle    10001615 <ssfn_render+0x30e>
10001600:	85 c0                	test   eax,eax
10001602:	75 3d                	jne    10001641 <ssfn_render+0x33a>
10001604:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
10001609:	e9 47 1b 00 00       	jmp    10003155 <ssfn_render+0x1e4e>
1000160e:	bb 04 00 00 00       	mov    ebx,0x4
10001613:	eb e5                	jmp    100015fa <ssfn_render+0x2f3>
10001615:	85 c0                	test   eax,eax
10001617:	75 28                	jne    10001641 <ssfn_render+0x33a>
10001619:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
10001621:	74 1b                	je     1000163e <ssfn_render+0x337>
10001623:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
10001627:	8b 09                	mov    ecx,DWORD PTR [ecx]
10001629:	85 c9                	test   ecx,ecx
1000162b:	74 11                	je     1000163e <ssfn_render+0x337>
1000162d:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
10001630:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
10001634:	78 08                	js     1000163e <ssfn_render+0x337>
10001636:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
10001639:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
1000163c:	01 c8                	add    eax,ecx
1000163e:	42                   	inc    edx
1000163f:	eb bb                	jmp    100015fc <ssfn_render+0x2f5>
10001641:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001644:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
10001649:	85 d2                	test   edx,edx
1000164b:	0f 84 04 1b 00 00    	je     10003155 <ssfn_render+0x1e4e>
10001651:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
10001655:	0f 84 fa 1a 00 00    	je     10003155 <ssfn_render+0x1e4e>
1000165b:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
10001661:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001665:	85 ff                	test   edi,edi
10001667:	0f 84 e8 1a 00 00    	je     10003155 <ssfn_render+0x1e4e>
1000166d:	8b bc 24 c0 00 00 00 	mov    edi,DWORD PTR [esp+0xc0]
10001674:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10001678:	c1 ef 10             	shr    edi,0x10
1000167b:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
1000167f:	83 ff 10             	cmp    edi,0x10
10001682:	0f 87 af fc ff ff    	ja     10001337 <ssfn_render+0x30>
10001688:	8d 70 06             	lea    esi,[eax+0x6]
1000168b:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
10001691:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10001695:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
1000169b:	89 f7                	mov    edi,esi
1000169d:	81 e7 00 02 00 00    	and    edi,0x200
100016a3:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100016a7:	75 34                	jne    100016dd <ssfn_render+0x3d6>
100016a9:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100016ad:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
100016b4:	85 c9                	test   ecx,ecx
100016b6:	74 25                	je     100016dd <ssfn_render+0x3d6>
100016b8:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
100016bc:	0f b6 ff             	movzx  edi,bh
100016bf:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016c2:	85 c9                	test   ecx,ecx
100016c4:	74 17                	je     100016dd <ssfn_render+0x3d6>
100016c6:	0f b6 7c 24 14       	movzx  edi,BYTE PTR [esp+0x14]
100016cb:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
100016ce:	85 c9                	test   ecx,ecx
100016d0:	74 0b                	je     100016dd <ssfn_render+0x3d6>
100016d2:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
100016d8:	e9 25 0d 00 00       	jmp    10002402 <ssfn_render+0x10fb>
100016dd:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
100016e1:	f7 c6 40 00 00 00    	test   esi,0x40
100016e7:	75 1a                	jne    10001703 <ssfn_render+0x3fc>
100016e9:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100016ed:	7e 10                	jle    100016ff <ssfn_render+0x3f8>
100016ef:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100016f3:	83 c7 04             	add    edi,0x4
100016f6:	83 e7 fc             	and    edi,0xfffffffc
100016f9:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100016fd:	eb 04                	jmp    10001703 <ssfn_render+0x3fc>
100016ff:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001703:	c6 44 24 28 00       	mov    BYTE PTR [esp+0x28],0x0
10001708:	f7 c6 02 00 00 00    	test   esi,0x2
1000170e:	74 14                	je     10001724 <ssfn_render+0x41d>
10001710:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
10001713:	c0 eb 05             	shr    bl,0x5
10001716:	89 df                	mov    edi,ebx
10001718:	83 f7 01             	xor    edi,0x1
1000171b:	83 e7 01             	and    edi,0x1
1000171e:	89 fb                	mov    ebx,edi
10001720:	88 5c 24 28          	mov    BYTE PTR [esp+0x28],bl
10001724:	c6 44 24 48 00       	mov    BYTE PTR [esp+0x48],0x0
10001729:	83 e6 01             	and    esi,0x1
1000172c:	74 10                	je     1000173e <ssfn_render+0x437>
1000172e:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
10001732:	75 0a                	jne    1000173e <ssfn_render+0x437>
10001734:	8d 51 40             	lea    edx,[ecx+0x40]
10001737:	c1 fa 06             	sar    edx,0x6
1000173a:	88 54 24 48          	mov    BYTE PTR [esp+0x48],dl
1000173e:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
10001742:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001747:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000174b:	99                   	cdq    
1000174c:	f7 f9                	idiv   ecx
1000174e:	89 c1                	mov    ecx,eax
10001750:	31 c0                	xor    eax,eax
10001752:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001757:	74 0c                	je     10001765 <ssfn_render+0x45e>
10001759:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000175d:	be 04 00 00 00       	mov    esi,0x4
10001762:	99                   	cdq    
10001763:	f7 fe                	idiv   esi
10001765:	01 c8                	add    eax,ecx
10001767:	0f b6 74 24 48       	movzx  esi,BYTE PTR [esp+0x48]
1000176c:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
10001771:	01 f0                	add    eax,esi
10001773:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10001777:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000177b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000177f:	0f af 44 24 10       	imul   eax,DWORD PTR [esp+0x10]
10001784:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001788:	3d ff f4 00 00       	cmp    eax,0xf4ff
1000178d:	0f 8f c2 19 00 00    	jg     10003155 <ssfn_render+0x1e4e>
10001793:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
10001798:	0f 85 f0 00 00 00    	jne    1000188e <ssfn_render+0x587>
1000179e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100017a2:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
100017a6:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
100017ad:	75 2f                	jne    100017de <ssfn_render+0x4d7>
100017af:	83 ec 0c             	sub    esp,0xc
100017b2:	68 00 04 00 00       	push   0x400
100017b7:	e8 fc ff ff ff       	call   100017b8 <ssfn_render+0x4b1>	100017b8: R_386_PC32	malloc
100017bc:	83 c4 10             	add    esp,0x10
100017bf:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
100017c5:	85 c0                	test   eax,eax
100017c7:	75 08                	jne    100017d1 <ssfn_render+0x4ca>
100017c9:	83 c9 ff             	or     ecx,0xffffffff
100017cc:	e9 84 19 00 00       	jmp    10003155 <ssfn_render+0x1e4e>
100017d1:	89 c7                	mov    edi,eax
100017d3:	b9 00 01 00 00       	mov    ecx,0x100
100017d8:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100017dc:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017de:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100017e2:	0f b6 dc             	movzx  ebx,ah
100017e5:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
100017eb:	8d 1c 98             	lea    ebx,[eax+ebx*4]
100017ee:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
100017f1:	75 3a                	jne    1000182d <ssfn_render+0x526>
100017f3:	83 ec 0c             	sub    esp,0xc
100017f6:	68 00 04 00 00       	push   0x400
100017fb:	e8 fc ff ff ff       	call   100017fc <ssfn_render+0x4f5>	100017fc: R_386_PC32	malloc
10001800:	89 03                	mov    DWORD PTR [ebx],eax
10001802:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
10001809:	83 c4 10             	add    esp,0x10
1000180c:	89 c2                	mov    edx,eax
1000180e:	0f b6 c4             	movzx  eax,ah
10001811:	c1 ea 10             	shr    edx,0x10
10001814:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
1000181b:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
1000181e:	85 d2                	test   edx,edx
10001820:	74 a7                	je     100017c9 <ssfn_render+0x4c2>
10001822:	b9 00 01 00 00       	mov    ecx,0x100
10001827:	31 c0                	xor    eax,eax
10001829:	89 d7                	mov    edi,edx
1000182b:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000182d:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001834:	83 ec 0c             	sub    esp,0xc
10001837:	0f b6 cc             	movzx  ecx,ah
1000183a:	89 c2                	mov    edx,eax
1000183c:	0f b6 c0             	movzx  eax,al
1000183f:	c1 ea 10             	shr    edx,0x10
10001842:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001849:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
1000184c:	8d 1c 82             	lea    ebx,[edx+eax*4]
1000184f:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001853:	83 c0 08             	add    eax,0x8
10001856:	50                   	push   eax
10001857:	e8 fc ff ff ff       	call   10001858 <ssfn_render+0x551>	10001858: R_386_PC32	malloc
1000185c:	89 03                	mov    DWORD PTR [ebx],eax
1000185e:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
10001864:	8b 84 24 d0 00 00 00 	mov    eax,DWORD PTR [esp+0xd0]
1000186b:	83 c4 10             	add    esp,0x10
1000186e:	89 c2                	mov    edx,eax
10001870:	0f b6 cc             	movzx  ecx,ah
10001873:	c1 ea 10             	shr    edx,0x10
10001876:	0f b6 c0             	movzx  eax,al
10001879:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001880:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
10001883:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
10001887:	75 0e                	jne    10001897 <ssfn_render+0x590>
10001889:	e9 3b ff ff ff       	jmp    100017c9 <ssfn_render+0x4c2>
1000188e:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001891:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
10001897:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
1000189d:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100018a1:	74 2a                	je     100018cd <ssfn_render+0x5c6>
100018a3:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
100018a8:	74 23                	je     100018cd <ssfn_render+0x5c6>
100018aa:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100018ad:	bb 04 00 00 00       	mov    ebx,0x4
100018b2:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100018b6:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
100018ba:	89 cf                	mov    edi,ecx
100018bc:	29 c7                	sub    edi,eax
100018be:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100018c2:	0f af c7             	imul   eax,edi
100018c5:	99                   	cdq    
100018c6:	f7 fb                	idiv   ebx
100018c8:	99                   	cdq    
100018c9:	f7 f9                	idiv   ecx
100018cb:	eb 02                	jmp    100018cf <ssfn_render+0x5c8>
100018cd:	31 c0                	xor    eax,eax
100018cf:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018d5:	8a 5c 24 0c          	mov    bl,BYTE PTR [esp+0xc]
100018d9:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100018dd:	c7 44 24 50 00 00 00 00 	mov    DWORD PTR [esp+0x50],0x0
100018e5:	66 89 32             	mov    WORD PTR [edx],si
100018e8:	c6 44 24 14 fe       	mov    BYTE PTR [esp+0x14],0xfe
100018ed:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018f3:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
100018f6:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100018fc:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001902:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
10001905:	01 c3                	add    ebx,eax
10001907:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
1000190a:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001910:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001916:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
10001919:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
1000191c:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
10001922:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001928:	8a 12                	mov    dl,BYTE PTR [edx]
1000192a:	83 e2 3f             	and    edx,0x3f
1000192d:	01 d0                	add    eax,edx
1000192f:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
10001932:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10001936:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000193c:	8d 50 08             	lea    edx,[eax+0x8]
1000193f:	b0 ff                	mov    al,0xff
10001941:	89 d7                	mov    edi,edx
10001943:	f3 aa                	rep stos BYTE PTR es:[edi],al
10001945:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
1000194b:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
1000194f:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001955:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
10001959:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000195d:	c1 e0 04             	shl    eax,0x4
10001960:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10001964:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001968:	c1 e0 04             	shl    eax,0x4
1000196b:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000196f:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
10001975:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
10001979:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
1000197d:	0f 8e 4d 0a 00 00    	jle    100023d0 <ssfn_render+0x10c9>
10001983:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10001987:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000198b:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
1000198e:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001991:	8a 12                	mov    dl,BYTE PTR [edx]
10001993:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
10001997:	83 e2 40             	and    edx,0x40
1000199a:	88 54 24 1c          	mov    BYTE PTR [esp+0x1c],dl
1000199e:	88 c2                	mov    dl,al
100019a0:	21 ca                	and    edx,ecx
100019a2:	fe c2                	inc    dl
100019a4:	75 14                	jne    100019ba <ssfn_render+0x6b3>
100019a6:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100019ab:	19 c0                	sbb    eax,eax
100019ad:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
100019b1:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100019b5:	e9 09 0a 00 00       	jmp    100023c3 <ssfn_render+0x10bc>
100019ba:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100019be:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
100019c1:	c1 e0 04             	shl    eax,0x4
100019c4:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
100019c8:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019cd:	99                   	cdq    
100019ce:	f7 fe                	idiv   esi
100019d0:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100019d4:	0f b6 c1             	movzx  eax,cl
100019d7:	c1 e0 04             	shl    eax,0x4
100019da:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100019df:	99                   	cdq    
100019e0:	f7 fe                	idiv   esi
100019e2:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100019e6:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019ea:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
100019ee:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
100019f2:	c1 e2 10             	shl    edx,0x10
100019f5:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100019fa:	74 0e                	je     10001a0a <ssfn_render+0x703>
100019fc:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10001a00:	83 44 24 18 06       	add    DWORD PTR [esp+0x18],0x6
10001a05:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
10001a08:	eb 0c                	jmp    10001a16 <ssfn_render+0x70f>
10001a0a:	c1 e0 08             	shl    eax,0x8
10001a0d:	83 44 24 18 05       	add    DWORD PTR [esp+0x18],0x5
10001a12:	09 d0                	or     eax,edx
10001a14:	09 c3                	or     ebx,eax
10001a16:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
10001a19:	8a 01                	mov    al,BYTE PTR [ecx]
10001a1b:	84 c0                	test   al,al
10001a1d:	0f 88 17 05 00 00    	js     10001f3a <ssfn_render+0xc33>
10001a23:	89 c7                	mov    edi,eax
10001a25:	83 e7 3f             	and    edi,0x3f
10001a28:	a8 40                	test   al,0x40
10001a2a:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10001a2e:	74 10                	je     10001a40 <ssfn_render+0x739>
10001a30:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
10001a34:	89 f8                	mov    eax,edi
10001a36:	41                   	inc    ecx
10001a37:	c1 e0 08             	shl    eax,0x8
10001a3a:	09 c2                	or     edx,eax
10001a3c:	89 54 24 30          	mov    DWORD PTR [esp+0x30],edx
10001a40:	8d 41 01             	lea    eax,[ecx+0x1]
10001a43:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
10001a4d:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001a51:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001a5c:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a60:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001a64:	83 c0 04             	add    eax,0x4
10001a67:	c1 f8 02             	sar    eax,0x2
10001a6a:	01 c7                	add    edi,eax
10001a6c:	8b 8c 24 cc 00 00 00 	mov    ecx,DWORD PTR [esp+0xcc]
10001a73:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001a77:	0f 8f d7 01 00 00    	jg     10001c54 <ssfn_render+0x94d>
10001a7d:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a80:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10001a84:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a88:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001a8c:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001a90:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a93:	c1 e0 04             	shl    eax,0x4
10001a96:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001a9b:	99                   	cdq    
10001a9c:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001aa0:	01 c6                	add    esi,eax
10001aa2:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10001aa6:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001aaa:	c1 e0 04             	shl    eax,0x4
10001aad:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001ab2:	99                   	cdq    
10001ab3:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001ab7:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001abb:	01 c3                	add    ebx,eax
10001abd:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001ac1:	89 c8                	mov    eax,ecx
10001ac3:	01 c9                	add    ecx,ecx
10001ac5:	c1 f8 02             	sar    eax,0x2
10001ac8:	83 e1 06             	and    ecx,0x6
10001acb:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001acf:	d3 f8                	sar    eax,cl
10001ad1:	83 e0 03             	and    eax,0x3
10001ad4:	89 c1                	mov    ecx,eax
10001ad6:	83 f8 02             	cmp    eax,0x2
10001ad9:	74 4a                	je     10001b25 <ssfn_render+0x81e>
10001adb:	83 f8 03             	cmp    eax,0x3
10001ade:	0f 84 e4 00 00 00    	je     10001bc8 <ssfn_render+0x8c1>
10001ae4:	49                   	dec    ecx
10001ae5:	74 20                	je     10001b07 <ssfn_render+0x800>
10001ae7:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001aed:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001af3:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001af9:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001aff:	83 c7 02             	add    edi,0x2
10001b02:	e9 41 01 00 00       	jmp    10001c48 <ssfn_render+0x941>
10001b07:	83 c7 02             	add    edi,0x2
10001b0a:	50                   	push   eax
10001b0b:	50                   	push   eax
10001b0c:	89 e8                	mov    eax,ebp
10001b0e:	53                   	push   ebx
10001b0f:	56                   	push   esi
10001b10:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10001b14:	8b 54 24 50          	mov    edx,DWORD PTR [esp+0x50]
10001b18:	e8 9c e9 ff ff       	call   100004b9 <_ssfn_l>
10001b1d:	83 c4 10             	add    esp,0x10
10001b20:	e9 23 01 00 00       	jmp    10001c48 <ssfn_render+0x941>
10001b25:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001b29:	83 c7 04             	add    edi,0x4
10001b2c:	c1 e0 04             	shl    eax,0x4
10001b2f:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b34:	99                   	cdq    
10001b35:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b39:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001b3d:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b41:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001b45:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b49:	c1 e0 04             	shl    eax,0x4
10001b4c:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10001b51:	99                   	cdq    
10001b52:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001b56:	83 ec 0c             	sub    esp,0xc
10001b59:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001b5d:	6a 00                	push   0x0
10001b5f:	53                   	push   ebx
10001b60:	56                   	push   esi
10001b61:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001b65:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b69:	99                   	cdq    
10001b6a:	f7 f9                	idiv   ecx
10001b6c:	01 d8                	add    eax,ebx
10001b6e:	50                   	push   eax
10001b6f:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001b73:	2b 44 24 70          	sub    eax,DWORD PTR [esp+0x70]
10001b77:	99                   	cdq    
10001b78:	f7 f9                	idiv   ecx
10001b7a:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10001b7e:	50                   	push   eax
10001b7f:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001b83:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001b87:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b8d:	99                   	cdq    
10001b8e:	f7 f9                	idiv   ecx
10001b90:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b96:	50                   	push   eax
10001b97:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001b9b:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001ba1:	99                   	cdq    
10001ba2:	f7 f9                	idiv   ecx
10001ba4:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001baa:	50                   	push   eax
10001bab:	89 e8                	mov    eax,ebp
10001bad:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bb3:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bb9:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001bbd:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001bc1:	e8 04 ea ff ff       	call   100005ca <_ssfn_b>
10001bc6:	eb 7d                	jmp    10001c45 <ssfn_render+0x93e>
10001bc8:	83 ec 0c             	sub    esp,0xc
10001bcb:	83 c7 06             	add    edi,0x6
10001bce:	6a 00                	push   0x0
10001bd0:	53                   	push   ebx
10001bd1:	56                   	push   esi
10001bd2:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001bd6:	c1 e0 04             	shl    eax,0x4
10001bd9:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001bde:	99                   	cdq    
10001bdf:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001be3:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001be7:	50                   	push   eax
10001be8:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001bec:	c1 e0 04             	shl    eax,0x4
10001bef:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001bf4:	99                   	cdq    
10001bf5:	f7 7c 24 38          	idiv   DWORD PTR [esp+0x38]
10001bf9:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001bfd:	50                   	push   eax
10001bfe:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001c02:	c1 e0 04             	shl    eax,0x4
10001c05:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10001c0a:	99                   	cdq    
10001c0b:	f7 7c 24 3c          	idiv   DWORD PTR [esp+0x3c]
10001c0f:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001c13:	50                   	push   eax
10001c14:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001c18:	c1 e0 04             	shl    eax,0x4
10001c1b:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001c20:	99                   	cdq    
10001c21:	f7 7c 24 40          	idiv   DWORD PTR [esp+0x40]
10001c25:	03 44 24 50          	add    eax,DWORD PTR [esp+0x50]
10001c29:	50                   	push   eax
10001c2a:	89 e8                	mov    eax,ebp
10001c2c:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001c32:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001c38:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10001c3c:	8b 54 24 70          	mov    edx,DWORD PTR [esp+0x70]
10001c40:	e8 85 e9 ff ff       	call   100005ca <_ssfn_b>
10001c45:	83 c4 30             	add    esp,0x30
10001c48:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
10001c4f:	e9 18 fe ff ff       	jmp    10001a6c <ssfn_render+0x765>
10001c54:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001c5a:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001c60:	75 0e                	jne    10001c70 <ssfn_render+0x969>
10001c62:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001c68:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001c6e:	74 2e                	je     10001c9e <ssfn_render+0x997>
10001c70:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c76:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c7c:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c80:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c86:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c8c:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c92:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c97:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001c9e:	b3 fe                	mov    bl,0xfe
10001ca0:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001ca7:	0f 8e 16 07 00 00    	jle    100023c3 <ssfn_render+0x10bc>
10001cad:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
10001cb5:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001cbd:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001cc5:	c7 44 24 1c 00 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
10001ccd:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001cd5:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10001cd9:	39 7c 24 2c          	cmp    DWORD PTR [esp+0x2c],edi
10001cdd:	0f 8d de 06 00 00    	jge    100023c1 <ssfn_render+0x10ba>
10001ce3:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001ce9:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001cf4:	83 e8 03             	sub    eax,0x3
10001cf7:	31 f6                	xor    esi,esi
10001cf9:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001cfd:	89 f8                	mov    eax,edi
10001cff:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
10001d03:	c1 f8 02             	sar    eax,0x2
10001d06:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10001d0a:	8b bc 24 cc 00 00 00 	mov    edi,DWORD PTR [esp+0xcc]
10001d11:	39 7c 24 54          	cmp    DWORD PTR [esp+0x54],edi
10001d15:	0f 8e 16 01 00 00    	jle    10001e31 <ssfn_render+0xb2a>
10001d1b:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001d21:	8d 47 01             	lea    eax,[edi+0x1]
10001d24:	01 c0                	add    eax,eax
10001d26:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001d2a:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10001d2e:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001d33:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10001d37:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
10001d3b:	7d 0c                	jge    10001d49 <ssfn_render+0xa42>
10001d3d:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d41:	0f 8f db 00 00 00    	jg     10001e22 <ssfn_render+0xb1b>
10001d47:	eb 0a                	jmp    10001d53 <ssfn_render+0xa4c>
10001d49:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10001d4d:	0f 8e cf 00 00 00    	jle    10001e22 <ssfn_render+0xb1b>
10001d53:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001d58:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001d5c:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001d61:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10001d65:	89 d8                	mov    eax,ebx
10001d67:	c1 fa 04             	sar    edx,0x4
10001d6a:	c1 f8 04             	sar    eax,0x4
10001d6d:	39 c2                	cmp    edx,eax
10001d6f:	75 0a                	jne    10001d7b <ssfn_render+0xa74>
10001d71:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10001d75:	01 c8                	add    eax,ecx
10001d77:	d1 f8                	sar    eax,1
10001d79:	eb 1a                	jmp    10001d95 <ssfn_render+0xa8e>
10001d7b:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001d7f:	2b 4c 24 4c          	sub    ecx,DWORD PTR [esp+0x4c]
10001d83:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10001d87:	2b 5c 24 34          	sub    ebx,DWORD PTR [esp+0x34]
10001d8b:	0f af c1             	imul   eax,ecx
10001d8e:	99                   	cdq    
10001d8f:	f7 fb                	idiv   ebx
10001d91:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d95:	c1 f8 04             	sar    eax,0x4
10001d98:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001d9d:	74 04                	je     10001da3 <ssfn_render+0xa9c>
10001d9f:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10001da3:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
10001da8:	75 3f                	jne    10001de9 <ssfn_render+0xae2>
10001daa:	80 7c 24 48 00       	cmp    BYTE PTR [esp+0x48],0x0
10001daf:	74 38                	je     10001de9 <ssfn_render+0xae2>
10001db1:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001db5:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001dbb:	f7 db                	neg    ebx
10001dbd:	01 c2                	add    edx,eax
10001dbf:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001dc3:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dc7:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001dcb:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001dcf:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10001dd3:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001dd7:	74 10                	je     10001de9 <ssfn_render+0xae2>
10001dd9:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10001ddd:	89 5c 24 38          	mov    DWORD PTR [esp+0x38],ebx
10001de1:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10001de5:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10001de9:	31 d2                	xor    edx,edx
10001deb:	39 f2                	cmp    edx,esi
10001ded:	75 0b                	jne    10001dfa <ssfn_render+0xaf3>
10001def:	66 89 84 54 d0 00 00 00 	mov    WORD PTR [esp+edx*2+0xd0],ax
10001df7:	46                   	inc    esi
10001df8:	eb 28                	jmp    10001e22 <ssfn_render+0xb1b>
10001dfa:	0f b7 8c 54 d0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd0]
10001e02:	39 c1                	cmp    ecx,eax
10001e04:	7d 03                	jge    10001e09 <ssfn_render+0xb02>
10001e06:	42                   	inc    edx
10001e07:	eb e2                	jmp    10001deb <ssfn_render+0xae4>
10001e09:	89 f1                	mov    ecx,esi
10001e0b:	49                   	dec    ecx
10001e0c:	66 8b 9c 4c d0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xd0]
10001e14:	39 d1                	cmp    ecx,edx
10001e16:	66 89 9c 4c d2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xd2],bx
10001e1e:	7f eb                	jg     10001e0b <ssfn_render+0xb04>
10001e20:	eb cd                	jmp    10001def <ssfn_render+0xae8>
10001e22:	8d 47 02             	lea    eax,[edi+0x2]
10001e25:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
10001e2c:	e9 d9 fe ff ff       	jmp    10001d0a <ssfn_render+0xa03>
10001e31:	83 fe 01             	cmp    esi,0x1
10001e34:	7e 1f                	jle    10001e55 <ssfn_render+0xb4e>
10001e36:	f7 c6 01 00 00 00    	test   esi,0x1
10001e3c:	74 24                	je     10001e62 <ssfn_render+0xb5b>
10001e3e:	8d 46 ff             	lea    eax,[esi-0x1]
10001e41:	66 8b 94 44 d0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xd0]
10001e49:	66 89 94 74 cc 00 00 00 	mov    WORD PTR [esp+esi*2+0xcc],dx
10001e51:	89 c6                	mov    esi,eax
10001e53:	eb 0d                	jmp    10001e62 <ssfn_render+0xb5b>
10001e55:	85 f6                	test   esi,esi
10001e57:	0f 84 c7 00 00 00    	je     10001f24 <ssfn_render+0xc1d>
10001e5d:	be 01 00 00 00       	mov    esi,0x1
10001e62:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001e68:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001e6c:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001e70:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e74:	39 d1                	cmp    ecx,edx
10001e76:	7d 0b                	jge    10001e83 <ssfn_render+0xb7c>
10001e78:	8a 54 24 20          	mov    dl,BYTE PTR [esp+0x20]
10001e7c:	03 54 24 2c          	add    edx,DWORD PTR [esp+0x2c]
10001e80:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e83:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10001e8e:	31 c0                	xor    eax,eax
10001e90:	31 d2                	xor    edx,edx
10001e92:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e95:	39 d1                	cmp    ecx,edx
10001e97:	7e 7d                	jle    10001f16 <ssfn_render+0xc0f>
10001e99:	0f b7 84 54 d0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xd0]
10001ea1:	0f b7 8c 54 d2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xd2]
10001ea9:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ead:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10001eb1:	79 02                	jns    10001eb5 <ssfn_render+0xbae>
10001eb3:	31 c0                	xor    eax,eax
10001eb5:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001eb9:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10001ebd:	39 cf                	cmp    edi,ecx
10001ebf:	7e 04                	jle    10001ec5 <ssfn_render+0xbbe>
10001ec1:	89 4c 24 4c          	mov    DWORD PTR [esp+0x4c],ecx
10001ec5:	85 d2                	test   edx,edx
10001ec7:	74 12                	je     10001edb <ssfn_render+0xbd4>
10001ec9:	0f b7 8c 54 ce 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xce]
10001ed1:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10001ed5:	39 c8                	cmp    eax,ecx
10001ed7:	7d 02                	jge    10001edb <ssfn_render+0xbd4>
10001ed9:	89 c8                	mov    eax,ecx
10001edb:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10001edf:	7d 2b                	jge    10001f0c <ssfn_render+0xc05>
10001ee1:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001ee5:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10001eeb:	8d 3c 01             	lea    edi,[ecx+eax*1]
10001eee:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10001ef2:	88 4c 24 34          	mov    BYTE PTR [esp+0x34],cl
10001ef6:	38 4c 3b 08          	cmp    BYTE PTR [ebx+edi*1+0x8],cl
10001efa:	75 05                	jne    10001f01 <ssfn_render+0xbfa>
10001efc:	c6 44 24 34 ff       	mov    BYTE PTR [esp+0x34],0xff
10001f01:	8a 4c 24 34          	mov    cl,BYTE PTR [esp+0x34]
10001f05:	40                   	inc    eax
10001f06:	88 4c 3b 08          	mov    BYTE PTR [ebx+edi*1+0x8],cl
10001f0a:	eb cf                	jmp    10001edb <ssfn_render+0xbd4>
10001f0c:	83 c2 02             	add    edx,0x2
10001f0f:	b0 01                	mov    al,0x1
10001f11:	e9 7c ff ff ff       	jmp    10001e92 <ssfn_render+0xb8b>
10001f16:	83 e6 fe             	and    esi,0xfffffffe
10001f19:	84 c0                	test   al,al
10001f1b:	74 07                	je     10001f24 <ssfn_render+0xc1d>
10001f1d:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
10001f24:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f28:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10001f2c:	01 7c 24 44          	add    DWORD PTR [esp+0x44],edi
10001f30:	83 44 24 30 10       	add    DWORD PTR [esp+0x30],0x10
10001f35:	e9 9b fd ff ff       	jmp    10001cd5 <ssfn_render+0x9ce>
10001f3a:	88 c2                	mov    dl,al
10001f3c:	80 e2 60             	and    dl,0x60
10001f3f:	0f 85 95 02 00 00    	jne    100021da <ssfn_render+0xed3>
10001f45:	83 e0 1f             	and    eax,0x1f
10001f48:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001f4c:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001f53:	c1 fb 04             	sar    ebx,0x4
10001f56:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001f5a:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001f5e:	40                   	inc    eax
10001f5f:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001f63:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f67:	c1 f8 04             	sar    eax,0x4
10001f6a:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001f6e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f72:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10001f77:	99                   	cdq    
10001f78:	f7 fe                	idiv   esi
10001f7a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001f7e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001f82:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10001f87:	99                   	cdq    
10001f88:	f7 fe                	idiv   esi
10001f8a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001f8e:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f94:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001f98:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001f9c:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f9f:	39 d6                	cmp    esi,edx
10001fa1:	7d 0a                	jge    10001fad <ssfn_render+0xca6>
10001fa3:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10001fa7:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001faa:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001fad:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001fb1:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001fb9:	0f af c3             	imul   eax,ebx
10001fbc:	31 ff                	xor    edi,edi
10001fbe:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fc2:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001fc6:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001fca:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10001fce:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001fd2:	29 d8                	sub    eax,ebx
10001fd4:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
10001fd8:	3b 7c 24 1c          	cmp    edi,DWORD PTR [esp+0x1c]
10001fdc:	0f 8d b1 00 00 00    	jge    10002093 <ssfn_render+0xd8c>
10001fe2:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001fe6:	99                   	cdq    
10001fe7:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10001feb:	89 c6                	mov    esi,eax
10001fed:	31 c0                	xor    eax,eax
10001fef:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10001ff4:	74 0e                	je     10002004 <ssfn_render+0xcfd>
10001ff6:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10001ffa:	bb 04 00 00 00       	mov    ebx,0x4
10001fff:	29 f8                	sub    eax,edi
10002001:	99                   	cdq    
10002002:	f7 fb                	idiv   ebx
10002004:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10002008:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
10002013:	89 44 24 58          	mov    DWORD PTR [esp+0x58],eax
10002017:	0f af 74 24 30       	imul   esi,DWORD PTR [esp+0x30]
1000201c:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002023:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10002027:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000202b:	39 d8                	cmp    eax,ebx
1000202d:	7d 4e                	jge    1000207d <ssfn_render+0xd76>
1000202f:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002033:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10002038:	99                   	cdq    
10002039:	f7 fb                	idiv   ebx
1000203b:	8d 14 06             	lea    edx,[esi+eax*1]
1000203e:	83 e0 07             	and    eax,0x7
10002041:	c1 fa 03             	sar    edx,0x3
10002044:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10002049:	0f a3 c2             	bt     edx,eax
1000204c:	72 0e                	jb     1000205c <ssfn_render+0xd55>
1000204e:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10002052:	43                   	inc    ebx
10002053:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
1000205a:	eb c0                	jmp    1000201c <ssfn_render+0xd15>
1000205c:	31 c0                	xor    eax,eax
1000205e:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10002062:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002066:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
1000206c:	40                   	inc    eax
1000206d:	03 54 24 58          	add    edx,DWORD PTR [esp+0x58]
10002071:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10002075:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
10002079:	7d e3                	jge    1000205e <ssfn_render+0xd57>
1000207b:	eb d1                	jmp    1000204e <ssfn_render+0xd47>
1000207d:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002081:	47                   	inc    edi
10002082:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
10002086:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000208a:	01 74 24 44          	add    DWORD PTR [esp+0x44],esi
1000208e:	e9 45 ff ff ff       	jmp    10001fd8 <ssfn_render+0xcd1>
10002093:	b3 fe                	mov    bl,0xfe
10002095:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
1000209c:	0f 85 21 03 00 00    	jne    100023c3 <ssfn_render+0x10bc>
100020a2:	31 c0                	xor    eax,eax
100020a4:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100020a8:	80 7c 24 14 fd       	cmp    BYTE PTR [esp+0x14],0xfd
100020ad:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
100020b1:	0f 95 c0             	setne  al
100020b4:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100020b8:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100020bc:	4f                   	dec    edi
100020bd:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100020c1:	81 44 24 20 fc 00 00 00 	add    DWORD PTR [esp+0x20],0xfc
100020c9:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100020cd:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100020d4:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
100020d8:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
100020dc:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020e0:	31 c0                	xor    eax,eax
100020e2:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100020e5:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100020e9:	83 c1 04             	add    ecx,0x4
100020ec:	3b 4c 24 30          	cmp    ecx,DWORD PTR [esp+0x30]
100020f0:	0f 8d c0 02 00 00    	jge    100023b6 <ssfn_render+0x10af>
100020f6:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100020fa:	8d 77 01             	lea    esi,[edi+0x1]
100020fd:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002101:	89 74 24 34          	mov    DWORD PTR [esp+0x34],esi
10002105:	4f                   	dec    edi
10002106:	be 01 00 00 00       	mov    esi,0x1
1000210b:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000210f:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002113:	7e 63                	jle    10002178 <ssfn_render+0xe71>
10002115:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002119:	b9 01 00 00 00       	mov    ecx,0x1
1000211e:	89 ca                	mov    edx,ecx
10002120:	39 4c 24 44          	cmp    DWORD PTR [esp+0x44],ecx
10002124:	7e 45                	jle    1000216b <ssfn_render+0xe64>
10002126:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000212c:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
10002131:	75 34                	jne    10002167 <ssfn_render+0xe60>
10002133:	89 c7                	mov    edi,eax
10002135:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002139:	2b 7c 24 10          	sub    edi,DWORD PTR [esp+0x10]
1000213d:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
10002141:	74 0c                	je     1000214f <ssfn_render+0xe48>
10002143:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10002147:	01 d7                	add    edi,edx
10002149:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
1000214d:	75 18                	jne    10002167 <ssfn_render+0xe60>
1000214f:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
10002153:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
10002157:	74 06                	je     1000215f <ssfn_render+0xe58>
10002159:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
1000215d:	75 08                	jne    10002167 <ssfn_render+0xe60>
1000215f:	8a 5c 24 20          	mov    bl,BYTE PTR [esp+0x20]
10002163:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
10002167:	41                   	inc    ecx
10002168:	40                   	inc    eax
10002169:	eb b3                	jmp    1000211e <ssfn_render+0xe17>
1000216b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000216f:	46                   	inc    esi
10002170:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
10002174:	b0 01                	mov    al,0x1
10002176:	eb 97                	jmp    1000210f <ssfn_render+0xe08>
10002178:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
1000217c:	89 5c 24 34          	mov    DWORD PTR [esp+0x34],ebx
10002180:	bb 01 00 00 00       	mov    ebx,0x1
10002185:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002189:	7e 3d                	jle    100021c8 <ssfn_render+0xec1>
1000218b:	b8 01 00 00 00       	mov    eax,0x1
10002190:	89 c2                	mov    edx,eax
10002192:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
10002196:	7e 23                	jle    100021bb <ssfn_render+0xeb4>
10002198:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000219c:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
100021a2:	8d 14 07             	lea    edx,[edi+eax*1]
100021a5:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
100021aa:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
100021ae:	75 08                	jne    100021b8 <ssfn_render+0xeb1>
100021b0:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100021b4:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
100021b8:	40                   	inc    eax
100021b9:	eb d5                	jmp    10002190 <ssfn_render+0xe89>
100021bb:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
100021bf:	43                   	inc    ebx
100021c0:	01 74 24 34          	add    DWORD PTR [esp+0x34],esi
100021c4:	b0 01                	mov    al,0x1
100021c6:	eb bd                	jmp    10002185 <ssfn_render+0xe7e>
100021c8:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
100021cb:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
100021cf:	01 c9                	add    ecx,ecx
100021d1:	29 4c 24 30          	sub    DWORD PTR [esp+0x30],ecx
100021d5:	e9 08 ff ff ff       	jmp    100020e2 <ssfn_render+0xddb>
100021da:	b3 fe                	mov    bl,0xfe
100021dc:	80 fa 20             	cmp    dl,0x20
100021df:	0f 85 de 01 00 00    	jne    100023c3 <ssfn_render+0x10bc>
100021e5:	89 c3                	mov    ebx,eax
100021e7:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
100021eb:	c1 e3 08             	shl    ebx,0x8
100021ee:	81 e3 00 1f 00 00    	and    ebx,0x1f00
100021f4:	09 c3                	or     ebx,eax
100021f6:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
100021fa:	43                   	inc    ebx
100021fb:	40                   	inc    eax
100021fc:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002200:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
10002204:	40                   	inc    eax
10002205:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10002209:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000220d:	c1 f8 04             	sar    eax,0x4
10002210:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002214:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002218:	c1 f8 04             	sar    eax,0x4
1000221b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000221f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002223:	0f af 44 24 30       	imul   eax,DWORD PTR [esp+0x30]
10002228:	99                   	cdq    
10002229:	f7 fe                	idiv   esi
1000222b:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000222f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002233:	0f af 44 24 34       	imul   eax,DWORD PTR [esp+0x34]
10002238:	99                   	cdq    
10002239:	f7 fe                	idiv   esi
1000223b:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000223f:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002243:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002249:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
1000224d:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10002251:	39 d6                	cmp    esi,edx
10002253:	7d 0b                	jge    10002260 <ssfn_render+0xf59>
10002255:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10002259:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
1000225d:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10002260:	83 c1 04             	add    ecx,0x4
10002263:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
1000226e:	8d 04 19             	lea    eax,[ecx+ebx*1]
10002271:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002275:	3b 4c 24 44          	cmp    ecx,DWORD PTR [esp+0x44]
10002279:	72 35                	jb     100022b0 <ssfn_render+0xfa9>
1000227b:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000227f:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002283:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002288:	2b 74 24 14          	sub    esi,DWORD PTR [esp+0x14]
1000228c:	03 54 24 38          	add    edx,DWORD PTR [esp+0x38]
10002290:	8b 84 24 cc 00 00 00 	mov    eax,DWORD PTR [esp+0xcc]
10002297:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
1000229b:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100022a3:	31 d2                	xor    edx,edx
100022a5:	31 ff                	xor    edi,edi
100022a7:	89 74 24 44          	mov    DWORD PTR [esp+0x44],esi
100022ab:	e9 cc 00 00 00       	jmp    1000237c <ssfn_render+0x1075>
100022b0:	8a 11                	mov    dl,BYTE PTR [ecx]
100022b2:	89 d0                	mov    eax,edx
100022b4:	83 e0 7f             	and    eax,0x7f
100022b7:	84 d2                	test   dl,dl
100022b9:	8d 78 01             	lea    edi,[eax+0x1]
100022bc:	78 09                	js     100022c7 <ssfn_render+0xfc0>
100022be:	41                   	inc    ecx
100022bf:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100022c3:	89 ca                	mov    edx,ecx
100022c5:	eb 3d                	jmp    10002304 <ssfn_render+0xffd>
100022c7:	48                   	dec    eax
100022c8:	8b 94 24 cc 00 00 00 	mov    edx,DWORD PTR [esp+0xcc]
100022cf:	83 f8 fe             	cmp    eax,0xfffffffe
100022d2:	74 16                	je     100022ea <ssfn_render+0xfe3>
100022d4:	8d 5a 01             	lea    ebx,[edx+0x1]
100022d7:	89 9c 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],ebx
100022de:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
100022e1:	88 9c 14 d0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5d0],bl
100022e8:	eb dd                	jmp    100022c7 <ssfn_render+0xfc0>
100022ea:	83 c1 02             	add    ecx,0x2
100022ed:	eb 86                	jmp    10002275 <ssfn_render+0xf6e>
100022ef:	42                   	inc    edx
100022f0:	8d 73 01             	lea    esi,[ebx+0x1]
100022f3:	89 b4 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],esi
100022fa:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
100022fd:	88 84 1c d0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5d0],al
10002304:	ff 4c 24 2c          	dec    DWORD PTR [esp+0x2c]
10002308:	8b 9c 24 cc 00 00 00 	mov    ebx,DWORD PTR [esp+0xcc]
1000230f:	83 7c 24 2c fe       	cmp    DWORD PTR [esp+0x2c],0xfffffffe
10002314:	75 d9                	jne    100022ef <ssfn_render+0xfe8>
10002316:	01 f9                	add    ecx,edi
10002318:	e9 58 ff ff ff       	jmp    10002275 <ssfn_render+0xf6e>
1000231d:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002321:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10002325:	99                   	cdq    
10002326:	f7 7c 24 20          	idiv   DWORD PTR [esp+0x20]
1000232a:	0f af c8             	imul   ecx,eax
1000232d:	31 c0                	xor    eax,eax
1000232f:	80 7c 24 28 00       	cmp    BYTE PTR [esp+0x28],0x0
10002334:	74 0e                	je     10002344 <ssfn_render+0x103d>
10002336:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000233a:	bb 04 00 00 00       	mov    ebx,0x4
1000233f:	29 f8                	sub    eax,edi
10002341:	99                   	cdq    
10002342:	f7 fb                	idiv   ebx
10002344:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10002348:	31 db                	xor    ebx,ebx
1000234a:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000234e:	31 f6                	xor    esi,esi
10002350:	8d 84 24 d0 05 01 00 	lea    eax,[esp+0x105d0]
10002357:	01 c1                	add    ecx,eax
10002359:	39 74 24 1c          	cmp    DWORD PTR [esp+0x1c],esi
1000235d:	7f 30                	jg     1000238f <ssfn_render+0x1088>
1000235f:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002363:	85 c0                	test   eax,eax
10002365:	79 02                	jns    10002369 <ssfn_render+0x1062>
10002367:	31 c0                	xor    eax,eax
10002369:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000236d:	47                   	inc    edi
1000236e:	01 5c 24 38          	add    DWORD PTR [esp+0x38],ebx
10002372:	b2 01                	mov    dl,0x1
10002374:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
10002378:	01 5c 24 2c          	add    DWORD PTR [esp+0x2c],ebx
1000237c:	3b 7c 24 20          	cmp    edi,DWORD PTR [esp+0x20]
10002380:	7c 9b                	jl     1000231d <ssfn_render+0x1016>
10002382:	84 d2                	test   dl,dl
10002384:	74 3b                	je     100023c1 <ssfn_render+0x10ba>
10002386:	89 84 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],eax
1000238d:	eb 32                	jmp    100023c1 <ssfn_render+0x10ba>
1000238f:	89 d8                	mov    eax,ebx
10002391:	99                   	cdq    
10002392:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
10002396:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
1000239d:	3c ff                	cmp    al,0xff
1000239f:	74 0e                	je     100023af <ssfn_render+0x10a8>
100023a1:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100023a5:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
100023ab:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
100023af:	46                   	inc    esi
100023b0:	03 5c 24 30          	add    ebx,DWORD PTR [esp+0x30]
100023b4:	eb a3                	jmp    10002359 <ssfn_render+0x1052>
100023b6:	84 c0                	test   al,al
100023b8:	74 07                	je     100023c1 <ssfn_render+0x10ba>
100023ba:	89 94 24 cc 00 00 00 	mov    DWORD PTR [esp+0xcc],edx
100023c1:	b3 fe                	mov    bl,0xfe
100023c3:	ff 44 24 50          	inc    DWORD PTR [esp+0x50]
100023c7:	88 5c 24 14          	mov    BYTE PTR [esp+0x14],bl
100023cb:	e9 9f f5 ff ff       	jmp    1000196f <ssfn_render+0x668>
100023d0:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100023d6:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100023d9:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
100023dc:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
100023df:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100023e5:	0f b6 72 07          	movzx  esi,BYTE PTR [edx+0x7]
100023e9:	0f b6 5a 06          	movzx  ebx,BYTE PTR [edx+0x6]
100023ed:	89 f0                	mov    eax,esi
100023ef:	89 d9                	mov    ecx,ebx
100023f1:	43                   	inc    ebx
100023f2:	39 de                	cmp    esi,ebx
100023f4:	7e 08                	jle    100023fe <ssfn_render+0x10f7>
100023f6:	48                   	dec    eax
100023f7:	29 c8                	sub    eax,ecx
100023f9:	88 42 07             	mov    BYTE PTR [edx+0x7],al
100023fc:	eb 04                	jmp    10002402 <ssfn_render+0x10fb>
100023fe:	c6 42 07 00          	mov    BYTE PTR [edx+0x7],0x0
10002402:	83 bc 24 f4 05 01 00 00 	cmp    DWORD PTR [esp+0x105f4],0x0
1000240a:	0f 84 c9 0c 00 00    	je     100030d9 <ssfn_render+0x1dd2>
10002410:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002416:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
1000241c:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002420:	8b 75 18             	mov    esi,DWORD PTR [ebp+0x18]
10002423:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10002427:	0f ba e0 0c          	bt     eax,0xc
1000242b:	72 22                	jb     1000244f <ssfn_render+0x1148>
1000242d:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10002430:	83 e0 0f             	and    eax,0xf
10002433:	3c 03                	cmp    al,0x3
10002435:	74 18                	je     1000244f <ssfn_render+0x1148>
10002437:	0f b6 4e 0c          	movzx  ecx,BYTE PTR [esi+0xc]
1000243b:	84 c9                	test   cl,cl
1000243d:	74 10                	je     1000244f <ssfn_render+0x1148>
1000243f:	0f b6 56 0b          	movzx  edx,BYTE PTR [esi+0xb]
10002443:	0f af d7             	imul   edx,edi
10002446:	89 d0                	mov    eax,edx
10002448:	99                   	cdq    
10002449:	f7 f9                	idiv   ecx
1000244b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000244f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002453:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
10002459:	7d 06                	jge    10002461 <ssfn_render+0x115a>
1000245b:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
10002461:	8b 9d 24 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf524]
10002467:	0f b6 4b 02          	movzx  ecx,BYTE PTR [ebx+0x2]
1000246b:	0f b7 13             	movzx  edx,WORD PTR [ebx]
1000246e:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002473:	89 d0                	mov    eax,edx
10002475:	99                   	cdq    
10002476:	f7 f9                	idiv   ecx
10002478:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
1000247c:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002480:	8a 43 04             	mov    al,BYTE PTR [ebx+0x4]
10002483:	88 44 24 14          	mov    BYTE PTR [esp+0x14],al
10002487:	0f b6 43 03          	movzx  eax,BYTE PTR [ebx+0x3]
1000248b:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000248f:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
10002494:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002498:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000249d:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024a1:	99                   	cdq    
100024a2:	f7 f9                	idiv   ecx
100024a4:	31 d2                	xor    edx,edx
100024a6:	83 ff 10             	cmp    edi,0x10
100024a9:	0f 9f c2             	setg   dl
100024ac:	42                   	inc    edx
100024ad:	89 54 24 18          	mov    DWORD PTR [esp+0x18],edx
100024b1:	3b 54 24 20          	cmp    edx,DWORD PTR [esp+0x20]
100024b5:	7d 08                	jge    100024bf <ssfn_render+0x11b8>
100024b7:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100024bb:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
100024bf:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
100024c3:	39 c2                	cmp    edx,eax
100024c5:	7d 04                	jge    100024cb <ssfn_render+0x11c4>
100024c7:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100024cb:	80 7c 24 14 00       	cmp    BYTE PTR [esp+0x14],0x0
100024d0:	74 4c                	je     1000251e <ssfn_render+0x1217>
100024d2:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100024d6:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100024db:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100024df:	99                   	cdq    
100024e0:	f7 f9                	idiv   ecx
100024e2:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
100024e6:	81 e2 00 08 00 00    	and    edx,0x800
100024ec:	74 04                	je     100024f2 <ssfn_render+0x11eb>
100024ee:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100024f2:	01 d0                	add    eax,edx
100024f4:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024fa:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100024fe:	0f b6 4e 0b          	movzx  ecx,BYTE PTR [esi+0xb]
10002502:	0f b6 43 06          	movzx  eax,BYTE PTR [ebx+0x6]
10002506:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
1000250b:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
1000250f:	99                   	cdq    
10002510:	f7 f9                	idiv   ecx
10002512:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10002516:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
1000251c:	eb 22                	jmp    10002540 <ssfn_render+0x1239>
1000251e:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002522:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
1000252c:	d1 f8                	sar    eax,1
1000252e:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
10002536:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000253a:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
10002540:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002547:	8b 18                	mov    ebx,DWORD PTR [eax]
10002549:	85 db                	test   ebx,ebx
1000254b:	0f 84 2e 09 00 00    	je     10002e7f <ssfn_render+0x1b78>
10002551:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
10002555:	89 d1                	mov    ecx,edx
10002557:	89 d0                	mov    eax,edx
10002559:	66 c1 f9 0b          	sar    cx,0xb
1000255d:	c1 f8 1f             	sar    eax,0x1f
10002560:	31 c2                	xor    edx,eax
10002562:	89 54 24 54          	mov    DWORD PTR [esp+0x54],edx
10002566:	29 44 24 54          	sub    DWORD PTR [esp+0x54],eax
1000256a:	88 c8                	mov    al,cl
1000256c:	83 e0 10             	and    eax,0x10
1000256f:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
10002573:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002577:	83 c0 40             	add    eax,0x40
1000257a:	c1 f8 06             	sar    eax,0x6
1000257d:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
10002584:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002588:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
1000258c:	3b 44 24 20          	cmp    eax,DWORD PTR [esp+0x20]
10002590:	7d 08                	jge    1000259a <ssfn_render+0x1293>
10002592:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002596:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
1000259a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000259d:	c7 44 24 4c 00 00 00 00 	mov    DWORD PTR [esp+0x4c],0x0
100025a5:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
100025a9:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
100025b1:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
100025b5:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100025ba:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100025be:	99                   	cdq    
100025bf:	f7 f9                	idiv   ecx
100025c1:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
100025c5:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025cc:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025cf:	0f b6 f4             	movzx  esi,ah
100025d2:	89 c2                	mov    edx,eax
100025d4:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
100025d8:	c1 ea 10             	shr    edx,0x10
100025db:	0f b6 fa             	movzx  edi,dl
100025de:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
100025e2:	0f b6 f8             	movzx  edi,al
100025e5:	c1 e8 18             	shr    eax,0x18
100025e8:	89 7c 24 60          	mov    DWORD PTR [esp+0x60],edi
100025ec:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100025f0:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
100025f7:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
100025fa:	0f b6 fc             	movzx  edi,ah
100025fd:	89 c2                	mov    edx,eax
100025ff:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002606:	c1 ea 10             	shr    edx,0x10
10002609:	0f b6 c0             	movzx  eax,al
1000260c:	0f b6 f2             	movzx  esi,dl
1000260f:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002616:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
1000261d:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002621:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002628:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
1000262f:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002633:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002637:	0f af c2             	imul   eax,edx
1000263a:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
1000263e:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002642:	8d 04 90             	lea    eax,[eax+edx*4]
10002645:	01 d8                	add    eax,ebx
10002647:	89 84 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],eax
1000264e:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10002652:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
10002659:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000265e:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
10002665:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002669:	39 74 24 4c          	cmp    DWORD PTR [esp+0x4c],esi
1000266d:	0f 8d e2 04 00 00    	jge    10002b55 <ssfn_render+0x184e>
10002673:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000267a:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002681:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002685:	0f bf 57 06          	movsx  edx,WORD PTR [edi+0x6]
10002689:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
1000268d:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002691:	39 d0                	cmp    eax,edx
10002693:	0f 8d bc 04 00 00    	jge    10002b55 <ssfn_render+0x184e>
10002699:	85 c0                	test   eax,eax
1000269b:	0f 88 94 04 00 00    	js     10002b35 <ssfn_render+0x182e>
100026a1:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026a7:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100026ab:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100026af:	c1 e1 08             	shl    ecx,0x8
100026b2:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100026ba:	89 c8                	mov    eax,ecx
100026bc:	0f af c3             	imul   eax,ebx
100026bf:	99                   	cdq    
100026c0:	f7 fe                	idiv   esi
100026c2:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100026c9:	c1 f8 08             	sar    eax,0x8
100026cc:	89 84 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],eax
100026d3:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026d9:	0f af c3             	imul   eax,ebx
100026dc:	99                   	cdq    
100026dd:	f7 fe                	idiv   esi
100026df:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
100026e3:	c1 f8 08             	sar    eax,0x8
100026e6:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100026ed:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100026f1:	2b 84 24 94 00 00 00 	sub    eax,DWORD PTR [esp+0x94]
100026f8:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
100026ff:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002706:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
1000270a:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
1000270e:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002712:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002716:	0f 8d 19 04 00 00    	jge    10002b35 <ssfn_render+0x182e>
1000271c:	85 c0                	test   eax,eax
1000271e:	0f 88 ff 03 00 00    	js     10002b23 <ssfn_render+0x181c>
10002724:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
1000272b:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
1000272f:	75 42                	jne    10002773 <ssfn_render+0x146c>
10002731:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002735:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
1000273c:	b9 10 00 00 00       	mov    ecx,0x10
10002741:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
10002744:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
1000274b:	89 c2                	mov    edx,eax
1000274d:	0f b6 fc             	movzx  edi,ah
10002750:	d3 ea                	shr    edx,cl
10002752:	89 bc 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],edi
10002759:	0f b6 f2             	movzx  esi,dl
1000275c:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002760:	89 b4 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],esi
10002767:	d3 e8                	shr    eax,cl
10002769:	0f b6 c0             	movzx  eax,al
1000276c:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
10002773:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002779:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000277d:	0f b7 18             	movzx  ebx,WORD PTR [eax]
10002780:	c1 e1 08             	shl    ecx,0x8
10002783:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
10002787:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
1000278f:	89 c8                	mov    eax,ecx
10002791:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10002799:	0f af c3             	imul   eax,ebx
1000279c:	c7 44 24 3c 00 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
100027a4:	99                   	cdq    
100027a5:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
100027ad:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027b1:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100027b9:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
100027c0:	c1 f8 08             	sar    eax,0x8
100027c3:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100027ca:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100027d0:	0f af c3             	imul   eax,ebx
100027d3:	99                   	cdq    
100027d4:	f7 7c 24 18          	idiv   DWORD PTR [esp+0x18]
100027d8:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100027dc:	c1 f8 08             	sar    eax,0x8
100027df:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
100027e6:	8b 84 24 94 00 00 00 	mov    eax,DWORD PTR [esp+0x94]
100027ed:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100027f1:	8b 74 24 68          	mov    esi,DWORD PTR [esp+0x68]
100027f5:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
100027f9:	0f 8d 3b 02 00 00    	jge    10002a3a <ssfn_render+0x1733>
100027ff:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10002803:	c1 fa 08             	sar    edx,0x8
10002806:	3b 94 24 a8 00 00 00 	cmp    edx,DWORD PTR [esp+0xa8]
1000280d:	75 25                	jne    10002834 <ssfn_render+0x152d>
1000280f:	0f b6 4c 24 48       	movzx  ecx,BYTE PTR [esp+0x48]
10002814:	8b bc 24 a0 00 00 00 	mov    edi,DWORD PTR [esp+0xa0]
1000281b:	b8 00 01 00 00       	mov    eax,0x100
10002820:	81 64 24 48 00 ff ff ff 	and    DWORD PTR [esp+0x48],0xffffff00
10002828:	29 c8                	sub    eax,ecx
1000282a:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000282e:	39 c7                	cmp    edi,eax
10002830:	7e 1c                	jle    1000284e <ssfn_render+0x1547>
10002832:	eb 16                	jmp    1000284a <ssfn_render+0x1543>
10002834:	c7 44 24 2c 00 01 00 00 	mov    DWORD PTR [esp+0x2c],0x100
1000283c:	3b 94 24 ac 00 00 00 	cmp    edx,DWORD PTR [esp+0xac]
10002843:	75 09                	jne    1000284e <ssfn_render+0x1547>
10002845:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
1000284a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000284e:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10002852:	0f b7 00             	movzx  eax,WORD PTR [eax]
10002855:	0f af c2             	imul   eax,edx
10002858:	89 84 24 b8 00 00 00 	mov    DWORD PTR [esp+0xb8],eax
1000285f:	0f b6 44 24 6c       	movzx  eax,BYTE PTR [esp+0x6c]
10002864:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10002869:	c1 f8 08             	sar    eax,0x8
1000286c:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
10002873:	8b 84 24 98 00 00 00 	mov    eax,DWORD PTR [esp+0x98]
1000287a:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
1000287e:	8b 74 24 6c          	mov    esi,DWORD PTR [esp+0x6c]
10002882:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
10002886:	0f 8d a1 01 00 00    	jge    10002a2d <ssfn_render+0x1726>
1000288c:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002890:	c1 f8 08             	sar    eax,0x8
10002893:	3b 84 24 b0 00 00 00 	cmp    eax,DWORD PTR [esp+0xb0]
1000289a:	75 3b                	jne    100028d7 <ssfn_render+0x15d0>
1000289c:	0f b6 4c 24 44       	movzx  ecx,BYTE PTR [esp+0x44]
100028a1:	ba 00 01 00 00       	mov    edx,0x100
100028a6:	81 64 24 44 00 ff ff ff 	and    DWORD PTR [esp+0x44],0xffffff00
100028ae:	29 ca                	sub    edx,ecx
100028b0:	89 f1                	mov    ecx,esi
100028b2:	2b 8c 24 98 00 00 00 	sub    ecx,DWORD PTR [esp+0x98]
100028b9:	39 d1                	cmp    ecx,edx
100028bb:	7c 0e                	jl     100028cb <ssfn_render+0x15c4>
100028bd:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028c1:	81 fa 00 01 00 00    	cmp    edx,0x100
100028c7:	74 22                	je     100028eb <ssfn_render+0x15e4>
100028c9:	89 d1                	mov    ecx,edx
100028cb:	0f af 4c 24 2c       	imul   ecx,DWORD PTR [esp+0x2c]
100028d0:	89 cf                	mov    edi,ecx
100028d2:	c1 ff 08             	sar    edi,0x8
100028d5:	eb 14                	jmp    100028eb <ssfn_render+0x15e4>
100028d7:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
100028de:	3b 84 24 b4 00 00 00 	cmp    eax,DWORD PTR [esp+0xb4]
100028e5:	74 04                	je     100028eb <ssfn_render+0x15e4>
100028e7:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100028eb:	03 44 24 74          	add    eax,DWORD PTR [esp+0x74]
100028ef:	01 7c 24 30          	add    DWORD PTR [esp+0x30],edi
100028f3:	8b b4 24 b8 00 00 00 	mov    esi,DWORD PTR [esp+0xb8]
100028fa:	0f b6 54 06 08       	movzx  edx,BYTE PTR [esi+eax*1+0x8]
100028ff:	81 fa ff 00 00 00    	cmp    edx,0xff
10002905:	75 37                	jne    1000293e <ssfn_render+0x1637>
10002907:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
1000290e:	81 44 24 40 ff 00 00 00 	add    DWORD PTR [esp+0x40],0xff
10002916:	0f af c7             	imul   eax,edi
10002919:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
1000291d:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10002924:	0f af c7             	imul   eax,edi
10002927:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
1000292b:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10002932:	0f af c7             	imul   eax,edi
10002935:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002939:	e9 e2 00 00 00       	jmp    10002a20 <ssfn_render+0x1719>
1000293e:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002944:	74 2d                	je     10002973 <ssfn_render+0x166c>
10002946:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002949:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
1000294c:	85 c9                	test   ecx,ecx
1000294e:	74 23                	je     10002973 <ssfn_render+0x166c>
10002950:	01 c8                	add    eax,ecx
10002952:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
10002955:	89 d9                	mov    ecx,ebx
10002957:	89 9c 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],ebx
1000295e:	c1 e9 10             	shr    ecx,0x10
10002961:	0f b6 f7             	movzx  esi,bh
10002964:	0f b6 c1             	movzx  eax,cl
10002967:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000296b:	0f b6 c3             	movzx  eax,bl
1000296e:	c1 eb 18             	shr    ebx,0x18
10002971:	eb 14                	jmp    10002987 <ssfn_render+0x1680>
10002973:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10002977:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000297b:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
1000297f:	8b 74 24 5c          	mov    esi,DWORD PTR [esp+0x5c]
10002983:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10002987:	81 fb ff 00 00 00    	cmp    ebx,0xff
1000298d:	75 25                	jne    100029b4 <ssfn_render+0x16ad>
1000298f:	0f af c7             	imul   eax,edi
10002992:	0f af f7             	imul   esi,edi
10002995:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
10002999:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
1000299d:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100029a3:	0f af cf             	imul   ecx,edi
100029a6:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
100029aa:	01 4c 24 34          	add    DWORD PTR [esp+0x34],ecx
100029ae:	01 44 24 40          	add    DWORD PTR [esp+0x40],eax
100029b2:	eb 6c                	jmp    10002a20 <ssfn_render+0x1719>
100029b4:	0f af f3             	imul   esi,ebx
100029b7:	0f af c3             	imul   eax,ebx
100029ba:	b9 ff 00 00 00       	mov    ecx,0xff
100029bf:	8b 94 24 88 00 00 00 	mov    edx,DWORD PTR [esp+0x88]
100029c6:	29 d9                	sub    ecx,ebx
100029c8:	89 4c 24 78          	mov    DWORD PTR [esp+0x78],ecx
100029cc:	0f af d1             	imul   edx,ecx
100029cf:	b9 ff 00 00 00       	mov    ecx,0xff
100029d4:	01 d0                	add    eax,edx
100029d6:	0f af c7             	imul   eax,edi
100029d9:	99                   	cdq    
100029da:	f7 f9                	idiv   ecx
100029dc:	01 44 24 3c          	add    DWORD PTR [esp+0x3c],eax
100029e0:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100029e4:	0f af 84 24 8c 00 00 00 	imul   eax,DWORD PTR [esp+0x8c]
100029ec:	01 f0                	add    eax,esi
100029ee:	89 ce                	mov    esi,ecx
100029f0:	0f af c7             	imul   eax,edi
100029f3:	99                   	cdq    
100029f4:	f7 f9                	idiv   ecx
100029f6:	8b 4c 24 50          	mov    ecx,DWORD PTR [esp+0x50]
100029fa:	01 44 24 38          	add    DWORD PTR [esp+0x38],eax
100029fe:	0f af cb             	imul   ecx,ebx
10002a01:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
10002a05:	0f af df             	imul   ebx,edi
10002a08:	0f af 84 24 90 00 00 00 	imul   eax,DWORD PTR [esp+0x90]
10002a10:	01 5c 24 40          	add    DWORD PTR [esp+0x40],ebx
10002a14:	01 c8                	add    eax,ecx
10002a16:	0f af c7             	imul   eax,edi
10002a19:	99                   	cdq    
10002a1a:	f7 fe                	idiv   esi
10002a1c:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
10002a20:	81 44 24 44 00 01 00 00 	add    DWORD PTR [esp+0x44],0x100
10002a28:	e9 51 fe ff ff       	jmp    1000287e <ssfn_render+0x1577>
10002a2d:	81 44 24 48 00 01 00 00 	add    DWORD PTR [esp+0x48],0x100
10002a35:	e9 b7 fd ff ff       	jmp    100027f1 <ssfn_render+0x14ea>
10002a3a:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10002a3f:	74 30                	je     10002a71 <ssfn_render+0x176a>
10002a41:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002a45:	31 d2                	xor    edx,edx
10002a47:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a4b:	31 d2                	xor    edx,edx
10002a4d:	89 c1                	mov    ecx,eax
10002a4f:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002a53:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a57:	31 d2                	xor    edx,edx
10002a59:	89 c6                	mov    esi,eax
10002a5b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002a5f:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a63:	31 d2                	xor    edx,edx
10002a65:	89 c3                	mov    ebx,eax
10002a67:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a6b:	f7 74 24 30          	div    DWORD PTR [esp+0x30]
10002a6f:	eb 1c                	jmp    10002a8d <ssfn_render+0x1786>
10002a71:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002a75:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10002a79:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10002a7d:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10002a81:	c1 e9 08             	shr    ecx,0x8
10002a84:	c1 ee 08             	shr    esi,0x8
10002a87:	c1 eb 08             	shr    ebx,0x8
10002a8a:	c1 e8 08             	shr    eax,0x8
10002a8d:	83 f8 0f             	cmp    eax,0xf
10002a90:	0f 86 8d 00 00 00    	jbe    10002b23 <ssfn_render+0x181c>
10002a96:	89 ca                	mov    edx,ecx
10002a98:	81 f9 ff 00 00 00    	cmp    ecx,0xff
10002a9e:	76 05                	jbe    10002aa5 <ssfn_render+0x179e>
10002aa0:	ba ff 00 00 00       	mov    edx,0xff
10002aa5:	b9 10 00 00 00       	mov    ecx,0x10
10002aaa:	2b 8c 24 a4 00 00 00 	sub    ecx,DWORD PTR [esp+0xa4]
10002ab1:	d3 e2                	shl    edx,cl
10002ab3:	3d ff 00 00 00       	cmp    eax,0xff
10002ab8:	89 d1                	mov    ecx,edx
10002aba:	76 05                	jbe    10002ac1 <ssfn_render+0x17ba>
10002abc:	b8 ff 00 00 00       	mov    eax,0xff
10002ac1:	c1 e0 18             	shl    eax,0x18
10002ac4:	09 c8                	or     eax,ecx
10002ac6:	81 fe ff 00 00 00    	cmp    esi,0xff
10002acc:	76 05                	jbe    10002ad3 <ssfn_render+0x17cc>
10002ace:	be ff 00 00 00       	mov    esi,0xff
10002ad3:	c1 e6 08             	shl    esi,0x8
10002ad6:	09 f0                	or     eax,esi
10002ad8:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002ade:	76 05                	jbe    10002ae5 <ssfn_render+0x17de>
10002ae0:	bb ff 00 00 00       	mov    ebx,0xff
10002ae5:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002ae9:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10002aed:	d3 e3                	shl    ebx,cl
10002aef:	09 c3                	or     ebx,eax
10002af1:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10002af8:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002afb:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10002aff:	39 5c 24 4c          	cmp    DWORD PTR [esp+0x4c],ebx
10002b03:	75 1e                	jne    10002b23 <ssfn_render+0x181c>
10002b05:	39 b4 24 84 00 00 00 	cmp    DWORD PTR [esp+0x84],esi
10002b0c:	7e 07                	jle    10002b15 <ssfn_render+0x180e>
10002b0e:	89 b4 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],esi
10002b15:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002b19:	39 5c 24 7c          	cmp    DWORD PTR [esp+0x7c],ebx
10002b1d:	7d 04                	jge    10002b23 <ssfn_render+0x181c>
10002b1f:	89 5c 24 7c          	mov    DWORD PTR [esp+0x7c],ebx
10002b23:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002b27:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10002b2b:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10002b2f:	0f 85 ca fb ff ff    	jne    100026ff <ssfn_render+0x13f8>
10002b35:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002b3c:	ff 44 24 4c          	inc    DWORD PTR [esp+0x4c]
10002b40:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b44:	25 fc ff 00 00       	and    eax,0xfffc
10002b49:	01 84 24 80 00 00 00 	add    DWORD PTR [esp+0x80],eax
10002b50:	e9 10 fb ff ff       	jmp    10002665 <ssfn_render+0x135e>
10002b55:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002b5c:	0f 84 90 01 00 00    	je     10002cf2 <ssfn_render+0x19eb>
10002b62:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002b6a:	8b bc 24 84 00 00 00 	mov    edi,DWORD PTR [esp+0x84]
10002b71:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002b75:	40                   	inc    eax
10002b76:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
10002b7a:	29 c7                	sub    edi,eax
10002b7c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002b80:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10002b84:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002b88:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b8c:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10002b90:	7e 09                	jle    10002b9b <ssfn_render+0x1894>
10002b92:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002b96:	40                   	inc    eax
10002b97:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002b9b:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002ba2:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ba9:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002bad:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002bb1:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002bb5:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bb9:	0f af c2             	imul   eax,edx
10002bbc:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002bc0:	2b 54 24 1c          	sub    edx,DWORD PTR [esp+0x1c]
10002bc4:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002bc8:	03 07                	add    eax,DWORD PTR [edi]
10002bca:	89 c7                	mov    edi,eax
10002bcc:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002bd0:	c1 e0 18             	shl    eax,0x18
10002bd3:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002bd7:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10002bdb:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002bdf:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002be4:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002be8:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002bec:	03 44 24 64          	add    eax,DWORD PTR [esp+0x64]
10002bf0:	3b 44 24 10          	cmp    eax,DWORD PTR [esp+0x10]
10002bf4:	0f 8e f8 00 00 00    	jle    10002cf2 <ssfn_render+0x19eb>
10002bfa:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c01:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
10002c08:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002c0c:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002c10:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10002c14:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002c18:	39 d0                	cmp    eax,edx
10002c1a:	0f 8d d2 00 00 00    	jge    10002cf2 <ssfn_render+0x19eb>
10002c20:	31 db                	xor    ebx,ebx
10002c22:	85 c0                	test   eax,eax
10002c24:	79 23                	jns    10002c49 <ssfn_render+0x1942>
10002c26:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c2d:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002c31:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002c35:	25 fc ff 00 00       	and    eax,0xfffc
10002c3a:	01 c7                	add    edi,eax
10002c3c:	eb aa                	jmp    10002be8 <ssfn_render+0x18e1>
10002c3e:	85 c0                	test   eax,eax
10002c40:	79 20                	jns    10002c62 <ssfn_render+0x195b>
10002c42:	43                   	inc    ebx
10002c43:	39 5c 24 70          	cmp    DWORD PTR [esp+0x70],ebx
10002c47:	7c dd                	jl     10002c26 <ssfn_render+0x191f>
10002c49:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002c50:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002c54:	01 d8                	add    eax,ebx
10002c56:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002c5a:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002c5e:	7c de                	jl     10002c3e <ssfn_render+0x1937>
10002c60:	eb c4                	jmp    10002c26 <ssfn_render+0x191f>
10002c62:	39 5c 24 2c          	cmp    DWORD PTR [esp+0x2c],ebx
10002c66:	7e 06                	jle    10002c6e <ssfn_render+0x1967>
10002c68:	3b 5c 24 34          	cmp    ebx,DWORD PTR [esp+0x34]
10002c6c:	7f d4                	jg     10002c42 <ssfn_render+0x193b>
10002c6e:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002c71:	b8 10 00 00 00       	mov    eax,0x10
10002c76:	0f b6 f6             	movzx  esi,dh
10002c79:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10002c7d:	89 74 24 3c          	mov    DWORD PTR [esp+0x3c],esi
10002c81:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002c85:	89 d0                	mov    eax,edx
10002c87:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002c8b:	d3 e8                	shr    eax,cl
10002c8d:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002c91:	0f b6 c0             	movzx  eax,al
10002c94:	d3 ea                	shr    edx,cl
10002c96:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002c9a:	0f b6 f2             	movzx  esi,dl
10002c9d:	29 c1                	sub    ecx,eax
10002c9f:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002ca3:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002ca8:	29 f2                	sub    edx,esi
10002caa:	c1 f9 08             	sar    ecx,0x8
10002cad:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cb2:	01 c8                	add    eax,ecx
10002cb4:	c1 fa 08             	sar    edx,0x8
10002cb7:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10002cbb:	89 54 24 40          	mov    DWORD PTR [esp+0x40],edx
10002cbf:	d3 e0                	shl    eax,cl
10002cc1:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cc5:	03 74 24 40          	add    esi,DWORD PTR [esp+0x40]
10002cc9:	2b 54 24 3c          	sub    edx,DWORD PTR [esp+0x3c]
10002ccd:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002cd1:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002cd6:	d3 e6                	shl    esi,cl
10002cd8:	c1 fa 08             	sar    edx,0x8
10002cdb:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10002cdf:	c1 e2 08             	shl    edx,0x8
10002ce2:	09 d0                	or     eax,edx
10002ce4:	0b 44 24 44          	or     eax,DWORD PTR [esp+0x44]
10002ce8:	09 c6                	or     esi,eax
10002cea:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002ced:	e9 50 ff ff ff       	jmp    10002c42 <ssfn_render+0x193b>
10002cf2:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002cf9:	0f 84 80 01 00 00    	je     10002e7f <ssfn_render+0x1b78>
10002cff:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10002d03:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002d07:	d1 fa                	sar    edx,1
10002d09:	40                   	inc    eax
10002d0a:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002d0e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d12:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10002d16:	7e 09                	jle    10002d21 <ssfn_render+0x1a1a>
10002d18:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10002d1c:	40                   	inc    eax
10002d1d:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002d21:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d28:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d2f:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002d33:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d37:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10002d3b:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d3f:	01 d0                	add    eax,edx
10002d41:	0f af c1             	imul   eax,ecx
10002d44:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002d48:	2b 4c 24 1c          	sub    ecx,DWORD PTR [esp+0x1c]
10002d4c:	8d 44 88 fc          	lea    eax,[eax+ecx*4-0x4]
10002d50:	03 03                	add    eax,DWORD PTR [ebx]
10002d52:	89 c7                	mov    edi,eax
10002d54:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002d58:	c1 e0 18             	shl    eax,0x18
10002d5b:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002d5f:	0f b6 84 24 9c 00 00 00 	movzx  eax,BYTE PTR [esp+0x9c]
10002d67:	01 d0                	add    eax,edx
10002d69:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002d6d:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10002d72:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10002d76:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002d7a:	39 5c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebx
10002d7e:	0f 8e fb 00 00 00    	jle    10002e7f <ssfn_render+0x1b78>
10002d84:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002d8b:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002d8f:	01 d8                	add    eax,ebx
10002d91:	8b 9c 24 f4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105f4]
10002d98:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10002d9c:	0f bf 53 06          	movsx  edx,WORD PTR [ebx+0x6]
10002da0:	39 d0                	cmp    eax,edx
10002da2:	0f 8d d7 00 00 00    	jge    10002e7f <ssfn_render+0x1b78>
10002da8:	31 f6                	xor    esi,esi
10002daa:	85 c0                	test   eax,eax
10002dac:	0f 89 ad 00 00 00    	jns    10002e5f <ssfn_render+0x1b58>
10002db2:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002db9:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10002dbd:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002dc1:	25 fc ff 00 00       	and    eax,0xfffc
10002dc6:	01 c7                	add    edi,eax
10002dc8:	eb ac                	jmp    10002d76 <ssfn_render+0x1a6f>
10002dca:	85 c0                	test   eax,eax
10002dcc:	0f 88 82 00 00 00    	js     10002e54 <ssfn_render+0x1b4d>
10002dd2:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002dd5:	b8 10 00 00 00       	mov    eax,0x10
10002dda:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10002dde:	2b 44 24 40          	sub    eax,DWORD PTR [esp+0x40]
10002de2:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002de6:	89 d8                	mov    eax,ebx
10002de8:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002dec:	d3 e8                	shr    eax,cl
10002dee:	0f b6 cf             	movzx  ecx,bh
10002df1:	0f b6 c0             	movzx  eax,al
10002df4:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10002df8:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002dfc:	d3 eb                	shr    ebx,cl
10002dfe:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10002e02:	0f b6 db             	movzx  ebx,bl
10002e05:	29 c1                	sub    ecx,eax
10002e07:	29 da                	sub    edx,ebx
10002e09:	0f af 4c 24 14       	imul   ecx,DWORD PTR [esp+0x14]
10002e0e:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e13:	c1 f9 08             	sar    ecx,0x8
10002e16:	c1 fa 08             	sar    edx,0x8
10002e19:	01 c8                	add    eax,ecx
10002e1b:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002e1f:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10002e23:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002e27:	d3 e0                	shl    eax,cl
10002e29:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002e2d:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10002e31:	0f af 54 24 14       	imul   edx,DWORD PTR [esp+0x14]
10002e36:	c1 fa 08             	sar    edx,0x8
10002e39:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002e3d:	c1 e2 08             	shl    edx,0x8
10002e40:	09 d0                	or     eax,edx
10002e42:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002e45:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002e49:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10002e4d:	d3 e2                	shl    edx,cl
10002e4f:	09 c2                	or     edx,eax
10002e51:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002e54:	46                   	inc    esi
10002e55:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10002e59:	0f 8c 53 ff ff ff    	jl     10002db2 <ssfn_render+0x1aab>
10002e5f:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002e66:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002e6a:	01 f0                	add    eax,esi
10002e6c:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
10002e70:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10002e74:	0f 8c 50 ff ff ff    	jl     10002dca <ssfn_render+0x1ac3>
10002e7a:	e9 33 ff ff ff       	jmp    10002db2 <ssfn_render+0x1aab>
10002e7f:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002e86:	74 04                	je     10002e8c <ssfn_render+0x1b85>
10002e88:	f7 5c 24 20          	neg    DWORD PTR [esp+0x20]
10002e8c:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002e90:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002e94:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002e9a:	8b 84 24 f4 05 01 00 	mov    eax,DWORD PTR [esp+0x105f4]
10002ea1:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002ea5:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
10002eac:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002eaf:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002eb3:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002eb9:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002ebd:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
10002ec2:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002ec6:	99                   	cdq    
10002ec7:	f7 f9                	idiv   ecx
10002ec9:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002ecd:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002ed3:	25 80 00 00 00       	and    eax,0x80
10002ed8:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002edc:	0f 85 f7 01 00 00    	jne    100030d9 <ssfn_render+0x1dd2>
10002ee2:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002ee5:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002ee9:	0f 84 ea 01 00 00    	je     100030d9 <ssfn_render+0x1dd2>
10002eef:	8b 94 24 f8 05 01 00 	mov    edx,DWORD PTR [esp+0x105f8]
10002ef6:	83 ec 0c             	sub    esp,0xc
10002ef9:	03 94 24 d4 00 00 00 	add    edx,DWORD PTR [esp+0xd4]
10002f00:	8d 8c 24 d0 00 00 00 	lea    ecx,[esp+0xd0]
10002f07:	51                   	push   ecx
10002f08:	8d 8c 24 dc 00 00 00 	lea    ecx,[esp+0xdc]
10002f0f:	e8 53 d9 ff ff       	call   10000867 <_ssfn_c>
10002f14:	83 c4 10             	add    esp,0x10
10002f17:	85 c0                	test   eax,eax
10002f19:	0f 84 ba 01 00 00    	je     100030d9 <ssfn_render+0x1dd2>
10002f1f:	83 bc 24 c4 00 00 00 20 	cmp    DWORD PTR [esp+0xc4],0x20
10002f27:	0f 86 ac 01 00 00    	jbe    100030d9 <ssfn_render+0x1dd2>
10002f2d:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f33:	8d 48 06             	lea    ecx,[eax+0x6]
10002f36:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002f3c:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002f40:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
10002f44:	0f 8e 8f 01 00 00    	jle    100030d9 <ssfn_render+0x1dd2>
10002f4a:	8a 19                	mov    bl,BYTE PTR [ecx]
10002f4c:	88 5c 24 18          	mov    BYTE PTR [esp+0x18],bl
10002f50:	8a 18                	mov    bl,BYTE PTR [eax]
10002f52:	83 e3 40             	and    ebx,0x40
10002f55:	80 7c 24 18 ff       	cmp    BYTE PTR [esp+0x18],0xff
10002f5a:	75 14                	jne    10002f70 <ssfn_render+0x1c69>
10002f5c:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002f60:	75 0e                	jne    10002f70 <ssfn_render+0x1c69>
10002f62:	80 fb 01             	cmp    bl,0x1
10002f65:	19 c0                	sbb    eax,eax
10002f67:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002f6b:	e9 60 01 00 00       	jmp    100030d0 <ssfn_render+0x1dc9>
10002f70:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002f74:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002f78:	c1 e6 10             	shl    esi,0x10
10002f7b:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002f7f:	84 db                	test   bl,bl
10002f81:	74 08                	je     10002f8b <ssfn_render+0x1c84>
10002f83:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002f86:	83 c1 06             	add    ecx,0x6
10002f89:	eb 0c                	jmp    10002f97 <ssfn_render+0x1c90>
10002f8b:	c1 e2 08             	shl    edx,0x8
10002f8e:	83 c1 05             	add    ecx,0x5
10002f91:	89 d0                	mov    eax,edx
10002f93:	09 f0                	or     eax,esi
10002f95:	09 c7                	or     edi,eax
10002f97:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002f9a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002f9e:	01 f8                	add    eax,edi
10002fa0:	8a 10                	mov    dl,BYTE PTR [eax]
10002fa2:	88 d3                	mov    bl,dl
10002fa4:	83 e3 e0             	and    ebx,0xffffffe0
10002fa7:	80 fb c0             	cmp    bl,0xc0
10002faa:	0f 85 20 01 00 00    	jne    100030d0 <ssfn_render+0x1dc9>
10002fb0:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002fb4:	c1 e2 08             	shl    edx,0x8
10002fb7:	83 c0 02             	add    eax,0x2
10002fba:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002fc0:	09 da                	or     edx,ebx
10002fc2:	8d 72 01             	lea    esi,[edx+0x1]
10002fc5:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10002fc9:	8b b4 24 c4 00 00 00 	mov    esi,DWORD PTR [esp+0xc4]
10002fd0:	ff 4c 24 1c          	dec    DWORD PTR [esp+0x1c]
10002fd4:	83 7c 24 1c ff       	cmp    DWORD PTR [esp+0x1c],0xffffffff
10002fd9:	0f 84 f1 00 00 00    	je     100030d0 <ssfn_render+0x1dc9>
10002fdf:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002fe3:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002fe6:	c1 e3 10             	shl    ebx,0x10
10002fe9:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002fef:	09 d3                	or     ebx,edx
10002ff1:	39 de                	cmp    esi,ebx
10002ff3:	0f 82 cf 00 00 00    	jb     100030c8 <ssfn_render+0x1dc1>
10002ff9:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10002ffc:	89 d7                	mov    edi,edx
10002ffe:	c1 e7 10             	shl    edi,0x10
10003001:	81 e7 00 00 0f 00    	and    edi,0xf0000
10003007:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000300b:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
1000300f:	0b 7c 24 20          	or     edi,DWORD PTR [esp+0x20]
10003013:	39 fe                	cmp    esi,edi
10003015:	0f 87 ad 00 00 00    	ja     100030c8 <ssfn_render+0x1dc1>
1000301b:	29 de                	sub    esi,ebx
1000301d:	c0 ea 04             	shr    dl,0x4
10003020:	89 b4 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],esi
10003027:	0f b6 d2             	movzx  edx,dl
1000302a:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
1000302e:	89 d3                	mov    ebx,edx
10003030:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10003034:	c1 e3 10             	shl    ebx,0x10
10003037:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
1000303a:	09 da                	or     edx,ebx
1000303c:	c0 e8 04             	shr    al,0x4
1000303f:	c1 e0 18             	shl    eax,0x18
10003042:	09 c2                	or     edx,eax
10003044:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003048:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
1000304b:	01 c2                	add    edx,eax
1000304d:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003050:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10003054:	39 d7                	cmp    edi,edx
10003056:	76 78                	jbe    100030d0 <ssfn_render+0x1dc9>
10003058:	8a 1a                	mov    bl,BYTE PTR [edx]
1000305a:	8b 84 24 c4 00 00 00 	mov    eax,DWORD PTR [esp+0xc4]
10003061:	89 de                	mov    esi,ebx
10003063:	83 e6 7f             	and    esi,0x7f
10003066:	39 c6                	cmp    esi,eax
10003068:	73 1d                	jae    10003087 <ssfn_render+0x1d80>
1000306a:	48                   	dec    eax
1000306b:	bb 02 00 00 00       	mov    ebx,0x2
10003070:	29 f0                	sub    eax,esi
10003072:	89 84 24 c4 00 00 00 	mov    DWORD PTR [esp+0xc4],eax
10003079:	0f b6 02             	movzx  eax,BYTE PTR [edx]
1000307c:	84 c0                	test   al,al
1000307e:	78 03                	js     10003083 <ssfn_render+0x1d7c>
10003080:	8d 58 02             	lea    ebx,[eax+0x2]
10003083:	01 da                	add    edx,ebx
10003085:	eb cd                	jmp    10003054 <ssfn_render+0x1d4d>
10003087:	be 01 00 00 00       	mov    esi,0x1
1000308c:	84 db                	test   bl,bl
1000308e:	78 03                	js     10003093 <ssfn_render+0x1d8c>
10003090:	8d 70 01             	lea    esi,[eax+0x1]
10003093:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
10003097:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000309b:	0f af 44 24 0c       	imul   eax,DWORD PTR [esp+0xc]
100030a0:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
100030a4:	99                   	cdq    
100030a5:	f7 fb                	idiv   ebx
100030a7:	80 7c 24 18 00       	cmp    BYTE PTR [esp+0x18],0x0
100030ac:	74 0d                	je     100030bb <ssfn_render+0x1db4>
100030ae:	8b bc 24 f4 05 01 00 	mov    edi,DWORD PTR [esp+0x105f4]
100030b5:	66 01 47 0a          	add    WORD PTR [edi+0xa],ax
100030b9:	eb 15                	jmp    100030d0 <ssfn_render+0x1dc9>
100030bb:	8b b4 24 f4 05 01 00 	mov    esi,DWORD PTR [esp+0x105f4]
100030c2:	66 01 46 0c          	add    WORD PTR [esi+0xc],ax
100030c6:	eb 08                	jmp    100030d0 <ssfn_render+0x1dc9>
100030c8:	83 c0 08             	add    eax,0x8
100030cb:	e9 00 ff ff ff       	jmp    10002fd0 <ssfn_render+0x1cc9>
100030d0:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100030d4:	e9 5d fe ff ff       	jmp    10002f36 <ssfn_render+0x1c2f>
100030d9:	8b 8c 24 c8 00 00 00 	mov    ecx,DWORD PTR [esp+0xc8]
100030e0:	eb 73                	jmp    10003155 <ssfn_render+0x1e4e>
100030e2:	c7 84 24 cc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xcc],0x0
100030ed:	e9 50 e4 ff ff       	jmp    10001542 <ssfn_render+0x23b>
100030f2:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
100030f9:	57                   	push   edi
100030fa:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10003101:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10003108:	e8 5a d7 ff ff       	call   10000867 <_ssfn_c>
1000310d:	5f                   	pop    edi
1000310e:	85 c0                	test   eax,eax
10003110:	0f 84 25 e4 ff ff    	je     1000153b <ssfn_render+0x234>
10003116:	e9 a2 e4 ff ff       	jmp    100015bd <ssfn_render+0x2b6>
1000311b:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000311e:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
10003122:	75 0c                	jne    10003130 <ssfn_render+0x1e29>
10003124:	ff 84 24 cc 00 00 00 	inc    DWORD PTR [esp+0xcc]
1000312b:	e9 3b e4 ff ff       	jmp    1000156b <ssfn_render+0x264>
10003130:	8d bc 24 c0 00 00 00 	lea    edi,[esp+0xc0]
10003137:	57                   	push   edi
10003138:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
1000313f:	8b 94 24 fc 05 01 00 	mov    edx,DWORD PTR [esp+0x105fc]
10003146:	e8 1c d7 ff ff       	call   10000867 <_ssfn_c>
1000314b:	59                   	pop    ecx
1000314c:	85 c0                	test   eax,eax
1000314e:	74 d4                	je     10003124 <ssfn_render+0x1e1d>
10003150:	e9 68 e4 ff ff       	jmp    100015bd <ssfn_render+0x2b6>
10003155:	81 c4 dc 05 01 00    	add    esp,0x105dc
1000315b:	89 c8                	mov    eax,ecx
1000315d:	5b                   	pop    ebx
1000315e:	5e                   	pop    esi
1000315f:	5f                   	pop    edi
10003160:	5d                   	pop    ebp
10003161:	c3                   	ret    

10003162 <ssfn_bbox>:
10003162:	55                   	push   ebp
10003163:	57                   	push   edi
10003164:	56                   	push   esi
10003165:	53                   	push   ebx
10003166:	83 ec 3c             	sub    esp,0x3c
10003169:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
1000316e:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10003172:	0f 94 c0             	sete   al
10003175:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
1000317a:	0f 94 c2             	sete   dl
1000317d:	09 d0                	or     eax,edx
1000317f:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
10003184:	0f 94 c2             	sete   dl
10003187:	09 d0                	or     eax,edx
10003189:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
1000318e:	0f 94 c2             	sete   dl
10003191:	09 d0                	or     eax,edx
10003193:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
10003198:	0f 94 c2             	sete   dl
1000319b:	08 d0                	or     al,dl
1000319d:	0f 85 7c 01 00 00    	jne    1000331f <ssfn_bbox+0x1bd>
100031a3:	85 db                	test   ebx,ebx
100031a5:	0f 84 74 01 00 00    	je     1000331f <ssfn_bbox+0x1bd>
100031ab:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100031af:	31 f6                	xor    esi,esi
100031b1:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031b7:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100031bb:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031c1:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100031c5:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031cb:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100031cf:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100031d5:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100031d9:	80 38 00             	cmp    BYTE PTR [eax],0x0
100031dc:	0f 84 42 01 00 00    	je     10003324 <ssfn_bbox+0x1c2>
100031e2:	8d 54 24 18          	lea    edx,[esp+0x18]
100031e6:	b9 06 00 00 00       	mov    ecx,0x6
100031eb:	89 d7                	mov    edi,edx
100031ed:	89 f0                	mov    eax,esi
100031ef:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100031f9:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100031fb:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10003203:	31 ff                	xor    edi,edi
10003205:	bd 01 00 00 00       	mov    ebp,0x1
1000320a:	50                   	push   eax
1000320b:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
1000320f:	8d 44 24 20          	lea    eax,[esp+0x20]
10003213:	50                   	push   eax
10003214:	53                   	push   ebx
10003215:	e8 fc ff ff ff       	call   10003216 <ssfn_bbox+0xb4>	10003216: R_386_PC32	ssfn_render
1000321a:	83 c4 10             	add    esp,0x10
1000321d:	89 c6                	mov    esi,eax
1000321f:	85 c0                	test   eax,eax
10003221:	74 6f                	je     10003292 <ssfn_bbox+0x130>
10003223:	0f 88 fb 00 00 00    	js     10003324 <ssfn_bbox+0x1c2>
10003229:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
1000322f:	85 c0                	test   eax,eax
10003231:	0f 84 ed 00 00 00    	je     10003324 <ssfn_bbox+0x1c2>
10003237:	85 ed                	test   ebp,ebp
10003239:	74 0b                	je     10003246 <ssfn_bbox+0xe4>
1000323b:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
10003241:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
10003246:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
1000324a:	74 12                	je     1000325e <ssfn_bbox+0xfc>
1000324c:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
10003252:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10003256:	7d 2f                	jge    10003287 <ssfn_bbox+0x125>
10003258:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000325c:	eb 29                	jmp    10003287 <ssfn_bbox+0x125>
1000325e:	0f b7 08             	movzx  ecx,WORD PTR [eax]
10003261:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
10003266:	39 cd                	cmp    ebp,ecx
10003268:	7d 05                	jge    1000326f <ssfn_bbox+0x10d>
1000326a:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
1000326f:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
10003273:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
10003278:	84 d2                	test   dl,dl
1000327a:	75 04                	jne    10003280 <ssfn_bbox+0x11e>
1000327c:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
10003280:	01 ca                	add    edx,ecx
10003282:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
10003287:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
1000328b:	31 ed                	xor    ebp,ebp
1000328d:	e9 78 ff ff ff       	jmp    1000320a <ssfn_bbox+0xa8>
10003292:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
10003299:	74 23                	je     100032be <ssfn_bbox+0x15c>
1000329b:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000329e:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
100032a2:	75 1a                	jne    100032be <ssfn_bbox+0x15c>
100032a4:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
100032aa:	b9 04 00 00 00       	mov    ecx,0x4
100032af:	99                   	cdq    
100032b0:	f7 f9                	idiv   ecx
100032b2:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
100032b7:	29 f8                	sub    eax,edi
100032b9:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
100032be:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
100032c4:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100032c8:	74 29                	je     100032f3 <ssfn_bbox+0x191>
100032ca:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100032cf:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100032d3:	89 01                	mov    DWORD PTR [ecx],eax
100032d5:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
100032d9:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
100032df:	89 01                	mov    DWORD PTR [ecx],eax
100032e1:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100032e5:	89 38                	mov    DWORD PTR [eax],edi
100032e7:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100032eb:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100032ef:	89 38                	mov    DWORD PTR [eax],edi
100032f1:	eb 31                	jmp    10003324 <ssfn_bbox+0x1c2>
100032f3:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
100032f8:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100032fc:	89 07                	mov    DWORD PTR [edi],eax
100032fe:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003303:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
10003307:	89 07                	mov    DWORD PTR [edi],eax
10003309:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000330d:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003313:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003317:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000331d:	eb 05                	jmp    10003324 <ssfn_bbox+0x1c2>
1000331f:	be fc ff ff ff       	mov    esi,0xfffffffc
10003324:	83 c4 3c             	add    esp,0x3c
10003327:	89 f0                	mov    eax,esi
10003329:	5b                   	pop    ebx
1000332a:	5e                   	pop    esi
1000332b:	5f                   	pop    edi
1000332c:	5d                   	pop    ebp
1000332d:	c3                   	ret    

1000332e <ssfn_text>:
1000332e:	55                   	push   ebp
1000332f:	57                   	push   edi
10003330:	56                   	push   esi
10003331:	53                   	push   ebx
10003332:	83 ec 1c             	sub    esp,0x1c
10003335:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10003339:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
1000333d:	85 f6                	test   esi,esi
1000333f:	0f 84 b2 00 00 00    	je     100033f7 <ssfn_text+0xc9>
10003345:	85 ed                	test   ebp,ebp
10003347:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
1000334c:	0f 84 a5 00 00 00    	je     100033f7 <ssfn_text+0xc9>
10003352:	83 ec 0c             	sub    esp,0xc
10003355:	6a 18                	push   0x18
10003357:	e8 fc ff ff ff       	call   10003358 <ssfn_text+0x2a>	10003358: R_386_PC32	malloc
1000335c:	83 c4 10             	add    esp,0x10
1000335f:	89 c3                	mov    ebx,eax
10003361:	85 c0                	test   eax,eax
10003363:	0f 84 8e 00 00 00    	je     100033f7 <ssfn_text+0xc9>
10003369:	31 c0                	xor    eax,eax
1000336b:	b9 06 00 00 00       	mov    ecx,0x6
10003370:	89 df                	mov    edi,ebx
10003372:	80 3e 00             	cmp    BYTE PTR [esi],0x0
10003375:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003377:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000337b:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
1000337e:	74 79                	je     100033f9 <ssfn_text+0xcb>
10003380:	8d 43 0c             	lea    eax,[ebx+0xc]
10003383:	52                   	push   edx
10003384:	52                   	push   edx
10003385:	50                   	push   eax
10003386:	8d 43 0a             	lea    eax,[ebx+0xa]
10003389:	50                   	push   eax
1000338a:	8d 43 06             	lea    eax,[ebx+0x6]
1000338d:	50                   	push   eax
1000338e:	8d 43 04             	lea    eax,[ebx+0x4]
10003391:	50                   	push   eax
10003392:	56                   	push   esi
10003393:	55                   	push   ebp
10003394:	e8 fc ff ff ff       	call   10003395 <ssfn_text+0x67>	10003395: R_386_PC32	ssfn_bbox
10003399:	83 c4 20             	add    esp,0x20
1000339c:	85 c0                	test   eax,eax
1000339e:	75 59                	jne    100033f9 <ssfn_text+0xcb>
100033a0:	83 ec 0c             	sub    esp,0xc
100033a3:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
100033a7:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
100033ab:	0f af c8             	imul   ecx,eax
100033ae:	c1 e1 02             	shl    ecx,0x2
100033b1:	51                   	push   ecx
100033b2:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
100033b6:	e8 fc ff ff ff       	call   100033b7 <ssfn_text+0x89>	100033b7: R_386_PC32	malloc
100033bb:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033bf:	89 c7                	mov    edi,eax
100033c1:	89 03                	mov    DWORD PTR [ebx],eax
100033c3:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
100033c7:	83 c4 10             	add    esp,0x10
100033ca:	f3 aa                	rep stos BYTE PTR es:[edi],al
100033cc:	50                   	push   eax
100033cd:	56                   	push   esi
100033ce:	53                   	push   ebx
100033cf:	55                   	push   ebp
100033d0:	e8 fc ff ff ff       	call   100033d1 <ssfn_text+0xa3>	100033d1: R_386_PC32	ssfn_render
100033d5:	83 c4 10             	add    esp,0x10
100033d8:	85 c0                	test   eax,eax
100033da:	7e 04                	jle    100033e0 <ssfn_text+0xb2>
100033dc:	01 c6                	add    esi,eax
100033de:	eb ec                	jmp    100033cc <ssfn_text+0x9e>
100033e0:	74 17                	je     100033f9 <ssfn_text+0xcb>
100033e2:	83 ec 0c             	sub    esp,0xc
100033e5:	ff 33                	push   DWORD PTR [ebx]
100033e7:	e8 fc ff ff ff       	call   100033e8 <ssfn_text+0xba>	100033e8: R_386_PC32	free
100033ec:	89 1c 24             	mov    DWORD PTR [esp],ebx
100033ef:	e8 fc ff ff ff       	call   100033f0 <ssfn_text+0xc2>	100033f0: R_386_PC32	free
100033f4:	83 c4 10             	add    esp,0x10
100033f7:	31 db                	xor    ebx,ebx
100033f9:	83 c4 1c             	add    esp,0x1c
100033fc:	89 d8                	mov    eax,ebx
100033fe:	5b                   	pop    ebx
100033ff:	5e                   	pop    esi
10003400:	5f                   	pop    edi
10003401:	5d                   	pop    ebp
10003402:	c3                   	ret    
10003403:	90                   	nop

10003404 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003404:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003408:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
1000340e:	8b 10                	mov    edx,DWORD PTR [eax]
10003410:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003414:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
10003417:	90                   	nop

10003418 <NIContext::drvDarken4(int, int, int)>:
10003418:	55                   	push   ebp
10003419:	57                   	push   edi
1000341a:	56                   	push   esi
1000341b:	53                   	push   ebx
1000341c:	83 ec 20             	sub    esp,0x20
1000341f:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10003423:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10003427:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000342b:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000342f:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
10003435:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10003439:	8b 10                	mov    edx,DWORD PTR [eax]
1000343b:	56                   	push   esi
1000343c:	53                   	push   ebx
1000343d:	50                   	push   eax
1000343e:	ff 52 34             	call   DWORD PTR [edx+0x34]
10003441:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10003445:	89 c2                	mov    edx,eax
10003447:	0f b6 ec             	movzx  ebp,ah
1000344a:	c1 ea 10             	shr    edx,0x10
1000344d:	0f af e9             	imul   ebp,ecx
10003450:	0f b6 d2             	movzx  edx,dl
10003453:	0f b6 c0             	movzx  eax,al
10003456:	0f af d1             	imul   edx,ecx
10003459:	0f af c1             	imul   eax,ecx
1000345c:	c1 ea 07             	shr    edx,0x7
1000345f:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
10003465:	c1 e8 07             	shr    eax,0x7
10003468:	8b 39                	mov    edi,DWORD PTR [ecx]
1000346a:	c1 e2 10             	shl    edx,0x10
1000346d:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10003471:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
10003475:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10003479:	c1 ed 07             	shr    ebp,0x7
1000347c:	c1 e5 08             	shl    ebp,0x8
1000347f:	09 ea                	or     edx,ebp
10003481:	09 c2                	or     edx,eax
10003483:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
10003487:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
1000348a:	83 c4 2c             	add    esp,0x2c
1000348d:	5b                   	pop    ebx
1000348e:	5e                   	pop    esi
1000348f:	5f                   	pop    edi
10003490:	5d                   	pop    ebp
10003491:	ff e0                	jmp    eax
10003493:	90                   	nop

10003494 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
10003494:	55                   	push   ebp
10003495:	b9 00 40 00 00       	mov    ecx,0x4000
1000349a:	57                   	push   edi
1000349b:	b0 ff                	mov    al,0xff
1000349d:	56                   	push   esi
1000349e:	53                   	push   ebx
1000349f:	83 ec 3c             	sub    esp,0x3c
100034a2:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
100034a6:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
100034aa:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
100034ad:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100034b1:	f3 aa                	rep stos BYTE PTR es:[edi],al
100034b3:	85 db                	test   ebx,ebx
100034b5:	75 10                	jne    100034c7 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
100034b7:	83 ec 0c             	sub    esp,0xc
100034ba:	68 78 49 00 10       	push   0x10004978	100034bb: R_386_32	.text
100034bf:	e8 fc ff ff ff       	call   100034c0 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	100034c0: R_386_PC32	KePanic(char const*)
100034c4:	83 c4 10             	add    esp,0x10
100034c7:	50                   	push   eax
100034c8:	50                   	push   eax
100034c9:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034cd:	50                   	push   eax
100034ce:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d2:	50                   	push   eax
100034d3:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034d7:	50                   	push   eax
100034d8:	8d 44 24 1c          	lea    eax,[esp+0x1c]
100034dc:	50                   	push   eax
100034dd:	56                   	push   esi
100034de:	68 00 00 00 00       	push   0x0	100034df: R_386_32	ssfn_ctx
100034e3:	e8 fc ff ff ff       	call   100034e4 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	100034e4: R_386_PC32	ssfn_bbox
100034e8:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034eb:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
100034f3:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100034f7:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
100034ff:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10003503:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
10003508:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000350c:	0d 00 00 00 ff       	or     eax,0xff000000
10003511:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003515:	83 c4 1c             	add    esp,0x1c
10003518:	56                   	push   esi
10003519:	8d 44 24 20          	lea    eax,[esp+0x20]
1000351d:	50                   	push   eax
1000351e:	68 00 00 00 00       	push   0x0	1000351f: R_386_32	ssfn_ctx
10003523:	e8 fc ff ff ff       	call   10003524 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003524: R_386_PC32	ssfn_render
10003528:	83 c4 10             	add    esp,0x10
1000352b:	89 03                	mov    DWORD PTR [ebx],eax
1000352d:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10003531:	31 db                	xor    ebx,ebx
10003533:	89 f0                	mov    eax,esi
10003535:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
10003539:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000353d:	7e 3f                	jle    1000357e <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
1000353f:	31 ff                	xor    edi,edi
10003541:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003546:	39 f8                	cmp    eax,edi
10003548:	7e 2c                	jle    10003576 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
1000354a:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000354d:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
10003550:	83 f8 ff             	cmp    eax,0xffffffff
10003553:	74 1d                	je     10003572 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
10003555:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
1000355b:	25 ff ff ff 00       	and    eax,0xffffff
10003560:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003562:	50                   	push   eax
10003563:	56                   	push   esi
10003564:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10003568:	01 f8                	add    eax,edi
1000356a:	50                   	push   eax
1000356b:	52                   	push   edx
1000356c:	ff 51 24             	call   DWORD PTR [ecx+0x24]
1000356f:	83 c4 10             	add    esp,0x10
10003572:	43                   	inc    ebx
10003573:	47                   	inc    edi
10003574:	eb cb                	jmp    10003541 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
10003576:	29 c3                	sub    ebx,eax
10003578:	46                   	inc    esi
10003579:	83 c3 40             	add    ebx,0x40
1000357c:	eb b5                	jmp    10003533 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
1000357e:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
10003583:	83 c4 3c             	add    esp,0x3c
10003586:	5b                   	pop    ebx
10003587:	5e                   	pop    esi
10003588:	5f                   	pop    edi
10003589:	5d                   	pop    ebp
1000358a:	c3                   	ret    
1000358b:	90                   	nop

1000358c <NIContext::~NIContext()>:
1000358c:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	10003590: R_386_32	ssfn_ctx
10003594:	e9 00 db ff ff       	jmp    10001099 <ssfn_free>
10003599:	90                   	nop

1000359a <NIContext::NIContext(Video*, int, int, int, int)>:
1000359a:	55                   	push   ebp
1000359b:	ba 00 00 00 00       	mov    edx,0x0	1000359c: R_386_32	ssfn_ctx
100035a0:	57                   	push   edi
100035a1:	b9 72 3d 00 00       	mov    ecx,0x3d72
100035a6:	56                   	push   esi
100035a7:	89 d7                	mov    edi,edx
100035a9:	53                   	push   ebx
100035aa:	81 ec 48 02 00 00    	sub    esp,0x248
100035b0:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
100035b7:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
100035be:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
100035c4:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
100035cb:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
100035d1:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
100035d8:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
100035de:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
100035e5:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
100035eb:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
100035f2:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
100035f8:	31 c0                	xor    eax,eax
100035fa:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100035fc:	68 00 40 00 00       	push   0x4000
10003601:	e8 fc ff ff ff       	call   10003602 <NIContext::NIContext(Video*, int, int, int, int)+0x68>	10003602: R_386_PC32	malloc
10003606:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
10003610:	89 03                	mov    DWORD PTR [ebx],eax
10003612:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
10003619:	e8 fc ff ff ff       	call   1000361a <NIContext::NIContext(Video*, int, int, int, int)+0x80>	1000361a: R_386_PC32	malloc
1000361e:	83 c4 0c             	add    esp,0xc
10003621:	89 c6                	mov    esi,eax
10003623:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003625: R_386_32	kernelProcess
10003629:	68 91 49 00 10       	push   0x10004991	1000362a: R_386_32	.text
1000362e:	50                   	push   eax
1000362f:	e8 fc ff ff ff       	call   10003630 <NIContext::NIContext(Video*, int, int, int, int)+0x96>	10003630: R_386_PC32	Directory::Directory(char const*, Process*)
10003634:	83 c4 10             	add    esp,0x10
10003637:	85 f6                	test   esi,esi
10003639:	75 10                	jne    1000364b <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
1000363b:	83 ec 0c             	sub    esp,0xc
1000363e:	68 a5 49 00 10       	push   0x100049a5	1000363f: R_386_32	.text
10003643:	e8 fc ff ff ff       	call   10003644 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	10003644: R_386_PC32	KePanic(char const*)
10003648:	83 c4 10             	add    esp,0x10
1000364b:	83 ec 0c             	sub    esp,0xc
1000364e:	56                   	push   esi
1000364f:	e8 fc ff ff ff       	call   10003650 <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	10003650: R_386_PC32	Directory::open()
10003654:	83 c4 10             	add    esp,0x10
10003657:	85 c0                	test   eax,eax
10003659:	75 e0                	jne    1000363b <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
1000365b:	83 ec 0c             	sub    esp,0xc
1000365e:	8b 06                	mov    eax,DWORD PTR [esi]
10003660:	8d 4c 24 20          	lea    ecx,[esp+0x20]
10003664:	51                   	push   ecx
10003665:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
1000366c:	52                   	push   edx
1000366d:	6a 00                	push   0x0
1000366f:	68 10 01 00 00       	push   0x110
10003674:	56                   	push   esi
10003675:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003678:	83 c4 20             	add    esp,0x20
1000367b:	85 c0                	test   eax,eax
1000367d:	0f 85 a0 01 00 00    	jne    10003823 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003683:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
1000368b:	0f 85 92 01 00 00    	jne    10003823 <NIContext::NIContext(Video*, int, int, int, int)+0x289>
10003691:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
10003698:	83 c9 ff             	or     ecx,0xffffffff
1000369b:	83 ec 0c             	sub    esp,0xc
1000369e:	89 ef                	mov    edi,ebp
100036a0:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
100036a2:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
100036a8:	89 ca                	mov    edx,ecx
100036aa:	f7 d2                	not    edx
100036ac:	52                   	push   edx
100036ad:	e8 fc ff ff ff       	call   100036ae <NIContext::NIContext(Video*, int, int, int, int)+0x114>	100036ae: R_386_PC32	malloc
100036b2:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
100036b6:	47                   	inc    edi
100036b7:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
100036bd:	5a                   	pop    edx
100036be:	59                   	pop    ecx
100036bf:	55                   	push   ebp
100036c0:	50                   	push   eax
100036c1:	e8 fc ff ff ff       	call   100036c2 <NIContext::NIContext(Video*, int, int, int, int)+0x128>	100036c2: R_386_PC32	strcpy
100036c6:	5f                   	pop    edi
100036c7:	58                   	pop    eax
100036c8:	68 c0 49 00 10       	push   0x100049c0	100036c9: R_386_32	.text
100036cd:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
100036d1:	57                   	push   edi
100036d2:	e8 fc ff ff ff       	call   100036d3 <NIContext::NIContext(Video*, int, int, int, int)+0x139>	100036d3: R_386_PC32	strcpy
100036d7:	58                   	pop    eax
100036d8:	5a                   	pop    edx
100036d9:	55                   	push   ebp
100036da:	57                   	push   edi
100036db:	e8 fc ff ff ff       	call   100036dc <NIContext::NIContext(Video*, int, int, int, int)+0x142>	100036dc: R_386_PC32	strcat
100036e0:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
100036e7:	e8 fc ff ff ff       	call   100036e8 <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	100036e8: R_386_PC32	malloc
100036ec:	83 c4 0c             	add    esp,0xc
100036ef:	89 c5                	mov    ebp,eax
100036f1:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100036f3: R_386_32	kernelProcess
100036f7:	57                   	push   edi
100036f8:	50                   	push   eax
100036f9:	e8 fc ff ff ff       	call   100036fa <NIContext::NIContext(Video*, int, int, int, int)+0x160>	100036fa: R_386_PC32	File::File(char const*, Process*)
100036fe:	83 c4 10             	add    esp,0x10
10003701:	85 ed                	test   ebp,ebp
10003703:	0f 84 52 ff ff ff    	je     1000365b <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003709:	50                   	push   eax
1000370a:	50                   	push   eax
1000370b:	6a 01                	push   0x1
1000370d:	55                   	push   ebp
1000370e:	e8 fc ff ff ff       	call   1000370f <NIContext::NIContext(Video*, int, int, int, int)+0x175>	1000370f: R_386_PC32	File::open(FileOpenMode)
10003713:	83 c4 10             	add    esp,0x10
10003716:	85 c0                	test   eax,eax
10003718:	74 0c                	je     10003726 <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
1000371a:	83 ec 0c             	sub    esp,0xc
1000371d:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003720:	55                   	push   ebp
10003721:	e9 b4 00 00 00       	jmp    100037da <NIContext::NIContext(Video*, int, int, int, int)+0x240>
10003726:	50                   	push   eax
10003727:	8d 44 24 17          	lea    eax,[esp+0x17]
1000372b:	50                   	push   eax
1000372c:	8d 44 24 20          	lea    eax,[esp+0x20]
10003730:	50                   	push   eax
10003731:	55                   	push   ebp
10003732:	e8 fc ff ff ff       	call   10003733 <NIContext::NIContext(Video*, int, int, int, int)+0x199>	10003733: R_386_PC32	File::stat(unsigned long long*, bool*)
10003737:	83 c4 10             	add    esp,0x10
1000373a:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
1000373f:	74 0e                	je     1000374f <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
10003741:	83 ec 0c             	sub    esp,0xc
10003744:	55                   	push   ebp
10003745:	e8 fc ff ff ff       	call   10003746 <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	10003746: R_386_PC32	File::close()
1000374a:	e9 85 00 00 00       	jmp    100037d4 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
1000374f:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10003753:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10003757:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000375b:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
1000375f:	83 ec 0c             	sub    esp,0xc
10003762:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
10003766:	e8 fc ff ff ff       	call   10003767 <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	10003767: R_386_PC32	malloc
1000376b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000376f:	58                   	pop    eax
10003770:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003773:	8d 54 24 20          	lea    edx,[esp+0x20]
10003777:	52                   	push   edx
10003778:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
1000377c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003780:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003784:	55                   	push   ebp
10003785:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10003788:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000378c:	83 c4 1c             	add    esp,0x1c
1000378f:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003793:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003797:	68 d5 49 00 10       	push   0x100049d5	10003798: R_386_32	.text
1000379c:	e8 fc ff ff ff       	call   1000379d <NIContext::NIContext(Video*, int, int, int, int)+0x203>	1000379d: R_386_PC32	Dbg::kprintf(char const*, ...)
100037a1:	83 c4 10             	add    esp,0x10
100037a4:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100037a8:	85 c0                	test   eax,eax
100037aa:	75 15                	jne    100037c1 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037ac:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100037b0:	89 c1                	mov    ecx,eax
100037b2:	c1 f9 1f             	sar    ecx,0x1f
100037b5:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
100037b9:	75 06                	jne    100037c1 <NIContext::NIContext(Video*, int, int, int, int)+0x227>
100037bb:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
100037bf:	74 24                	je     100037e5 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
100037c1:	83 ec 0c             	sub    esp,0xc
100037c4:	55                   	push   ebp
100037c5:	e8 fc ff ff ff       	call   100037c6 <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	100037c6: R_386_PC32	File::close()
100037ca:	58                   	pop    eax
100037cb:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100037cf:	e8 fc ff ff ff       	call   100037d0 <NIContext::NIContext(Video*, int, int, int, int)+0x236>	100037d0: R_386_PC32	free
100037d4:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100037d7:	89 2c 24             	mov    DWORD PTR [esp],ebp
100037da:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037dd:	83 c4 10             	add    esp,0x10
100037e0:	e9 76 fe ff ff       	jmp    1000365b <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
100037e5:	50                   	push   eax
100037e6:	50                   	push   eax
100037e7:	57                   	push   edi
100037e8:	68 e9 49 00 10       	push   0x100049e9	100037e9: R_386_32	.text
100037ed:	e8 fc ff ff ff       	call   100037ee <NIContext::NIContext(Video*, int, int, int, int)+0x254>	100037ee: R_386_PC32	Dbg::kprintf(char const*, ...)
100037f2:	5a                   	pop    edx
100037f3:	59                   	pop    ecx
100037f4:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100037f8:	68 00 00 00 00       	push   0x0	100037f9: R_386_32	ssfn_ctx
100037fd:	e8 fc ff ff ff       	call   100037fe <NIContext::NIContext(Video*, int, int, int, int)+0x264>	100037fe: R_386_PC32	ssfn_load
10003802:	5b                   	pop    ebx
10003803:	5f                   	pop    edi
10003804:	50                   	push   eax
10003805:	68 fa 49 00 10       	push   0x100049fa	10003806: R_386_32	.text
1000380a:	e8 fc ff ff ff       	call   1000380b <NIContext::NIContext(Video*, int, int, int, int)+0x271>	1000380b: R_386_PC32	Dbg::kprintf(char const*, ...)
1000380f:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003812:	e8 fc ff ff ff       	call   10003813 <NIContext::NIContext(Video*, int, int, int, int)+0x279>	10003813: R_386_PC32	File::close()
10003817:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000381a:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000381d:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003820:	83 c4 10             	add    esp,0x10
10003823:	83 ec 0c             	sub    esp,0xc
10003826:	56                   	push   esi
10003827:	e8 fc ff ff ff       	call   10003828 <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	10003828: R_386_PC32	Directory::close()
1000382c:	8b 06                	mov    eax,DWORD PTR [esi]
1000382e:	89 34 24             	mov    DWORD PTR [esp],esi
10003831:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003834:	b8 00 00 00 00       	mov    eax,0x0	10003835: R_386_32	ssfn_ctx
10003839:	e8 f7 cb ff ff       	call   10000435 <_ssfn_fc.part.1>
1000383e:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	10003840: R_386_32	ssfn_ctx
10003848:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	1000384a: R_386_32	ssfn_ctx
10003852:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	10003854: R_386_32	ssfn_ctx
1000385c:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	1000385e: R_386_32	ssfn_ctx
10003866:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	10003868: R_386_32	ssfn_ctx
10003870:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	10003872: R_386_32	ssfn_ctx
1000387a:	81 c4 4c 02 00 00    	add    esp,0x24c
10003880:	5b                   	pop    ebx
10003881:	5e                   	pop    esi
10003882:	5f                   	pop    edi
10003883:	5d                   	pop    ebp
10003884:	c3                   	ret    
10003885:	90                   	nop

10003886 <NIDesktop::NIDesktop(NIContext*)>:
10003886:	53                   	push   ebx
10003887:	83 ec 14             	sub    esp,0x14
1000388a:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000388e:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10003892:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
10003899:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000389c:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
100038a3:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100038aa:	6a 08                	push   0x8
100038ac:	e8 fc ff ff ff       	call   100038ad <NIDesktop::NIDesktop(NIContext*)+0x27>	100038ad: R_386_PC32	malloc
100038b1:	89 03                	mov    DWORD PTR [ebx],eax
100038b3:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100038ba:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100038c0:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	100038c2: R_386_32	mouseDesktop
100038c6:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100038c8: R_386_32	guiMouseHandler
	100038cc: R_386_32	clipdrawHandleMouse(int, int, int, int)
100038d0:	83 c4 18             	add    esp,0x18
100038d3:	5b                   	pop    ebx
100038d4:	c3                   	ret    
100038d5:	90                   	nop

100038d6 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
100038d6:	53                   	push   ebx
100038d7:	83 ec 08             	sub    esp,0x8
100038da:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100038de:	8b 00                	mov    eax,DWORD PTR [eax]
100038e0:	8b 18                	mov    ebx,DWORD PTR [eax]
100038e2:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
100038e6:	74 1d                	je     10003905 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
100038e8:	8b 03                	mov    eax,DWORD PTR [ebx]
100038ea:	85 c0                	test   eax,eax
100038ec:	74 12                	je     10003900 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038ee:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
100038f2:	74 0c                	je     10003900 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
100038f4:	83 ec 0c             	sub    esp,0xc
100038f7:	50                   	push   eax
100038f8:	e8 fc ff ff ff       	call   100038f9 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	100038f9: R_386_PC32	NIWindow::invalidate()
100038fd:	83 c4 10             	add    esp,0x10
10003900:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
10003903:	eb dd                	jmp    100038e2 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003905:	83 c4 08             	add    esp,0x8
10003908:	5b                   	pop    ebx
10003909:	c3                   	ret    

1000390a <NIDesktop::getTopmostWindowAtPixel(int, int)>:
1000390a:	57                   	push   edi
1000390b:	56                   	push   esi
1000390c:	53                   	push   ebx
1000390d:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003911:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003915:	8b 00                	mov    eax,DWORD PTR [eax]
10003917:	8b 00                	mov    eax,DWORD PTR [eax]
10003919:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
1000391c:	85 db                	test   ebx,ebx
1000391e:	74 43                	je     10003963 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
10003920:	8b 00                	mov    eax,DWORD PTR [eax]
10003922:	85 c0                	test   eax,eax
10003924:	74 3f                	je     10003965 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003926:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003929:	39 ca                	cmp    edx,ecx
1000392b:	7e 04                	jle    10003931 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
1000392d:	89 d8                	mov    eax,ebx
1000392f:	eb e8                	jmp    10003919 <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
10003931:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003934:	01 d6                	add    esi,edx
10003936:	39 ce                	cmp    esi,ecx
10003938:	7e f3                	jle    1000392d <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
1000393a:	89 ce                	mov    esi,ecx
1000393c:	29 d6                	sub    esi,edx
1000393e:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
10003941:	8d 34 b2             	lea    esi,[edx+esi*4]
10003944:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10003947:	0f b7 3e             	movzx  edi,WORD PTR [esi]
1000394a:	01 d7                	add    edi,edx
1000394c:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
10003950:	7f db                	jg     1000392d <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003952:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
10003955:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003959:	29 f2                	sub    edx,esi
1000395b:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
1000395f:	7e cc                	jle    1000392d <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
10003961:	eb 02                	jmp    10003965 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003963:	31 c0                	xor    eax,eax
10003965:	5b                   	pop    ebx
10003966:	5e                   	pop    esi
10003967:	5f                   	pop    edi
10003968:	c3                   	ret    
10003969:	90                   	nop

1000396a <NIDesktop::renderScanline(int, int, int)>:
1000396a:	55                   	push   ebp
1000396b:	57                   	push   edi
1000396c:	56                   	push   esi
1000396d:	53                   	push   ebx
1000396e:	83 ec 2c             	sub    esp,0x2c
10003971:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003975:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
10003979:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000397d:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003981:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003985:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	10003987: R_386_32	render
1000398b:	31 c0                	xor    eax,eax
1000398d:	89 d7                	mov    edi,edx
1000398f:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003991:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003995:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10003999:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	1000399b: R_386_32	shadow
1000399f:	b0 80                	mov    al,0x80
100039a1:	89 d7                	mov    edi,edx
100039a3:	f3 aa                	rep stos BYTE PTR es:[edi],al
100039a5:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100039a9:	8b 00                	mov    eax,DWORD PTR [eax]
100039ab:	8b 00                	mov    eax,DWORD PTR [eax]
100039ad:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039b1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100039b5:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100039b9:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100039bb: R_386_32	movingWin
100039bf:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100039c3:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100039c6:	85 c0                	test   eax,eax
100039c8:	75 09                	jne    100039d3 <NIDesktop::renderScanline(int, int, int)+0x69>
100039ca:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100039ce:	e9 cf 02 00 00       	jmp    10003ca2 <NIDesktop::renderScanline(int, int, int)+0x338>
100039d3:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100039d7:	8b 1f                	mov    ebx,DWORD PTR [edi]
100039d9:	85 db                	test   ebx,ebx
100039db:	74 ed                	je     100039ca <NIDesktop::renderScanline(int, int, int)+0x60>
100039dd:	39 da                	cmp    edx,ebx
100039df:	75 06                	jne    100039e7 <NIDesktop::renderScanline(int, int, int)+0x7d>
100039e1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100039e5:	eb d8                	jmp    100039bf <NIDesktop::renderScanline(int, int, int)+0x55>
100039e7:	83 ec 0c             	sub    esp,0xc
100039ea:	53                   	push   ebx
100039eb:	e8 fc ff ff ff       	call   100039ec <NIDesktop::renderScanline(int, int, int)+0x82>	100039ec: R_386_PC32	NIWindow::request()
100039f0:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
100039f3:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
100039f6:	83 c4 10             	add    esp,0x10
100039f9:	01 c2                	add    edx,eax
100039fb:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
100039ff:	0f 8e ad 00 00 00    	jle    10003ab2 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a05:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a09:	0f 85 a3 00 00 00    	jne    10003ab2 <NIDesktop::renderScanline(int, int, int)+0x148>
10003a0f:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a13:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003a16:	83 c0 06             	add    eax,0x6
10003a19:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003a1d:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a20:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10003a23:	01 c8                	add    eax,ecx
10003a25:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003a29:	39 d0                	cmp    eax,edx
10003a2b:	0f 8e 40 01 00 00    	jle    10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a31:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
10003a35:	7c 75                	jl     10003aac <NIDesktop::renderScanline(int, int, int)+0x142>
10003a37:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
10003a3b:	0f 8f 30 01 00 00    	jg     10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003a41:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
10003a44:	89 d5                	mov    ebp,edx
10003a46:	6b fe fc             	imul   edi,esi,0xfffffffc
10003a49:	29 cd                	sub    ebp,ecx
10003a4b:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10003a4f:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
10003a53:	39 f0                	cmp    eax,esi
10003a55:	7c 1d                	jl     10003a74 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a57:	8d 0c 87             	lea    ecx,[edi+eax*4]
10003a5a:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
10003a5d:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
10003a60:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
10003a64:	7f 0e                	jg     10003a74 <NIDesktop::renderScanline(int, int, int)+0x10a>
10003a66:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
10003a6a:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
10003a6e:	29 cd                	sub    ebp,ecx
10003a70:	39 d5                	cmp    ebp,edx
10003a72:	7d 07                	jge    10003a7b <NIDesktop::renderScanline(int, int, int)+0x111>
10003a74:	40                   	inc    eax
10003a75:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
10003a79:	75 d8                	jne    10003a53 <NIDesktop::renderScanline(int, int, int)+0xe9>
10003a7b:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
10003a7f:	48                   	dec    eax
10003a80:	83 f8 03             	cmp    eax,0x3
10003a83:	77 27                	ja     10003aac <NIDesktop::renderScanline(int, int, int)+0x142>
10003a85:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003a87: R_386_32	render
10003a8c:	75 1e                	jne    10003aac <NIDesktop::renderScanline(int, int, int)+0x142>
10003a8e:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a95:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a98: R_386_32	shadow
10003a9c:	0f af c1             	imul   eax,ecx
10003a9f:	d1 f9                	sar    ecx,1
10003aa1:	c1 f8 08             	sar    eax,0x8
10003aa4:	01 c1                	add    ecx,eax
10003aa6:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003aa8: R_386_32	shadow
10003aac:	42                   	inc    edx
10003aad:	e9 6b ff ff ff       	jmp    10003a1d <NIDesktop::renderScanline(int, int, int)+0xb3>
10003ab2:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003ab6:	0f 8d b5 00 00 00    	jge    10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003abc:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003ac0:	0f 85 ab 00 00 00    	jne    10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ac6:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003aca:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003acd:	8d 77 fa             	lea    esi,[edi-0x6]
10003ad0:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10003ad4:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003ad7:	8b 73 20             	mov    esi,DWORD PTR [ebx+0x20]
10003ada:	01 ce                	add    esi,ecx
10003adc:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10003ae0:	39 c6                	cmp    esi,eax
10003ae2:	0f 8e 89 00 00 00    	jle    10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003ae8:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003aec:	7c 7d                	jl     10003b6b <NIDesktop::renderScanline(int, int, int)+0x201>
10003aee:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003af2:	7f 7d                	jg     10003b71 <NIDesktop::renderScanline(int, int, int)+0x207>
10003af4:	89 c7                	mov    edi,eax
10003af6:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003afa:	29 cf                	sub    edi,ecx
10003afc:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10003b00:	4a                   	dec    edx
10003b01:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003b05:	29 d1                	sub    ecx,edx
10003b07:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003b0b:	74 32                	je     10003b3f <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b0d:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003b10:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003b13:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003b16:	39 d5                	cmp    ebp,edx
10003b18:	7e e6                	jle    10003b00 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b1a:	89 d5                	mov    ebp,edx
10003b1c:	29 fd                	sub    ebp,edi
10003b1e:	39 ee                	cmp    esi,ebp
10003b20:	7e 1d                	jle    10003b3f <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003b22:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003b25:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003b28:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003b2b:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003b2f:	7f cf                	jg     10003b00 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b31:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003b35:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10003b39:	29 f7                	sub    edi,esi
10003b3b:	39 c7                	cmp    edi,eax
10003b3d:	7c c1                	jl     10003b00 <NIDesktop::renderScanline(int, int, int)+0x196>
10003b3f:	83 f9 04             	cmp    ecx,0x4
10003b42:	77 27                	ja     10003b6b <NIDesktop::renderScanline(int, int, int)+0x201>
10003b44:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003b46: R_386_32	render
10003b4b:	75 1e                	jne    10003b6b <NIDesktop::renderScanline(int, int, int)+0x201>
10003b4d:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003b54:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003b57: R_386_32	shadow
10003b5b:	0f af d1             	imul   edx,ecx
10003b5e:	d1 f9                	sar    ecx,1
10003b60:	c1 fa 08             	sar    edx,0x8
10003b63:	01 d1                	add    ecx,edx
10003b65:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003b67: R_386_32	shadow
10003b6b:	40                   	inc    eax
10003b6c:	e9 63 ff ff ff       	jmp    10003ad4 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003b71:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003b74:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003b78:	0f 8f 00 01 00 00    	jg     10003c7e <NIDesktop::renderScanline(int, int, int)+0x314>
10003b7e:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003b81:	01 c2                	add    edx,eax
10003b83:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003b87:	0f 8e f1 00 00 00    	jle    10003c7e <NIDesktop::renderScanline(int, int, int)+0x314>
10003b8d:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003b91:	29 c2                	sub    edx,eax
10003b93:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003b96:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b9a:	8d 14 90             	lea    edx,[eax+edx*4]
10003b9d:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003ba0:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10003ba4:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003ba8:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003bac:	74 09                	je     10003bb7 <NIDesktop::renderScanline(int, int, int)+0x24d>
10003bae:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bb2:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003bb5:	eb 78                	jmp    10003c2f <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003bb7:	31 c9                	xor    ecx,ecx
10003bb9:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003bbc:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10003bc0:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003bc4:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003bc7:	01 cd                	add    ebp,ecx
10003bc9:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003bcd:	01 ca                	add    edx,ecx
10003bcf:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003bd1: R_386_32	render
10003bd6:	75 1f                	jne    10003bf7 <NIDesktop::renderScanline(int, int, int)+0x28d>
10003bd8:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003bdb: R_386_32	shadow
10003bdf:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003be2:	83 c7 7d             	add    edi,0x7d
10003be5:	0f af f7             	imul   esi,edi
10003be8:	d1 ff                	sar    edi,1
10003bea:	c1 fe 08             	sar    esi,0x8
10003bed:	01 f7                	add    edi,esi
10003bef:	89 f8                	mov    eax,edi
10003bf1:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003bf3: R_386_32	shadow
10003bf7:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003bf9: R_386_32	render
10003bfe:	75 20                	jne    10003c20 <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003c00:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003c07:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003c0a: R_386_32	shadow
10003c0e:	0f af f7             	imul   esi,edi
10003c11:	d1 ff                	sar    edi,1
10003c13:	c1 fe 08             	sar    esi,0x8
10003c16:	01 f7                	add    edi,esi
10003c18:	89 f8                	mov    eax,edi
10003c1a:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003c1c: R_386_32	shadow
10003c20:	41                   	inc    ecx
10003c21:	83 f9 04             	cmp    ecx,0x4
10003c24:	75 93                	jne    10003bb9 <NIDesktop::renderScanline(int, int, int)+0x24f>
10003c26:	eb 86                	jmp    10003bae <NIDesktop::renderScanline(int, int, int)+0x244>
10003c28:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003c2c:	7d 11                	jge    10003c3f <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003c2e:	40                   	inc    eax
10003c2f:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003c32:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003c35:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003c39:	39 c2                	cmp    edx,eax
10003c3b:	7f eb                	jg     10003c28 <NIDesktop::renderScanline(int, int, int)+0x2be>
10003c3d:	eb 3f                	jmp    10003c7e <NIDesktop::renderScanline(int, int, int)+0x314>
10003c3f:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003c43:	7f 39                	jg     10003c7e <NIDesktop::renderScanline(int, int, int)+0x314>
10003c45:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c47: R_386_32	render
10003c4c:	75 e0                	jne    10003c2e <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c4e:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003c50: R_386_32	render
10003c55:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003c59:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003c5c:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003c5f:	0f af ca             	imul   ecx,edx
10003c62:	89 c2                	mov    edx,eax
10003c64:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003c67:	01 ca                	add    edx,ecx
10003c69:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003c6c:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003c70:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003c73:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003c76: R_386_32	renderData
10003c7a:	75 b2                	jne    10003c2e <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003c7c:	eb 44                	jmp    10003cc2 <NIDesktop::renderScanline(int, int, int)+0x358>
10003c7e:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003c82:	0f 85 42 fd ff ff    	jne    100039ca <NIDesktop::renderScanline(int, int, int)+0x60>
10003c88:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003c8c:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c8f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10003c93:	e9 21 fd ff ff       	jmp    100039b9 <NIDesktop::renderScanline(int, int, int)+0x4f>
10003c98:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003c9a: R_386_32	render
10003c9f:	74 09                	je     10003caa <NIDesktop::renderScanline(int, int, int)+0x340>
10003ca1:	40                   	inc    eax
10003ca2:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003ca6:	7c f0                	jl     10003c98 <NIDesktop::renderScanline(int, int, int)+0x32e>
10003ca8:	eb 18                	jmp    10003cc2 <NIDesktop::renderScanline(int, int, int)+0x358>
10003caa:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003cac: R_386_32	render
10003cb1:	c7 04 85 00 00 00 00 ff 80 55 00 	mov    DWORD PTR [eax*4+0x0],0x5580ff	10003cb4: R_386_32	renderData
10003cbc:	ff 4c 24 14          	dec    DWORD PTR [esp+0x14]
10003cc0:	75 df                	jne    10003ca1 <NIDesktop::renderScanline(int, int, int)+0x337>
10003cc2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cc6:	8b 00                	mov    eax,DWORD PTR [eax]
10003cc8:	8b 00                	mov    eax,DWORD PTR [eax]
10003cca:	85 c0                	test   eax,eax
10003ccc:	74 5e                	je     10003d2c <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cce:	8b 00                	mov    eax,DWORD PTR [eax]
10003cd0:	85 c0                	test   eax,eax
10003cd2:	74 58                	je     10003d2c <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cd4:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003cd8:	75 52                	jne    10003d2c <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cda:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003cde:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003ce2:	7d 48                	jge    10003d2c <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003ce4:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003ce6: R_386_32	shadow
10003cea:	3c 80                	cmp    al,0x80
10003cec:	74 3b                	je     10003d29 <NIDesktop::renderScanline(int, int, int)+0x3bf>
10003cee:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003cf1: R_386_32	renderData
10003cf5:	0f b6 f0             	movzx  esi,al
10003cf8:	89 d1                	mov    ecx,edx
10003cfa:	0f b6 c6             	movzx  eax,dh
10003cfd:	c1 e9 10             	shr    ecx,0x10
10003d00:	0f af c6             	imul   eax,esi
10003d03:	0f b6 c9             	movzx  ecx,cl
10003d06:	0f b6 d2             	movzx  edx,dl
10003d09:	0f af ce             	imul   ecx,esi
10003d0c:	0f af d6             	imul   edx,esi
10003d0f:	c1 e9 07             	shr    ecx,0x7
10003d12:	c1 e8 07             	shr    eax,0x7
10003d15:	c1 e1 10             	shl    ecx,0x10
10003d18:	c1 e0 08             	shl    eax,0x8
10003d1b:	c1 ea 07             	shr    edx,0x7
10003d1e:	09 c1                	or     ecx,eax
10003d20:	09 ca                	or     edx,ecx
10003d22:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003d25: R_386_32	renderData
10003d29:	43                   	inc    ebx
10003d2a:	eb b2                	jmp    10003cde <NIDesktop::renderScanline(int, int, int)+0x374>
10003d2c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003d30:	83 ec 0c             	sub    esp,0xc
10003d33:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003d36:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d3c:	8b 10                	mov    edx,DWORD PTR [eax]
10003d3e:	68 00 00 00 00       	push   0x0	10003d3f: R_386_32	renderData
10003d43:	6a 00                	push   0x0
10003d45:	6a 01                	push   0x1
10003d47:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10003d4b:	6a 00                	push   0x0
10003d4d:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d51:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10003d55:	ff 74 24 70          	push   DWORD PTR [esp+0x70]
10003d59:	50                   	push   eax
10003d5a:	ff 52 38             	call   DWORD PTR [edx+0x38]
10003d5d:	83 c4 5c             	add    esp,0x5c
10003d60:	5b                   	pop    ebx
10003d61:	5e                   	pop    esi
10003d62:	5f                   	pop    edi
10003d63:	5d                   	pop    ebp
10003d64:	c3                   	ret    
10003d65:	90                   	nop

10003d66 <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d66:	53                   	push   ebx
10003d67:	83 ec 08             	sub    esp,0x8
10003d6a:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d6e:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d72:	7d 18                	jge    10003d8c <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d74:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d78:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d7c:	53                   	push   ebx
10003d7d:	43                   	inc    ebx
10003d7e:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d82:	e8 fc ff ff ff       	call   10003d83 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d83: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d87:	83 c4 10             	add    esp,0x10
10003d8a:	eb e2                	jmp    10003d6e <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d8c:	83 c4 08             	add    esp,0x8
10003d8f:	5b                   	pop    ebx
10003d90:	c3                   	ret    
10003d91:	90                   	nop

10003d92 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d92:	55                   	push   ebp
10003d93:	ba 05 00 00 00       	mov    edx,0x5
10003d98:	57                   	push   edi
10003d99:	56                   	push   esi
10003d9a:	53                   	push   ebx
10003d9b:	83 ec 0c             	sub    esp,0xc
10003d9e:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003da2:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003da5:	83 f8 05             	cmp    eax,0x5
10003da8:	7c 02                	jl     10003dac <NIDesktop::refreshWindowBounds(NIWindow*)+0x1a>
10003daa:	89 c2                	mov    edx,eax
10003dac:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003db0:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003db3:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003db6:	83 ea 05             	sub    edx,0x5
10003db9:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003dbf:	8d 70 05             	lea    esi,[eax+0x5]
10003dc2:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003dc5:	39 c5                	cmp    ebp,eax
10003dc7:	7f 03                	jg     10003dcc <NIDesktop::refreshWindowBounds(NIWindow*)+0x3a>
10003dc9:	8d 71 ff             	lea    esi,[ecx-0x1]
10003dcc:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003dcf:	89 c1                	mov    ecx,eax
10003dd1:	83 f8 05             	cmp    eax,0x5
10003dd4:	7d 05                	jge    10003ddb <NIDesktop::refreshWindowBounds(NIWindow*)+0x49>
10003dd6:	b9 05 00 00 00       	mov    ecx,0x5
10003ddb:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003dde:	83 e9 05             	sub    ecx,0x5
10003de1:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003de7:	8d 58 05             	lea    ebx,[eax+0x5]
10003dea:	8d 6f fb             	lea    ebp,[edi-0x5]
10003ded:	39 c5                	cmp    ebp,eax
10003def:	7f 03                	jg     10003df4 <NIDesktop::refreshWindowBounds(NIWindow*)+0x62>
10003df1:	8d 5f ff             	lea    ebx,[edi-0x1]
10003df4:	83 ec 0c             	sub    esp,0xc
10003df7:	53                   	push   ebx
10003df8:	51                   	push   ecx
10003df9:	56                   	push   esi
10003dfa:	52                   	push   edx
10003dfb:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003dff:	e8 fc ff ff ff       	call   10003e00 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6e>	10003e00: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003e04:	83 c4 2c             	add    esp,0x2c
10003e07:	5b                   	pop    ebx
10003e08:	5e                   	pop    esi
10003e09:	5f                   	pop    edi
10003e0a:	5d                   	pop    ebp
10003e0b:	c3                   	ret    

10003e0c <NIDesktop::completeRefresh()>:
10003e0c:	56                   	push   esi
10003e0d:	53                   	push   ebx
10003e0e:	31 f6                	xor    esi,esi
10003e10:	50                   	push   eax
10003e11:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003e15:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003e18:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003e1e:	7e 15                	jle    10003e35 <NIDesktop::completeRefresh()+0x29>
10003e20:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003e26:	6a 00                	push   0x0
10003e28:	56                   	push   esi
10003e29:	46                   	inc    esi
10003e2a:	53                   	push   ebx
10003e2b:	e8 fc ff ff ff       	call   10003e2c <NIDesktop::completeRefresh()+0x20>	10003e2c: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003e30:	83 c4 10             	add    esp,0x10
10003e33:	eb e0                	jmp    10003e15 <NIDesktop::completeRefresh()+0x9>
10003e35:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003e3b:	83 ec 0c             	sub    esp,0xc
10003e3e:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e40:	6a 00                	push   0x0
10003e42:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e45:	05 00 00 00 00       	add    eax,0x0	10003e46: R_386_32	___mouse_data
10003e4a:	50                   	push   eax
10003e4b:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e4e:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e51:	52                   	push   edx
10003e52:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e55:	83 c4 24             	add    esp,0x24
10003e58:	5b                   	pop    ebx
10003e59:	5e                   	pop    esi
10003e5a:	c3                   	ret    
10003e5b:	90                   	nop

10003e5c <NIDesktop::addWindow(NIWindow*)>:
10003e5c:	56                   	push   esi
10003e5d:	53                   	push   ebx
10003e5e:	83 ec 0c             	sub    esp,0xc
10003e61:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e65:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e69:	56                   	push   esi
10003e6a:	ff 33                	push   DWORD PTR [ebx]
10003e6c:	e8 fc ff ff ff       	call   10003e6d <NIDesktop::addWindow(NIWindow*)+0x11>	10003e6d: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e71:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e75:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e79:	83 c4 14             	add    esp,0x14
10003e7c:	5b                   	pop    ebx
10003e7d:	5e                   	pop    esi
10003e7e:	e9 0f ff ff ff       	jmp    10003d92 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e83:	90                   	nop

10003e84 <NIDesktop::raiseWindow(NIWindow*)>:
10003e84:	53                   	push   ebx
10003e85:	83 ec 10             	sub    esp,0x10
10003e88:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e8c:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e90:	50                   	push   eax
10003e91:	ff 33                	push   DWORD PTR [ebx]
10003e93:	e8 fc ff ff ff       	call   10003e94 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e94: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e98:	58                   	pop    eax
10003e99:	5a                   	pop    edx
10003e9a:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e9e:	ff 33                	push   DWORD PTR [ebx]
10003ea0:	e8 fc ff ff ff       	call   10003ea1 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003ea1: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003ea5:	59                   	pop    ecx
10003ea6:	58                   	pop    eax
10003ea7:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003eab:	53                   	push   ebx
10003eac:	e8 fc ff ff ff       	call   10003ead <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003ead: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003eb1:	83 c4 18             	add    esp,0x18
10003eb4:	5b                   	pop    ebx
10003eb5:	c3                   	ret    

10003eb6 <NIDesktop::deleteWindow(NIWindow*)>:
10003eb6:	53                   	push   ebx
10003eb7:	83 ec 10             	sub    esp,0x10
10003eba:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003ebe:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003ec2:	50                   	push   eax
10003ec3:	ff 33                	push   DWORD PTR [ebx]
10003ec5:	e8 fc ff ff ff       	call   10003ec6 <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003ec6: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003eca:	58                   	pop    eax
10003ecb:	5a                   	pop    edx
10003ecc:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003ed0:	53                   	push   ebx
10003ed1:	e8 fc ff ff ff       	call   10003ed2 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003ed2: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003ed6:	83 c4 18             	add    esp,0x18
10003ed9:	5b                   	pop    ebx
10003eda:	c3                   	ret    
10003edb:	90                   	nop

10003edc <NIDesktop::handleMouse(int, int, int, int)>:
10003edc:	55                   	push   ebp
10003edd:	57                   	push   edi
10003ede:	56                   	push   esi
10003edf:	53                   	push   ebx
10003ee0:	83 ec 28             	sub    esp,0x28
10003ee3:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003ee7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003eea:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003eed:	8d 4a 20             	lea    ecx,[edx+0x20]
10003ef0:	51                   	push   ecx
10003ef1:	52                   	push   edx
10003ef2:	8d 50 20             	lea    edx,[eax+0x20]
10003ef5:	52                   	push   edx
10003ef6:	50                   	push   eax
10003ef7:	53                   	push   ebx
10003ef8:	e8 fc ff ff ff       	call   10003ef9 <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003ef9: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003efd:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003f00:	8b 6b 08             	mov    ebp,DWORD PTR [ebx+0x8]
10003f03:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003f07:	8b 54 24 54          	mov    edx,DWORD PTR [esp+0x54]
10003f0b:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003f0f:	01 ea                	add    edx,ebp
10003f11:	83 c4 20             	add    esp,0x20
10003f14:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003f17:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f1a:	85 d2                	test   edx,edx
10003f1c:	79 07                	jns    10003f25 <NIDesktop::handleMouse(int, int, int, int)+0x49>
10003f1e:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003f25:	85 c0                	test   eax,eax
10003f27:	79 07                	jns    10003f30 <NIDesktop::handleMouse(int, int, int, int)+0x54>
10003f29:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003f30:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003f33:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f39:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f3c:	7f 04                	jg     10003f42 <NIDesktop::handleMouse(int, int, int, int)+0x66>
10003f3e:	48                   	dec    eax
10003f3f:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f42:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f48:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f4b:	7f 04                	jg     10003f51 <NIDesktop::handleMouse(int, int, int, int)+0x75>
10003f4d:	48                   	dec    eax
10003f4e:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f51:	50                   	push   eax
10003f52:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f55:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f58:	53                   	push   ebx
10003f59:	e8 fc ff ff ff       	call   10003f5a <NIDesktop::handleMouse(int, int, int, int)+0x7e>	10003f5a: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f5e:	83 c4 10             	add    esp,0x10
10003f61:	89 c6                	mov    esi,eax
10003f63:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f67:	83 e0 01             	and    eax,0x1
10003f6a:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f6c: R_386_32	movingWin
10003f71:	0f 84 37 02 00 00    	je     100041ae <NIDesktop::handleMouse(int, int, int, int)+0x2d2>
10003f77:	c6 44 24 08 00       	mov    BYTE PTR [esp+0x8],0x0
10003f7c:	85 c0                	test   eax,eax
10003f7e:	75 0c                	jne    10003f8c <NIDesktop::handleMouse(int, int, int, int)+0xb0>
10003f80:	a0 98 7f 03 10       	mov    al,ds:0x10037f98	10003f81: R_386_32	.bss
10003f85:	83 e0 01             	and    eax,0x1
10003f88:	88 44 24 08          	mov    BYTE PTR [esp+0x8],al
10003f8c:	bf 01 00 00 00       	mov    edi,0x1
10003f91:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f92: R_386_32	movingWin
10003f96:	8b 48 24             	mov    ecx,DWORD PTR [eax+0x24]
10003f99:	8d 51 ff             	lea    edx,[ecx-0x1]
10003f9c:	39 fa                	cmp    edx,edi
10003f9e:	0f 8e bc 00 00 00    	jle    10004060 <NIDesktop::handleMouse(int, int, int, int)+0x184>
10003fa4:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
10003fab:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fac: R_386_32	movingWin
10003fb0:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10003fb3:	48                   	dec    eax
10003fb4:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10003fb7:	0f 8e 9d 00 00 00    	jle    1000405a <NIDesktop::handleMouse(int, int, int, int)+0x17e>
10003fbd:	8b 04 24             	mov    eax,DWORD PTR [esp]
10003fc0:	89 fa                	mov    edx,edi
10003fc2:	01 f8                	add    eax,edi
10003fc4:	83 e2 03             	and    edx,0x3
10003fc7:	83 e0 1f             	and    eax,0x1f
10003fca:	09 d0                	or     eax,edx
10003fcc:	0f 85 80 00 00 00    	jne    10004052 <NIDesktop::handleMouse(int, int, int, int)+0x176>
10003fd2:	89 e8                	mov    eax,ebp
10003fd4:	2b 05 94 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f94	10003fd6: R_386_32	.bss
10003fda:	03 04 24             	add    eax,DWORD PTR [esp]
10003fdd:	78 2d                	js     1000400c <NIDesktop::handleMouse(int, int, int, int)+0x130>
10003fdf:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003fe2:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
10003fe8:	7d 22                	jge    1000400c <NIDesktop::handleMouse(int, int, int, int)+0x130>
10003fea:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003fee:	8d 48 01             	lea    ecx,[eax+0x1]
10003ff1:	83 ec 0c             	sub    esp,0xc
10003ff4:	2b 15 90 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f90	10003ff6: R_386_32	.bss
10003ffa:	51                   	push   ecx
10003ffb:	01 fa                	add    edx,edi
10003ffd:	50                   	push   eax
10003ffe:	8d 42 01             	lea    eax,[edx+0x1]
10004001:	50                   	push   eax
10004002:	52                   	push   edx
10004003:	53                   	push   ebx
10004004:	e8 fc ff ff ff       	call   10004005 <NIDesktop::handleMouse(int, int, int, int)+0x129>	10004005: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004009:	83 c4 20             	add    esp,0x20
1000400c:	80 7c 24 08 00       	cmp    BYTE PTR [esp+0x8],0x0
10004011:	75 3f                	jne    10004052 <NIDesktop::handleMouse(int, int, int, int)+0x176>
10004013:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004016:	03 43 08             	add    eax,DWORD PTR [ebx+0x8]
10004019:	2b 05 94 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f94	1000401b: R_386_32	.bss
1000401f:	78 31                	js     10004052 <NIDesktop::handleMouse(int, int, int, int)+0x176>
10004021:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10004024:	3b 82 0c 04 00 00    	cmp    eax,DWORD PTR [edx+0x40c]
1000402a:	7d 26                	jge    10004052 <NIDesktop::handleMouse(int, int, int, int)+0x176>
1000402c:	8b 8a 08 04 00 00    	mov    ecx,DWORD PTR [edx+0x408]
10004032:	8b 11                	mov    edx,DWORD PTR [ecx]
10004034:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10004038:	6a 00                	push   0x0
1000403a:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000403d:	01 fa                	add    edx,edi
1000403f:	2b 15 90 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f90	10004041: R_386_32	.bss
10004045:	52                   	push   edx
10004046:	50                   	push   eax
10004047:	51                   	push   ecx
10004048:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000404c:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000404f:	83 c4 10             	add    esp,0x10
10004052:	ff 04 24             	inc    DWORD PTR [esp]
10004055:	e9 51 ff ff ff       	jmp    10003fab <NIDesktop::handleMouse(int, int, int, int)+0xcf>
1000405a:	47                   	inc    edi
1000405b:	e9 31 ff ff ff       	jmp    10003f91 <NIDesktop::handleMouse(int, int, int, int)+0xb5>
10004060:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004063:	2b 15 94 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f94	10004065: R_386_32	.bss
10004069:	80 7c 24 08 00       	cmp    BYTE PTR [esp+0x8],0x0
1000406e:	0f 85 aa 02 00 00    	jne    1000431e <NIDesktop::handleMouse(int, int, int, int)+0x442>
10004074:	89 d7                	mov    edi,edx
10004076:	85 d2                	test   edx,edx
10004078:	79 02                	jns    1000407c <NIDesktop::handleMouse(int, int, int, int)+0x1a0>
1000407a:	31 ff                	xor    edi,edi
1000407c:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
1000407f:	89 d0                	mov    eax,edx
10004081:	29 f8                	sub    eax,edi
10004083:	89 04 24             	mov    DWORD PTR [esp],eax
10004086:	79 18                	jns    100040a0 <NIDesktop::handleMouse(int, int, int, int)+0x1c4>
10004088:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
1000408c:	83 ec 0c             	sub    esp,0xc
1000408f:	68 bc 4c 00 10       	push   0x10004cbc	10004090: R_386_32	.text
10004094:	e8 fc ff ff ff       	call   10004095 <NIDesktop::handleMouse(int, int, int, int)+0x1b9>	10004095: R_386_PC32	Dbg::kprintf(char const*, ...)
10004099:	83 c4 10             	add    esp,0x10
1000409c:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100040a0:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100040a3:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
100040a9:	39 c2                	cmp    edx,eax
100040ab:	7c 0b                	jl     100040b8 <NIDesktop::handleMouse(int, int, int, int)+0x1dc>
100040ad:	29 f8                	sub    eax,edi
100040af:	89 04 24             	mov    DWORD PTR [esp],eax
100040b2:	0f 88 f6 00 00 00    	js     100041ae <NIDesktop::handleMouse(int, int, int, int)+0x2d2>
100040b8:	83 3c 24 00          	cmp    DWORD PTR [esp],0x0
100040bc:	0f 84 ec 00 00 00    	je     100041ae <NIDesktop::handleMouse(int, int, int, int)+0x2d2>
100040c2:	2b 2d 94 7f 03 10    	sub    ebp,DWORD PTR ds:0x10037f94	100040c4: R_386_32	.bss
100040c8:	89 ea                	mov    edx,ebp
100040ca:	79 02                	jns    100040ce <NIDesktop::handleMouse(int, int, int, int)+0x1f2>
100040cc:	31 d2                	xor    edx,edx
100040ce:	a1 00 00 00 00       	mov    eax,ds:0x0	100040cf: R_386_32	movingWin
100040d3:	03 68 20             	add    ebp,DWORD PTR [eax+0x20]
100040d6:	89 e8                	mov    eax,ebp
100040d8:	29 d0                	sub    eax,edx
100040da:	79 20                	jns    100040fc <NIDesktop::handleMouse(int, int, int, int)+0x220>
100040dc:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100040e0:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100040e4:	83 ec 0c             	sub    esp,0xc
100040e7:	68 bc 4c 00 10       	push   0x10004cbc	100040e8: R_386_32	.text
100040ec:	e8 fc ff ff ff       	call   100040ed <NIDesktop::handleMouse(int, int, int, int)+0x211>	100040ed: R_386_PC32	Dbg::kprintf(char const*, ...)
100040f1:	83 c4 10             	add    esp,0x10
100040f4:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
100040f8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100040fc:	8b 4b 04             	mov    ecx,DWORD PTR [ebx+0x4]
100040ff:	8b 89 0c 04 00 00    	mov    ecx,DWORD PTR [ecx+0x40c]
10004105:	39 cd                	cmp    ebp,ecx
10004107:	7c 08                	jl     10004111 <NIDesktop::handleMouse(int, int, int, int)+0x235>
10004109:	89 c8                	mov    eax,ecx
1000410b:	29 d0                	sub    eax,edx
1000410d:	79 02                	jns    10004111 <NIDesktop::handleMouse(int, int, int, int)+0x235>
1000410f:	31 c0                	xor    eax,eax
10004111:	83 ec 0c             	sub    esp,0xc
10004114:	8d 2c 10             	lea    ebp,[eax+edx*1]
10004117:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000411b:	55                   	push   ebp
1000411c:	2b 05 90 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f90	1000411e: R_386_32	.bss
10004122:	52                   	push   edx
10004123:	8d 48 01             	lea    ecx,[eax+0x1]
10004126:	89 54 24 1c          	mov    DWORD PTR [esp+0x1c],edx
1000412a:	51                   	push   ecx
1000412b:	50                   	push   eax
1000412c:	53                   	push   ebx
1000412d:	e8 fc ff ff ff       	call   1000412e <NIDesktop::handleMouse(int, int, int, int)+0x252>	1000412e: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004132:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10004136:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10004138: R_386_32	movingWin
1000413c:	83 c4 14             	add    esp,0x14
1000413f:	2b 05 90 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f90	10004141: R_386_32	.bss
10004145:	03 41 24             	add    eax,DWORD PTR [ecx+0x24]
10004148:	55                   	push   ebp
10004149:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000414d:	52                   	push   edx
1000414e:	50                   	push   eax
1000414f:	48                   	dec    eax
10004150:	50                   	push   eax
10004151:	53                   	push   ebx
10004152:	e8 fc ff ff ff       	call   10004153 <NIDesktop::handleMouse(int, int, int, int)+0x277>	10004153: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004157:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000415a:	83 c4 18             	add    esp,0x18
1000415d:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004163:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004165:	6a 00                	push   0x0
10004167:	6a 01                	push   0x1
10004169:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
1000416d:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10004170:	2b 05 90 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f90	10004172: R_386_32	.bss
10004176:	50                   	push   eax
10004177:	57                   	push   edi
10004178:	52                   	push   edx
10004179:	ff 51 28             	call   DWORD PTR [ecx+0x28]
1000417c:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
1000417f:	83 c4 18             	add    esp,0x18
10004182:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004188:	8b 2d 00 00 00 00    	mov    ebp,DWORD PTR ds:0x0	1000418a: R_386_32	movingWin
1000418e:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004190:	6a 00                	push   0x0
10004192:	6a 01                	push   0x1
10004194:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10004198:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000419b:	2b 05 90 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f90	1000419d: R_386_32	.bss
100041a1:	03 45 24             	add    eax,DWORD PTR [ebp+0x24]
100041a4:	48                   	dec    eax
100041a5:	50                   	push   eax
100041a6:	57                   	push   edi
100041a7:	52                   	push   edx
100041a8:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100041ab:	83 c4 20             	add    esp,0x20
100041ae:	85 f6                	test   esi,esi
100041b0:	0f 84 34 01 00 00    	je     100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100041b6:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
100041bb:	0f 84 29 01 00 00    	je     100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100041c1:	8b 0d 98 7f 03 10    	mov    ecx,DWORD PTR ds:0x10037f98	100041c3: R_386_32	.bss
100041c7:	83 e1 01             	and    ecx,0x1
100041ca:	0f 85 dd 00 00 00    	jne    100042ad <NIDesktop::handleMouse(int, int, int, int)+0x3d1>
100041d0:	a1 00 00 00 00       	mov    eax,ds:0x0	100041d1: R_386_32	milliTenthsSinceBoot
100041d5:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	100041d7: R_386_32	milliTenthsSinceBoot
100041db:	2b 05 88 7f 03 10    	sub    eax,DWORD PTR ds:0x10037f88	100041dd: R_386_32	.bss
100041e1:	bf b7 0b 00 00       	mov    edi,0xbb7
100041e6:	1b 15 8c 7f 03 10    	sbb    edx,DWORD PTR ds:0x10037f8c	100041e8: R_386_32	.bss
100041ec:	39 c7                	cmp    edi,eax
100041ee:	19 d1                	sbb    ecx,edx
100041f0:	0f 82 8b 00 00 00    	jb     10004281 <NIDesktop::handleMouse(int, int, int, int)+0x3a5>
100041f6:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
100041f9:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041fc:	29 d0                	sub    eax,edx
100041fe:	83 f8 18             	cmp    eax,0x18
10004201:	7f 7e                	jg     10004281 <NIDesktop::handleMouse(int, int, int, int)+0x3a5>
10004203:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
10004207:	74 26                	je     1000422f <NIDesktop::handleMouse(int, int, int, int)+0x353>
10004209:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
1000420c:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
1000420f:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004212:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
10004215:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
10004218:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000421b:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
1000421e:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004221:	55                   	push   ebp
10004222:	55                   	push   ebp
10004223:	56                   	push   esi
10004224:	53                   	push   ebx
10004225:	e8 fc ff ff ff       	call   10004226 <NIDesktop::handleMouse(int, int, int, int)+0x34a>	10004226: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
1000422a:	83 c4 10             	add    esp,0x10
1000422d:	eb 3b                	jmp    1000426a <NIDesktop::handleMouse(int, int, int, int)+0x38e>
1000422f:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004232:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
10004239:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
1000423c:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004243:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004246:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
10004249:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000424c:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
1000424f:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004252:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004255:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
1000425b:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000425e:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004261:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
10004267:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
1000426a:	83 ec 0c             	sub    esp,0xc
1000426d:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
10004271:	56                   	push   esi
10004272:	e8 fc ff ff ff       	call   10004273 <NIDesktop::handleMouse(int, int, int, int)+0x397>	10004273: R_386_PC32	NIWindow::rerender()
10004277:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000427a:	e8 fc ff ff ff       	call   1000427b <NIDesktop::handleMouse(int, int, int, int)+0x39f>	1000427b: R_386_PC32	NIDesktop::completeRefresh()
1000427f:	eb 11                	jmp    10004292 <NIDesktop::handleMouse(int, int, int, int)+0x3b6>
10004281:	8b 03                	mov    eax,DWORD PTR [ebx]
10004283:	8b 00                	mov    eax,DWORD PTR [eax]
10004285:	39 30                	cmp    DWORD PTR [eax],esi
10004287:	74 0c                	je     10004295 <NIDesktop::handleMouse(int, int, int, int)+0x3b9>
10004289:	57                   	push   edi
1000428a:	57                   	push   edi
1000428b:	56                   	push   esi
1000428c:	53                   	push   ebx
1000428d:	e8 fc ff ff ff       	call   1000428e <NIDesktop::handleMouse(int, int, int, int)+0x3b2>	1000428e: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
10004292:	83 c4 10             	add    esp,0x10
10004295:	a1 00 00 00 00       	mov    eax,ds:0x0	10004296: R_386_32	milliTenthsSinceBoot
1000429a:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	1000429c: R_386_32	milliTenthsSinceBoot
100042a0:	a3 88 7f 03 10       	mov    ds:0x10037f88,eax	100042a1: R_386_32	.bss
100042a5:	89 15 8c 7f 03 10    	mov    DWORD PTR ds:0x10037f8c,edx	100042a7: R_386_32	.bss
100042ab:	eb 3d                	jmp    100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100042ad:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100042af: R_386_32	movingWin
100042b4:	75 34                	jne    100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100042b6:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100042b9:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
100042bc:	83 f8 18             	cmp    eax,0x18
100042bf:	7f 29                	jg     100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100042c1:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
100042c5:	75 23                	jne    100042ea <NIDesktop::handleMouse(int, int, int, int)+0x40e>
100042c7:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100042ca:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
100042cd:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100042cf: R_386_32	movingWin
100042d3:	51                   	push   ecx
100042d4:	89 15 94 7f 03 10    	mov    DWORD PTR ds:0x10037f94,edx	100042d6: R_386_32	.bss
100042da:	51                   	push   ecx
100042db:	a3 90 7f 03 10       	mov    ds:0x10037f90,eax	100042dc: R_386_32	.bss
100042e0:	56                   	push   esi
100042e1:	53                   	push   ebx
100042e2:	e8 fc ff ff ff       	call   100042e3 <NIDesktop::handleMouse(int, int, int, int)+0x407>	100042e3: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100042e7:	83 c4 10             	add    esp,0x10
100042ea:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
100042ed:	83 ec 0c             	sub    esp,0xc
100042f0:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
100042f6:	8b 0a                	mov    ecx,DWORD PTR [edx]
100042f8:	6a 00                	push   0x0
100042fa:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
100042fd:	05 00 00 00 00       	add    eax,0x0	100042fe: R_386_32	___mouse_data
10004302:	50                   	push   eax
10004303:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10004306:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004309:	52                   	push   edx
1000430a:	ff 51 30             	call   DWORD PTR [ecx+0x30]
1000430d:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10004311:	a3 98 7f 03 10       	mov    ds:0x10037f98,eax	10004312: R_386_32	.bss
10004316:	83 c4 3c             	add    esp,0x3c
10004319:	5b                   	pop    ebx
1000431a:	5e                   	pop    esi
1000431b:	5f                   	pop    edi
1000431c:	5d                   	pop    ebp
1000431d:	c3                   	ret    
1000431e:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
10004321:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004323: R_386_32	movingWin
1000432b:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
1000432e:	2b 15 90 7f 03 10    	sub    edx,DWORD PTR ds:0x10037f90	10004330: R_386_32	.bss
10004334:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
10004337:	52                   	push   edx
10004338:	52                   	push   edx
10004339:	50                   	push   eax
1000433a:	53                   	push   ebx
1000433b:	e8 fc ff ff ff       	call   1000433c <NIDesktop::handleMouse(int, int, int, int)+0x460>	1000433c: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10004340:	83 c4 10             	add    esp,0x10
10004343:	e9 66 fe ff ff       	jmp    100041ae <NIDesktop::handleMouse(int, int, int, int)+0x2d2>

10004348 <clipdrawHandleMouse(int, int, int, int)>:
10004348:	83 ec 18             	sub    esp,0x18
1000434b:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000434f:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004353:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004357:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000435b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000435d: R_386_32	mouseDesktop
10004361:	e8 fc ff ff ff       	call   10004362 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004362: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
10004366:	83 c4 2c             	add    esp,0x2c
10004369:	c3                   	ret    

1000436a <drawVGAChar(int, int, int)>:
1000436a:	55                   	push   ebp
1000436b:	57                   	push   edi
1000436c:	56                   	push   esi
1000436d:	53                   	push   ebx
1000436e:	31 db                	xor    ebx,ebx
10004370:	83 ec 1c             	sub    esp,0x1c
10004373:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10004377:	c1 e0 04             	shl    eax,0x4
1000437a:	89 04 24             	mov    DWORD PTR [esp],eax
1000437d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10004381:	c1 e0 04             	shl    eax,0x4
10004384:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10004388:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000438c:	c1 e0 03             	shl    eax,0x3
1000438f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004393:	8b 04 24             	mov    eax,DWORD PTR [esp]
10004396:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
1000439a:	8a 84 18 00 00 00 00 	mov    al,BYTE PTR [eax+ebx*1+0x0]	1000439d: R_386_32	cp
100043a1:	8d 3c 19             	lea    edi,[ecx+ebx*1]
100043a4:	31 f6                	xor    esi,esi
100043a6:	84 c0                	test   al,al
100043a8:	79 22                	jns    100043cc <drawVGAChar(int, int, int)+0x62>
100043aa:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
100043ae:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100043b0: R_386_32	screen
100043b4:	8b 0a                	mov    ecx,DWORD PTR [edx]
100043b6:	6a 00                	push   0x0
100043b8:	57                   	push   edi
100043b9:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100043bd:	8d 2c 06             	lea    ebp,[esi+eax*1]
100043c0:	55                   	push   ebp
100043c1:	52                   	push   edx
100043c2:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100043c5:	83 c4 10             	add    esp,0x10
100043c8:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100043cc:	d1 e0                	shl    eax,1
100043ce:	46                   	inc    esi
100043cf:	83 fe 08             	cmp    esi,0x8
100043d2:	75 d2                	jne    100043a6 <drawVGAChar(int, int, int)+0x3c>
100043d4:	43                   	inc    ebx
100043d5:	83 fb 10             	cmp    ebx,0x10
100043d8:	75 b9                	jne    10004393 <drawVGAChar(int, int, int)+0x29>
100043da:	83 c4 1c             	add    esp,0x1c
100043dd:	5b                   	pop    ebx
100043de:	5e                   	pop    esi
100043df:	5f                   	pop    edi
100043e0:	5d                   	pop    ebp
100043e1:	c3                   	ret    

100043e2 <monikaBsod(char*)>:
100043e2:	55                   	push   ebp
100043e3:	57                   	push   edi
100043e4:	31 ff                	xor    edi,edi
100043e6:	56                   	push   esi
100043e7:	53                   	push   ebx
100043e8:	31 db                	xor    ebx,ebx
100043ea:	83 ec 24             	sub    esp,0x24
100043ed:	a1 00 00 00 00       	mov    eax,ds:0x0	100043ee: R_386_32	screen
100043f2:	8b 10                	mov    edx,DWORD PTR [eax]
100043f4:	68 ff ff ff 00       	push   0xffffff
100043f9:	50                   	push   eax
100043fa:	ff 52 40             	call   DWORD PTR [edx+0x40]
100043fd:	83 c4 10             	add    esp,0x10
10004400:	8a 8b 00 00 00 00    	mov    cl,BYTE PTR [ebx+0x0]	10004402: R_386_32	justMonika
10004406:	8d 43 01             	lea    eax,[ebx+0x1]
10004409:	84 c9                	test   cl,cl
1000440b:	79 0e                	jns    1000441b <monikaBsod(char*)+0x39>
1000440d:	8d 51 80             	lea    edx,[ecx-0x80]
10004410:	83 c3 02             	add    ebx,0x2
10004413:	8a 88 00 00 00 00    	mov    cl,BYTE PTR [eax+0x0]	10004415: R_386_32	justMonika
10004419:	eb 04                	jmp    1000441f <monikaBsod(char*)+0x3d>
1000441b:	89 c3                	mov    ebx,eax
1000441d:	b2 01                	mov    dl,0x1
1000441f:	0f b6 c1             	movzx  eax,cl
10004422:	83 e1 03             	and    ecx,0x3
10004425:	89 c6                	mov    esi,eax
10004427:	6b c9 55             	imul   ecx,ecx,0x55
1000442a:	c1 fe 05             	sar    esi,0x5
1000442d:	c1 f8 02             	sar    eax,0x2
10004430:	83 e6 03             	and    esi,0x3
10004433:	83 e0 07             	and    eax,0x7
10004436:	6b f6 55             	imul   esi,esi,0x55
10004439:	6b c0 24             	imul   eax,eax,0x24
1000443c:	c1 e6 10             	shl    esi,0x10
1000443f:	c1 e0 08             	shl    eax,0x8
10004442:	09 f0                	or     eax,esi
10004444:	31 f6                	xor    esi,esi
10004446:	09 c8                	or     eax,ecx
10004448:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000444c:	0f b6 c2             	movzx  eax,dl
1000444f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10004453:	8d 04 37             	lea    eax,[edi+esi*1]
10004456:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
1000445a:	7f 10                	jg     1000446c <monikaBsod(char*)+0x8a>
1000445c:	03 7c 24 08          	add    edi,DWORD PTR [esp+0x8]
10004460:	81 ff ff af 04 00    	cmp    edi,0x4afff
10004466:	7e 98                	jle    10004400 <monikaBsod(char*)+0x1e>
10004468:	31 db                	xor    ebx,ebx
1000446a:	eb 25                	jmp    10004491 <monikaBsod(char*)+0xaf>
1000446c:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000446e: R_386_32	screen
10004472:	b9 80 02 00 00       	mov    ecx,0x280
10004477:	8b 2a                	mov    ebp,DWORD PTR [edx]
10004479:	46                   	inc    esi
1000447a:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
1000447e:	99                   	cdq    
1000447f:	f7 f9                	idiv   ecx
10004481:	50                   	push   eax
10004482:	52                   	push   edx
10004483:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004485: R_386_32	screen
10004489:	ff 55 24             	call   DWORD PTR [ebp+0x24]
1000448c:	83 c4 10             	add    esp,0x10
1000448f:	eb c2                	jmp    10004453 <monikaBsod(char*)+0x71>
10004491:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10004495:	0f be 04 18          	movsx  eax,BYTE PTR [eax+ebx*1]
10004499:	84 c0                	test   al,al
1000449b:	74 1d                	je     100044ba <monikaBsod(char*)+0xd8>
1000449d:	b9 19 00 00 00       	mov    ecx,0x19
100044a2:	52                   	push   edx
100044a3:	50                   	push   eax
100044a4:	89 d8                	mov    eax,ebx
100044a6:	43                   	inc    ebx
100044a7:	99                   	cdq    
100044a8:	f7 f9                	idiv   ecx
100044aa:	83 c0 0a             	add    eax,0xa
100044ad:	42                   	inc    edx
100044ae:	50                   	push   eax
100044af:	52                   	push   edx
100044b0:	e8 fc ff ff ff       	call   100044b1 <monikaBsod(char*)+0xcf>	100044b1: R_386_PC32	drawVGAChar(int, int, int)
100044b5:	83 c4 10             	add    esp,0x10
100044b8:	eb d7                	jmp    10004491 <monikaBsod(char*)+0xaf>
100044ba:	f4                   	hlt    
100044bb:	eb fd                	jmp    100044ba <monikaBsod(char*)+0xd8>
100044bd:	90                   	nop

100044be <NIWindow::invalidate()>:
100044be:	53                   	push   ebx
100044bf:	83 ec 08             	sub    esp,0x8
100044c2:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100044c6:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
100044ca:	74 1d                	je     100044e9 <NIWindow::invalidate()+0x2b>
100044cc:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
100044d0:	74 17                	je     100044e9 <NIWindow::invalidate()+0x2b>
100044d2:	83 ec 0c             	sub    esp,0xc
100044d5:	ff 73 08             	push   DWORD PTR [ebx+0x8]
100044d8:	e8 fc ff ff ff       	call   100044d9 <NIWindow::invalidate()+0x1b>	100044d9: R_386_PC32	free
100044dd:	59                   	pop    ecx
100044de:	ff 73 14             	push   DWORD PTR [ebx+0x14]
100044e1:	e8 fc ff ff ff       	call   100044e2 <NIWindow::invalidate()+0x24>	100044e2: R_386_PC32	free
100044e6:	83 c4 10             	add    esp,0x10
100044e9:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100044f0:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100044f7:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
100044fb:	83 c4 08             	add    esp,0x8
100044fe:	5b                   	pop    ebx
100044ff:	c3                   	ret    

10004500 <NIWindow::putpixel(int, int, unsigned int)>:
10004500:	56                   	push   esi
10004501:	53                   	push   ebx
10004502:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10004506:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000450a:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
1000450d:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
10004511:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10004515:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
10004519:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000451c:	83 fe 04             	cmp    esi,0x4
1000451f:	75 05                	jne    10004526 <NIWindow::putpixel(int, int, unsigned int)+0x26>
10004521:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
10004524:	eb 0e                	jmp    10004534 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004526:	83 fe 02             	cmp    esi,0x2
10004529:	75 06                	jne    10004531 <NIWindow::putpixel(int, int, unsigned int)+0x31>
1000452b:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
1000452f:	eb 03                	jmp    10004534 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004531:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10004534:	5b                   	pop    ebx
10004535:	5e                   	pop    esi
10004536:	c3                   	ret    
10004537:	90                   	nop

10004538 <NIWindow::rerender()>:
10004538:	55                   	push   ebp
10004539:	57                   	push   edi
1000453a:	56                   	push   esi
1000453b:	53                   	push   ebx
1000453c:	83 ec 0c             	sub    esp,0xc
1000453f:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004543:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004547:	74 0c                	je     10004555 <NIWindow::rerender()+0x1d>
10004549:	83 ec 0c             	sub    esp,0xc
1000454c:	53                   	push   ebx
1000454d:	e8 fc ff ff ff       	call   1000454e <NIWindow::rerender()+0x16>	1000454e: R_386_PC32	NIWindow::invalidate()
10004552:	83 c4 10             	add    esp,0x10
10004555:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10004558:	83 ec 0c             	sub    esp,0xc
1000455b:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
1000455e:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004565:	50                   	push   eax
10004566:	e8 fc ff ff ff       	call   10004567 <NIWindow::rerender()+0x2f>	10004567: R_386_PC32	malloc
1000456b:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
1000456f:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004572:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004576:	89 34 24             	mov    DWORD PTR [esp],esi
10004579:	e8 fc ff ff ff       	call   1000457a <NIWindow::rerender()+0x42>	1000457a: R_386_PC32	malloc
1000457e:	83 c4 10             	add    esp,0x10
10004581:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004584:	31 c0                	xor    eax,eax
10004586:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004589:	7e 6a                	jle    100045f5 <NIWindow::rerender()+0xbd>
1000458b:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10004592:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004595:	01 d6                	add    esi,edx
10004597:	83 f8 06             	cmp    eax,0x6
1000459a:	7f 1b                	jg     100045b7 <NIWindow::rerender()+0x7f>
1000459c:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	1000459f: R_386_32	curveLookup7
100045a3:	66 89 0e             	mov    WORD PTR [esi],cx
100045a6:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100045a9:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	100045ac: R_386_32	curveLookup7
100045b0:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
100045b5:	eb 3b                	jmp    100045f2 <NIWindow::rerender()+0xba>
100045b7:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
100045ba:	8d 79 fa             	lea    edi,[ecx-0x6]
100045bd:	39 c7                	cmp    edi,eax
100045bf:	7f 22                	jg     100045e3 <NIWindow::rerender()+0xab>
100045c1:	29 c1                	sub    ecx,eax
100045c3:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	100045c6: R_386_32	curveLookup7
100045ca:	66 89 0e             	mov    WORD PTR [esi],cx
100045cd:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
100045d0:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
100045d3:	29 c1                	sub    ecx,eax
100045d5:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	100045d8: R_386_32	curveLookup7
100045dc:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
100045e1:	eb 0f                	jmp    100045f2 <NIWindow::rerender()+0xba>
100045e3:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
100045e8:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100045eb:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
100045f2:	40                   	inc    eax
100045f3:	eb 91                	jmp    10004586 <NIWindow::rerender()+0x4e>
100045f5:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
100045f9:	31 ff                	xor    edi,edi
100045fb:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
100045fe:	7e 30                	jle    10004630 <NIWindow::rerender()+0xf8>
10004600:	31 c0                	xor    eax,eax
10004602:	83 ff 19             	cmp    edi,0x19
10004605:	0f 9e c0             	setle  al
10004608:	31 ed                	xor    ebp,ebp
1000460a:	89 c6                	mov    esi,eax
1000460c:	4e                   	dec    esi
1000460d:	81 e6 d5 d4 d4 ff    	and    esi,0xffd4d4d5
10004613:	81 c6 ff ff ff 00    	add    esi,0xffffff
10004619:	39 6b 20             	cmp    DWORD PTR [ebx+0x20],ebp
1000461c:	7e 0f                	jle    1000462d <NIWindow::rerender()+0xf5>
1000461e:	56                   	push   esi
1000461f:	57                   	push   edi
10004620:	55                   	push   ebp
10004621:	45                   	inc    ebp
10004622:	53                   	push   ebx
10004623:	e8 fc ff ff ff       	call   10004624 <NIWindow::rerender()+0xec>	10004624: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
10004628:	83 c4 10             	add    esp,0x10
1000462b:	eb ec                	jmp    10004619 <NIWindow::rerender()+0xe1>
1000462d:	47                   	inc    edi
1000462e:	eb cb                	jmp    100045fb <NIWindow::rerender()+0xc3>
10004630:	83 c4 0c             	add    esp,0xc
10004633:	5b                   	pop    ebx
10004634:	5e                   	pop    esi
10004635:	5f                   	pop    edi
10004636:	5d                   	pop    ebp
10004637:	c3                   	ret    

10004638 <NIWindow::changeContext(NIContext*, int, int)>:
10004638:	55                   	push   ebp
10004639:	57                   	push   edi
1000463a:	56                   	push   esi
1000463b:	53                   	push   ebx
1000463c:	83 ec 18             	sub    esp,0x18
1000463f:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004643:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004647:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
1000464b:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000464f:	53                   	push   ebx
10004650:	e8 fc ff ff ff       	call   10004651 <NIWindow::changeContext(NIContext*, int, int)+0x19>	10004651: R_386_PC32	NIWindow::invalidate()
10004655:	89 33                	mov    DWORD PTR [ebx],esi
10004657:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
1000465a:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
1000465d:	83 c4 10             	add    esp,0x10
10004660:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004666:	83 f8 08             	cmp    eax,0x8
10004669:	7f 09                	jg     10004674 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
1000466b:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
10004672:	eb 15                	jmp    10004689 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004674:	83 f8 10             	cmp    eax,0x10
10004677:	7f 09                	jg     10004682 <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004679:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
10004680:	eb 07                	jmp    10004689 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004682:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004689:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
1000468d:	83 c4 0c             	add    esp,0xc
10004690:	5b                   	pop    ebx
10004691:	5e                   	pop    esi
10004692:	5f                   	pop    edi
10004693:	5d                   	pop    ebp
10004694:	e9 9f fe ff ff       	jmp    10004538 <NIWindow::rerender()>
10004699:	90                   	nop

1000469a <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
1000469a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000469e:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100046a2:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
100046a6:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
100046a9:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
100046ad:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100046b1:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
100046b8:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
100046bb:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
100046c2:	e9 71 ff ff ff       	jmp    10004638 <NIWindow::changeContext(NIContext*, int, int)>
100046c7:	90                   	nop

100046c8 <NIWindow::request()>:
100046c8:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100046cc:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
100046d0:	75 05                	jne    100046d7 <NIWindow::request()+0xf>
100046d2:	e9 61 fe ff ff       	jmp    10004538 <NIWindow::rerender()>
100046d7:	c3                   	ret    

100046d8 <NIWindow::SHADOW_TEST()>:
100046d8:	55                   	push   ebp
100046d9:	57                   	push   edi
100046da:	56                   	push   esi
100046db:	53                   	push   ebx
100046dc:	83 ec 28             	sub    esp,0x28
100046df:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
100046e3:	53                   	push   ebx
100046e4:	e8 fc ff ff ff       	call   100046e5 <NIWindow::SHADOW_TEST()+0xd>	100046e5: R_386_PC32	NIWindow::request()
100046e9:	83 c4 10             	add    esp,0x10
100046ec:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100046ef:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100046f2:	74 10                	je     10004704 <NIWindow::SHADOW_TEST()+0x2c>
100046f4:	83 ec 0c             	sub    esp,0xc
100046f7:	68 d1 4c 00 10       	push   0x10004cd1	100046f8: R_386_32	.text
100046fc:	e8 fc ff ff ff       	call   100046fd <NIWindow::SHADOW_TEST()+0x25>	100046fd: R_386_PC32	KePanic(char const*)
10004701:	83 c4 10             	add    esp,0x10
10004704:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004708:	0f 85 28 01 00 00    	jne    10004836 <NIWindow::SHADOW_TEST()+0x15e>
1000470e:	c7 44 24 04 05 00 00 00 	mov    DWORD PTR [esp+0x4],0x5
10004716:	31 ff                	xor    edi,edi
10004718:	39 7b 24             	cmp    DWORD PTR [ebx+0x24],edi
1000471b:	0f 8e 15 01 00 00    	jle    10004836 <NIWindow::SHADOW_TEST()+0x15e>
10004721:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004724:	8d 04 b8             	lea    eax,[eax+edi*4]
10004727:	0f b7 30             	movzx  esi,WORD PTR [eax]
1000472a:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
1000472e:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10004732:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10004736:	89 34 24             	mov    DWORD PTR [esp],esi
10004739:	8b 6b 20             	mov    ebp,DWORD PTR [ebx+0x20]
1000473c:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000473f:	2b 6c 24 0c          	sub    ebp,DWORD PTR [esp+0xc]
10004743:	3b 2c 24             	cmp    ebp,DWORD PTR [esp]
10004746:	0f 8e d4 00 00 00    	jle    10004820 <NIWindow::SHADOW_TEST()+0x148>
1000474c:	83 ff 05             	cmp    edi,0x5
1000474f:	7e 1f                	jle    10004770 <NIWindow::SHADOW_TEST()+0x98>
10004751:	8d 41 fb             	lea    eax,[ecx-0x5]
10004754:	39 f8                	cmp    eax,edi
10004756:	7e 18                	jle    10004770 <NIWindow::SHADOW_TEST()+0x98>
10004758:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000475c:	83 c0 05             	add    eax,0x5
1000475f:	3b 04 24             	cmp    eax,DWORD PTR [esp]
10004762:	7d 0c                	jge    10004770 <NIWindow::SHADOW_TEST()+0x98>
10004764:	8d 45 fb             	lea    eax,[ebp-0x5]
10004767:	3b 04 24             	cmp    eax,DWORD PTR [esp]
1000476a:	0f 8f a8 00 00 00    	jg     10004818 <NIWindow::SHADOW_TEST()+0x140>
10004770:	2b 4c 24 0c          	sub    ecx,DWORD PTR [esp+0xc]
10004774:	be ea 01 00 00       	mov    esi,0x1ea
10004779:	29 f9                	sub    ecx,edi
1000477b:	89 f0                	mov    eax,esi
1000477d:	83 c1 04             	add    ecx,0x4
10004780:	99                   	cdq    
10004781:	f7 f9                	idiv   ecx
10004783:	89 c1                	mov    ecx,eax
10004785:	89 f0                	mov    eax,esi
10004787:	99                   	cdq    
10004788:	f7 7c 24 04          	idiv   DWORD PTR [esp+0x4]
1000478c:	83 f8 0a             	cmp    eax,0xa
1000478f:	7d 05                	jge    10004796 <NIWindow::SHADOW_TEST()+0xbe>
10004791:	b8 0a 00 00 00       	mov    eax,0xa
10004796:	39 c1                	cmp    ecx,eax
10004798:	7d 02                	jge    1000479c <NIWindow::SHADOW_TEST()+0xc4>
1000479a:	89 c1                	mov    ecx,eax
1000479c:	2b 2c 24             	sub    ebp,DWORD PTR [esp]
1000479f:	b8 ea 01 00 00       	mov    eax,0x1ea
100047a4:	83 c5 04             	add    ebp,0x4
100047a7:	99                   	cdq    
100047a8:	f7 fd                	idiv   ebp
100047aa:	89 c6                	mov    esi,eax
100047ac:	83 f8 0a             	cmp    eax,0xa
100047af:	7d 05                	jge    100047b6 <NIWindow::SHADOW_TEST()+0xde>
100047b1:	be 0a 00 00 00       	mov    esi,0xa
100047b6:	8b 04 24             	mov    eax,DWORD PTR [esp]
100047b9:	8d 68 05             	lea    ebp,[eax+0x5]
100047bc:	b8 ea 01 00 00       	mov    eax,0x1ea
100047c1:	99                   	cdq    
100047c2:	f7 fd                	idiv   ebp
100047c4:	39 c6                	cmp    esi,eax
100047c6:	7d 02                	jge    100047ca <NIWindow::SHADOW_TEST()+0xf2>
100047c8:	89 c6                	mov    esi,eax
100047ca:	89 f0                	mov    eax,esi
100047cc:	89 ca                	mov    edx,ecx
100047ce:	0f af c6             	imul   eax,esi
100047d1:	0f af d1             	imul   edx,ecx
100047d4:	0f af f1             	imul   esi,ecx
100047d7:	01 d0                	add    eax,edx
100047d9:	8d 04 c6             	lea    eax,[esi+eax*8]
100047dc:	c1 f8 08             	sar    eax,0x8
100047df:	83 f8 66             	cmp    eax,0x66
100047e2:	7e 46                	jle    1000482a <NIWindow::SHADOW_TEST()+0x152>
100047e4:	8d 50 9a             	lea    edx,[eax-0x66]
100047e7:	d1 fa                	sar    edx,1
100047e9:	8d 42 66             	lea    eax,[edx+0x66]
100047ec:	83 f8 73             	cmp    eax,0x73
100047ef:	7e 39                	jle    1000482a <NIWindow::SHADOW_TEST()+0x152>
100047f1:	83 ea 0d             	sub    edx,0xd
100047f4:	c1 fa 02             	sar    edx,0x2
100047f7:	8d 42 73             	lea    eax,[edx+0x73]
100047fa:	83 f8 7f             	cmp    eax,0x7f
100047fd:	7f 19                	jg     10004818 <NIWindow::SHADOW_TEST()+0x140>
100047ff:	50                   	push   eax
10004800:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004803:	01 f8                	add    eax,edi
10004805:	50                   	push   eax
10004806:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000480a:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
1000480d:	50                   	push   eax
1000480e:	ff 33                	push   DWORD PTR [ebx]
10004810:	e8 fc ff ff ff       	call   10004811 <NIWindow::SHADOW_TEST()+0x139>	10004811: R_386_PC32	NIContext::drvDarken4(int, int, int)
10004815:	83 c4 10             	add    esp,0x10
10004818:	ff 04 24             	inc    DWORD PTR [esp]
1000481b:	e9 19 ff ff ff       	jmp    10004739 <NIWindow::SHADOW_TEST()+0x61>
10004820:	47                   	inc    edi
10004821:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10004825:	e9 ee fe ff ff       	jmp    10004718 <NIWindow::SHADOW_TEST()+0x40>
1000482a:	83 f8 0a             	cmp    eax,0xa
1000482d:	7d d0                	jge    100047ff <NIWindow::SHADOW_TEST()+0x127>
1000482f:	b8 0a 00 00 00       	mov    eax,0xa
10004834:	eb c9                	jmp    100047ff <NIWindow::SHADOW_TEST()+0x127>
10004836:	83 c4 1c             	add    esp,0x1c
10004839:	5b                   	pop    ebx
1000483a:	5e                   	pop    esi
1000483b:	5f                   	pop    edi
1000483c:	5d                   	pop    ebp
1000483d:	c3                   	ret    

1000483e <NIWindow::realdraw()>:
1000483e:	55                   	push   ebp
1000483f:	57                   	push   edi
10004840:	56                   	push   esi
10004841:	53                   	push   ebx
10004842:	83 ec 18             	sub    esp,0x18
10004845:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004849:	53                   	push   ebx
1000484a:	e8 fc ff ff ff       	call   1000484b <NIWindow::realdraw()+0xd>	1000484b: R_386_PC32	NIWindow::request()
1000484f:	83 c4 10             	add    esp,0x10
10004852:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
10004855:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004858:	74 10                	je     1000486a <NIWindow::realdraw()+0x2c>
1000485a:	83 ec 0c             	sub    esp,0xc
1000485d:	68 d1 4c 00 10       	push   0x10004cd1	1000485e: R_386_32	.text
10004862:	e8 fc ff ff ff       	call   10004863 <NIWindow::realdraw()+0x25>	10004863: R_386_PC32	KePanic(char const*)
10004867:	83 c4 10             	add    esp,0x10
1000486a:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
1000486e:	75 46                	jne    100048b6 <NIWindow::realdraw()+0x78>
10004870:	31 f6                	xor    esi,esi
10004872:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
10004875:	7e 3f                	jle    100048b6 <NIWindow::realdraw()+0x78>
10004877:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
1000487a:	8d 04 b0             	lea    eax,[eax+esi*4]
1000487d:	0f b7 28             	movzx  ebp,WORD PTR [eax]
10004880:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
10004884:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
10004887:	89 c2                	mov    edx,eax
10004889:	29 fa                	sub    edx,edi
1000488b:	39 ea                	cmp    edx,ebp
1000488d:	7e 24                	jle    100048b3 <NIWindow::realdraw()+0x75>
1000488f:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004892:	0f af c6             	imul   eax,esi
10004895:	01 e8                	add    eax,ebp
10004897:	ff 34 82             	push   DWORD PTR [edx+eax*4]
1000489a:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000489d:	01 f0                	add    eax,esi
1000489f:	50                   	push   eax
100048a0:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
100048a3:	01 e8                	add    eax,ebp
100048a5:	45                   	inc    ebp
100048a6:	50                   	push   eax
100048a7:	ff 33                	push   DWORD PTR [ebx]
100048a9:	e8 fc ff ff ff       	call   100048aa <NIWindow::realdraw()+0x6c>	100048aa: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
100048ae:	83 c4 10             	add    esp,0x10
100048b1:	eb d1                	jmp    10004884 <NIWindow::realdraw()+0x46>
100048b3:	46                   	inc    esi
100048b4:	eb bc                	jmp    10004872 <NIWindow::realdraw()+0x34>
100048b6:	83 c4 0c             	add    esp,0xc
100048b9:	5b                   	pop    ebx
100048ba:	5e                   	pop    esi
100048bb:	5f                   	pop    edi
100048bc:	5d                   	pop    ebp
100048bd:	c3                   	ret    

100048be <List<NIWindow*>::insertAtHead(NIWindow*)>:
100048be:	53                   	push   ebx
100048bf:	83 ec 14             	sub    esp,0x14
100048c2:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
100048c6:	6a 0c                	push   0xc
100048c8:	e8 fc ff ff ff       	call   100048c9 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	100048c9: R_386_PC32	malloc
100048cd:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100048d1:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
100048d8:	89 10                	mov    DWORD PTR [eax],edx
100048da:	83 c4 10             	add    esp,0x10
100048dd:	8b 13                	mov    edx,DWORD PTR [ebx]
100048df:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100048e2:	85 d2                	test   edx,edx
100048e4:	74 05                	je     100048eb <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
100048e6:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
100048e9:	eb 03                	jmp    100048ee <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
100048eb:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100048ee:	89 03                	mov    DWORD PTR [ebx],eax
100048f0:	83 c4 08             	add    esp,0x8
100048f3:	5b                   	pop    ebx
100048f4:	c3                   	ret    
100048f5:	90                   	nop

100048f6 <List<NIWindow*>::deleteElement(NIWindow*&)>:
100048f6:	57                   	push   edi
100048f7:	56                   	push   esi
100048f8:	53                   	push   ebx
100048f9:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100048fd:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10004901:	8b 19                	mov    ebx,DWORD PTR [ecx]
10004903:	85 db                	test   ebx,ebx
10004905:	74 5e                	je     10004965 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004907:	8b 30                	mov    esi,DWORD PTR [eax]
10004909:	89 da                	mov    edx,ebx
1000490b:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
1000490e:	8b 3a                	mov    edi,DWORD PTR [edx]
10004910:	85 c0                	test   eax,eax
10004912:	74 08                	je     1000491c <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004914:	39 f7                	cmp    edi,esi
10004916:	73 04                	jae    1000491c <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
10004918:	89 c2                	mov    edx,eax
1000491a:	eb ef                	jmp    1000490b <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
1000491c:	39 f7                	cmp    edi,esi
1000491e:	75 45                	jne    10004965 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
10004920:	39 d3                	cmp    ebx,edx
10004922:	75 18                	jne    1000493c <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
10004924:	89 01                	mov    DWORD PTR [ecx],eax
10004926:	85 c0                	test   eax,eax
10004928:	75 09                	jne    10004933 <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
1000492a:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004931:	eb 1e                	jmp    10004951 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004933:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000493a:	eb 15                	jmp    10004951 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000493c:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000493f:	85 c0                	test   eax,eax
10004941:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10004944:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004947:	74 05                	je     1000494e <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
10004949:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
1000494c:	eb 03                	jmp    10004951 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000494e:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004951:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
10004959:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
1000495d:	5b                   	pop    ebx
1000495e:	5e                   	pop    esi
1000495f:	5f                   	pop    edi
10004960:	e9 fc ff ff ff       	jmp    10004961 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004961: R_386_PC32	operator delete(void*, unsigned long)
10004965:	5b                   	pop    ebx
10004966:	5e                   	pop    esi
10004967:	5f                   	pop    edi
10004968:	c3                   	ret    
10004969:	53                   	push   ebx
1000496a:	46                   	inc    esi
1000496b:	4e                   	dec    esi
1000496c:	43                   	inc    ebx
1000496d:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004970:	4e                   	dec    esi
10004971:	32 00                	xor    al,BYTE PTR [eax]
10004973:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
10004976:	53                   	push   ebx
10004977:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
1000497a:	43                   	inc    ebx
1000497b:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000497c:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000497d:	74 65                	je     100049e4 <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
1000497f:	78 74                	js     100049f5 <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
10004981:	3a 3a                	cmp    bh,BYTE PTR [edx]
10004983:	64 72 76             	fs jb  100049fc <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
10004986:	52                   	push   edx
10004987:	65 6e                	outs   dx,BYTE PTR gs:[esi]
10004989:	64 65 72 54          	fs gs jb 100049e1 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
1000498d:	54                   	push   esp
1000498e:	46                   	inc    esi
1000498f:	34 00                	xor    al,0x0
10004991:	43                   	inc    ebx
10004992:	3a 2f                	cmp    ch,BYTE PTR [edi]
10004994:	42                   	inc    edx
10004995:	61                   	popa   
10004996:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004997:	61                   	popa   
10004998:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004999:	61                   	popa   
1000499a:	2f                   	das    
1000499b:	46                   	inc    esi
1000499c:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000499d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000499e:	74 73                	je     10004a13 <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
100049a0:	2f                   	das    
100049a1:	53                   	push   ebx
100049a2:	46                   	inc    esi
100049a3:	4e                   	dec    esi
100049a4:	00 43 41             	add    BYTE PTR [ebx+0x41],al
100049a7:	4e                   	dec    esi
100049a8:	4e                   	dec    esi
100049a9:	4f                   	dec    edi
100049aa:	54                   	push   esp
100049ab:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
100049af:	44                   	inc    esp
100049b0:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
100049b3:	4e                   	dec    esi
100049b4:	54                   	push   esp
100049b5:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
100049b9:	45                   	inc    ebp
100049ba:	43                   	inc    ebx
100049bb:	54                   	push   esp
100049bc:	4f                   	dec    edi
100049bd:	52                   	push   edx
100049be:	59                   	pop    ecx
100049bf:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
100049c2:	2f                   	das    
100049c3:	42                   	inc    edx
100049c4:	61                   	popa   
100049c5:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049c6:	61                   	popa   
100049c7:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049c8:	61                   	popa   
100049c9:	2f                   	das    
100049ca:	46                   	inc    esi
100049cb:	6f                   	outs   dx,DWORD PTR ds:[esi]
100049cc:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049cd:	74 73                	je     10004a42 <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
100049cf:	2f                   	das    
100049d0:	53                   	push   ebx
100049d1:	46                   	inc    esi
100049d2:	4e                   	dec    esi
100049d3:	2f                   	das    
100049d4:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
100049d7:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049d8:	74 20                	je     100049fa <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
100049da:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
100049e1:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
100049e8:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
100049ec:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
100049f2:	6e                   	outs   dx,BYTE PTR ds:[esi]
100049f3:	74 3a                	je     10004a2f <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
100049f5:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
100049fb:	53                   	push   ebx
100049fc:	46                   	inc    esi
100049fd:	4e                   	dec    esi
100049fe:	5f                   	pop    edi
100049ff:	52                   	push   edx
10004a00:	45                   	inc    ebp
10004a01:	53                   	push   ebx
10004a02:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
10004a08:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
10004a0b:	6d                   	ins    DWORD PTR es:[edi],dx
10004a0c:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004a0d:	72 79                	jb     10004a88 <List<NIWindow*>::deleteElement(NIWindow*&)+0x192>
10004a0f:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
10004a12:	6c                   	ins    BYTE PTR es:[edi],dx
10004a13:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004a14:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
10004a17:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
10004a1e:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004a1f:	72 00                	jb     10004a21 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
10004a21:	42                   	inc    edx
10004a22:	61                   	popa   
10004a23:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
10004a27:	6c                   	ins    BYTE PTR es:[edi],dx
10004a28:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004a2c:	72 6d                	jb     10004a9b <List<NIWindow*>::deleteElement(NIWindow*&)+0x1a5>
10004a2e:	61                   	popa   
10004a2f:	74 00                	je     10004a31 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
10004a31:	4e                   	dec    esi
10004a32:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004a33:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004a36:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004a37:	74 20                	je     10004a59 <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
10004a39:	66 61                	popaw  
10004a3b:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004a3e:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004a40:	75 6e                	jne    10004ab0 <_ssfn__compute_huffman_codes::length_dezigzag+0x10>
10004a42:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
10004a46:	76 61                	jbe    10004aa9 <_ssfn__compute_huffman_codes::length_dezigzag+0x9>
10004a48:	6c                   	ins    BYTE PTR es:[edi],dx
10004a49:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004a51:	20 76 61             	and    BYTE PTR [esi+0x61],dh
10004a54:	6c                   	ins    BYTE PTR es:[edi],dx
10004a55:	75 65                	jne    10004abc <_ssfn__compute_huffman_codes::length_dezigzag+0x1c>
10004a57:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004a5a:	76 61                	jbe    10004abd <_ssfn__compute_huffman_codes::length_dezigzag+0x1d>
10004a5c:	6c                   	ins    BYTE PTR es:[edi],dx
10004a5d:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
10004a65:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004a68:	76 61                	jbe    10004acb <_ssfn__zdist_extra+0xb>
10004a6a:	6c                   	ins    BYTE PTR es:[edi],dx
10004a6b:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
10004a73:	47                   	inc    edi
10004a74:	6c                   	ins    BYTE PTR es:[edi],dx
10004a75:	79 70                	jns    10004ae7 <_ssfn__zdist_extra+0x27>
10004a77:	68 20 6e 6f 74       	push   0x746f6e20
10004a7c:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004a7f:	75 6e                	jne    10004aef <_ssfn__zdist_extra+0x2f>
10004a81:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
10004a85:	66 90                	xchg   ax,ax
10004a87:	66 90                	xchg   ax,ax
10004a89:	66 90                	xchg   ax,ax
10004a8b:	66 90                	xchg   ax,ax
10004a8d:	66 90                	xchg   ax,ax
10004a8f:	66 90                	xchg   ax,ax
10004a91:	66 90                	xchg   ax,ax
10004a93:	66 90                	xchg   ax,ax
10004a95:	66 90                	xchg   ax,ax
10004a97:	66 90                	xchg   ax,ax
10004a99:	66 90                	xchg   ax,ax
10004a9b:	66 90                	xchg   ax,ax
10004a9d:	66 90                	xchg   ax,ax
10004a9f:	90                   	nop

10004aa0 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004aa0:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004ab0:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004ac0 <_ssfn__zdist_extra>:
	...
10004ad0:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
10004ae0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
10004af0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
10004b00:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
10004b10:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
10004b20:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
10004b30:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004b40 <_ssfn__zdist_base>:
10004b40:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004b50:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004b60:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004b70:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004b80:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004b90:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004ba0:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004bb0:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004bc0 <_ssfn__zlength_extra>:
	...
10004be0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
10004bf0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
10004c00:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
10004c10:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
10004c20:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004c40 <_ssfn__zlength_base>:
10004c40:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004c50:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004c60:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004c70:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004c80:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004c90:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004ca0:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004cb0:	02 01 00 00 00 00 00 00 00 00 00 00 57 68 61 74     ............What
10004cc0:	20 69 73 20 74 68 69 73 2e 2e 2e 3f 21 3f 21 0a      is this...?!?!.
10004cd0:	00 41 53 53 45 52 54 49 4f 4e 20 46 41 49 4c 55     .ASSERTION FAILU
10004ce0:	52 45 20 28 41 29 2e 00                             RE (A)..
