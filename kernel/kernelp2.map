Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f95a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x8ef fs/symlink.32
                0x00000000c000ae19                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b13c                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b357                KeCreateSymlink(char const*, char const*)
                0x00000000c000b493                KeInitialiseSymlinks()
 *fill*         0x00000000c000b603        0x1 
 .text          0x00000000c000b604      0xd6c fs/vfs.32
                0x00000000c000b604                File::read(unsigned long long, void*, int*)
                0x00000000c000b65c                File::write(unsigned long long, void*, int*)
                0x00000000c000b6b4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b70c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b73a                File::isAtty()
                0x00000000c000b73e                Directory::isAtty()
                0x00000000c000b742                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b748                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b74e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b754                File::~File()
                0x00000000c000b754                File::~File()
                0x00000000c000b778                File::~File()
                0x00000000c000b7a2                Directory::~Directory()
                0x00000000c000b7a2                Directory::~Directory()
                0x00000000c000b7c6                Directory::~Directory()
                0x00000000c000b7f0                Filesystem::Filesystem()
                0x00000000c000b7f0                Filesystem::Filesystem()
                0x00000000c000b814                Filesystem::~Filesystem()
                0x00000000c000b814                Filesystem::~Filesystem()
                0x00000000c000b822                Filesystem::~Filesystem()
                0x00000000c000b846                Fs::getcwd(Process*, char*, int)
                0x00000000c000b870                Fs::initVFS()
                0x00000000c000b89a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000bab8                File::File(char const*, Process*, bool)
                0x00000000c000bab8                File::File(char const*, Process*, bool)
                0x00000000c000bb96                File::File(char const*, Process*)
                0x00000000c000bb96                File::File(char const*, Process*)
                0x00000000c000bbb4                File::open(FileOpenMode)
                0x00000000c000bc12                File::close()
                0x00000000c000bc72                File::seek(unsigned long long)
                0x00000000c000bcc8                File::truncate(unsigned long long)
                0x00000000c000bd1e                File::tell(unsigned long long*)
                0x00000000c000bd6e                File::rewind()
                0x00000000c000bd82                File::unlink()
                0x00000000c000bdce                File::rename(char const*)
                0x00000000c000be1c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be78                File::exists()
                0x00000000c000beb6                File::stat(unsigned long long*, bool*)
                0x00000000c000bf17                Fs::setcwd(Process*, char*)
                0x00000000c000c076                Directory::Directory(char const*, Process*)
                0x00000000c000c076                Directory::Directory(char const*, Process*)
                0x00000000c000c13e                Directory::open()
                0x00000000c000c19a                Directory::close()
                0x00000000c000c1fa                Directory::unlink()
                0x00000000c000c246                Directory::rename(char const*)
                0x00000000c000c294                Directory::exists()
                0x00000000c000c2d2                Directory::read(dirent*)
                0x00000000c000c31e                Directory::create()
                0x00000000c000c36a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c370       0x86 hal/bus.32
                0x00000000c000c370                Bus::Bus(char const*)
                0x00000000c000c370                Bus::Bus(char const*)
                0x00000000c000c3a8                Bus::~Bus()
                0x00000000c000c3a8                Bus::~Bus()
                0x00000000c000c3cc                Bus::~Bus()
 .text          0x00000000c000c3f6       0x96 hal/buzzer.32
                0x00000000c000c3f6                beepThread(void*)
                0x00000000c000c433                Krnl::beep(int, int, bool)
 .text          0x00000000c000c48c      0x465 hal/clock.32
                0x00000000c000c48c                User::loadClockSettings(int)
                0x00000000c000c4de                Clock::Clock(char const*)
                0x00000000c000c4de                Clock::Clock(char const*)
                0x00000000c000c514                Clock::~Clock()
                0x00000000c000c514                Clock::~Clock()
                0x00000000c000c538                Clock::~Clock()
                0x00000000c000c562                Clock::timeInSecondsLocal()
                0x00000000c000c5aa                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c603                datetimeToSeconds(datetime_t)
                0x00000000c000c728                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c788                secondsToDatetime(unsigned long long)
                0x00000000c000c8cc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8f1        0x1 
 .text          0x00000000c000c8f2      0x464 hal/device.32
                0x00000000c000c8f2                Device::hibernate()
                0x00000000c000c8f4                Device::wake()
                0x00000000c000c8f6                Device::detect()
                0x00000000c000c8f8                Device::disableLegacy()
                0x00000000c000c8fa                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8fc                DriverlessDevice::close(int, int, void*)
                0x00000000c000c900                DriverlessDevice::detect()
                0x00000000c000c902                DriverlessDevice::open(int, int, void*)
                0x00000000c000c916                Device::~Device()
                0x00000000c000c916                Device::~Device()
                0x00000000c000c924                Device::~Device()
                0x00000000c000c94c                Device::findAndLoadDriver()
                0x00000000c000c95a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c980                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c9c0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9ea                Device::getParent()
                0x00000000c000c9f6                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ca14                Device::addChild(Device*)
                0x00000000c000ca58                Device::removeAllChildren()
                0x00000000c000ca9e                Device::hibernateAll()
                0x00000000c000cace                Device::wakeAll()
                0x00000000c000cafe                Device::detectAll()
                0x00000000c000cb2e                Device::disableLegacyAll()
                0x00000000c000cb30                Device::loadDriversForAll()
                0x00000000c000cb32                Device::closeAll()
                0x00000000c000cb68                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb9e                Device::setName(char const*)
                0x00000000c000cbac                Device::Device(char const*)
                0x00000000c000cbac                Device::Device(char const*)
                0x00000000c000cca8                Device::getName()
                0x00000000c000ccb2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccb2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cce8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd2c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd56        0x2 
 .text          0x00000000c000cd58       0x86 hal/diskctrl.32
                0x00000000c000cd58                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd58                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd90                HardDiskController::~HardDiskController()
                0x00000000c000cd90                HardDiskController::~HardDiskController()
                0x00000000c000cdb4                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdde       0xe2 hal/diskphys.32
                0x00000000c000cdde                PhysicalDisk::eject()
                0x00000000c000cde2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cde2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce4a                PhysicalDisk::startCache()
                0x00000000c000ce72                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce72                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce96                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cec0        0x0 hal/fpu.32
 .text          0x00000000c000cec0      0x360 hal/intctrl.32
                0x00000000c000cec0                int_handler
                0x00000000c000cf4a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0d7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d10b                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d181                setupINTS()
                0x00000000c000d1de                convertLegacyIRQNumber(int)
 .text          0x00000000c000d220      0x8be hal/keybrd.32
                0x00000000c000d220                startGUI(void*)
                0x00000000c000d28e                startGUIVESA(void*)
                0x00000000c000d2fc                sendKeyToTerminal(unsigned char)
                0x00000000c000d3d7                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8c1                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8f6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da54                Keyboard::Keyboard(char const*)
                0x00000000c000da54                Keyboard::Keyboard(char const*)
                0x00000000c000da90                Keyboard::~Keyboard()
                0x00000000c000da90                Keyboard::~Keyboard()
                0x00000000c000dab4                Keyboard::~Keyboard()
 .text          0x00000000c000dade      0x3f8 hal/logidisk.32
                0x00000000c000dade                LogicalDisk::close(int, int, void*)
                0x00000000c000dae2                LogicalDisk::~LogicalDisk()
                0x00000000c000dae2                LogicalDisk::~LogicalDisk()
                0x00000000c000db06                LogicalDisk::~LogicalDisk()
                0x00000000c000db30                LogicalDisk::open(int, int, void*)
                0x00000000c000db44                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db7c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbc2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbc2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc82                LogicalDisk::assignDriveLetter()
                0x00000000c000dd3c                LogicalDisk::mount()
                0x00000000c000dd84                LogicalDisk::unmount()
                0x00000000c000dd94                LogicalDisk::eject()
                0x00000000c000dda8                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddfe                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de6a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ded6        0x2 
 .text          0x00000000c000ded8       0x86 hal/mouse.32
                0x00000000c000ded8                Mouse::Mouse(char const*)
                0x00000000c000ded8                Mouse::Mouse(char const*)
                0x00000000c000df10                Mouse::~Mouse()
                0x00000000c000df10                Mouse::~Mouse()
                0x00000000c000df34                Mouse::~Mouse()
 .text          0x00000000c000df5e       0x90 hal/nic.32
                0x00000000c000df5e                NIC::getMAC()
                0x00000000c000df64                NIC::write(int, unsigned char*, int*)
                0x00000000c000df6a                NIC::NIC(char const*)
                0x00000000c000df6a                NIC::NIC(char const*)
                0x00000000c000dfa0                NIC::~NIC()
                0x00000000c000dfa0                NIC::~NIC()
                0x00000000c000dfc4                NIC::~NIC()
 .text          0x00000000c000dfee      0x33b hal/partition.32
                0x00000000c000dfee                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e096                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e329        0x3 
 .text          0x00000000c000e32c       0x86 hal/serial.32
                0x00000000c000e32c                Serial::Serial(char const*)
                0x00000000c000e32c                Serial::Serial(char const*)
                0x00000000c000e364                Serial::~Serial()
                0x00000000c000e364                Serial::~Serial()
                0x00000000c000e388                Serial::~Serial()
 *fill*         0x00000000c000e3b2        0x2 
 .text          0x00000000c000e3b4      0x234 hal/timer.32
                0x00000000c000e3b4                Timer::Timer(char const*)
                0x00000000c000e3b4                Timer::Timer(char const*)
                0x00000000c000e3ec                Timer::~Timer()
                0x00000000c000e3ec                Timer::~Timer()
                0x00000000c000e410                Timer::~Timer()
                0x00000000c000e43a                Timer::read()
                0x00000000c000e445                setupTimer(int)
                0x00000000c000e480                timerHandler(unsigned int)
 .text          0x00000000c000e5e8      0x450 hal/vcache.32
                0x00000000c000e5e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000e758                VCache::invalidateReadBuffer()
                0x00000000c000e768                VCache::writeWriteBuffer()
                0x00000000c000e7b4                VCache::~VCache()
                0x00000000c000e7b4                VCache::~VCache()
                0x00000000c000e80c                VCache::~VCache()
                0x00000000c000e834                VCache::write(unsigned long long, int, void*)
                0x00000000c000e92e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea38      0x4d9 hal/video.32
                0x00000000c000ea38                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea84                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eaf4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb84                Video::clearScreen(unsigned int)
                0x00000000c000ebb8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebc6                Video::readPixelApprox(int, int)
                0x00000000c000ebda                Video::Video(char const*)
                0x00000000c000ebda                Video::Video(char const*)
                0x00000000c000ec10                Video::~Video()
                0x00000000c000ec10                Video::~Video()
                0x00000000c000ec34                Video::~Video()
                0x00000000c000ec5e                Video::isMonochrome()
                0x00000000c000ec6a                Video::getWidth()
                0x00000000c000ec76                Video::getHeight()
                0x00000000c000ec82                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed3e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eea6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ef11        0x3 
 .text          0x00000000c000ef14     0x12d2 hw/acpi.32
                0x00000000c000ef14                ACPI::close(int, int, void*)
                0x00000000c000efc8                findRSDP()
                0x00000000c000f060                loadACPITables(unsigned char*)
                0x00000000c000f2cc                findRSDT(unsigned char*)
                0x00000000c000f424                findDataTable(unsigned char*, char*)
                0x00000000c000f4a4                scanMADT()
                0x00000000c000f95c                ACPI::ACPI()
                0x00000000c000f95c                ACPI::ACPI()
                0x00000000c000f9b0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000faac                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb78                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb80                ACPI::detectPCI()
                0x00000000c000fda0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fde8                ACPI::sleep()
                0x00000000c000fe04                ACPI::open(int, int, void*)
 .text          0x00000000c00101e6      0xbc5 hw/cpu.32
                0x00000000c00101e6                CPU::close(int, int, void*)
                0x00000000c00101ea                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010206                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001021e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010292                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010316                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010344                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010372                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103a0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103ce                CPU::CPU()
                0x00000000c00103ce                CPU::CPU()
                0x00000000c001045c                CPU::displayFeatures()
                0x00000000c001045e                CPU::detectFeatures()
                0x00000000c0010b32                CPU::setupSMEP()
                0x00000000c0010b3e                CPU::setupUMIP()
                0x00000000c0010b48                CPU::setupTSC()
                0x00000000c0010b52                CPU::setupLargePages()
                0x00000000c0010b5c                CPU::setupPAT()
                0x00000000c0010b98                CPU::setupMTRR()
                0x00000000c0010b9a                CPU::setupGlobalPages()
                0x00000000c0010ba4                CPU::allowUsermodeDataAccess()
                0x00000000c0010bb6                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bc8                CPU::setupSMAP()
                0x00000000c0010bd6                CPU::setupFeatures()
                0x00000000c0010ca2                CPU::open(int, int, void*)
 .text          0x00000000c0010dab       0xb6 krnl/atexit.32
                0x00000000c0010dab                KeInitialiseAtexit()
                0x00000000c0010dca                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010dfe                KeExecuteAtexit()
 .text          0x00000000c0010e61       0xdf krnl/bootmsg.32
                0x00000000c0010e61                KeDisplaySplashScreen()
                0x00000000c0010edd                KeSetBootMessage(char const*)
 .text          0x00000000c0010f40       0x1d krnl/compat.32
                0x00000000c0010f40                Krnl::handlePowerButton()
                0x00000000c0010f50                Krnl::handleSleepButton()
 .text          0x00000000c0010f5d       0x2b krnl/crc32.32
                0x00000000c0010f5d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f88      0x5bf krnl/env.32
                0x00000000c0010f88                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fc6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011088                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001108a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112ae                EnvVarContainer::__loadSystem()
                0x00000000c00112c8                EnvVarContainer::__loadUser()
                0x00000000c00112ca                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112ca                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112ec                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112ec                EnvVarContainer::~EnvVarContainer()
                0x00000000c001131c                KeGetEnv(Process*, char const*)
                0x00000000c0011381                KeSetEnvSystem(char const*, char const*)
                0x00000000c001139b                KeSetEnvUser(char const*, char const*)
                0x00000000c00113ba                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113cd                KeDeleteEnvSystem(char const*)
                0x00000000c00113ce                KeDeleteEnvUser(char const*)
                0x00000000c00113cf                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113d0                KeNewProcessEnv(Process*)
                0x00000000c00113f2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001143e                KeLoadSystemEnv()
                0x00000000c001146c                KeLoadUserEnv()
                0x00000000c0011492                KeFlushEnv()
                0x00000000c0011493                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114b3                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011547       0x94 krnl/inlines.32
                0x00000000c0011547                CPU::current()
                0x00000000c0011553                operator new(unsigned long)
                0x00000000c0011558                operator delete(void*)
                0x00000000c001155d                disableIRQs()
                0x00000000c001155f                enableIRQs()
                0x00000000c0011561                lockScheduler()
                0x00000000c0011569                unlockScheduler()
                0x00000000c0011578                lockStuff()
                0x00000000c0011586                unlockStuff()
                0x00000000c00115c0                Virt::getAKernelVAS()
                0x00000000c00115c6                __not_memcpy
 .text          0x00000000c00115db        0xc krnl/panic.32
                0x00000000c00115db                KePanic(char const*)
 .text          0x00000000c00115e7      0x142 krnl/powctrl.32
                0x00000000c00115e7                KePowerThread(void*)
                0x00000000c0011615                KeChangePowerSettings(PowerSettings)
                0x00000000c001162b                KeUserIOReceived()
                0x00000000c0011636                KeHandlePowerButton()
                0x00000000c001166b                KeHandleSleepButton()
                0x00000000c00116a0                KeSetupPowerManager()
 .text          0x00000000c0011729       0x9b krnl/random.32
                0x00000000c0011729                KeRand()
                0x00000000c0011769                KeSeedRand(unsigned int)
                0x00000000c0011792                KeInitRand()
 .text          0x00000000c00117c4      0x1bc krnl/resolve.32
                0x00000000c00117c4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011980      0x31f krnl/signal.32
                0x00000000c0011980                KiSigKill(int)
                0x00000000c0011994                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011995                KiDefaultSignalHandlerPause(int)
                0x00000000c00119c1                KiDefaultSignalHandlerResume(int)
                0x00000000c00119ed                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00119f2                KeInitSignals()
                0x00000000c0011a41                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a77                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011af4                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011beb                KiCheckSignalZ
                0x00000000c0011c2d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c68                KiFinishSignalZ
 .text          0x00000000c0011c9f      0xdf8 krnl/syscalls.32
                0x00000000c0011c9f                SysSeekDir(regs*)
                0x00000000c0011ca4                SysTellDir(regs*)
                0x00000000c0011ca9                SysVerify(regs*)
                0x00000000c0011cb3                SysGetArgc(regs*)
                0x00000000c0011cc7                SysTTYName(regs*)
                0x00000000c0011ccf                SysFormatDisk(regs*)
                0x00000000c0011d36                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d8a                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011de3                SysShutdown(regs*)
                0x00000000c0011e70                SysRealpath(regs*)
                0x00000000c0011ebe                SysReadDir(regs*)
                0x00000000c0011f3e                SysIsATTY(regs*)
                0x00000000c0011f98                SysSeek(regs*)
                0x00000000c0011ff2                SysTell(regs*)
                0x00000000c001205f                SysSize(regs*)
                0x00000000c00120d2                SysSizeFromFilename(regs*)
                0x00000000c00121e9                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012300                SysClose(regs*)
                0x00000000c0012360                SysOpenDir(regs*)
                0x00000000c00123dd                SysMakeDir(regs*)
                0x00000000c001244b                SysCloseDir(regs*)
                0x00000000c001249a                SysWait(regs*)
                0x00000000c00124bb                SysNotImpl(regs*)
                0x00000000c00124d6                SysPanic(regs*)
                0x00000000c00124f1                SysRmdir(regs*)
                0x00000000c001254f                SysUnlink(regs*)
                0x00000000c00125ad                SysGetArgv(regs*)
                0x00000000c00125fa                SysUSleep(regs*)
                0x00000000c0012623                SysSpawn(regs*)
                0x00000000c0012694                SysGetEnv(regs*)
                0x00000000c0012749                SysSetFatAttrib(regs*)
                0x00000000c00127b2                SysPipe(regs*)
                0x00000000c00127f7                SysGetUnixTime(regs*)
                0x00000000c001280b                string_ends_with(char const*, char const*)
                0x00000000c0012856                SysOpen(regs*)
                0x00000000c0012a55                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012a97        0x1 
 .text          0x00000000c0012a98      0x159 net/ethernet.32
                0x00000000c0012a98                KeSwitchEndian16(unsigned short)
                0x00000000c0012abc                KeSwitchEndian32(unsigned int)
                0x00000000c0012aec                EthernetCRC32(unsigned char*, int)
                0x00000000c0012b90                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012bf1      0xd51 reg/cm.32
                0x00000000c0012bf1                CmOpen(char const*)
                0x00000000c0012d0f                CmClose(Reghive_Tag*)
                0x00000000c0012d25                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d61                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012dd8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e17                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e49                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e85                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012ead                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012ece                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f49                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012fcf                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00130c3                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00131fb                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c001325c                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c001328c                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00132c3                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00132ed                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001332d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00133d1                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00133ff                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001359c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00135e9                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013663                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00136b6                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001377a                zStrtok(char*, char const*)
                0x00000000c00137ec                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001386d                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013910                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013942      0x545 reg/registry.32
                0x00000000c0013942                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013ace                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c23                Reg::getLine(char*, char*, char*)
                0x00000000c0013c5a                Reg::readInt(char*, char*, int*)
                0x00000000c0013d48                Reg::readString(char*, char*, char*, int)
                0x00000000c0013dc9                Reg::readBool(char*, char*, bool*)
                0x00000000c0013dee                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e1a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e46                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e87       0x36 sys/eject.32
                0x00000000c0013e87                SysEject(regs*)
 .text          0x00000000c0013ebd       0x18 sys/exit.32
                0x00000000c0013ebd                SysExit(regs*)
 .text          0x00000000c0013ed5       0x1f sys/getcwd.32
                0x00000000c0013ed5                SysGetCwd(regs*)
 .text          0x00000000c0013ef4        0xc sys/getpid.32
                0x00000000c0013ef4                SysGetPID(regs*)
 .text          0x00000000c0013f00       0x1a sys/getramdata.32
                0x00000000c0013f00                SysGetRAMData(regs*)
 .text          0x00000000c0013f1a       0x82 sys/getvgaptr.32
                0x00000000c0013f1a                SysGetVGAPtr(regs*)
 .text          0x00000000c0013f9c       0xb9 sys/kill.32
                0x00000000c0013f9c                SysKill(regs*)
 .text          0x00000000c0014055       0xa8 sys/loaddll.32
                0x00000000c0014055                SysLoadDLL(regs*)
 .text          0x00000000c00140fd       0x68 sys/read.32
                0x00000000c00140fd                SysRead(regs*)
 .text          0x00000000c0014165       0x29 sys/registersignal.32
                0x00000000c0014165                SysRegisterSignal(regs*)
 .text          0x00000000c001418e      0x19c sys/registry.32
                0x00000000c001418e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014205                SysRegistryReadExtent(regs*)
                0x00000000c001424d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014275                SysRegistryEnterDirectory(regs*)
                0x00000000c001429d                SysRegistryGetNext(regs*)
                0x00000000c00142c5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00142ff                SysRegistryOpen(regs*)
                0x00000000c0014313                SysRegistryClose(regs*)
 .text          0x00000000c001432a       0x55 sys/sbrk.32
                0x00000000c001432a                SysSbrk(regs*)
 .text          0x00000000c001437f       0x1c sys/setcwd.32
                0x00000000c001437f                SysSetCwd(regs*)
 .text          0x00000000c001439b       0x96 sys/settime.32
                0x00000000c001439b                SysSetTime(regs*)
 .text          0x00000000c0014431       0x2d sys/symlink.32
                0x00000000c0014431                SysSymlink(regs*)
 .text          0x00000000c001445e       0x4a sys/timezone.32
                0x00000000c001445e                SysTimezone(regs*)
 .text          0x00000000c00144a8       0xfc sys/truncate.32
                0x00000000c00144a8                SysTruncate(regs*)
 .text          0x00000000c00145a4       0x68 sys/write.32
                0x00000000c00145a4                SysWrite(regs*)
 .text          0x00000000c001460c       0x62 sys/wsbe.32
                0x00000000c001460c                SysWsbe(regs*)
 .text          0x00000000c001466e       0x25 sys/yield.32
                0x00000000c001466e                SysYield(regs*)
 .text          0x00000000c0014693     0x1203 thr/elf.32
                0x00000000c0014693                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001491a                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b39                Thr::runtimeReferenceHelper()
                0x00000000c0014b4c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b9b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e59                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001559a                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00155cc                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015603                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001561d                Thr::loadDLL(char const*, bool)
                0x00000000c001585d                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015896        0x2 
 .text          0x00000000c0015898     0x13b5 thr/prcssthr.32
                0x00000000c0015898                userModeEntryPoint(void*)
                0x00000000c00158c0                changeTSS
                0x00000000c00158f0                switchToThread(ThreadControlBlock*)
                0x00000000c00159a0                Process::addArgs(char**)
                0x00000000c0015a0c                Process::Process(char const*, Process*, char**)
                0x00000000c0015a0c                Process::Process(char const*, Process*, char**)
                0x00000000c0015c18                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c18                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015dec                taskStartupFunction
                0x00000000c0015df8                Semaphore::Semaphore(int)
                0x00000000c0015df8                Semaphore::Semaphore(int)
                0x00000000c0015e28                Mutex::Mutex()
                0x00000000c0015e28                Mutex::Mutex()
                0x00000000c0015e3c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f44                Process::createUserThread()
                0x00000000c0015f64                setupMultitasking(void (*)())
                0x00000000c0016088                schedule()
                0x00000000c001611c                Semaphore::tryAcquire()
                0x00000000c00161dc                Semaphore::assertLocked(char const*)
                0x00000000c0016260                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016288                blockTask(TaskState)
                0x00000000c00162c0                waitTask(int, int*, int)
                0x00000000c0016304                milliTenthSleepUntil(unsigned int)
                0x00000000c00163a4                milliTenthSleep(unsigned int)
                0x00000000c00163b8                sleep(unsigned int)
                0x00000000c00163c8                Semaphore::acquire()
                0x00000000c0016490                taskReturned
                0x00000000c00164d4                Thr::processFromPID(int)
                0x00000000c0016580                unblockTask(ThreadControlBlock*)
                0x00000000c001662c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016900                cleanerTaskFunction(void*)
                0x00000000c0016a08                terminateTask(int)
                0x00000000c0016af4                Thr::terminateFromIRQ(int)
                0x00000000c0016b04                Semaphore::release()
 .text          0x00000000c0016c4d      0xc31 vm86/vm8086.32
                0x00000000c0016c4d                Vm::inbv(unsigned short)
                0x00000000c0016c60                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c96                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016ca6                Vm::getSegment(unsigned int)
                0x00000000c0016cae                Vm::getOffset(unsigned int)
                0x00000000c0016cb3                Vm::mainloop2()
                0x00000000c0016ced                Vm::mainVm8086Loop(void*)
                0x00000000c0016cfd                Vm::mainloop3(unsigned long)
                0x00000000c0016d23                Vm::initialise8086()
                0x00000000c0016d66                Vm::finish8086()
                0x00000000c0016dc7                Vm::getOutput8086(unsigned char*)
                0x00000000c0016dec                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ea5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017043                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00170e0                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00170f1                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017103                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017114                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017129                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001713f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017154                Vm::faultHandler(regs*)
 .text          0x00000000c001787e      0xaf0 arch/i386/hal.32
                0x00000000c001787e                noCopro(unsigned long)
                0x00000000c001787f                nmiHandler(regs*, void*)
                0x00000000c0017898                doubleFault(regs*, void*)
                0x00000000c00178b1                displayDebugInfo(regs*)
                0x00000000c0017c36                HalSystemIdle()
                0x00000000c0017cb2                displayProgramFault(char const*)
                0x00000000c0017cfe                gpFault(regs*, void*)
                0x00000000c0017d65                pgFault(regs*, void*)
                0x00000000c0017dee                otherISRHandler(regs*, void*)
                0x00000000c0017e22                opcodeFault(regs*, void*)
                0x00000000c0017ea5                i386SaveCoprocessor(void*)
                0x00000000c0017eb9                i386LoadCoprocessor(void*)
                0x00000000c0017ecd                x87EmulHandler(regs*, void*)
                0x00000000c0017f6a                HalInitialiseCoprocessor()
                0x00000000c0018018                HalPanic(char const*)
                0x00000000c001812c                HalQueryPerformanceCounter()
                0x00000000c0018147                HalInitialise()
                0x00000000c00182fd                HalMakeBeep(int)
                0x00000000c0018337                HalGetRand()
                0x00000000c001833a                HalEndOfInterrupt(int)
                0x00000000c001836b                HalRestart()
                0x00000000c001836c                HalShutdown()
                0x00000000c001836d                HalSleep()
 *fill*         0x00000000c001836e        0x2 
 .text          0x00000000c0018370      0x2dc arch/i386/pic.32
                0x00000000c0018370                picIoWait()
                0x00000000c0018378                picDisable()
                0x00000000c00183ac                picGetIRQReg(int)
                0x00000000c0018428                picOpen()
                0x00000000c00185ac                picEOI(int)
 .text          0x00000000c001864c      0x66e arch/i386/rtc.32
                0x00000000c001864c                RTC::open(int, int, void*)
                0x00000000c0018650                RTC::close(int, int, void*)
                0x00000000c0018654                RTC::timeInSecondsUTC()
                0x00000000c0018666                RTC::timeInDatetimeUTC()
                0x00000000c001868c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00186ca                RTC::~RTC()
                0x00000000c00186ca                RTC::~RTC()
                0x00000000c00186ee                RTC::~RTC()
                0x00000000c0018718                RTC::get_update_in_progress_flag()
                0x00000000c0018732                RTC::completeRTCRefresh()
                0x00000000c0018a0c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018bba                rtcIRQHandler(regs*, void*)
                0x00000000c0018c00                RTC::RTC()
                0x00000000c0018c00                RTC::RTC()
 *fill*         0x00000000c0018cba        0x2 
 .text          0x00000000c0018cbc      0x1f4 arch/i386/vga.32
                0x00000000c0018cbc                HalConsoleScroll(int, int)
                0x00000000c0018dc4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e28                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018eb0     0x14f3 fs/fat/vfslink.32
                0x00000000c0018eb0                FAT::getName()
                0x00000000c0018eb8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ef4                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f30                FAT::~FAT()
                0x00000000c0018f30                FAT::~FAT()
                0x00000000c0018f54                FAT::~FAT()
                0x00000000c0018f7c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019020                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019100                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192e4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019500                FAT::allocateSwapfile(char const*, int)
                0x00000000c00196c0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019830                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019890                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198f0                FAT::close(void*)
                0x00000000c0019944                FAT::closeDir(void*)
                0x00000000c0019998                FAT::truncate(void*, unsigned long long)
                0x00000000c0019a04                FAT::seek(void*, unsigned long long)
                0x00000000c0019a5c                fatWrapperReadDisk
                0x00000000c0019a9c                fatWrapperWriteDisk
                0x00000000c0019adc                fatWrapperIoctl
                0x00000000c0019bfc                FAT::FAT()
                0x00000000c0019bfc                FAT::FAT()
                0x00000000c0019c54                FAT::fixFilepath(char*)
                0x00000000c0019c94                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019e08                FAT::openDir(char const*, void**)
                0x00000000c0019eb8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019fb0                FAT::unlink(char const*)
                0x00000000c001a030                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a1e8                FAT::rename(char const*, char const*)
                0x00000000c001a2b4                FAT::mkdir(char const*)
                0x00000000c001a334                FAT::exists(char const*)
 *fill*         0x00000000c001a3a3        0x1 
 .text          0x00000000c001a3a4       0x94 fs/iso9660/helper.32
                0x00000000c001a3a4                isoReadDiscSectorHelper
                0x00000000c001a400                iso_kprintf
                0x00000000c001a41c                iso_kprintfd
 .text          0x00000000c001a438      0x71a fs/iso9660/vfslink.32
                0x00000000c001a438                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a43e                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a444                ISO9660::getName()
                0x00000000c001a44a                ISO9660::closeDir(void*)
                0x00000000c001a454                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a45a                ISO9660::unlink(char const*)
                0x00000000c001a460                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a466                ISO9660::rename(char const*, char const*)
                0x00000000c001a46c                ISO9660::mkdir(char const*)
                0x00000000c001a472                ISO9660::~ISO9660()
                0x00000000c001a472                ISO9660::~ISO9660()
                0x00000000c001a496                ISO9660::~ISO9660()
                0x00000000c001a4be                ISO9660::exists(char const*)
                0x00000000c001a4d2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a5b8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a600                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a642                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a680                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a6d2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a814                ISO9660::close(void*)
                0x00000000c001a844                ISO9660::openDir(char const*, void**)
                0x00000000c001a91e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa39                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aab8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab2a                ISO9660::ISO9660()
                0x00000000c001ab2a                ISO9660::ISO9660()
 .text          0x00000000c001ab52      0x26c hal/sound/sndcard.32
                0x00000000c001ab52                SoundCard::beginPlayback()
                0x00000000c001ab60                SoundCard::stopPlayback()
                0x00000000c001ab6e                SoundCard::SoundCard(char const*)
                0x00000000c001ab6e                SoundCard::SoundCard(char const*)
                0x00000000c001ac0c                SoundCard::~SoundCard()
                0x00000000c001ac0c                SoundCard::~SoundCard()
                0x00000000c001ac30                SoundCard::~SoundCard()
                0x00000000c001ac5a                SoundCard::configureRates(int, int, int)
                0x00000000c001ac8a                SoundCard::getSamples16(int, short*)
                0x00000000c001ace6                SoundCard::getSamples32(int, int*)
                0x00000000c001ad6c                SoundCard::addChannel(SoundPort*)
                0x00000000c001adaa                SoundCard::removeChannel(int)
 *fill*         0x00000000c001adbe        0x2 
 .text          0x00000000c001adc0      0x393 hal/sound/sndport.32
                0x00000000c001adc0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001adc0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae4c                SoundPort::~SoundPort()
                0x00000000c001ae4c                SoundPort::~SoundPort()
                0x00000000c001ae80                SoundPort::unpause()
                0x00000000c001ae8c                SoundPort::pause()
                0x00000000c001ae98                SoundPort::getBufferUsed()
                0x00000000c001aea0                SoundPort::getBufferSize()
                0x00000000c001aea8                SoundPort::buffer16(short*, int)
                0x00000000c001af34                SoundPort::buffer32(int*, int)
                0x00000000c001afc0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b090                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b153        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b153        0x1 
 .text          0x00000000c001b154      0xbc5 hw/bus/pci.32
                0x00000000c001b154                PCI::open(int, int, void*)
                0x00000000c001b172                PCI::close(int, int, void*)
                0x00000000c001b176                PCI::PCI()
                0x00000000c001b176                PCI::PCI()
                0x00000000c001b20e                PCI::readBAR8(unsigned int, int)
                0x00000000c001b22a                PCI::readBAR16(unsigned int, int)
                0x00000000c001b248                PCI::readBAR32(unsigned int, int)
                0x00000000c001b264                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b284                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b2a6                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b2c6                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b33c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3e6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b40a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b432                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b47c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4a4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4c8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ec                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b514                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b578                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b65e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b928                PCI::checkBus(unsigned char)
                0x00000000c001b94c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bad2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc4e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bcc0                PCI::detect()
 *fill*         0x00000000c001bd19        0x1 
 .text          0x00000000c001bd1a      0xb96 hw/diskctrl/ide.32
                0x00000000c001bd1a                IDE::close(int, int, void*)
                0x00000000c001bd1e                IDE::IDE()
                0x00000000c001bd1e                IDE::IDE()
                0x00000000c001bd52                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd64                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd66                IDE::getBase(unsigned char)
                0x00000000c001bd78                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be38                IDE::read(unsigned char, unsigned char)
                0x00000000c001beec                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf4e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf6a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf86                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bfd0                IDE::open(int, int, void*)
                0x00000000c001c40a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c4da                IDE::detect()
                0x00000000c001c7a2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c85c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c8b0      0x32c hw/diskctrl/satabus.32
                0x00000000c001c8b0                SATABus::close(int, int, void*)
                0x00000000c001c8b4                SATABus::detect()
                0x00000000c001c8b6                SATABus::SATABus()
                0x00000000c001c8b6                SATABus::SATABus()
                0x00000000c001c93c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c96e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9b6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9d6                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca00                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cb12                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cbbc                SATABus::open(int, int, void*)
 .text          0x00000000c001cbdc      0x96d hw/diskphys/ata.32
                0x00000000c001cbdc                ATA::close(int, int, void*)
                0x00000000c001cc00                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cc02                ATA::ATA()
                0x00000000c001cc02                ATA::ATA()
                0x00000000c001cc30                ATA::flush(bool)
                0x00000000c001cc7e                ATA::readyForCommand()
                0x00000000c001ccca                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d08e                ATA::detectCHS()
                0x00000000c001d0b8                ATA::open(int, int, void*)
                0x00000000c001d184                combineCharAndColour(char, unsigned char)
                0x00000000c001d195                combineColours(unsigned char, unsigned char)
                0x00000000c001d1a2                ATA::read(unsigned long long, int, void*)
                0x00000000c001d378                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d549        0x1 
 .text          0x00000000c001d54a      0x612 hw/diskphys/atapi.32
                0x00000000c001d54a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d550                ATAPI::close(int, int, void*)
                0x00000000c001d574                ATAPI::ATAPI()
                0x00000000c001d574                ATAPI::ATAPI()
                0x00000000c001d5a2                ATAPI::readyForCommand()
                0x00000000c001d5f4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d8b4                ATAPI::diskRemoved()
                0x00000000c001d8ee                ATAPI::eject()
                0x00000000c001d936                ATAPI::diskInserted()
                0x00000000c001d942                ATAPI::detectMedia()
                0x00000000c001da02                ATAPI::open(int, int, void*)
                0x00000000c001dae2                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001db5c      0x7ff hw/diskphys/sata.32
                0x00000000c001db5c                SATA::close(int, int, void*)
                0x00000000c001db80                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db82                SATA::open(int, int, void*)
                0x00000000c001dc2c                SATA::SATA()
                0x00000000c001dc2c                SATA::SATA()
                0x00000000c001dc5a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001deac                SATA::read(unsigned long long, int, void*)
                0x00000000c001e0fc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e35b        0x1 
 .text          0x00000000c001e35c      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e35c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e362                SATAPI::close(int, int, void*)
                0x00000000c001e386                SATAPI::SATAPI()
                0x00000000c001e386                SATAPI::SATAPI()
                0x00000000c001e3b4                SATAPI::diskRemoved()
                0x00000000c001e3b6                SATAPI::diskInserted()
                0x00000000c001e3d2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e6b8                SATAPI::eject()
                0x00000000c001e6f4                SATAPI::detectMedia()
                0x00000000c001e74a                SATAPI::open(int, int, void*)
                0x00000000c001e84a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e934      0x45b hw/intctrl/apic.32
                0x00000000c001e934                IOAPIC::close(int, int, void*)
                0x00000000c001e93a                apicGetBase()
                0x00000000c001e980                IOAPIC::IOAPIC()
                0x00000000c001e980                IOAPIC::IOAPIC()
                0x00000000c001e9a8                apicOpen()
                0x00000000c001eb24                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eb56                IOAPIC::read(int)
                0x00000000c001eb7e                IOAPIC::open(int, int, void*)
                0x00000000c001ec64                IOAPIC::write(int, int)
                0x00000000c001ec90                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed8f        0x1 
 .text          0x00000000c001ed90       0xf0 hw/timer/apictimer.32
                0x00000000c001ed90                APICTimer::close(int, int, void*)
                0x00000000c001ed98                apicTimerHandler(regs*, void*)
                0x00000000c001edc0                APICTimer::open(int, int, void*)
                0x00000000c001ee30                APICTimer::write(int)
                0x00000000c001ee58                APICTimer::APICTimer()
                0x00000000c001ee58                APICTimer::APICTimer()
 .text          0x00000000c001ee80      0x1ad hw/timer/pit.32
                0x00000000c001ee80                PIT::write(int)
                0x00000000c001ef04                pitHandler(regs*, void*)
                0x00000000c001ef2c                PIT::open(int, int, void*)
                0x00000000c001ef7c                PIT::close(int, int, void*)
                0x00000000c001efac                PIT::PIT()
                0x00000000c001efac                PIT::PIT()
 *fill*         0x00000000c001f02d        0x3 
 .text          0x00000000c001f030       0x83 arch/i386/avx.32
                0x00000000c001f030                avxDetect
                0x00000000c001f05a                avxSave
                0x00000000c001f06b                avxLoad
                0x00000000c001f07c                avxInit
                0x00000000c001f09e                avxClose
                0x00000000c001f09f                wouldSheSayYes
 *fill*         0x00000000c001f0b3        0xd 
 .text          0x00000000c001f0c0      0x2ec arch/i386/interrupt.32
                0x00000000c001f0c0                isr0
                0x00000000c001f0d0                isr1
                0x00000000c001f0da                isr2
                0x00000000c001f0e4                isr3
                0x00000000c001f0ee                isr4
                0x00000000c001f0f8                isr5
                0x00000000c001f102                isr6
                0x00000000c001f10c                isr7
                0x00000000c001f116                isr8
                0x00000000c001f11e                isr9
                0x00000000c001f128                isr10
                0x00000000c001f130                isr11
                0x00000000c001f138                isr12
                0x00000000c001f140                isr13
                0x00000000c001f15a                isr14
                0x00000000c001f162                isr15
                0x00000000c001f16c                isr16
                0x00000000c001f176                isr17
                0x00000000c001f180                isr18
                0x00000000c001f18a                irq3
                0x00000000c001f194                irq4
                0x00000000c001f19e                irq5
                0x00000000c001f1a8                irq6
                0x00000000c001f1b2                irq7
                0x00000000c001f1bc                irq8
                0x00000000c001f1c6                irq9
                0x00000000c001f1d0                irq10
                0x00000000c001f1da                irq11
                0x00000000c001f1e4                irq12
                0x00000000c001f1ee                irq13
                0x00000000c001f1f8                irq14
                0x00000000c001f202                irq15
                0x00000000c001f20c                irq1
                0x00000000c001f213                irq2
                0x00000000c001f21a                isr96
                0x00000000c001f221                irq0
                0x00000000c001f226                int_common_stub
                0x00000000c001f258                syscall_common_stub
                0x00000000c001f35c                irq16
                0x00000000c001f366                irq17
                0x00000000c001f370                irq18
                0x00000000c001f37a                irq19
                0x00000000c001f384                irq20
                0x00000000c001f38e                irq21
                0x00000000c001f398                irq22
                0x00000000c001f3a2                irq23
 *fill*         0x00000000c001f3ac        0x4 
 .text          0x00000000c001f3b0       0x10 arch/i386/rdrand.32
                0x00000000c001f3b0                i386GetRDRAND
 .text          0x00000000c001f3c0       0x39 arch/i386/sse.32
                0x00000000c001f3c0                absolutelyNoChanceInHell
                0x00000000c001f3c0                sseDetect
                0x00000000c001f3d8                sseSave
                0x00000000c001f3e0                sseLoad
                0x00000000c001f3e8                sseInit
                0x00000000c001f3f8                sseClose
 *fill*         0x00000000c001f3f9        0x7 
 .text          0x00000000c001f400       0x49 arch/i386/x87.32
                0x00000000c001f406                x87Detect
                0x00000000c001f421                x87Save
                0x00000000c001f428                x87Load
                0x00000000c001f42f                x87Init
                0x00000000c001f448                x87Close
 *fill*         0x00000000c001f449        0x3 
 .text          0x00000000c001f44c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f471        0x0 crtn.32
 *fill*         0x00000000c001f471        0x3 
 .text          0x00000000c001f474      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f474                __divdi3
 *fill*         0x00000000c001f5bf        0x1 
 .text          0x00000000c001f5c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f5c0                __moddi3
 *fill*         0x00000000c001f73e        0x2 
 .text          0x00000000c001f740       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f740                __udivdi3
 *fill*         0x00000000c001f83f        0x1 
 .text          0x00000000c001f840      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f840                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f960        0x0
 .iplt          0x00000000c001f960        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f95a        0xf
 .init          0x00000000c001f95a        0x3 crti.32
                0x00000000c001f95a                _init
 .init          0x00000000c001f95d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f962        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f967        0x2 crtn.32

.fini           0x00000000c001f969        0xa
 .fini          0x00000000c001f969        0x3 crti.32
                0x00000000c001f969                _fini
 .fini          0x00000000c001f96c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f971        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f974       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f974       0x23 core/computer.32
                0x00000000c001f974                Computer::~Computer()
                0x00000000c001f974                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f998       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f998       0x2a core/computer.32
                0x00000000c001f998                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f9c2       0x21
 .text._Z10idleCommonv
                0x00000000c001f9c2       0x21 core/idle.32
                0x00000000c001f9c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9e4        0x2 core/unixfile.32
                0x00000000c001f9e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f9e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9e6       0x42 core/unixfile.32
                0x00000000c001f9e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f9e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa28       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fa28       0xd3 core/unixfile.32
                0x00000000c001fa28                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fafc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fafc        0x7 core/unixfile.32
                0x00000000c001fafc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb04       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb04       0xa1 core/unixfile.32
                0x00000000c001fb04                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fba6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fba6        0x8 core/unixfile.32
                0x00000000c001fba6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fbae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fbae       0x1a hal/device.32
                0x00000000c001fbae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fbae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fbc8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fbc8       0x2a hal/device.32
                0x00000000c001fbc8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbf2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbf2       0xdc hal/device.32
                0x00000000c001fbf2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fcce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fcce       0x42 hal/device.32
                0x00000000c001fcce                LinkedList<Device>::LinkedList()
                0x00000000c001fcce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd10       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd10       0x1c hal/timer.32
                0x00000000c001fd10                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd2c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fd2c        0x7 hal/timer.32
                0x00000000c001fd2c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd34       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fd34       0xbc hal/timer.32
                0x00000000c001fd34                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdf0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdf0       0xda hal/timer.32
                0x00000000c001fdf0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fecc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fecc       0x23 hw/acpi.32
                0x00000000c001fecc                ACPI::~ACPI()
                0x00000000c001fecc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fef0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fef0       0x2a hw/acpi.32
                0x00000000c001fef0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff1c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff1c        0x2 hw/acpi.32
                0x00000000c001ff1c                LinkedList<Device>::~LinkedList()
                0x00000000c001ff1c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff20       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ff20       0x1c hw/acpi.32
                0x00000000c001ff20                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff3c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ff3c        0x7 hw/acpi.32
                0x00000000c001ff3c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff44       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff44       0xb8 hw/acpi.32
                0x00000000c001ff44                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fffc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fffc       0x23 hw/cpu.32
                0x00000000c001fffc                CPU::~CPU()
                0x00000000c001fffc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020020       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020020       0x2a hw/cpu.32
                0x00000000c0020020                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002004c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002004c        0x8 sys/kill.32
                0x00000000c002004c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020054        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020054        0x2 thr/prcssthr.32
                0x00000000c0020054                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020054                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020058       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020058       0x49 thr/prcssthr.32
                0x00000000c0020058                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020058                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00200a4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00200a4       0x42 thr/prcssthr.32
                0x00000000c00200a4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00200a4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00200e6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00200e6       0x23 hw/bus/pci.32
                0x00000000c00200e6                PCI::~PCI()
                0x00000000c00200e6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002010a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002010a       0x2a hw/bus/pci.32
                0x00000000c002010a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020134       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020134       0x23 hw/diskctrl/ide.32
                0x00000000c0020134                IDE::~IDE()
                0x00000000c0020134                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020158       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020158       0x2a hw/diskctrl/ide.32
                0x00000000c0020158                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020182       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020182       0x23 hw/diskctrl/satabus.32
                0x00000000c0020182                SATABus::~SATABus()
                0x00000000c0020182                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00201a6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00201a6       0x2a hw/diskctrl/satabus.32
                0x00000000c00201a6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00201d0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00201d0       0x23 hw/diskphys/ata.32
                0x00000000c00201d0                ATA::~ATA()
                0x00000000c00201d0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00201f4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00201f4       0x2a hw/diskphys/ata.32
                0x00000000c00201f4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002021e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002021e       0x23 hw/diskphys/atapi.32
                0x00000000c002021e                ATAPI::~ATAPI()
                0x00000000c002021e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020242       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020242       0x2a hw/diskphys/atapi.32
                0x00000000c0020242                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002026c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002026c       0x23 hw/diskphys/sata.32
                0x00000000c002026c                SATA::~SATA()
                0x00000000c002026c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020290       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020290       0x2a hw/diskphys/sata.32
                0x00000000c0020290                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00202ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00202ba       0x23 hw/diskphys/satapi.32
                0x00000000c00202ba                SATAPI::~SATAPI()
                0x00000000c00202ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00202de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00202de       0x2a hw/diskphys/satapi.32
                0x00000000c00202de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020308       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020308       0x23 hw/intctrl/apic.32
                0x00000000c0020308                IOAPIC::~IOAPIC()
                0x00000000c0020308                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002032c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002032c       0x2a hw/intctrl/apic.32
                0x00000000c002032c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020358       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020358       0x23 hw/timer/apictimer.32
                0x00000000c0020358                APICTimer::~APICTimer()
                0x00000000c0020358                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002037c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002037c       0x2a hw/timer/apictimer.32
                0x00000000c002037c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00203a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c00203a8       0x23 hw/timer/pit.32
                0x00000000c00203a8                PIT::~PIT()
                0x00000000c00203a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00203cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00203cc       0x2a hw/timer/pit.32
                0x00000000c00203cc                PIT::~PIT()

.rodata         0x00000000c00203f6     0x329a
                0x00000000c00203f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00203f6        0x2 
 .ctors         0x00000000c00203f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00203fc        0x4 core/unixfile.32
 .ctors         0x00000000c0020400        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020404        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020408                end_ctors = .
                0x00000000c0020408                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020408        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002040c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002040c                __DTOR_END__
                0x00000000c0020410                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020410       0x10 
 .rodata        0x00000000c0020420      0x101 acpica/utclib.32
                0x00000000c0020420                AcpiGbl_Ctypes
 *fill*         0x00000000c0020521        0x3 
 .rodata        0x00000000c0020524       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002053c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020586       0x1a 
 .rodata        0x00000000c00205a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002068d       0x13 
 .rodata        0x00000000c00206a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020aa0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020b0f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020c24       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c8c       0x2c core/computer.32
                0x00000000c0020c8c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020cb8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020ce8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020cf4       0x17 core/main.32
 *fill*         0x00000000c0020d0b        0x1 
 .rodata.str1.4
                0x00000000c0020d0c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020db1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e09       0x39 core/pipe.32
 *fill*         0x00000000c0020e42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020e44       0x1c core/pipe.32
                0x00000000c0020e44                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e60       0x2b core/terminal.32
 *fill*         0x00000000c0020e8b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e8c       0x1c core/terminal.32
                0x00000000c0020e8c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020ea8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020eca       0x15 core/unixfile.32
 *fill*         0x00000000c0020edf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ee0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020f2b        0x8 core/unixfile.32
 *fill*         0x00000000c0020f33        0x1 
 .rodata.str1.4
                0x00000000c0020f34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020f54       0x1c core/unixfile.32
                0x00000000c0020f54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f70       0x1c core/unixfile.32
                0x00000000c0020f70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f8c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021220      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021346       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021379        0x3 
 .rodata        0x00000000c002137c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00214cc      0x169 dbg/usban.32
 *fill*         0x00000000c0021635        0x3 
 .rodata.str1.4
                0x00000000c0021638      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002176f      0x222 fs/symlink.32
                                        0x22e (size before relaxing)
 .rodata.str1.1
                0x00000000c0021991       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00219b7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00219b8       0x6c fs/vfs.32
                0x00000000c00219b8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a24       0x1c fs/vfs.32
                0x00000000c0021a24                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a40       0x1c fs/vfs.32
                0x00000000c0021a40                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a5c       0x2c hal/bus.32
                0x00000000c0021a5c                vtable for Bus
 .rodata.str1.1
                0x00000000c0021a88       0x1e hal/clock.32
 *fill*         0x00000000c0021aa6        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021aa8       0x3c hal/clock.32
                0x00000000c0021aa8                vtable for Clock
 *fill*         0x00000000c0021ae4       0x1c 
 .rodata        0x00000000c0021b00       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b30       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021b88       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021b88       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021b88       0x2c hal/device.32
                0x00000000c0021b88                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021bb4       0x2c hal/device.32
                0x00000000c0021bb4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021be0       0x2c hal/diskctrl.32
                0x00000000c0021be0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c0c       0x38 hal/diskphys.32
                0x00000000c0021c0c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021c44       0x3e hal/intctrl.32
 *fill*         0x00000000c0021c82        0x2 
 .rodata.str1.4
                0x00000000c0021c84       0x5d hal/intctrl.32
 .rodata        0x00000000c0021ce1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021d34       0x34 hal/keybrd.32
                0x00000000c0021d34                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021d68       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021dac       0x2c hal/logidisk.32
                0x00000000c0021dac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021dd8       0x2c hal/mouse.32
                0x00000000c0021dd8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e04       0x34 hal/nic.32
                0x00000000c0021e04                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e38        0xb hal/partition.32
 *fill*         0x00000000c0021e43        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e44       0x44 hal/serial.32
                0x00000000c0021e44                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021e88       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021e88        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021e88       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021e88       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021e88       0x30 hal/timer.32
                0x00000000c0021e88                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021eb8       0x10 hal/vcache.32
                0x00000000c0021eb8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021ec8       0x93 hal/video.32
 *fill*         0x00000000c0021f5b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021f5c       0x4c hal/video.32
                0x00000000c0021f5c                vtable for Video
 .rodata.str1.4
                0x00000000c0021fa8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0022043      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022199       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022199        0x8 hw/acpi.32
 *fill*         0x00000000c0022199        0x3 
 .rodata._ZTV4ACPI
                0x00000000c002219c       0x2c hw/acpi.32
                0x00000000c002219c                vtable for ACPI
 .rodata.str1.1
                0x00000000c00221c8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022343        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022344       0x2c hw/cpu.32
                0x00000000c0022344                vtable for CPU
 .rodata.str1.1
                0x00000000c0022370       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00223b0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00223ec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002247d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022546       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002258e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00225b9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002262f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022674        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002267e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002269f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022735       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022789       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00227b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022981       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00229d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022ae8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022ae8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022ae8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022ae8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022ae8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022baa        0x2 
 .rodata        0x00000000c0022bac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022bdc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022d7b        0x1 
 .rodata.str1.4
                0x00000000c0022d7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022def       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022e04       0x3c arch/i386/rtc.32
                0x00000000c0022e04                vtable for RTC
 .rodata.str1.1
                0x00000000c0022e40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022e81        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022e84       0x6c fs/fat/vfslink.32
                0x00000000c0022e84                vtable for FAT
 .rodata.str1.1
                0x00000000c0022ef0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ef0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023028       0x6c fs/iso9660/vfslink.32
                0x00000000c0023028                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023094       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00230d8       0x34 hal/sound/sndcard.32
                0x00000000c00230d8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002310c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002314b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023183       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023224       0x2c hw/bus/pci.32
                0x00000000c0023224                vtable for PCI
 .rodata.str1.1
                0x00000000c0023250       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00232d7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00232d8       0x2c hw/diskctrl/ide.32
                0x00000000c00232d8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023304       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023328       0x2c hw/diskctrl/satabus.32
                0x00000000c0023328                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023354       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023366        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023368       0x38 hw/diskphys/ata.32
                0x00000000c0023368                vtable for ATA
 .rodata.str1.1
                0x00000000c00233a0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00233ad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00233b0       0x38 hw/diskphys/atapi.32
                0x00000000c00233b0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00233e8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023464       0x38 hw/diskphys/sata.32
                0x00000000c0023464                vtable for SATA
 .rodata.str1.1
                0x00000000c002349c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023586        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023588       0x38 hw/diskphys/satapi.32
                0x00000000c0023588                vtable for SATAPI
 .rodata        0x00000000c00235c0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00235c8       0x2c hw/intctrl/apic.32
                0x00000000c00235c8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00235f4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002360f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023610       0x30 hw/timer/apictimer.32
                0x00000000c0023610                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023640       0x1d hw/timer/pit.32
 *fill*         0x00000000c002365d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023660       0x30 hw/timer/pit.32
                0x00000000c0023660                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023690      0xbb1
 *(.data)
 .data          0x00000000c0023690        0x0 crti.32
 .data          0x00000000c0023690        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023690                __dso_handle
 .data          0x00000000c0023694        0x0 acpica/utclib.32
 .data          0x00000000c0023694        0x0 core/malloc.32
 .data          0x00000000c0023694        0x0 libk/ctype.32
 .data          0x00000000c0023694        0x0 libk/string.32
 .data          0x00000000c0023694        0x0 fs/fat/diskio.32
 .data          0x00000000c0023694        0x0 fs/fat/ff.32
 .data          0x00000000c0023694        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023694        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023694        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023694        0x0 core/computer.32
 .data          0x00000000c0023694        0x0 core/gdt.32
 .data          0x00000000c0023694        0x0 core/idle.32
 .data          0x00000000c0023694        0x0 core/idt.32
 .data          0x00000000c0023694        0x4 core/kheap.32
 .data          0x00000000c0023698        0x0 core/main.32
 .data          0x00000000c0023698        0x4 core/physmgr.32
                0x00000000c0023698                Phys::bitmap
 .data          0x00000000c002369c        0x0 core/pipe.32
 *fill*         0x00000000c002369c        0x4 
 .data          0x00000000c00236a0       0x60 core/terminal.32
                0x00000000c00236a0                VgaText::hiddenOut
                0x00000000c00236c0                ansiToVGAMappings
 .data          0x00000000c0023700        0x0 core/tss.32
 .data          0x00000000c0023700        0x4 core/unixfile.32
                0x00000000c0023700                UnixFile::nextFd
 .data          0x00000000c0023704       0x15 core/virtmgr.32
                0x00000000c0023704                Virt::pageAllocPtr
                0x00000000c0023708                Virt::bitmap
                0x00000000c002370c                Virt::swapfileSectorsPerPage
                0x00000000c0023710                Virt::swapfileLength
                0x00000000c0023714                Virt::swapfileSector
                0x00000000c0023718                Virt::swapfileDrive
 *fill*         0x00000000c0023719        0x3 
 .data          0x00000000c002371c        0x4 coreobjs/c++.32
                0x00000000c002371c                __stack_chk_guard
 .data          0x00000000c0023720        0x0 dbg/kconsole.32
 .data          0x00000000c0023720       0x28 dbg/usban.32
                0x00000000c0023720                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023748        0x0 fs/symlink.32
 .data          0x00000000c0023748        0x0 fs/vfs.32
 .data          0x00000000c0023748        0x0 hal/bus.32
 .data          0x00000000c0023748        0x0 hal/buzzer.32
 .data          0x00000000c0023748        0x0 hal/clock.32
 .data          0x00000000c0023748        0x0 hal/device.32
 .data          0x00000000c0023748        0x0 hal/diskctrl.32
 .data          0x00000000c0023748        0x0 hal/diskphys.32
 .data          0x00000000c0023748        0x0 hal/fpu.32
 .data          0x00000000c0023748        0x0 hal/intctrl.32
 .data          0x00000000c0023748        0x0 hal/keybrd.32
 .data          0x00000000c0023748        0x0 hal/logidisk.32
 .data          0x00000000c0023748        0x0 hal/mouse.32
 .data          0x00000000c0023748        0x0 hal/nic.32
 .data          0x00000000c0023748        0x0 hal/partition.32
 .data          0x00000000c0023748        0x0 hal/serial.32
 .data          0x00000000c0023748        0x0 hal/timer.32
 .data          0x00000000c0023748        0x0 hal/vcache.32
 .data          0x00000000c0023748        0x0 hal/video.32
 .data          0x00000000c0023748       0x10 hw/acpi.32
                0x00000000c0023748                legacyIRQRemaps
 .data          0x00000000c0023758        0x4 hw/cpu.32
                0x00000000c0023758                lastCode
 .data          0x00000000c002375c        0x0 krnl/atexit.32
 *fill*         0x00000000c002375c        0x4 
 .data          0x00000000c0023760      0x142 krnl/bootmsg.32
                0x00000000c0023760                KiSplashScreen
 .data          0x00000000c00238a2        0x0 krnl/compat.32
 *fill*         0x00000000c00238a2       0x1e 
 .data          0x00000000c00238c0      0x400 krnl/crc32.32
                0x00000000c00238c0                KiPolyLookupCRC32
 .data          0x00000000c0023cc0       0x4d krnl/env.32
                0x00000000c0023cc0                defaultSysEnv
 .data          0x00000000c0023d0d        0x0 krnl/inlines.32
 .data          0x00000000c0023d0d        0x0 krnl/panic.32
 .data          0x00000000c0023d0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023d0d        0x0 krnl/random.32
 .data          0x00000000c0023d0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023d0d       0x13 
 .data          0x00000000c0023d20       0x4c krnl/signal.32
                0x00000000c0023d20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023d6c       0x14 
 .data          0x00000000c0023d80       0xfc krnl/syscalls.32
                0x00000000c0023d80                systemCallHandlers
 .data          0x00000000c0023e7c        0x0 net/ethernet.32
 *fill*         0x00000000c0023e7c        0x4 
 .data          0x00000000c0023e80      0x100 reg/cm.32
                0x00000000c0023e80                CmComponents
 .data          0x00000000c0023f80        0x0 reg/registry.32
 .data          0x00000000c0023f80        0x0 sys/eject.32
 .data          0x00000000c0023f80        0x0 sys/exit.32
 .data          0x00000000c0023f80        0x0 sys/getcwd.32
 .data          0x00000000c0023f80        0x0 sys/getpid.32
 .data          0x00000000c0023f80        0x0 sys/getramdata.32
 .data          0x00000000c0023f80        0x0 sys/getvgaptr.32
 .data          0x00000000c0023f80        0x0 sys/kill.32
 .data          0x00000000c0023f80        0x0 sys/loaddll.32
 .data          0x00000000c0023f80        0x0 sys/read.32
 .data          0x00000000c0023f80        0x0 sys/registersignal.32
 .data          0x00000000c0023f80        0x0 sys/registry.32
 .data          0x00000000c0023f80        0x0 sys/sbrk.32
 .data          0x00000000c0023f80        0x0 sys/setcwd.32
 .data          0x00000000c0023f80        0x0 sys/settime.32
 .data          0x00000000c0023f80        0x0 sys/symlink.32
 .data          0x00000000c0023f80        0x0 sys/timezone.32
 .data          0x00000000c0023f80        0x0 sys/truncate.32
 .data          0x00000000c0023f80        0x0 sys/write.32
 .data          0x00000000c0023f80        0x0 sys/wsbe.32
 .data          0x00000000c0023f80        0x0 sys/yield.32
 .data          0x00000000c0023f80        0x0 thr/elf.32
 .data          0x00000000c0023f80        0x4 thr/prcssthr.32
                0x00000000c0023f80                Thr::nextPID
 .data          0x00000000c0023f84        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023f84       0x1c 
 .data          0x00000000c0023fa0      0x2a0 arch/i386/hal.32
                0x00000000c0023fa0                exceptionNames
 .data          0x00000000c0024240        0x0 arch/i386/pic.32
 .data          0x00000000c0024240        0x0 arch/i386/rtc.32
 .data          0x00000000c0024240        0x0 arch/i386/vga.32
 .data          0x00000000c0024240        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024240        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024240        0x1 fs/iso9660/vfslink.32
                0x00000000c0024240                recentDriveletter
 .data          0x00000000c0024241        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024241        0x0 hal/sound/sndport.32
 .data          0x00000000c0024241        0x0 hw/bus/isa.32
 .data          0x00000000c0024241        0x0 hw/bus/pci.32
 .data          0x00000000c0024241        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024241        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024241        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024241        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024241        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024241        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024241        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024241        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024241        0x0 hw/timer/pit.32
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024241        0x0 crtn.32
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024241        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024244        0x0
 .got           0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024244        0x0
 .got.plt       0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024244        0x0
 .igot.plt      0x00000000c0024244        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024244        0x0
 .tm_clone_table
                0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024241      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024241        0x3 
 .eh_frame      0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024244        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024244       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002429c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00242dc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024348       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
