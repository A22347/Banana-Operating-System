Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f4ba
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x601 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b122                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25f                KeInitialiseSymlinks()
 *fill*         0x00000000c000b315        0x1 
 .text          0x00000000c000b316      0xd8a fs/vfs.32
                0x00000000c000b316                File::read(unsigned long long, void*, int*)
                0x00000000c000b36e                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c6                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b44c                File::isAtty()
                0x00000000c000b450                Directory::isAtty()
                0x00000000c000b454                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b45a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b460                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b466                File::~File()
                0x00000000c000b466                File::~File()
                0x00000000c000b48a                File::~File()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4d8                Directory::~Directory()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b534                Filesystem::~Filesystem()
                0x00000000c000b558                Fs::getcwd(Process*, char*, int)
                0x00000000c000b582                Fs::initVFS()
                0x00000000c000b5ac                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b81c                File::File(char const*, Process*)
                0x00000000c000b81c                File::File(char const*, Process*)
                0x00000000c000b8e4                File::open(FileOpenMode)
                0x00000000c000b942                File::close()
                0x00000000c000b9a2                File::seek(unsigned long long)
                0x00000000c000b9f8                File::truncate(unsigned long long)
                0x00000000c000ba4e                File::tell(unsigned long long*)
                0x00000000c000ba9e                File::rewind()
                0x00000000c000bab2                File::unlink()
                0x00000000c000bafe                File::rename(char const*)
                0x00000000c000bb4c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bba8                File::exists()
                0x00000000c000bbe6                File::stat(unsigned long long*, bool*)
                0x00000000c000bc47                Fs::setcwd(Process*, char*)
                0x00000000c000bda6                Directory::Directory(char const*, Process*)
                0x00000000c000bda6                Directory::Directory(char const*, Process*)
                0x00000000c000be6e                Directory::open()
                0x00000000c000beca                Directory::close()
                0x00000000c000bf2a                Directory::unlink()
                0x00000000c000bf76                Directory::rename(char const*)
                0x00000000c000bfc4                Directory::exists()
                0x00000000c000c002                Directory::read(dirent*)
                0x00000000c000c04e                Directory::create()
                0x00000000c000c09a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c0a0       0x86 hal/bus.32
                0x00000000c000c0a0                Bus::Bus(char const*)
                0x00000000c000c0a0                Bus::Bus(char const*)
                0x00000000c000c0d8                Bus::~Bus()
                0x00000000c000c0d8                Bus::~Bus()
                0x00000000c000c0fc                Bus::~Bus()
 .text          0x00000000c000c126       0x96 hal/buzzer.32
                0x00000000c000c126                beepThread(void*)
                0x00000000c000c163                Krnl::beep(int, int, bool)
 .text          0x00000000c000c1bc      0x465 hal/clock.32
                0x00000000c000c1bc                User::loadClockSettings(int)
                0x00000000c000c20e                Clock::Clock(char const*)
                0x00000000c000c20e                Clock::Clock(char const*)
                0x00000000c000c244                Clock::~Clock()
                0x00000000c000c244                Clock::~Clock()
                0x00000000c000c268                Clock::~Clock()
                0x00000000c000c292                Clock::timeInSecondsLocal()
                0x00000000c000c2da                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c333                datetimeToSeconds(datetime_t)
                0x00000000c000c458                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c4b8                secondsToDatetime(unsigned long long)
                0x00000000c000c5fc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c621        0x1 
 .text          0x00000000c000c622      0x464 hal/device.32
                0x00000000c000c622                Device::hibernate()
                0x00000000c000c624                Device::wake()
                0x00000000c000c626                Device::detect()
                0x00000000c000c628                Device::disableLegacy()
                0x00000000c000c62a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c62c                DriverlessDevice::close(int, int, void*)
                0x00000000c000c630                DriverlessDevice::detect()
                0x00000000c000c632                DriverlessDevice::open(int, int, void*)
                0x00000000c000c646                Device::~Device()
                0x00000000c000c646                Device::~Device()
                0x00000000c000c654                Device::~Device()
                0x00000000c000c67c                Device::findAndLoadDriver()
                0x00000000c000c68a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c6b0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c6f0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c71a                Device::getParent()
                0x00000000c000c726                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c744                Device::addChild(Device*)
                0x00000000c000c788                Device::removeAllChildren()
                0x00000000c000c7ce                Device::hibernateAll()
                0x00000000c000c7fe                Device::wakeAll()
                0x00000000c000c82e                Device::detectAll()
                0x00000000c000c85e                Device::disableLegacyAll()
                0x00000000c000c860                Device::loadDriversForAll()
                0x00000000c000c862                Device::closeAll()
                0x00000000c000c898                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c8ce                Device::setName(char const*)
                0x00000000c000c8dc                Device::Device(char const*)
                0x00000000c000c8dc                Device::Device(char const*)
                0x00000000c000c9d8                Device::getName()
                0x00000000c000c9e2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c9e2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ca18                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ca5c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000ca86        0x2 
 .text          0x00000000c000ca88       0x86 hal/diskctrl.32
                0x00000000c000ca88                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca88                HardDiskController::HardDiskController(char const*)
                0x00000000c000cac0                HardDiskController::~HardDiskController()
                0x00000000c000cac0                HardDiskController::~HardDiskController()
                0x00000000c000cae4                HardDiskController::~HardDiskController()
 .text          0x00000000c000cb0e       0xe2 hal/diskphys.32
                0x00000000c000cb0e                PhysicalDisk::eject()
                0x00000000c000cb12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cb7a                PhysicalDisk::startCache()
                0x00000000c000cba2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cba2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cbc6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cbf0        0x0 hal/fpu.32
 .text          0x00000000c000cbf0      0x360 hal/intctrl.32
                0x00000000c000cbf0                int_handler
                0x00000000c000cc7a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ccc4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ce07                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ce3b                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ceb1                setupINTS()
                0x00000000c000cf0e                convertLegacyIRQNumber(int)
 .text          0x00000000c000cf50      0x8be hal/keybrd.32
                0x00000000c000cf50                startGUI(void*)
                0x00000000c000cfbe                startGUIVESA(void*)
                0x00000000c000d02c                sendKeyToTerminal(unsigned char)
                0x00000000c000d107                sendKeyboardToken(KeyboardToken)
                0x00000000c000d5f1                clearInternalKeybuffer(VgaText*)
                0x00000000c000d626                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d784                Keyboard::Keyboard(char const*)
                0x00000000c000d784                Keyboard::Keyboard(char const*)
                0x00000000c000d7c0                Keyboard::~Keyboard()
                0x00000000c000d7c0                Keyboard::~Keyboard()
                0x00000000c000d7e4                Keyboard::~Keyboard()
 .text          0x00000000c000d80e      0x3f8 hal/logidisk.32
                0x00000000c000d80e                LogicalDisk::close(int, int, void*)
                0x00000000c000d812                LogicalDisk::~LogicalDisk()
                0x00000000c000d812                LogicalDisk::~LogicalDisk()
                0x00000000c000d836                LogicalDisk::~LogicalDisk()
                0x00000000c000d860                LogicalDisk::open(int, int, void*)
                0x00000000c000d874                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d8ac                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d8f2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d8f2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d9b2                LogicalDisk::assignDriveLetter()
                0x00000000c000da6c                LogicalDisk::mount()
                0x00000000c000dab4                LogicalDisk::unmount()
                0x00000000c000dac4                LogicalDisk::eject()
                0x00000000c000dad8                LogicalDisk::unassignDriveLetter()
                0x00000000c000db2e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db9a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dc06        0x2 
 .text          0x00000000c000dc08       0x86 hal/mouse.32
                0x00000000c000dc08                Mouse::Mouse(char const*)
                0x00000000c000dc08                Mouse::Mouse(char const*)
                0x00000000c000dc40                Mouse::~Mouse()
                0x00000000c000dc40                Mouse::~Mouse()
                0x00000000c000dc64                Mouse::~Mouse()
 .text          0x00000000c000dc8e       0x90 hal/nic.32
                0x00000000c000dc8e                NIC::getMAC()
                0x00000000c000dc94                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc9a                NIC::NIC(char const*)
                0x00000000c000dc9a                NIC::NIC(char const*)
                0x00000000c000dcd0                NIC::~NIC()
                0x00000000c000dcd0                NIC::~NIC()
                0x00000000c000dcf4                NIC::~NIC()
 .text          0x00000000c000dd1e      0x33b hal/partition.32
                0x00000000c000dd1e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ddc6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e059        0x3 
 .text          0x00000000c000e05c       0x86 hal/serial.32
                0x00000000c000e05c                Serial::Serial(char const*)
                0x00000000c000e05c                Serial::Serial(char const*)
                0x00000000c000e094                Serial::~Serial()
                0x00000000c000e094                Serial::~Serial()
                0x00000000c000e0b8                Serial::~Serial()
 *fill*         0x00000000c000e0e2        0x2 
 .text          0x00000000c000e0e4      0x234 hal/timer.32
                0x00000000c000e0e4                Timer::Timer(char const*)
                0x00000000c000e0e4                Timer::Timer(char const*)
                0x00000000c000e11c                Timer::~Timer()
                0x00000000c000e11c                Timer::~Timer()
                0x00000000c000e140                Timer::~Timer()
                0x00000000c000e16a                Timer::read()
                0x00000000c000e175                setupTimer(int)
                0x00000000c000e1b0                timerHandler(unsigned int)
 .text          0x00000000c000e318      0x450 hal/vcache.32
                0x00000000c000e318                VCache::VCache(PhysicalDisk*)
                0x00000000c000e318                VCache::VCache(PhysicalDisk*)
                0x00000000c000e488                VCache::invalidateReadBuffer()
                0x00000000c000e498                VCache::writeWriteBuffer()
                0x00000000c000e4e4                VCache::~VCache()
                0x00000000c000e4e4                VCache::~VCache()
                0x00000000c000e53c                VCache::~VCache()
                0x00000000c000e564                VCache::write(unsigned long long, int, void*)
                0x00000000c000e65e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e768      0x4d9 hal/video.32
                0x00000000c000e768                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e7b4                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e824                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e8b4                Video::clearScreen(unsigned int)
                0x00000000c000e8e8                Video::putpixel(int, int, unsigned int)
                0x00000000c000e8f6                Video::readPixelApprox(int, int)
                0x00000000c000e90a                Video::Video(char const*)
                0x00000000c000e90a                Video::Video(char const*)
                0x00000000c000e940                Video::~Video()
                0x00000000c000e940                Video::~Video()
                0x00000000c000e964                Video::~Video()
                0x00000000c000e98e                Video::isMonochrome()
                0x00000000c000e99a                Video::getWidth()
                0x00000000c000e9a6                Video::getHeight()
                0x00000000c000e9b2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ea6e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ebd6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ec41        0x3 
 .text          0x00000000c000ec44     0x12d2 hw/acpi.32
                0x00000000c000ec44                ACPI::close(int, int, void*)
                0x00000000c000ecf8                findRSDP()
                0x00000000c000ed90                loadACPITables(unsigned char*)
                0x00000000c000effc                findRSDT(unsigned char*)
                0x00000000c000f154                findDataTable(unsigned char*, char*)
                0x00000000c000f1d4                scanMADT()
                0x00000000c000f68c                ACPI::ACPI()
                0x00000000c000f68c                ACPI::ACPI()
                0x00000000c000f6e0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f7dc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f8a8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f8b0                ACPI::detectPCI()
                0x00000000c000fad0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fb18                ACPI::sleep()
                0x00000000c000fb34                ACPI::open(int, int, void*)
 .text          0x00000000c000ff16      0xbc5 hw/cpu.32
                0x00000000c000ff16                CPU::close(int, int, void*)
                0x00000000c000ff1a                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ff36                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ff4e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ffc2                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010046                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010074                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00100a2                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00100d0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00100fe                CPU::CPU()
                0x00000000c00100fe                CPU::CPU()
                0x00000000c001018c                CPU::displayFeatures()
                0x00000000c001018e                CPU::detectFeatures()
                0x00000000c0010862                CPU::setupSMEP()
                0x00000000c001086e                CPU::setupUMIP()
                0x00000000c0010878                CPU::setupTSC()
                0x00000000c0010882                CPU::setupLargePages()
                0x00000000c001088c                CPU::setupPAT()
                0x00000000c00108c8                CPU::setupMTRR()
                0x00000000c00108ca                CPU::setupGlobalPages()
                0x00000000c00108d4                CPU::allowUsermodeDataAccess()
                0x00000000c00108e6                CPU::prohibitUsermodeDataAccess()
                0x00000000c00108f8                CPU::setupSMAP()
                0x00000000c0010906                CPU::setupFeatures()
                0x00000000c00109d2                CPU::open(int, int, void*)
 .text          0x00000000c0010adb       0xb6 krnl/atexit.32
                0x00000000c0010adb                KeInitialiseAtexit()
                0x00000000c0010afa                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010b2e                KeExecuteAtexit()
 .text          0x00000000c0010b91       0xdf krnl/bootmsg.32
                0x00000000c0010b91                KeDisplaySplashScreen()
                0x00000000c0010c0d                KeSetBootMessage(char const*)
 .text          0x00000000c0010c70       0x1d krnl/compat.32
                0x00000000c0010c70                Krnl::handlePowerButton()
                0x00000000c0010c80                Krnl::handleSleepButton()
 *fill*         0x00000000c0010c8d        0x1 
 .text          0x00000000c0010c8e      0x5bf krnl/env.32
                0x00000000c0010c8e                EnvVarContainer::getEnv(char const*)
                0x00000000c0010ccc                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010d8e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010d90                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010fb4                EnvVarContainer::__loadSystem()
                0x00000000c0010fce                EnvVarContainer::__loadUser()
                0x00000000c0010fd0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010fd0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010ff2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010ff2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011022                KeGetEnv(Process*, char const*)
                0x00000000c0011087                KeSetEnvSystem(char const*, char const*)
                0x00000000c00110a1                KeSetEnvUser(char const*, char const*)
                0x00000000c00110c0                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00110d3                KeDeleteEnvSystem(char const*)
                0x00000000c00110d4                KeDeleteEnvUser(char const*)
                0x00000000c00110d5                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00110d6                KeNewProcessEnv(Process*)
                0x00000000c00110f8                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011144                KeLoadSystemEnv()
                0x00000000c0011172                KeLoadUserEnv()
                0x00000000c0011198                KeFlushEnv()
                0x00000000c0011199                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00111b9                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001124d       0x94 krnl/inlines.32
                0x00000000c001124d                CPU::current()
                0x00000000c0011259                operator new(unsigned long)
                0x00000000c001125e                operator delete(void*)
                0x00000000c0011263                disableIRQs()
                0x00000000c0011265                enableIRQs()
                0x00000000c0011267                lockScheduler()
                0x00000000c001126f                unlockScheduler()
                0x00000000c001127e                lockStuff()
                0x00000000c001128c                unlockStuff()
                0x00000000c00112c6                Virt::getAKernelVAS()
                0x00000000c00112cc                __not_memcpy
 .text          0x00000000c00112e1        0xc krnl/panic.32
                0x00000000c00112e1                KePanic(char const*)
 .text          0x00000000c00112ed      0x142 krnl/powctrl.32
                0x00000000c00112ed                KePowerThread(void*)
                0x00000000c001131b                KeChangePowerSettings(PowerSettings)
                0x00000000c0011331                KeUserIOReceived()
                0x00000000c001133c                KeHandlePowerButton()
                0x00000000c0011371                KeHandleSleepButton()
                0x00000000c00113a6                KeSetupPowerManager()
 .text          0x00000000c001142f       0x9b krnl/random.32
                0x00000000c001142f                KeRand()
                0x00000000c001146f                KeSeedRand(unsigned int)
                0x00000000c0011498                KeInitRand()
 *fill*         0x00000000c00114ca        0x2 
 .text          0x00000000c00114cc      0x1bc krnl/resolve.32
                0x00000000c00114cc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011688      0x31f krnl/signal.32
                0x00000000c0011688                KiSigKill(int)
                0x00000000c001169c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001169d                KiDefaultSignalHandlerPause(int)
                0x00000000c00116c9                KiDefaultSignalHandlerResume(int)
                0x00000000c00116f5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00116fa                KeInitSignals()
                0x00000000c0011749                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001177f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00117fc                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00118f3                KiCheckSignalZ
                0x00000000c0011935                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011970                KiFinishSignalZ
 .text          0x00000000c00119a7      0xc74 krnl/syscalls.32
                0x00000000c00119a7                SysSeekDir(regs*)
                0x00000000c00119ac                SysTellDir(regs*)
                0x00000000c00119b1                SysVerify(regs*)
                0x00000000c00119bb                SysGetArgc(regs*)
                0x00000000c00119cf                SysTTYName(regs*)
                0x00000000c00119d7                SysFormatDisk(regs*)
                0x00000000c0011a3e                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011a92                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011aeb                SysShutdown(regs*)
                0x00000000c0011b78                SysRealpath(regs*)
                0x00000000c0011bc6                SysReadDir(regs*)
                0x00000000c0011c46                SysIsATTY(regs*)
                0x00000000c0011ca0                SysSeek(regs*)
                0x00000000c0011cfa                SysTell(regs*)
                0x00000000c0011d67                SysSize(regs*)
                0x00000000c0011dda                SysSizeFromFilename(regs*)
                0x00000000c0011e84                SysClose(regs*)
                0x00000000c0011ee4                SysOpenDir(regs*)
                0x00000000c0011f61                SysMakeDir(regs*)
                0x00000000c0011fcf                SysCloseDir(regs*)
                0x00000000c001201e                SysWait(regs*)
                0x00000000c001203f                SysNotImpl(regs*)
                0x00000000c001205a                SysPanic(regs*)
                0x00000000c0012075                SysRmdir(regs*)
                0x00000000c00120d3                SysUnlink(regs*)
                0x00000000c0012131                SysGetArgv(regs*)
                0x00000000c001217e                SysUSleep(regs*)
                0x00000000c00121a7                SysSpawn(regs*)
                0x00000000c0012218                SysGetEnv(regs*)
                0x00000000c00122cd                SysSetFatAttrib(regs*)
                0x00000000c0012336                SysPipe(regs*)
                0x00000000c001237b                SysGetUnixTime(regs*)
                0x00000000c001238f                string_ends_with(char const*, char const*)
                0x00000000c00123da                SysOpen(regs*)
                0x00000000c00125d9                KeSystemCall(regs*, void*)
 *fill*         0x00000000c001261b        0x1 
 .text          0x00000000c001261c      0x159 net/ethernet.32
                0x00000000c001261c                KeSwitchEndian16(unsigned short)
                0x00000000c0012640                KeSwitchEndian32(unsigned int)
                0x00000000c0012670                EthernetCRC32(unsigned char*, int)
                0x00000000c0012714                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012775      0xd51 reg/cm.32
                0x00000000c0012775                CmOpen(char const*)
                0x00000000c0012893                CmClose(Reghive_Tag*)
                0x00000000c00128a9                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c00128e5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c001295c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001299b                CmGetNext(Reghive_Tag*, int)
                0x00000000c00129cd                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012a09                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012a31                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012a52                CmExpand(Reghive_Tag*, int)
                0x00000000c0012acd                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012b53                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012c47                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012d7f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012de0                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012e10                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012e47                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012e71                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012eb1                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012f55                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012f83                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013120                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001316d                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00131e7                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001323a                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00132fe                zStrtok(char*, char const*)
                0x00000000c0013370                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00133f1                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013494                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00134c6      0x545 reg/registry.32
                0x00000000c00134c6                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013652                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00137a7                Reg::getLine(char*, char*, char*)
                0x00000000c00137de                Reg::readInt(char*, char*, int*)
                0x00000000c00138cc                Reg::readString(char*, char*, char*, int)
                0x00000000c001394d                Reg::readBool(char*, char*, bool*)
                0x00000000c0013972                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001399e                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00139ca                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013a0b       0x36 sys/eject.32
                0x00000000c0013a0b                SysEject(regs*)
 .text          0x00000000c0013a41       0x18 sys/exit.32
                0x00000000c0013a41                SysExit(regs*)
 .text          0x00000000c0013a59       0x1f sys/getcwd.32
                0x00000000c0013a59                SysGetCwd(regs*)
 .text          0x00000000c0013a78        0xc sys/getpid.32
                0x00000000c0013a78                SysGetPID(regs*)
 .text          0x00000000c0013a84       0x1a sys/getramdata.32
                0x00000000c0013a84                SysGetRAMData(regs*)
 .text          0x00000000c0013a9e       0x82 sys/getvgaptr.32
                0x00000000c0013a9e                SysGetVGAPtr(regs*)
 .text          0x00000000c0013b20       0xb9 sys/kill.32
                0x00000000c0013b20                SysKill(regs*)
 .text          0x00000000c0013bd9       0xa8 sys/loaddll.32
                0x00000000c0013bd9                SysLoadDLL(regs*)
 .text          0x00000000c0013c81       0x68 sys/read.32
                0x00000000c0013c81                SysRead(regs*)
 .text          0x00000000c0013ce9       0x29 sys/registersignal.32
                0x00000000c0013ce9                SysRegisterSignal(regs*)
 .text          0x00000000c0013d12      0x19c sys/registry.32
                0x00000000c0013d12                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013d89                SysRegistryReadExtent(regs*)
                0x00000000c0013dd1                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013df9                SysRegistryEnterDirectory(regs*)
                0x00000000c0013e21                SysRegistryGetNext(regs*)
                0x00000000c0013e49                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013e83                SysRegistryOpen(regs*)
                0x00000000c0013e97                SysRegistryClose(regs*)
 .text          0x00000000c0013eae       0x55 sys/sbrk.32
                0x00000000c0013eae                SysSbrk(regs*)
 .text          0x00000000c0013f03       0x1c sys/setcwd.32
                0x00000000c0013f03                SysSetCwd(regs*)
 .text          0x00000000c0013f1f       0x96 sys/settime.32
                0x00000000c0013f1f                SysSetTime(regs*)
 .text          0x00000000c0013fb5       0x4a sys/timezone.32
                0x00000000c0013fb5                SysTimezone(regs*)
 .text          0x00000000c0013fff       0xfc sys/truncate.32
                0x00000000c0013fff                SysTruncate(regs*)
 .text          0x00000000c00140fb       0x68 sys/write.32
                0x00000000c00140fb                SysWrite(regs*)
 .text          0x00000000c0014163       0x62 sys/wsbe.32
                0x00000000c0014163                SysWsbe(regs*)
 .text          0x00000000c00141c5       0x25 sys/yield.32
                0x00000000c00141c5                SysYield(regs*)
 .text          0x00000000c00141ea     0x1203 thr/elf.32
                0x00000000c00141ea                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014471                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014690                Thr::runtimeReferenceHelper()
                0x00000000c00146a3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00146f2                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00149b0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00150f1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015123                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001515a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015174                Thr::loadDLL(char const*, bool)
                0x00000000c00153b4                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00153ed        0x3 
 .text          0x00000000c00153f0     0x13b5 thr/prcssthr.32
                0x00000000c00153f0                userModeEntryPoint(void*)
                0x00000000c0015418                changeTSS
                0x00000000c0015448                switchToThread(ThreadControlBlock*)
                0x00000000c00154f8                Process::addArgs(char**)
                0x00000000c0015564                Process::Process(char const*, Process*, char**)
                0x00000000c0015564                Process::Process(char const*, Process*, char**)
                0x00000000c0015770                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015770                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015944                taskStartupFunction
                0x00000000c0015950                Semaphore::Semaphore(int)
                0x00000000c0015950                Semaphore::Semaphore(int)
                0x00000000c0015980                Mutex::Mutex()
                0x00000000c0015980                Mutex::Mutex()
                0x00000000c0015994                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015a9c                Process::createUserThread()
                0x00000000c0015abc                setupMultitasking(void (*)())
                0x00000000c0015be0                schedule()
                0x00000000c0015c74                Semaphore::tryAcquire()
                0x00000000c0015d34                Semaphore::assertLocked(char const*)
                0x00000000c0015db8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015de0                blockTask(TaskState)
                0x00000000c0015e18                waitTask(int, int*, int)
                0x00000000c0015e5c                milliTenthSleepUntil(unsigned int)
                0x00000000c0015efc                milliTenthSleep(unsigned int)
                0x00000000c0015f10                sleep(unsigned int)
                0x00000000c0015f20                Semaphore::acquire()
                0x00000000c0015fe8                taskReturned
                0x00000000c001602c                Thr::processFromPID(int)
                0x00000000c00160d8                unblockTask(ThreadControlBlock*)
                0x00000000c0016184                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016458                cleanerTaskFunction(void*)
                0x00000000c0016560                terminateTask(int)
                0x00000000c001664c                Thr::terminateFromIRQ(int)
                0x00000000c001665c                Semaphore::release()
 .text          0x00000000c00167a5      0xc31 vm86/vm8086.32
                0x00000000c00167a5                Vm::inbv(unsigned short)
                0x00000000c00167b8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00167ee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00167fe                Vm::getSegment(unsigned int)
                0x00000000c0016806                Vm::getOffset(unsigned int)
                0x00000000c001680b                Vm::mainloop2()
                0x00000000c0016845                Vm::mainVm8086Loop(void*)
                0x00000000c0016855                Vm::mainloop3(unsigned long)
                0x00000000c001687b                Vm::initialise8086()
                0x00000000c00168be                Vm::finish8086()
                0x00000000c001691f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016944                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00169fd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016b9b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016c38                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016c49                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016c5b                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016c6c                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016c81                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016c97                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016cac                Vm::faultHandler(regs*)
 .text          0x00000000c00173d6      0xaf0 arch/i386/hal.32
                0x00000000c00173d6                noCopro(unsigned long)
                0x00000000c00173d7                nmiHandler(regs*, void*)
                0x00000000c00173f0                doubleFault(regs*, void*)
                0x00000000c0017409                displayDebugInfo(regs*)
                0x00000000c001778e                HalSystemIdle()
                0x00000000c001780a                displayProgramFault(char const*)
                0x00000000c0017856                gpFault(regs*, void*)
                0x00000000c00178bd                pgFault(regs*, void*)
                0x00000000c0017946                otherISRHandler(regs*, void*)
                0x00000000c001797a                opcodeFault(regs*, void*)
                0x00000000c00179fd                i386SaveCoprocessor(void*)
                0x00000000c0017a11                i386LoadCoprocessor(void*)
                0x00000000c0017a25                x87EmulHandler(regs*, void*)
                0x00000000c0017ac2                HalInitialiseCoprocessor()
                0x00000000c0017b70                HalPanic(char const*)
                0x00000000c0017c84                HalQueryPerformanceCounter()
                0x00000000c0017c9f                HalInitialise()
                0x00000000c0017e55                HalMakeBeep(int)
                0x00000000c0017e8f                HalGetRand()
                0x00000000c0017e92                HalEndOfInterrupt(int)
                0x00000000c0017ec3                HalRestart()
                0x00000000c0017ec4                HalShutdown()
                0x00000000c0017ec5                HalSleep()
 *fill*         0x00000000c0017ec6        0x2 
 .text          0x00000000c0017ec8      0x2dc arch/i386/pic.32
                0x00000000c0017ec8                picIoWait()
                0x00000000c0017ed0                picDisable()
                0x00000000c0017f04                picGetIRQReg(int)
                0x00000000c0017f80                picOpen()
                0x00000000c0018104                picEOI(int)
 .text          0x00000000c00181a4      0x66e arch/i386/rtc.32
                0x00000000c00181a4                RTC::open(int, int, void*)
                0x00000000c00181a8                RTC::close(int, int, void*)
                0x00000000c00181ac                RTC::timeInSecondsUTC()
                0x00000000c00181be                RTC::timeInDatetimeUTC()
                0x00000000c00181e4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018222                RTC::~RTC()
                0x00000000c0018222                RTC::~RTC()
                0x00000000c0018246                RTC::~RTC()
                0x00000000c0018270                RTC::get_update_in_progress_flag()
                0x00000000c001828a                RTC::completeRTCRefresh()
                0x00000000c0018564                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018712                rtcIRQHandler(regs*, void*)
                0x00000000c0018758                RTC::RTC()
                0x00000000c0018758                RTC::RTC()
 *fill*         0x00000000c0018812        0x2 
 .text          0x00000000c0018814      0x1f4 arch/i386/vga.32
                0x00000000c0018814                HalConsoleScroll(int, int)
                0x00000000c001891c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018980                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018a08     0x14f3 fs/fat/vfslink.32
                0x00000000c0018a08                FAT::getName()
                0x00000000c0018a10                FAT::tell(void*, unsigned long long*)
                0x00000000c0018a4c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018a88                FAT::~FAT()
                0x00000000c0018a88                FAT::~FAT()
                0x00000000c0018aac                FAT::~FAT()
                0x00000000c0018ad4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018b78                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018c58                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018e3c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019058                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019218                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019388                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00193e8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019448                FAT::close(void*)
                0x00000000c001949c                FAT::closeDir(void*)
                0x00000000c00194f0                FAT::truncate(void*, unsigned long long)
                0x00000000c001955c                FAT::seek(void*, unsigned long long)
                0x00000000c00195b4                fatWrapperReadDisk
                0x00000000c00195f4                fatWrapperWriteDisk
                0x00000000c0019634                fatWrapperIoctl
                0x00000000c0019754                FAT::FAT()
                0x00000000c0019754                FAT::FAT()
                0x00000000c00197ac                FAT::fixFilepath(char*)
                0x00000000c00197ec                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019960                FAT::openDir(char const*, void**)
                0x00000000c0019a10                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b08                FAT::unlink(char const*)
                0x00000000c0019b88                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d40                FAT::rename(char const*, char const*)
                0x00000000c0019e0c                FAT::mkdir(char const*)
                0x00000000c0019e8c                FAT::exists(char const*)
 *fill*         0x00000000c0019efb        0x1 
 .text          0x00000000c0019efc       0x94 fs/iso9660/helper.32
                0x00000000c0019efc                isoReadDiscSectorHelper
                0x00000000c0019f58                iso_kprintf
                0x00000000c0019f74                iso_kprintfd
 .text          0x00000000c0019f90      0x71a fs/iso9660/vfslink.32
                0x00000000c0019f90                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f96                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019f9c                ISO9660::getName()
                0x00000000c0019fa2                ISO9660::closeDir(void*)
                0x00000000c0019fac                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019fb2                ISO9660::unlink(char const*)
                0x00000000c0019fb8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019fbe                ISO9660::rename(char const*, char const*)
                0x00000000c0019fc4                ISO9660::mkdir(char const*)
                0x00000000c0019fca                ISO9660::~ISO9660()
                0x00000000c0019fca                ISO9660::~ISO9660()
                0x00000000c0019fee                ISO9660::~ISO9660()
                0x00000000c001a016                ISO9660::exists(char const*)
                0x00000000c001a02a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a110                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a158                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a19a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a1d8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a22a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a36c                ISO9660::close(void*)
                0x00000000c001a39c                ISO9660::openDir(char const*, void**)
                0x00000000c001a476                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a591                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a610                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a682                ISO9660::ISO9660()
                0x00000000c001a682                ISO9660::ISO9660()
 .text          0x00000000c001a6aa      0x26c hal/sound/sndcard.32
                0x00000000c001a6aa                SoundCard::beginPlayback()
                0x00000000c001a6b8                SoundCard::stopPlayback()
                0x00000000c001a6c6                SoundCard::SoundCard(char const*)
                0x00000000c001a6c6                SoundCard::SoundCard(char const*)
                0x00000000c001a764                SoundCard::~SoundCard()
                0x00000000c001a764                SoundCard::~SoundCard()
                0x00000000c001a788                SoundCard::~SoundCard()
                0x00000000c001a7b2                SoundCard::configureRates(int, int, int)
                0x00000000c001a7e2                SoundCard::getSamples16(int, short*)
                0x00000000c001a83e                SoundCard::getSamples32(int, int*)
                0x00000000c001a8c4                SoundCard::addChannel(SoundPort*)
                0x00000000c001a902                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a916        0x2 
 .text          0x00000000c001a918      0x393 hal/sound/sndport.32
                0x00000000c001a918                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a918                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a9a4                SoundPort::~SoundPort()
                0x00000000c001a9a4                SoundPort::~SoundPort()
                0x00000000c001a9d8                SoundPort::unpause()
                0x00000000c001a9e4                SoundPort::pause()
                0x00000000c001a9f0                SoundPort::getBufferUsed()
                0x00000000c001a9f8                SoundPort::getBufferSize()
                0x00000000c001aa00                SoundPort::buffer16(short*, int)
                0x00000000c001aa8c                SoundPort::buffer32(int*, int)
                0x00000000c001ab18                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001abe8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001acab        0x0 hw/bus/isa.32
 *fill*         0x00000000c001acab        0x1 
 .text          0x00000000c001acac      0xbc5 hw/bus/pci.32
                0x00000000c001acac                PCI::open(int, int, void*)
                0x00000000c001acca                PCI::close(int, int, void*)
                0x00000000c001acce                PCI::PCI()
                0x00000000c001acce                PCI::PCI()
                0x00000000c001ad66                PCI::readBAR8(unsigned int, int)
                0x00000000c001ad82                PCI::readBAR16(unsigned int, int)
                0x00000000c001ada0                PCI::readBAR32(unsigned int, int)
                0x00000000c001adbc                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001addc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001adfe                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ae1e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae94                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af3e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af62                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001af8a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001afd4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001affc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b020                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b044                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b06c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b0d0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b1b6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b480                PCI::checkBus(unsigned char)
                0x00000000c001b4a4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b62a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b7a6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b818                PCI::detect()
 *fill*         0x00000000c001b871        0x1 
 .text          0x00000000c001b872      0xb96 hw/diskctrl/ide.32
                0x00000000c001b872                IDE::close(int, int, void*)
                0x00000000c001b876                IDE::IDE()
                0x00000000c001b876                IDE::IDE()
                0x00000000c001b8aa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b8bc                selectDrive(unsigned char, unsigned char)
                0x00000000c001b8be                IDE::getBase(unsigned char)
                0x00000000c001b8d0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b990                IDE::read(unsigned char, unsigned char)
                0x00000000c001ba44                IDE::waitInterrupt(unsigned char)
                0x00000000c001baa6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bac2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bade                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bb28                IDE::open(int, int, void*)
                0x00000000c001bf62                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c032                IDE::detect()
                0x00000000c001c2fa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3b4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c408      0x32c hw/diskctrl/satabus.32
                0x00000000c001c408                SATABus::close(int, int, void*)
                0x00000000c001c40c                SATABus::detect()
                0x00000000c001c40e                SATABus::SATABus()
                0x00000000c001c40e                SATABus::SATABus()
                0x00000000c001c494                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4c6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c50e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c52e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c558                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c66a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c714                SATABus::open(int, int, void*)
 .text          0x00000000c001c734      0x96d hw/diskphys/ata.32
                0x00000000c001c734                ATA::close(int, int, void*)
                0x00000000c001c758                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c75a                ATA::ATA()
                0x00000000c001c75a                ATA::ATA()
                0x00000000c001c788                ATA::flush(bool)
                0x00000000c001c7d6                ATA::readyForCommand()
                0x00000000c001c822                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cbe6                ATA::detectCHS()
                0x00000000c001cc10                ATA::open(int, int, void*)
                0x00000000c001ccdc                combineCharAndColour(char, unsigned char)
                0x00000000c001cced                combineColours(unsigned char, unsigned char)
                0x00000000c001ccfa                ATA::read(unsigned long long, int, void*)
                0x00000000c001ced0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d0a1        0x1 
 .text          0x00000000c001d0a2      0x612 hw/diskphys/atapi.32
                0x00000000c001d0a2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d0a8                ATAPI::close(int, int, void*)
                0x00000000c001d0cc                ATAPI::ATAPI()
                0x00000000c001d0cc                ATAPI::ATAPI()
                0x00000000c001d0fa                ATAPI::readyForCommand()
                0x00000000c001d14c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d40c                ATAPI::diskRemoved()
                0x00000000c001d446                ATAPI::eject()
                0x00000000c001d48e                ATAPI::diskInserted()
                0x00000000c001d49a                ATAPI::detectMedia()
                0x00000000c001d55a                ATAPI::open(int, int, void*)
                0x00000000c001d63a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d6b4      0x7ff hw/diskphys/sata.32
                0x00000000c001d6b4                SATA::close(int, int, void*)
                0x00000000c001d6d8                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d6da                SATA::open(int, int, void*)
                0x00000000c001d784                SATA::SATA()
                0x00000000c001d784                SATA::SATA()
                0x00000000c001d7b2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001da04                SATA::read(unsigned long long, int, void*)
                0x00000000c001dc54                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001deb3        0x1 
 .text          0x00000000c001deb4      0x5d8 hw/diskphys/satapi.32
                0x00000000c001deb4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001deba                SATAPI::close(int, int, void*)
                0x00000000c001dede                SATAPI::SATAPI()
                0x00000000c001dede                SATAPI::SATAPI()
                0x00000000c001df0c                SATAPI::diskRemoved()
                0x00000000c001df0e                SATAPI::diskInserted()
                0x00000000c001df2a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e210                SATAPI::eject()
                0x00000000c001e24c                SATAPI::detectMedia()
                0x00000000c001e2a2                SATAPI::open(int, int, void*)
                0x00000000c001e3a2                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e48c      0x45b hw/intctrl/apic.32
                0x00000000c001e48c                IOAPIC::close(int, int, void*)
                0x00000000c001e492                apicGetBase()
                0x00000000c001e4d8                IOAPIC::IOAPIC()
                0x00000000c001e4d8                IOAPIC::IOAPIC()
                0x00000000c001e500                apicOpen()
                0x00000000c001e67c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e6ae                IOAPIC::read(int)
                0x00000000c001e6d6                IOAPIC::open(int, int, void*)
                0x00000000c001e7bc                IOAPIC::write(int, int)
                0x00000000c001e7e8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e8e7        0x1 
 .text          0x00000000c001e8e8       0xf0 hw/timer/apictimer.32
                0x00000000c001e8e8                APICTimer::close(int, int, void*)
                0x00000000c001e8f0                apicTimerHandler(regs*, void*)
                0x00000000c001e918                APICTimer::open(int, int, void*)
                0x00000000c001e988                APICTimer::write(int)
                0x00000000c001e9b0                APICTimer::APICTimer()
                0x00000000c001e9b0                APICTimer::APICTimer()
 .text          0x00000000c001e9d8      0x1ad hw/timer/pit.32
                0x00000000c001e9d8                PIT::write(int)
                0x00000000c001ea5c                pitHandler(regs*, void*)
                0x00000000c001ea84                PIT::open(int, int, void*)
                0x00000000c001ead4                PIT::close(int, int, void*)
                0x00000000c001eb04                PIT::PIT()
                0x00000000c001eb04                PIT::PIT()
 *fill*         0x00000000c001eb85        0xb 
 .text          0x00000000c001eb90       0x83 arch/i386/avx.32
                0x00000000c001eb90                avxDetect
                0x00000000c001ebba                avxSave
                0x00000000c001ebcb                avxLoad
                0x00000000c001ebdc                avxInit
                0x00000000c001ebfe                avxClose
                0x00000000c001ebff                wouldSheSayYes
 *fill*         0x00000000c001ec13        0xd 
 .text          0x00000000c001ec20      0x2ec arch/i386/interrupt.32
                0x00000000c001ec20                isr0
                0x00000000c001ec30                isr1
                0x00000000c001ec3a                isr2
                0x00000000c001ec44                isr3
                0x00000000c001ec4e                isr4
                0x00000000c001ec58                isr5
                0x00000000c001ec62                isr6
                0x00000000c001ec6c                isr7
                0x00000000c001ec76                isr8
                0x00000000c001ec7e                isr9
                0x00000000c001ec88                isr10
                0x00000000c001ec90                isr11
                0x00000000c001ec98                isr12
                0x00000000c001eca0                isr13
                0x00000000c001ecba                isr14
                0x00000000c001ecc2                isr15
                0x00000000c001eccc                isr16
                0x00000000c001ecd6                isr17
                0x00000000c001ece0                isr18
                0x00000000c001ecea                irq3
                0x00000000c001ecf4                irq4
                0x00000000c001ecfe                irq5
                0x00000000c001ed08                irq6
                0x00000000c001ed12                irq7
                0x00000000c001ed1c                irq8
                0x00000000c001ed26                irq9
                0x00000000c001ed30                irq10
                0x00000000c001ed3a                irq11
                0x00000000c001ed44                irq12
                0x00000000c001ed4e                irq13
                0x00000000c001ed58                irq14
                0x00000000c001ed62                irq15
                0x00000000c001ed6c                irq1
                0x00000000c001ed73                irq2
                0x00000000c001ed7a                isr96
                0x00000000c001ed81                irq0
                0x00000000c001ed86                int_common_stub
                0x00000000c001edb8                syscall_common_stub
                0x00000000c001eebc                irq16
                0x00000000c001eec6                irq17
                0x00000000c001eed0                irq18
                0x00000000c001eeda                irq19
                0x00000000c001eee4                irq20
                0x00000000c001eeee                irq21
                0x00000000c001eef8                irq22
                0x00000000c001ef02                irq23
 *fill*         0x00000000c001ef0c        0x4 
 .text          0x00000000c001ef10       0x10 arch/i386/rdrand.32
                0x00000000c001ef10                i386GetRDRAND
 .text          0x00000000c001ef20       0x39 arch/i386/sse.32
                0x00000000c001ef20                absolutelyNoChanceInHell
                0x00000000c001ef20                sseDetect
                0x00000000c001ef38                sseSave
                0x00000000c001ef40                sseLoad
                0x00000000c001ef48                sseInit
                0x00000000c001ef58                sseClose
 *fill*         0x00000000c001ef59        0x7 
 .text          0x00000000c001ef60       0x49 arch/i386/x87.32
                0x00000000c001ef66                x87Detect
                0x00000000c001ef81                x87Save
                0x00000000c001ef88                x87Load
                0x00000000c001ef8f                x87Init
                0x00000000c001efa8                x87Close
 *fill*         0x00000000c001efa9        0x3 
 .text          0x00000000c001efac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001efd1        0x0 crtn.32
 *fill*         0x00000000c001efd1        0x3 
 .text          0x00000000c001efd4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001efd4                __divdi3
 *fill*         0x00000000c001f11f        0x1 
 .text          0x00000000c001f120      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f120                __moddi3
 *fill*         0x00000000c001f29e        0x2 
 .text          0x00000000c001f2a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f2a0                __udivdi3
 *fill*         0x00000000c001f39f        0x1 
 .text          0x00000000c001f3a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f3a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f4c0        0x0
 .iplt          0x00000000c001f4c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f4ba        0xf
 .init          0x00000000c001f4ba        0x3 crti.32
                0x00000000c001f4ba                _init
 .init          0x00000000c001f4bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f4c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f4c7        0x2 crtn.32

.fini           0x00000000c001f4c9        0xa
 .fini          0x00000000c001f4c9        0x3 crti.32
                0x00000000c001f4c9                _fini
 .fini          0x00000000c001f4cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f4d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f4d4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f4d4       0x23 core/computer.32
                0x00000000c001f4d4                Computer::~Computer()
                0x00000000c001f4d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f4f8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f4f8       0x2a core/computer.32
                0x00000000c001f4f8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f522       0x21
 .text._Z10idleCommonv
                0x00000000c001f522       0x21 core/idle.32
                0x00000000c001f522                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f544        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f544        0x2 core/unixfile.32
                0x00000000c001f544                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f544                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f546       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f546       0x42 core/unixfile.32
                0x00000000c001f546                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f546                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f588       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f588       0xd3 core/unixfile.32
                0x00000000c001f588                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f65c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f65c        0x7 core/unixfile.32
                0x00000000c001f65c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f664       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f664       0xa1 core/unixfile.32
                0x00000000c001f664                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f706        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f706        0x8 core/unixfile.32
                0x00000000c001f706                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f70e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f70e       0x1a hal/device.32
                0x00000000c001f70e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f70e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f728       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f728       0x2a hal/device.32
                0x00000000c001f728                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f752       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f752       0xdc hal/device.32
                0x00000000c001f752                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f82e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f82e       0x42 hal/device.32
                0x00000000c001f82e                LinkedList<Device>::LinkedList()
                0x00000000c001f82e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f870       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f870       0x1c hal/timer.32
                0x00000000c001f870                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f88c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f88c        0x7 hal/timer.32
                0x00000000c001f88c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f894       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f894       0xbc hal/timer.32
                0x00000000c001f894                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f950       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f950       0xda hal/timer.32
                0x00000000c001f950                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fa2c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fa2c       0x23 hw/acpi.32
                0x00000000c001fa2c                ACPI::~ACPI()
                0x00000000c001fa2c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fa50       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fa50       0x2a hw/acpi.32
                0x00000000c001fa50                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa7c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fa7c        0x2 hw/acpi.32
                0x00000000c001fa7c                LinkedList<Device>::~LinkedList()
                0x00000000c001fa7c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa80       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fa80       0x1c hw/acpi.32
                0x00000000c001fa80                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa9c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa9c        0x7 hw/acpi.32
                0x00000000c001fa9c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001faa4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001faa4       0xb8 hw/acpi.32
                0x00000000c001faa4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fb5c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fb5c       0x23 hw/cpu.32
                0x00000000c001fb5c                CPU::~CPU()
                0x00000000c001fb5c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fb80       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fb80       0x2a hw/cpu.32
                0x00000000c001fb80                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fbac        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fbac        0x8 sys/kill.32
                0x00000000c001fbac                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fbb4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fbb4        0x2 thr/prcssthr.32
                0x00000000c001fbb4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fbb4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fbb8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fbb8       0x49 thr/prcssthr.32
                0x00000000c001fbb8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fbb8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fc04       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fc04       0x42 thr/prcssthr.32
                0x00000000c001fc04                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fc04                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fc46       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fc46       0x23 hw/bus/pci.32
                0x00000000c001fc46                PCI::~PCI()
                0x00000000c001fc46                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fc6a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fc6a       0x2a hw/bus/pci.32
                0x00000000c001fc6a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fc94       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fc94       0x23 hw/diskctrl/ide.32
                0x00000000c001fc94                IDE::~IDE()
                0x00000000c001fc94                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fcb8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fcb8       0x2a hw/diskctrl/ide.32
                0x00000000c001fcb8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fce2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fce2       0x23 hw/diskctrl/satabus.32
                0x00000000c001fce2                SATABus::~SATABus()
                0x00000000c001fce2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fd06       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fd06       0x2a hw/diskctrl/satabus.32
                0x00000000c001fd06                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fd30       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fd30       0x23 hw/diskphys/ata.32
                0x00000000c001fd30                ATA::~ATA()
                0x00000000c001fd30                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fd54       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fd54       0x2a hw/diskphys/ata.32
                0x00000000c001fd54                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fd7e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fd7e       0x23 hw/diskphys/atapi.32
                0x00000000c001fd7e                ATAPI::~ATAPI()
                0x00000000c001fd7e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fda2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fda2       0x2a hw/diskphys/atapi.32
                0x00000000c001fda2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fdcc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fdcc       0x23 hw/diskphys/sata.32
                0x00000000c001fdcc                SATA::~SATA()
                0x00000000c001fdcc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fdf0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fdf0       0x2a hw/diskphys/sata.32
                0x00000000c001fdf0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fe1a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fe1a       0x23 hw/diskphys/satapi.32
                0x00000000c001fe1a                SATAPI::~SATAPI()
                0x00000000c001fe1a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fe3e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fe3e       0x2a hw/diskphys/satapi.32
                0x00000000c001fe3e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fe68       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fe68       0x23 hw/intctrl/apic.32
                0x00000000c001fe68                IOAPIC::~IOAPIC()
                0x00000000c001fe68                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fe8c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fe8c       0x2a hw/intctrl/apic.32
                0x00000000c001fe8c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001feb8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001feb8       0x23 hw/timer/apictimer.32
                0x00000000c001feb8                APICTimer::~APICTimer()
                0x00000000c001feb8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fedc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fedc       0x2a hw/timer/apictimer.32
                0x00000000c001fedc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ff08       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ff08       0x23 hw/timer/pit.32
                0x00000000c001ff08                PIT::~PIT()
                0x00000000c001ff08                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ff2c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ff2c       0x2a hw/timer/pit.32
                0x00000000c001ff2c                PIT::~PIT()

.rodata         0x00000000c001ff56     0x319a
                0x00000000c001ff56                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ff56        0x2 
 .ctors         0x00000000c001ff58        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ff5c        0x4 core/unixfile.32
 .ctors         0x00000000c001ff60        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ff64        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff68                end_ctors = .
                0x00000000c001ff68                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ff68        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ff6c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff6c                __DTOR_END__
                0x00000000c001ff70                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ff70       0x10 
 .rodata        0x00000000c001ff80      0x101 acpica/utclib.32
                0x00000000c001ff80                AcpiGbl_Ctypes
 *fill*         0x00000000c0020081        0x3 
 .rodata        0x00000000c0020084       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002009c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00200e6       0x1a 
 .rodata        0x00000000c0020100       0xed fs/fat/ff.32
 *fill*         0x00000000c00201ed       0x13 
 .rodata        0x00000000c0020200      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020600       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002066f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020784       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00207ec       0x2c core/computer.32
                0x00000000c00207ec                vtable for Computer
 .rodata.str1.4
                0x00000000c0020818       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020848        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020854       0x17 core/main.32
 *fill*         0x00000000c002086b        0x1 
 .rodata.str1.4
                0x00000000c002086c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020911       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020969       0x39 core/pipe.32
 *fill*         0x00000000c00209a2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00209a4       0x1c core/pipe.32
                0x00000000c00209a4                vtable for Pipe
 .rodata.str1.1
                0x00000000c00209c0       0x2b core/terminal.32
 *fill*         0x00000000c00209eb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00209ec       0x1c core/terminal.32
                0x00000000c00209ec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020a08       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020a2a       0x15 core/unixfile.32
 *fill*         0x00000000c0020a3f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020a40       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020a8b        0x8 core/unixfile.32
 *fill*         0x00000000c0020a93        0x1 
 .rodata.str1.4
                0x00000000c0020a94       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020ab4       0x1c core/unixfile.32
                0x00000000c0020ab4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020ad0       0x1c core/unixfile.32
                0x00000000c0020ad0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020aec      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d80      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020ea6       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020ed9        0x3 
 .rodata        0x00000000c0020edc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002102c      0x169 dbg/usban.32
 *fill*         0x00000000c0021195        0x3 
 .rodata.str1.4
                0x00000000c0021198      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00212cf      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c00213ef       0x3b fs/vfs.32
                                         0x3d (size before relaxing)
 *fill*         0x00000000c002142a        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c002142c       0x6c fs/vfs.32
                0x00000000c002142c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021498       0x1c fs/vfs.32
                0x00000000c0021498                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00214b4       0x1c fs/vfs.32
                0x00000000c00214b4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00214d0       0x2c hal/bus.32
                0x00000000c00214d0                vtable for Bus
 .rodata.str1.1
                0x00000000c00214fc       0x1e hal/clock.32
 *fill*         0x00000000c002151a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002151c       0x3c hal/clock.32
                0x00000000c002151c                vtable for Clock
 *fill*         0x00000000c0021558        0x8 
 .rodata        0x00000000c0021560       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021590       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00215e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00215e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00215e8       0x2c hal/device.32
                0x00000000c00215e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021614       0x2c hal/device.32
                0x00000000c0021614                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021640       0x2c hal/diskctrl.32
                0x00000000c0021640                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002166c       0x38 hal/diskphys.32
                0x00000000c002166c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00216a4       0x3e hal/intctrl.32
 *fill*         0x00000000c00216e2        0x2 
 .rodata.str1.4
                0x00000000c00216e4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021741       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021794       0x34 hal/keybrd.32
                0x00000000c0021794                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00217c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002180c       0x2c hal/logidisk.32
                0x00000000c002180c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021838       0x2c hal/mouse.32
                0x00000000c0021838                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021864       0x34 hal/nic.32
                0x00000000c0021864                vtable for NIC
 .rodata.str1.1
                0x00000000c0021898        0xb hal/partition.32
 *fill*         0x00000000c00218a3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00218a4       0x44 hal/serial.32
                0x00000000c00218a4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00218e8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00218e8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00218e8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00218e8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00218e8       0x30 hal/timer.32
                0x00000000c00218e8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021918       0x10 hal/vcache.32
                0x00000000c0021918                vtable for VCache
 .rodata.str1.1
                0x00000000c0021928       0x93 hal/video.32
 *fill*         0x00000000c00219bb        0x1 
 .rodata._ZTV5Video
                0x00000000c00219bc       0x4c hal/video.32
                0x00000000c00219bc                vtable for Video
 .rodata.str1.4
                0x00000000c0021a08       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021aa3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021bf9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021bf9        0x8 hw/acpi.32
 *fill*         0x00000000c0021bf9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021bfc       0x2c hw/acpi.32
                0x00000000c0021bfc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021c28      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021da3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021da4       0x2c hw/cpu.32
                0x00000000c0021da4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021dd0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e10       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021e4c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021edd       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021fa6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021fee       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022019       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002208f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00220d4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00220de       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00220ff       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022195       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00221e9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022215      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00223e1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022438      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022548       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022548       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022548       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022548        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022548       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002260a        0x2 
 .rodata        0x00000000c002260c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002263c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00227db        0x1 
 .rodata.str1.4
                0x00000000c00227dc       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002284f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022864       0x3c arch/i386/rtc.32
                0x00000000c0022864                vtable for RTC
 .rodata.str1.1
                0x00000000c00228a0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00228e1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00228e4       0x6c fs/fat/vfslink.32
                0x00000000c00228e4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022950       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022950      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022a88       0x6c fs/iso9660/vfslink.32
                0x00000000c0022a88                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022af4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022b38       0x34 hal/sound/sndcard.32
                0x00000000c0022b38                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022b6c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022bab       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022be3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022c84       0x2c hw/bus/pci.32
                0x00000000c0022c84                vtable for PCI
 .rodata.str1.1
                0x00000000c0022cb0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022d37        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022d38       0x2c hw/diskctrl/ide.32
                0x00000000c0022d38                vtable for IDE
 .rodata.str1.4
                0x00000000c0022d64       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022d88       0x2c hw/diskctrl/satabus.32
                0x00000000c0022d88                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022db4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022dc6        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022dc8       0x38 hw/diskphys/ata.32
                0x00000000c0022dc8                vtable for ATA
 .rodata.str1.1
                0x00000000c0022e00        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022e0d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022e10       0x38 hw/diskphys/atapi.32
                0x00000000c0022e10                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022e48       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022ec4       0x38 hw/diskphys/sata.32
                0x00000000c0022ec4                vtable for SATA
 .rodata.str1.1
                0x00000000c0022efc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022fe6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022fe8       0x38 hw/diskphys/satapi.32
                0x00000000c0022fe8                vtable for SATAPI
 .rodata        0x00000000c0023020        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023028       0x2c hw/intctrl/apic.32
                0x00000000c0023028                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023054       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002306f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023070       0x30 hw/timer/apictimer.32
                0x00000000c0023070                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00230a0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00230bd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00230c0       0x30 hw/timer/pit.32
                0x00000000c00230c0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00230f0      0x7b1
 *(.data)
 .data          0x00000000c00230f0        0x0 crti.32
 .data          0x00000000c00230f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00230f0                __dso_handle
 .data          0x00000000c00230f4        0x0 acpica/utclib.32
 .data          0x00000000c00230f4        0x0 core/malloc.32
 .data          0x00000000c00230f4        0x0 libk/ctype.32
 .data          0x00000000c00230f4        0x0 libk/string.32
 .data          0x00000000c00230f4        0x0 fs/fat/diskio.32
 .data          0x00000000c00230f4        0x0 fs/fat/ff.32
 .data          0x00000000c00230f4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00230f4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00230f4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00230f4        0x0 core/computer.32
 .data          0x00000000c00230f4        0x0 core/gdt.32
 .data          0x00000000c00230f4        0x0 core/idle.32
 .data          0x00000000c00230f4        0x0 core/idt.32
 .data          0x00000000c00230f4        0x4 core/kheap.32
 .data          0x00000000c00230f8        0x0 core/main.32
 .data          0x00000000c00230f8        0x4 core/physmgr.32
                0x00000000c00230f8                Phys::bitmap
 .data          0x00000000c00230fc        0x0 core/pipe.32
 *fill*         0x00000000c00230fc        0x4 
 .data          0x00000000c0023100       0x60 core/terminal.32
                0x00000000c0023100                VgaText::hiddenOut
                0x00000000c0023120                ansiToVGAMappings
 .data          0x00000000c0023160        0x0 core/tss.32
 .data          0x00000000c0023160        0x4 core/unixfile.32
                0x00000000c0023160                UnixFile::nextFd
 .data          0x00000000c0023164       0x15 core/virtmgr.32
                0x00000000c0023164                Virt::pageAllocPtr
                0x00000000c0023168                Virt::bitmap
                0x00000000c002316c                Virt::swapfileSectorsPerPage
                0x00000000c0023170                Virt::swapfileLength
                0x00000000c0023174                Virt::swapfileSector
                0x00000000c0023178                Virt::swapfileDrive
 *fill*         0x00000000c0023179        0x3 
 .data          0x00000000c002317c        0x4 coreobjs/c++.32
                0x00000000c002317c                __stack_chk_guard
 .data          0x00000000c0023180        0x0 dbg/kconsole.32
 .data          0x00000000c0023180       0x28 dbg/usban.32
                0x00000000c0023180                KiUsbanTypeMismatchTypes
 .data          0x00000000c00231a8        0x0 fs/symlink.32
 .data          0x00000000c00231a8        0x0 fs/vfs.32
 .data          0x00000000c00231a8        0x0 hal/bus.32
 .data          0x00000000c00231a8        0x0 hal/buzzer.32
 .data          0x00000000c00231a8        0x0 hal/clock.32
 .data          0x00000000c00231a8        0x0 hal/device.32
 .data          0x00000000c00231a8        0x0 hal/diskctrl.32
 .data          0x00000000c00231a8        0x0 hal/diskphys.32
 .data          0x00000000c00231a8        0x0 hal/fpu.32
 .data          0x00000000c00231a8        0x0 hal/intctrl.32
 .data          0x00000000c00231a8        0x0 hal/keybrd.32
 .data          0x00000000c00231a8        0x0 hal/logidisk.32
 .data          0x00000000c00231a8        0x0 hal/mouse.32
 .data          0x00000000c00231a8        0x0 hal/nic.32
 .data          0x00000000c00231a8        0x0 hal/partition.32
 .data          0x00000000c00231a8        0x0 hal/serial.32
 .data          0x00000000c00231a8        0x0 hal/timer.32
 .data          0x00000000c00231a8        0x0 hal/vcache.32
 .data          0x00000000c00231a8        0x0 hal/video.32
 .data          0x00000000c00231a8       0x10 hw/acpi.32
                0x00000000c00231a8                legacyIRQRemaps
 .data          0x00000000c00231b8        0x4 hw/cpu.32
                0x00000000c00231b8                lastCode
 .data          0x00000000c00231bc        0x0 krnl/atexit.32
 *fill*         0x00000000c00231bc        0x4 
 .data          0x00000000c00231c0      0x142 krnl/bootmsg.32
                0x00000000c00231c0                KiSplashScreen
 .data          0x00000000c0023302        0x0 krnl/compat.32
 *fill*         0x00000000c0023302       0x1e 
 .data          0x00000000c0023320       0x4d krnl/env.32
                0x00000000c0023320                defaultSysEnv
 .data          0x00000000c002336d        0x0 krnl/inlines.32
 .data          0x00000000c002336d        0x0 krnl/panic.32
 .data          0x00000000c002336d        0x0 krnl/powctrl.32
 .data          0x00000000c002336d        0x0 krnl/random.32
 .data          0x00000000c002336d        0x0 krnl/resolve.32
 *fill*         0x00000000c002336d       0x13 
 .data          0x00000000c0023380       0x4c krnl/signal.32
                0x00000000c0023380                KiDefaultSignalHandlers
 *fill*         0x00000000c00233cc       0x14 
 .data          0x00000000c00233e0       0xf0 krnl/syscalls.32
                0x00000000c00233e0                systemCallHandlers
 .data          0x00000000c00234d0        0x0 net/ethernet.32
 *fill*         0x00000000c00234d0       0x10 
 .data          0x00000000c00234e0      0x100 reg/cm.32
                0x00000000c00234e0                CmComponents
 .data          0x00000000c00235e0        0x0 reg/registry.32
 .data          0x00000000c00235e0        0x0 sys/eject.32
 .data          0x00000000c00235e0        0x0 sys/exit.32
 .data          0x00000000c00235e0        0x0 sys/getcwd.32
 .data          0x00000000c00235e0        0x0 sys/getpid.32
 .data          0x00000000c00235e0        0x0 sys/getramdata.32
 .data          0x00000000c00235e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00235e0        0x0 sys/kill.32
 .data          0x00000000c00235e0        0x0 sys/loaddll.32
 .data          0x00000000c00235e0        0x0 sys/read.32
 .data          0x00000000c00235e0        0x0 sys/registersignal.32
 .data          0x00000000c00235e0        0x0 sys/registry.32
 .data          0x00000000c00235e0        0x0 sys/sbrk.32
 .data          0x00000000c00235e0        0x0 sys/setcwd.32
 .data          0x00000000c00235e0        0x0 sys/settime.32
 .data          0x00000000c00235e0        0x0 sys/timezone.32
 .data          0x00000000c00235e0        0x0 sys/truncate.32
 .data          0x00000000c00235e0        0x0 sys/write.32
 .data          0x00000000c00235e0        0x0 sys/wsbe.32
 .data          0x00000000c00235e0        0x0 sys/yield.32
 .data          0x00000000c00235e0        0x0 thr/elf.32
 .data          0x00000000c00235e0        0x4 thr/prcssthr.32
                0x00000000c00235e0                Thr::nextPID
 .data          0x00000000c00235e4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00235e4       0x1c 
 .data          0x00000000c0023600      0x2a0 arch/i386/hal.32
                0x00000000c0023600                exceptionNames
 .data          0x00000000c00238a0        0x0 arch/i386/pic.32
 .data          0x00000000c00238a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00238a0        0x0 arch/i386/vga.32
 .data          0x00000000c00238a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00238a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00238a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00238a0                recentDriveletter
 .data          0x00000000c00238a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00238a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00238a1        0x0 hw/bus/isa.32
 .data          0x00000000c00238a1        0x0 hw/bus/pci.32
 .data          0x00000000c00238a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00238a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00238a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00238a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00238a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00238a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00238a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00238a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00238a1        0x0 hw/timer/pit.32
 .data          0x00000000c00238a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00238a1        0x0 crtn.32
 .data          0x00000000c00238a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00238a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00238a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00238a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00238a4        0x0
 .got           0x00000000c00238a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00238a4        0x0
 .got.plt       0x00000000c00238a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00238a4        0x0
 .igot.plt      0x00000000c00238a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00238a4        0x0
 .tm_clone_table
                0x00000000c00238a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00238a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00238a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00238a1        0x3 
 .eh_frame      0x00000000c00238a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00238a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00238a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00238fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002393c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00239a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
