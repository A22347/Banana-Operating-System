Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21e1e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0xb6 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d151                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d185                KeExecuteAtexit()
 .text          0x00000000c000d1e8       0x1e krnl/bootflags.32
                0x00000000c000d1e8                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1f8                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d206       0x9f krnl/bootmsg.32
                0x00000000c000d206                KeDisplaySplashScreen()
                0x00000000c000d235                KeSetBootMessage(char const*)
 .text          0x00000000c000d2a5       0x5f krnl/c++.32
                0x00000000c000d2a5                __cxa_atexit
                0x00000000c000d2a8                __cxa_finalize
                0x00000000c000d2a9                __stack_chk_fail
                0x00000000c000d2df                __cxa_pure_virtual
                0x00000000c000d2f0                operator new[](unsigned long)
                0x00000000c000d2f5                operator delete(void*, unsigned long)
                0x00000000c000d2fa                operator delete[](void*)
                0x00000000c000d2ff                operator delete[](void*, unsigned long)
 .text          0x00000000c000d304       0x44 krnl/cdefs.32
                0x00000000c000d304                CUnlockScheduler
                0x00000000c000d31c                CLockScheduler
                0x00000000c000d32c                CPrintf
 .text          0x00000000c000d348      0xd51 krnl/cm.32
                0x00000000c000d348                CmOpen(char const*)
                0x00000000c000d466                CmClose(Reghive_Tag*)
                0x00000000c000d47c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4b8                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d52f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d56e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d5a0                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5dc                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d604                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d625                CmExpand(Reghive_Tag*, int)
                0x00000000c000d6a0                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d726                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d81a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d952                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d9b3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9e3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da1a                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da44                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da84                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db28                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db56                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcf3                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd40                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddba                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de0d                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ded1                zStrtok(char*, char const*)
                0x00000000c000df43                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000dfc4                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e067                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e099        0x3 
 .text          0x00000000c000e09c       0x1d krnl/compat.32
                0x00000000c000e09c                Krnl::handlePowerButton()
                0x00000000c000e0ac                Krnl::handleSleepButton()
 *fill*         0x00000000c000e0b9        0x1 
 .text          0x00000000c000e0ba      0x2b1 krnl/computer.32
                0x00000000c000e0ba                Computer::close(int, int, void*)
                0x00000000c000e0c0                KeFirstTask()
                0x00000000c000e1e2                Computer::Computer()
                0x00000000c000e1e2                Computer::Computer()
                0x00000000c000e226                KePrepareShutdown()
                0x00000000c000e246                KeShutdown()
                0x00000000c000e26a                KeSleep()
                0x00000000c000e276                KeRestart()
                0x00000000c000e298                Computer::open(int, int, void*)
 .text          0x00000000c000e36b       0x2b krnl/crc32.32
                0x00000000c000e36b                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e396      0x5bf krnl/env.32
                0x00000000c000e396                EnvVarContainer::getEnv(char const*)
                0x00000000c000e3d4                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e496                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e498                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e6bc                EnvVarContainer::__loadSystem()
                0x00000000c000e6d6                EnvVarContainer::__loadUser()
                0x00000000c000e6d8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e6d8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e6fa                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e6fa                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e72a                KeGetEnv(Process*, char const*)
                0x00000000c000e78f                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e7a9                KeSetEnvUser(char const*, char const*)
                0x00000000c000e7c8                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e7db                KeDeleteEnvSystem(char const*)
                0x00000000c000e7dc                KeDeleteEnvUser(char const*)
                0x00000000c000e7dd                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e7de                KeNewProcessEnv(Process*)
                0x00000000c000e800                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e84c                KeLoadSystemEnv()
                0x00000000c000e87a                KeLoadUserEnv()
                0x00000000c000e8a0                KeFlushEnv()
                0x00000000c000e8a1                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e8c1                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e955        0x3 
 .text          0x00000000c000e958      0x371 krnl/fault.32
                0x00000000c000e958                KeSetupInterrupts()
                0x00000000c000e9d0                int_handler
                0x00000000c000eb00                KeDisplayProgramFault(char const*)
                0x00000000c000eb50                KeGeneralProtectionFault(void*, void*)
                0x00000000c000ebb4                KePageFault(void*, void*)
                0x00000000c000ec18                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ec28                KeOtherFault(void*, void*)
                0x00000000c000ec5c                KeOpcodeFault(void*, void*)
                0x00000000c000ecb0                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ecc9        0x1 
 .text          0x00000000c000ecca      0x1db krnl/gdt.32
                0x00000000c000ecca                GDTEntry::setBase(unsigned int)
                0x00000000c000ece6                GDTEntry::setLimit(unsigned int)
                0x00000000c000ed04                GDT::GDT()
                0x00000000c000ed04                GDT::GDT()
                0x00000000c000ed1a                GDT::addEntry(GDTEntry)
                0x00000000c000ed3c                GDT::getNumberOfEntries()
                0x00000000c000ed44                GDT::flush()
                0x00000000c000ed66                GDT::setup()
 .text          0x00000000c000eea5       0x20 krnl/idle.32
                0x00000000c000eea5                idleFunction(void*)
 *fill*         0x00000000c000eec5        0x3 
 .text          0x00000000c000eec8      0x46c krnl/idt.32
                0x00000000c000eec8                IDTEntry::IDTEntry(bool)
                0x00000000c000eec8                IDTEntry::IDTEntry(bool)
                0x00000000c000ef42                IDTEntry::setOffset(unsigned int)
                0x00000000c000ef58                IDT::IDT()
                0x00000000c000ef58                IDT::IDT()
                0x00000000c000ef5a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ef62                IDT::addEntry(IDTEntry, int)
                0x00000000c000ef7c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000efb4                IDT::flush()
                0x00000000c000efce                IDT::setup()
 .text          0x00000000c000f334       0x9a krnl/inlines.32
                0x00000000c000f334                CPU::current()
                0x00000000c000f340                operator new(unsigned long)
                0x00000000c000f345                operator delete(void*)
                0x00000000c000f34a                disableIRQs()
                0x00000000c000f34c                enableIRQs()
                0x00000000c000f34e                lockScheduler()
                0x00000000c000f356                unlockScheduler()
                0x00000000c000f368                lockStuff()
                0x00000000c000f376                unlockStuff()
                0x00000000c000f3b3                Virt::getAKernelVAS()
                0x00000000c000f3b9                __not_memcpy
 .text          0x00000000c000f3ce      0x2ae krnl/intlformat.32
                0x00000000c000f3ce                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f5b0                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f5d2                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f5f4                KeSetLocale(klocale_t)
                0x00000000c000f60a                KeInitialiseLocale()
                0x00000000c000f678                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f679                KeFormatCurrency(char*, int, double)
                0x00000000c000f67a                KeFormatNumber(char*, long long, long long)
                0x00000000c000f67b                KeFormatNumber(char*, double)
 .text          0x00000000c000f67c      0x356 krnl/intops.32
                0x00000000c000f67c                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f798                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f8d8                KeGetDigitsInNumber(long long)
                0x00000000c000f944                KeItoa(unsigned long long, char*)
                0x00000000c000f974                KeItoa(long long, char*)
                0x00000000c000f9a4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f9d2      0x204 krnl/kheap.32
                0x00000000c000f9d2                sbrk
                0x00000000c000fa66                sbrk_thunk
                0x00000000c000fa9c                mmap
                0x00000000c000fafa                munmap
                0x00000000c000fb0f                liballoc_lock()
                0x00000000c000fb1d                liballoc_unlock()
                0x00000000c000fb35                liballoc_alloc(int)
                0x00000000c000fb4d                liballoc_free(void*, int)
                0x00000000c000fb68                realloc
                0x00000000c000fb7c                malloc
                0x00000000c000fb8c                free
                0x00000000c000fb9c                rfree
                0x00000000c000fbac                calloc
 *fill*         0x00000000c000fbd6        0x2 
 .text          0x00000000c000fbd8      0x1d3 krnl/mailbox.32
                0x00000000c000fbd8                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fc38                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fc98                KeMailboxCreate()
                0x00000000c000fccc                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fd30                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fd94                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fdab       0xc5 krnl/main.32
                0x00000000c000fdab                KeEntryPoint
 .text          0x00000000c000fe70       0x1a krnl/mutex.32
                0x00000000c000fe70                Mutex::Mutex()
                0x00000000c000fe70                Mutex::Mutex()
 .text          0x00000000c000fe8a        0xc krnl/panic.32
                0x00000000c000fe8a                KePanic(char const*)
 .text          0x00000000c000fe96      0x666 krnl/physmgr.32
                0x00000000c000fe96                Phys::allocateDMA(unsigned long)
                0x00000000c000ff84                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ffbf                Phys::setPageState(unsigned long, bool)
                0x00000000c000ffff                Phys::getPageState(unsigned long)
                0x00000000c001001b                Phys::freePage(unsigned long)
                0x00000000c0010084                Phys::allocatePage()
                0x00000000c0010162                Phys::allocateContiguousPages(int)
                0x00000000c00101dd                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010215                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c00104fc      0x271 krnl/pipe.32
                0x00000000c00104fc                Pipe::isAtty()
                0x00000000c0010500                Pipe::~Pipe()
                0x00000000c0010500                Pipe::~Pipe()
                0x00000000c0010524                Pipe::~Pipe()
                0x00000000c001054c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010610                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010706                Pipe::Pipe(int)
                0x00000000c0010706                Pipe::Pipe(int)
 .text          0x00000000c001076d      0x10c krnl/powctrl.32
                0x00000000c001076d                KePowerThread(void*)
                0x00000000c001079f                KeChangePowerSettings(PowerSettings)
                0x00000000c00107b5                KeUserIOReceived()
                0x00000000c00107c0                KeHandlePowerButton()
                0x00000000c00107d8                KeHandleSleepButton()
                0x00000000c00107f0                KeSetupPowerManager()
 .text          0x00000000c0010879       0x9b krnl/random.32
                0x00000000c0010879                KeRand()
                0x00000000c00108b9                KeSeedRand(unsigned int)
                0x00000000c00108e2                KeInitRand()
 .text          0x00000000c0010914      0x1bc krnl/resolve.32
                0x00000000c0010914                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010ad0      0x415 krnl/semaphore.32
                0x00000000c0010ad0                Semaphore::Semaphore(int)
                0x00000000c0010ad0                Semaphore::Semaphore(int)
                0x00000000c0010b00                Semaphore::tryAcquire()
                0x00000000c0010bd4                Semaphore::assertLocked(char const*)
                0x00000000c0010c60                Semaphore::acquire(int)
                0x00000000c0010e18                Semaphore::acquire()
                0x00000000c0010e34                Semaphore::release()
 .text          0x00000000c0010ee5      0x3a8 krnl/signal.32
                0x00000000c0010ee5                KiSigKill(int)
                0x00000000c0010ef9                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010efa                KiDefaultSignalHandlerPause(int)
                0x00000000c0010f26                KiDefaultSignalHandlerResume(int)
                0x00000000c0010f52                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010f57                KeInitSignals()
                0x00000000c0010fc9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010fff                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011080                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00111af                KiCheckSignalZ
                0x00000000c0011200                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c001123b                KiFinishSignalZ
 .text          0x00000000c001128d      0xe77 krnl/syscalls.32
                0x00000000c001128d                SysSeekDir(regs*)
                0x00000000c0011292                SysTellDir(regs*)
                0x00000000c0011297                SysVerify(regs*)
                0x00000000c00112a1                SysGetArgc(regs*)
                0x00000000c00112b5                SysTTYName(regs*)
                0x00000000c00112bd                SysFormatDisk(regs*)
                0x00000000c0011324                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011378                SysGetDiskVolumeLabel(regs*)
                0x00000000c00113d1                SysRealpath(regs*)
                0x00000000c001141f                SysReadDir(regs*)
                0x00000000c001149f                SysIsATTY(regs*)
                0x00000000c00114f9                SysSeek(regs*)
                0x00000000c0011557                SysTell(regs*)
                0x00000000c00115cc                SysSize(regs*)
                0x00000000c0011646                SysSizeFromFilename(regs*)
                0x00000000c0011779                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00118ac                SysClose(regs*)
                0x00000000c0011911                SysOpenDir(regs*)
                0x00000000c001198e                SysMakeDir(regs*)
                0x00000000c00119fc                SysCloseDir(regs*)
                0x00000000c0011a50                SysWait(regs*)
                0x00000000c0011a71                SysNotImpl(regs*)
                0x00000000c0011a8c                SysPanic(regs*)
                0x00000000c0011aa7                SysRmdir(regs*)
                0x00000000c0011b05                SysUnlink(regs*)
                0x00000000c0011b63                SysGetArgv(regs*)
                0x00000000c0011bb0                SysUSleep(regs*)
                0x00000000c0011bda                SysSpawn(regs*)
                0x00000000c0011c4b                SysGetEnv(regs*)
                0x00000000c0011d00                SysSetFatAttrib(regs*)
                0x00000000c0011d69                SysShutdown(regs*)
                0x00000000c0011dc6                SysPipe(regs*)
                0x00000000c0011e0b                SysGetUnixTime(regs*)
                0x00000000c0011e78                string_ends_with(char const*, char const*)
                0x00000000c0011ec3                SysOpen(regs*)
                0x00000000c00120c2                KeSystemCall(regs*, void*)
 .text          0x00000000c0012104      0xadd krnl/terminal.32
                0x00000000c0012104                VgaText::isAtty()
                0x00000000c0012108                VgaText::~VgaText()
                0x00000000c0012108                VgaText::~VgaText()
                0x00000000c001212c                VgaText::~VgaText()
                0x00000000c0012156                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0012176                setTerminalScrollLock(bool)
                0x00000000c0012177                doTerminalCycle()
                0x00000000c0012178                addToTerminalCycle(VgaText*)
                0x00000000c0012179                scrollTerminalScrollLock(int)
                0x00000000c001217a                VgaText::updateTitle()
                0x00000000c001217c                VgaText::load()
                0x00000000c001217e                VgaText::updateCursor()
                0x00000000c0012194                VgaText::doANSI_SGR(int)
                0x00000000c0012208                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012218                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012228                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0012248                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0012254                VgaText::setTitleColour(VgaColour)
                0x00000000c0012260                VgaText::setTitle(char*)
                0x00000000c0012262                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0012274                VgaText::scrollScreen()
                0x00000000c0012306                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012316                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00123c2                VgaText::getCursorX()
                0x00000000c00123ca                VgaText::getCursorY()
                0x00000000c00123d2                VgaText::setCursor(int, int)
                0x00000000c00123e9                setActiveTerminal(VgaText*)
                0x00000000c0012434                VgaText::clearScreen()
                0x00000000c0012482                VgaText::setCursorX(int)
                0x00000000c001249a                VgaText::setCursorY(int)
                0x00000000c00124b2                VgaText::incrementCursor(bool)
                0x00000000c0012506                VgaText::decrementCursor(bool)
                0x00000000c0012528                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00125f8                VgaText::putchar(char)
                0x00000000c00126e0                VgaText::putx(unsigned int)
                0x00000000c0012726                VgaText::puts(char const*)
                0x00000000c001274c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012798                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012912                VgaText::VgaText(char const*)
                0x00000000c0012912                VgaText::VgaText(char const*)
                0x00000000c0012a72                VgaText::receiveKey(unsigned char)
                0x00000000c0012be0                VgaText::doUpdate()
 *fill*         0x00000000c0012be1        0x3 
 .text          0x00000000c0012be4      0x224 krnl/tss.32
                0x00000000c0012be4                TSS::TSS()
                0x00000000c0012be4                TSS::TSS()
                0x00000000c0012bf4                TSS::setESP(unsigned long)
                0x00000000c0012c08                TSS::flush()
                0x00000000c0012c28                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012e08      0x4dc krnl/unixfile.32
                0x00000000c0012e08                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012e5e                ReservedFilename::isAtty()
                0x00000000c0012e7a                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012ed8                UnixFile::getFileDescriptor()
                0x00000000c0012ee0                UnixFile::UnixFile(int)
                0x00000000c0012ee0                UnixFile::UnixFile(int)
                0x00000000c0013094                ReservedFilename::ReservedFilename(int)
                0x00000000c0013094                ReservedFilename::ReservedFilename(int)
                0x00000000c00130c6                UnixFile::~UnixFile()
                0x00000000c00130c6                UnixFile::~UnixFile()
                0x00000000c0013162                UnixFile::~UnixFile()
                0x00000000c001318a                ReservedFilename::~ReservedFilename()
                0x00000000c001318a                ReservedFilename::~ReservedFilename()
                0x00000000c00131ae                ReservedFilename::~ReservedFilename()
                0x00000000c00131d5                KeGetFileFromDescriptor(int)
 .text          0x00000000c00132e4     0x14be krnl/virtmgr.32
                0x00000000c00132e4                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001331e                Virt::getPageState(unsigned long)
                0x00000000c0013341                Virt::allocateKernelVirtualPages(int)
                0x00000000c001345d                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013480                Virt::swapIDToSector(unsigned long)
                0x00000000c0013496                Virt::allocateSwapfilePage()
                0x00000000c0013515                Virt::virtualMemorySetup()
                0x00000000c0013566                Virt::setupPageSwapping(int)
                0x00000000c00135d8                VAS::setCPUSpecific(unsigned long)
                0x00000000c00135da                VAS::VAS(VAS*)
                0x00000000c00135da                VAS::VAS(VAS*)
                0x00000000c00135f2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013620                VAS::getPageTableEntry(unsigned long)
                0x00000000c001363f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001377c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00137a0                VAS::virtualToPhysical(unsigned long)
                0x00000000c00137ba                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00137fc                VAS::VAS()
                0x00000000c00137fc                VAS::VAS()
                0x00000000c0013866                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013886                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00138b2                VAS::~VAS()
                0x00000000c00138b2                VAS::~VAS()
                0x00000000c0013a1a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013b22                VAS::allocatePages(int, int)
                0x00000000c0013c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013c6e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013d5e                VAS::VAS(bool)
                0x00000000c0013d5e                VAS::VAS(bool)
                0x00000000c0013f46                VAS::evict(unsigned long)
                0x00000000c001404a                VAS::canLockPage(unsigned long)
                0x00000000c0014064                VAS::unlockPage(unsigned long)
                0x00000000c0014098                VAS::canLockPages(unsigned long, int)
                0x00000000c00140d4                VAS::unlockPages(unsigned long, int)
                0x00000000c0014110                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014420                VAS::lockPage(unsigned long)
                0x00000000c0014492                VAS::lockPages(unsigned long, int)
                0x00000000c00144ce                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014542                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c001456e                VAS::scanForEviction()
                0x00000000c00146a7                mapVASFirstTime
 .text          0x00000000c00147a2       0x2f sys/alarm.32
                0x00000000c00147a2                SysAlarm(regs*)
 .text          0x00000000c00147d1       0x36 sys/eject.32
                0x00000000c00147d1                SysEject(regs*)
 .text          0x00000000c0014807       0x18 sys/exit.32
                0x00000000c0014807                SysExit(regs*)
 .text          0x00000000c001481f       0x1f sys/getcwd.32
                0x00000000c001481f                SysGetCwd(regs*)
 .text          0x00000000c001483e       0x26 sys/getpid.32
                0x00000000c001483e                SysGetPID(regs*)
 .text          0x00000000c0014864       0x21 sys/getramdata.32
                0x00000000c0014864                SysGetRAMData(regs*)
 .text          0x00000000c0014885       0xd3 sys/getvgaptr.32
                0x00000000c0014885                SysGetVGAPtr(regs*)
 .text          0x00000000c0014958       0xb9 sys/kill.32
                0x00000000c0014958                SysKill(regs*)
 .text          0x00000000c0014a11       0xa8 sys/loaddll.32
                0x00000000c0014a11                SysLoadDLL(regs*)
 .text          0x00000000c0014ab9       0x12 sys/pause.32
                0x00000000c0014ab9                SysPause(regs*)
 .text          0x00000000c0014acb       0x49 sys/pthread.32
                0x00000000c0014acb                SysPthreadCreate(regs*)
                0x00000000c0014ae3                SysPthreadGetTID(regs*)
                0x00000000c0014aed                SysInternalPthreadGetContext(regs*)
                0x00000000c0014af2                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014af7                SysPthreadJoin(regs*)
                0x00000000c0014afc                SysPthreadExit(regs*)
 .text          0x00000000c0014b14       0x68 sys/read.32
                0x00000000c0014b14                SysRead(regs*)
 .text          0x00000000c0014b7c       0x29 sys/registersignal.32
                0x00000000c0014b7c                SysRegisterSignal(regs*)
 .text          0x00000000c0014ba5      0x1cc sys/registry.32
                0x00000000c0014ba5                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014be9                SysRegistryReadExtent(regs*)
                0x00000000c0014c31                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014c48                SysRegistryEnterDirectory(regs*)
                0x00000000c0014c5f                SysRegistryGetNext(regs*)
                0x00000000c0014c76                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014cb0                SysRegistryOpen(regs*)
                0x00000000c0014cc4                SysRegistryClose(regs*)
                0x00000000c0014cdb                SysRegistryEasyReadString(regs*)
                0x00000000c0014d27                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014d71       0x55 sys/sbrk.32
                0x00000000c0014d71                SysSbrk(regs*)
 .text          0x00000000c0014dc6       0x1c sys/setcwd.32
                0x00000000c0014dc6                SysSetCwd(regs*)
 .text          0x00000000c0014de2       0xf1 sys/settime.32
                0x00000000c0014de2                SysSetTime(regs*)
 .text          0x00000000c0014ed3       0x73 sys/symlink.32
                0x00000000c0014ed3                SysSymlink(regs*)
 .text          0x00000000c0014f46       0x3e sys/timezone.32
                0x00000000c0014f46                SysTimezone(regs*)
 .text          0x00000000c0014f84       0xfc sys/truncate.32
                0x00000000c0014f84                SysTruncate(regs*)
 .text          0x00000000c0015080       0x68 sys/write.32
                0x00000000c0015080                SysWrite(regs*)
 .text          0x00000000c00150e8       0x9d sys/wsbe.32
                0x00000000c00150e8                SysWsbe(regs*)
 .text          0x00000000c0015185       0x28 sys/yield.32
                0x00000000c0015185                SysYield(regs*)
 *fill*         0x00000000c00151ad        0x3 
 .text          0x00000000c00151b0      0x28d thr/alarm.32
                0x00000000c00151b0                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c001534c                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c001543d     0x138b thr/elf.32
                0x00000000c001543d                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00156c8                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015994                Thr::runtimeReferenceHelper()
                0x00000000c00159a7                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00159f6                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015cb4                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00164ab                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00164dd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016514                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001652e                Thr::loadDLL(char const*, bool)
                0x00000000c001678f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00167c8       0x5a thr/exec.32
                0x00000000c00167c8                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016822        0x2 
 .text          0x00000000c0016824     0x1279 thr/prcssthr.32
                0x00000000c0016824                userModeEntryPoint(void*)
                0x00000000c0016850                changeTSS
                0x00000000c0016880                switchToThread(ThreadControlBlock*)
                0x00000000c0016940                Process::addArgs(char**)
                0x00000000c00169ac                Process::Process(char const*, Process*, char**)
                0x00000000c00169ac                Process::Process(char const*, Process*, char**)
                0x00000000c0016be4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016be4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016dd0                taskStartupFunction
                0x00000000c0016ddc                KeDisablePreemption()
                0x00000000c0016e04                KeRestorePreemption()
                0x00000000c0016e24                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016f64                Process::createUserThread()
                0x00000000c0016f84                setupMultitasking(void (*)())
                0x00000000c00170cc                schedule()
                0x00000000c0017160                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001718c                blockTask(TaskState)
                0x00000000c00171c8                waitTask(int, int*, int)
                0x00000000c001720c                milliTenthSleepUntil(unsigned long long)
                0x00000000c00172c0                milliTenthSleep(unsigned long long)
                0x00000000c00172d8                sleep(unsigned long long)
                0x00000000c00172f8                sleep(unsigned int)
                0x00000000c0017310                milliTenthSleep(unsigned int)
                0x00000000c0017330                taskReturned
                0x00000000c0017378                Thr::processFromPID(int)
                0x00000000c0017424                unblockTask(ThreadControlBlock*)
                0x00000000c00174d8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00177a8                cleanerTaskFunction(void*)
                0x00000000c00178c0                terminateTask(int)
                0x00000000c00179d0                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017a9d      0xe86 vm86/vm8086.32
                0x00000000c0017a9d                Vm::inbv(unsigned short)
                0x00000000c0017ab0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017ae2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017af2                Vm::getSegment(unsigned int)
                0x00000000c0017afa                Vm::getOffset(unsigned int)
                0x00000000c0017aff                Vm::mainloop2()
                0x00000000c0017b40                Vm::mainVm8086Loop(void*)
                0x00000000c0017b54                Vm::mainloop3(unsigned long)
                0x00000000c0017b86                Vm::initialise8086()
                0x00000000c0017bca                Vm::resetConventionalMemory8086()
                0x00000000c0017bcb                Vm::finish8086()
                0x00000000c0017c3c                Vm::getOutput8086(unsigned char*)
                0x00000000c0017c61                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017dac                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017ff1                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001809d                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00180ae                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00180c0                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00180d1                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00180e6                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00180fc                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018111                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018923        0x1 
 .text          0x00000000c0018924      0x45f arch/i386/apic.32
                0x00000000c0018924                IOAPIC::close(int, int, void*)
                0x00000000c001892a                apicGetBase()
                0x00000000c0018964                IOAPIC::IOAPIC()
                0x00000000c0018964                IOAPIC::IOAPIC()
                0x00000000c001898c                apicOpen()
                0x00000000c0018b18                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018b4a                IOAPIC::read(int)
                0x00000000c0018b72                IOAPIC::open(int, int, void*)
                0x00000000c0018c58                IOAPIC::write(int, int)
                0x00000000c0018c84                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018d83        0x1 
 .text          0x00000000c0018d84     0x1efb arch/i386/hal.32
                0x00000000c0018d84                noCopro(unsigned long)
                0x00000000c0018d86                CPU::close(int, int, void*)
                0x00000000c0018d89                x86ReadCMOS(unsigned char)
                0x00000000c0018ddd                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018e3f                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018e5e                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018e7b                AMD_K6_writeback(int, int, int)
                0x00000000c0018f3b                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018fd9                cpuidCheckEDX(unsigned int)
                0x00000000c0019006                cpuidCheckECX(unsigned int)
                0x00000000c0019034                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019062                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0019090                HalDetectFeatures()
                0x00000000c0019e7b                HalEnableNMI()
                0x00000000c0019e8e                HalDisableNMI()
                0x00000000c0019ea1                HalGetNMIState()
                0x00000000c0019ea7                x86rdmsr(unsigned int)
                0x00000000c0019ee5                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019f2a                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019f40                HalFindRSDP()
                0x00000000c001a01d                HalHandlePageFault(void*, void*)
                0x00000000c001a04c                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a08e                HalDisplayDebugInfo(void*)
                0x00000000c001a41c                HalReceivedNMI()
                0x00000000c001a4b7                HalSystemIdle()
                0x00000000c001a516                i386SaveCoprocessor(void*)
                0x00000000c001a52a                i386LoadCoprocessor(void*)
                0x00000000c001a53e                x87EmulHandler(regs*, void*)
                0x00000000c001a5db                HalInitialiseCoprocessor()
                0x00000000c001a65f                HalPanic(char const*)
                0x00000000c001a773                HalQueryPerformanceCounter()
                0x00000000c001a783                HalInitialise()
                0x00000000c001a92e                HalMakeBeep(int)
                0x00000000c001a968                HalGetRand()
                0x00000000c001a96b                HalEndOfInterrupt(int)
                0x00000000c001a996                HalRestart()
                0x00000000c001a997                HalShutdown()
                0x00000000c001a998                HalSleep()
                0x00000000c001a99a                CPU::CPU()
                0x00000000c001a99a                CPU::CPU()
                0x00000000c001aa1e                CPU::setupSMEP()
                0x00000000c001aa2a                CPU::setupUMIP()
                0x00000000c001aa34                CPU::setupTSC()
                0x00000000c001aa3e                CPU::setupLargePages()
                0x00000000c001aa48                CPU::setupPAT()
                0x00000000c001aa7a                CPU::setupMTRR()
                0x00000000c001aa7c                CPU::setupGlobalPages()
                0x00000000c001aa86                CPU::allowUsermodeDataAccess()
                0x00000000c001aa94                CPU::prohibitUsermodeDataAccess()
                0x00000000c001aaa2                CPU::setupSMAP()
                0x00000000c001aab0                CPU::setupFeatures()
                0x00000000c001ab7c                CPU::open(int, int, void*)
 .text          0x00000000c001ac7f      0x268 arch/i386/intctrl.32
                0x00000000c001ac7f                convertLegacyIRQNumber(int)
                0x00000000c001acbb                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001ad05                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001ae42                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ae76                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001aee7        0x1 
 .text          0x00000000c001aee8      0x2dc arch/i386/pic.32
                0x00000000c001aee8                picIoWait()
                0x00000000c001aef0                picDisable()
                0x00000000c001af24                picGetIRQReg(int)
                0x00000000c001afa0                picOpen()
                0x00000000c001b124                picEOI(int)
 .text          0x00000000c001b1c4      0x5ed arch/i386/rtc.32
                0x00000000c001b1c4                RTC::open(int, int, void*)
                0x00000000c001b1c8                RTC::close(int, int, void*)
                0x00000000c001b1cc                RTC::timeInSecondsUTC()
                0x00000000c001b1de                RTC::timeInDatetimeUTC()
                0x00000000c001b204                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b242                RTC::~RTC()
                0x00000000c001b242                RTC::~RTC()
                0x00000000c001b266                RTC::~RTC()
                0x00000000c001b290                RTC::get_update_in_progress_flag()
                0x00000000c001b2a4                RTC::completeRTCRefresh()
                0x00000000c001b552                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b6c8                rtcIRQHandler(regs*, void*)
                0x00000000c001b708                RTC::RTC()
                0x00000000c001b708                RTC::RTC()
 *fill*         0x00000000c001b7b1        0x3 
 .text          0x00000000c001b7b4      0x1f4 arch/i386/vga.32
                0x00000000c001b7b4                HalConsoleScroll(int, int)
                0x00000000c001b8bc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b920                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b9a8     0x14f3 fs/fat/vfslink.32
                0x00000000c001b9a8                FAT::getName()
                0x00000000c001b9b0                FAT::tell(void*, unsigned long long*)
                0x00000000c001b9ec                FAT::stat(void*, unsigned long long*)
                0x00000000c001ba28                FAT::~FAT()
                0x00000000c001ba28                FAT::~FAT()
                0x00000000c001ba4c                FAT::~FAT()
                0x00000000c001ba74                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bb18                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001bbf8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bddc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bff8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c1b8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c328                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c388                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c3e8                FAT::close(void*)
                0x00000000c001c43c                FAT::closeDir(void*)
                0x00000000c001c490                FAT::truncate(void*, unsigned long long)
                0x00000000c001c4fc                FAT::seek(void*, unsigned long long)
                0x00000000c001c554                fatWrapperReadDisk
                0x00000000c001c594                fatWrapperWriteDisk
                0x00000000c001c5d4                fatWrapperIoctl
                0x00000000c001c6f4                FAT::FAT()
                0x00000000c001c6f4                FAT::FAT()
                0x00000000c001c74c                FAT::fixFilepath(char*)
                0x00000000c001c78c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c900                FAT::openDir(char const*, void**)
                0x00000000c001c9b0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001caa8                FAT::unlink(char const*)
                0x00000000c001cb28                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cce0                FAT::rename(char const*, char const*)
                0x00000000c001cdac                FAT::mkdir(char const*)
                0x00000000c001ce2c                FAT::exists(char const*)
 *fill*         0x00000000c001ce9b        0x1 
 .text          0x00000000c001ce9c       0x94 fs/iso9660/helper.32
                0x00000000c001ce9c                isoReadDiscSectorHelper
                0x00000000c001cef8                iso_kprintf
                0x00000000c001cf14                iso_kprintfd
 .text          0x00000000c001cf30      0x71a fs/iso9660/vfslink.32
                0x00000000c001cf30                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cf36                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cf3c                ISO9660::getName()
                0x00000000c001cf42                ISO9660::closeDir(void*)
                0x00000000c001cf4c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cf52                ISO9660::unlink(char const*)
                0x00000000c001cf58                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cf5e                ISO9660::rename(char const*, char const*)
                0x00000000c001cf64                ISO9660::mkdir(char const*)
                0x00000000c001cf6a                ISO9660::~ISO9660()
                0x00000000c001cf6a                ISO9660::~ISO9660()
                0x00000000c001cf8e                ISO9660::~ISO9660()
                0x00000000c001cfb6                ISO9660::exists(char const*)
                0x00000000c001cfca                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d0b0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d0f8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d13a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d178                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d1ca                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d30c                ISO9660::close(void*)
                0x00000000c001d33c                ISO9660::openDir(char const*, void**)
                0x00000000c001d416                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d531                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d5b0                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d622                ISO9660::ISO9660()
                0x00000000c001d622                ISO9660::ISO9660()
 .text          0x00000000c001d64a      0x26c hal/sound/sndcard.32
                0x00000000c001d64a                SoundCard::beginPlayback()
                0x00000000c001d658                SoundCard::stopPlayback()
                0x00000000c001d666                SoundCard::SoundCard(char const*)
                0x00000000c001d666                SoundCard::SoundCard(char const*)
                0x00000000c001d704                SoundCard::~SoundCard()
                0x00000000c001d704                SoundCard::~SoundCard()
                0x00000000c001d728                SoundCard::~SoundCard()
                0x00000000c001d752                SoundCard::configureRates(int, int, int)
                0x00000000c001d782                SoundCard::getSamples16(int, short*)
                0x00000000c001d7de                SoundCard::getSamples32(int, int*)
                0x00000000c001d864                SoundCard::addChannel(SoundPort*)
                0x00000000c001d8a2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d8b6        0x2 
 .text          0x00000000c001d8b8      0x42f hal/sound/sndport.32
                0x00000000c001d8b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d8b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d944                SoundPort::~SoundPort()
                0x00000000c001d944                SoundPort::~SoundPort()
                0x00000000c001d978                SoundPort::unpause()
                0x00000000c001d984                SoundPort::pause()
                0x00000000c001d990                SoundPort::getBufferUsed()
                0x00000000c001d998                SoundPort::getBufferSize()
                0x00000000c001d9a0                SoundPort::buffer8(signed char*, int)
                0x00000000c001da34                SoundPort::buffer16(short*, int)
                0x00000000c001dac8                SoundPort::buffer32(int*, int)
                0x00000000c001db54                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001dc24                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001dce7        0x1 
 .text          0x00000000c001dce8      0xc25 hw/bus/pci.32
                0x00000000c001dce8                PCI::open(int, int, void*)
                0x00000000c001dd06                PCI::close(int, int, void*)
                0x00000000c001dd0a                PCI::PCI()
                0x00000000c001dd0a                PCI::PCI()
                0x00000000c001dda2                PCI::readBAR8(unsigned int, int)
                0x00000000c001ddbe                PCI::readBAR16(unsigned int, int)
                0x00000000c001dddc                PCI::readBAR32(unsigned int, int)
                0x00000000c001ddf8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001de18                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001de3a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001de5a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ded0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001df7a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df9e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfc6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e010                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e038                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e05c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e080                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0a8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e10c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e1f2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e4bc                PCI::checkBus(unsigned char)
                0x00000000c001e4e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e6c6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e842                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e8b4                PCI::detect()
 *fill*         0x00000000c001e90d        0x1 
 .text          0x00000000c001e90e      0xe52 hw/diskctrl/ide.32
                0x00000000c001e90e                IDE::close(int, int, void*)
                0x00000000c001e912                IDE::IDE()
                0x00000000c001e912                IDE::IDE()
                0x00000000c001e946                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e958                selectDrive(unsigned char, unsigned char)
                0x00000000c001e95a                IDE::getBase(unsigned char)
                0x00000000c001e96c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ea2c                IDE::read(unsigned char, unsigned char)
                0x00000000c001eae0                IDE::waitInterrupt(unsigned char)
                0x00000000c001eb43                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001eb5f                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001eb7c                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ebc6                IDE::open(int, int, void*)
                0x00000000c001f11e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f1ee                IDE::detect()
                0x00000000c001f652                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f70c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f760      0x33f hw/diskctrl/satabus.32
                0x00000000c001f760                SATABus::close(int, int, void*)
                0x00000000c001f764                SATABus::detect()
                0x00000000c001f766                SATABus::SATABus()
                0x00000000c001f766                SATABus::SATABus()
                0x00000000c001f7ec                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f81e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f866                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f886                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f8b0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f9c2                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fa6c                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fa9f        0x1 
 .text          0x00000000c001faa0      0x7c1 hw/diskphys/ata.32
                0x00000000c001faa0                ATA::close(int, int, void*)
                0x00000000c001fac4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fac6                ATA::ATA()
                0x00000000c001fac6                ATA::ATA()
                0x00000000c001faf4                ATA::flush(bool)
                0x00000000c001fb42                ATA::readyForCommand()
                0x00000000c001fb8e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ff96                ATA::read(unsigned long long, int, void*)
                0x00000000c001ffe2                ATA::write(unsigned long long, int, void*)
                0x00000000c002002e                ATA::detectCHS()
                0x00000000c0020058                ATA::open(int, int, void*)
                0x00000000c0020243                combineCharAndColour(char, unsigned char)
                0x00000000c0020254                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020261        0x1 
 .text          0x00000000c0020262      0x612 hw/diskphys/atapi.32
                0x00000000c0020262                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020268                ATAPI::close(int, int, void*)
                0x00000000c002028c                ATAPI::ATAPI()
                0x00000000c002028c                ATAPI::ATAPI()
                0x00000000c00202ba                ATAPI::readyForCommand()
                0x00000000c002030c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00205cc                ATAPI::diskRemoved()
                0x00000000c0020606                ATAPI::eject()
                0x00000000c002064e                ATAPI::diskInserted()
                0x00000000c002065a                ATAPI::detectMedia()
                0x00000000c002071a                ATAPI::open(int, int, void*)
                0x00000000c00207fa                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020874      0x44a hw/diskphys/sata.32
                0x00000000c0020874                SATA::close(int, int, void*)
                0x00000000c0020898                SATA::powerSaving(PowerSavingLevel)
                0x00000000c002089a                SATA::open(int, int, void*)
                0x00000000c0020952                SATA::SATA()
                0x00000000c0020952                SATA::SATA()
                0x00000000c0020980                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020c06                SATA::read(unsigned long long, int, void*)
                0x00000000c0020c52                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020cbe      0x5dc hw/diskphys/satapi.32
                0x00000000c0020cbe                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020cc4                SATAPI::close(int, int, void*)
                0x00000000c0020ce8                SATAPI::SATAPI()
                0x00000000c0020ce8                SATAPI::SATAPI()
                0x00000000c0020d16                SATAPI::diskRemoved()
                0x00000000c0020d18                SATAPI::diskInserted()
                0x00000000c0020d34                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c002101e                SATAPI::eject()
                0x00000000c002105a                SATAPI::detectMedia()
                0x00000000c00210b0                SATAPI::open(int, int, void*)
                0x00000000c00211b0                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002129a        0x2 
 .text          0x00000000c002129c       0xf0 hw/timer/apictimer.32
                0x00000000c002129c                APICTimer::close(int, int, void*)
                0x00000000c00212a4                apicTimerHandler(regs*, void*)
                0x00000000c00212cc                APICTimer::open(int, int, void*)
                0x00000000c002133c                APICTimer::write(int)
                0x00000000c0021364                APICTimer::APICTimer()
                0x00000000c0021364                APICTimer::APICTimer()
 .text          0x00000000c002138c      0x1ad hw/timer/pit.32
                0x00000000c002138c                PIT::write(int)
                0x00000000c0021410                pitHandler(regs*, void*)
                0x00000000c0021438                PIT::open(int, int, void*)
                0x00000000c0021488                PIT::close(int, int, void*)
                0x00000000c00214b8                PIT::PIT()
                0x00000000c00214b8                PIT::PIT()
 *fill*         0x00000000c0021539        0x7 
 .text          0x00000000c0021540       0x6f arch/i386/avx.32
                0x00000000c0021540                avxDetect
                0x00000000c002156a                avxSave
                0x00000000c002157b                avxLoad
                0x00000000c002158c                avxInit
                0x00000000c00215ae                avxClose
 *fill*         0x00000000c00215af        0x1 
 .text          0x00000000c00215b0      0x2b4 arch/i386/interrupt.32
                0x00000000c00215b0                isr0
                0x00000000c00215c0                isr1
                0x00000000c00215ca                isr2
                0x00000000c00215d4                isr3
                0x00000000c00215de                isr4
                0x00000000c00215e8                isr5
                0x00000000c00215f2                isr6
                0x00000000c00215fc                isr7
                0x00000000c0021606                isr8
                0x00000000c002160e                isr9
                0x00000000c0021618                isr10
                0x00000000c0021620                isr11
                0x00000000c0021628                isr12
                0x00000000c0021630                isr13
                0x00000000c002164a                isr14
                0x00000000c0021652                isr15
                0x00000000c002165c                isr16
                0x00000000c0021666                isr17
                0x00000000c0021670                isr18
                0x00000000c002167a                irq3
                0x00000000c0021684                irq4
                0x00000000c002168e                irq5
                0x00000000c0021698                irq6
                0x00000000c00216a2                irq7
                0x00000000c00216ac                irq8
                0x00000000c00216b6                irq9
                0x00000000c00216c0                irq10
                0x00000000c00216ca                irq11
                0x00000000c00216d4                irq12
                0x00000000c00216de                irq13
                0x00000000c00216e8                irq14
                0x00000000c00216f2                irq15
                0x00000000c00216fc                irq1
                0x00000000c0021703                irq2
                0x00000000c002170a                isr96
                0x00000000c0021711                irq0
                0x00000000c0021716                int_common_stub
                0x00000000c0021716                syscall_common_stub
                0x00000000c0021814                irq16
                0x00000000c002181e                irq17
                0x00000000c0021828                irq18
                0x00000000c0021832                irq19
                0x00000000c002183c                irq20
                0x00000000c0021846                irq21
                0x00000000c0021850                irq22
                0x00000000c002185a                irq23
 *fill*         0x00000000c0021864        0xc 
 .text          0x00000000c0021870       0x10 arch/i386/rdrand.32
                0x00000000c0021870                i386GetRDRAND
 .text          0x00000000c0021880       0x39 arch/i386/sse.32
                0x00000000c0021880                sseDetect
                0x00000000c0021898                sseSave
                0x00000000c00218a0                sseLoad
                0x00000000c00218a8                sseInit
                0x00000000c00218b8                sseClose
 *fill*         0x00000000c00218b9        0x7 
 .text          0x00000000c00218c0       0x4f arch/i386/x87.32
                0x00000000c00218c6                x87Detect
                0x00000000c00218e7                x87Save
                0x00000000c00218ee                x87Load
                0x00000000c00218f5                x87Init
                0x00000000c002190e                x87Close
 *fill*         0x00000000c002190f        0x1 
 .text          0x00000000c0021910       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021935        0x0 crtn.32
 *fill*         0x00000000c0021935        0x3 
 .text          0x00000000c0021938      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021938                __divdi3
 *fill*         0x00000000c0021a83        0x1 
 .text          0x00000000c0021a84      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021a84                __moddi3
 *fill*         0x00000000c0021c02        0x2 
 .text          0x00000000c0021c04       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021c04                __udivdi3
 *fill*         0x00000000c0021d03        0x1 
 .text          0x00000000c0021d04      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021d04                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021e20        0x0
 .iplt          0x00000000c0021e20        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021e1e        0xf
 .init          0x00000000c0021e1e        0x3 crti.32
                0x00000000c0021e1e                _init
 .init          0x00000000c0021e21        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021e26        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021e2b        0x2 crtn.32

.fini           0x00000000c0021e2d        0xa
 .fini          0x00000000c0021e2d        0x3 crti.32
                0x00000000c0021e2d                _fini
 .fini          0x00000000c0021e30        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021e35        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021e38       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021e38       0x1a hal/device.32
                0x00000000c0021e38                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021e38                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021e52       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021e52       0x2a hal/device.32
                0x00000000c0021e52                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e7c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e7c       0xdc hal/device.32
                0x00000000c0021e7c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021f58       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021f58       0x42 hal/device.32
                0x00000000c0021f58                LinkedList<Device>::LinkedList()
                0x00000000c0021f58                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021f9c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021f9c       0x1c hal/timer.32
                0x00000000c0021f9c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021fb8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021fb8        0x7 hal/timer.32
                0x00000000c0021fb8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021fc0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021fc0       0xbc hal/timer.32
                0x00000000c0021fc0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002207c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002207c       0xda hal/timer.32
                0x00000000c002207c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022158       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022158       0x23 hw/acpi.32
                0x00000000c0022158                ACPI::~ACPI()
                0x00000000c0022158                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002217c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002217c       0x2a hw/acpi.32
                0x00000000c002217c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00221a8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00221a8        0x2 hw/acpi.32
                0x00000000c00221a8                LinkedList<Device>::~LinkedList()
                0x00000000c00221a8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00221ac       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00221ac       0x1c hw/acpi.32
                0x00000000c00221ac                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00221c8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00221c8        0x7 hw/acpi.32
                0x00000000c00221c8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00221d0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00221d0       0xb8 hw/acpi.32
                0x00000000c00221d0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022288       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022288       0x23 krnl/computer.32
                0x00000000c0022288                Computer::~Computer()
                0x00000000c0022288                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00222ac       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00222ac       0x2a krnl/computer.32
                0x00000000c00222ac                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00222d6       0x24
 .text._Z10idleCommonv
                0x00000000c00222d6       0x24 krnl/idle.32
                0x00000000c00222d6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00222fa        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00222fa        0x2 krnl/unixfile.32
                0x00000000c00222fa                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00222fa                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00222fc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00222fc       0x42 krnl/unixfile.32
                0x00000000c00222fc                LinkedList<UnixFile>::LinkedList()
                0x00000000c00222fc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002233e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002233e       0xd3 krnl/unixfile.32
                0x00000000c002233e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022412        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022412        0x7 krnl/unixfile.32
                0x00000000c0022412                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002241a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002241a       0xa1 krnl/unixfile.32
                0x00000000c002241a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00224bc        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00224bc        0x8 krnl/unixfile.32
                0x00000000c00224bc                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00224c4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00224c4        0x8 sys/kill.32
                0x00000000c00224c4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00224cc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00224cc        0x2 thr/prcssthr.32
                0x00000000c00224cc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00224cc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00224d0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00224d0       0x49 thr/prcssthr.32
                0x00000000c00224d0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00224d0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002251c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002251c       0x42 thr/prcssthr.32
                0x00000000c002251c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002251c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002255e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002255e       0x23 arch/i386/apic.32
                0x00000000c002255e                IOAPIC::~IOAPIC()
                0x00000000c002255e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022582       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022582       0x2a arch/i386/apic.32
                0x00000000c0022582                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c00225ac       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00225ac       0x23 arch/i386/hal.32
                0x00000000c00225ac                CPU::~CPU()
                0x00000000c00225ac                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00225d0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00225d0       0x2a arch/i386/hal.32
                0x00000000c00225d0                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00225fa       0x23
 .text._ZN3PCID2Ev
                0x00000000c00225fa       0x23 hw/bus/pci.32
                0x00000000c00225fa                PCI::~PCI()
                0x00000000c00225fa                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002261e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002261e       0x2a hw/bus/pci.32
                0x00000000c002261e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022648       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022648       0x23 hw/diskctrl/ide.32
                0x00000000c0022648                IDE::~IDE()
                0x00000000c0022648                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002266c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002266c       0x2a hw/diskctrl/ide.32
                0x00000000c002266c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022696       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022696       0x23 hw/diskctrl/satabus.32
                0x00000000c0022696                SATABus::~SATABus()
                0x00000000c0022696                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00226ba       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00226ba       0x2a hw/diskctrl/satabus.32
                0x00000000c00226ba                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00226e4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00226e4       0x23 hw/diskphys/ata.32
                0x00000000c00226e4                ATA::~ATA()
                0x00000000c00226e4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022708       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022708       0x2a hw/diskphys/ata.32
                0x00000000c0022708                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022732       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022732       0x23 hw/diskphys/atapi.32
                0x00000000c0022732                ATAPI::~ATAPI()
                0x00000000c0022732                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022756       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022756       0x2a hw/diskphys/atapi.32
                0x00000000c0022756                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022780       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022780       0x23 hw/diskphys/sata.32
                0x00000000c0022780                SATA::~SATA()
                0x00000000c0022780                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00227a4       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00227a4       0x2a hw/diskphys/sata.32
                0x00000000c00227a4                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00227ce       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00227ce       0x23 hw/diskphys/satapi.32
                0x00000000c00227ce                SATAPI::~SATAPI()
                0x00000000c00227ce                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00227f2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00227f2       0x2a hw/diskphys/satapi.32
                0x00000000c00227f2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c002281c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002281c       0x23 hw/timer/apictimer.32
                0x00000000c002281c                APICTimer::~APICTimer()
                0x00000000c002281c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022840       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022840       0x2a hw/timer/apictimer.32
                0x00000000c0022840                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002286c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002286c       0x23 hw/timer/pit.32
                0x00000000c002286c                PIT::~PIT()
                0x00000000c002286c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022890       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022890       0x2a hw/timer/pit.32
                0x00000000c0022890                PIT::~PIT()

.rodata         0x00000000c00228ba     0x3f16
                0x00000000c00228ba                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00228ba        0x2 
 .ctors         0x00000000c00228bc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00228c0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00228c4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00228c8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00228cc                end_ctors = .
                0x00000000c00228cc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00228cc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00228d0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00228d0                __DTOR_END__
                0x00000000c00228d4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00228d4        0xc 
 .rodata        0x00000000c00228e0      0x101 acpica/utclib.32
                0x00000000c00228e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00229e1        0x3 
 .rodata        0x00000000c00229e4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00229fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022a46       0x1a 
 .rodata        0x00000000c0022a60       0xed fs/fat/ff.32
 *fill*         0x00000000c0022b4d       0x13 
 .rodata        0x00000000c0022b60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022f60       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022fcf        0x1 
 .rodata.str1.4
                0x00000000c0022fd0       0x38 dbg/kconsole.32
 .rodata        0x00000000c0023008      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023158      0x169 dbg/usban.32
 *fill*         0x00000000c00232c1        0x3 
 .rodata.str1.4
                0x00000000c00232c4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00233fb      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002351e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023577        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023578       0x6c fs/vfs.32
                0x00000000c0023578                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00235e4       0x1c fs/vfs.32
                0x00000000c00235e4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023600       0x1c fs/vfs.32
                0x00000000c0023600                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002361c       0x2c hal/bus.32
                0x00000000c002361c                vtable for Bus
 *fill*         0x00000000c0023648       0x18 
 .rodata        0x00000000c0023660      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00237b0       0x3c hal/clock.32
                0x00000000c00237b0                vtable for Clock
 .rodata.str1.1
                0x00000000c00237ec       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023850       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023872       0x15 hal/device.32
 *fill*         0x00000000c0023887        0x1 
 .rodata._ZTV6Device
                0x00000000c0023888       0x2c hal/device.32
                0x00000000c0023888                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00238b4       0x2c hal/device.32
                0x00000000c00238b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00238e0       0x2c hal/diskctrl.32
                0x00000000c00238e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002390c       0x38 hal/diskphys.32
                0x00000000c002390c                vtable for PhysicalDisk
 .rodata        0x00000000c0023944       0x53 hal/keybrd.32
 *fill*         0x00000000c0023997        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023998       0x34 hal/keybrd.32
                0x00000000c0023998                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00239cc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023a10       0x2c hal/logidisk.32
                0x00000000c0023a10                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023a3c       0x2c hal/mouse.32
                0x00000000c0023a3c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023a68       0x34 hal/nic.32
                0x00000000c0023a68                vtable for NIC
 .rodata.str1.1
                0x00000000c0023a9c        0xb hal/partition.32
 *fill*         0x00000000c0023aa7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023aa8       0x44 hal/serial.32
                0x00000000c0023aa8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023aec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023b37        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023b3f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023b3f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023b3f       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023b84       0x30 hal/timer.32
                0x00000000c0023b84                vtable for Timer
 .rodata.str1.1
                0x00000000c0023bb4       0x3e hal/vcache.32
 *fill*         0x00000000c0023bf2        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023bf4       0x10 hal/vcache.32
                0x00000000c0023bf4                vtable for VCache
 .rodata.str1.1
                0x00000000c0023c04       0xba hal/video.32
 *fill*         0x00000000c0023cbe        0x2 
 .rodata._ZTV5Video
                0x00000000c0023cc0       0x4c hal/video.32
                0x00000000c0023cc0                vtable for Video
 .rodata.str1.1
                0x00000000c0023d0c      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023ec3        0x1 
 .rodata.str1.4
                0x00000000c0023ec4       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023f5f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023f5f        0x8 hw/acpi.32
 *fill*         0x00000000c0023f5f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023f60       0x2c hw/acpi.32
                0x00000000c0023f60                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023f8c       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023f9f       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023fdf       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0024000       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024033        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0024036       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00240ac       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0024155        0x3 
 .rodata.str1.4
                0x00000000c0024158       0xb8 krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024210       0x2c krnl/computer.32
                0x00000000c0024210                vtable for Computer
 .rodata.str1.1
                0x00000000c002423c       0x3c krnl/env.32
 .rodata        0x00000000c0024278       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c00242f6        0x4 krnl/intlformat.32
 *fill*         0x00000000c00242fa        0x2 
 .rodata.str1.4
                0x00000000c00242fc       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c002432c        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c002433b       0x17 krnl/main.32
 *fill*         0x00000000c0024352        0x2 
 .rodata.str1.4
                0x00000000c0024354      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024459       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00244b1       0x39 krnl/pipe.32
 *fill*         0x00000000c00244ea        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00244ec       0x1c krnl/pipe.32
                0x00000000c00244ec                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024508       0x91 krnl/resolve.32
 *fill*         0x00000000c0024599        0x3 
 .rodata.str1.4
                0x00000000c002459c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00245bb      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c00246c3       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002470b       0x5e krnl/terminal.32
 *fill*         0x00000000c0024769        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002476c       0x1c krnl/terminal.32
                0x00000000c002476c                vtable for VgaText
 .rodata        0x00000000c0024788       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00247c3       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00247c3       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00247c3       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00247c3        0x8 krnl/unixfile.32
 *fill*         0x00000000c00247c3        0x1 
 .rodata.str1.4
                0x00000000c00247c4       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c00247e4       0x22 krnl/unixfile.32
 *fill*         0x00000000c0024806        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0024808       0x1c krnl/unixfile.32
                0x00000000c0024808                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024824       0x1c krnl/unixfile.32
                0x00000000c0024824                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024840      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024dc3      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024f24       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024f39        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024f48       0x13 sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024f5b       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024f7c       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024fc0       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024fd5       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0025001       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0025012      0x37d thr/elf.32
                                        0x38c (size before relaxing)
 .rodata.str1.1
                0x00000000c002538f       0x57 thr/prcssthr.32
 *fill*         0x00000000c00253e6        0x2 
 .rodata.str1.4
                0x00000000c00253e8       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00254e0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00254e0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00254e0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00254e0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00254e0       0x61 vm86/vm8086.32
 *fill*         0x00000000c0025541        0x3 
 .rodata.str1.4
                0x00000000c0025544       0x81 vm86/vm8086.32
 *fill*         0x00000000c00255c5        0x3 
 .rodata        0x00000000c00255c8      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025958       0x17 arch/i386/apic.32
 *fill*         0x00000000c002596f        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025970       0x2c arch/i386/apic.32
                0x00000000c0025970                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c002599c      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025cbe        0x2 
 .rodata.str1.4
                0x00000000c0025cc0       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025ce3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025ce4       0x2c arch/i386/hal.32
                0x00000000c0025ce4                vtable for CPU
 .rodata.str1.4
                0x00000000c0025d10       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025d71       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025daf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025dc4       0x3c arch/i386/rtc.32
                0x00000000c0025dc4                vtable for RTC
 .rodata.str1.1
                0x00000000c0025e00       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025e41        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025e44       0x6c fs/fat/vfslink.32
                0x00000000c0025e44                vtable for FAT
 .rodata.str1.1
                0x00000000c0025eb0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025eb0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025fe8       0x6c fs/iso9660/vfslink.32
                0x00000000c0025fe8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0026054       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0026098       0x34 hal/sound/sndcard.32
                0x00000000c0026098                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00260cc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002610b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0026143       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00261e4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026248       0x2c hw/bus/pci.32
                0x00000000c0026248                vtable for PCI
 .rodata.str1.1
                0x00000000c0026274      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026398       0x2c hw/diskctrl/ide.32
                0x00000000c0026398                vtable for IDE
 .rodata.str1.4
                0x00000000c00263c4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00263e8       0x2c hw/diskctrl/satabus.32
                0x00000000c00263e8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0026414       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00264cf        0x1 
 .rodata._ZTV3ATA
                0x00000000c00264d0       0x38 hw/diskphys/ata.32
                0x00000000c00264d0                vtable for ATA
 .rodata.str1.1
                0x00000000c0026508        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0026515        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026518       0x38 hw/diskphys/atapi.32
                0x00000000c0026518                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026550       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00265d8       0x38 hw/diskphys/sata.32
                0x00000000c00265d8                vtable for SATA
 .rodata.str1.1
                0x00000000c0026610       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00266fa        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00266fc       0x38 hw/diskphys/satapi.32
                0x00000000c00266fc                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026734       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002674f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026750       0x30 hw/timer/apictimer.32
                0x00000000c0026750                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026780       0x1d hw/timer/pit.32
 *fill*         0x00000000c002679d        0x3 
 .rodata._ZTV3PIT
                0x00000000c00267a0       0x30 hw/timer/pit.32
                0x00000000c00267a0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00267d0      0xa75
 *(.data)
 .data          0x00000000c00267d0        0x0 crti.32
 .data          0x00000000c00267d0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00267d0                __dso_handle
 .data          0x00000000c00267d4        0x0 acpica/utclib.32
 .data          0x00000000c00267d4        0x0 krnl/malloc.32
 .data          0x00000000c00267d4        0x0 libk/ctype.32
 .data          0x00000000c00267d4        0x0 libk/string.32
 .data          0x00000000c00267d4        0x0 arch/i386/cc.32
 .data          0x00000000c00267d4        0x0 fs/fat/diskio.32
 .data          0x00000000c00267d4        0x0 fs/fat/ff.32
 .data          0x00000000c00267d4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00267d4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00267d4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00267d4        0x0 dbg/kconsole.32
 *fill*         0x00000000c00267d4        0xc 
 .data          0x00000000c00267e0       0x28 dbg/usban.32
                0x00000000c00267e0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026808        0x0 fs/symlink.32
 .data          0x00000000c0026808        0x0 fs/vfs.32
 .data          0x00000000c0026808        0x0 hal/bus.32
 .data          0x00000000c0026808        0x0 hal/buzzer.32
 .data          0x00000000c0026808        0x0 hal/clock.32
 .data          0x00000000c0026808        0x0 hal/device.32
 .data          0x00000000c0026808        0x0 hal/diskctrl.32
 .data          0x00000000c0026808        0x0 hal/diskphys.32
 .data          0x00000000c0026808        0x0 hal/fpu.32
 .data          0x00000000c0026808        0x0 hal/keybrd.32
 .data          0x00000000c0026808        0x0 hal/logidisk.32
 .data          0x00000000c0026808        0x0 hal/mouse.32
 .data          0x00000000c0026808        0x0 hal/nic.32
 .data          0x00000000c0026808        0x0 hal/partition.32
 .data          0x00000000c0026808        0x0 hal/serial.32
 .data          0x00000000c0026808        0x0 hal/timer.32
 .data          0x00000000c0026808        0x0 hal/vcache.32
 .data          0x00000000c0026808        0x0 hal/video.32
 .data          0x00000000c0026808       0x10 hw/acpi.32
                0x00000000c0026808                legacyIRQRemaps
 .data          0x00000000c0026818        0x0 krnl/assert.32
 .data          0x00000000c0026818        0x0 krnl/atexit.32
 .data          0x00000000c0026818        0x0 krnl/bootflags.32
 .data          0x00000000c0026818        0x0 krnl/bootmsg.32
 .data          0x00000000c0026818        0x4 krnl/c++.32
                0x00000000c0026818                __stack_chk_guard
 .data          0x00000000c002681c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002681c        0x4 
 .data          0x00000000c0026820      0x100 krnl/cm.32
                0x00000000c0026820                CmComponents
 .data          0x00000000c0026920        0x0 krnl/compat.32
 .data          0x00000000c0026920        0x0 krnl/computer.32
 .data          0x00000000c0026920      0x400 krnl/crc32.32
                0x00000000c0026920                KiPolyLookupCRC32
 .data          0x00000000c0026d20       0x4d krnl/env.32
                0x00000000c0026d20                defaultSysEnv
 .data          0x00000000c0026d6d        0x0 krnl/fault.32
 .data          0x00000000c0026d6d        0x0 krnl/gdt.32
 .data          0x00000000c0026d6d        0x0 krnl/idle.32
 .data          0x00000000c0026d6d        0x0 krnl/idt.32
 .data          0x00000000c0026d6d        0x0 krnl/inlines.32
 .data          0x00000000c0026d6d        0x0 krnl/intlformat.32
 .data          0x00000000c0026d6d        0x0 krnl/intops.32
 *fill*         0x00000000c0026d6d        0x3 
 .data          0x00000000c0026d70        0x4 krnl/kheap.32
 .data          0x00000000c0026d74        0x0 krnl/mailbox.32
 .data          0x00000000c0026d74        0x0 krnl/main.32
 .data          0x00000000c0026d74        0x0 krnl/mutex.32
 .data          0x00000000c0026d74        0x0 krnl/panic.32
 .data          0x00000000c0026d74        0x4 krnl/physmgr.32
                0x00000000c0026d74                Phys::bitmap
 .data          0x00000000c0026d78        0x0 krnl/pipe.32
 .data          0x00000000c0026d78        0x0 krnl/powctrl.32
 .data          0x00000000c0026d78        0x0 krnl/random.32
 .data          0x00000000c0026d78        0x0 krnl/resolve.32
 .data          0x00000000c0026d78        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026d78        0x8 
 .data          0x00000000c0026d80       0x4c krnl/signal.32
                0x00000000c0026d80                KiDefaultSignalHandlers
 *fill*         0x00000000c0026dcc       0x14 
 .data          0x00000000c0026de0      0x124 krnl/syscalls.32
                0x00000000c0026de0                systemCallHandlers
 *fill*         0x00000000c0026f04       0x1c 
 .data          0x00000000c0026f20       0x60 krnl/terminal.32
                0x00000000c0026f20                VgaText::hiddenOut
                0x00000000c0026f40                ansiToVGAMappings
 .data          0x00000000c0026f80        0x0 krnl/tss.32
 .data          0x00000000c0026f80        0x4 krnl/unixfile.32
                0x00000000c0026f80                UnixFile::nextFd
 .data          0x00000000c0026f84       0x15 krnl/virtmgr.32
                0x00000000c0026f84                Virt::pageAllocPtr
                0x00000000c0026f88                Virt::bitmap
                0x00000000c0026f8c                Virt::swapfileSectorsPerPage
                0x00000000c0026f90                Virt::swapfileLength
                0x00000000c0026f94                Virt::swapfileSector
                0x00000000c0026f98                Virt::swapfileDrive
 .data          0x00000000c0026f99        0x0 sys/alarm.32
 .data          0x00000000c0026f99        0x0 sys/eject.32
 .data          0x00000000c0026f99        0x0 sys/exit.32
 .data          0x00000000c0026f99        0x0 sys/getcwd.32
 .data          0x00000000c0026f99        0x0 sys/getpid.32
 .data          0x00000000c0026f99        0x0 sys/getramdata.32
 .data          0x00000000c0026f99        0x0 sys/getvgaptr.32
 .data          0x00000000c0026f99        0x0 sys/kill.32
 .data          0x00000000c0026f99        0x0 sys/loaddll.32
 .data          0x00000000c0026f99        0x0 sys/pause.32
 .data          0x00000000c0026f99        0x0 sys/pthread.32
 .data          0x00000000c0026f99        0x0 sys/read.32
 .data          0x00000000c0026f99        0x0 sys/registersignal.32
 .data          0x00000000c0026f99        0x0 sys/registry.32
 .data          0x00000000c0026f99        0x0 sys/sbrk.32
 .data          0x00000000c0026f99        0x0 sys/setcwd.32
 .data          0x00000000c0026f99        0x0 sys/settime.32
 .data          0x00000000c0026f99        0x0 sys/symlink.32
 .data          0x00000000c0026f99        0x0 sys/timezone.32
 .data          0x00000000c0026f99        0x0 sys/truncate.32
 .data          0x00000000c0026f99        0x0 sys/write.32
 .data          0x00000000c0026f99        0x0 sys/wsbe.32
 .data          0x00000000c0026f99        0x0 sys/yield.32
 .data          0x00000000c0026f99        0x0 thr/alarm.32
 .data          0x00000000c0026f99        0x0 thr/elf.32
 .data          0x00000000c0026f99        0x0 thr/exec.32
 *fill*         0x00000000c0026f99        0x3 
 .data          0x00000000c0026f9c        0x4 thr/prcssthr.32
                0x00000000c0026f9c                Thr::nextPID
 .data          0x00000000c0026fa0        0x0 vm86/vm8086.32
 .data          0x00000000c0026fa0        0x0 arch/i386/apic.32
 .data          0x00000000c0026fa0      0x2a4 arch/i386/hal.32
                0x00000000c0026fa0                exceptionNames
                0x00000000c0027240                lastCode
 .data          0x00000000c0027244        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027244        0x0 arch/i386/pic.32
 .data          0x00000000c0027244        0x0 arch/i386/rtc.32
 .data          0x00000000c0027244        0x0 arch/i386/vga.32
 .data          0x00000000c0027244        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027244        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027244        0x1 fs/iso9660/vfslink.32
                0x00000000c0027244                recentDriveletter
 .data          0x00000000c0027245        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027245        0x0 hal/sound/sndport.32
 .data          0x00000000c0027245        0x0 hw/bus/pci.32
 .data          0x00000000c0027245        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027245        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027245        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027245        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027245        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027245        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027245        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027245        0x0 hw/timer/pit.32
 .data          0x00000000c0027245        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027245        0x0 crtn.32
 .data          0x00000000c0027245        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027245        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027245        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027245        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027248        0x0
 .got           0x00000000c0027248        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027248        0x0
 .got.plt       0x00000000c0027248        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027248        0x0
 .igot.plt      0x00000000c0027248        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027248        0x0
 .tm_clone_table
                0x00000000c0027248        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027248        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027245      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027245        0x3 
 .eh_frame      0x00000000c0027248        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027248        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027248       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00272a0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00272e0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002734c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x74bb
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x4 krnl/bootflags.32
                0x00000000c002d0c0                keBootSettings
 .bss           0x00000000c002d0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c4        0x0 krnl/c++.32
 .bss           0x00000000c002d0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c4        0x4 krnl/cm.32
 .bss           0x00000000c002d0c8        0x0 krnl/compat.32
 .bss           0x00000000c002d0c8       0x12 krnl/computer.32
                0x00000000c002d0c8                systemSleepFunction
                0x00000000c002d0cc                systemResetFunction
                0x00000000c002d0d0                systemShutdownFunction
                0x00000000c002d0d4                Krnl::computer
                0x00000000c002d0d8                KeIsPreemptionOn
                0x00000000c002d0d9                KeIsSchedulingOn
 .bss           0x00000000c002d0da        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0da        0x2 
 .bss           0x00000000c002d0dc        0x8 krnl/env.32
                0x00000000c002d0dc                KeUserEnv
                0x00000000c002d0e0                KeSystemEnv
 *fill*         0x00000000c002d0e4       0x1c 
 .bss           0x00000000c002d100     0x2000 krnl/fault.32
                0x00000000c002d100                keInterruptContexts
                0x00000000c002e100                keInterruptHandlers
 .bss           0x00000000c002f100        0x6 krnl/gdt.32
                0x00000000c002f100                gdtDescr
 .bss           0x00000000c002f106        0x0 krnl/idle.32
 *fill*         0x00000000c002f106        0x2 
 .bss           0x00000000c002f108        0x6 krnl/idt.32
                0x00000000c002f108                idtDescr
 .bss           0x00000000c002f10e        0x0 krnl/inlines.32
 *fill*         0x00000000c002f10e       0x12 
 .bss           0x00000000c002f120       0x24 krnl/intlformat.32
                0x00000000c002f120                keLocale
 .bss           0x00000000c002f144        0x0 krnl/intops.32
 .bss           0x00000000c002f144        0x0 krnl/kheap.32
 .bss           0x00000000c002f144        0x0 krnl/mailbox.32
 .bss           0x00000000c002f144        0x0 krnl/main.32
 .bss           0x00000000c002f144        0x0 krnl/mutex.32
 .bss           0x00000000c002f144        0x1 krnl/panic.32
                0x00000000c002f144                KeIsKernelInPanic
 *fill*         0x00000000c002f145        0x3 
 .bss           0x00000000c002f148       0x29 krnl/physmgr.32
                0x00000000c002f148                Phys::forbidEvictions
                0x00000000c002f14c                Phys::currentPagePointer
                0x00000000c002f150                Phys::highestMem
                0x00000000c002f154                Phys::oldPercent
                0x00000000c002f158                Phys::usedPages
                0x00000000c002f15c                Phys::usablePages
                0x00000000c002f160                Phys::dmaUsage
 .bss           0x00000000c002f171        0x0 krnl/pipe.32
 *fill*         0x00000000c002f171        0xf 
 .bss           0x00000000c002f180       0x48 krnl/powctrl.32
                0x00000000c002f180                powCtrlOnBattery
                0x00000000c002f1a0                currentPowerSettings
                0x00000000c002f1c4                secondsSinceLastUserIO
 .bss           0x00000000c002f1c8        0x8 krnl/random.32
                0x00000000c002f1c8                kiRandSeed
 .bss           0x00000000c002f1d0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1d0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1d0        0x0 krnl/signal.32
 .bss           0x00000000c002f1d0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1d0        0x9 krnl/terminal.32
                0x00000000c002f1d0                terminalCycle
                0x00000000c002f1d4                activeTerminal
                0x00000000c002f1d8                VgaText::graphicMode
 *fill*         0x00000000c002f1d9        0x1 
 .bss           0x00000000c002f1da        0x2 krnl/tss.32
                0x00000000c002f1da                doubleFaultSelector
 *fill*         0x00000000c002f1dc        0x4 
 .bss           0x00000000c002f1e0       0x84 krnl/unixfile.32
                0x00000000c002f1e0                sfileLpt
                0x00000000c002f220                sfileCom
                0x00000000c002f244                sfileNul
                0x00000000c002f248                sfilePnt
                0x00000000c002f24c                sfileAux
                0x00000000c002f250                sfileCon
                0x00000000c002f254                initialFilesAdded
                0x00000000c002f258                unixFileLinkedList
 .bss           0x00000000c002f264       0x10 krnl/virtmgr.32
                0x00000000c002f264                twswaps
                0x00000000c002f268                swapBalance
                0x00000000c002f26c                Virt::swapfileBitmap
                0x00000000c002f270                keFirstVAS
 .bss           0x00000000c002f274        0x0 sys/alarm.32
 .bss           0x00000000c002f274        0x0 sys/eject.32
 .bss           0x00000000c002f274        0x0 sys/exit.32
 .bss           0x00000000c002f274        0x0 sys/getcwd.32
 .bss           0x00000000c002f274        0x0 sys/getpid.32
 .bss           0x00000000c002f274        0x0 sys/getramdata.32
 .bss           0x00000000c002f274        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f274        0x0 sys/kill.32
 .bss           0x00000000c002f274        0x0 sys/loaddll.32
 .bss           0x00000000c002f274        0x0 sys/pause.32
 .bss           0x00000000c002f274        0x0 sys/pthread.32
 .bss           0x00000000c002f274        0x0 sys/read.32
 .bss           0x00000000c002f274        0x0 sys/registersignal.32
 .bss           0x00000000c002f274        0x0 sys/registry.32
 .bss           0x00000000c002f274        0x0 sys/sbrk.32
 .bss           0x00000000c002f274        0x0 sys/setcwd.32
 .bss           0x00000000c002f274        0x0 sys/settime.32
 .bss           0x00000000c002f274        0x0 sys/symlink.32
 .bss           0x00000000c002f274        0x0 sys/timezone.32
 .bss           0x00000000c002f274        0x0 sys/truncate.32
 .bss           0x00000000c002f274        0x0 sys/write.32
 .bss           0x00000000c002f274        0x0 sys/wsbe.32
 .bss           0x00000000c002f274        0x0 sys/yield.32
 .bss           0x00000000c002f274        0x0 thr/alarm.32
 *fill*         0x00000000c002f274        0xc 
 .bss           0x00000000c002f280      0x7a4 thr/elf.32
                0x00000000c002f280                Thr::driverLookupNext
                0x00000000c002f2a0                Thr::driverLookupLen
                0x00000000c002f4a0                Thr::driverLookupAddr
                0x00000000c002f6a0                Thr::driverNameLookup
                0x00000000c002f8a0                Thr::kernelSymbols
                0x00000000c002f920                Thr::kernelStringTable
                0x00000000c002f9a0                Thr::kernelSymbolTable
                0x00000000c002fa20                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa24        0x0 thr/exec.32
 *fill*         0x00000000c002fa24        0x4 
 .bss           0x00000000c002fa28       0x70 thr/prcssthr.32
                0x00000000c002fa28                KiRestorePreemptionValue
                0x00000000c002fa2c                KiPreemptionDisableCounter
                0x00000000c002fa30                cleanerThread
                0x00000000c002fa34                weNeedTheCleanerToNotBlock
                0x00000000c002fa38                retValLockStuff
                0x00000000c002fa3c                retValSchedLock
                0x00000000c002fa40                lockStuffLock
                0x00000000c002fa44                schedulerLock
                0x00000000c002fa48                taskSwitchesPostponedFlag
                0x00000000c002fa4c                postponeTaskSwitchesCounter
                0x00000000c002fa50                irqDisableCounter
                0x00000000c002fa54                terminatedTaskList
                0x00000000c002fa60                sleepingTaskList
                0x00000000c002fa6c                taskList
                0x00000000c002fa78                kernelProcess
 *fill*         0x00000000c002fa98        0x8 
 .bss           0x00000000c002faa0       0x40 vm86/vm8086.32
                0x00000000c002faa0                Vm::started8086Yet
                0x00000000c002faa4                Vm::vmRetV
                0x00000000c002faa8                Vm::vmDone
                0x00000000c002faa9                Vm::vmReady
                0x00000000c002faac                Vm::vm86Thread
                0x00000000c002fab0                Vm::vmToHostCommsPtr
                0x00000000c002fac0                Vm::vmToHostComms
 .bss           0x00000000c002fae0       0x41 arch/i386/apic.32
                0x00000000c002fae0                noOfIOAPICs
                0x00000000c002fb00                ioapics
                0x00000000c002fb20                IOAPICsSetupYet
 *fill*         0x00000000c002fb21        0x3 
 .bss           0x00000000c002fb24       0x54 arch/i386/hal.32
                0x00000000c002fb24                apic
                0x00000000c002fb28                guiPanicHandler
                0x00000000c002fb2c                fpuOwner
                0x00000000c002fb30                coproLoadFunc
                0x00000000c002fb34                coproSaveFunc
                0x00000000c002fb38                lastD
                0x00000000c002fb3c                lastC
                0x00000000c002fb40                lastB
                0x00000000c002fb44                lastA
                0x00000000c002fb48                HalPageWriteCombiningFlag
                0x00000000c002fb4c                HalPageGlobalFlag
                0x00000000c002fb50                nmi
                0x00000000c002fb54                vendorIDString
                0x00000000c002fb61                familyID
                0x00000000c002fb62                model
                0x00000000c002fb63                processorType
                0x00000000c002fb64                steppingID
                0x00000000c002fb68                vendor
                0x00000000c002fb6c                opcodeDetectionMode
                0x00000000c002fb70                features
 .bss           0x00000000c002fb78        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb78        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb78        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb7a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb7a        0x6 
 .bss           0x00000000c002fb80       0xf0 fs/fat/vfslink.32
                0x00000000c002fb80                FAT::fats
                0x00000000c002fba0                FAT::vfsToFatRemaps
                0x00000000c002fc20                fatToVFSRemaps
 .bss           0x00000000c002fc70        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc70       0x10 
 .bss           0x00000000c002fc80      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc80                iso9660Owner
                0x00000000c002fc84                recentSector
                0x00000000c002fca0                recentBuffer
 .bss           0x00000000c00304a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00304a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00304a0        0xd hw/bus/pci.32
                0x00000000c00304a0                thePCI
 .bss           0x00000000c00304ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00304ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00304ad        0x3 
 .bss           0x00000000c00304b0        0x8 hw/diskphys/ata.32
                0x00000000c00304b0                ataSectorsWritten
                0x00000000c00304b4                ataSectorsRead
 .bss           0x00000000c00304b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00304b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00304b8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c00304b8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c00304b8        0x4 hw/timer/pit.32
                0x00000000c00304b8                pitFreq
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00304bc        0x0 crtn.32
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00304bc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0037977                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
