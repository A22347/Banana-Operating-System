Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fefe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd7c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000812a                File::open(FileOpenMode)
                0x00000000c0008188                File::close()
                0x00000000c00081e8                File::seek(unsigned long long)
                0x00000000c000823e                File::truncate(unsigned long long)
                0x00000000c0008294                File::tell(unsigned long long*)
                0x00000000c00082e4                File::rewind()
                0x00000000c00082f8                File::unlink()
                0x00000000c0008344                File::rename(char const*)
                0x00000000c0008392                File::chfatattr(unsigned char, unsigned char)
                0x00000000c00083ee                File::exists()
                0x00000000c000842c                File::stat(unsigned long long*, bool*)
                0x00000000c000848d                Fs::setcwd(Process*, char*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00086b4                Directory::open()
                0x00000000c0008710                Directory::close()
                0x00000000c0008770                Directory::unlink()
                0x00000000c00087bc                Directory::rename(char const*)
                0x00000000c000880a                Directory::exists()
                0x00000000c0008848                Directory::read(dirent*)
                0x00000000c0008894                Directory::create()
                0x00000000c00088e0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c00088e6        0x2 
 .text          0x00000000c00088e8       0x86 hal/bus.32
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
 .text          0x00000000c000896e       0x99 hal/buzzer.32
                0x00000000c000896e                KeBeepThread(void*)
                0x00000000c00089ae                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a07        0x1 
 .text          0x00000000c0008a08      0x51b hal/clock.32
                0x00000000c0008a08                KeLoadClockSettings()
                0x00000000c0008b10                Clock::Clock(char const*)
                0x00000000c0008b10                Clock::Clock(char const*)
                0x00000000c0008b46                Clock::~Clock()
                0x00000000c0008b46                Clock::~Clock()
                0x00000000c0008b6a                Clock::~Clock()
                0x00000000c0008b94                Clock::timeInSecondsLocal()
                0x00000000c0008bdc                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c35                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d5a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008dba                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008efe                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f23        0x1 
 .text          0x00000000c0008f24      0x47a hal/device.32
                0x00000000c0008f24                Device::hibernate()
                0x00000000c0008f26                Device::wake()
                0x00000000c0008f28                Device::detect()
                0x00000000c0008f2a                Device::disableLegacy()
                0x00000000c0008f2c                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f2e                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f32                DriverlessDevice::detect()
                0x00000000c0008f34                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f48                Device::~Device()
                0x00000000c0008f48                Device::~Device()
                0x00000000c0008f56                Device::~Device()
                0x00000000c0008f7e                Device::findAndLoadDriver()
                0x00000000c0008f8c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fb2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0008ff2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000901c                Device::getParent()
                0x00000000c0009028                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009046                Device::addChild(Device*)
                0x00000000c000908a                Device::removeAllChildren()
                0x00000000c00090d0                Device::hibernateAll()
                0x00000000c0009100                Device::wakeAll()
                0x00000000c0009130                Device::detectAll()
                0x00000000c0009160                Device::disableLegacyAll()
                0x00000000c0009162                Device::loadDriversForAll()
                0x00000000c0009164                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000919a                Device::setName(char const*)
                0x00000000c00091a8                Device::Device(char const*)
                0x00000000c00091a8                Device::Device(char const*)
                0x00000000c00092a4                Device::getName()
                0x00000000c00092ae                Device::closeAll()
                0x00000000c00092fa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00092fa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009330                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009374                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000939e        0x2 
 .text          0x00000000c00093a0       0x86 hal/diskctrl.32
                0x00000000c00093a0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093a0                HardDiskController::HardDiskController(char const*)
                0x00000000c00093d8                HardDiskController::~HardDiskController()
                0x00000000c00093d8                HardDiskController::~HardDiskController()
                0x00000000c00093fc                HardDiskController::~HardDiskController()
 .text          0x00000000c0009426       0xe2 hal/diskphys.32
                0x00000000c0009426                PhysicalDisk::eject()
                0x00000000c000942a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000942a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009492                PhysicalDisk::startCache()
                0x00000000c00094ba                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094ba                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094de                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009508        0x0 hal/fpu.32
 .text          0x00000000c0009508        0x0 hal/intctrl.32
 .text          0x00000000c0009508      0x8a8 hal/keybrd.32
                0x00000000c0009508                startGUI(void*)
                0x00000000c000956d                startGUIVESA(void*)
                0x00000000c00095d2                sendKeyToTerminal(unsigned char)
                0x00000000c00096a8                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b64                clearInternalKeybuffer(VgaText*)
                0x00000000c0009b99                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d26                Keyboard::Keyboard(char const*)
                0x00000000c0009d26                Keyboard::Keyboard(char const*)
                0x00000000c0009d62                Keyboard::~Keyboard()
                0x00000000c0009d62                Keyboard::~Keyboard()
                0x00000000c0009d86                Keyboard::~Keyboard()
 .text          0x00000000c0009db0      0x3f8 hal/logidisk.32
                0x00000000c0009db0                LogicalDisk::close(int, int, void*)
                0x00000000c0009db4                LogicalDisk::~LogicalDisk()
                0x00000000c0009db4                LogicalDisk::~LogicalDisk()
                0x00000000c0009dd8                LogicalDisk::~LogicalDisk()
                0x00000000c0009e02                LogicalDisk::open(int, int, void*)
                0x00000000c0009e16                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e4e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009e94                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009e94                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f54                LogicalDisk::assignDriveLetter()
                0x00000000c000a00e                LogicalDisk::mount()
                0x00000000c000a056                LogicalDisk::unmount()
                0x00000000c000a066                LogicalDisk::eject()
                0x00000000c000a07a                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0d0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a13c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1a8       0x86 hal/mouse.32
                0x00000000c000a1a8                Mouse::Mouse(char const*)
                0x00000000c000a1a8                Mouse::Mouse(char const*)
                0x00000000c000a1e0                Mouse::~Mouse()
                0x00000000c000a1e0                Mouse::~Mouse()
                0x00000000c000a204                Mouse::~Mouse()
 .text          0x00000000c000a22e       0x90 hal/nic.32
                0x00000000c000a22e                NIC::getMAC()
                0x00000000c000a234                NIC::write(int, unsigned char*, int*)
                0x00000000c000a23a                NIC::NIC(char const*)
                0x00000000c000a23a                NIC::NIC(char const*)
                0x00000000c000a270                NIC::~NIC()
                0x00000000c000a270                NIC::~NIC()
                0x00000000c000a294                NIC::~NIC()
 .text          0x00000000c000a2be      0x33b hal/partition.32
                0x00000000c000a2be                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a366                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a5f9        0x3 
 .text          0x00000000c000a5fc       0x86 hal/serial.32
                0x00000000c000a5fc                Serial::Serial(char const*)
                0x00000000c000a5fc                Serial::Serial(char const*)
                0x00000000c000a634                Serial::~Serial()
                0x00000000c000a634                Serial::~Serial()
                0x00000000c000a658                Serial::~Serial()
 *fill*         0x00000000c000a682        0x2 
 .text          0x00000000c000a684      0x238 hal/timer.32
                0x00000000c000a684                Timer::Timer(char const*)
                0x00000000c000a684                Timer::Timer(char const*)
                0x00000000c000a6bc                Timer::~Timer()
                0x00000000c000a6bc                Timer::~Timer()
                0x00000000c000a6e0                Timer::~Timer()
                0x00000000c000a70a                Timer::read()
                0x00000000c000a715                setupTimer(int)
                0x00000000c000a750                timerHandler(unsigned int)
 .text          0x00000000c000a8bc      0x444 hal/vcache.32
                0x00000000c000a8bc                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8bc                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa2c                VCache::invalidateReadBuffer()
                0x00000000c000aa3c                VCache::writeWriteBuffer()
                0x00000000c000aa88                VCache::~VCache()
                0x00000000c000aa88                VCache::~VCache()
                0x00000000c000aae0                VCache::~VCache()
                0x00000000c000ab08                VCache::write(unsigned long long, int, void*)
                0x00000000c000abf8                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ad00      0x71d hal/video.32
                0x00000000c000ad00                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad4c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000adbc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae4c                Video::clearScreen(unsigned int)
                0x00000000c000ae80                Video::putpixel(int, int, unsigned int)
                0x00000000c000ae8e                Video::readPixelApprox(int, int)
                0x00000000c000aea2                Video::Video(char const*)
                0x00000000c000aea2                Video::Video(char const*)
                0x00000000c000aed8                Video::~Video()
                0x00000000c000aed8                Video::~Video()
                0x00000000c000aefc                Video::~Video()
                0x00000000c000af26                Video::isMonochrome()
                0x00000000c000af32                Video::getWidth()
                0x00000000c000af3e                Video::getHeight()
                0x00000000c000af4a                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b006                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b3ac                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b41d        0x3 
 .text          0x00000000c000b420     0x1096 hw/acpi.32
                0x00000000c000b420                ACPI::close(int, int, void*)
                0x00000000c000b428                loadACPITables(unsigned char*)
                0x00000000c000b688                findRSDT(unsigned char*)
                0x00000000c000b7d4                findDataTable(unsigned char*, char*)
                0x00000000c000b848                scanMADT()
                0x00000000c000bca0                ACPI::ACPI()
                0x00000000c000bca0                ACPI::ACPI()
                0x00000000c000bcf4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bdf0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000bebc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000bec4                ACPI::detectPCI()
                0x00000000c000c0d0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c0e8                ACPI::open(int, int, void*)
 .text          0x00000000c000c4b6       0xb6 krnl/atexit.32
                0x00000000c000c4b6                KeInitialiseAtexit()
                0x00000000c000c4d5                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c509                KeExecuteAtexit()
 .text          0x00000000c000c56c       0x9f krnl/bootmsg.32
                0x00000000c000c56c                KeDisplaySplashScreen()
                0x00000000c000c59b                KeSetBootMessage(char const*)
 .text          0x00000000c000c60b       0x5f krnl/c++.32
                0x00000000c000c60b                __cxa_atexit
                0x00000000c000c60e                __cxa_finalize
                0x00000000c000c60f                __stack_chk_fail
                0x00000000c000c645                __cxa_pure_virtual
                0x00000000c000c656                operator new[](unsigned long)
                0x00000000c000c65b                operator delete(void*, unsigned long)
                0x00000000c000c660                operator delete[](void*)
                0x00000000c000c665                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c66a        0x2 
 .text          0x00000000c000c66c       0x44 krnl/cdefs.32
                0x00000000c000c66c                CUnlockScheduler
                0x00000000c000c684                CLockScheduler
                0x00000000c000c694                CPrintf
 .text          0x00000000c000c6b0      0xd51 krnl/cm.32
                0x00000000c000c6b0                CmOpen(char const*)
                0x00000000c000c7ce                CmClose(Reghive_Tag*)
                0x00000000c000c7e4                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c820                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c897                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c8d6                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c908                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c944                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c96c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c98d                CmExpand(Reghive_Tag*, int)
                0x00000000c000ca08                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000ca8e                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cb82                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000ccba                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cd1b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cd4b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cd82                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cdac                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000cdec                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000ce90                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000cebe                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d05b                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d0a8                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d122                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d175                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d239                zStrtok(char*, char const*)
                0x00000000c000d2ab                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d32c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d3cf                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d401        0x3 
 .text          0x00000000c000d404       0x1d krnl/compat.32
                0x00000000c000d404                Krnl::handlePowerButton()
                0x00000000c000d414                Krnl::handleSleepButton()
 *fill*         0x00000000c000d421        0x1 
 .text          0x00000000c000d422      0x2c3 krnl/computer.32
                0x00000000c000d422                Computer::close(int, int, void*)
                0x00000000c000d428                Computer::open(int, int, void*)
                0x00000000c000d50e                KeFirstTask()
                0x00000000c000d630                Computer::Computer()
                0x00000000c000d630                Computer::Computer()
                0x00000000c000d674                KePrepareShutdown()
                0x00000000c000d694                KeShutdown()
                0x00000000c000d6b8                KeSleep()
                0x00000000c000d6c4                KeRestart()
 .text          0x00000000c000d6e5       0x2b krnl/crc32.32
                0x00000000c000d6e5                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d710      0x5bf krnl/env.32
                0x00000000c000d710                EnvVarContainer::getEnv(char const*)
                0x00000000c000d74e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d810                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d812                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000da36                EnvVarContainer::__loadSystem()
                0x00000000c000da50                EnvVarContainer::__loadUser()
                0x00000000c000da52                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da52                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da74                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da74                EnvVarContainer::~EnvVarContainer()
                0x00000000c000daa4                KeGetEnv(Process*, char const*)
                0x00000000c000db09                KeSetEnvSystem(char const*, char const*)
                0x00000000c000db23                KeSetEnvUser(char const*, char const*)
                0x00000000c000db42                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000db55                KeDeleteEnvSystem(char const*)
                0x00000000c000db56                KeDeleteEnvUser(char const*)
                0x00000000c000db57                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000db58                KeNewProcessEnv(Process*)
                0x00000000c000db7a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dbc6                KeLoadSystemEnv()
                0x00000000c000dbf4                KeLoadUserEnv()
                0x00000000c000dc1a                KeFlushEnv()
                0x00000000c000dc1b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dc3b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dccf        0x1 
 .text          0x00000000c000dcd0      0x351 krnl/fault.32
                0x00000000c000dcd0                KeSetupInterrupts()
                0x00000000c000dd48                int_handler
                0x00000000c000de78                KeDisplayProgramFault(char const*)
                0x00000000c000dec8                KeGeneralProtectionFault(void*, void*)
                0x00000000c000df1c                KePageFault(void*, void*)
                0x00000000c000df70                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000df80                KeOtherFault(void*, void*)
                0x00000000c000dfb4                KeOpcodeFault(void*, void*)
                0x00000000c000e008                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e021        0x1 
 .text          0x00000000c000e022      0x1db krnl/gdt.32
                0x00000000c000e022                GDTEntry::setBase(unsigned int)
                0x00000000c000e03e                GDTEntry::setLimit(unsigned int)
                0x00000000c000e05c                GDT::GDT()
                0x00000000c000e05c                GDT::GDT()
                0x00000000c000e072                GDT::addEntry(GDTEntry)
                0x00000000c000e094                GDT::getNumberOfEntries()
                0x00000000c000e09c                GDT::flush()
                0x00000000c000e0be                GDT::setup()
 .text          0x00000000c000e1fd       0x20 krnl/idle.32
                0x00000000c000e1fd                idleFunction(void*)
 *fill*         0x00000000c000e21d        0x3 
 .text          0x00000000c000e220      0x46c krnl/idt.32
                0x00000000c000e220                IDTEntry::IDTEntry(bool)
                0x00000000c000e220                IDTEntry::IDTEntry(bool)
                0x00000000c000e29a                IDTEntry::setOffset(unsigned int)
                0x00000000c000e2b0                IDT::IDT()
                0x00000000c000e2b0                IDT::IDT()
                0x00000000c000e2b2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e2ba                IDT::addEntry(IDTEntry, int)
                0x00000000c000e2d4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e30c                IDT::flush()
                0x00000000c000e326                IDT::setup()
 .text          0x00000000c000e68c       0x9a krnl/inlines.32
                0x00000000c000e68c                CPU::current()
                0x00000000c000e698                operator new(unsigned long)
                0x00000000c000e69d                operator delete(void*)
                0x00000000c000e6a2                disableIRQs()
                0x00000000c000e6a4                enableIRQs()
                0x00000000c000e6a6                lockScheduler()
                0x00000000c000e6ae                unlockScheduler()
                0x00000000c000e6c0                lockStuff()
                0x00000000c000e6ce                unlockStuff()
                0x00000000c000e70b                Virt::getAKernelVAS()
                0x00000000c000e711                __not_memcpy
 .text          0x00000000c000e726      0x204 krnl/kheap.32
                0x00000000c000e726                sbrk
                0x00000000c000e7ba                sbrk_thunk
                0x00000000c000e7f0                mmap
                0x00000000c000e84e                munmap
                0x00000000c000e863                liballoc_lock()
                0x00000000c000e871                liballoc_unlock()
                0x00000000c000e889                liballoc_alloc(int)
                0x00000000c000e8a1                liballoc_free(void*, int)
                0x00000000c000e8bc                realloc
                0x00000000c000e8d0                malloc
                0x00000000c000e8e0                free
                0x00000000c000e8f0                rfree
                0x00000000c000e900                calloc
 *fill*         0x00000000c000e92a        0x2 
 .text          0x00000000c000e92c      0x1d3 krnl/mailbox.32
                0x00000000c000e92c                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000e98c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000e9ec                KeMailboxCreate()
                0x00000000c000ea20                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ea84                KeMailboxGet(Mailbox*, void**)
                0x00000000c000eae8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000eaff       0xfd krnl/main.32
                0x00000000c000eaff                KeEntryPoint
 .text          0x00000000c000ebfc       0x1a krnl/mutex.32
                0x00000000c000ebfc                Mutex::Mutex()
                0x00000000c000ebfc                Mutex::Mutex()
 .text          0x00000000c000ec16        0xc krnl/panic.32
                0x00000000c000ec16                KePanic(char const*)
 .text          0x00000000c000ec22      0x657 krnl/physmgr.32
                0x00000000c000ec22                Phys::allocateDMA(unsigned long)
                0x00000000c000ed10                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ed4b                Phys::setPageState(unsigned long, bool)
                0x00000000c000ed8b                Phys::getPageState(unsigned long)
                0x00000000c000eda7                Phys::freePage(unsigned long)
                0x00000000c000ee10                Phys::allocatePage()
                0x00000000c000eedf                Phys::allocateContiguousPages(int)
                0x00000000c000ef5a                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000ef92                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f279        0x1 
 .text          0x00000000c000f27a      0x271 krnl/pipe.32
                0x00000000c000f27a                Pipe::isAtty()
                0x00000000c000f27e                Pipe::~Pipe()
                0x00000000c000f27e                Pipe::~Pipe()
                0x00000000c000f2a2                Pipe::~Pipe()
                0x00000000c000f2ca                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f38e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f484                Pipe::Pipe(int)
                0x00000000c000f484                Pipe::Pipe(int)
 .text          0x00000000c000f4eb      0x10b krnl/powctrl.32
                0x00000000c000f4eb                KePowerThread(void*)
                0x00000000c000f51c                KeChangePowerSettings(PowerSettings)
                0x00000000c000f532                KeUserIOReceived()
                0x00000000c000f53d                KeHandlePowerButton()
                0x00000000c000f555                KeHandleSleepButton()
                0x00000000c000f56d                KeSetupPowerManager()
 .text          0x00000000c000f5f6       0x9b krnl/random.32
                0x00000000c000f5f6                KeRand()
                0x00000000c000f636                KeSeedRand(unsigned int)
                0x00000000c000f65f                KeInitRand()
 *fill*         0x00000000c000f691        0x3 
 .text          0x00000000c000f694      0x1bc krnl/resolve.32
                0x00000000c000f694                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f850      0x401 krnl/semaphore.32
                0x00000000c000f850                Semaphore::Semaphore(int)
                0x00000000c000f850                Semaphore::Semaphore(int)
                0x00000000c000f880                Semaphore::tryAcquire()
                0x00000000c000f954                Semaphore::assertLocked(char const*)
                0x00000000c000f9e0                Semaphore::acquire(int)
                0x00000000c000fb84                Semaphore::acquire()
                0x00000000c000fba0                Semaphore::release()
 .text          0x00000000c000fc51      0x31f krnl/signal.32
                0x00000000c000fc51                KiSigKill(int)
                0x00000000c000fc65                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fc66                KiDefaultSignalHandlerPause(int)
                0x00000000c000fc92                KiDefaultSignalHandlerResume(int)
                0x00000000c000fcbe                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fcc3                KeInitSignals()
                0x00000000c000fd12                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fd48                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fdc5                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000febc                KiCheckSignalZ
                0x00000000c000fefe                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c000ff39                KiFinishSignalZ
 .text          0x00000000c000ff70      0xe0f krnl/syscalls.32
                0x00000000c000ff70                SysSeekDir(regs*)
                0x00000000c000ff75                SysTellDir(regs*)
                0x00000000c000ff7a                SysVerify(regs*)
                0x00000000c000ff84                SysGetArgc(regs*)
                0x00000000c000ff98                SysTTYName(regs*)
                0x00000000c000ffa0                SysFormatDisk(regs*)
                0x00000000c0010007                SysSetDiskVolumeLabel(regs*)
                0x00000000c001005b                SysGetDiskVolumeLabel(regs*)
                0x00000000c00100b4                SysRealpath(regs*)
                0x00000000c0010102                SysReadDir(regs*)
                0x00000000c0010182                SysIsATTY(regs*)
                0x00000000c00101dc                SysSeek(regs*)
                0x00000000c0010236                SysTell(regs*)
                0x00000000c00102a3                SysSize(regs*)
                0x00000000c0010316                SysSizeFromFilename(regs*)
                0x00000000c001044a                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001057e                SysClose(regs*)
                0x00000000c00105de                SysOpenDir(regs*)
                0x00000000c001065b                SysMakeDir(regs*)
                0x00000000c00106c9                SysCloseDir(regs*)
                0x00000000c0010718                SysWait(regs*)
                0x00000000c0010739                SysNotImpl(regs*)
                0x00000000c0010754                SysPanic(regs*)
                0x00000000c001076f                SysRmdir(regs*)
                0x00000000c00107cd                SysUnlink(regs*)
                0x00000000c001082b                SysGetArgv(regs*)
                0x00000000c0010878                SysUSleep(regs*)
                0x00000000c00108a1                SysSpawn(regs*)
                0x00000000c0010912                SysGetEnv(regs*)
                0x00000000c00109c7                SysSetFatAttrib(regs*)
                0x00000000c0010a30                SysShutdown(regs*)
                0x00000000c0010a8d                SysPipe(regs*)
                0x00000000c0010ad2                SysGetUnixTime(regs*)
                0x00000000c0010ae6                string_ends_with(char const*, char const*)
                0x00000000c0010b31                SysOpen(regs*)
                0x00000000c0010d30                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0010d7f        0x1 
 .text          0x00000000c0010d80      0xa85 krnl/terminal.32
                0x00000000c0010d80                VgaText::isAtty()
                0x00000000c0010d84                VgaText::~VgaText()
                0x00000000c0010d84                VgaText::~VgaText()
                0x00000000c0010da8                VgaText::~VgaText()
                0x00000000c0010dd2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010df2                setTerminalScrollLock(bool)
                0x00000000c0010df3                doTerminalCycle()
                0x00000000c0010df4                addToTerminalCycle(VgaText*)
                0x00000000c0010df5                scrollTerminalScrollLock(int)
                0x00000000c0010df6                VgaText::updateTitle()
                0x00000000c0010df8                VgaText::load()
                0x00000000c0010dfa                VgaText::updateCursor()
                0x00000000c0010e10                VgaText::doANSI_SGR(int)
                0x00000000c0010e84                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010e94                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010ea4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010ec4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010ed0                VgaText::setTitleColour(VgaColour)
                0x00000000c0010edc                VgaText::setTitle(char*)
                0x00000000c0010ede                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010ef0                VgaText::scrollScreen()
                0x00000000c0010f82                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010f92                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011022                VgaText::getCursorX()
                0x00000000c001102a                VgaText::getCursorY()
                0x00000000c0011032                VgaText::setCursor(int, int)
                0x00000000c0011049                setActiveTerminal(VgaText*)
                0x00000000c0011094                VgaText::clearScreen()
                0x00000000c00110e2                VgaText::setCursorX(int)
                0x00000000c00110fa                VgaText::setCursorY(int)
                0x00000000c0011112                VgaText::incrementCursor(bool)
                0x00000000c0011166                VgaText::decrementCursor(bool)
                0x00000000c0011188                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011258                VgaText::putchar(char)
                0x00000000c0011340                VgaText::putx(unsigned int)
                0x00000000c0011386                VgaText::puts(char const*)
                0x00000000c00113ac                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00113f8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011546                VgaText::VgaText(char const*)
                0x00000000c0011546                VgaText::VgaText(char const*)
                0x00000000c0011696                VgaText::receiveKey(unsigned char)
                0x00000000c0011804                VgaText::doUpdate()
 *fill*         0x00000000c0011805        0x3 
 .text          0x00000000c0011808      0x224 krnl/tss.32
                0x00000000c0011808                TSS::TSS()
                0x00000000c0011808                TSS::TSS()
                0x00000000c0011818                TSS::setESP(unsigned long)
                0x00000000c001182c                TSS::flush()
                0x00000000c001184c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011a2c      0x4ca krnl/unixfile.32
                0x00000000c0011a2c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011a82                ReservedFilename::isAtty()
                0x00000000c0011a9e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011afc                UnixFile::getFileDescriptor()
                0x00000000c0011b04                UnixFile::UnixFile(int)
                0x00000000c0011b04                UnixFile::UnixFile(int)
                0x00000000c0011cb8                ReservedFilename::ReservedFilename(int)
                0x00000000c0011cb8                ReservedFilename::ReservedFilename(int)
                0x00000000c0011cea                UnixFile::~UnixFile()
                0x00000000c0011cea                UnixFile::~UnixFile()
                0x00000000c0011d86                UnixFile::~UnixFile()
                0x00000000c0011dae                ReservedFilename::~ReservedFilename()
                0x00000000c0011dae                ReservedFilename::~ReservedFilename()
                0x00000000c0011dd2                ReservedFilename::~ReservedFilename()
                0x00000000c0011df9                KeGetFileFromDescriptor(int)
 .text          0x00000000c0011ef6     0x1196 krnl/virtmgr.32
                0x00000000c0011ef6                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011f30                Virt::getPageState(unsigned long)
                0x00000000c0011f53                Virt::allocateKernelVirtualPages(int)
                0x00000000c001206f                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012092                Virt::swapIDToSector(unsigned long)
                0x00000000c00120a8                Virt::allocateSwapfilePage()
                0x00000000c0012127                Virt::virtualMemorySetup()
                0x00000000c0012178                Virt::setupPageSwapping(int)
                0x00000000c00121ea                VAS::setCPUSpecific(unsigned long)
                0x00000000c00121ec                VAS::VAS(VAS*)
                0x00000000c00121ec                VAS::VAS(VAS*)
                0x00000000c0012204                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0012232                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012251                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001238e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00123b2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00123cc                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001240e                VAS::VAS()
                0x00000000c001240e                VAS::VAS()
                0x00000000c0012478                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012498                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00124c4                VAS::~VAS()
                0x00000000c00124c4                VAS::~VAS()
                0x00000000c001262c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012734                VAS::allocatePages(int, int)
                0x00000000c0012826                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012880                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012970                VAS::VAS(bool)
                0x00000000c0012970                VAS::VAS(bool)
                0x00000000c0012b58                VAS::evict(unsigned long)
                0x00000000c0012c36                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012dee                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0012e62                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0012e8e                VAS::scanForEviction()
                0x00000000c0012f91                mapVASFirstTime
 .text          0x00000000c001308c       0x36 sys/eject.32
                0x00000000c001308c                SysEject(regs*)
 .text          0x00000000c00130c2       0x18 sys/exit.32
                0x00000000c00130c2                SysExit(regs*)
 .text          0x00000000c00130da       0x1f sys/getcwd.32
                0x00000000c00130da                SysGetCwd(regs*)
 .text          0x00000000c00130f9       0x26 sys/getpid.32
                0x00000000c00130f9                SysGetPID(regs*)
 .text          0x00000000c001311f       0x1a sys/getramdata.32
                0x00000000c001311f                SysGetRAMData(regs*)
 .text          0x00000000c0013139       0x97 sys/getvgaptr.32
                0x00000000c0013139                SysGetVGAPtr(regs*)
 .text          0x00000000c00131d0       0xb9 sys/kill.32
                0x00000000c00131d0                SysKill(regs*)
 .text          0x00000000c0013289       0xa8 sys/loaddll.32
                0x00000000c0013289                SysLoadDLL(regs*)
 .text          0x00000000c0013331       0x68 sys/read.32
                0x00000000c0013331                SysRead(regs*)
 .text          0x00000000c0013399       0x29 sys/registersignal.32
                0x00000000c0013399                SysRegisterSignal(regs*)
 .text          0x00000000c00133c2      0x1cc sys/registry.32
                0x00000000c00133c2                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013406                SysRegistryReadExtent(regs*)
                0x00000000c001344e                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013465                SysRegistryEnterDirectory(regs*)
                0x00000000c001347c                SysRegistryGetNext(regs*)
                0x00000000c0013493                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00134cd                SysRegistryOpen(regs*)
                0x00000000c00134e1                SysRegistryClose(regs*)
                0x00000000c00134f8                SysRegistryEasyReadString(regs*)
                0x00000000c0013544                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c001358e       0x55 sys/sbrk.32
                0x00000000c001358e                SysSbrk(regs*)
 .text          0x00000000c00135e3       0x1c sys/setcwd.32
                0x00000000c00135e3                SysSetCwd(regs*)
 .text          0x00000000c00135ff       0x96 sys/settime.32
                0x00000000c00135ff                SysSetTime(regs*)
 .text          0x00000000c0013695       0x73 sys/symlink.32
                0x00000000c0013695                SysSymlink(regs*)
 .text          0x00000000c0013708       0x3f sys/timezone.32
                0x00000000c0013708                SysTimezone(regs*)
 .text          0x00000000c0013747       0xfc sys/truncate.32
                0x00000000c0013747                SysTruncate(regs*)
 .text          0x00000000c0013843       0x68 sys/write.32
                0x00000000c0013843                SysWrite(regs*)
 .text          0x00000000c00138ab       0x9d sys/wsbe.32
                0x00000000c00138ab                SysWsbe(regs*)
 .text          0x00000000c0013948       0x28 sys/yield.32
                0x00000000c0013948                SysYield(regs*)
 .text          0x00000000c0013970     0x1228 thr/elf.32
                0x00000000c0013970                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013bfb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013e1a                Thr::runtimeReferenceHelper()
                0x00000000c0013e2d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013e7c                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001413a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001487b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00148ad                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00148e4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00148fe                Thr::loadDLL(char const*, bool)
                0x00000000c0014b5f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014b98       0x5a thr/exec.32
                0x00000000c0014b98                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014bf2        0x2 
 .text          0x00000000c0014bf4     0x1175 thr/prcssthr.32
                0x00000000c0014bf4                userModeEntryPoint(void*)
                0x00000000c0014c20                changeTSS
                0x00000000c0014c50                switchToThread(ThreadControlBlock*)
                0x00000000c0014d00                Process::addArgs(char**)
                0x00000000c0014d6c                Process::Process(char const*, Process*, char**)
                0x00000000c0014d6c                Process::Process(char const*, Process*, char**)
                0x00000000c0014f78                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014f78                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001514c                taskStartupFunction
                0x00000000c0015158                KeDisablePreemption()
                0x00000000c0015180                KeRestorePreemption()
                0x00000000c00151a0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00152a8                Process::createUserThread()
                0x00000000c00152c8                setupMultitasking(void (*)())
                0x00000000c00153ec                schedule()
                0x00000000c0015480                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00154ac                blockTask(TaskState)
                0x00000000c00154e8                waitTask(int, int*, int)
                0x00000000c001552c                milliTenthSleepUntil(unsigned int)
                0x00000000c00155d4                milliTenthSleep(unsigned int)
                0x00000000c00155e8                sleep(unsigned int)
                0x00000000c00155f8                taskReturned
                0x00000000c0015640                Thr::processFromPID(int)
                0x00000000c00156ec                unblockTask(ThreadControlBlock*)
                0x00000000c00157a0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015a74                cleanerTaskFunction(void*)
                0x00000000c0015b8c                terminateTask(int)
                0x00000000c0015c9c                Thr::terminateFromIRQ(int)
 .text          0x00000000c0015d69      0xd18 vm86/vm8086.32
                0x00000000c0015d69                Vm::inbv(unsigned short)
                0x00000000c0015d7c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015db2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015dc2                Vm::getSegment(unsigned int)
                0x00000000c0015dca                Vm::getOffset(unsigned int)
                0x00000000c0015dcf                Vm::mainloop2()
                0x00000000c0015e09                Vm::mainVm8086Loop(void*)
                0x00000000c0015e1c                Vm::mainloop3(unsigned long)
                0x00000000c0015e42                Vm::initialise8086()
                0x00000000c0015e85                Vm::resetConventionalMemory8086()
                0x00000000c0015e86                Vm::finish8086()
                0x00000000c0015ee8                Vm::getOutput8086(unsigned char*)
                0x00000000c0015f0d                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001603a                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016246                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00162e3                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00162f4                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016306                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016317                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001632c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016342                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016357                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016a81        0x1 
 .text          0x00000000c0016a82     0x1e6b arch/i386/hal.32
                0x00000000c0016a82                noCopro(unsigned long)
                0x00000000c0016a84                CPU::close(int, int, void*)
                0x00000000c0016a87                x86ReadCMOS(unsigned char)
                0x00000000c0016adb                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016b3d                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016b5c                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016b79                AMD_K6_writeback(int, int, int)
                0x00000000c0016c39                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016cd7                cpuidCheckEDX(unsigned int)
                0x00000000c0016d04                cpuidCheckECX(unsigned int)
                0x00000000c0016d32                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016d60                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0016d8e                HalDetectFeatures()
                0x00000000c0017b59                HalEnableNMI()
                0x00000000c0017b6c                HalDisableNMI()
                0x00000000c0017b7f                HalGetNMIState()
                0x00000000c0017b85                x86rdmsr(unsigned int)
                0x00000000c0017bc3                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017c08                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017c1e                HalFindRSDP()
                0x00000000c0017cb3                HalHandlePageFault(void*, void*)
                0x00000000c0017ce2                HalHandleOpcodeFault(void*, void*)
                0x00000000c0017d24                HalDisplayDebugInfo(void*)
                0x00000000c00180b2                HalReceivedNMI()
                0x00000000c001814d                HalSystemIdle()
                0x00000000c00181ac                i386SaveCoprocessor(void*)
                0x00000000c00181c0                i386LoadCoprocessor(void*)
                0x00000000c00181d4                x87EmulHandler(regs*, void*)
                0x00000000c0018271                HalInitialiseCoprocessor()
                0x00000000c00182f5                HalPanic(char const*)
                0x00000000c0018409                HalQueryPerformanceCounter()
                0x00000000c0018419                HalInitialise()
                0x00000000c00185ab                HalMakeBeep(int)
                0x00000000c00185e5                HalGetRand()
                0x00000000c00185e8                HalEndOfInterrupt(int)
                0x00000000c0018613                HalRestart()
                0x00000000c0018614                HalShutdown()
                0x00000000c0018615                HalSleep()
                0x00000000c0018616                CPU::CPU()
                0x00000000c0018616                CPU::CPU()
                0x00000000c001869a                CPU::setupSMEP()
                0x00000000c00186a6                CPU::setupUMIP()
                0x00000000c00186b0                CPU::setupTSC()
                0x00000000c00186ba                CPU::setupLargePages()
                0x00000000c00186c4                CPU::setupPAT()
                0x00000000c00186f6                CPU::setupMTRR()
                0x00000000c00186f8                CPU::setupGlobalPages()
                0x00000000c0018702                CPU::allowUsermodeDataAccess()
                0x00000000c0018710                CPU::prohibitUsermodeDataAccess()
                0x00000000c001871e                CPU::setupSMAP()
                0x00000000c001872c                CPU::setupFeatures()
                0x00000000c00187f8                CPU::open(int, int, void*)
 .text          0x00000000c00188ed      0x268 arch/i386/intctrl.32
                0x00000000c00188ed                convertLegacyIRQNumber(int)
                0x00000000c0018929                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0018973                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018ab0                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018ae4                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018b55        0x3 
 .text          0x00000000c0018b58      0x2dc arch/i386/pic.32
                0x00000000c0018b58                picIoWait()
                0x00000000c0018b60                picDisable()
                0x00000000c0018b94                picGetIRQReg(int)
                0x00000000c0018c10                picOpen()
                0x00000000c0018d94                picEOI(int)
 .text          0x00000000c0018e34      0x5ed arch/i386/rtc.32
                0x00000000c0018e34                RTC::open(int, int, void*)
                0x00000000c0018e38                RTC::close(int, int, void*)
                0x00000000c0018e3c                RTC::timeInSecondsUTC()
                0x00000000c0018e4e                RTC::timeInDatetimeUTC()
                0x00000000c0018e74                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018eb2                RTC::~RTC()
                0x00000000c0018eb2                RTC::~RTC()
                0x00000000c0018ed6                RTC::~RTC()
                0x00000000c0018f00                RTC::get_update_in_progress_flag()
                0x00000000c0018f14                RTC::completeRTCRefresh()
                0x00000000c00191c2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0019338                rtcIRQHandler(regs*, void*)
                0x00000000c0019378                RTC::RTC()
                0x00000000c0019378                RTC::RTC()
 *fill*         0x00000000c0019421        0x3 
 .text          0x00000000c0019424      0x1f4 arch/i386/vga.32
                0x00000000c0019424                HalConsoleScroll(int, int)
                0x00000000c001952c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019590                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019618     0x14f3 fs/fat/vfslink.32
                0x00000000c0019618                FAT::getName()
                0x00000000c0019620                FAT::tell(void*, unsigned long long*)
                0x00000000c001965c                FAT::stat(void*, unsigned long long*)
                0x00000000c0019698                FAT::~FAT()
                0x00000000c0019698                FAT::~FAT()
                0x00000000c00196bc                FAT::~FAT()
                0x00000000c00196e4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019788                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019868                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019a4c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019c68                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019e28                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019f98                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019ff8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a058                FAT::close(void*)
                0x00000000c001a0ac                FAT::closeDir(void*)
                0x00000000c001a100                FAT::truncate(void*, unsigned long long)
                0x00000000c001a16c                FAT::seek(void*, unsigned long long)
                0x00000000c001a1c4                fatWrapperReadDisk
                0x00000000c001a204                fatWrapperWriteDisk
                0x00000000c001a244                fatWrapperIoctl
                0x00000000c001a364                FAT::FAT()
                0x00000000c001a364                FAT::FAT()
                0x00000000c001a3bc                FAT::fixFilepath(char*)
                0x00000000c001a3fc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a570                FAT::openDir(char const*, void**)
                0x00000000c001a620                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a718                FAT::unlink(char const*)
                0x00000000c001a798                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a950                FAT::rename(char const*, char const*)
                0x00000000c001aa1c                FAT::mkdir(char const*)
                0x00000000c001aa9c                FAT::exists(char const*)
 *fill*         0x00000000c001ab0b        0x1 
 .text          0x00000000c001ab0c       0x94 fs/iso9660/helper.32
                0x00000000c001ab0c                isoReadDiscSectorHelper
                0x00000000c001ab68                iso_kprintf
                0x00000000c001ab84                iso_kprintfd
 .text          0x00000000c001aba0      0x71a fs/iso9660/vfslink.32
                0x00000000c001aba0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001aba6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001abac                ISO9660::getName()
                0x00000000c001abb2                ISO9660::closeDir(void*)
                0x00000000c001abbc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001abc2                ISO9660::unlink(char const*)
                0x00000000c001abc8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001abce                ISO9660::rename(char const*, char const*)
                0x00000000c001abd4                ISO9660::mkdir(char const*)
                0x00000000c001abda                ISO9660::~ISO9660()
                0x00000000c001abda                ISO9660::~ISO9660()
                0x00000000c001abfe                ISO9660::~ISO9660()
                0x00000000c001ac26                ISO9660::exists(char const*)
                0x00000000c001ac3a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001ad20                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001ad68                ISO9660::seek(void*, unsigned long long)
                0x00000000c001adaa                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ade8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ae3a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001af7c                ISO9660::close(void*)
                0x00000000c001afac                ISO9660::openDir(char const*, void**)
                0x00000000c001b086                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b1a1                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b220                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b292                ISO9660::ISO9660()
                0x00000000c001b292                ISO9660::ISO9660()
 .text          0x00000000c001b2ba      0x26c hal/sound/sndcard.32
                0x00000000c001b2ba                SoundCard::beginPlayback()
                0x00000000c001b2c8                SoundCard::stopPlayback()
                0x00000000c001b2d6                SoundCard::SoundCard(char const*)
                0x00000000c001b2d6                SoundCard::SoundCard(char const*)
                0x00000000c001b374                SoundCard::~SoundCard()
                0x00000000c001b374                SoundCard::~SoundCard()
                0x00000000c001b398                SoundCard::~SoundCard()
                0x00000000c001b3c2                SoundCard::configureRates(int, int, int)
                0x00000000c001b3f2                SoundCard::getSamples16(int, short*)
                0x00000000c001b44e                SoundCard::getSamples32(int, int*)
                0x00000000c001b4d4                SoundCard::addChannel(SoundPort*)
                0x00000000c001b512                SoundCard::removeChannel(int)
 *fill*         0x00000000c001b526        0x2 
 .text          0x00000000c001b528      0x42f hal/sound/sndport.32
                0x00000000c001b528                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b528                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b5b4                SoundPort::~SoundPort()
                0x00000000c001b5b4                SoundPort::~SoundPort()
                0x00000000c001b5e8                SoundPort::unpause()
                0x00000000c001b5f4                SoundPort::pause()
                0x00000000c001b600                SoundPort::getBufferUsed()
                0x00000000c001b608                SoundPort::getBufferSize()
                0x00000000c001b610                SoundPort::buffer8(signed char*, int)
                0x00000000c001b6a4                SoundPort::buffer16(short*, int)
                0x00000000c001b738                SoundPort::buffer32(int*, int)
                0x00000000c001b7c4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b894                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b957        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b957        0x1 
 .text          0x00000000c001b958      0xc25 hw/bus/pci.32
                0x00000000c001b958                PCI::open(int, int, void*)
                0x00000000c001b976                PCI::close(int, int, void*)
                0x00000000c001b97a                PCI::PCI()
                0x00000000c001b97a                PCI::PCI()
                0x00000000c001ba12                PCI::readBAR8(unsigned int, int)
                0x00000000c001ba2e                PCI::readBAR16(unsigned int, int)
                0x00000000c001ba4c                PCI::readBAR32(unsigned int, int)
                0x00000000c001ba68                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ba88                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001baaa                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001baca                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bb40                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bbea                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc0e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc36                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc80                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001bca8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bccc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001bcf0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd18                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bd7c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001be62                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c12c                PCI::checkBus(unsigned char)
                0x00000000c001c150                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c336                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4b2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c524                PCI::detect()
 *fill*         0x00000000c001c57d        0x1 
 .text          0x00000000c001c57e      0xe50 hw/diskctrl/ide.32
                0x00000000c001c57e                IDE::close(int, int, void*)
                0x00000000c001c582                IDE::IDE()
                0x00000000c001c582                IDE::IDE()
                0x00000000c001c5b6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c5c8                selectDrive(unsigned char, unsigned char)
                0x00000000c001c5ca                IDE::getBase(unsigned char)
                0x00000000c001c5dc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c69c                IDE::read(unsigned char, unsigned char)
                0x00000000c001c750                IDE::waitInterrupt(unsigned char)
                0x00000000c001c7b2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c7ce                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c7ea                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c834                IDE::open(int, int, void*)
                0x00000000c001cd8c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ce5c                IDE::detect()
                0x00000000c001d2c0                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d37a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d3ce      0x33f hw/diskctrl/satabus.32
                0x00000000c001d3ce                SATABus::close(int, int, void*)
                0x00000000c001d3d2                SATABus::detect()
                0x00000000c001d3d4                SATABus::SATABus()
                0x00000000c001d3d4                SATABus::SATABus()
                0x00000000c001d45a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d48c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d4d4                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d4f4                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d51e                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d630                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d6da                SATABus::open(int, int, void*)
 *fill*         0x00000000c001d70d        0x1 
 .text          0x00000000c001d70e      0x7c1 hw/diskphys/ata.32
                0x00000000c001d70e                ATA::close(int, int, void*)
                0x00000000c001d732                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d734                ATA::ATA()
                0x00000000c001d734                ATA::ATA()
                0x00000000c001d762                ATA::flush(bool)
                0x00000000c001d7b0                ATA::readyForCommand()
                0x00000000c001d7fc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dc04                ATA::read(unsigned long long, int, void*)
                0x00000000c001dc50                ATA::write(unsigned long long, int, void*)
                0x00000000c001dc9c                ATA::detectCHS()
                0x00000000c001dcc6                ATA::open(int, int, void*)
                0x00000000c001deb1                combineCharAndColour(char, unsigned char)
                0x00000000c001dec2                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001decf        0x1 
 .text          0x00000000c001ded0      0x612 hw/diskphys/atapi.32
                0x00000000c001ded0                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ded6                ATAPI::close(int, int, void*)
                0x00000000c001defa                ATAPI::ATAPI()
                0x00000000c001defa                ATAPI::ATAPI()
                0x00000000c001df28                ATAPI::readyForCommand()
                0x00000000c001df7a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e23a                ATAPI::diskRemoved()
                0x00000000c001e274                ATAPI::eject()
                0x00000000c001e2bc                ATAPI::diskInserted()
                0x00000000c001e2c8                ATAPI::detectMedia()
                0x00000000c001e388                ATAPI::open(int, int, void*)
                0x00000000c001e468                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e4e2      0x44a hw/diskphys/sata.32
                0x00000000c001e4e2                SATA::close(int, int, void*)
                0x00000000c001e506                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e508                SATA::open(int, int, void*)
                0x00000000c001e5c0                SATA::SATA()
                0x00000000c001e5c0                SATA::SATA()
                0x00000000c001e5ee                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e874                SATA::read(unsigned long long, int, void*)
                0x00000000c001e8c0                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001e92c      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e92c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e932                SATAPI::close(int, int, void*)
                0x00000000c001e956                SATAPI::SATAPI()
                0x00000000c001e956                SATAPI::SATAPI()
                0x00000000c001e984                SATAPI::diskRemoved()
                0x00000000c001e986                SATAPI::diskInserted()
                0x00000000c001e9a2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001ec88                SATAPI::eject()
                0x00000000c001ecc4                SATAPI::detectMedia()
                0x00000000c001ed1a                SATAPI::open(int, int, void*)
                0x00000000c001ee1a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ef04      0x443 hw/intctrl/apic.32
                0x00000000c001ef04                IOAPIC::close(int, int, void*)
                0x00000000c001ef0a                apicGetBase()
                0x00000000c001ef28                IOAPIC::IOAPIC()
                0x00000000c001ef28                IOAPIC::IOAPIC()
                0x00000000c001ef50                apicOpen()
                0x00000000c001f0dc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f10e                IOAPIC::read(int)
                0x00000000c001f136                IOAPIC::open(int, int, void*)
                0x00000000c001f21c                IOAPIC::write(int, int)
                0x00000000c001f248                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f347        0x1 
 .text          0x00000000c001f348       0xf0 hw/timer/apictimer.32
                0x00000000c001f348                APICTimer::close(int, int, void*)
                0x00000000c001f350                apicTimerHandler(regs*, void*)
                0x00000000c001f378                APICTimer::open(int, int, void*)
                0x00000000c001f3e8                APICTimer::write(int)
                0x00000000c001f410                APICTimer::APICTimer()
                0x00000000c001f410                APICTimer::APICTimer()
 .text          0x00000000c001f438      0x1ad hw/timer/pit.32
                0x00000000c001f438                PIT::write(int)
                0x00000000c001f4bc                pitHandler(regs*, void*)
                0x00000000c001f4e4                PIT::open(int, int, void*)
                0x00000000c001f534                PIT::close(int, int, void*)
                0x00000000c001f564                PIT::PIT()
                0x00000000c001f564                PIT::PIT()
 *fill*         0x00000000c001f5e5        0xb 
 .text          0x00000000c001f5f0       0x6f arch/i386/avx.32
                0x00000000c001f5f0                avxDetect
                0x00000000c001f61a                avxSave
                0x00000000c001f62b                avxLoad
                0x00000000c001f63c                avxInit
                0x00000000c001f65e                avxClose
 *fill*         0x00000000c001f65f        0x1 
 .text          0x00000000c001f660      0x2ec arch/i386/interrupt.32
                0x00000000c001f660                isr0
                0x00000000c001f670                isr1
                0x00000000c001f67a                isr2
                0x00000000c001f684                isr3
                0x00000000c001f68e                isr4
                0x00000000c001f698                isr5
                0x00000000c001f6a2                isr6
                0x00000000c001f6ac                isr7
                0x00000000c001f6b6                isr8
                0x00000000c001f6be                isr9
                0x00000000c001f6c8                isr10
                0x00000000c001f6d0                isr11
                0x00000000c001f6d8                isr12
                0x00000000c001f6e0                isr13
                0x00000000c001f6fa                isr14
                0x00000000c001f702                isr15
                0x00000000c001f70c                isr16
                0x00000000c001f716                isr17
                0x00000000c001f720                isr18
                0x00000000c001f72a                irq3
                0x00000000c001f734                irq4
                0x00000000c001f73e                irq5
                0x00000000c001f748                irq6
                0x00000000c001f752                irq7
                0x00000000c001f75c                irq8
                0x00000000c001f766                irq9
                0x00000000c001f770                irq10
                0x00000000c001f77a                irq11
                0x00000000c001f784                irq12
                0x00000000c001f78e                irq13
                0x00000000c001f798                irq14
                0x00000000c001f7a2                irq15
                0x00000000c001f7ac                irq1
                0x00000000c001f7b3                irq2
                0x00000000c001f7ba                isr96
                0x00000000c001f7c1                irq0
                0x00000000c001f7c6                int_common_stub
                0x00000000c001f7f8                syscall_common_stub
                0x00000000c001f8fc                irq16
                0x00000000c001f906                irq17
                0x00000000c001f910                irq18
                0x00000000c001f91a                irq19
                0x00000000c001f924                irq20
                0x00000000c001f92e                irq21
                0x00000000c001f938                irq22
                0x00000000c001f942                irq23
 *fill*         0x00000000c001f94c        0x4 
 .text          0x00000000c001f950       0x10 arch/i386/rdrand.32
                0x00000000c001f950                i386GetRDRAND
 .text          0x00000000c001f960       0x39 arch/i386/sse.32
                0x00000000c001f960                sseDetect
                0x00000000c001f978                sseSave
                0x00000000c001f980                sseLoad
                0x00000000c001f988                sseInit
                0x00000000c001f998                sseClose
 *fill*         0x00000000c001f999        0x7 
 .text          0x00000000c001f9a0       0x4f arch/i386/x87.32
                0x00000000c001f9a6                x87Detect
                0x00000000c001f9c7                x87Save
                0x00000000c001f9ce                x87Load
                0x00000000c001f9d5                x87Init
                0x00000000c001f9ee                x87Close
 *fill*         0x00000000c001f9ef        0x1 
 .text          0x00000000c001f9f0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fa15        0x0 crtn.32
 *fill*         0x00000000c001fa15        0x3 
 .text          0x00000000c001fa18      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fa18                __divdi3
 *fill*         0x00000000c001fb63        0x1 
 .text          0x00000000c001fb64      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001fb64                __moddi3
 *fill*         0x00000000c001fce2        0x2 
 .text          0x00000000c001fce4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001fce4                __udivdi3
 *fill*         0x00000000c001fde3        0x1 
 .text          0x00000000c001fde4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001fde4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ff00        0x0
 .iplt          0x00000000c001ff00        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fefe        0xf
 .init          0x00000000c001fefe        0x3 crti.32
                0x00000000c001fefe                _init
 .init          0x00000000c001ff01        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ff06        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ff0b        0x2 crtn.32

.fini           0x00000000c001ff0d        0xa
 .fini          0x00000000c001ff0d        0x3 crti.32
                0x00000000c001ff0d                _fini
 .fini          0x00000000c001ff10        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ff15        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ff18       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ff18       0x1a hal/device.32
                0x00000000c001ff18                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ff18                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ff32       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ff32       0x2a hal/device.32
                0x00000000c001ff32                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ff5c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ff5c       0xdc hal/device.32
                0x00000000c001ff5c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020038       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020038       0x42 hal/device.32
                0x00000000c0020038                LinkedList<Device>::LinkedList()
                0x00000000c0020038                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002007c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002007c       0x1c hal/timer.32
                0x00000000c002007c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020098        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020098        0x7 hal/timer.32
                0x00000000c0020098                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00200a0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00200a0       0xbc hal/timer.32
                0x00000000c00200a0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002015c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002015c       0xda hal/timer.32
                0x00000000c002015c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020238       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020238       0x23 hw/acpi.32
                0x00000000c0020238                ACPI::~ACPI()
                0x00000000c0020238                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002025c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002025c       0x2a hw/acpi.32
                0x00000000c002025c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020288        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020288        0x2 hw/acpi.32
                0x00000000c0020288                LinkedList<Device>::~LinkedList()
                0x00000000c0020288                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002028c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002028c       0x1c hw/acpi.32
                0x00000000c002028c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00202a8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00202a8        0x7 hw/acpi.32
                0x00000000c00202a8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00202b0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00202b0       0xb8 hw/acpi.32
                0x00000000c00202b0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020368       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020368       0x23 krnl/computer.32
                0x00000000c0020368                Computer::~Computer()
                0x00000000c0020368                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002038c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002038c       0x2a krnl/computer.32
                0x00000000c002038c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00203b6       0x24
 .text._Z10idleCommonv
                0x00000000c00203b6       0x24 krnl/idle.32
                0x00000000c00203b6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00203da        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00203da        0x2 krnl/unixfile.32
                0x00000000c00203da                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00203da                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00203dc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00203dc       0x42 krnl/unixfile.32
                0x00000000c00203dc                LinkedList<UnixFile>::LinkedList()
                0x00000000c00203dc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002041e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002041e       0xd3 krnl/unixfile.32
                0x00000000c002041e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00204f2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00204f2        0x7 krnl/unixfile.32
                0x00000000c00204f2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00204fa       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00204fa       0xa1 krnl/unixfile.32
                0x00000000c00204fa                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002059c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002059c        0x8 krnl/unixfile.32
                0x00000000c002059c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00205a4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00205a4        0x8 sys/kill.32
                0x00000000c00205a4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00205ac        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00205ac        0x2 thr/prcssthr.32
                0x00000000c00205ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00205ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00205b0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00205b0       0x49 thr/prcssthr.32
                0x00000000c00205b0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00205b0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00205fc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00205fc       0x42 thr/prcssthr.32
                0x00000000c00205fc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00205fc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002063e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002063e       0x23 arch/i386/hal.32
                0x00000000c002063e                CPU::~CPU()
                0x00000000c002063e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020662       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020662       0x2a arch/i386/hal.32
                0x00000000c0020662                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002068c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002068c       0x23 hw/bus/pci.32
                0x00000000c002068c                PCI::~PCI()
                0x00000000c002068c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00206b0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00206b0       0x2a hw/bus/pci.32
                0x00000000c00206b0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00206da       0x23
 .text._ZN3IDED2Ev
                0x00000000c00206da       0x23 hw/diskctrl/ide.32
                0x00000000c00206da                IDE::~IDE()
                0x00000000c00206da                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00206fe       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00206fe       0x2a hw/diskctrl/ide.32
                0x00000000c00206fe                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020728       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020728       0x23 hw/diskctrl/satabus.32
                0x00000000c0020728                SATABus::~SATABus()
                0x00000000c0020728                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002074c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002074c       0x2a hw/diskctrl/satabus.32
                0x00000000c002074c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020776       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020776       0x23 hw/diskphys/ata.32
                0x00000000c0020776                ATA::~ATA()
                0x00000000c0020776                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002079a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002079a       0x2a hw/diskphys/ata.32
                0x00000000c002079a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00207c4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00207c4       0x23 hw/diskphys/atapi.32
                0x00000000c00207c4                ATAPI::~ATAPI()
                0x00000000c00207c4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00207e8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00207e8       0x2a hw/diskphys/atapi.32
                0x00000000c00207e8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020812       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020812       0x23 hw/diskphys/sata.32
                0x00000000c0020812                SATA::~SATA()
                0x00000000c0020812                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020836       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020836       0x2a hw/diskphys/sata.32
                0x00000000c0020836                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020860       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020860       0x23 hw/diskphys/satapi.32
                0x00000000c0020860                SATAPI::~SATAPI()
                0x00000000c0020860                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020884       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020884       0x2a hw/diskphys/satapi.32
                0x00000000c0020884                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00208ae       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00208ae       0x23 hw/intctrl/apic.32
                0x00000000c00208ae                IOAPIC::~IOAPIC()
                0x00000000c00208ae                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00208d2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00208d2       0x2a hw/intctrl/apic.32
                0x00000000c00208d2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00208fc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00208fc       0x23 hw/timer/apictimer.32
                0x00000000c00208fc                APICTimer::~APICTimer()
                0x00000000c00208fc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020920       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020920       0x2a hw/timer/apictimer.32
                0x00000000c0020920                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002094c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002094c       0x23 hw/timer/pit.32
                0x00000000c002094c                PIT::~PIT()
                0x00000000c002094c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020970       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020970       0x2a hw/timer/pit.32
                0x00000000c0020970                PIT::~PIT()

.rodata         0x00000000c002099a     0x3442
                0x00000000c002099a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002099a        0x2 
 .ctors         0x00000000c002099c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00209a0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00209a4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00209a8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00209ac                end_ctors = .
                0x00000000c00209ac                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00209ac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00209b0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00209b0                __DTOR_END__
                0x00000000c00209b4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00209b4        0xc 
 .rodata        0x00000000c00209c0      0x101 acpica/utclib.32
                0x00000000c00209c0                AcpiGbl_Ctypes
 *fill*         0x00000000c0020ac1        0x3 
 .rodata        0x00000000c0020ac4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020adc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020b26       0x1a 
 .rodata        0x00000000c0020b40       0xed fs/fat/ff.32
 *fill*         0x00000000c0020c2d       0x13 
 .rodata        0x00000000c0020c40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021040       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c00210af        0x1 
 .rodata        0x00000000c00210b0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021200      0x169 dbg/usban.32
 *fill*         0x00000000c0021369        0x3 
 .rodata.str1.4
                0x00000000c002136c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00214a3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00215c6       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021607        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021608       0x6c fs/vfs.32
                0x00000000c0021608                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021674       0x1c fs/vfs.32
                0x00000000c0021674                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021690       0x1c fs/vfs.32
                0x00000000c0021690                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00216ac       0x2c hal/bus.32
                0x00000000c00216ac                vtable for Bus
 .rodata.str1.1
                0x00000000c00216d8       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021748       0x3c hal/clock.32
                0x00000000c0021748                vtable for Clock
 *fill*         0x00000000c0021784       0x1c 
 .rodata        0x00000000c00217a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00217d0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021834       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021856       0x15 hal/device.32
 *fill*         0x00000000c002186b        0x1 
 .rodata._ZTV6Device
                0x00000000c002186c       0x2c hal/device.32
                0x00000000c002186c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021898       0x2c hal/device.32
                0x00000000c0021898                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00218c4       0x2c hal/diskctrl.32
                0x00000000c00218c4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00218f0       0x38 hal/diskphys.32
                0x00000000c00218f0                vtable for PhysicalDisk
 .rodata        0x00000000c0021928       0x53 hal/keybrd.32
 *fill*         0x00000000c002197b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002197c       0x34 hal/keybrd.32
                0x00000000c002197c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00219b0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00219f4       0x2c hal/logidisk.32
                0x00000000c00219f4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021a20       0x2c hal/mouse.32
                0x00000000c0021a20                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021a4c       0x34 hal/nic.32
                0x00000000c0021a4c                vtable for NIC
 .rodata.str1.1
                0x00000000c0021a80        0xb hal/partition.32
 *fill*         0x00000000c0021a8b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021a8c       0x44 hal/serial.32
                0x00000000c0021a8c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021ad0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021b1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021b23       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021b23       0x15 hal/timer.32
 *fill*         0x00000000c0021b23        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021b24       0x30 hal/timer.32
                0x00000000c0021b24                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021b54       0x10 hal/vcache.32
                0x00000000c0021b54                vtable for VCache
 .rodata.str1.1
                0x00000000c0021b64       0xba hal/video.32
 *fill*         0x00000000c0021c1e        0x2 
 .rodata._ZTV5Video
                0x00000000c0021c20       0x4c hal/video.32
                0x00000000c0021c20                vtable for Video
 .rodata.str1.1
                0x00000000c0021c6c      0x17e hw/acpi.32
 *fill*         0x00000000c0021dea        0x2 
 .rodata.str1.4
                0x00000000c0021dec       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021e63       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021e63        0x8 hw/acpi.32
 *fill*         0x00000000c0021e63        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0021e64       0x2c hw/acpi.32
                0x00000000c0021e64                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021e90       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ed0       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0021ef1       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0021f24        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0021f27       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c0021f9d        0x3 
 .rodata.str1.4
                0x00000000c0021fa0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022058       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022101        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022104       0x2c krnl/computer.32
                0x00000000c0022104                vtable for Computer
 .rodata.str1.1
                0x00000000c0022130       0x3c krnl/env.32
 .rodata        0x00000000c002216c       0x66 krnl/fault.32
 *fill*         0x00000000c00221d2        0x2 
 .rodata.str1.4
                0x00000000c00221d4       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022204        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022213       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0022274      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022379       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00223d1       0x39 krnl/pipe.32
 *fill*         0x00000000c002240a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002240c       0x1c krnl/pipe.32
                0x00000000c002240c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022428       0x91 krnl/resolve.32
 *fill*         0x00000000c00224b9        0x3 
 .rodata.str1.4
                0x00000000c00224bc       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00224db       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00225a4       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00225ec       0x2b krnl/terminal.32
 *fill*         0x00000000c0022617        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0022618       0x1c krnl/terminal.32
                0x00000000c0022618                vtable for VgaText
 .rodata        0x00000000c0022634       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002266f       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002266f       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002266f       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002266f        0x8 krnl/unixfile.32
 *fill*         0x00000000c002266f        0x1 
 .rodata.str1.4
                0x00000000c0022670       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022690       0x1c krnl/unixfile.32
                0x00000000c0022690                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00226ac       0x1c krnl/unixfile.32
                0x00000000c00226ac                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00226c8      0x270 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0022938      0x126 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0022a5e        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0022a6d        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0022a77       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0022a98       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022aec       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022b18      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d22       0x57 thr/prcssthr.32
 *fill*         0x00000000c0022d79        0x3 
 .rodata.str1.4
                0x00000000c0022d7c       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022e6c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022e6c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022e6c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022e6c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022e6c       0xdd vm86/vm8086.32
 *fill*         0x00000000c0022f49        0x3 
 .rodata        0x00000000c0022f4c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022f7c      0x2fb arch/i386/hal.32
                                        0x30e (size before relaxing)
 *fill*         0x00000000c0023277        0x1 
 .rodata.str1.4
                0x00000000c0023278       0x23 arch/i386/hal.32
 *fill*         0x00000000c002329b        0x1 
 .rodata._ZTV3CPU
                0x00000000c002329c       0x2c arch/i386/hal.32
                0x00000000c002329c                vtable for CPU
 .rodata.str1.4
                0x00000000c00232c8       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023329       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023367       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002337c       0x3c arch/i386/rtc.32
                0x00000000c002337c                vtable for RTC
 .rodata.str1.1
                0x00000000c00233b8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00233f9        0x3 
 .rodata._ZTV3FAT
                0x00000000c00233fc       0x6c fs/fat/vfslink.32
                0x00000000c00233fc                vtable for FAT
 .rodata.str1.1
                0x00000000c0023468       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023468      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00235a0       0x6c fs/iso9660/vfslink.32
                0x00000000c00235a0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002360c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023650       0x34 hal/sound/sndcard.32
                0x00000000c0023650                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023684       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00236c3       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00236fb       0xa1 hw/bus/pci.32
 .rodata        0x00000000c002379c       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023800       0x2c hw/bus/pci.32
                0x00000000c0023800                vtable for PCI
 .rodata.str1.1
                0x00000000c002382c      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0023950       0x2c hw/diskctrl/ide.32
                0x00000000c0023950                vtable for IDE
 .rodata.str1.4
                0x00000000c002397c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00239a0       0x2c hw/diskctrl/satabus.32
                0x00000000c00239a0                vtable for SATABus
 .rodata.str1.1
                0x00000000c00239cc       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0023a87        0x1 
 .rodata._ZTV3ATA
                0x00000000c0023a88       0x38 hw/diskphys/ata.32
                0x00000000c0023a88                vtable for ATA
 .rodata.str1.1
                0x00000000c0023ac0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023acd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023ad0       0x38 hw/diskphys/atapi.32
                0x00000000c0023ad0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023b08       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023b90       0x38 hw/diskphys/sata.32
                0x00000000c0023b90                vtable for SATA
 .rodata.str1.1
                0x00000000c0023bc8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023cb2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023cb4       0x38 hw/diskphys/satapi.32
                0x00000000c0023cb4                vtable for SATAPI
 .rodata        0x00000000c0023cec       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0023d12        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0023d14       0x2c hw/intctrl/apic.32
                0x00000000c0023d14                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023d40       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023d5b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023d5c       0x30 hw/timer/apictimer.32
                0x00000000c0023d5c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023d8c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023da9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023dac       0x30 hw/timer/pit.32
                0x00000000c0023dac                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023ddc      0xa49
 *(.data)
 .data          0x00000000c0023ddc        0x0 crti.32
 .data          0x00000000c0023ddc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023ddc                __dso_handle
 .data          0x00000000c0023de0        0x0 acpica/utclib.32
 .data          0x00000000c0023de0        0x0 krnl/malloc.32
 .data          0x00000000c0023de0        0x0 libk/ctype.32
 .data          0x00000000c0023de0        0x0 libk/string.32
 .data          0x00000000c0023de0        0x0 arch/i386/cc.32
 .data          0x00000000c0023de0        0x0 fs/fat/diskio.32
 .data          0x00000000c0023de0        0x0 fs/fat/ff.32
 .data          0x00000000c0023de0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023de0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023de0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023de0        0x0 dbg/kconsole.32
 .data          0x00000000c0023de0       0x28 dbg/usban.32
                0x00000000c0023de0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023e08        0x0 fs/symlink.32
 .data          0x00000000c0023e08        0x0 fs/vfs.32
 .data          0x00000000c0023e08        0x0 hal/bus.32
 .data          0x00000000c0023e08        0x0 hal/buzzer.32
 .data          0x00000000c0023e08        0x0 hal/clock.32
 .data          0x00000000c0023e08        0x0 hal/device.32
 .data          0x00000000c0023e08        0x0 hal/diskctrl.32
 .data          0x00000000c0023e08        0x0 hal/diskphys.32
 .data          0x00000000c0023e08        0x0 hal/fpu.32
 .data          0x00000000c0023e08        0x0 hal/intctrl.32
 .data          0x00000000c0023e08        0x0 hal/keybrd.32
 .data          0x00000000c0023e08        0x0 hal/logidisk.32
 .data          0x00000000c0023e08        0x0 hal/mouse.32
 .data          0x00000000c0023e08        0x0 hal/nic.32
 .data          0x00000000c0023e08        0x0 hal/partition.32
 .data          0x00000000c0023e08        0x0 hal/serial.32
 .data          0x00000000c0023e08        0x0 hal/timer.32
 .data          0x00000000c0023e08        0x0 hal/vcache.32
 .data          0x00000000c0023e08        0x0 hal/video.32
 .data          0x00000000c0023e08       0x10 hw/acpi.32
                0x00000000c0023e08                legacyIRQRemaps
 .data          0x00000000c0023e18        0x0 krnl/atexit.32
 .data          0x00000000c0023e18        0x0 krnl/bootmsg.32
 .data          0x00000000c0023e18        0x4 krnl/c++.32
                0x00000000c0023e18                __stack_chk_guard
 .data          0x00000000c0023e1c        0x0 krnl/cdefs.32
 *fill*         0x00000000c0023e1c        0x4 
 .data          0x00000000c0023e20      0x100 krnl/cm.32
                0x00000000c0023e20                CmComponents
 .data          0x00000000c0023f20        0x0 krnl/compat.32
 .data          0x00000000c0023f20        0x0 krnl/computer.32
 .data          0x00000000c0023f20      0x400 krnl/crc32.32
                0x00000000c0023f20                KiPolyLookupCRC32
 .data          0x00000000c0024320       0x4d krnl/env.32
                0x00000000c0024320                defaultSysEnv
 .data          0x00000000c002436d        0x0 krnl/fault.32
 .data          0x00000000c002436d        0x0 krnl/gdt.32
 .data          0x00000000c002436d        0x0 krnl/idle.32
 .data          0x00000000c002436d        0x0 krnl/idt.32
 .data          0x00000000c002436d        0x0 krnl/inlines.32
 *fill*         0x00000000c002436d        0x3 
 .data          0x00000000c0024370        0x4 krnl/kheap.32
 .data          0x00000000c0024374        0x0 krnl/mailbox.32
 .data          0x00000000c0024374        0x0 krnl/main.32
 .data          0x00000000c0024374        0x0 krnl/mutex.32
 .data          0x00000000c0024374        0x0 krnl/panic.32
 .data          0x00000000c0024374        0x4 krnl/physmgr.32
                0x00000000c0024374                Phys::bitmap
 .data          0x00000000c0024378        0x0 krnl/pipe.32
 .data          0x00000000c0024378        0x0 krnl/powctrl.32
 .data          0x00000000c0024378        0x0 krnl/random.32
 .data          0x00000000c0024378        0x0 krnl/resolve.32
 .data          0x00000000c0024378        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024378        0x8 
 .data          0x00000000c0024380       0x4c krnl/signal.32
                0x00000000c0024380                KiDefaultSignalHandlers
 *fill*         0x00000000c00243cc       0x14 
 .data          0x00000000c00243e0      0x104 krnl/syscalls.32
                0x00000000c00243e0                systemCallHandlers
 *fill*         0x00000000c00244e4       0x1c 
 .data          0x00000000c0024500       0x60 krnl/terminal.32
                0x00000000c0024500                VgaText::hiddenOut
                0x00000000c0024520                ansiToVGAMappings
 .data          0x00000000c0024560        0x0 krnl/tss.32
 .data          0x00000000c0024560        0x4 krnl/unixfile.32
                0x00000000c0024560                UnixFile::nextFd
 .data          0x00000000c0024564       0x15 krnl/virtmgr.32
                0x00000000c0024564                Virt::pageAllocPtr
                0x00000000c0024568                Virt::bitmap
                0x00000000c002456c                Virt::swapfileSectorsPerPage
                0x00000000c0024570                Virt::swapfileLength
                0x00000000c0024574                Virt::swapfileSector
                0x00000000c0024578                Virt::swapfileDrive
 .data          0x00000000c0024579        0x0 sys/eject.32
 .data          0x00000000c0024579        0x0 sys/exit.32
 .data          0x00000000c0024579        0x0 sys/getcwd.32
 .data          0x00000000c0024579        0x0 sys/getpid.32
 .data          0x00000000c0024579        0x0 sys/getramdata.32
 .data          0x00000000c0024579        0x0 sys/getvgaptr.32
 .data          0x00000000c0024579        0x0 sys/kill.32
 .data          0x00000000c0024579        0x0 sys/loaddll.32
 .data          0x00000000c0024579        0x0 sys/read.32
 .data          0x00000000c0024579        0x0 sys/registersignal.32
 .data          0x00000000c0024579        0x0 sys/registry.32
 .data          0x00000000c0024579        0x0 sys/sbrk.32
 .data          0x00000000c0024579        0x0 sys/setcwd.32
 .data          0x00000000c0024579        0x0 sys/settime.32
 .data          0x00000000c0024579        0x0 sys/symlink.32
 .data          0x00000000c0024579        0x0 sys/timezone.32
 .data          0x00000000c0024579        0x0 sys/truncate.32
 .data          0x00000000c0024579        0x0 sys/write.32
 .data          0x00000000c0024579        0x0 sys/wsbe.32
 .data          0x00000000c0024579        0x0 sys/yield.32
 .data          0x00000000c0024579        0x0 thr/elf.32
 .data          0x00000000c0024579        0x0 thr/exec.32
 *fill*         0x00000000c0024579        0x3 
 .data          0x00000000c002457c        0x4 thr/prcssthr.32
                0x00000000c002457c                Thr::nextPID
 .data          0x00000000c0024580        0x0 vm86/vm8086.32
 .data          0x00000000c0024580      0x2a4 arch/i386/hal.32
                0x00000000c0024580                exceptionNames
                0x00000000c0024820                lastCode
 .data          0x00000000c0024824        0x0 arch/i386/intctrl.32
 .data          0x00000000c0024824        0x0 arch/i386/pic.32
 .data          0x00000000c0024824        0x0 arch/i386/rtc.32
 .data          0x00000000c0024824        0x0 arch/i386/vga.32
 .data          0x00000000c0024824        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024824        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024824        0x1 fs/iso9660/vfslink.32
                0x00000000c0024824                recentDriveletter
 .data          0x00000000c0024825        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024825        0x0 hal/sound/sndport.32
 .data          0x00000000c0024825        0x0 hw/bus/isa.32
 .data          0x00000000c0024825        0x0 hw/bus/pci.32
 .data          0x00000000c0024825        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024825        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024825        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024825        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024825        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024825        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024825        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024825        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024825        0x0 hw/timer/pit.32
 .data          0x00000000c0024825        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024825        0x0 crtn.32
 .data          0x00000000c0024825        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024825        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024825        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024825        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024828        0x0
 .got           0x00000000c0024828        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024828        0x0
 .got.plt       0x00000000c0024828        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024828        0x0
 .igot.plt      0x00000000c0024828        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024828        0x0
 .tm_clone_table
                0x00000000c0024828        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024828        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024825      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024825        0x3 
 .eh_frame      0x00000000c0024828        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024828        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024828       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024880       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00248c0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002492c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7127
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 krnl/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 arch/i386/cc.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0026eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0026eb8        0x8 
 .bss           0x00000000c0026ec0     0x2444 fs/symlink.32
                0x00000000c0026ec0                kiNumWaitingRoomSymlinks
                0x00000000c0026ee0                kiNewlyCreatedIDs
                0x00000000c0026f00                kiNewlyCreatedSymlinks
                0x00000000c0027300                kiSymlinkHashTable
                0x00000000c0029300                kiBaseSymlinkID
 .bss           0x00000000c0029304        0x4 fs/vfs.32
                0x00000000c0029304                installedFilesystems
 .bss           0x00000000c0029308        0x0 hal/bus.32
 .bss           0x00000000c0029308        0x0 hal/buzzer.32
 .bss           0x00000000c0029308        0x8 hal/clock.32
                0x00000000c0029308                keDstOn
                0x00000000c0029309                keTimezoneHalfHourOffset
                0x00000000c002930c                keTimezoneHourOffset
 .bss           0x00000000c0029310        0x0 hal/device.32
 .bss           0x00000000c0029310        0x0 hal/diskctrl.32
 .bss           0x00000000c0029310        0x0 hal/diskphys.32
 .bss           0x00000000c0029310        0x0 hal/fpu.32
 .bss           0x00000000c0029310        0x0 hal/intctrl.32
 *fill*         0x00000000c0029310       0x10 
 .bss           0x00000000c0029320      0x428 hal/keybrd.32
                0x00000000c0029320                keyboardWaitingTaskList
                0x00000000c0029324                keyboardSetupYet
                0x00000000c0029328                guiKeyboardHandler
                0x00000000c002932c                kiKeyboardGUILock
                0x00000000c002932d                kiKeyboardGUILatch
                0x00000000c0029340                keystates
 *fill*         0x00000000c0029748       0x18 
 .bss           0x00000000c0029760       0x88 hal/logidisk.32
                0x00000000c0029760                diskAssignments
                0x00000000c0029780                disks
 .bss           0x00000000c00297e8        0x4 hal/mouse.32
                0x00000000c00297e8                guiMouseHandler
 .bss           0x00000000c00297ec        0x0 hal/nic.32
 .bss           0x00000000c00297ec        0x0 hal/partition.32
 .bss           0x00000000c00297ec        0x0 hal/serial.32
 .bss           0x00000000c00297ec        0x4 hal/timer.32
                0x00000000c00297ec                milliTenthsSinceBoot
 .bss           0x00000000c00297f0        0x0 hal/vcache.32
 .bss           0x00000000c00297f0        0x4 hal/video.32
                0x00000000c00297f0                screen
 *fill*         0x00000000c00297f4        0xc 
 .bss           0x00000000c0029800      0x480 hw/acpi.32
                0x00000000c0029800                nextACPITable
                0x00000000c0029820                acpiTables
                0x00000000c0029a20                usingXSDT
                0x00000000c0029a24                RSDTpointer
                0x00000000c0029a28                RSDPpointer
                0x00000000c0029a2c                nextAPICNMI
                0x00000000c0029a40                apicNMIInfo
                0x00000000c0029ac0                legacyIRQFlags
                0x00000000c0029ae0                ioapicDiscoveryNumber
                0x00000000c0029b00                ioapicFoundInMADT
                0x00000000c0029b20                ioapicAddresses
                0x00000000c0029ba0                ioapicGSIBase
                0x00000000c0029c20                processorDiscoveryNumber
                0x00000000c0029c40                matchingAPICID
                0x00000000c0029c60                processorID
 .bss           0x00000000c0029c80       0xe0 krnl/atexit.32
                0x00000000c0029c80                KiNextAtexitHandler
                0x00000000c0029ca0                KiAtexitContexts
                0x00000000c0029d00                KiAtexitHandlers
 .bss           0x00000000c0029d60        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029d60        0x0 krnl/c++.32
 .bss           0x00000000c0029d60        0x0 krnl/cdefs.32
 .bss           0x00000000c0029d60        0x4 krnl/cm.32
 .bss           0x00000000c0029d64        0x0 krnl/compat.32
 .bss           0x00000000c0029d64       0x12 krnl/computer.32
                0x00000000c0029d64                systemSleepFunction
                0x00000000c0029d68                systemResetFunction
                0x00000000c0029d6c                systemShutdownFunction
                0x00000000c0029d70                Krnl::computer
                0x00000000c0029d74                KeIsPreemptionOn
                0x00000000c0029d75                KeIsSchedulingOn
 .bss           0x00000000c0029d76        0x0 krnl/crc32.32
 *fill*         0x00000000c0029d76        0x2 
 .bss           0x00000000c0029d78        0x8 krnl/env.32
                0x00000000c0029d78                KeUserEnv
                0x00000000c0029d7c                KeSystemEnv
 .bss           0x00000000c0029d80     0x2000 krnl/fault.32
                0x00000000c0029d80                keInterruptContexts
                0x00000000c002ad80                keInterruptHandlers
 .bss           0x00000000c002bd80        0x6 krnl/gdt.32
                0x00000000c002bd80                gdtDescr
 .bss           0x00000000c002bd86        0x0 krnl/idle.32
 *fill*         0x00000000c002bd86        0x2 
 .bss           0x00000000c002bd88        0x6 krnl/idt.32
                0x00000000c002bd88                idtDescr
 .bss           0x00000000c002bd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002bd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002bd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002bd8e        0x2 
 .bss           0x00000000c002bd90        0x4 krnl/main.32
                0x00000000c002bd90                keBootSettings
 .bss           0x00000000c002bd94        0x0 krnl/mutex.32
 .bss           0x00000000c002bd94        0x1 krnl/panic.32
                0x00000000c002bd94                KeIsKernelInPanic
 *fill*         0x00000000c002bd95        0x3 
 .bss           0x00000000c002bd98       0x29 krnl/physmgr.32
                0x00000000c002bd98                Phys::forbidEvictions
                0x00000000c002bd9c                Phys::currentPagePointer
                0x00000000c002bda0                Phys::highestMem
                0x00000000c002bda4                Phys::oldPercent
                0x00000000c002bda8                Phys::usedPages
                0x00000000c002bdac                Phys::usablePages
                0x00000000c002bdb0                Phys::dmaUsage
 .bss           0x00000000c002bdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002bdc1       0x1f 
 .bss           0x00000000c002bde0       0x48 krnl/powctrl.32
                0x00000000c002bde0                powCtrlOnBattery
                0x00000000c002be00                currentPowerSettings
                0x00000000c002be24                secondsSinceLastUserIO
 .bss           0x00000000c002be28        0x8 krnl/random.32
                0x00000000c002be28                kiRandSeed
 .bss           0x00000000c002be30        0x0 krnl/resolve.32
 .bss           0x00000000c002be30        0x0 krnl/semaphore.32
 .bss           0x00000000c002be30        0x0 krnl/signal.32
 .bss           0x00000000c002be30        0x0 krnl/syscalls.32
 .bss           0x00000000c002be30        0x9 krnl/terminal.32
                0x00000000c002be30                terminalCycle
                0x00000000c002be34                activeTerminal
                0x00000000c002be38                VgaText::graphicMode
 *fill*         0x00000000c002be39        0x1 
 .bss           0x00000000c002be3a        0x2 krnl/tss.32
                0x00000000c002be3a                doubleFaultSelector
 *fill*         0x00000000c002be3c        0x4 
 .bss           0x00000000c002be40       0x84 krnl/unixfile.32
                0x00000000c002be40                sfileLpt
                0x00000000c002be80                sfileCom
                0x00000000c002bea4                sfileNul
                0x00000000c002bea8                sfilePnt
                0x00000000c002beac                sfileAux
                0x00000000c002beb0                sfileCon
                0x00000000c002beb4                initialFilesAdded
                0x00000000c002beb8                unixFileLinkedList
 .bss           0x00000000c002bec4       0x10 krnl/virtmgr.32
                0x00000000c002bec4                twswaps
                0x00000000c002bec8                swapBalance
                0x00000000c002becc                Virt::swapfileBitmap
                0x00000000c002bed0                keFirstVAS
 .bss           0x00000000c002bed4        0x0 sys/eject.32
 .bss           0x00000000c002bed4        0x0 sys/exit.32
 .bss           0x00000000c002bed4        0x0 sys/getcwd.32
 .bss           0x00000000c002bed4        0x0 sys/getpid.32
 .bss           0x00000000c002bed4        0x0 sys/getramdata.32
 .bss           0x00000000c002bed4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bed4        0x0 sys/kill.32
 .bss           0x00000000c002bed4        0x0 sys/loaddll.32
 .bss           0x00000000c002bed4        0x0 sys/read.32
 .bss           0x00000000c002bed4        0x0 sys/registersignal.32
 .bss           0x00000000c002bed4        0x0 sys/registry.32
 .bss           0x00000000c002bed4        0x0 sys/sbrk.32
 .bss           0x00000000c002bed4        0x0 sys/setcwd.32
 .bss           0x00000000c002bed4        0x0 sys/settime.32
 .bss           0x00000000c002bed4        0x0 sys/symlink.32
 .bss           0x00000000c002bed4        0x0 sys/timezone.32
 .bss           0x00000000c002bed4        0x0 sys/truncate.32
 .bss           0x00000000c002bed4        0x0 sys/write.32
 .bss           0x00000000c002bed4        0x0 sys/wsbe.32
 .bss           0x00000000c002bed4        0x0 sys/yield.32
 *fill*         0x00000000c002bed4        0xc 
 .bss           0x00000000c002bee0      0x7a4 thr/elf.32
                0x00000000c002bee0                Thr::driverLookupNext
                0x00000000c002bf00                Thr::driverLookupLen
                0x00000000c002c100                Thr::driverLookupAddr
                0x00000000c002c300                Thr::driverNameLookup
                0x00000000c002c500                Thr::kernelSymbols
                0x00000000c002c580                Thr::kernelStringTable
                0x00000000c002c600                Thr::kernelSymbolTable
                0x00000000c002c680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002c684        0x0 thr/exec.32
 *fill*         0x00000000c002c684        0x4 
 .bss           0x00000000c002c688       0x70 thr/prcssthr.32
                0x00000000c002c688                KiRestorePreemptionValue
                0x00000000c002c68c                KiPreemptionDisableCounter
                0x00000000c002c690                cleanerThread
                0x00000000c002c694                weNeedTheCleanerToNotBlock
                0x00000000c002c698                retValLockStuff
                0x00000000c002c69c                retValSchedLock
                0x00000000c002c6a0                lockStuffLock
                0x00000000c002c6a4                schedulerLock
                0x00000000c002c6a8                taskSwitchesPostponedFlag
                0x00000000c002c6ac                postponeTaskSwitchesCounter
                0x00000000c002c6b0                irqDisableCounter
                0x00000000c002c6b4                terminatedTaskList
                0x00000000c002c6c0                sleepingTaskList
                0x00000000c002c6cc                taskList
                0x00000000c002c6d8                kernelProcess
 *fill*         0x00000000c002c6f8        0x8 
 .bss           0x00000000c002c700       0x40 vm86/vm8086.32
                0x00000000c002c700                Vm::started8086Yet
                0x00000000c002c704                Vm::vmRetV
                0x00000000c002c708                Vm::vmDone
                0x00000000c002c709                Vm::vmReady
                0x00000000c002c70c                Vm::vm86Thread
                0x00000000c002c710                Vm::vmToHostCommsPtr
                0x00000000c002c720                Vm::vmToHostComms
 .bss           0x00000000c002c740       0x54 arch/i386/hal.32
                0x00000000c002c740                apic
                0x00000000c002c744                guiPanicHandler
                0x00000000c002c748                fpuOwner
                0x00000000c002c74c                coproLoadFunc
                0x00000000c002c750                coproSaveFunc
                0x00000000c002c754                lastD
                0x00000000c002c758                lastC
                0x00000000c002c75c                lastB
                0x00000000c002c760                lastA
                0x00000000c002c764                HalPageWriteCombiningFlag
                0x00000000c002c768                HalPageGlobalFlag
                0x00000000c002c76c                nmi
                0x00000000c002c770                vendorIDString
                0x00000000c002c77d                familyID
                0x00000000c002c77e                model
                0x00000000c002c77f                processorType
                0x00000000c002c780                steppingID
                0x00000000c002c784                vendor
                0x00000000c002c788                opcodeDetectionMode
                0x00000000c002c78c                features
 .bss           0x00000000c002c794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002c794        0x0 arch/i386/pic.32
 .bss           0x00000000c002c794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c796        0xa 
 .bss           0x00000000c002c7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002c7a0                FAT::fats
                0x00000000c002c7c0                FAT::vfsToFatRemaps
                0x00000000c002c840                fatToVFSRemaps
 .bss           0x00000000c002c890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c890       0x10 
 .bss           0x00000000c002c8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002c8a0                iso9660Owner
                0x00000000c002c8a4                recentSector
                0x00000000c002c8c0                recentBuffer
 .bss           0x00000000c002d0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0c0        0xd hw/bus/pci.32
                0x00000000c002d0c0                thePCI
 .bss           0x00000000c002d0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0cd        0x3 
 .bss           0x00000000c002d0d0        0x8 hw/diskphys/ata.32
                0x00000000c002d0d0                ataSectorsWritten
                0x00000000c002d0d4                ataSectorsRead
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0d8        0x8 
 .bss           0x00000000c002d0e0       0x41 hw/intctrl/apic.32
                0x00000000c002d0e0                noOfIOAPICs
                0x00000000c002d100                ioapics
                0x00000000c002d120                IOAPICsSetupYet
 .bss           0x00000000c002d121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d121        0x3 
 .bss           0x00000000c002d124        0x4 hw/timer/pit.32
                0x00000000c002d124                pitFreq
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d128        0x0 crtn.32
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003424f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
