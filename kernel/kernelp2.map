Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa4a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x723 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006d2c                Krnl::firstTask()
                0x00000000c0006e6a                Computer::Computer()
                0x00000000c0006e6a                Computer::Computer()
                0x00000000c0006f1a                Computer::setBootMessage(char const*)
                0x00000000c0006f1c                Computer::detectFeatures()
                0x00000000c0007142                Computer::displayFeatures()
                0x00000000c0007144                Computer::rdmsr(unsigned int)
                0x00000000c0007170                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00071ac                Computer::shutdown()
                0x00000000c00071c4                Computer::restart()
                0x00000000c00071dc                Computer::sleep()
                0x00000000c00071f0                Computer::nmiEnabled()
                0x00000000c00071fc                Computer::readCMOS(unsigned char)
                0x00000000c0007218                Computer::enableNMI(bool)
                0x00000000c0007230                Computer::open(int, int, void*)
                0x00000000c0007304                Computer::disableNMI()
                0x00000000c0007314                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007338                Computer::handleNMI()
 *fill*         0x00000000c00073a3        0x1 
 .text          0x00000000c00073a4      0x1db core/gdt.32
                0x00000000c00073a4                GDTEntry::setBase(unsigned int)
                0x00000000c00073c0                GDTEntry::setLimit(unsigned int)
                0x00000000c00073de                GDT::GDT()
                0x00000000c00073de                GDT::GDT()
                0x00000000c00073f4                GDT::addEntry(GDTEntry)
                0x00000000c0007416                GDT::getNumberOfEntries()
                0x00000000c000741e                GDT::flush()
                0x00000000c0007440                GDT::setup()
 .text          0x00000000c000757f       0x1d core/idle.32
                0x00000000c000757f                idleFunction(void*)
 .text          0x00000000c000759c      0x46c core/idt.32
                0x00000000c000759c                IDTEntry::IDTEntry(bool)
                0x00000000c000759c                IDTEntry::IDTEntry(bool)
                0x00000000c0007616                IDTEntry::setOffset(unsigned int)
                0x00000000c000762c                IDT::IDT()
                0x00000000c000762c                IDT::IDT()
                0x00000000c000762e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007636                IDT::addEntry(IDTEntry, int)
                0x00000000c0007650                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007688                IDT::flush()
                0x00000000c00076a2                IDT::setup()
 .text          0x00000000c0007a08      0x185 core/kheap.32
                0x00000000c0007a08                sbrk
                0x00000000c0007a9c                mmap
                0x00000000c0007ab2                munmap
                0x00000000c0007ac8                liballoc_lock()
                0x00000000c0007ad6                liballoc_unlock()
                0x00000000c0007aec                liballoc_alloc(int)
                0x00000000c0007b04                liballoc_free(void*, int)
                0x00000000c0007b1f                realloc
                0x00000000c0007b33                malloc
                0x00000000c0007b43                free
                0x00000000c0007b53                rfree
                0x00000000c0007b63                calloc
 .text          0x00000000c0007b8d       0xc7 core/main.32
                0x00000000c0007b8d                KeEntryPoint
 .text          0x00000000c0007c54      0x643 core/physmgr.32
                0x00000000c0007c54                Phys::allocateDMA(unsigned long)
                0x00000000c0007d42                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d7d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007dbd                Phys::getPageState(unsigned long)
                0x00000000c0007dd9                Phys::freePage(unsigned long)
                0x00000000c0007e42                Phys::allocatePage()
                0x00000000c0007f11                Phys::allocateContiguousPages(int)
                0x00000000c0007f78                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007fb0                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008297        0x1 
 .text          0x00000000c0008298      0x26d core/pipe.32
                0x00000000c0008298                Pipe::isAtty()
                0x00000000c000829c                Pipe::~Pipe()
                0x00000000c000829c                Pipe::~Pipe()
                0x00000000c00082c0                Pipe::~Pipe()
                0x00000000c00082e8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00083ac                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000849e                Pipe::Pipe(int)
                0x00000000c000849e                Pipe::Pipe(int)
 *fill*         0x00000000c0008505        0x1 
 .text          0x00000000c0008506      0xa85 core/terminal.32
                0x00000000c0008506                VgaText::isAtty()
                0x00000000c000850a                VgaText::~VgaText()
                0x00000000c000850a                VgaText::~VgaText()
                0x00000000c000852e                VgaText::~VgaText()
                0x00000000c0008558                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008578                setTerminalScrollLock(bool)
                0x00000000c0008579                doTerminalCycle()
                0x00000000c000857a                addToTerminalCycle(VgaText*)
                0x00000000c000857b                scrollTerminalScrollLock(int)
                0x00000000c000857c                VgaText::updateTitle()
                0x00000000c000857e                VgaText::load()
                0x00000000c0008580                VgaText::updateCursor()
                0x00000000c0008596                VgaText::doANSI_SGR(int)
                0x00000000c000860a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000861a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000862a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000864a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008656                VgaText::setTitleColour(VgaColour)
                0x00000000c0008662                VgaText::setTitle(char*)
                0x00000000c0008664                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008676                VgaText::scrollScreen()
                0x00000000c0008708                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008718                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00087a8                VgaText::getCursorX()
                0x00000000c00087b0                VgaText::getCursorY()
                0x00000000c00087b8                VgaText::setCursor(int, int)
                0x00000000c00087cf                setActiveTerminal(VgaText*)
                0x00000000c000881a                VgaText::clearScreen()
                0x00000000c0008868                VgaText::setCursorX(int)
                0x00000000c0008880                VgaText::setCursorY(int)
                0x00000000c0008898                VgaText::incrementCursor(bool)
                0x00000000c00088ec                VgaText::decrementCursor(bool)
                0x00000000c000890e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00089de                VgaText::putchar(char)
                0x00000000c0008ac6                VgaText::putx(unsigned int)
                0x00000000c0008b0c                VgaText::puts(char const*)
                0x00000000c0008b32                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b7e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008ccc                VgaText::VgaText(char const*)
                0x00000000c0008ccc                VgaText::VgaText(char const*)
                0x00000000c0008e1c                VgaText::receiveKey(unsigned char)
                0x00000000c0008f8a                VgaText::doUpdate()
 *fill*         0x00000000c0008f8b        0x1 
 .text          0x00000000c0008f8c      0x1a1 core/tss.32
                0x00000000c0008f8c                TSS::TSS()
                0x00000000c0008f8c                TSS::TSS()
                0x00000000c0008f9c                TSS::setESP(unsigned long)
                0x00000000c0008fb0                TSS::flush()
                0x00000000c0008fd0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000912d        0x1 
 .text          0x00000000c000912e      0x4ca core/unixfile.32
                0x00000000c000912e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009184                ReservedFilename::isAtty()
                0x00000000c00091a0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091fe                UnixFile::getFileDescriptor()
                0x00000000c0009206                UnixFile::UnixFile(int)
                0x00000000c0009206                UnixFile::UnixFile(int)
                0x00000000c00093ba                ReservedFilename::ReservedFilename(int)
                0x00000000c00093ba                ReservedFilename::ReservedFilename(int)
                0x00000000c00093ec                UnixFile::~UnixFile()
                0x00000000c00093ec                UnixFile::~UnixFile()
                0x00000000c0009488                UnixFile::~UnixFile()
                0x00000000c00094b0                ReservedFilename::~ReservedFilename()
                0x00000000c00094b0                ReservedFilename::~ReservedFilename()
                0x00000000c00094d4                ReservedFilename::~ReservedFilename()
                0x00000000c00094fb                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095f8     0x1224 core/virtmgr.32
                0x00000000c00095f8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009632                Virt::getPageState(unsigned long)
                0x00000000c0009655                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009771                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009794                Virt::swapIDToSector(unsigned long)
                0x00000000c00097aa                Virt::allocateSwapfilePage()
                0x00000000c0009829                Virt::virtualMemorySetup()
                0x00000000c000987a                Virt::setupPageSwapping(int)
                0x00000000c00098ec                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098ee                VAS::VAS(VAS*)
                0x00000000c00098ee                VAS::VAS(VAS*)
                0x00000000c000991c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000994a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009969                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009aa6                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009aca                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ae4                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009b26                VAS::VAS()
                0x00000000c0009b26                VAS::VAS()
                0x00000000c0009b90                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009bc4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bf0                VAS::~VAS()
                0x00000000c0009bf0                VAS::~VAS()
                0x00000000c0009d5e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e66                VAS::allocatePages(int, int)
                0x00000000c0009f68                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009fc2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a0b2                VAS::VAS(bool)
                0x00000000c000a0b2                VAS::VAS(bool)
                0x00000000c000a2fc                VAS::evict(unsigned long)
                0x00000000c000a3da                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a57e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5f2                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a61e                VAS::scanForEviction()
                0x00000000c000a721                mapVASFirstTime
 .text          0x00000000c000a81c       0x5f coreobjs/c++.32
                0x00000000c000a81c                __cxa_atexit
                0x00000000c000a81f                __cxa_finalize
                0x00000000c000a820                __stack_chk_fail
                0x00000000c000a856                __cxa_pure_virtual
                0x00000000c000a867                operator new[](unsigned long)
                0x00000000c000a86c                operator delete(void*, unsigned long)
                0x00000000c000a871                operator delete[](void*)
                0x00000000c000a876                operator delete[](void*, unsigned long)
 .text          0x00000000c000a87b      0x225 dbg/kconsole.32
                0x00000000c000a87b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8ec                Dbg::logc(char)
                0x00000000c000a90c                Dbg::logs(char*)
                0x00000000c000a92b                Dbg::logWriteInt(unsigned int)
                0x00000000c000a949                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a96a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aaa0      0x2d4 dbg/usban.32
                0x00000000c000aaa0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000ab0c                __ubsan_handle_type_mismatch_v1
                0x00000000c000abe8                __ubsan_handle_pointer_overflow
                0x00000000c000ac14                __ubsan_handle_out_of_bounds
                0x00000000c000ac40                __ubsan_handle_add_overflow
                0x00000000c000ac6c                __ubsan_handle_load_invalid_value
                0x00000000c000ac98                __ubsan_handle_divrem_overflow
                0x00000000c000acc4                __ubsan_handle_mul_overflow
                0x00000000c000acf0                __ubsan_handle_sub_overflow
                0x00000000c000ad1c                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad48                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad74      0x86b fs/symlink.32
                0x00000000c000aec3                KiDeinitialiseSymlinks(void*)
                0x00000000c000af54                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afe6                KeInitialiseSymlinks()
                0x00000000c000b15a                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2de                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b485                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5df        0x1 
 .text          0x00000000c000b5e0      0xd7c fs/vfs.32
                0x00000000c000b5e0                File::read(unsigned long long, void*, int*)
                0x00000000c000b638                File::write(unsigned long long, void*, int*)
                0x00000000c000b690                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6e8                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b716                File::isAtty()
                0x00000000c000b71a                Directory::isAtty()
                0x00000000c000b71e                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b724                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b72a                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b730                File::~File()
                0x00000000c000b730                File::~File()
                0x00000000c000b754                File::~File()
                0x00000000c000b77e                Directory::~Directory()
                0x00000000c000b77e                Directory::~Directory()
                0x00000000c000b7a2                Directory::~Directory()
                0x00000000c000b7cc                Filesystem::Filesystem()
                0x00000000c000b7cc                Filesystem::Filesystem()
                0x00000000c000b7f0                Filesystem::~Filesystem()
                0x00000000c000b7f0                Filesystem::~Filesystem()
                0x00000000c000b7fe                Filesystem::~Filesystem()
                0x00000000c000b822                Fs::getcwd(Process*, char*, int)
                0x00000000c000b84c                Fs::initVFS()
                0x00000000c000b876                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000baa4                File::File(char const*, Process*, bool)
                0x00000000c000baa4                File::File(char const*, Process*, bool)
                0x00000000c000bb82                File::File(char const*, Process*)
                0x00000000c000bb82                File::File(char const*, Process*)
                0x00000000c000bba0                File::open(FileOpenMode)
                0x00000000c000bbfe                File::close()
                0x00000000c000bc5e                File::seek(unsigned long long)
                0x00000000c000bcb4                File::truncate(unsigned long long)
                0x00000000c000bd0a                File::tell(unsigned long long*)
                0x00000000c000bd5a                File::rewind()
                0x00000000c000bd6e                File::unlink()
                0x00000000c000bdba                File::rename(char const*)
                0x00000000c000be08                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be64                File::exists()
                0x00000000c000bea2                File::stat(unsigned long long*, bool*)
                0x00000000c000bf03                Fs::setcwd(Process*, char*)
                0x00000000c000c062                Directory::Directory(char const*, Process*)
                0x00000000c000c062                Directory::Directory(char const*, Process*)
                0x00000000c000c12a                Directory::open()
                0x00000000c000c186                Directory::close()
                0x00000000c000c1e6                Directory::unlink()
                0x00000000c000c232                Directory::rename(char const*)
                0x00000000c000c280                Directory::exists()
                0x00000000c000c2be                Directory::read(dirent*)
                0x00000000c000c30a                Directory::create()
                0x00000000c000c356                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c35c       0x86 hal/bus.32
                0x00000000c000c35c                Bus::Bus(char const*)
                0x00000000c000c35c                Bus::Bus(char const*)
                0x00000000c000c394                Bus::~Bus()
                0x00000000c000c394                Bus::~Bus()
                0x00000000c000c3b8                Bus::~Bus()
 .text          0x00000000c000c3e2       0x96 hal/buzzer.32
                0x00000000c000c3e2                beepThread(void*)
                0x00000000c000c41f                Krnl::beep(int, int, bool)
 .text          0x00000000c000c478      0x465 hal/clock.32
                0x00000000c000c478                User::loadClockSettings(int)
                0x00000000c000c4ca                Clock::Clock(char const*)
                0x00000000c000c4ca                Clock::Clock(char const*)
                0x00000000c000c500                Clock::~Clock()
                0x00000000c000c500                Clock::~Clock()
                0x00000000c000c524                Clock::~Clock()
                0x00000000c000c54e                Clock::timeInSecondsLocal()
                0x00000000c000c596                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5ef                datetimeToSeconds(datetime_t)
                0x00000000c000c714                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c774                secondsToDatetime(unsigned long long)
                0x00000000c000c8b8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8dd        0x1 
 .text          0x00000000c000c8de      0x464 hal/device.32
                0x00000000c000c8de                Device::hibernate()
                0x00000000c000c8e0                Device::wake()
                0x00000000c000c8e2                Device::detect()
                0x00000000c000c8e4                Device::disableLegacy()
                0x00000000c000c8e6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8e8                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8ec                DriverlessDevice::detect()
                0x00000000c000c8ee                DriverlessDevice::open(int, int, void*)
                0x00000000c000c902                Device::~Device()
                0x00000000c000c902                Device::~Device()
                0x00000000c000c910                Device::~Device()
                0x00000000c000c938                Device::findAndLoadDriver()
                0x00000000c000c946                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c96c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c9ac                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9d6                Device::getParent()
                0x00000000c000c9e2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ca00                Device::addChild(Device*)
                0x00000000c000ca44                Device::removeAllChildren()
                0x00000000c000ca8a                Device::hibernateAll()
                0x00000000c000caba                Device::wakeAll()
                0x00000000c000caea                Device::detectAll()
                0x00000000c000cb1a                Device::disableLegacyAll()
                0x00000000c000cb1c                Device::loadDriversForAll()
                0x00000000c000cb1e                Device::closeAll()
                0x00000000c000cb54                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb8a                Device::setName(char const*)
                0x00000000c000cb98                Device::Device(char const*)
                0x00000000c000cb98                Device::Device(char const*)
                0x00000000c000cc94                Device::getName()
                0x00000000c000cc9e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc9e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccd4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd18                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd42        0x2 
 .text          0x00000000c000cd44       0x86 hal/diskctrl.32
                0x00000000c000cd44                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd44                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd7c                HardDiskController::~HardDiskController()
                0x00000000c000cd7c                HardDiskController::~HardDiskController()
                0x00000000c000cda0                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdca       0xe2 hal/diskphys.32
                0x00000000c000cdca                PhysicalDisk::eject()
                0x00000000c000cdce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce36                PhysicalDisk::startCache()
                0x00000000c000ce5e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce5e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce82                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ceac        0x0 hal/fpu.32
 .text          0x00000000c000ceac      0x360 hal/intctrl.32
                0x00000000c000ceac                int_handler
                0x00000000c000cf36                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf80                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0c3                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0f7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d16d                setupINTS()
                0x00000000c000d1ca                convertLegacyIRQNumber(int)
 .text          0x00000000c000d20c      0x8be hal/keybrd.32
                0x00000000c000d20c                startGUI(void*)
                0x00000000c000d27a                startGUIVESA(void*)
                0x00000000c000d2e8                sendKeyToTerminal(unsigned char)
                0x00000000c000d3c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8ad                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8e2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da40                Keyboard::Keyboard(char const*)
                0x00000000c000da40                Keyboard::Keyboard(char const*)
                0x00000000c000da7c                Keyboard::~Keyboard()
                0x00000000c000da7c                Keyboard::~Keyboard()
                0x00000000c000daa0                Keyboard::~Keyboard()
 .text          0x00000000c000daca      0x3f8 hal/logidisk.32
                0x00000000c000daca                LogicalDisk::close(int, int, void*)
                0x00000000c000dace                LogicalDisk::~LogicalDisk()
                0x00000000c000dace                LogicalDisk::~LogicalDisk()
                0x00000000c000daf2                LogicalDisk::~LogicalDisk()
                0x00000000c000db1c                LogicalDisk::open(int, int, void*)
                0x00000000c000db30                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db68                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbae                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc6e                LogicalDisk::assignDriveLetter()
                0x00000000c000dd28                LogicalDisk::mount()
                0x00000000c000dd70                LogicalDisk::unmount()
                0x00000000c000dd80                LogicalDisk::eject()
                0x00000000c000dd94                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddea                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de56                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000dec2        0x2 
 .text          0x00000000c000dec4       0x86 hal/mouse.32
                0x00000000c000dec4                Mouse::Mouse(char const*)
                0x00000000c000dec4                Mouse::Mouse(char const*)
                0x00000000c000defc                Mouse::~Mouse()
                0x00000000c000defc                Mouse::~Mouse()
                0x00000000c000df20                Mouse::~Mouse()
 .text          0x00000000c000df4a       0x90 hal/nic.32
                0x00000000c000df4a                NIC::getMAC()
                0x00000000c000df50                NIC::write(int, unsigned char*, int*)
                0x00000000c000df56                NIC::NIC(char const*)
                0x00000000c000df56                NIC::NIC(char const*)
                0x00000000c000df8c                NIC::~NIC()
                0x00000000c000df8c                NIC::~NIC()
                0x00000000c000dfb0                NIC::~NIC()
 .text          0x00000000c000dfda      0x33b hal/partition.32
                0x00000000c000dfda                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e082                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e315        0x3 
 .text          0x00000000c000e318       0x86 hal/serial.32
                0x00000000c000e318                Serial::Serial(char const*)
                0x00000000c000e318                Serial::Serial(char const*)
                0x00000000c000e350                Serial::~Serial()
                0x00000000c000e350                Serial::~Serial()
                0x00000000c000e374                Serial::~Serial()
 *fill*         0x00000000c000e39e        0x2 
 .text          0x00000000c000e3a0      0x234 hal/timer.32
                0x00000000c000e3a0                Timer::Timer(char const*)
                0x00000000c000e3a0                Timer::Timer(char const*)
                0x00000000c000e3d8                Timer::~Timer()
                0x00000000c000e3d8                Timer::~Timer()
                0x00000000c000e3fc                Timer::~Timer()
                0x00000000c000e426                Timer::read()
                0x00000000c000e431                setupTimer(int)
                0x00000000c000e46c                timerHandler(unsigned int)
 .text          0x00000000c000e5d4      0x450 hal/vcache.32
                0x00000000c000e5d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e744                VCache::invalidateReadBuffer()
                0x00000000c000e754                VCache::writeWriteBuffer()
                0x00000000c000e7a0                VCache::~VCache()
                0x00000000c000e7a0                VCache::~VCache()
                0x00000000c000e7f8                VCache::~VCache()
                0x00000000c000e820                VCache::write(unsigned long long, int, void*)
                0x00000000c000e91a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea24      0x4d9 hal/video.32
                0x00000000c000ea24                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea70                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eae0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb70                Video::clearScreen(unsigned int)
                0x00000000c000eba4                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebb2                Video::readPixelApprox(int, int)
                0x00000000c000ebc6                Video::Video(char const*)
                0x00000000c000ebc6                Video::Video(char const*)
                0x00000000c000ebfc                Video::~Video()
                0x00000000c000ebfc                Video::~Video()
                0x00000000c000ec20                Video::~Video()
                0x00000000c000ec4a                Video::isMonochrome()
                0x00000000c000ec56                Video::getWidth()
                0x00000000c000ec62                Video::getHeight()
                0x00000000c000ec6e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed2a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee92                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eefd        0x3 
 .text          0x00000000c000ef00     0x134a hw/acpi.32
                0x00000000c000ef00                ACPI::close(int, int, void*)
                0x00000000c000f02c                findRSDP()
                0x00000000c000f0c4                loadACPITables(unsigned char*)
                0x00000000c000f330                findRSDT(unsigned char*)
                0x00000000c000f488                findDataTable(unsigned char*, char*)
                0x00000000c000f508                scanMADT()
                0x00000000c000f9c0                ACPI::ACPI()
                0x00000000c000f9c0                ACPI::ACPI()
                0x00000000c000fa14                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fb10                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fbdc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbe4                ACPI::detectPCI()
                0x00000000c000fe04                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe4c                ACPI::sleep()
                0x00000000c000fe68                ACPI::open(int, int, void*)
 .text          0x00000000c001024a      0xbc5 hw/cpu.32
                0x00000000c001024a                CPU::close(int, int, void*)
                0x00000000c001024e                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001026a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010282                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102f6                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001037a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00103a8                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00103d6                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010404                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010432                CPU::CPU()
                0x00000000c0010432                CPU::CPU()
                0x00000000c00104c0                CPU::displayFeatures()
                0x00000000c00104c2                CPU::detectFeatures()
                0x00000000c0010b96                CPU::setupSMEP()
                0x00000000c0010ba2                CPU::setupUMIP()
                0x00000000c0010bac                CPU::setupTSC()
                0x00000000c0010bb6                CPU::setupLargePages()
                0x00000000c0010bc0                CPU::setupPAT()
                0x00000000c0010bfc                CPU::setupMTRR()
                0x00000000c0010bfe                CPU::setupGlobalPages()
                0x00000000c0010c08                CPU::allowUsermodeDataAccess()
                0x00000000c0010c1a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010c2c                CPU::setupSMAP()
                0x00000000c0010c3a                CPU::setupFeatures()
                0x00000000c0010d06                CPU::open(int, int, void*)
 .text          0x00000000c0010e0f       0xb6 krnl/atexit.32
                0x00000000c0010e0f                KeInitialiseAtexit()
                0x00000000c0010e2e                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e62                KeExecuteAtexit()
 .text          0x00000000c0010ec5       0xdf krnl/bootmsg.32
                0x00000000c0010ec5                KeDisplaySplashScreen()
                0x00000000c0010f41                KeSetBootMessage(char const*)
 .text          0x00000000c0010fa4       0x1d krnl/compat.32
                0x00000000c0010fa4                Krnl::handlePowerButton()
                0x00000000c0010fb4                Krnl::handleSleepButton()
 .text          0x00000000c0010fc1       0x2b krnl/crc32.32
                0x00000000c0010fc1                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fec      0x5bf krnl/env.32
                0x00000000c0010fec                EnvVarContainer::getEnv(char const*)
                0x00000000c001102a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110ec                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110ee                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0011312                EnvVarContainer::__loadSystem()
                0x00000000c001132c                EnvVarContainer::__loadUser()
                0x00000000c001132e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001132e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011350                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011350                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011380                KeGetEnv(Process*, char const*)
                0x00000000c00113e5                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113ff                KeSetEnvUser(char const*, char const*)
                0x00000000c001141e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011431                KeDeleteEnvSystem(char const*)
                0x00000000c0011432                KeDeleteEnvUser(char const*)
                0x00000000c0011433                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011434                KeNewProcessEnv(Process*)
                0x00000000c0011456                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00114a2                KeLoadSystemEnv()
                0x00000000c00114d0                KeLoadUserEnv()
                0x00000000c00114f6                KeFlushEnv()
                0x00000000c00114f7                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011517                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00115ab       0x94 krnl/inlines.32
                0x00000000c00115ab                CPU::current()
                0x00000000c00115b7                operator new(unsigned long)
                0x00000000c00115bc                operator delete(void*)
                0x00000000c00115c1                disableIRQs()
                0x00000000c00115c3                enableIRQs()
                0x00000000c00115c5                lockScheduler()
                0x00000000c00115cd                unlockScheduler()
                0x00000000c00115dc                lockStuff()
                0x00000000c00115ea                unlockStuff()
                0x00000000c0011624                Virt::getAKernelVAS()
                0x00000000c001162a                __not_memcpy
 .text          0x00000000c001163f        0xc krnl/panic.32
                0x00000000c001163f                KePanic(char const*)
 .text          0x00000000c001164b      0x142 krnl/powctrl.32
                0x00000000c001164b                KePowerThread(void*)
                0x00000000c0011679                KeChangePowerSettings(PowerSettings)
                0x00000000c001168f                KeUserIOReceived()
                0x00000000c001169a                KeHandlePowerButton()
                0x00000000c00116cf                KeHandleSleepButton()
                0x00000000c0011704                KeSetupPowerManager()
 .text          0x00000000c001178d       0x9b krnl/random.32
                0x00000000c001178d                KeRand()
                0x00000000c00117cd                KeSeedRand(unsigned int)
                0x00000000c00117f6                KeInitRand()
 .text          0x00000000c0011828      0x1bc krnl/resolve.32
                0x00000000c0011828                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119e4      0x31f krnl/signal.32
                0x00000000c00119e4                KiSigKill(int)
                0x00000000c00119f8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119f9                KiDefaultSignalHandlerPause(int)
                0x00000000c0011a25                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a51                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a56                KeInitSignals()
                0x00000000c0011aa5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011adb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b58                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c4f                KiCheckSignalZ
                0x00000000c0011c91                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011ccc                KiFinishSignalZ
 .text          0x00000000c0011d03      0xe32 krnl/syscalls.32
                0x00000000c0011d03                SysSeekDir(regs*)
                0x00000000c0011d08                SysTellDir(regs*)
                0x00000000c0011d0d                SysVerify(regs*)
                0x00000000c0011d17                SysGetArgc(regs*)
                0x00000000c0011d2b                SysTTYName(regs*)
                0x00000000c0011d33                SysFormatDisk(regs*)
                0x00000000c0011d9a                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011dee                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e47                SysShutdown(regs*)
                0x00000000c0011ed4                SysRealpath(regs*)
                0x00000000c0011f22                SysReadDir(regs*)
                0x00000000c0011fa2                SysIsATTY(regs*)
                0x00000000c0011ffc                SysSeek(regs*)
                0x00000000c0012056                SysTell(regs*)
                0x00000000c00120c3                SysSize(regs*)
                0x00000000c0012136                SysSizeFromFilename(regs*)
                0x00000000c001226a                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001239e                SysClose(regs*)
                0x00000000c00123fe                SysOpenDir(regs*)
                0x00000000c001247b                SysMakeDir(regs*)
                0x00000000c00124e9                SysCloseDir(regs*)
                0x00000000c0012538                SysWait(regs*)
                0x00000000c0012559                SysNotImpl(regs*)
                0x00000000c0012574                SysPanic(regs*)
                0x00000000c001258f                SysRmdir(regs*)
                0x00000000c00125ed                SysUnlink(regs*)
                0x00000000c001264b                SysGetArgv(regs*)
                0x00000000c0012698                SysUSleep(regs*)
                0x00000000c00126c1                SysSpawn(regs*)
                0x00000000c0012732                SysGetEnv(regs*)
                0x00000000c00127e7                SysSetFatAttrib(regs*)
                0x00000000c0012850                SysPipe(regs*)
                0x00000000c0012895                SysGetUnixTime(regs*)
                0x00000000c00128a9                string_ends_with(char const*, char const*)
                0x00000000c00128f4                SysOpen(regs*)
                0x00000000c0012af3                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012b35        0x3 
 .text          0x00000000c0012b38      0x159 net/ethernet.32
                0x00000000c0012b38                KeSwitchEndian16(unsigned short)
                0x00000000c0012b5c                KeSwitchEndian32(unsigned int)
                0x00000000c0012b8c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c30                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c91      0xd51 reg/cm.32
                0x00000000c0012c91                CmOpen(char const*)
                0x00000000c0012daf                CmClose(Reghive_Tag*)
                0x00000000c0012dc5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e01                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e78                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012eb7                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012ee9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012f25                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f4d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f6e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012fe9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001306f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013163                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001329b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00132fc                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c001332c                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013363                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c001338d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00133cd                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013471                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001349f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001363c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013689                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013703                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013756                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001381a                zStrtok(char*, char const*)
                0x00000000c001388c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001390d                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00139b0                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00139e2      0x545 reg/registry.32
                0x00000000c00139e2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b6e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013cc3                Reg::getLine(char*, char*, char*)
                0x00000000c0013cfa                Reg::readInt(char*, char*, int*)
                0x00000000c0013de8                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e69                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e8e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013eba                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013ee6                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013f27       0x36 sys/eject.32
                0x00000000c0013f27                SysEject(regs*)
 .text          0x00000000c0013f5d       0x18 sys/exit.32
                0x00000000c0013f5d                SysExit(regs*)
 .text          0x00000000c0013f75       0x1f sys/getcwd.32
                0x00000000c0013f75                SysGetCwd(regs*)
 .text          0x00000000c0013f94        0xc sys/getpid.32
                0x00000000c0013f94                SysGetPID(regs*)
 .text          0x00000000c0013fa0       0x1a sys/getramdata.32
                0x00000000c0013fa0                SysGetRAMData(regs*)
 .text          0x00000000c0013fba       0x82 sys/getvgaptr.32
                0x00000000c0013fba                SysGetVGAPtr(regs*)
 .text          0x00000000c001403c       0xb9 sys/kill.32
                0x00000000c001403c                SysKill(regs*)
 .text          0x00000000c00140f5       0xa8 sys/loaddll.32
                0x00000000c00140f5                SysLoadDLL(regs*)
 .text          0x00000000c001419d       0x68 sys/read.32
                0x00000000c001419d                SysRead(regs*)
 .text          0x00000000c0014205       0x29 sys/registersignal.32
                0x00000000c0014205                SysRegisterSignal(regs*)
 .text          0x00000000c001422e      0x19c sys/registry.32
                0x00000000c001422e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00142a5                SysRegistryReadExtent(regs*)
                0x00000000c00142ed                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014315                SysRegistryEnterDirectory(regs*)
                0x00000000c001433d                SysRegistryGetNext(regs*)
                0x00000000c0014365                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001439f                SysRegistryOpen(regs*)
                0x00000000c00143b3                SysRegistryClose(regs*)
 .text          0x00000000c00143ca       0x55 sys/sbrk.32
                0x00000000c00143ca                SysSbrk(regs*)
 .text          0x00000000c001441f       0x1c sys/setcwd.32
                0x00000000c001441f                SysSetCwd(regs*)
 .text          0x00000000c001443b       0x96 sys/settime.32
                0x00000000c001443b                SysSetTime(regs*)
 .text          0x00000000c00144d1       0x73 sys/symlink.32
                0x00000000c00144d1                SysSymlink(regs*)
 .text          0x00000000c0014544       0x4a sys/timezone.32
                0x00000000c0014544                SysTimezone(regs*)
 .text          0x00000000c001458e       0xfc sys/truncate.32
                0x00000000c001458e                SysTruncate(regs*)
 .text          0x00000000c001468a       0x68 sys/write.32
                0x00000000c001468a                SysWrite(regs*)
 .text          0x00000000c00146f2       0x62 sys/wsbe.32
                0x00000000c00146f2                SysWsbe(regs*)
 .text          0x00000000c0014754       0x25 sys/yield.32
                0x00000000c0014754                SysYield(regs*)
 .text          0x00000000c0014779     0x1203 thr/elf.32
                0x00000000c0014779                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a00                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c1f                Thr::runtimeReferenceHelper()
                0x00000000c0014c32                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c81                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f3f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015680                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156b2                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00156e9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015703                Thr::loadDLL(char const*, bool)
                0x00000000c0015943                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001597c     0x13b5 thr/prcssthr.32
                0x00000000c001597c                userModeEntryPoint(void*)
                0x00000000c00159a4                changeTSS
                0x00000000c00159d4                switchToThread(ThreadControlBlock*)
                0x00000000c0015a84                Process::addArgs(char**)
                0x00000000c0015af0                Process::Process(char const*, Process*, char**)
                0x00000000c0015af0                Process::Process(char const*, Process*, char**)
                0x00000000c0015cfc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015cfc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015ed0                taskStartupFunction
                0x00000000c0015edc                Semaphore::Semaphore(int)
                0x00000000c0015edc                Semaphore::Semaphore(int)
                0x00000000c0015f0c                Mutex::Mutex()
                0x00000000c0015f0c                Mutex::Mutex()
                0x00000000c0015f20                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016028                Process::createUserThread()
                0x00000000c0016048                setupMultitasking(void (*)())
                0x00000000c001616c                schedule()
                0x00000000c0016200                Semaphore::tryAcquire()
                0x00000000c00162c0                Semaphore::assertLocked(char const*)
                0x00000000c0016344                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001636c                blockTask(TaskState)
                0x00000000c00163a4                waitTask(int, int*, int)
                0x00000000c00163e8                milliTenthSleepUntil(unsigned int)
                0x00000000c0016488                milliTenthSleep(unsigned int)
                0x00000000c001649c                sleep(unsigned int)
                0x00000000c00164ac                Semaphore::acquire()
                0x00000000c0016574                taskReturned
                0x00000000c00165b8                Thr::processFromPID(int)
                0x00000000c0016664                unblockTask(ThreadControlBlock*)
                0x00000000c0016710                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00169e4                cleanerTaskFunction(void*)
                0x00000000c0016aec                terminateTask(int)
                0x00000000c0016bd8                Thr::terminateFromIRQ(int)
                0x00000000c0016be8                Semaphore::release()
 .text          0x00000000c0016d31      0xc31 vm86/vm8086.32
                0x00000000c0016d31                Vm::inbv(unsigned short)
                0x00000000c0016d44                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d7a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016d8a                Vm::getSegment(unsigned int)
                0x00000000c0016d92                Vm::getOffset(unsigned int)
                0x00000000c0016d97                Vm::mainloop2()
                0x00000000c0016dd1                Vm::mainVm8086Loop(void*)
                0x00000000c0016de1                Vm::mainloop3(unsigned long)
                0x00000000c0016e07                Vm::initialise8086()
                0x00000000c0016e4a                Vm::finish8086()
                0x00000000c0016eab                Vm::getOutput8086(unsigned char*)
                0x00000000c0016ed0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f89                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017127                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00171c4                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00171d5                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171e7                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00171f8                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001720d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017223                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017238                Vm::faultHandler(regs*)
 .text          0x00000000c0017962      0xaf0 arch/i386/hal.32
                0x00000000c0017962                noCopro(unsigned long)
                0x00000000c0017963                nmiHandler(regs*, void*)
                0x00000000c001797c                doubleFault(regs*, void*)
                0x00000000c0017995                displayDebugInfo(regs*)
                0x00000000c0017d1a                HalSystemIdle()
                0x00000000c0017d96                displayProgramFault(char const*)
                0x00000000c0017de2                gpFault(regs*, void*)
                0x00000000c0017e49                pgFault(regs*, void*)
                0x00000000c0017ed2                otherISRHandler(regs*, void*)
                0x00000000c0017f06                opcodeFault(regs*, void*)
                0x00000000c0017f89                i386SaveCoprocessor(void*)
                0x00000000c0017f9d                i386LoadCoprocessor(void*)
                0x00000000c0017fb1                x87EmulHandler(regs*, void*)
                0x00000000c001804e                HalInitialiseCoprocessor()
                0x00000000c00180fc                HalPanic(char const*)
                0x00000000c0018210                HalQueryPerformanceCounter()
                0x00000000c001822b                HalInitialise()
                0x00000000c00183e1                HalMakeBeep(int)
                0x00000000c001841b                HalGetRand()
                0x00000000c001841e                HalEndOfInterrupt(int)
                0x00000000c001844f                HalRestart()
                0x00000000c0018450                HalShutdown()
                0x00000000c0018451                HalSleep()
 *fill*         0x00000000c0018452        0x2 
 .text          0x00000000c0018454      0x2dc arch/i386/pic.32
                0x00000000c0018454                picIoWait()
                0x00000000c001845c                picDisable()
                0x00000000c0018490                picGetIRQReg(int)
                0x00000000c001850c                picOpen()
                0x00000000c0018690                picEOI(int)
 .text          0x00000000c0018730      0x66e arch/i386/rtc.32
                0x00000000c0018730                RTC::open(int, int, void*)
                0x00000000c0018734                RTC::close(int, int, void*)
                0x00000000c0018738                RTC::timeInSecondsUTC()
                0x00000000c001874a                RTC::timeInDatetimeUTC()
                0x00000000c0018770                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00187ae                RTC::~RTC()
                0x00000000c00187ae                RTC::~RTC()
                0x00000000c00187d2                RTC::~RTC()
                0x00000000c00187fc                RTC::get_update_in_progress_flag()
                0x00000000c0018816                RTC::completeRTCRefresh()
                0x00000000c0018af0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c9e                rtcIRQHandler(regs*, void*)
                0x00000000c0018ce4                RTC::RTC()
                0x00000000c0018ce4                RTC::RTC()
 *fill*         0x00000000c0018d9e        0x2 
 .text          0x00000000c0018da0      0x1f4 arch/i386/vga.32
                0x00000000c0018da0                HalConsoleScroll(int, int)
                0x00000000c0018ea8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018f0c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f94     0x14f3 fs/fat/vfslink.32
                0x00000000c0018f94                FAT::getName()
                0x00000000c0018f9c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018fd8                FAT::stat(void*, unsigned long long*)
                0x00000000c0019014                FAT::~FAT()
                0x00000000c0019014                FAT::~FAT()
                0x00000000c0019038                FAT::~FAT()
                0x00000000c0019060                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019104                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00191e4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00193c8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00195e4                FAT::allocateSwapfile(char const*, int)
                0x00000000c00197a4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019914                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019974                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00199d4                FAT::close(void*)
                0x00000000c0019a28                FAT::closeDir(void*)
                0x00000000c0019a7c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019ae8                FAT::seek(void*, unsigned long long)
                0x00000000c0019b40                fatWrapperReadDisk
                0x00000000c0019b80                fatWrapperWriteDisk
                0x00000000c0019bc0                fatWrapperIoctl
                0x00000000c0019ce0                FAT::FAT()
                0x00000000c0019ce0                FAT::FAT()
                0x00000000c0019d38                FAT::fixFilepath(char*)
                0x00000000c0019d78                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019eec                FAT::openDir(char const*, void**)
                0x00000000c0019f9c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a094                FAT::unlink(char const*)
                0x00000000c001a114                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a2cc                FAT::rename(char const*, char const*)
                0x00000000c001a398                FAT::mkdir(char const*)
                0x00000000c001a418                FAT::exists(char const*)
 *fill*         0x00000000c001a487        0x1 
 .text          0x00000000c001a488       0x94 fs/iso9660/helper.32
                0x00000000c001a488                isoReadDiscSectorHelper
                0x00000000c001a4e4                iso_kprintf
                0x00000000c001a500                iso_kprintfd
 .text          0x00000000c001a51c      0x71a fs/iso9660/vfslink.32
                0x00000000c001a51c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a522                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a528                ISO9660::getName()
                0x00000000c001a52e                ISO9660::closeDir(void*)
                0x00000000c001a538                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a53e                ISO9660::unlink(char const*)
                0x00000000c001a544                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a54a                ISO9660::rename(char const*, char const*)
                0x00000000c001a550                ISO9660::mkdir(char const*)
                0x00000000c001a556                ISO9660::~ISO9660()
                0x00000000c001a556                ISO9660::~ISO9660()
                0x00000000c001a57a                ISO9660::~ISO9660()
                0x00000000c001a5a2                ISO9660::exists(char const*)
                0x00000000c001a5b6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a69c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a6e4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a726                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a764                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a7b6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8f8                ISO9660::close(void*)
                0x00000000c001a928                ISO9660::openDir(char const*, void**)
                0x00000000c001aa02                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ab1d                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab9c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ac0e                ISO9660::ISO9660()
                0x00000000c001ac0e                ISO9660::ISO9660()
 .text          0x00000000c001ac36      0x26c hal/sound/sndcard.32
                0x00000000c001ac36                SoundCard::beginPlayback()
                0x00000000c001ac44                SoundCard::stopPlayback()
                0x00000000c001ac52                SoundCard::SoundCard(char const*)
                0x00000000c001ac52                SoundCard::SoundCard(char const*)
                0x00000000c001acf0                SoundCard::~SoundCard()
                0x00000000c001acf0                SoundCard::~SoundCard()
                0x00000000c001ad14                SoundCard::~SoundCard()
                0x00000000c001ad3e                SoundCard::configureRates(int, int, int)
                0x00000000c001ad6e                SoundCard::getSamples16(int, short*)
                0x00000000c001adca                SoundCard::getSamples32(int, int*)
                0x00000000c001ae50                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae8e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001aea2        0x2 
 .text          0x00000000c001aea4      0x393 hal/sound/sndport.32
                0x00000000c001aea4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aea4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af30                SoundPort::~SoundPort()
                0x00000000c001af30                SoundPort::~SoundPort()
                0x00000000c001af64                SoundPort::unpause()
                0x00000000c001af70                SoundPort::pause()
                0x00000000c001af7c                SoundPort::getBufferUsed()
                0x00000000c001af84                SoundPort::getBufferSize()
                0x00000000c001af8c                SoundPort::buffer16(short*, int)
                0x00000000c001b018                SoundPort::buffer32(int*, int)
                0x00000000c001b0a4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b174                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b237        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b237        0x1 
 .text          0x00000000c001b238      0xbc5 hw/bus/pci.32
                0x00000000c001b238                PCI::open(int, int, void*)
                0x00000000c001b256                PCI::close(int, int, void*)
                0x00000000c001b25a                PCI::PCI()
                0x00000000c001b25a                PCI::PCI()
                0x00000000c001b2f2                PCI::readBAR8(unsigned int, int)
                0x00000000c001b30e                PCI::readBAR16(unsigned int, int)
                0x00000000c001b32c                PCI::readBAR32(unsigned int, int)
                0x00000000c001b348                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b368                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b38a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b3aa                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b420                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ca                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ee                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b516                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b560                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b588                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5ac                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5d0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5f8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b65c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b742                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ba0c                PCI::checkBus(unsigned char)
                0x00000000c001ba30                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bbb6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd32                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bda4                PCI::detect()
 *fill*         0x00000000c001bdfd        0x1 
 .text          0x00000000c001bdfe      0xb96 hw/diskctrl/ide.32
                0x00000000c001bdfe                IDE::close(int, int, void*)
                0x00000000c001be02                IDE::IDE()
                0x00000000c001be02                IDE::IDE()
                0x00000000c001be36                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be48                selectDrive(unsigned char, unsigned char)
                0x00000000c001be4a                IDE::getBase(unsigned char)
                0x00000000c001be5c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf1c                IDE::read(unsigned char, unsigned char)
                0x00000000c001bfd0                IDE::waitInterrupt(unsigned char)
                0x00000000c001c032                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c04e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c06a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c0b4                IDE::open(int, int, void*)
                0x00000000c001c4ee                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c5be                IDE::detect()
                0x00000000c001c886                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c940                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c994      0x32c hw/diskctrl/satabus.32
                0x00000000c001c994                SATABus::close(int, int, void*)
                0x00000000c001c998                SATABus::detect()
                0x00000000c001c99a                SATABus::SATABus()
                0x00000000c001c99a                SATABus::SATABus()
                0x00000000c001ca20                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca52                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca9a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001caba                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cae4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cbf6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cca0                SATABus::open(int, int, void*)
 .text          0x00000000c001ccc0      0x96d hw/diskphys/ata.32
                0x00000000c001ccc0                ATA::close(int, int, void*)
                0x00000000c001cce4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cce6                ATA::ATA()
                0x00000000c001cce6                ATA::ATA()
                0x00000000c001cd14                ATA::flush(bool)
                0x00000000c001cd62                ATA::readyForCommand()
                0x00000000c001cdae                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d172                ATA::detectCHS()
                0x00000000c001d19c                ATA::open(int, int, void*)
                0x00000000c001d268                combineCharAndColour(char, unsigned char)
                0x00000000c001d279                combineColours(unsigned char, unsigned char)
                0x00000000c001d286                ATA::read(unsigned long long, int, void*)
                0x00000000c001d45c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d62d        0x1 
 .text          0x00000000c001d62e      0x612 hw/diskphys/atapi.32
                0x00000000c001d62e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d634                ATAPI::close(int, int, void*)
                0x00000000c001d658                ATAPI::ATAPI()
                0x00000000c001d658                ATAPI::ATAPI()
                0x00000000c001d686                ATAPI::readyForCommand()
                0x00000000c001d6d8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d998                ATAPI::diskRemoved()
                0x00000000c001d9d2                ATAPI::eject()
                0x00000000c001da1a                ATAPI::diskInserted()
                0x00000000c001da26                ATAPI::detectMedia()
                0x00000000c001dae6                ATAPI::open(int, int, void*)
                0x00000000c001dbc6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc40      0x7ff hw/diskphys/sata.32
                0x00000000c001dc40                SATA::close(int, int, void*)
                0x00000000c001dc64                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc66                SATA::open(int, int, void*)
                0x00000000c001dd10                SATA::SATA()
                0x00000000c001dd10                SATA::SATA()
                0x00000000c001dd3e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df90                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1e0                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e43f        0x1 
 .text          0x00000000c001e440      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e440                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e446                SATAPI::close(int, int, void*)
                0x00000000c001e46a                SATAPI::SATAPI()
                0x00000000c001e46a                SATAPI::SATAPI()
                0x00000000c001e498                SATAPI::diskRemoved()
                0x00000000c001e49a                SATAPI::diskInserted()
                0x00000000c001e4b6                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e79c                SATAPI::eject()
                0x00000000c001e7d8                SATAPI::detectMedia()
                0x00000000c001e82e                SATAPI::open(int, int, void*)
                0x00000000c001e92e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ea18      0x45b hw/intctrl/apic.32
                0x00000000c001ea18                IOAPIC::close(int, int, void*)
                0x00000000c001ea1e                apicGetBase()
                0x00000000c001ea64                IOAPIC::IOAPIC()
                0x00000000c001ea64                IOAPIC::IOAPIC()
                0x00000000c001ea8c                apicOpen()
                0x00000000c001ec08                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec3a                IOAPIC::read(int)
                0x00000000c001ec62                IOAPIC::open(int, int, void*)
                0x00000000c001ed48                IOAPIC::write(int, int)
                0x00000000c001ed74                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee73        0x1 
 .text          0x00000000c001ee74       0xf0 hw/timer/apictimer.32
                0x00000000c001ee74                APICTimer::close(int, int, void*)
                0x00000000c001ee7c                apicTimerHandler(regs*, void*)
                0x00000000c001eea4                APICTimer::open(int, int, void*)
                0x00000000c001ef14                APICTimer::write(int)
                0x00000000c001ef3c                APICTimer::APICTimer()
                0x00000000c001ef3c                APICTimer::APICTimer()
 .text          0x00000000c001ef64      0x1ad hw/timer/pit.32
                0x00000000c001ef64                PIT::write(int)
                0x00000000c001efe8                pitHandler(regs*, void*)
                0x00000000c001f010                PIT::open(int, int, void*)
                0x00000000c001f060                PIT::close(int, int, void*)
                0x00000000c001f090                PIT::PIT()
                0x00000000c001f090                PIT::PIT()
 *fill*         0x00000000c001f111        0xf 
 .text          0x00000000c001f120       0x83 arch/i386/avx.32
                0x00000000c001f120                avxDetect
                0x00000000c001f14a                avxSave
                0x00000000c001f15b                avxLoad
                0x00000000c001f16c                avxInit
                0x00000000c001f18e                avxClose
                0x00000000c001f18f                wouldSheSayYes
 *fill*         0x00000000c001f1a3        0xd 
 .text          0x00000000c001f1b0      0x2ec arch/i386/interrupt.32
                0x00000000c001f1b0                isr0
                0x00000000c001f1c0                isr1
                0x00000000c001f1ca                isr2
                0x00000000c001f1d4                isr3
                0x00000000c001f1de                isr4
                0x00000000c001f1e8                isr5
                0x00000000c001f1f2                isr6
                0x00000000c001f1fc                isr7
                0x00000000c001f206                isr8
                0x00000000c001f20e                isr9
                0x00000000c001f218                isr10
                0x00000000c001f220                isr11
                0x00000000c001f228                isr12
                0x00000000c001f230                isr13
                0x00000000c001f24a                isr14
                0x00000000c001f252                isr15
                0x00000000c001f25c                isr16
                0x00000000c001f266                isr17
                0x00000000c001f270                isr18
                0x00000000c001f27a                irq3
                0x00000000c001f284                irq4
                0x00000000c001f28e                irq5
                0x00000000c001f298                irq6
                0x00000000c001f2a2                irq7
                0x00000000c001f2ac                irq8
                0x00000000c001f2b6                irq9
                0x00000000c001f2c0                irq10
                0x00000000c001f2ca                irq11
                0x00000000c001f2d4                irq12
                0x00000000c001f2de                irq13
                0x00000000c001f2e8                irq14
                0x00000000c001f2f2                irq15
                0x00000000c001f2fc                irq1
                0x00000000c001f303                irq2
                0x00000000c001f30a                isr96
                0x00000000c001f311                irq0
                0x00000000c001f316                int_common_stub
                0x00000000c001f348                syscall_common_stub
                0x00000000c001f44c                irq16
                0x00000000c001f456                irq17
                0x00000000c001f460                irq18
                0x00000000c001f46a                irq19
                0x00000000c001f474                irq20
                0x00000000c001f47e                irq21
                0x00000000c001f488                irq22
                0x00000000c001f492                irq23
 *fill*         0x00000000c001f49c        0x4 
 .text          0x00000000c001f4a0       0x10 arch/i386/rdrand.32
                0x00000000c001f4a0                i386GetRDRAND
 .text          0x00000000c001f4b0       0x39 arch/i386/sse.32
                0x00000000c001f4b0                absolutelyNoChanceInHell
                0x00000000c001f4b0                sseDetect
                0x00000000c001f4c8                sseSave
                0x00000000c001f4d0                sseLoad
                0x00000000c001f4d8                sseInit
                0x00000000c001f4e8                sseClose
 *fill*         0x00000000c001f4e9        0x7 
 .text          0x00000000c001f4f0       0x49 arch/i386/x87.32
                0x00000000c001f4f6                x87Detect
                0x00000000c001f511                x87Save
                0x00000000c001f518                x87Load
                0x00000000c001f51f                x87Init
                0x00000000c001f538                x87Close
 *fill*         0x00000000c001f539        0x3 
 .text          0x00000000c001f53c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f561        0x0 crtn.32
 *fill*         0x00000000c001f561        0x3 
 .text          0x00000000c001f564      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f564                __divdi3
 *fill*         0x00000000c001f6af        0x1 
 .text          0x00000000c001f6b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f6b0                __moddi3
 *fill*         0x00000000c001f82e        0x2 
 .text          0x00000000c001f830       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f830                __udivdi3
 *fill*         0x00000000c001f92f        0x1 
 .text          0x00000000c001f930      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f930                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa50        0x0
 .iplt          0x00000000c001fa50        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa4a        0xf
 .init          0x00000000c001fa4a        0x3 crti.32
                0x00000000c001fa4a                _init
 .init          0x00000000c001fa4d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa52        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa57        0x2 crtn.32

.fini           0x00000000c001fa59        0xa
 .fini          0x00000000c001fa59        0x3 crti.32
                0x00000000c001fa59                _fini
 .fini          0x00000000c001fa5c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa61        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa64       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa64       0x23 core/computer.32
                0x00000000c001fa64                Computer::~Computer()
                0x00000000c001fa64                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa88       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa88       0x2a core/computer.32
                0x00000000c001fa88                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fab2       0x21
 .text._Z10idleCommonv
                0x00000000c001fab2       0x21 core/idle.32
                0x00000000c001fab2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fad4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fad4        0x2 core/unixfile.32
                0x00000000c001fad4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fad4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fad6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fad6       0x42 core/unixfile.32
                0x00000000c001fad6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fad6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb18       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb18       0xd3 core/unixfile.32
                0x00000000c001fb18                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbec        0x7 core/unixfile.32
                0x00000000c001fbec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbf4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbf4       0xa1 core/unixfile.32
                0x00000000c001fbf4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc96        0x8 core/unixfile.32
                0x00000000c001fc96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc9e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc9e       0x1a hal/device.32
                0x00000000c001fc9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcb8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcb8       0x2a hal/device.32
                0x00000000c001fcb8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fce2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fce2       0xdc hal/device.32
                0x00000000c001fce2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdbe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdbe       0x42 hal/device.32
                0x00000000c001fdbe                LinkedList<Device>::LinkedList()
                0x00000000c001fdbe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe00       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe00       0x1c hal/timer.32
                0x00000000c001fe00                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe1c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe1c        0x7 hal/timer.32
                0x00000000c001fe1c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe24       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe24       0xbc hal/timer.32
                0x00000000c001fe24                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fee0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fee0       0xda hal/timer.32
                0x00000000c001fee0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ffbc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ffbc       0x23 hw/acpi.32
                0x00000000c001ffbc                ACPI::~ACPI()
                0x00000000c001ffbc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ffe0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ffe0       0x2a hw/acpi.32
                0x00000000c001ffe0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002000c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002000c        0x2 hw/acpi.32
                0x00000000c002000c                LinkedList<Device>::~LinkedList()
                0x00000000c002000c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020010       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020010       0x1c hw/acpi.32
                0x00000000c0020010                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002002c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002002c        0x7 hw/acpi.32
                0x00000000c002002c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020034       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020034       0xb8 hw/acpi.32
                0x00000000c0020034                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200ec       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200ec       0x23 hw/cpu.32
                0x00000000c00200ec                CPU::~CPU()
                0x00000000c00200ec                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020110       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020110       0x2a hw/cpu.32
                0x00000000c0020110                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002013c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002013c        0x8 sys/kill.32
                0x00000000c002013c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020144        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020144        0x2 thr/prcssthr.32
                0x00000000c0020144                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020144                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020148       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020148       0x49 thr/prcssthr.32
                0x00000000c0020148                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020148                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020194       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020194       0x42 thr/prcssthr.32
                0x00000000c0020194                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020194                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00201d6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00201d6       0x23 hw/bus/pci.32
                0x00000000c00201d6                PCI::~PCI()
                0x00000000c00201d6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00201fa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00201fa       0x2a hw/bus/pci.32
                0x00000000c00201fa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020224       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020224       0x23 hw/diskctrl/ide.32
                0x00000000c0020224                IDE::~IDE()
                0x00000000c0020224                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020248       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020248       0x2a hw/diskctrl/ide.32
                0x00000000c0020248                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020272       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020272       0x23 hw/diskctrl/satabus.32
                0x00000000c0020272                SATABus::~SATABus()
                0x00000000c0020272                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020296       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020296       0x2a hw/diskctrl/satabus.32
                0x00000000c0020296                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00202c0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00202c0       0x23 hw/diskphys/ata.32
                0x00000000c00202c0                ATA::~ATA()
                0x00000000c00202c0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202e4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202e4       0x2a hw/diskphys/ata.32
                0x00000000c00202e4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002030e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002030e       0x23 hw/diskphys/atapi.32
                0x00000000c002030e                ATAPI::~ATAPI()
                0x00000000c002030e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020332       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020332       0x2a hw/diskphys/atapi.32
                0x00000000c0020332                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002035c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002035c       0x23 hw/diskphys/sata.32
                0x00000000c002035c                SATA::~SATA()
                0x00000000c002035c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020380       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020380       0x2a hw/diskphys/sata.32
                0x00000000c0020380                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00203aa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00203aa       0x23 hw/diskphys/satapi.32
                0x00000000c00203aa                SATAPI::~SATAPI()
                0x00000000c00203aa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00203ce       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00203ce       0x2a hw/diskphys/satapi.32
                0x00000000c00203ce                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00203f8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00203f8       0x23 hw/intctrl/apic.32
                0x00000000c00203f8                IOAPIC::~IOAPIC()
                0x00000000c00203f8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002041c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002041c       0x2a hw/intctrl/apic.32
                0x00000000c002041c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020448       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020448       0x23 hw/timer/apictimer.32
                0x00000000c0020448                APICTimer::~APICTimer()
                0x00000000c0020448                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002046c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002046c       0x2a hw/timer/apictimer.32
                0x00000000c002046c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020498       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020498       0x23 hw/timer/pit.32
                0x00000000c0020498                PIT::~PIT()
                0x00000000c0020498                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00204bc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00204bc       0x2a hw/timer/pit.32
                0x00000000c00204bc                PIT::~PIT()

.rodata         0x00000000c00204e6     0x32fe
                0x00000000c00204e6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204e6        0x2 
 .ctors         0x00000000c00204e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204ec        0x4 core/unixfile.32
 .ctors         0x00000000c00204f0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00204f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204f8                end_ctors = .
                0x00000000c00204f8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00204f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00204fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204fc                __DTOR_END__
                0x00000000c0020500                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020500        0x0 
 .rodata        0x00000000c0020500      0x101 acpica/utclib.32
                0x00000000c0020500                AcpiGbl_Ctypes
 *fill*         0x00000000c0020601        0x3 
 .rodata        0x00000000c0020604       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002061c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020666       0x1a 
 .rodata        0x00000000c0020680       0xed fs/fat/ff.32
 *fill*         0x00000000c002076d       0x13 
 .rodata        0x00000000c0020780      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020bef      0x155 core/computer.32
 .rodata.str1.4
                0x00000000c0020d44       0x90 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020dd4       0x2c core/computer.32
                0x00000000c0020dd4                vtable for Computer
 .rodata.str1.4
                0x00000000c0020e00       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020e30        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020e3c       0x17 core/main.32
 *fill*         0x00000000c0020e53        0x1 
 .rodata.str1.4
                0x00000000c0020e54       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020ef9       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f51       0x39 core/pipe.32
 *fill*         0x00000000c0020f8a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020f8c       0x1c core/pipe.32
                0x00000000c0020f8c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020fa8       0x2b core/terminal.32
 *fill*         0x00000000c0020fd3        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020fd4       0x1c core/terminal.32
                0x00000000c0020fd4                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020ff0       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021012       0x15 core/unixfile.32
 *fill*         0x00000000c0021027        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021028       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0021073        0x8 core/unixfile.32
 *fill*         0x00000000c002107b        0x1 
 .rodata.str1.4
                0x00000000c002107c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002109c       0x1c core/unixfile.32
                0x00000000c002109c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00210b8       0x1c core/unixfile.32
                0x00000000c00210b8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00210d4      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021368      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002148e       0x33 coreobjs/c++.32
 *fill*         0x00000000c00214c1        0x3 
 .rodata        0x00000000c00214c4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021614      0x169 dbg/usban.32
 *fill*         0x00000000c002177d        0x3 
 .rodata.str1.4
                0x00000000c0021780      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00218b7      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a52       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021a93        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a94       0x6c fs/vfs.32
                0x00000000c0021a94                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021b00       0x1c fs/vfs.32
                0x00000000c0021b00                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021b1c       0x1c fs/vfs.32
                0x00000000c0021b1c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b38       0x2c hal/bus.32
                0x00000000c0021b38                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b64       0x1e hal/clock.32
 *fill*         0x00000000c0021b82        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021b84       0x3c hal/clock.32
                0x00000000c0021b84                vtable for Clock
 .rodata        0x00000000c0021bc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021bf0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021c48       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021c48       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021c48       0x2c hal/device.32
                0x00000000c0021c48                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c74       0x2c hal/device.32
                0x00000000c0021c74                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021ca0       0x2c hal/diskctrl.32
                0x00000000c0021ca0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021ccc       0x38 hal/diskphys.32
                0x00000000c0021ccc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021d04       0x3e hal/intctrl.32
 *fill*         0x00000000c0021d42        0x2 
 .rodata.str1.4
                0x00000000c0021d44       0x5d hal/intctrl.32
 .rodata        0x00000000c0021da1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021df4       0x34 hal/keybrd.32
                0x00000000c0021df4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021e28       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021e6c       0x2c hal/logidisk.32
                0x00000000c0021e6c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e98       0x2c hal/mouse.32
                0x00000000c0021e98                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ec4       0x34 hal/nic.32
                0x00000000c0021ec4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021ef8        0xb hal/partition.32
 *fill*         0x00000000c0021f03        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021f04       0x44 hal/serial.32
                0x00000000c0021f04                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f48       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f48        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f48       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f48       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021f48       0x30 hal/timer.32
                0x00000000c0021f48                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021f78       0x10 hal/vcache.32
                0x00000000c0021f78                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f88       0x93 hal/video.32
 *fill*         0x00000000c002201b        0x1 
 .rodata._ZTV5Video
                0x00000000c002201c       0x4c hal/video.32
                0x00000000c002201c                vtable for Video
 .rodata.str1.1
                0x00000000c0022068      0x1ec hw/acpi.32
                                        0x206 (size before relaxing)
 .rodata.str1.4
                0x00000000c0022254       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00222ef       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00222ef        0x8 hw/acpi.32
 *fill*         0x00000000c00222ef        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00222f0       0x2c hw/acpi.32
                0x00000000c00222f0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002231c      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022497        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022498       0x2c hw/cpu.32
                0x00000000c0022498                vtable for CPU
 .rodata.str1.1
                0x00000000c00224c4       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022504       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022540       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00225d1       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002269a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00226e2       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c002270d       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0022783       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00227c8        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00227d2       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00227f3       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022889       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00228dd       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022909      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ad5       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022b2c      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022c3c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022c3c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022c3c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022c3c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022c3c       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022cfe        0x2 
 .rodata        0x00000000c0022d00       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022d30      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022ecf        0x1 
 .rodata.str1.4
                0x00000000c0022ed0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022f43       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022f58       0x3c arch/i386/rtc.32
                0x00000000c0022f58                vtable for RTC
 .rodata.str1.1
                0x00000000c0022f94       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022fd5        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022fd8       0x6c fs/fat/vfslink.32
                0x00000000c0022fd8                vtable for FAT
 .rodata.str1.1
                0x00000000c0023044       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023044      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002317c       0x6c fs/iso9660/vfslink.32
                0x00000000c002317c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00231e8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002322c       0x34 hal/sound/sndcard.32
                0x00000000c002322c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023260       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002329f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00232d7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023378       0x2c hw/bus/pci.32
                0x00000000c0023378                vtable for PCI
 .rodata.str1.1
                0x00000000c00233a4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002342b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002342c       0x2c hw/diskctrl/ide.32
                0x00000000c002342c                vtable for IDE
 .rodata.str1.4
                0x00000000c0023458       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002347c       0x2c hw/diskctrl/satabus.32
                0x00000000c002347c                vtable for SATABus
 .rodata.str1.1
                0x00000000c00234a8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00234ba        0x2 
 .rodata._ZTV3ATA
                0x00000000c00234bc       0x38 hw/diskphys/ata.32
                0x00000000c00234bc                vtable for ATA
 .rodata.str1.1
                0x00000000c00234f4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023501        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023504       0x38 hw/diskphys/atapi.32
                0x00000000c0023504                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002353c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00235b8       0x38 hw/diskphys/sata.32
                0x00000000c00235b8                vtable for SATA
 .rodata.str1.1
                0x00000000c00235f0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00236da        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00236dc       0x38 hw/diskphys/satapi.32
                0x00000000c00236dc                vtable for SATAPI
 .rodata        0x00000000c0023714        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c002371c       0x2c hw/intctrl/apic.32
                0x00000000c002371c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023748       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023763        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023764       0x30 hw/timer/apictimer.32
                0x00000000c0023764                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023794       0x1d hw/timer/pit.32
 *fill*         0x00000000c00237b1        0x3 
 .rodata._ZTV3PIT
                0x00000000c00237b4       0x30 hw/timer/pit.32
                0x00000000c00237b4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00237e4      0xbbd
 *(.data)
 .data          0x00000000c00237e4        0x0 crti.32
 .data          0x00000000c00237e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00237e4                __dso_handle
 .data          0x00000000c00237e8        0x0 acpica/utclib.32
 .data          0x00000000c00237e8        0x0 core/malloc.32
 .data          0x00000000c00237e8        0x0 libk/ctype.32
 .data          0x00000000c00237e8        0x0 libk/string.32
 .data          0x00000000c00237e8        0x0 fs/fat/diskio.32
 .data          0x00000000c00237e8        0x0 fs/fat/ff.32
 .data          0x00000000c00237e8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00237e8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00237e8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00237e8        0x0 core/computer.32
 .data          0x00000000c00237e8        0x0 core/gdt.32
 .data          0x00000000c00237e8        0x0 core/idle.32
 .data          0x00000000c00237e8        0x0 core/idt.32
 .data          0x00000000c00237e8        0x4 core/kheap.32
 .data          0x00000000c00237ec        0x0 core/main.32
 .data          0x00000000c00237ec        0x4 core/physmgr.32
                0x00000000c00237ec                Phys::bitmap
 .data          0x00000000c00237f0        0x0 core/pipe.32
 *fill*         0x00000000c00237f0       0x10 
 .data          0x00000000c0023800       0x60 core/terminal.32
                0x00000000c0023800                VgaText::hiddenOut
                0x00000000c0023820                ansiToVGAMappings
 .data          0x00000000c0023860        0x0 core/tss.32
 .data          0x00000000c0023860        0x4 core/unixfile.32
                0x00000000c0023860                UnixFile::nextFd
 .data          0x00000000c0023864       0x15 core/virtmgr.32
                0x00000000c0023864                Virt::pageAllocPtr
                0x00000000c0023868                Virt::bitmap
                0x00000000c002386c                Virt::swapfileSectorsPerPage
                0x00000000c0023870                Virt::swapfileLength
                0x00000000c0023874                Virt::swapfileSector
                0x00000000c0023878                Virt::swapfileDrive
 *fill*         0x00000000c0023879        0x3 
 .data          0x00000000c002387c        0x4 coreobjs/c++.32
                0x00000000c002387c                __stack_chk_guard
 .data          0x00000000c0023880        0x0 dbg/kconsole.32
 .data          0x00000000c0023880       0x28 dbg/usban.32
                0x00000000c0023880                KiUsbanTypeMismatchTypes
 .data          0x00000000c00238a8        0x0 fs/symlink.32
 .data          0x00000000c00238a8        0x0 fs/vfs.32
 .data          0x00000000c00238a8        0x0 hal/bus.32
 .data          0x00000000c00238a8        0x0 hal/buzzer.32
 .data          0x00000000c00238a8        0x0 hal/clock.32
 .data          0x00000000c00238a8        0x0 hal/device.32
 .data          0x00000000c00238a8        0x0 hal/diskctrl.32
 .data          0x00000000c00238a8        0x0 hal/diskphys.32
 .data          0x00000000c00238a8        0x0 hal/fpu.32
 .data          0x00000000c00238a8        0x0 hal/intctrl.32
 .data          0x00000000c00238a8        0x0 hal/keybrd.32
 .data          0x00000000c00238a8        0x0 hal/logidisk.32
 .data          0x00000000c00238a8        0x0 hal/mouse.32
 .data          0x00000000c00238a8        0x0 hal/nic.32
 .data          0x00000000c00238a8        0x0 hal/partition.32
 .data          0x00000000c00238a8        0x0 hal/serial.32
 .data          0x00000000c00238a8        0x0 hal/timer.32
 .data          0x00000000c00238a8        0x0 hal/vcache.32
 .data          0x00000000c00238a8        0x0 hal/video.32
 .data          0x00000000c00238a8       0x10 hw/acpi.32
                0x00000000c00238a8                legacyIRQRemaps
 .data          0x00000000c00238b8        0x4 hw/cpu.32
                0x00000000c00238b8                lastCode
 .data          0x00000000c00238bc        0x0 krnl/atexit.32
 *fill*         0x00000000c00238bc        0x4 
 .data          0x00000000c00238c0      0x142 krnl/bootmsg.32
                0x00000000c00238c0                KiSplashScreen
 .data          0x00000000c0023a02        0x0 krnl/compat.32
 *fill*         0x00000000c0023a02       0x1e 
 .data          0x00000000c0023a20      0x400 krnl/crc32.32
                0x00000000c0023a20                KiPolyLookupCRC32
 .data          0x00000000c0023e20       0x4d krnl/env.32
                0x00000000c0023e20                defaultSysEnv
 .data          0x00000000c0023e6d        0x0 krnl/inlines.32
 .data          0x00000000c0023e6d        0x0 krnl/panic.32
 .data          0x00000000c0023e6d        0x0 krnl/powctrl.32
 .data          0x00000000c0023e6d        0x0 krnl/random.32
 .data          0x00000000c0023e6d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023e6d       0x13 
 .data          0x00000000c0023e80       0x4c krnl/signal.32
                0x00000000c0023e80                KiDefaultSignalHandlers
 *fill*         0x00000000c0023ecc       0x14 
 .data          0x00000000c0023ee0       0xfc krnl/syscalls.32
                0x00000000c0023ee0                systemCallHandlers
 .data          0x00000000c0023fdc        0x0 net/ethernet.32
 *fill*         0x00000000c0023fdc        0x4 
 .data          0x00000000c0023fe0      0x100 reg/cm.32
                0x00000000c0023fe0                CmComponents
 .data          0x00000000c00240e0        0x0 reg/registry.32
 .data          0x00000000c00240e0        0x0 sys/eject.32
 .data          0x00000000c00240e0        0x0 sys/exit.32
 .data          0x00000000c00240e0        0x0 sys/getcwd.32
 .data          0x00000000c00240e0        0x0 sys/getpid.32
 .data          0x00000000c00240e0        0x0 sys/getramdata.32
 .data          0x00000000c00240e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00240e0        0x0 sys/kill.32
 .data          0x00000000c00240e0        0x0 sys/loaddll.32
 .data          0x00000000c00240e0        0x0 sys/read.32
 .data          0x00000000c00240e0        0x0 sys/registersignal.32
 .data          0x00000000c00240e0        0x0 sys/registry.32
 .data          0x00000000c00240e0        0x0 sys/sbrk.32
 .data          0x00000000c00240e0        0x0 sys/setcwd.32
 .data          0x00000000c00240e0        0x0 sys/settime.32
 .data          0x00000000c00240e0        0x0 sys/symlink.32
 .data          0x00000000c00240e0        0x0 sys/timezone.32
 .data          0x00000000c00240e0        0x0 sys/truncate.32
 .data          0x00000000c00240e0        0x0 sys/write.32
 .data          0x00000000c00240e0        0x0 sys/wsbe.32
 .data          0x00000000c00240e0        0x0 sys/yield.32
 .data          0x00000000c00240e0        0x0 thr/elf.32
 .data          0x00000000c00240e0        0x4 thr/prcssthr.32
                0x00000000c00240e0                Thr::nextPID
 .data          0x00000000c00240e4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00240e4       0x1c 
 .data          0x00000000c0024100      0x2a0 arch/i386/hal.32
                0x00000000c0024100                exceptionNames
 .data          0x00000000c00243a0        0x0 arch/i386/pic.32
 .data          0x00000000c00243a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00243a0        0x0 arch/i386/vga.32
 .data          0x00000000c00243a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00243a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00243a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00243a0                recentDriveletter
 .data          0x00000000c00243a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00243a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00243a1        0x0 hw/bus/isa.32
 .data          0x00000000c00243a1        0x0 hw/bus/pci.32
 .data          0x00000000c00243a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00243a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00243a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00243a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00243a1        0x0 hw/timer/pit.32
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00243a1        0x0 crtn.32
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00243a4        0x0
 .got           0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00243a4        0x0
 .got.plt       0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00243a4        0x0
 .igot.plt      0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00243a4        0x0
 .tm_clone_table
                0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00243a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00243a1        0x3 
 .eh_frame      0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00243a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00243fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002443c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00244a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
