Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x218de
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x9b hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089cf                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a29        0x1 
 .text          0x00000000c0008a2a      0xe4e hal/clock.32
                0x00000000c0008a2a                KeLoadTimezoneStrings()
                0x00000000c0008db9                KeGetTimezoneStringFromID(int)
                0x00000000c0008e56                KeUpdateTimezone(char const*)
                0x00000000c0008f50                KeSetTimezone(char const*)
                0x00000000c0008fad                KeSetTimezone(int)
                0x00000000c0008fe0                KeLoadTimezone()
                0x00000000c000905a                Clock::Clock(char const*)
                0x00000000c000905a                Clock::Clock(char const*)
                0x00000000c0009090                Clock::~Clock()
                0x00000000c0009090                Clock::~Clock()
                0x00000000c00090b4                Clock::~Clock()
                0x00000000c00090de                Clock::timeInSecondsLocal()
                0x00000000c0009148                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091c8                KeDatetimeToSeconds(datetime_t)
                0x00000000c00094f6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095b8                KeSecondsToDatetime(unsigned long long)
                0x00000000c000984c                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009878      0x47a hal/device.32
                0x00000000c0009878                Device::hibernate()
                0x00000000c000987a                Device::wake()
                0x00000000c000987c                Device::detect()
                0x00000000c000987e                Device::disableLegacy()
                0x00000000c0009880                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009882                DriverlessDevice::close(int, int, void*)
                0x00000000c0009886                DriverlessDevice::detect()
                0x00000000c0009888                DriverlessDevice::open(int, int, void*)
                0x00000000c000989c                Device::~Device()
                0x00000000c000989c                Device::~Device()
                0x00000000c00098aa                Device::~Device()
                0x00000000c00098d2                Device::findAndLoadDriver()
                0x00000000c00098e0                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009906                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009946                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009970                Device::getParent()
                0x00000000c000997c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000999a                Device::addChild(Device*)
                0x00000000c00099de                Device::removeAllChildren()
                0x00000000c0009a24                Device::hibernateAll()
                0x00000000c0009a54                Device::wakeAll()
                0x00000000c0009a84                Device::detectAll()
                0x00000000c0009ab4                Device::disableLegacyAll()
                0x00000000c0009ab6                Device::loadDriversForAll()
                0x00000000c0009ab8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009aee                Device::setName(char const*)
                0x00000000c0009afc                Device::Device(char const*)
                0x00000000c0009afc                Device::Device(char const*)
                0x00000000c0009bf8                Device::getName()
                0x00000000c0009c02                Device::closeAll()
                0x00000000c0009c4e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c4e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c84                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009cc8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009cf2        0x2 
 .text          0x00000000c0009cf4       0x86 hal/diskctrl.32
                0x00000000c0009cf4                HardDiskController::HardDiskController(char const*)
                0x00000000c0009cf4                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d2c                HardDiskController::~HardDiskController()
                0x00000000c0009d2c                HardDiskController::~HardDiskController()
                0x00000000c0009d50                HardDiskController::~HardDiskController()
 .text          0x00000000c0009d7a       0xe2 hal/diskphys.32
                0x00000000c0009d7a                PhysicalDisk::eject()
                0x00000000c0009d7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009d7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009de6                PhysicalDisk::startCache()
                0x00000000c0009e0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e32                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009e5c        0x0 hal/fpu.32
 .text          0x00000000c0009e5c        0x0 hal/intctrl.32
 .text          0x00000000c0009e5c      0x874 hal/keybrd.32
                0x00000000c0009e5c                startGUI(void*)
                0x00000000c0009ec1                startGUIVESA(void*)
                0x00000000c0009f26                sendKeyToTerminal(unsigned char)
                0x00000000c0009ffc                sendKeyboardToken(KeyboardToken)
                0x00000000c000a4b8                clearInternalKeybuffer(VgaText*)
                0x00000000c000a4ed                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a646                Keyboard::Keyboard(char const*)
                0x00000000c000a646                Keyboard::Keyboard(char const*)
                0x00000000c000a682                Keyboard::~Keyboard()
                0x00000000c000a682                Keyboard::~Keyboard()
                0x00000000c000a6a6                Keyboard::~Keyboard()
 .text          0x00000000c000a6d0      0x3f8 hal/logidisk.32
                0x00000000c000a6d0                LogicalDisk::close(int, int, void*)
                0x00000000c000a6d4                LogicalDisk::~LogicalDisk()
                0x00000000c000a6d4                LogicalDisk::~LogicalDisk()
                0x00000000c000a6f8                LogicalDisk::~LogicalDisk()
                0x00000000c000a722                LogicalDisk::open(int, int, void*)
                0x00000000c000a736                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a76e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a7b4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a7b4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a874                LogicalDisk::assignDriveLetter()
                0x00000000c000a92e                LogicalDisk::mount()
                0x00000000c000a976                LogicalDisk::unmount()
                0x00000000c000a986                LogicalDisk::eject()
                0x00000000c000a99a                LogicalDisk::unassignDriveLetter()
                0x00000000c000a9f0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aa5c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000aac8       0x86 hal/mouse.32
                0x00000000c000aac8                Mouse::Mouse(char const*)
                0x00000000c000aac8                Mouse::Mouse(char const*)
                0x00000000c000ab00                Mouse::~Mouse()
                0x00000000c000ab00                Mouse::~Mouse()
                0x00000000c000ab24                Mouse::~Mouse()
 .text          0x00000000c000ab4e       0x90 hal/nic.32
                0x00000000c000ab4e                NIC::getMAC()
                0x00000000c000ab54                NIC::write(int, unsigned char*, int*)
                0x00000000c000ab5a                NIC::NIC(char const*)
                0x00000000c000ab5a                NIC::NIC(char const*)
                0x00000000c000ab90                NIC::~NIC()
                0x00000000c000ab90                NIC::~NIC()
                0x00000000c000abb4                NIC::~NIC()
 .text          0x00000000c000abde      0x33b hal/partition.32
                0x00000000c000abde                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ac86                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af19        0x3 
 .text          0x00000000c000af1c       0x86 hal/serial.32
                0x00000000c000af1c                Serial::Serial(char const*)
                0x00000000c000af1c                Serial::Serial(char const*)
                0x00000000c000af54                Serial::~Serial()
                0x00000000c000af54                Serial::~Serial()
                0x00000000c000af78                Serial::~Serial()
 *fill*         0x00000000c000afa2        0x2 
 .text          0x00000000c000afa4      0x230 hal/timer.32
                0x00000000c000afa4                Timer::Timer(char const*)
                0x00000000c000afa4                Timer::Timer(char const*)
                0x00000000c000afdc                Timer::~Timer()
                0x00000000c000afdc                Timer::~Timer()
                0x00000000c000b000                Timer::~Timer()
                0x00000000c000b02a                Timer::read()
                0x00000000c000b035                setupTimer(int)
                0x00000000c000b070                timerHandler(unsigned int)
 .text          0x00000000c000b1d4      0x60e hal/vcache.32
                0x00000000c000b1d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000b1d4                VCache::VCache(PhysicalDisk*)
                0x00000000c000b344                VCache::invalidateReadBuffer()
                0x00000000c000b354                VCache::writeWriteBuffer()
                0x00000000c000b3a0                VCache::~VCache()
                0x00000000c000b3a0                VCache::~VCache()
                0x00000000c000b3f8                VCache::~VCache()
                0x00000000c000b420                VCache::write(unsigned long long, int, void*)
                0x00000000c000b5ee                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b7e2      0x71d hal/video.32
                0x00000000c000b7e2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b82e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b89e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b92e                Video::clearScreen(unsigned int)
                0x00000000c000b962                Video::putpixel(int, int, unsigned int)
                0x00000000c000b970                Video::readPixelApprox(int, int)
                0x00000000c000b984                Video::Video(char const*)
                0x00000000c000b984                Video::Video(char const*)
                0x00000000c000b9ba                Video::~Video()
                0x00000000c000b9ba                Video::~Video()
                0x00000000c000b9de                Video::~Video()
                0x00000000c000ba08                Video::isMonochrome()
                0x00000000c000ba14                Video::getWidth()
                0x00000000c000ba20                Video::getHeight()
                0x00000000c000ba2c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bae8                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000be8e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000beff        0x1 
 .text          0x00000000c000bf00     0x1096 hw/acpi.32
                0x00000000c000bf00                ACPI::close(int, int, void*)
                0x00000000c000bf08                loadACPITables(unsigned char*)
                0x00000000c000c168                findRSDT(unsigned char*)
                0x00000000c000c2b4                findDataTable(unsigned char*, char*)
                0x00000000c000c328                scanMADT()
                0x00000000c000c780                ACPI::ACPI()
                0x00000000c000c780                ACPI::ACPI()
                0x00000000c000c7d4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c8d0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c99c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c9a4                ACPI::detectPCI()
                0x00000000c000cbb0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cbc8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cf96        0x2 
 .text          0x00000000c000cf98       0xea krnl/assert.32
                0x00000000c000cf98                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d082       0xb6 krnl/atexit.32
                0x00000000c000d082                KeInitialiseAtexit()
                0x00000000c000d0a1                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d0d5                KeExecuteAtexit()
 .text          0x00000000c000d138       0x9f krnl/bootmsg.32
                0x00000000c000d138                KeDisplaySplashScreen()
                0x00000000c000d167                KeSetBootMessage(char const*)
 .text          0x00000000c000d1d7       0x5f krnl/c++.32
                0x00000000c000d1d7                __cxa_atexit
                0x00000000c000d1da                __cxa_finalize
                0x00000000c000d1db                __stack_chk_fail
                0x00000000c000d211                __cxa_pure_virtual
                0x00000000c000d222                operator new[](unsigned long)
                0x00000000c000d227                operator delete(void*, unsigned long)
                0x00000000c000d22c                operator delete[](void*)
                0x00000000c000d231                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d236        0x2 
 .text          0x00000000c000d238       0x44 krnl/cdefs.32
                0x00000000c000d238                CUnlockScheduler
                0x00000000c000d250                CLockScheduler
                0x00000000c000d260                CPrintf
 .text          0x00000000c000d27c      0xd51 krnl/cm.32
                0x00000000c000d27c                CmOpen(char const*)
                0x00000000c000d39a                CmClose(Reghive_Tag*)
                0x00000000c000d3b0                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d3ec                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d463                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d4a2                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d4d4                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d510                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d538                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d559                CmExpand(Reghive_Tag*, int)
                0x00000000c000d5d4                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d65a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d74e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d886                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d8e7                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d917                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d94e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d978                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d9b8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000da5c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000da8a                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dc27                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dc74                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dcee                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dd41                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de05                zStrtok(char*, char const*)
                0x00000000c000de77                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000def8                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000df9b                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000dfcd        0x3 
 .text          0x00000000c000dfd0       0x1d krnl/compat.32
                0x00000000c000dfd0                Krnl::handlePowerButton()
                0x00000000c000dfe0                Krnl::handleSleepButton()
 *fill*         0x00000000c000dfed        0x1 
 .text          0x00000000c000dfee      0x2c3 krnl/computer.32
                0x00000000c000dfee                Computer::close(int, int, void*)
                0x00000000c000dff4                Computer::open(int, int, void*)
                0x00000000c000e0da                KeFirstTask()
                0x00000000c000e1fc                Computer::Computer()
                0x00000000c000e1fc                Computer::Computer()
                0x00000000c000e240                KePrepareShutdown()
                0x00000000c000e260                KeShutdown()
                0x00000000c000e284                KeSleep()
                0x00000000c000e290                KeRestart()
 .text          0x00000000c000e2b1       0x2b krnl/crc32.32
                0x00000000c000e2b1                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e2dc      0x5bf krnl/env.32
                0x00000000c000e2dc                EnvVarContainer::getEnv(char const*)
                0x00000000c000e31a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e3dc                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e3de                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e602                EnvVarContainer::__loadSystem()
                0x00000000c000e61c                EnvVarContainer::__loadUser()
                0x00000000c000e61e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e61e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e640                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e640                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e670                KeGetEnv(Process*, char const*)
                0x00000000c000e6d5                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e6ef                KeSetEnvUser(char const*, char const*)
                0x00000000c000e70e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e721                KeDeleteEnvSystem(char const*)
                0x00000000c000e722                KeDeleteEnvUser(char const*)
                0x00000000c000e723                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e724                KeNewProcessEnv(Process*)
                0x00000000c000e746                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e792                KeLoadSystemEnv()
                0x00000000c000e7c0                KeLoadUserEnv()
                0x00000000c000e7e6                KeFlushEnv()
                0x00000000c000e7e7                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e807                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e89b        0x1 
 .text          0x00000000c000e89c      0x361 krnl/fault.32
                0x00000000c000e89c                KeSetupInterrupts()
                0x00000000c000e914                int_handler
                0x00000000c000ea44                KeDisplayProgramFault(char const*)
                0x00000000c000ea94                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eae8                KePageFault(void*, void*)
                0x00000000c000eb4c                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eb5c                KeOtherFault(void*, void*)
                0x00000000c000eb90                KeOpcodeFault(void*, void*)
                0x00000000c000ebe4                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ebfd        0x1 
 .text          0x00000000c000ebfe      0x1db krnl/gdt.32
                0x00000000c000ebfe                GDTEntry::setBase(unsigned int)
                0x00000000c000ec1a                GDTEntry::setLimit(unsigned int)
                0x00000000c000ec38                GDT::GDT()
                0x00000000c000ec38                GDT::GDT()
                0x00000000c000ec4e                GDT::addEntry(GDTEntry)
                0x00000000c000ec70                GDT::getNumberOfEntries()
                0x00000000c000ec78                GDT::flush()
                0x00000000c000ec9a                GDT::setup()
 .text          0x00000000c000edd9       0x20 krnl/idle.32
                0x00000000c000edd9                idleFunction(void*)
 *fill*         0x00000000c000edf9        0x3 
 .text          0x00000000c000edfc      0x46c krnl/idt.32
                0x00000000c000edfc                IDTEntry::IDTEntry(bool)
                0x00000000c000edfc                IDTEntry::IDTEntry(bool)
                0x00000000c000ee76                IDTEntry::setOffset(unsigned int)
                0x00000000c000ee8c                IDT::IDT()
                0x00000000c000ee8c                IDT::IDT()
                0x00000000c000ee8e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ee96                IDT::addEntry(IDTEntry, int)
                0x00000000c000eeb0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eee8                IDT::flush()
                0x00000000c000ef02                IDT::setup()
 .text          0x00000000c000f268       0x9a krnl/inlines.32
                0x00000000c000f268                CPU::current()
                0x00000000c000f274                operator new(unsigned long)
                0x00000000c000f279                operator delete(void*)
                0x00000000c000f27e                disableIRQs()
                0x00000000c000f280                enableIRQs()
                0x00000000c000f282                lockScheduler()
                0x00000000c000f28a                unlockScheduler()
                0x00000000c000f29c                lockStuff()
                0x00000000c000f2aa                unlockStuff()
                0x00000000c000f2e7                Virt::getAKernelVAS()
                0x00000000c000f2ed                __not_memcpy
 .text          0x00000000c000f302      0x2ae krnl/intlformat.32
                0x00000000c000f302                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f4e4                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f506                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f528                KeSetLocale(klocale_t)
                0x00000000c000f53e                KeInitialiseLocale()
                0x00000000c000f5ac                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f5ad                KeFormatCurrency(char*, int, double)
                0x00000000c000f5ae                KeFormatNumber(char*, long long, long long)
                0x00000000c000f5af                KeFormatNumber(char*, double)
 .text          0x00000000c000f5b0      0x356 krnl/intops.32
                0x00000000c000f5b0                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f6cc                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f80c                KeGetDigitsInNumber(long long)
                0x00000000c000f878                KeItoa(unsigned long long, char*)
                0x00000000c000f8a8                KeItoa(long long, char*)
                0x00000000c000f8d8                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f906      0x204 krnl/kheap.32
                0x00000000c000f906                sbrk
                0x00000000c000f99a                sbrk_thunk
                0x00000000c000f9d0                mmap
                0x00000000c000fa2e                munmap
                0x00000000c000fa43                liballoc_lock()
                0x00000000c000fa51                liballoc_unlock()
                0x00000000c000fa69                liballoc_alloc(int)
                0x00000000c000fa81                liballoc_free(void*, int)
                0x00000000c000fa9c                realloc
                0x00000000c000fab0                malloc
                0x00000000c000fac0                free
                0x00000000c000fad0                rfree
                0x00000000c000fae0                calloc
 *fill*         0x00000000c000fb0a        0x2 
 .text          0x00000000c000fb0c      0x1d3 krnl/mailbox.32
                0x00000000c000fb0c                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fb6c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fbcc                KeMailboxCreate()
                0x00000000c000fc00                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fc64                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fcc8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fcdf       0xfd krnl/main.32
                0x00000000c000fcdf                KeEntryPoint
 .text          0x00000000c000fddc       0x1a krnl/mutex.32
                0x00000000c000fddc                Mutex::Mutex()
                0x00000000c000fddc                Mutex::Mutex()
 .text          0x00000000c000fdf6        0xc krnl/panic.32
                0x00000000c000fdf6                KePanic(char const*)
 .text          0x00000000c000fe02      0x666 krnl/physmgr.32
                0x00000000c000fe02                Phys::allocateDMA(unsigned long)
                0x00000000c000fef0                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ff2b                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff6b                Phys::getPageState(unsigned long)
                0x00000000c000ff87                Phys::freePage(unsigned long)
                0x00000000c000fff0                Phys::allocatePage()
                0x00000000c00100ce                Phys::allocateContiguousPages(int)
                0x00000000c0010149                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010181                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010468      0x271 krnl/pipe.32
                0x00000000c0010468                Pipe::isAtty()
                0x00000000c001046c                Pipe::~Pipe()
                0x00000000c001046c                Pipe::~Pipe()
                0x00000000c0010490                Pipe::~Pipe()
                0x00000000c00104b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001057c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010672                Pipe::Pipe(int)
                0x00000000c0010672                Pipe::Pipe(int)
 .text          0x00000000c00106d9      0x10c krnl/powctrl.32
                0x00000000c00106d9                KePowerThread(void*)
                0x00000000c001070b                KeChangePowerSettings(PowerSettings)
                0x00000000c0010721                KeUserIOReceived()
                0x00000000c001072c                KeHandlePowerButton()
                0x00000000c0010744                KeHandleSleepButton()
                0x00000000c001075c                KeSetupPowerManager()
 .text          0x00000000c00107e5       0x9b krnl/random.32
                0x00000000c00107e5                KeRand()
                0x00000000c0010825                KeSeedRand(unsigned int)
                0x00000000c001084e                KeInitRand()
 .text          0x00000000c0010880      0x1bc krnl/resolve.32
                0x00000000c0010880                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010a3c      0x415 krnl/semaphore.32
                0x00000000c0010a3c                Semaphore::Semaphore(int)
                0x00000000c0010a3c                Semaphore::Semaphore(int)
                0x00000000c0010a6c                Semaphore::tryAcquire()
                0x00000000c0010b40                Semaphore::assertLocked(char const*)
                0x00000000c0010bcc                Semaphore::acquire(int)
                0x00000000c0010d84                Semaphore::acquire()
                0x00000000c0010da0                Semaphore::release()
 .text          0x00000000c0010e51      0x3a8 krnl/signal.32
                0x00000000c0010e51                KiSigKill(int)
                0x00000000c0010e65                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010e66                KiDefaultSignalHandlerPause(int)
                0x00000000c0010e92                KiDefaultSignalHandlerResume(int)
                0x00000000c0010ebe                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010ec3                KeInitSignals()
                0x00000000c0010f35                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010f6b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010fec                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001111b                KiCheckSignalZ
                0x00000000c001116c                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00111a7                KiFinishSignalZ
 .text          0x00000000c00111f9      0xe1e krnl/syscalls.32
                0x00000000c00111f9                SysSeekDir(regs*)
                0x00000000c00111fe                SysTellDir(regs*)
                0x00000000c0011203                SysVerify(regs*)
                0x00000000c001120d                SysGetArgc(regs*)
                0x00000000c0011221                SysTTYName(regs*)
                0x00000000c0011229                SysFormatDisk(regs*)
                0x00000000c0011290                SysSetDiskVolumeLabel(regs*)
                0x00000000c00112e4                SysGetDiskVolumeLabel(regs*)
                0x00000000c001133d                SysRealpath(regs*)
                0x00000000c001138b                SysReadDir(regs*)
                0x00000000c001140b                SysIsATTY(regs*)
                0x00000000c0011465                SysSeek(regs*)
                0x00000000c00114c3                SysTell(regs*)
                0x00000000c0011538                SysSize(regs*)
                0x00000000c00115b2                SysSizeFromFilename(regs*)
                0x00000000c00116e5                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011818                SysClose(regs*)
                0x00000000c001187d                SysOpenDir(regs*)
                0x00000000c00118fa                SysMakeDir(regs*)
                0x00000000c0011968                SysCloseDir(regs*)
                0x00000000c00119bc                SysWait(regs*)
                0x00000000c00119dd                SysNotImpl(regs*)
                0x00000000c00119f8                SysPanic(regs*)
                0x00000000c0011a13                SysRmdir(regs*)
                0x00000000c0011a71                SysUnlink(regs*)
                0x00000000c0011acf                SysGetArgv(regs*)
                0x00000000c0011b1c                SysUSleep(regs*)
                0x00000000c0011b46                SysSpawn(regs*)
                0x00000000c0011bb7                SysGetEnv(regs*)
                0x00000000c0011c6c                SysSetFatAttrib(regs*)
                0x00000000c0011cd5                SysShutdown(regs*)
                0x00000000c0011d32                SysPipe(regs*)
                0x00000000c0011d77                SysGetUnixTime(regs*)
                0x00000000c0011d8b                string_ends_with(char const*, char const*)
                0x00000000c0011dd6                SysOpen(regs*)
                0x00000000c0011fd5                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012017        0x1 
 .text          0x00000000c0012018      0xadd krnl/terminal.32
                0x00000000c0012018                VgaText::isAtty()
                0x00000000c001201c                VgaText::~VgaText()
                0x00000000c001201c                VgaText::~VgaText()
                0x00000000c0012040                VgaText::~VgaText()
                0x00000000c001206a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001208a                setTerminalScrollLock(bool)
                0x00000000c001208b                doTerminalCycle()
                0x00000000c001208c                addToTerminalCycle(VgaText*)
                0x00000000c001208d                scrollTerminalScrollLock(int)
                0x00000000c001208e                VgaText::updateTitle()
                0x00000000c0012090                VgaText::load()
                0x00000000c0012092                VgaText::updateCursor()
                0x00000000c00120a8                VgaText::doANSI_SGR(int)
                0x00000000c001211c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001212c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001213c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001215c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0012168                VgaText::setTitleColour(VgaColour)
                0x00000000c0012174                VgaText::setTitle(char*)
                0x00000000c0012176                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0012188                VgaText::scrollScreen()
                0x00000000c001221a                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001222a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00122d6                VgaText::getCursorX()
                0x00000000c00122de                VgaText::getCursorY()
                0x00000000c00122e6                VgaText::setCursor(int, int)
                0x00000000c00122fd                setActiveTerminal(VgaText*)
                0x00000000c0012348                VgaText::clearScreen()
                0x00000000c0012396                VgaText::setCursorX(int)
                0x00000000c00123ae                VgaText::setCursorY(int)
                0x00000000c00123c6                VgaText::incrementCursor(bool)
                0x00000000c001241a                VgaText::decrementCursor(bool)
                0x00000000c001243c                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001250c                VgaText::putchar(char)
                0x00000000c00125f4                VgaText::putx(unsigned int)
                0x00000000c001263a                VgaText::puts(char const*)
                0x00000000c0012660                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00126ac                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012826                VgaText::VgaText(char const*)
                0x00000000c0012826                VgaText::VgaText(char const*)
                0x00000000c0012986                VgaText::receiveKey(unsigned char)
                0x00000000c0012af4                VgaText::doUpdate()
 *fill*         0x00000000c0012af5        0x3 
 .text          0x00000000c0012af8      0x224 krnl/tss.32
                0x00000000c0012af8                TSS::TSS()
                0x00000000c0012af8                TSS::TSS()
                0x00000000c0012b08                TSS::setESP(unsigned long)
                0x00000000c0012b1c                TSS::flush()
                0x00000000c0012b3c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012d1c      0x4dc krnl/unixfile.32
                0x00000000c0012d1c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012d72                ReservedFilename::isAtty()
                0x00000000c0012d8e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012dec                UnixFile::getFileDescriptor()
                0x00000000c0012df4                UnixFile::UnixFile(int)
                0x00000000c0012df4                UnixFile::UnixFile(int)
                0x00000000c0012fa8                ReservedFilename::ReservedFilename(int)
                0x00000000c0012fa8                ReservedFilename::ReservedFilename(int)
                0x00000000c0012fda                UnixFile::~UnixFile()
                0x00000000c0012fda                UnixFile::~UnixFile()
                0x00000000c0013076                UnixFile::~UnixFile()
                0x00000000c001309e                ReservedFilename::~ReservedFilename()
                0x00000000c001309e                ReservedFilename::~ReservedFilename()
                0x00000000c00130c2                ReservedFilename::~ReservedFilename()
                0x00000000c00130e9                KeGetFileFromDescriptor(int)
 .text          0x00000000c00131f8     0x14be krnl/virtmgr.32
                0x00000000c00131f8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013232                Virt::getPageState(unsigned long)
                0x00000000c0013255                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013371                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013394                Virt::swapIDToSector(unsigned long)
                0x00000000c00133aa                Virt::allocateSwapfilePage()
                0x00000000c0013429                Virt::virtualMemorySetup()
                0x00000000c001347a                Virt::setupPageSwapping(int)
                0x00000000c00134ec                VAS::setCPUSpecific(unsigned long)
                0x00000000c00134ee                VAS::VAS(VAS*)
                0x00000000c00134ee                VAS::VAS(VAS*)
                0x00000000c0013506                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013534                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013553                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013690                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00136b4                VAS::virtualToPhysical(unsigned long)
                0x00000000c00136ce                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013710                VAS::VAS()
                0x00000000c0013710                VAS::VAS()
                0x00000000c001377a                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c001379a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00137c6                VAS::~VAS()
                0x00000000c00137c6                VAS::~VAS()
                0x00000000c001392e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013a36                VAS::allocatePages(int, int)
                0x00000000c0013b28                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013b82                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013c72                VAS::VAS(bool)
                0x00000000c0013c72                VAS::VAS(bool)
                0x00000000c0013e5a                VAS::evict(unsigned long)
                0x00000000c0013f5e                VAS::canLockPage(unsigned long)
                0x00000000c0013f78                VAS::unlockPage(unsigned long)
                0x00000000c0013fac                VAS::canLockPages(unsigned long, int)
                0x00000000c0013fe8                VAS::unlockPages(unsigned long, int)
                0x00000000c0014024                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014334                VAS::lockPage(unsigned long)
                0x00000000c00143a6                VAS::lockPages(unsigned long, int)
                0x00000000c00143e2                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014456                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0014482                VAS::scanForEviction()
                0x00000000c00145bb                mapVASFirstTime
 .text          0x00000000c00146b6       0x2f sys/alarm.32
                0x00000000c00146b6                SysAlarm(regs*)
 .text          0x00000000c00146e5       0x36 sys/eject.32
                0x00000000c00146e5                SysEject(regs*)
 .text          0x00000000c001471b       0x18 sys/exit.32
                0x00000000c001471b                SysExit(regs*)
 .text          0x00000000c0014733       0x1f sys/getcwd.32
                0x00000000c0014733                SysGetCwd(regs*)
 .text          0x00000000c0014752       0x26 sys/getpid.32
                0x00000000c0014752                SysGetPID(regs*)
 .text          0x00000000c0014778       0x21 sys/getramdata.32
                0x00000000c0014778                SysGetRAMData(regs*)
 .text          0x00000000c0014799       0x97 sys/getvgaptr.32
                0x00000000c0014799                SysGetVGAPtr(regs*)
 .text          0x00000000c0014830       0xb9 sys/kill.32
                0x00000000c0014830                SysKill(regs*)
 .text          0x00000000c00148e9       0xa8 sys/loaddll.32
                0x00000000c00148e9                SysLoadDLL(regs*)
 .text          0x00000000c0014991       0x12 sys/pause.32
                0x00000000c0014991                SysPause(regs*)
 .text          0x00000000c00149a3       0x49 sys/pthread.32
                0x00000000c00149a3                SysPthreadCreate(regs*)
                0x00000000c00149bb                SysPthreadGetTID(regs*)
                0x00000000c00149c5                SysInternalPthreadGetContext(regs*)
                0x00000000c00149ca                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c00149cf                SysPthreadJoin(regs*)
                0x00000000c00149d4                SysPthreadExit(regs*)
 .text          0x00000000c00149ec       0x68 sys/read.32
                0x00000000c00149ec                SysRead(regs*)
 .text          0x00000000c0014a54       0x29 sys/registersignal.32
                0x00000000c0014a54                SysRegisterSignal(regs*)
 .text          0x00000000c0014a7d      0x1cc sys/registry.32
                0x00000000c0014a7d                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014ac1                SysRegistryReadExtent(regs*)
                0x00000000c0014b09                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014b20                SysRegistryEnterDirectory(regs*)
                0x00000000c0014b37                SysRegistryGetNext(regs*)
                0x00000000c0014b4e                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014b88                SysRegistryOpen(regs*)
                0x00000000c0014b9c                SysRegistryClose(regs*)
                0x00000000c0014bb3                SysRegistryEasyReadString(regs*)
                0x00000000c0014bff                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014c49       0x55 sys/sbrk.32
                0x00000000c0014c49                SysSbrk(regs*)
 .text          0x00000000c0014c9e       0x1c sys/setcwd.32
                0x00000000c0014c9e                SysSetCwd(regs*)
 .text          0x00000000c0014cba       0xf1 sys/settime.32
                0x00000000c0014cba                SysSetTime(regs*)
 .text          0x00000000c0014dab       0x73 sys/symlink.32
                0x00000000c0014dab                SysSymlink(regs*)
 .text          0x00000000c0014e1e       0x3e sys/timezone.32
                0x00000000c0014e1e                SysTimezone(regs*)
 .text          0x00000000c0014e5c       0xfc sys/truncate.32
                0x00000000c0014e5c                SysTruncate(regs*)
 .text          0x00000000c0014f58       0x68 sys/write.32
                0x00000000c0014f58                SysWrite(regs*)
 .text          0x00000000c0014fc0       0x9d sys/wsbe.32
                0x00000000c0014fc0                SysWsbe(regs*)
 .text          0x00000000c001505d       0x28 sys/yield.32
                0x00000000c001505d                SysYield(regs*)
 *fill*         0x00000000c0015085        0x3 
 .text          0x00000000c0015088      0x1a7 thr/alarm.32
                0x00000000c0015088                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015180                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c001522f     0x1228 thr/elf.32
                0x00000000c001522f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00154ba                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00156d9                Thr::runtimeReferenceHelper()
                0x00000000c00156ec                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001573b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00159f9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001613a                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001616c                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00161a3                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00161bd                Thr::loadDLL(char const*, bool)
                0x00000000c001641e                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016457       0x5a thr/exec.32
                0x00000000c0016457                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c00164b1        0x3 
 .text          0x00000000c00164b4     0x1241 thr/prcssthr.32
                0x00000000c00164b4                userModeEntryPoint(void*)
                0x00000000c00164e0                changeTSS
                0x00000000c0016510                switchToThread(ThreadControlBlock*)
                0x00000000c00165d0                Process::addArgs(char**)
                0x00000000c001663c                Process::Process(char const*, Process*, char**)
                0x00000000c001663c                Process::Process(char const*, Process*, char**)
                0x00000000c0016864                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016864                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016a50                taskStartupFunction
                0x00000000c0016a5c                KeDisablePreemption()
                0x00000000c0016a84                KeRestorePreemption()
                0x00000000c0016aa4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016bcc                Process::createUserThread()
                0x00000000c0016bec                setupMultitasking(void (*)())
                0x00000000c0016d24                schedule()
                0x00000000c0016db8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016de4                blockTask(TaskState)
                0x00000000c0016e20                waitTask(int, int*, int)
                0x00000000c0016e64                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016f18                milliTenthSleep(unsigned long long)
                0x00000000c0016f30                sleep(unsigned long long)
                0x00000000c0016f50                sleep(unsigned int)
                0x00000000c0016f68                milliTenthSleep(unsigned int)
                0x00000000c0016f88                taskReturned
                0x00000000c0016fd0                Thr::processFromPID(int)
                0x00000000c001707c                unblockTask(ThreadControlBlock*)
                0x00000000c0017130                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017400                cleanerTaskFunction(void*)
                0x00000000c0017518                terminateTask(int)
                0x00000000c0017628                Thr::terminateFromIRQ(int)
 .text          0x00000000c00176f5      0xd18 vm86/vm8086.32
                0x00000000c00176f5                Vm::inbv(unsigned short)
                0x00000000c0017708                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001773e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001774e                Vm::getSegment(unsigned int)
                0x00000000c0017756                Vm::getOffset(unsigned int)
                0x00000000c001775b                Vm::mainloop2()
                0x00000000c0017795                Vm::mainVm8086Loop(void*)
                0x00000000c00177a8                Vm::mainloop3(unsigned long)
                0x00000000c00177ce                Vm::initialise8086()
                0x00000000c0017811                Vm::resetConventionalMemory8086()
                0x00000000c0017812                Vm::finish8086()
                0x00000000c0017874                Vm::getOutput8086(unsigned char*)
                0x00000000c0017899                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00179c6                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017bd2                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017c6f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017c80                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017c92                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017ca3                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017cb8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017cce                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017ce3                Vm::faultHandler(regs*)
 *fill*         0x00000000c001840d        0x1 
 .text          0x00000000c001840e     0x1ee9 arch/i386/hal.32
                0x00000000c001840e                noCopro(unsigned long)
                0x00000000c0018410                CPU::close(int, int, void*)
                0x00000000c0018413                x86ReadCMOS(unsigned char)
                0x00000000c0018467                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00184c9                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00184e8                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018505                AMD_K6_writeback(int, int, int)
                0x00000000c00185c5                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018663                cpuidCheckEDX(unsigned int)
                0x00000000c0018690                cpuidCheckECX(unsigned int)
                0x00000000c00186be                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00186ec                cpuidCheckExtendedECX(unsigned int)
                0x00000000c001871a                HalDetectFeatures()
                0x00000000c00194e5                HalEnableNMI()
                0x00000000c00194f8                HalDisableNMI()
                0x00000000c001950b                HalGetNMIState()
                0x00000000c0019511                x86rdmsr(unsigned int)
                0x00000000c001954f                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019594                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c00195aa                HalFindRSDP()
                0x00000000c001963f                HalHandlePageFault(void*, void*)
                0x00000000c00196ec                HalHandleOpcodeFault(void*, void*)
                0x00000000c001972e                HalDisplayDebugInfo(void*)
                0x00000000c0019abc                HalReceivedNMI()
                0x00000000c0019b57                HalSystemIdle()
                0x00000000c0019bb6                i386SaveCoprocessor(void*)
                0x00000000c0019bca                i386LoadCoprocessor(void*)
                0x00000000c0019bde                x87EmulHandler(regs*, void*)
                0x00000000c0019c7b                HalInitialiseCoprocessor()
                0x00000000c0019cff                HalPanic(char const*)
                0x00000000c0019e13                HalQueryPerformanceCounter()
                0x00000000c0019e23                HalInitialise()
                0x00000000c0019fb5                HalMakeBeep(int)
                0x00000000c0019fef                HalGetRand()
                0x00000000c0019ff2                HalEndOfInterrupt(int)
                0x00000000c001a01d                HalRestart()
                0x00000000c001a01e                HalShutdown()
                0x00000000c001a01f                HalSleep()
                0x00000000c001a020                CPU::CPU()
                0x00000000c001a020                CPU::CPU()
                0x00000000c001a0a4                CPU::setupSMEP()
                0x00000000c001a0b0                CPU::setupUMIP()
                0x00000000c001a0ba                CPU::setupTSC()
                0x00000000c001a0c4                CPU::setupLargePages()
                0x00000000c001a0ce                CPU::setupPAT()
                0x00000000c001a100                CPU::setupMTRR()
                0x00000000c001a102                CPU::setupGlobalPages()
                0x00000000c001a10c                CPU::allowUsermodeDataAccess()
                0x00000000c001a11a                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a128                CPU::setupSMAP()
                0x00000000c001a136                CPU::setupFeatures()
                0x00000000c001a202                CPU::open(int, int, void*)
 .text          0x00000000c001a2f7      0x268 arch/i386/intctrl.32
                0x00000000c001a2f7                convertLegacyIRQNumber(int)
                0x00000000c001a333                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a37d                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a4ba                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a4ee                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a55f        0x1 
 .text          0x00000000c001a560      0x2dc arch/i386/pic.32
                0x00000000c001a560                picIoWait()
                0x00000000c001a568                picDisable()
                0x00000000c001a59c                picGetIRQReg(int)
                0x00000000c001a618                picOpen()
                0x00000000c001a79c                picEOI(int)
 .text          0x00000000c001a83c      0x5ed arch/i386/rtc.32
                0x00000000c001a83c                RTC::open(int, int, void*)
                0x00000000c001a840                RTC::close(int, int, void*)
                0x00000000c001a844                RTC::timeInSecondsUTC()
                0x00000000c001a856                RTC::timeInDatetimeUTC()
                0x00000000c001a87c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001a8ba                RTC::~RTC()
                0x00000000c001a8ba                RTC::~RTC()
                0x00000000c001a8de                RTC::~RTC()
                0x00000000c001a908                RTC::get_update_in_progress_flag()
                0x00000000c001a91c                RTC::completeRTCRefresh()
                0x00000000c001abca                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001ad40                rtcIRQHandler(regs*, void*)
                0x00000000c001ad80                RTC::RTC()
                0x00000000c001ad80                RTC::RTC()
 *fill*         0x00000000c001ae29        0x3 
 .text          0x00000000c001ae2c      0x1f4 arch/i386/vga.32
                0x00000000c001ae2c                HalConsoleScroll(int, int)
                0x00000000c001af34                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001af98                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b020     0x14f3 fs/fat/vfslink.32
                0x00000000c001b020                FAT::getName()
                0x00000000c001b028                FAT::tell(void*, unsigned long long*)
                0x00000000c001b064                FAT::stat(void*, unsigned long long*)
                0x00000000c001b0a0                FAT::~FAT()
                0x00000000c001b0a0                FAT::~FAT()
                0x00000000c001b0c4                FAT::~FAT()
                0x00000000c001b0ec                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b190                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b270                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b454                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b670                FAT::allocateSwapfile(char const*, int)
                0x00000000c001b830                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b9a0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001ba00                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001ba60                FAT::close(void*)
                0x00000000c001bab4                FAT::closeDir(void*)
                0x00000000c001bb08                FAT::truncate(void*, unsigned long long)
                0x00000000c001bb74                FAT::seek(void*, unsigned long long)
                0x00000000c001bbcc                fatWrapperReadDisk
                0x00000000c001bc0c                fatWrapperWriteDisk
                0x00000000c001bc4c                fatWrapperIoctl
                0x00000000c001bd6c                FAT::FAT()
                0x00000000c001bd6c                FAT::FAT()
                0x00000000c001bdc4                FAT::fixFilepath(char*)
                0x00000000c001be04                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001bf78                FAT::openDir(char const*, void**)
                0x00000000c001c028                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c120                FAT::unlink(char const*)
                0x00000000c001c1a0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c358                FAT::rename(char const*, char const*)
                0x00000000c001c424                FAT::mkdir(char const*)
                0x00000000c001c4a4                FAT::exists(char const*)
 *fill*         0x00000000c001c513        0x1 
 .text          0x00000000c001c514       0x94 fs/iso9660/helper.32
                0x00000000c001c514                isoReadDiscSectorHelper
                0x00000000c001c570                iso_kprintf
                0x00000000c001c58c                iso_kprintfd
 .text          0x00000000c001c5a8      0x71a fs/iso9660/vfslink.32
                0x00000000c001c5a8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c5ae                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c5b4                ISO9660::getName()
                0x00000000c001c5ba                ISO9660::closeDir(void*)
                0x00000000c001c5c4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c5ca                ISO9660::unlink(char const*)
                0x00000000c001c5d0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c5d6                ISO9660::rename(char const*, char const*)
                0x00000000c001c5dc                ISO9660::mkdir(char const*)
                0x00000000c001c5e2                ISO9660::~ISO9660()
                0x00000000c001c5e2                ISO9660::~ISO9660()
                0x00000000c001c606                ISO9660::~ISO9660()
                0x00000000c001c62e                ISO9660::exists(char const*)
                0x00000000c001c642                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c728                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c770                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c7b2                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c7f0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c842                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c984                ISO9660::close(void*)
                0x00000000c001c9b4                ISO9660::openDir(char const*, void**)
                0x00000000c001ca8e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cba9                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001cc28                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cc9a                ISO9660::ISO9660()
                0x00000000c001cc9a                ISO9660::ISO9660()
 .text          0x00000000c001ccc2      0x26c hal/sound/sndcard.32
                0x00000000c001ccc2                SoundCard::beginPlayback()
                0x00000000c001ccd0                SoundCard::stopPlayback()
                0x00000000c001ccde                SoundCard::SoundCard(char const*)
                0x00000000c001ccde                SoundCard::SoundCard(char const*)
                0x00000000c001cd7c                SoundCard::~SoundCard()
                0x00000000c001cd7c                SoundCard::~SoundCard()
                0x00000000c001cda0                SoundCard::~SoundCard()
                0x00000000c001cdca                SoundCard::configureRates(int, int, int)
                0x00000000c001cdfa                SoundCard::getSamples16(int, short*)
                0x00000000c001ce56                SoundCard::getSamples32(int, int*)
                0x00000000c001cedc                SoundCard::addChannel(SoundPort*)
                0x00000000c001cf1a                SoundCard::removeChannel(int)
 *fill*         0x00000000c001cf2e        0x2 
 .text          0x00000000c001cf30      0x42f hal/sound/sndport.32
                0x00000000c001cf30                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cf30                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cfbc                SoundPort::~SoundPort()
                0x00000000c001cfbc                SoundPort::~SoundPort()
                0x00000000c001cff0                SoundPort::unpause()
                0x00000000c001cffc                SoundPort::pause()
                0x00000000c001d008                SoundPort::getBufferUsed()
                0x00000000c001d010                SoundPort::getBufferSize()
                0x00000000c001d018                SoundPort::buffer8(signed char*, int)
                0x00000000c001d0ac                SoundPort::buffer16(short*, int)
                0x00000000c001d140                SoundPort::buffer32(int*, int)
                0x00000000c001d1cc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d29c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d35f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001d35f        0x1 
 .text          0x00000000c001d360      0xc25 hw/bus/pci.32
                0x00000000c001d360                PCI::open(int, int, void*)
                0x00000000c001d37e                PCI::close(int, int, void*)
                0x00000000c001d382                PCI::PCI()
                0x00000000c001d382                PCI::PCI()
                0x00000000c001d41a                PCI::readBAR8(unsigned int, int)
                0x00000000c001d436                PCI::readBAR16(unsigned int, int)
                0x00000000c001d454                PCI::readBAR32(unsigned int, int)
                0x00000000c001d470                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d490                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d4b2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d4d2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d548                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d5f2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d616                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d63e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d688                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d6b0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d6d4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d6f8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d720                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d784                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d86a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001db34                PCI::checkBus(unsigned char)
                0x00000000c001db58                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001dd3e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001deba                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001df2c                PCI::detect()
 *fill*         0x00000000c001df85        0x1 
 .text          0x00000000c001df86      0xe52 hw/diskctrl/ide.32
                0x00000000c001df86                IDE::close(int, int, void*)
                0x00000000c001df8a                IDE::IDE()
                0x00000000c001df8a                IDE::IDE()
                0x00000000c001dfbe                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dfd0                selectDrive(unsigned char, unsigned char)
                0x00000000c001dfd2                IDE::getBase(unsigned char)
                0x00000000c001dfe4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0a4                IDE::read(unsigned char, unsigned char)
                0x00000000c001e158                IDE::waitInterrupt(unsigned char)
                0x00000000c001e1bb                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e1d7                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e1f4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e23e                IDE::open(int, int, void*)
                0x00000000c001e796                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e866                IDE::detect()
                0x00000000c001ecca                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001ed84                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001edd8      0x33f hw/diskctrl/satabus.32
                0x00000000c001edd8                SATABus::close(int, int, void*)
                0x00000000c001eddc                SATABus::detect()
                0x00000000c001edde                SATABus::SATABus()
                0x00000000c001edde                SATABus::SATABus()
                0x00000000c001ee64                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ee96                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eede                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001eefe                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ef28                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f03a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f0e4                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f117        0x1 
 .text          0x00000000c001f118      0x7c1 hw/diskphys/ata.32
                0x00000000c001f118                ATA::close(int, int, void*)
                0x00000000c001f13c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f13e                ATA::ATA()
                0x00000000c001f13e                ATA::ATA()
                0x00000000c001f16c                ATA::flush(bool)
                0x00000000c001f1ba                ATA::readyForCommand()
                0x00000000c001f206                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f60e                ATA::read(unsigned long long, int, void*)
                0x00000000c001f65a                ATA::write(unsigned long long, int, void*)
                0x00000000c001f6a6                ATA::detectCHS()
                0x00000000c001f6d0                ATA::open(int, int, void*)
                0x00000000c001f8bb                combineCharAndColour(char, unsigned char)
                0x00000000c001f8cc                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001f8d9        0x1 
 .text          0x00000000c001f8da      0x612 hw/diskphys/atapi.32
                0x00000000c001f8da                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f8e0                ATAPI::close(int, int, void*)
                0x00000000c001f904                ATAPI::ATAPI()
                0x00000000c001f904                ATAPI::ATAPI()
                0x00000000c001f932                ATAPI::readyForCommand()
                0x00000000c001f984                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001fc44                ATAPI::diskRemoved()
                0x00000000c001fc7e                ATAPI::eject()
                0x00000000c001fcc6                ATAPI::diskInserted()
                0x00000000c001fcd2                ATAPI::detectMedia()
                0x00000000c001fd92                ATAPI::open(int, int, void*)
                0x00000000c001fe72                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001feec      0x44a hw/diskphys/sata.32
                0x00000000c001feec                SATA::close(int, int, void*)
                0x00000000c001ff10                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ff12                SATA::open(int, int, void*)
                0x00000000c001ffca                SATA::SATA()
                0x00000000c001ffca                SATA::SATA()
                0x00000000c001fff8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002027e                SATA::read(unsigned long long, int, void*)
                0x00000000c00202ca                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020336      0x5dc hw/diskphys/satapi.32
                0x00000000c0020336                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002033c                SATAPI::close(int, int, void*)
                0x00000000c0020360                SATAPI::SATAPI()
                0x00000000c0020360                SATAPI::SATAPI()
                0x00000000c002038e                SATAPI::diskRemoved()
                0x00000000c0020390                SATAPI::diskInserted()
                0x00000000c00203ac                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020696                SATAPI::eject()
                0x00000000c00206d2                SATAPI::detectMedia()
                0x00000000c0020728                SATAPI::open(int, int, void*)
                0x00000000c0020828                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020912      0x443 hw/intctrl/apic.32
                0x00000000c0020912                IOAPIC::close(int, int, void*)
                0x00000000c0020918                apicGetBase()
                0x00000000c0020936                IOAPIC::IOAPIC()
                0x00000000c0020936                IOAPIC::IOAPIC()
                0x00000000c002095e                apicOpen()
                0x00000000c0020aea                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020b1c                IOAPIC::read(int)
                0x00000000c0020b44                IOAPIC::open(int, int, void*)
                0x00000000c0020c2a                IOAPIC::write(int, int)
                0x00000000c0020c56                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020d55        0x3 
 .text          0x00000000c0020d58       0xf0 hw/timer/apictimer.32
                0x00000000c0020d58                APICTimer::close(int, int, void*)
                0x00000000c0020d60                apicTimerHandler(regs*, void*)
                0x00000000c0020d88                APICTimer::open(int, int, void*)
                0x00000000c0020df8                APICTimer::write(int)
                0x00000000c0020e20                APICTimer::APICTimer()
                0x00000000c0020e20                APICTimer::APICTimer()
 .text          0x00000000c0020e48      0x1ad hw/timer/pit.32
                0x00000000c0020e48                PIT::write(int)
                0x00000000c0020ecc                pitHandler(regs*, void*)
                0x00000000c0020ef4                PIT::open(int, int, void*)
                0x00000000c0020f44                PIT::close(int, int, void*)
                0x00000000c0020f74                PIT::PIT()
                0x00000000c0020f74                PIT::PIT()
 *fill*         0x00000000c0020ff5        0xb 
 .text          0x00000000c0021000       0x6f arch/i386/avx.32
                0x00000000c0021000                avxDetect
                0x00000000c002102a                avxSave
                0x00000000c002103b                avxLoad
                0x00000000c002104c                avxInit
                0x00000000c002106e                avxClose
 *fill*         0x00000000c002106f        0x1 
 .text          0x00000000c0021070      0x2b4 arch/i386/interrupt.32
                0x00000000c0021070                isr0
                0x00000000c0021080                isr1
                0x00000000c002108a                isr2
                0x00000000c0021094                isr3
                0x00000000c002109e                isr4
                0x00000000c00210a8                isr5
                0x00000000c00210b2                isr6
                0x00000000c00210bc                isr7
                0x00000000c00210c6                isr8
                0x00000000c00210ce                isr9
                0x00000000c00210d8                isr10
                0x00000000c00210e0                isr11
                0x00000000c00210e8                isr12
                0x00000000c00210f0                isr13
                0x00000000c002110a                isr14
                0x00000000c0021112                isr15
                0x00000000c002111c                isr16
                0x00000000c0021126                isr17
                0x00000000c0021130                isr18
                0x00000000c002113a                irq3
                0x00000000c0021144                irq4
                0x00000000c002114e                irq5
                0x00000000c0021158                irq6
                0x00000000c0021162                irq7
                0x00000000c002116c                irq8
                0x00000000c0021176                irq9
                0x00000000c0021180                irq10
                0x00000000c002118a                irq11
                0x00000000c0021194                irq12
                0x00000000c002119e                irq13
                0x00000000c00211a8                irq14
                0x00000000c00211b2                irq15
                0x00000000c00211bc                irq1
                0x00000000c00211c3                irq2
                0x00000000c00211ca                isr96
                0x00000000c00211d1                irq0
                0x00000000c00211d6                int_common_stub
                0x00000000c00211d6                syscall_common_stub
                0x00000000c00212d4                irq16
                0x00000000c00212de                irq17
                0x00000000c00212e8                irq18
                0x00000000c00212f2                irq19
                0x00000000c00212fc                irq20
                0x00000000c0021306                irq21
                0x00000000c0021310                irq22
                0x00000000c002131a                irq23
 *fill*         0x00000000c0021324        0xc 
 .text          0x00000000c0021330       0x10 arch/i386/rdrand.32
                0x00000000c0021330                i386GetRDRAND
 .text          0x00000000c0021340       0x39 arch/i386/sse.32
                0x00000000c0021340                sseDetect
                0x00000000c0021358                sseSave
                0x00000000c0021360                sseLoad
                0x00000000c0021368                sseInit
                0x00000000c0021378                sseClose
 *fill*         0x00000000c0021379        0x7 
 .text          0x00000000c0021380       0x4f arch/i386/x87.32
                0x00000000c0021386                x87Detect
                0x00000000c00213a7                x87Save
                0x00000000c00213ae                x87Load
                0x00000000c00213b5                x87Init
                0x00000000c00213ce                x87Close
 *fill*         0x00000000c00213cf        0x1 
 .text          0x00000000c00213d0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00213f5        0x0 crtn.32
 *fill*         0x00000000c00213f5        0x3 
 .text          0x00000000c00213f8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00213f8                __divdi3
 *fill*         0x00000000c0021543        0x1 
 .text          0x00000000c0021544      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021544                __moddi3
 *fill*         0x00000000c00216c2        0x2 
 .text          0x00000000c00216c4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00216c4                __udivdi3
 *fill*         0x00000000c00217c3        0x1 
 .text          0x00000000c00217c4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00217c4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00218e0        0x0
 .iplt          0x00000000c00218e0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00218de        0xf
 .init          0x00000000c00218de        0x3 crti.32
                0x00000000c00218de                _init
 .init          0x00000000c00218e1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00218e6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00218eb        0x2 crtn.32

.fini           0x00000000c00218ed        0xa
 .fini          0x00000000c00218ed        0x3 crti.32
                0x00000000c00218ed                _fini
 .fini          0x00000000c00218f0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00218f5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00218f8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00218f8       0x1a hal/device.32
                0x00000000c00218f8                DriverlessDevice::~DriverlessDevice()
                0x00000000c00218f8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021912       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021912       0x2a hal/device.32
                0x00000000c0021912                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002193c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002193c       0xdc hal/device.32
                0x00000000c002193c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a18       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a18       0x42 hal/device.32
                0x00000000c0021a18                LinkedList<Device>::LinkedList()
                0x00000000c0021a18                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021a5c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021a5c       0x1c hal/timer.32
                0x00000000c0021a5c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021a78        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021a78        0x7 hal/timer.32
                0x00000000c0021a78                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021a80       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021a80       0xbc hal/timer.32
                0x00000000c0021a80                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021b3c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021b3c       0xda hal/timer.32
                0x00000000c0021b3c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021c18       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021c18       0x23 hw/acpi.32
                0x00000000c0021c18                ACPI::~ACPI()
                0x00000000c0021c18                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021c3c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021c3c       0x2a hw/acpi.32
                0x00000000c0021c3c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021c68        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021c68        0x2 hw/acpi.32
                0x00000000c0021c68                LinkedList<Device>::~LinkedList()
                0x00000000c0021c68                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021c6c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021c6c       0x1c hw/acpi.32
                0x00000000c0021c6c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021c88        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021c88        0x7 hw/acpi.32
                0x00000000c0021c88                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021c90       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021c90       0xb8 hw/acpi.32
                0x00000000c0021c90                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021d48       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021d48       0x23 krnl/computer.32
                0x00000000c0021d48                Computer::~Computer()
                0x00000000c0021d48                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021d6c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021d6c       0x2a krnl/computer.32
                0x00000000c0021d6c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021d96       0x24
 .text._Z10idleCommonv
                0x00000000c0021d96       0x24 krnl/idle.32
                0x00000000c0021d96                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021dba        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021dba        0x2 krnl/unixfile.32
                0x00000000c0021dba                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021dba                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021dbc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021dbc       0x42 krnl/unixfile.32
                0x00000000c0021dbc                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021dbc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021dfe       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021dfe       0xd3 krnl/unixfile.32
                0x00000000c0021dfe                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021ed2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021ed2        0x7 krnl/unixfile.32
                0x00000000c0021ed2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021eda       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021eda       0xa1 krnl/unixfile.32
                0x00000000c0021eda                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021f7c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021f7c        0x8 krnl/unixfile.32
                0x00000000c0021f7c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f84        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f84        0x8 sys/kill.32
                0x00000000c0021f84                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021f8c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021f8c        0x2 thr/prcssthr.32
                0x00000000c0021f8c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021f8c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021f90       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021f90       0x49 thr/prcssthr.32
                0x00000000c0021f90                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021f90                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021fdc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021fdc       0x42 thr/prcssthr.32
                0x00000000c0021fdc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021fdc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002201e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002201e       0x23 arch/i386/hal.32
                0x00000000c002201e                CPU::~CPU()
                0x00000000c002201e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022042       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022042       0x2a arch/i386/hal.32
                0x00000000c0022042                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002206c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002206c       0x23 hw/bus/pci.32
                0x00000000c002206c                PCI::~PCI()
                0x00000000c002206c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0022090       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0022090       0x2a hw/bus/pci.32
                0x00000000c0022090                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00220ba       0x23
 .text._ZN3IDED2Ev
                0x00000000c00220ba       0x23 hw/diskctrl/ide.32
                0x00000000c00220ba                IDE::~IDE()
                0x00000000c00220ba                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00220de       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00220de       0x2a hw/diskctrl/ide.32
                0x00000000c00220de                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022108       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022108       0x23 hw/diskctrl/satabus.32
                0x00000000c0022108                SATABus::~SATABus()
                0x00000000c0022108                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002212c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002212c       0x2a hw/diskctrl/satabus.32
                0x00000000c002212c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022156       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022156       0x23 hw/diskphys/ata.32
                0x00000000c0022156                ATA::~ATA()
                0x00000000c0022156                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002217a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002217a       0x2a hw/diskphys/ata.32
                0x00000000c002217a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00221a4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00221a4       0x23 hw/diskphys/atapi.32
                0x00000000c00221a4                ATAPI::~ATAPI()
                0x00000000c00221a4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00221c8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00221c8       0x2a hw/diskphys/atapi.32
                0x00000000c00221c8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00221f2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00221f2       0x23 hw/diskphys/sata.32
                0x00000000c00221f2                SATA::~SATA()
                0x00000000c00221f2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022216       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022216       0x2a hw/diskphys/sata.32
                0x00000000c0022216                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022240       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022240       0x23 hw/diskphys/satapi.32
                0x00000000c0022240                SATAPI::~SATAPI()
                0x00000000c0022240                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022264       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022264       0x2a hw/diskphys/satapi.32
                0x00000000c0022264                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002228e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002228e       0x23 hw/intctrl/apic.32
                0x00000000c002228e                IOAPIC::~IOAPIC()
                0x00000000c002228e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00222b2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00222b2       0x2a hw/intctrl/apic.32
                0x00000000c00222b2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00222dc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00222dc       0x23 hw/timer/apictimer.32
                0x00000000c00222dc                APICTimer::~APICTimer()
                0x00000000c00222dc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022300       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022300       0x2a hw/timer/apictimer.32
                0x00000000c0022300                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002232c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002232c       0x23 hw/timer/pit.32
                0x00000000c002232c                PIT::~PIT()
                0x00000000c002232c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022350       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022350       0x2a hw/timer/pit.32
                0x00000000c0022350                PIT::~PIT()

.rodata         0x00000000c002237a     0x3a7e
                0x00000000c002237a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002237a        0x2 
 .ctors         0x00000000c002237c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022380        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022384        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022388        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002238c                end_ctors = .
                0x00000000c002238c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002238c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022390        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022390                __DTOR_END__
                0x00000000c0022394                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022394        0xc 
 .rodata        0x00000000c00223a0      0x101 acpica/utclib.32
                0x00000000c00223a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00224a1        0x3 
 .rodata        0x00000000c00224a4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00224bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022506       0x1a 
 .rodata        0x00000000c0022520       0xed fs/fat/ff.32
 *fill*         0x00000000c002260d       0x13 
 .rodata        0x00000000c0022620      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022a20       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022a8f        0x1 
 .rodata        0x00000000c0022a90      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022be0      0x169 dbg/usban.32
 *fill*         0x00000000c0022d49        0x3 
 .rodata.str1.4
                0x00000000c0022d4c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022e83      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0022fa6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0022fff        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023000       0x6c fs/vfs.32
                0x00000000c0023000                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002306c       0x1c fs/vfs.32
                0x00000000c002306c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023088       0x1c fs/vfs.32
                0x00000000c0023088                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00230a4       0x2c hal/bus.32
                0x00000000c00230a4                vtable for Bus
 *fill*         0x00000000c00230d0       0x10 
 .rodata        0x00000000c00230e0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023230       0x3c hal/clock.32
                0x00000000c0023230                vtable for Clock
 .rodata.str1.1
                0x00000000c002326c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00232d0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00232f2       0x15 hal/device.32
 *fill*         0x00000000c0023307        0x1 
 .rodata._ZTV6Device
                0x00000000c0023308       0x2c hal/device.32
                0x00000000c0023308                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023334       0x2c hal/device.32
                0x00000000c0023334                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023360       0x2c hal/diskctrl.32
                0x00000000c0023360                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002338c       0x38 hal/diskphys.32
                0x00000000c002338c                vtable for PhysicalDisk
 .rodata        0x00000000c00233c4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023417        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023418       0x34 hal/keybrd.32
                0x00000000c0023418                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002344c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023490       0x2c hal/logidisk.32
                0x00000000c0023490                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00234bc       0x2c hal/mouse.32
                0x00000000c00234bc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00234e8       0x34 hal/nic.32
                0x00000000c00234e8                vtable for NIC
 .rodata.str1.1
                0x00000000c002351c        0xb hal/partition.32
 *fill*         0x00000000c0023527        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023528       0x44 hal/serial.32
                0x00000000c0023528                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002356c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00235b7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00235bf       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00235bf       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00235bf       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023604       0x30 hal/timer.32
                0x00000000c0023604                vtable for Timer
 .rodata.str1.1
                0x00000000c0023634       0x3e hal/vcache.32
 *fill*         0x00000000c0023672        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023674       0x10 hal/vcache.32
                0x00000000c0023674                vtable for VCache
 .rodata.str1.1
                0x00000000c0023684       0xba hal/video.32
 *fill*         0x00000000c002373e        0x2 
 .rodata._ZTV5Video
                0x00000000c0023740       0x4c hal/video.32
                0x00000000c0023740                vtable for Video
 .rodata.str1.1
                0x00000000c002378c      0x17e hw/acpi.32
 *fill*         0x00000000c002390a        0x2 
 .rodata.str1.4
                0x00000000c002390c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023983       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023983        0x8 hw/acpi.32
 *fill*         0x00000000c0023983        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023984       0x2c hw/acpi.32
                0x00000000c0023984                vtable for ACPI
 .rodata.str1.1
                0x00000000c00239b0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c00239c3       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023a03       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023a24       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023a57        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023a5a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023ad0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0023b88       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023c31        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023c34       0x2c krnl/computer.32
                0x00000000c0023c34                vtable for Computer
 .rodata.str1.1
                0x00000000c0023c60       0x3c krnl/env.32
 .rodata        0x00000000c0023c9c       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023d12        0x4 krnl/intlformat.32
 *fill*         0x00000000c0023d16        0x2 
 .rodata.str1.4
                0x00000000c0023d18       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023d48        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023d57       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023db8      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023ebd       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023f15       0x39 krnl/pipe.32
 *fill*         0x00000000c0023f4e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023f50       0x1c krnl/pipe.32
                0x00000000c0023f50                vtable for Pipe
 .rodata.str1.1
                0x00000000c0023f6c       0x91 krnl/resolve.32
 *fill*         0x00000000c0023ffd        0x3 
 .rodata.str1.4
                0x00000000c0024000       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002401f      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024127       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002416f       0x5e krnl/terminal.32
 *fill*         0x00000000c00241cd        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00241d0       0x1c krnl/terminal.32
                0x00000000c00241d0                vtable for VgaText
 .rodata        0x00000000c00241ec       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024227       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024227       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024227       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024227        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024227        0x1 
 .rodata.str1.4
                0x00000000c0024228       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024248       0x22 krnl/unixfile.32
 *fill*         0x00000000c002426a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002426c       0x1c krnl/unixfile.32
                0x00000000c002426c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024288       0x1c krnl/unixfile.32
                0x00000000c0024288                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00242a4      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024827      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024988       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c002499d        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c00249ac        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00249b6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00249d7       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024a1b       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024a30       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024a5c       0x4d thr/alarm.32
 .rodata.str1.1
                0x00000000c0024aa9      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024cb3       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024d0a        0x2 
 .rodata.str1.4
                0x00000000c0024d0c       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024e04       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024e04       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024e04       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024e04        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024e04       0xdd vm86/vm8086.32
 *fill*         0x00000000c0024ee1        0x3 
 .rodata        0x00000000c0024ee4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024f14      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002525f        0x1 
 .rodata.str1.4
                0x00000000c0025260       0x57 arch/i386/hal.32
 *fill*         0x00000000c00252b7        0x1 
 .rodata._ZTV3CPU
                0x00000000c00252b8       0x2c arch/i386/hal.32
                0x00000000c00252b8                vtable for CPU
 .rodata.str1.4
                0x00000000c00252e4       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025345       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025383       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025398       0x3c arch/i386/rtc.32
                0x00000000c0025398                vtable for RTC
 .rodata.str1.1
                0x00000000c00253d4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025415        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025418       0x6c fs/fat/vfslink.32
                0x00000000c0025418                vtable for FAT
 .rodata.str1.1
                0x00000000c0025484       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025484      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00255bc       0x6c fs/iso9660/vfslink.32
                0x00000000c00255bc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025628       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002566c       0x34 hal/sound/sndcard.32
                0x00000000c002566c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00256a0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00256df       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025717       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00257b8       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002581c       0x2c hw/bus/pci.32
                0x00000000c002581c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025848      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c002596c       0x2c hw/diskctrl/ide.32
                0x00000000c002596c                vtable for IDE
 .rodata.str1.4
                0x00000000c0025998       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00259bc       0x2c hw/diskctrl/satabus.32
                0x00000000c00259bc                vtable for SATABus
 .rodata.str1.1
                0x00000000c00259e8       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025aa3        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025aa4       0x38 hw/diskphys/ata.32
                0x00000000c0025aa4                vtable for ATA
 .rodata.str1.1
                0x00000000c0025adc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025ae9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025aec       0x38 hw/diskphys/atapi.32
                0x00000000c0025aec                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025b24       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025bac       0x38 hw/diskphys/sata.32
                0x00000000c0025bac                vtable for SATA
 .rodata.str1.1
                0x00000000c0025be4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025cce        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025cd0       0x38 hw/diskphys/satapi.32
                0x00000000c0025cd0                vtable for SATAPI
 .rodata        0x00000000c0025d08       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0025d2e        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0025d30       0x2c hw/intctrl/apic.32
                0x00000000c0025d30                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025d5c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025d77        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025d78       0x30 hw/timer/apictimer.32
                0x00000000c0025d78                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025da8       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025dc5        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025dc8       0x30 hw/timer/pit.32
                0x00000000c0025dc8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025df8      0xa6d
 *(.data)
 .data          0x00000000c0025df8        0x0 crti.32
 .data          0x00000000c0025df8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025df8                __dso_handle
 .data          0x00000000c0025dfc        0x0 acpica/utclib.32
 .data          0x00000000c0025dfc        0x0 krnl/malloc.32
 .data          0x00000000c0025dfc        0x0 libk/ctype.32
 .data          0x00000000c0025dfc        0x0 libk/string.32
 .data          0x00000000c0025dfc        0x0 arch/i386/cc.32
 .data          0x00000000c0025dfc        0x0 fs/fat/diskio.32
 .data          0x00000000c0025dfc        0x0 fs/fat/ff.32
 .data          0x00000000c0025dfc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025dfc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025dfc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0025dfc        0x0 dbg/kconsole.32
 *fill*         0x00000000c0025dfc        0x4 
 .data          0x00000000c0025e00       0x28 dbg/usban.32
                0x00000000c0025e00                KiUsbanTypeMismatchTypes
 .data          0x00000000c0025e28        0x0 fs/symlink.32
 .data          0x00000000c0025e28        0x0 fs/vfs.32
 .data          0x00000000c0025e28        0x0 hal/bus.32
 .data          0x00000000c0025e28        0x0 hal/buzzer.32
 .data          0x00000000c0025e28        0x0 hal/clock.32
 .data          0x00000000c0025e28        0x0 hal/device.32
 .data          0x00000000c0025e28        0x0 hal/diskctrl.32
 .data          0x00000000c0025e28        0x0 hal/diskphys.32
 .data          0x00000000c0025e28        0x0 hal/fpu.32
 .data          0x00000000c0025e28        0x0 hal/intctrl.32
 .data          0x00000000c0025e28        0x0 hal/keybrd.32
 .data          0x00000000c0025e28        0x0 hal/logidisk.32
 .data          0x00000000c0025e28        0x0 hal/mouse.32
 .data          0x00000000c0025e28        0x0 hal/nic.32
 .data          0x00000000c0025e28        0x0 hal/partition.32
 .data          0x00000000c0025e28        0x0 hal/serial.32
 .data          0x00000000c0025e28        0x0 hal/timer.32
 .data          0x00000000c0025e28        0x0 hal/vcache.32
 .data          0x00000000c0025e28        0x0 hal/video.32
 .data          0x00000000c0025e28       0x10 hw/acpi.32
                0x00000000c0025e28                legacyIRQRemaps
 .data          0x00000000c0025e38        0x0 krnl/assert.32
 .data          0x00000000c0025e38        0x0 krnl/atexit.32
 .data          0x00000000c0025e38        0x0 krnl/bootmsg.32
 .data          0x00000000c0025e38        0x4 krnl/c++.32
                0x00000000c0025e38                __stack_chk_guard
 .data          0x00000000c0025e3c        0x0 krnl/cdefs.32
 *fill*         0x00000000c0025e3c        0x4 
 .data          0x00000000c0025e40      0x100 krnl/cm.32
                0x00000000c0025e40                CmComponents
 .data          0x00000000c0025f40        0x0 krnl/compat.32
 .data          0x00000000c0025f40        0x0 krnl/computer.32
 .data          0x00000000c0025f40      0x400 krnl/crc32.32
                0x00000000c0025f40                KiPolyLookupCRC32
 .data          0x00000000c0026340       0x4d krnl/env.32
                0x00000000c0026340                defaultSysEnv
 .data          0x00000000c002638d        0x0 krnl/fault.32
 .data          0x00000000c002638d        0x0 krnl/gdt.32
 .data          0x00000000c002638d        0x0 krnl/idle.32
 .data          0x00000000c002638d        0x0 krnl/idt.32
 .data          0x00000000c002638d        0x0 krnl/inlines.32
 .data          0x00000000c002638d        0x0 krnl/intlformat.32
 .data          0x00000000c002638d        0x0 krnl/intops.32
 *fill*         0x00000000c002638d        0x3 
 .data          0x00000000c0026390        0x4 krnl/kheap.32
 .data          0x00000000c0026394        0x0 krnl/mailbox.32
 .data          0x00000000c0026394        0x0 krnl/main.32
 .data          0x00000000c0026394        0x0 krnl/mutex.32
 .data          0x00000000c0026394        0x0 krnl/panic.32
 .data          0x00000000c0026394        0x4 krnl/physmgr.32
                0x00000000c0026394                Phys::bitmap
 .data          0x00000000c0026398        0x0 krnl/pipe.32
 .data          0x00000000c0026398        0x0 krnl/powctrl.32
 .data          0x00000000c0026398        0x0 krnl/random.32
 .data          0x00000000c0026398        0x0 krnl/resolve.32
 .data          0x00000000c0026398        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026398        0x8 
 .data          0x00000000c00263a0       0x4c krnl/signal.32
                0x00000000c00263a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00263ec       0x14 
 .data          0x00000000c0026400      0x124 krnl/syscalls.32
                0x00000000c0026400                systemCallHandlers
 *fill*         0x00000000c0026524       0x1c 
 .data          0x00000000c0026540       0x60 krnl/terminal.32
                0x00000000c0026540                VgaText::hiddenOut
                0x00000000c0026560                ansiToVGAMappings
 .data          0x00000000c00265a0        0x0 krnl/tss.32
 .data          0x00000000c00265a0        0x4 krnl/unixfile.32
                0x00000000c00265a0                UnixFile::nextFd
 .data          0x00000000c00265a4       0x15 krnl/virtmgr.32
                0x00000000c00265a4                Virt::pageAllocPtr
                0x00000000c00265a8                Virt::bitmap
                0x00000000c00265ac                Virt::swapfileSectorsPerPage
                0x00000000c00265b0                Virt::swapfileLength
                0x00000000c00265b4                Virt::swapfileSector
                0x00000000c00265b8                Virt::swapfileDrive
 .data          0x00000000c00265b9        0x0 sys/alarm.32
 .data          0x00000000c00265b9        0x0 sys/eject.32
 .data          0x00000000c00265b9        0x0 sys/exit.32
 .data          0x00000000c00265b9        0x0 sys/getcwd.32
 .data          0x00000000c00265b9        0x0 sys/getpid.32
 .data          0x00000000c00265b9        0x0 sys/getramdata.32
 .data          0x00000000c00265b9        0x0 sys/getvgaptr.32
 .data          0x00000000c00265b9        0x0 sys/kill.32
 .data          0x00000000c00265b9        0x0 sys/loaddll.32
 .data          0x00000000c00265b9        0x0 sys/pause.32
 .data          0x00000000c00265b9        0x0 sys/pthread.32
 .data          0x00000000c00265b9        0x0 sys/read.32
 .data          0x00000000c00265b9        0x0 sys/registersignal.32
 .data          0x00000000c00265b9        0x0 sys/registry.32
 .data          0x00000000c00265b9        0x0 sys/sbrk.32
 .data          0x00000000c00265b9        0x0 sys/setcwd.32
 .data          0x00000000c00265b9        0x0 sys/settime.32
 .data          0x00000000c00265b9        0x0 sys/symlink.32
 .data          0x00000000c00265b9        0x0 sys/timezone.32
 .data          0x00000000c00265b9        0x0 sys/truncate.32
 .data          0x00000000c00265b9        0x0 sys/write.32
 .data          0x00000000c00265b9        0x0 sys/wsbe.32
 .data          0x00000000c00265b9        0x0 sys/yield.32
 .data          0x00000000c00265b9        0x0 thr/alarm.32
 .data          0x00000000c00265b9        0x0 thr/elf.32
 .data          0x00000000c00265b9        0x0 thr/exec.32
 *fill*         0x00000000c00265b9        0x3 
 .data          0x00000000c00265bc        0x4 thr/prcssthr.32
                0x00000000c00265bc                Thr::nextPID
 .data          0x00000000c00265c0        0x0 vm86/vm8086.32
 .data          0x00000000c00265c0      0x2a4 arch/i386/hal.32
                0x00000000c00265c0                exceptionNames
                0x00000000c0026860                lastCode
 .data          0x00000000c0026864        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026864        0x0 arch/i386/pic.32
 .data          0x00000000c0026864        0x0 arch/i386/rtc.32
 .data          0x00000000c0026864        0x0 arch/i386/vga.32
 .data          0x00000000c0026864        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026864        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026864        0x1 fs/iso9660/vfslink.32
                0x00000000c0026864                recentDriveletter
 .data          0x00000000c0026865        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026865        0x0 hal/sound/sndport.32
 .data          0x00000000c0026865        0x0 hw/bus/isa.32
 .data          0x00000000c0026865        0x0 hw/bus/pci.32
 .data          0x00000000c0026865        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026865        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026865        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026865        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026865        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026865        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026865        0x0 hw/intctrl/apic.32
 .data          0x00000000c0026865        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026865        0x0 hw/timer/pit.32
 .data          0x00000000c0026865        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026865        0x0 crtn.32
 .data          0x00000000c0026865        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026865        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026865        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026865        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026868        0x0
 .got           0x00000000c0026868        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026868        0x0
 .got.plt       0x00000000c0026868        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026868        0x0
 .igot.plt      0x00000000c0026868        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026868        0x0
 .tm_clone_table
                0x00000000c0026868        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026868        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026865      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026865        0x3 
 .eh_frame      0x00000000c0026868        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026868        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026868       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00268c0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026900       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002696c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/alarm.32
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/pause.32
 .bss           0x00000000c002e254        0x0 sys/pthread.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 .bss           0x00000000c002e254        0x0 thr/alarm.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
