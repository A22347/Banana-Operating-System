Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21abe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x27e dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006efd                Dbg::logs(char*)
                0x00000000c0006f27                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f45                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f66                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070dd        0x3 
 .text          0x00000000c00070e0      0x2d4 dbg/usban.32
                0x00000000c00070e0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000714c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007228                __ubsan_handle_pointer_overflow
                0x00000000c0007254                __ubsan_handle_out_of_bounds
                0x00000000c0007280                __ubsan_handle_add_overflow
                0x00000000c00072ac                __ubsan_handle_load_invalid_value
                0x00000000c00072d8                __ubsan_handle_divrem_overflow
                0x00000000c0007304                __ubsan_handle_mul_overflow
                0x00000000c0007330                __ubsan_handle_sub_overflow
                0x00000000c000735c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007388                __ubsan_handle_negate_overflow
 .text          0x00000000c00073b4      0x812 fs/symlink.32
                0x00000000c0007503                KiDeinitialiseSymlinks(void*)
                0x00000000c0007594                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007617                KeInitialiseSymlinks()
                0x00000000c0007779                KiIsSymlinkRegistered(char const*)
                0x00000000c00078e3                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a8a                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bc6      0xd9c fs/vfs.32
                0x00000000c0007bc6                File::read(unsigned long long, void*, int*)
                0x00000000c0007c1e                File::write(unsigned long long, void*, int*)
                0x00000000c0007c76                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cce                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cfc                File::isAtty()
                0x00000000c0007d00                Directory::isAtty()
                0x00000000c0007d04                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d0a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d10                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d16                File::~File()
                0x00000000c0007d16                File::~File()
                0x00000000c0007d3a                File::~File()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d64                Directory::~Directory()
                0x00000000c0007d88                Directory::~Directory()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007db2                Filesystem::Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007de4                Filesystem::~Filesystem()
                0x00000000c0007e08                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e32                Fs::initVFS()
                0x00000000c0007e5c                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c000808a                File::File(char const*, Process*, bool)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c0008188                File::File(char const*, Process*)
                0x00000000c00081a6                File::open(FileOpenMode)
                0x00000000c0008204                File::close()
                0x00000000c0008264                File::seek(unsigned long long)
                0x00000000c00082ba                File::truncate(unsigned long long)
                0x00000000c0008310                File::tell(unsigned long long*)
                0x00000000c0008360                File::rewind()
                0x00000000c0008374                File::unlink()
                0x00000000c00083c0                File::rename(char const*)
                0x00000000c000840e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846a                File::exists()
                0x00000000c00084a8                File::stat(unsigned long long*, bool*)
                0x00000000c0008509                Fs::setcwd(Process*, char*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008668                Directory::Directory(char const*, Process*)
                0x00000000c0008730                Directory::open()
                0x00000000c000878c                Directory::close()
                0x00000000c00087ec                Directory::unlink()
                0x00000000c0008838                Directory::rename(char const*)
                0x00000000c0008886                Directory::exists()
                0x00000000c00088c4                Directory::read(dirent*)
                0x00000000c0008910                Directory::create()
                0x00000000c000895c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008962        0x2 
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xe4e hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091a4                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009224                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009552                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009614                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098a8                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d4      0x47a hal/device.32
                0x00000000c00098d4                Device::hibernate()
                0x00000000c00098d6                Device::wake()
                0x00000000c00098d8                Device::detect()
                0x00000000c00098da                Device::disableLegacy()
                0x00000000c00098dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098de                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e2                DriverlessDevice::detect()
                0x00000000c00098e4                DriverlessDevice::open(int, int, void*)
                0x00000000c00098f8                Device::~Device()
                0x00000000c00098f8                Device::~Device()
                0x00000000c0009906                Device::~Device()
                0x00000000c000992e                Device::findAndLoadDriver()
                0x00000000c000993c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099cc                Device::getParent()
                0x00000000c00099d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099f6                Device::addChild(Device*)
                0x00000000c0009a3a                Device::removeAllChildren()
                0x00000000c0009a80                Device::hibernateAll()
                0x00000000c0009ab0                Device::wakeAll()
                0x00000000c0009ae0                Device::detectAll()
                0x00000000c0009b10                Device::disableLegacyAll()
                0x00000000c0009b12                Device::loadDriversForAll()
                0x00000000c0009b14                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4a                Device::setName(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009b58                Device::Device(char const*)
                0x00000000c0009c54                Device::getName()
                0x00000000c0009c5e                Device::closeAll()
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009caa                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d24                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d4e        0x2 
 .text          0x00000000c0009d50       0x86 hal/diskctrl.32
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d50                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009d88                HardDiskController::~HardDiskController()
                0x00000000c0009dac                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dd6       0xe2 hal/diskphys.32
                0x00000000c0009dd6                PhysicalDisk::eject()
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dda                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e42                PhysicalDisk::startCache()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e8e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009eb8        0x0 hal/fpu.32
 .text          0x00000000c0009eb8      0x874 hal/keybrd.32
                0x00000000c0009eb8                startGUI(void*)
                0x00000000c0009f1d                startGUIVESA(void*)
                0x00000000c0009f82                sendKeyToTerminal(unsigned char)
                0x00000000c000a058                sendKeyboardToken(KeyboardToken)
                0x00000000c000a514                clearInternalKeybuffer(VgaText*)
                0x00000000c000a549                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6a2                Keyboard::Keyboard(char const*)
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a6de                Keyboard::~Keyboard()
                0x00000000c000a702                Keyboard::~Keyboard()
 .text          0x00000000c000a72c      0x3f8 hal/logidisk.32
                0x00000000c000a72c                LogicalDisk::close(int, int, void*)
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a730                LogicalDisk::~LogicalDisk()
                0x00000000c000a754                LogicalDisk::~LogicalDisk()
                0x00000000c000a77e                LogicalDisk::open(int, int, void*)
                0x00000000c000a792                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ca                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a810                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d0                LogicalDisk::assignDriveLetter()
                0x00000000c000a98a                LogicalDisk::mount()
                0x00000000c000a9d2                LogicalDisk::unmount()
                0x00000000c000a9e2                LogicalDisk::eject()
                0x00000000c000a9f6                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa4c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aab8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab24       0x86 hal/mouse.32
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab24                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab5c                Mouse::~Mouse()
                0x00000000c000ab80                Mouse::~Mouse()
 .text          0x00000000c000abaa       0x90 hal/nic.32
                0x00000000c000abaa                NIC::getMAC()
                0x00000000c000abb0                NIC::write(int, unsigned char*, int*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abb6                NIC::NIC(char const*)
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000abec                NIC::~NIC()
                0x00000000c000ac10                NIC::~NIC()
 .text          0x00000000c000ac3a      0x33b hal/partition.32
                0x00000000c000ac3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af75        0x3 
 .text          0x00000000c000af78       0x86 hal/serial.32
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000af78                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afb0                Serial::~Serial()
                0x00000000c000afd4                Serial::~Serial()
 *fill*         0x00000000c000affe        0x2 
 .text          0x00000000c000b000      0x230 hal/timer.32
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b000                Timer::Timer(char const*)
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b038                Timer::~Timer()
                0x00000000c000b05c                Timer::~Timer()
                0x00000000c000b086                Timer::read()
                0x00000000c000b091                setupTimer(int)
                0x00000000c000b0cc                timerHandler(unsigned int)
 .text          0x00000000c000b230      0x60e hal/vcache.32
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b230                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a0                VCache::invalidateReadBuffer()
                0x00000000c000b3b0                VCache::writeWriteBuffer()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b3fc                VCache::~VCache()
                0x00000000c000b454                VCache::~VCache()
                0x00000000c000b47c                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b83e      0x71d hal/video.32
                0x00000000c000b83e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b88a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8fa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b98a                Video::clearScreen(unsigned int)
                0x00000000c000b9be                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9cc                Video::readPixelApprox(int, int)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000b9e0                Video::Video(char const*)
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba16                Video::~Video()
                0x00000000c000ba3a                Video::~Video()
                0x00000000c000ba64                Video::isMonochrome()
                0x00000000c000ba70                Video::getWidth()
                0x00000000c000ba7c                Video::getHeight()
                0x00000000c000ba88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb44                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000beea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf5b        0x1 
 .text          0x00000000c000bf5c     0x10ea hw/acpi.32
                0x00000000c000bf5c                ACPI::close(int, int, void*)
                0x00000000c000bf64                loadACPITables(unsigned char*)
                0x00000000c000c1c4                findRSDT(unsigned char*)
                0x00000000c000c310                findDataTable(unsigned char*, char*)
                0x00000000c000c384                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c884                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c980                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca54                ACPI::detectPCI()
                0x00000000c000cc60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc78                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d046        0x2 
 .text          0x00000000c000d048       0xea krnl/assert.32
                0x00000000c000d048                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d132       0x91 krnl/atexit.32
                0x00000000c000d132                KeInitialiseAtexit()
                0x00000000c000d154                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d188                KeExecuteAtexit()
 *fill*         0x00000000c000d1c3        0x1 
 .text          0x00000000c000d1c4       0x1e krnl/bootflags.32
                0x00000000c000d1c4                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d1d4                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d1e2       0x8a krnl/bootmsg.32
                0x00000000c000d1e2                KeDisplaySplashScreen()
                0x00000000c000d211                KeSetBootMessage(char const*)
 .text          0x00000000c000d26c       0x5f krnl/c++.32
                0x00000000c000d26c                __cxa_atexit
                0x00000000c000d26f                __cxa_finalize
                0x00000000c000d270                __stack_chk_fail
                0x00000000c000d2a6                __cxa_pure_virtual
                0x00000000c000d2b7                operator new[](unsigned long)
                0x00000000c000d2bc                operator delete(void*, unsigned long)
                0x00000000c000d2c1                operator delete[](void*)
                0x00000000c000d2c6                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d2cb        0x1 
 .text          0x00000000c000d2cc       0x44 krnl/cdefs.32
                0x00000000c000d2cc                CUnlockScheduler
                0x00000000c000d2e4                CLockScheduler
                0x00000000c000d2f4                CPrintf
 .text          0x00000000c000d310      0xc7c krnl/cm.32
                0x00000000c000d310                CmOpen(char const*)
                0x00000000c000d42e                CmClose(Reghive_Tag*)
                0x00000000c000d444                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d480                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d4f7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d536                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d568                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5a4                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d5cc                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d5ed                CmExpand(Reghive_Tag*, int)
                0x00000000c000d668                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d6ee                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d7e2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d91a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d97b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9ab                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d9e2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da0c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da4c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000daf0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db1e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dcbb                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd08                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd82                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000ddd5                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de99                zStrtok(char*, char const*)
                0x00000000c000df0b                CmFindObjectFromPath(Reghive_Tag*, char const*)
 .text          0x00000000c000df8c       0xe3 krnl/computer.32
                0x00000000c000df8c                Computer::close(int, int, void*)
                0x00000000c000df92                Computer::Computer()
                0x00000000c000df92                Computer::Computer()
                0x00000000c000dfd6                Computer::open(int, int, void*)
 .text          0x00000000c000e06f       0x2b krnl/crc32.32
                0x00000000c000e06f                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e09a      0x5bf krnl/env.32
                0x00000000c000e09a                EnvVarContainer::getEnv(char const*)
                0x00000000c000e0d8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e19a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e19c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e3c0                EnvVarContainer::__loadSystem()
                0x00000000c000e3da                EnvVarContainer::__loadUser()
                0x00000000c000e3dc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e3dc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e3fe                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e3fe                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e42e                KeGetEnv(Process*, char const*)
                0x00000000c000e493                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e4ad                KeSetEnvUser(char const*, char const*)
                0x00000000c000e4cc                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e4df                KeDeleteEnvSystem(char const*)
                0x00000000c000e4e0                KeDeleteEnvUser(char const*)
                0x00000000c000e4e1                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e4e2                KeNewProcessEnv(Process*)
                0x00000000c000e504                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e550                KeLoadSystemEnv()
                0x00000000c000e57e                KeLoadUserEnv()
                0x00000000c000e5a4                KeFlushEnv()
                0x00000000c000e5a5                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e5c5                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e659        0x3 
 .text          0x00000000c000e65c      0x1a8 krnl/fault.32
                0x00000000c000e65c                KeDisplayProgramFault(char const*)
                0x00000000c000e6ac                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e700                KePageFault(void*, void*)
                0x00000000c000e754                KeOpcodeFault(void*, void*)
                0x00000000c000e7a8                KeOtherFault(void*, void*)
                0x00000000c000e7dc                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e7ec                KeDoubleFault(void*, void*)
 .text          0x00000000c000e804      0x1db krnl/gdt.32
                0x00000000c000e804                GDTEntry::setBase(unsigned int)
                0x00000000c000e820                GDTEntry::setLimit(unsigned int)
                0x00000000c000e83e                GDT::GDT()
                0x00000000c000e83e                GDT::GDT()
                0x00000000c000e854                GDT::addEntry(GDTEntry)
                0x00000000c000e876                GDT::getNumberOfEntries()
                0x00000000c000e87e                GDT::flush()
                0x00000000c000e8a0                GDT::setup()
 .text          0x00000000c000e9df       0x20 krnl/idle.32
                0x00000000c000e9df                idleFunction(void*)
 *fill*         0x00000000c000e9ff        0x1 
 .text          0x00000000c000ea00      0x46c krnl/idt.32
                0x00000000c000ea00                IDTEntry::IDTEntry(bool)
                0x00000000c000ea00                IDTEntry::IDTEntry(bool)
                0x00000000c000ea7a                IDTEntry::setOffset(unsigned int)
                0x00000000c000ea90                IDT::IDT()
                0x00000000c000ea90                IDT::IDT()
                0x00000000c000ea92                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ea9a                IDT::addEntry(IDTEntry, int)
                0x00000000c000eab4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eaec                IDT::flush()
                0x00000000c000eb06                IDT::setup()
 .text          0x00000000c000ee6c       0x9a krnl/inlines.32
                0x00000000c000ee6c                CPU::current()
                0x00000000c000ee78                operator new(unsigned long)
                0x00000000c000ee7d                operator delete(void*)
                0x00000000c000ee82                disableIRQs()
                0x00000000c000ee84                enableIRQs()
                0x00000000c000ee86                lockScheduler()
                0x00000000c000ee8e                unlockScheduler()
                0x00000000c000eea0                lockStuff()
                0x00000000c000eeae                unlockStuff()
                0x00000000c000eeeb                Virt::getAKernelVAS()
                0x00000000c000eef1                __not_memcpy
 .text          0x00000000c000ef06      0x2ae krnl/intlformat.32
                0x00000000c000ef06                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f0e8                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f10a                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f12c                KeSetLocale(klocale_t)
                0x00000000c000f142                KeInitialiseLocale()
                0x00000000c000f1b0                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f1b1                KeFormatCurrency(char*, int, double)
                0x00000000c000f1b2                KeFormatNumber(char*, long long, long long)
                0x00000000c000f1b3                KeFormatNumber(char*, double)
 .text          0x00000000c000f1b4      0x356 krnl/intops.32
                0x00000000c000f1b4                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f2d0                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f410                KeGetDigitsInNumber(long long)
                0x00000000c000f47c                KeItoa(unsigned long long, char*)
                0x00000000c000f4ac                KeItoa(long long, char*)
                0x00000000c000f4dc                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f50a      0x204 krnl/kheap.32
                0x00000000c000f50a                sbrk
                0x00000000c000f59e                sbrk_thunk
                0x00000000c000f5d4                mmap
                0x00000000c000f632                munmap
                0x00000000c000f647                liballoc_lock()
                0x00000000c000f655                liballoc_unlock()
                0x00000000c000f66d                liballoc_alloc(int)
                0x00000000c000f685                liballoc_free(void*, int)
                0x00000000c000f6a0                realloc
                0x00000000c000f6b4                malloc
                0x00000000c000f6c4                free
                0x00000000c000f6d4                rfree
                0x00000000c000f6e4                calloc
 *fill*         0x00000000c000f70e        0x2 
 .text          0x00000000c000f710      0x1d3 krnl/mailbox.32
                0x00000000c000f710                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f770                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f7d0                KeMailboxCreate()
                0x00000000c000f804                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f868                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f8cc                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f8e3      0x20b krnl/main.32
                0x00000000c000f8e3                KeFirstTask()
                0x00000000c000f9ee                KeEntryPoint
 *fill*         0x00000000c000faee        0x2 
 .text          0x00000000c000faf0       0x1a krnl/mutex.32
                0x00000000c000faf0                Mutex::Mutex()
                0x00000000c000faf0                Mutex::Mutex()
 .text          0x00000000c000fb0a       0x12 krnl/panic.32
                0x00000000c000fb0a                KeIsKernelInPanic()
                0x00000000c000fb10                KePanic(char const*)
 .text          0x00000000c000fb1c      0x666 krnl/physmgr.32
                0x00000000c000fb1c                Phys::allocateDMA(unsigned long)
                0x00000000c000fc0a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fc45                Phys::setPageState(unsigned long, bool)
                0x00000000c000fc85                Phys::getPageState(unsigned long)
                0x00000000c000fca1                Phys::freePage(unsigned long)
                0x00000000c000fd0a                Phys::allocatePage()
                0x00000000c000fde8                Phys::allocateContiguousPages(int)
                0x00000000c000fe63                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000fe9b                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010182      0x271 krnl/pipe.32
                0x00000000c0010182                Pipe::isAtty()
                0x00000000c0010186                Pipe::~Pipe()
                0x00000000c0010186                Pipe::~Pipe()
                0x00000000c00101aa                Pipe::~Pipe()
                0x00000000c00101d2                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010296                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001038c                Pipe::Pipe(int)
                0x00000000c001038c                Pipe::Pipe(int)
 .text          0x00000000c00103f3      0x1a3 krnl/powctrl.32
                0x00000000c00103f3                KePowerThread(void*)
                0x00000000c0010425                KeChangePowerSettings(PowerSettings)
                0x00000000c001043b                KeUserIOReceived()
                0x00000000c0010446                KeSetupPowerManager()
                0x00000000c00104cf                KePrepareShutdown()
                0x00000000c00104ee                KeRegisterShutdownHandler(void (*)())
                0x00000000c00104f8                KeRegisterRestartHandler(void (*)())
                0x00000000c0010502                KeRegisterSleepHandler(void (*)())
                0x00000000c001050c                KeShutdown()
                0x00000000c0010542                KeSleep()
                0x00000000c001054e                KeHandlePowerButton()
                0x00000000c0010560                KeHandleSleepButton()
                0x00000000c0010572                KeRestart()
 .text          0x00000000c0010596       0x9b krnl/random.32
                0x00000000c0010596                KeRand()
                0x00000000c00105d6                KeSeedRand(unsigned int)
                0x00000000c00105ff                KeInitRand()
 *fill*         0x00000000c0010631        0x3 
 .text          0x00000000c0010634      0x26c krnl/resolve.32
                0x00000000c0010634                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00108a0      0x415 krnl/semaphore.32
                0x00000000c00108a0                Semaphore::Semaphore(int)
                0x00000000c00108a0                Semaphore::Semaphore(int)
                0x00000000c00108d0                Semaphore::tryAcquire()
                0x00000000c00109a4                Semaphore::assertLocked(char const*)
                0x00000000c0010a30                Semaphore::acquire(int)
                0x00000000c0010be8                Semaphore::acquire()
                0x00000000c0010c04                Semaphore::release()
 .text          0x00000000c0010cb5      0x3a8 krnl/signal.32
                0x00000000c0010cb5                KiSigKill(int)
                0x00000000c0010cc9                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010cca                KiDefaultSignalHandlerPause(int)
                0x00000000c0010cf6                KiDefaultSignalHandlerResume(int)
                0x00000000c0010d22                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010d27                KeInitSignals()
                0x00000000c0010d99                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010dcf                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010e50                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010f7f                KiCheckSignalZ
                0x00000000c0010fd0                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c001100b                KiFinishSignalZ
 .text          0x00000000c001105d      0xe7d krnl/syscalls.32
                0x00000000c001105d                SysSeekDir(regs*)
                0x00000000c0011062                SysTellDir(regs*)
                0x00000000c0011067                SysVerify(regs*)
                0x00000000c0011071                SysGetArgc(regs*)
                0x00000000c0011085                SysTTYName(regs*)
                0x00000000c001108d                SysFormatDisk(regs*)
                0x00000000c00110f4                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011148                SysGetDiskVolumeLabel(regs*)
                0x00000000c00111a1                SysRealpath(regs*)
                0x00000000c00111ef                SysReadDir(regs*)
                0x00000000c001126f                SysIsATTY(regs*)
                0x00000000c00112c9                SysSeek(regs*)
                0x00000000c0011327                SysTell(regs*)
                0x00000000c001139c                SysSize(regs*)
                0x00000000c0011416                SysSizeFromFilename(regs*)
                0x00000000c0011549                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001167c                SysClose(regs*)
                0x00000000c00116e1                SysOpenDir(regs*)
                0x00000000c001175e                SysMakeDir(regs*)
                0x00000000c00117cc                SysCloseDir(regs*)
                0x00000000c0011820                SysWait(regs*)
                0x00000000c0011841                SysNotImpl(regs*)
                0x00000000c001185c                SysPanic(regs*)
                0x00000000c0011877                SysRmdir(regs*)
                0x00000000c00118d5                SysUnlink(regs*)
                0x00000000c0011933                SysGetArgv(regs*)
                0x00000000c0011980                SysUSleep(regs*)
                0x00000000c00119aa                SysSpawn(regs*)
                0x00000000c0011a1b                SysGetEnv(regs*)
                0x00000000c0011ad0                SysSetFatAttrib(regs*)
                0x00000000c0011b39                SysShutdown(regs*)
                0x00000000c0011b96                SysPipe(regs*)
                0x00000000c0011bdb                SysGetUnixTime(regs*)
                0x00000000c0011c4e                string_ends_with(char const*, char const*)
                0x00000000c0011c99                SysOpen(regs*)
                0x00000000c0011e98                KeSystemCall(regs*, void*)
 .text          0x00000000c0011eda      0xadd krnl/terminal.32
                0x00000000c0011eda                VgaText::isAtty()
                0x00000000c0011ede                VgaText::~VgaText()
                0x00000000c0011ede                VgaText::~VgaText()
                0x00000000c0011f02                VgaText::~VgaText()
                0x00000000c0011f2c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011f4c                setTerminalScrollLock(bool)
                0x00000000c0011f4d                doTerminalCycle()
                0x00000000c0011f4e                addToTerminalCycle(VgaText*)
                0x00000000c0011f4f                scrollTerminalScrollLock(int)
                0x00000000c0011f50                VgaText::updateTitle()
                0x00000000c0011f52                VgaText::load()
                0x00000000c0011f54                VgaText::updateCursor()
                0x00000000c0011f6a                VgaText::doANSI_SGR(int)
                0x00000000c0011fde                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011fee                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011ffe                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001201e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001202a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012036                VgaText::setTitle(char*)
                0x00000000c0012038                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001204a                VgaText::scrollScreen()
                0x00000000c00120dc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00120ec                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012198                VgaText::getCursorX()
                0x00000000c00121a0                VgaText::getCursorY()
                0x00000000c00121a8                VgaText::setCursor(int, int)
                0x00000000c00121bf                setActiveTerminal(VgaText*)
                0x00000000c001220a                VgaText::clearScreen()
                0x00000000c0012258                VgaText::setCursorX(int)
                0x00000000c0012270                VgaText::setCursorY(int)
                0x00000000c0012288                VgaText::incrementCursor(bool)
                0x00000000c00122dc                VgaText::decrementCursor(bool)
                0x00000000c00122fe                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00123ce                VgaText::putchar(char)
                0x00000000c00124b6                VgaText::putx(unsigned int)
                0x00000000c00124fc                VgaText::puts(char const*)
                0x00000000c0012522                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001256e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00126e8                VgaText::VgaText(char const*)
                0x00000000c00126e8                VgaText::VgaText(char const*)
                0x00000000c0012848                VgaText::receiveKey(unsigned char)
                0x00000000c00129b6                VgaText::doUpdate()
 *fill*         0x00000000c00129b7        0x1 
 .text          0x00000000c00129b8      0x224 krnl/tss.32
                0x00000000c00129b8                TSS::TSS()
                0x00000000c00129b8                TSS::TSS()
                0x00000000c00129c8                TSS::setESP(unsigned long)
                0x00000000c00129dc                TSS::flush()
                0x00000000c00129fc                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012bdc      0x4ce krnl/unixfile.32
                0x00000000c0012bdc                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012c32                ReservedFilename::isAtty()
                0x00000000c0012c4e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012cac                UnixFile::getFileDescriptor()
                0x00000000c0012cb4                UnixFile::UnixFile(int)
                0x00000000c0012cb4                UnixFile::UnixFile(int)
                0x00000000c0012e68                ReservedFilename::ReservedFilename(int)
                0x00000000c0012e68                ReservedFilename::ReservedFilename(int)
                0x00000000c0012e9a                UnixFile::~UnixFile()
                0x00000000c0012e9a                UnixFile::~UnixFile()
                0x00000000c0012f36                UnixFile::~UnixFile()
                0x00000000c0012f5e                ReservedFilename::~ReservedFilename()
                0x00000000c0012f5e                ReservedFilename::~ReservedFilename()
                0x00000000c0012f82                ReservedFilename::~ReservedFilename()
                0x00000000c0012fa9                KeGetFileFromDescriptor(int)
 .text          0x00000000c00130aa     0x134e krnl/virtmgr.32
                0x00000000c00130aa                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00130e4                Virt::getPageState(unsigned long)
                0x00000000c0013107                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013223                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013246                Virt::swapIDToSector(unsigned long)
                0x00000000c001325c                Virt::allocateSwapfilePage()
                0x00000000c00132db                Virt::virtualMemorySetup()
                0x00000000c001332c                Virt::setupPageSwapping(int)
                0x00000000c001339e                VAS::setCPUSpecific(unsigned long)
                0x00000000c00133a0                VAS::VAS(VAS*)
                0x00000000c00133a0                VAS::VAS(VAS*)
                0x00000000c00133b8                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00133e6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013405                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013542                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013566                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013580                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00135c2                VAS::VAS()
                0x00000000c00135c2                VAS::VAS()
                0x00000000c001362c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c001364c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013678                VAS::~VAS()
                0x00000000c0013678                VAS::~VAS()
                0x00000000c00137e0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00138e8                VAS::allocatePages(int, int)
                0x00000000c00139da                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013a34                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013b24                VAS::VAS(bool)
                0x00000000c0013b24                VAS::VAS(bool)
                0x00000000c0013d0c                VAS::evict(unsigned long)
                0x00000000c0013e10                VAS::canLockPage(unsigned long)
                0x00000000c0013e2a                VAS::unlockPage(unsigned long)
                0x00000000c0013e5e                VAS::canLockPages(unsigned long, int)
                0x00000000c0013e9a                VAS::unlockPages(unsigned long, int)
                0x00000000c0013ed6                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014076                VAS::lockPage(unsigned long)
                0x00000000c00140e8                VAS::lockPages(unsigned long, int)
                0x00000000c0014124                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014198                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00141c4                VAS::scanForEviction()
                0x00000000c00142fd                mapVASFirstTime
 .text          0x00000000c00143f8       0x2f sys/alarm.32
                0x00000000c00143f8                SysAlarm(regs*)
 .text          0x00000000c0014427       0x36 sys/eject.32
                0x00000000c0014427                SysEject(regs*)
 .text          0x00000000c001445d       0x18 sys/exit.32
                0x00000000c001445d                SysExit(regs*)
 .text          0x00000000c0014475       0x1f sys/getcwd.32
                0x00000000c0014475                SysGetCwd(regs*)
 .text          0x00000000c0014494       0x26 sys/getpid.32
                0x00000000c0014494                SysGetPID(regs*)
 .text          0x00000000c00144ba       0x21 sys/getramdata.32
                0x00000000c00144ba                SysGetRAMData(regs*)
 .text          0x00000000c00144db       0xbe sys/getvgaptr.32
                0x00000000c00144db                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014599        0x3 
 .text          0x00000000c001459c       0xb9 sys/kill.32
                0x00000000c001459c                SysKill(regs*)
 .text          0x00000000c0014655       0xa8 sys/loaddll.32
                0x00000000c0014655                SysLoadDLL(regs*)
 .text          0x00000000c00146fd       0x12 sys/pause.32
                0x00000000c00146fd                SysPause(regs*)
 .text          0x00000000c001470f       0x49 sys/pthread.32
                0x00000000c001470f                SysPthreadCreate(regs*)
                0x00000000c0014727                SysPthreadGetTID(regs*)
                0x00000000c0014731                SysInternalPthreadGetContext(regs*)
                0x00000000c0014736                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c001473b                SysPthreadJoin(regs*)
                0x00000000c0014740                SysPthreadExit(regs*)
 .text          0x00000000c0014758       0x68 sys/read.32
                0x00000000c0014758                SysRead(regs*)
 .text          0x00000000c00147c0       0x29 sys/registersignal.32
                0x00000000c00147c0                SysRegisterSignal(regs*)
 .text          0x00000000c00147e9      0x1cc sys/registry.32
                0x00000000c00147e9                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001482d                SysRegistryReadExtent(regs*)
                0x00000000c0014875                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001488c                SysRegistryEnterDirectory(regs*)
                0x00000000c00148a3                SysRegistryGetNext(regs*)
                0x00000000c00148ba                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00148f4                SysRegistryOpen(regs*)
                0x00000000c0014908                SysRegistryClose(regs*)
                0x00000000c001491f                SysRegistryEasyReadString(regs*)
                0x00000000c001496b                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00149b5       0x55 sys/sbrk.32
                0x00000000c00149b5                SysSbrk(regs*)
 .text          0x00000000c0014a0a       0x1c sys/setcwd.32
                0x00000000c0014a0a                SysSetCwd(regs*)
 .text          0x00000000c0014a26       0xf1 sys/settime.32
                0x00000000c0014a26                SysSetTime(regs*)
 .text          0x00000000c0014b17       0x73 sys/symlink.32
                0x00000000c0014b17                SysSymlink(regs*)
 .text          0x00000000c0014b8a       0x3e sys/timezone.32
                0x00000000c0014b8a                SysTimezone(regs*)
 .text          0x00000000c0014bc8       0xfc sys/truncate.32
                0x00000000c0014bc8                SysTruncate(regs*)
 .text          0x00000000c0014cc4       0x68 sys/write.32
                0x00000000c0014cc4                SysWrite(regs*)
 .text          0x00000000c0014d2c       0x9d sys/wsbe.32
                0x00000000c0014d2c                SysWsbe(regs*)
 .text          0x00000000c0014dc9       0x28 sys/yield.32
                0x00000000c0014dc9                SysYield(regs*)
 *fill*         0x00000000c0014df1        0x3 
 .text          0x00000000c0014df4      0x28d thr/alarm.32
                0x00000000c0014df4                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0014f90                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015081     0x12cc thr/elf.32
                0x00000000c0015081                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001530c                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00155ad                Thr::runtimeReferenceHelper()
                0x00000000c00155c0                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001560f                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00158cd                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016030                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016062                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016099                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00160b3                Thr::loadDLL(char const*, bool)
                0x00000000c0016314                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001634d       0x5a thr/exec.32
                0x00000000c001634d                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c00163a7        0x1 
 .text          0x00000000c00163a8     0x1269 thr/prcssthr.32
                0x00000000c00163a8                userModeEntryPoint(void*)
                0x00000000c00163d4                changeTSS
                0x00000000c0016404                switchToThread(ThreadControlBlock*)
                0x00000000c00164c4                Process::addArgs(char**)
                0x00000000c0016530                Process::Process(char const*, Process*, char**)
                0x00000000c0016530                Process::Process(char const*, Process*, char**)
                0x00000000c0016768                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016768                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016954                taskStartupFunction
                0x00000000c0016960                KeDisablePreemption()
                0x00000000c0016988                KeRestorePreemption()
                0x00000000c00169a8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ae8                Process::createUserThread()
                0x00000000c0016b08                setupMultitasking(void (*)())
                0x00000000c0016c50                schedule()
                0x00000000c0016ce4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016d10                blockTask(TaskState)
                0x00000000c0016d4c                waitTask(int, int*, int)
                0x00000000c0016d90                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016e44                milliTenthSleep(unsigned long long)
                0x00000000c0016e5c                sleep(unsigned long long)
                0x00000000c0016e7c                sleep(unsigned int)
                0x00000000c0016e94                milliTenthSleep(unsigned int)
                0x00000000c0016eb4                taskReturned
                0x00000000c0016efc                KeProcessFromPID(int)
                0x00000000c0016fa8                unblockTask(ThreadControlBlock*)
                0x00000000c001705c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001732c                cleanerTaskFunction(void*)
                0x00000000c0017444                KeTerminateCurrentThread(int)
 .text          0x00000000c0017611      0xe86 vm86/vm8086.32
                0x00000000c0017611                Vm::inbv(unsigned short)
                0x00000000c0017624                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017656                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017666                Vm::getSegment(unsigned int)
                0x00000000c001766e                Vm::getOffset(unsigned int)
                0x00000000c0017673                Vm::mainloop2()
                0x00000000c00176b4                Vm::mainVm8086Loop(void*)
                0x00000000c00176c8                Vm::mainloop3(unsigned long)
                0x00000000c00176fa                Vm::initialise8086()
                0x00000000c001773e                Vm::resetConventionalMemory8086()
                0x00000000c001773f                Vm::finish8086()
                0x00000000c00177b0                Vm::getOutput8086(unsigned char*)
                0x00000000c00177d5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017920                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017b65                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017c11                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017c22                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017c34                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017c45                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017c5a                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017c70                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017c85                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018497        0x1 
 .text          0x00000000c0018498      0x45f arch/i386/apic.32
                0x00000000c0018498                IOAPIC::close(int, int, void*)
                0x00000000c001849e                apicGetBase()
                0x00000000c00184d8                IOAPIC::IOAPIC()
                0x00000000c00184d8                IOAPIC::IOAPIC()
                0x00000000c0018500                apicOpen()
                0x00000000c001868c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00186be                IOAPIC::read(int)
                0x00000000c00186e6                IOAPIC::open(int, int, void*)
                0x00000000c00187cc                IOAPIC::write(int, int)
                0x00000000c00187f8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c00188f7        0x1 
 .text          0x00000000c00188f8     0x1f41 arch/i386/hal.32
                0x00000000c00188f8                noCopro(unsigned long)
                0x00000000c00188f9                HalRestart()
                0x00000000c0018904                HalShutdown()
                0x00000000c0018905                HalSleep()
                0x00000000c0018906                CPU::close(int, int, void*)
                0x00000000c0018909                x86ReadCMOS(unsigned char)
                0x00000000c001895d                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00189bf                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00189de                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c00189fb                AMD_K6_writeback(int, int, int)
                0x00000000c0018abb                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018b59                cpuidCheckEDX(unsigned int)
                0x00000000c0018b86                cpuidCheckECX(unsigned int)
                0x00000000c0018bb4                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018be2                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018c10                HalDetectFeatures()
                0x00000000c00199fb                HalEnableNMI()
                0x00000000c0019a0e                HalDisableNMI()
                0x00000000c0019a21                HalGetNMIState()
                0x00000000c0019a27                x86rdmsr(unsigned int)
                0x00000000c0019a65                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019aaa                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019ac0                HalFindRSDP()
                0x00000000c0019b9d                HalHandlePageFault(void*, void*)
                0x00000000c0019bcc                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019c0e                HalDisplayDebugInfo(void*)
                0x00000000c0019f9c                HalReceivedNMI()
                0x00000000c001a037                HalSystemIdle()
                0x00000000c001a096                i386SaveCoprocessor(void*)
                0x00000000c001a0aa                i386LoadCoprocessor(void*)
                0x00000000c001a0be                x87EmulHandler(regs*, void*)
                0x00000000c001a15b                HalInitialiseCoprocessor()
                0x00000000c001a1df                HalPanic(char const*)
                0x00000000c001a2f3                HalQueryPerformanceCounter()
                0x00000000c001a303                HalInitialise()
                0x00000000c001a4eb                HalMakeBeep(int)
                0x00000000c001a525                HalGetRand()
                0x00000000c001a528                HalEndOfInterrupt(int)
                0x00000000c001a554                CPU::CPU()
                0x00000000c001a554                CPU::CPU()
                0x00000000c001a5d8                CPU::setupSMEP()
                0x00000000c001a5e4                CPU::setupUMIP()
                0x00000000c001a5ee                CPU::setupTSC()
                0x00000000c001a5f8                CPU::setupLargePages()
                0x00000000c001a602                CPU::setupPAT()
                0x00000000c001a634                CPU::setupMTRR()
                0x00000000c001a636                CPU::setupGlobalPages()
                0x00000000c001a640                CPU::allowUsermodeDataAccess()
                0x00000000c001a64e                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a65c                CPU::setupSMAP()
                0x00000000c001a66a                CPU::setupFeatures()
                0x00000000c001a736                CPU::open(int, int, void*)
 .text          0x00000000c001a839      0x348 arch/i386/intctrl.32
                0x00000000c001a839                convertLegacyIRQNumber(int)
                0x00000000c001a875                KeSetupInterrupts()
                0x00000000c001a8d2                int_handler
                0x00000000c001a955                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a99f                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001aadc                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ab10                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ab81        0x3 
 .text          0x00000000c001ab84      0x2dc arch/i386/pic.32
                0x00000000c001ab84                picIoWait()
                0x00000000c001ab8c                picDisable()
                0x00000000c001abc0                picGetIRQReg(int)
                0x00000000c001ac3c                picOpen()
                0x00000000c001adc0                picEOI(int)
 .text          0x00000000c001ae60      0x5ed arch/i386/rtc.32
                0x00000000c001ae60                RTC::open(int, int, void*)
                0x00000000c001ae64                RTC::close(int, int, void*)
                0x00000000c001ae68                RTC::timeInSecondsUTC()
                0x00000000c001ae7a                RTC::timeInDatetimeUTC()
                0x00000000c001aea0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001aede                RTC::~RTC()
                0x00000000c001aede                RTC::~RTC()
                0x00000000c001af02                RTC::~RTC()
                0x00000000c001af2c                RTC::get_update_in_progress_flag()
                0x00000000c001af40                RTC::completeRTCRefresh()
                0x00000000c001b1ee                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b364                rtcIRQHandler(regs*, void*)
                0x00000000c001b3a4                RTC::RTC()
                0x00000000c001b3a4                RTC::RTC()
 *fill*         0x00000000c001b44d        0x3 
 .text          0x00000000c001b450      0x1f4 arch/i386/vga.32
                0x00000000c001b450                HalConsoleScroll(int, int)
                0x00000000c001b558                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b5bc                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b644     0x14f3 fs/fat/vfslink.32
                0x00000000c001b644                FAT::getName()
                0x00000000c001b64c                FAT::tell(void*, unsigned long long*)
                0x00000000c001b688                FAT::stat(void*, unsigned long long*)
                0x00000000c001b6c4                FAT::~FAT()
                0x00000000c001b6c4                FAT::~FAT()
                0x00000000c001b6e8                FAT::~FAT()
                0x00000000c001b710                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b7b4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b894                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba78                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bc94                FAT::allocateSwapfile(char const*, int)
                0x00000000c001be54                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bfc4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c024                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c084                FAT::close(void*)
                0x00000000c001c0d8                FAT::closeDir(void*)
                0x00000000c001c12c                FAT::truncate(void*, unsigned long long)
                0x00000000c001c198                FAT::seek(void*, unsigned long long)
                0x00000000c001c1f0                fatWrapperReadDisk
                0x00000000c001c230                fatWrapperWriteDisk
                0x00000000c001c270                fatWrapperIoctl
                0x00000000c001c390                FAT::FAT()
                0x00000000c001c390                FAT::FAT()
                0x00000000c001c3e8                FAT::fixFilepath(char*)
                0x00000000c001c428                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c59c                FAT::openDir(char const*, void**)
                0x00000000c001c64c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c744                FAT::unlink(char const*)
                0x00000000c001c7c4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c97c                FAT::rename(char const*, char const*)
                0x00000000c001ca48                FAT::mkdir(char const*)
                0x00000000c001cac8                FAT::exists(char const*)
 *fill*         0x00000000c001cb37        0x1 
 .text          0x00000000c001cb38       0x94 fs/iso9660/helper.32
                0x00000000c001cb38                isoReadDiscSectorHelper
                0x00000000c001cb94                iso_kprintf
                0x00000000c001cbb0                iso_kprintfd
 .text          0x00000000c001cbcc      0x71a fs/iso9660/vfslink.32
                0x00000000c001cbcc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cbd2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cbd8                ISO9660::getName()
                0x00000000c001cbde                ISO9660::closeDir(void*)
                0x00000000c001cbe8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cbee                ISO9660::unlink(char const*)
                0x00000000c001cbf4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cbfa                ISO9660::rename(char const*, char const*)
                0x00000000c001cc00                ISO9660::mkdir(char const*)
                0x00000000c001cc06                ISO9660::~ISO9660()
                0x00000000c001cc06                ISO9660::~ISO9660()
                0x00000000c001cc2a                ISO9660::~ISO9660()
                0x00000000c001cc52                ISO9660::exists(char const*)
                0x00000000c001cc66                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cd4c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cd94                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cdd6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ce14                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ce66                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cfa8                ISO9660::close(void*)
                0x00000000c001cfd8                ISO9660::openDir(char const*, void**)
                0x00000000c001d0b2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d1cd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d24c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d2be                ISO9660::ISO9660()
                0x00000000c001d2be                ISO9660::ISO9660()
 .text          0x00000000c001d2e6      0x26c hal/sound/sndcard.32
                0x00000000c001d2e6                SoundCard::beginPlayback()
                0x00000000c001d2f4                SoundCard::stopPlayback()
                0x00000000c001d302                SoundCard::SoundCard(char const*)
                0x00000000c001d302                SoundCard::SoundCard(char const*)
                0x00000000c001d3a0                SoundCard::~SoundCard()
                0x00000000c001d3a0                SoundCard::~SoundCard()
                0x00000000c001d3c4                SoundCard::~SoundCard()
                0x00000000c001d3ee                SoundCard::configureRates(int, int, int)
                0x00000000c001d41e                SoundCard::getSamples16(int, short*)
                0x00000000c001d47a                SoundCard::getSamples32(int, int*)
                0x00000000c001d500                SoundCard::addChannel(SoundPort*)
                0x00000000c001d53e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001d552        0x2 
 .text          0x00000000c001d554      0x42f hal/sound/sndport.32
                0x00000000c001d554                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d554                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d5e0                SoundPort::~SoundPort()
                0x00000000c001d5e0                SoundPort::~SoundPort()
                0x00000000c001d614                SoundPort::unpause()
                0x00000000c001d620                SoundPort::pause()
                0x00000000c001d62c                SoundPort::getBufferUsed()
                0x00000000c001d634                SoundPort::getBufferSize()
                0x00000000c001d63c                SoundPort::buffer8(signed char*, int)
                0x00000000c001d6d0                SoundPort::buffer16(short*, int)
                0x00000000c001d764                SoundPort::buffer32(int*, int)
                0x00000000c001d7f0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d8c0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 *fill*         0x00000000c001d983        0x1 
 .text          0x00000000c001d984      0xc25 hw/bus/pci.32
                0x00000000c001d984                PCI::open(int, int, void*)
                0x00000000c001d9a2                PCI::close(int, int, void*)
                0x00000000c001d9a6                PCI::PCI()
                0x00000000c001d9a6                PCI::PCI()
                0x00000000c001da3e                PCI::readBAR8(unsigned int, int)
                0x00000000c001da5a                PCI::readBAR16(unsigned int, int)
                0x00000000c001da78                PCI::readBAR32(unsigned int, int)
                0x00000000c001da94                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dab4                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dad6                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001daf6                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001db6c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dc16                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc3a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc62                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcac                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcd4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcf8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd1c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd44                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dda8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001de8e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e158                PCI::checkBus(unsigned char)
                0x00000000c001e17c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e362                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e4de                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e550                PCI::detect()
 *fill*         0x00000000c001e5a9        0x1 
 .text          0x00000000c001e5aa      0xe52 hw/diskctrl/ide.32
                0x00000000c001e5aa                IDE::close(int, int, void*)
                0x00000000c001e5ae                IDE::IDE()
                0x00000000c001e5ae                IDE::IDE()
                0x00000000c001e5e2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e5f4                selectDrive(unsigned char, unsigned char)
                0x00000000c001e5f6                IDE::getBase(unsigned char)
                0x00000000c001e608                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e6c8                IDE::read(unsigned char, unsigned char)
                0x00000000c001e77c                IDE::waitInterrupt(unsigned char)
                0x00000000c001e7df                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e7fb                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e818                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e862                IDE::open(int, int, void*)
                0x00000000c001edba                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ee8a                IDE::detect()
                0x00000000c001f2ee                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f3a8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f3fc      0x33f hw/diskctrl/satabus.32
                0x00000000c001f3fc                SATABus::close(int, int, void*)
                0x00000000c001f400                SATABus::detect()
                0x00000000c001f402                SATABus::SATABus()
                0x00000000c001f402                SATABus::SATABus()
                0x00000000c001f488                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f4ba                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f502                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f522                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f54c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f65e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f708                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f73b        0x1 
 .text          0x00000000c001f73c      0x7c1 hw/diskphys/ata.32
                0x00000000c001f73c                ATA::close(int, int, void*)
                0x00000000c001f760                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f762                ATA::ATA()
                0x00000000c001f762                ATA::ATA()
                0x00000000c001f790                ATA::flush(bool)
                0x00000000c001f7de                ATA::readyForCommand()
                0x00000000c001f82a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fc32                ATA::read(unsigned long long, int, void*)
                0x00000000c001fc7e                ATA::write(unsigned long long, int, void*)
                0x00000000c001fcca                ATA::detectCHS()
                0x00000000c001fcf4                ATA::open(int, int, void*)
                0x00000000c001fedf                combineCharAndColour(char, unsigned char)
                0x00000000c001fef0                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001fefd        0x1 
 .text          0x00000000c001fefe      0x612 hw/diskphys/atapi.32
                0x00000000c001fefe                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ff04                ATAPI::close(int, int, void*)
                0x00000000c001ff28                ATAPI::ATAPI()
                0x00000000c001ff28                ATAPI::ATAPI()
                0x00000000c001ff56                ATAPI::readyForCommand()
                0x00000000c001ffa8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020268                ATAPI::diskRemoved()
                0x00000000c00202a2                ATAPI::eject()
                0x00000000c00202ea                ATAPI::diskInserted()
                0x00000000c00202f6                ATAPI::detectMedia()
                0x00000000c00203b6                ATAPI::open(int, int, void*)
                0x00000000c0020496                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020510      0x44a hw/diskphys/sata.32
                0x00000000c0020510                SATA::close(int, int, void*)
                0x00000000c0020534                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020536                SATA::open(int, int, void*)
                0x00000000c00205ee                SATA::SATA()
                0x00000000c00205ee                SATA::SATA()
                0x00000000c002061c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00208a2                SATA::read(unsigned long long, int, void*)
                0x00000000c00208ee                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c002095a      0x5dc hw/diskphys/satapi.32
                0x00000000c002095a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020960                SATAPI::close(int, int, void*)
                0x00000000c0020984                SATAPI::SATAPI()
                0x00000000c0020984                SATAPI::SATAPI()
                0x00000000c00209b2                SATAPI::diskRemoved()
                0x00000000c00209b4                SATAPI::diskInserted()
                0x00000000c00209d0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020cba                SATAPI::eject()
                0x00000000c0020cf6                SATAPI::detectMedia()
                0x00000000c0020d4c                SATAPI::open(int, int, void*)
                0x00000000c0020e4c                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0020f36        0x2 
 .text          0x00000000c0020f38       0xf0 hw/timer/apictimer.32
                0x00000000c0020f38                APICTimer::close(int, int, void*)
                0x00000000c0020f40                apicTimerHandler(regs*, void*)
                0x00000000c0020f68                APICTimer::open(int, int, void*)
                0x00000000c0020fd8                APICTimer::write(int)
                0x00000000c0021000                APICTimer::APICTimer()
                0x00000000c0021000                APICTimer::APICTimer()
 .text          0x00000000c0021028      0x1ad hw/timer/pit.32
                0x00000000c0021028                PIT::write(int)
                0x00000000c00210ac                pitHandler(regs*, void*)
                0x00000000c00210d4                PIT::open(int, int, void*)
                0x00000000c0021124                PIT::close(int, int, void*)
                0x00000000c0021154                PIT::PIT()
                0x00000000c0021154                PIT::PIT()
 *fill*         0x00000000c00211d5        0xb 
 .text          0x00000000c00211e0       0x6f arch/i386/avx.32
                0x00000000c00211e0                avxDetect
                0x00000000c002120a                avxSave
                0x00000000c002121b                avxLoad
                0x00000000c002122c                avxInit
                0x00000000c002124e                avxClose
 *fill*         0x00000000c002124f        0x1 
 .text          0x00000000c0021250      0x2b4 arch/i386/interrupt.32
                0x00000000c0021250                isr0
                0x00000000c0021260                isr1
                0x00000000c002126a                isr2
                0x00000000c0021274                isr3
                0x00000000c002127e                isr4
                0x00000000c0021288                isr5
                0x00000000c0021292                isr6
                0x00000000c002129c                isr7
                0x00000000c00212a6                isr8
                0x00000000c00212ae                isr9
                0x00000000c00212b8                isr10
                0x00000000c00212c0                isr11
                0x00000000c00212c8                isr12
                0x00000000c00212d0                isr13
                0x00000000c00212ea                isr14
                0x00000000c00212f2                isr15
                0x00000000c00212fc                isr16
                0x00000000c0021306                isr17
                0x00000000c0021310                isr18
                0x00000000c002131a                irq3
                0x00000000c0021324                irq4
                0x00000000c002132e                irq5
                0x00000000c0021338                irq6
                0x00000000c0021342                irq7
                0x00000000c002134c                irq8
                0x00000000c0021356                irq9
                0x00000000c0021360                irq10
                0x00000000c002136a                irq11
                0x00000000c0021374                irq12
                0x00000000c002137e                irq13
                0x00000000c0021388                irq14
                0x00000000c0021392                irq15
                0x00000000c002139c                irq1
                0x00000000c00213a3                irq2
                0x00000000c00213aa                isr96
                0x00000000c00213b1                irq0
                0x00000000c00213b6                int_common_stub
                0x00000000c00213b6                syscall_common_stub
                0x00000000c00214b4                irq16
                0x00000000c00214be                irq17
                0x00000000c00214c8                irq18
                0x00000000c00214d2                irq19
                0x00000000c00214dc                irq20
                0x00000000c00214e6                irq21
                0x00000000c00214f0                irq22
                0x00000000c00214fa                irq23
 *fill*         0x00000000c0021504        0xc 
 .text          0x00000000c0021510       0x10 arch/i386/rdrand.32
                0x00000000c0021510                i386GetRDRAND
 .text          0x00000000c0021520       0x39 arch/i386/sse.32
                0x00000000c0021520                sseDetect
                0x00000000c0021538                sseSave
                0x00000000c0021540                sseLoad
                0x00000000c0021548                sseInit
                0x00000000c0021558                sseClose
 *fill*         0x00000000c0021559        0x7 
 .text          0x00000000c0021560       0x4f arch/i386/x87.32
                0x00000000c0021566                x87Detect
                0x00000000c0021587                x87Save
                0x00000000c002158e                x87Load
                0x00000000c0021595                x87Init
                0x00000000c00215ae                x87Close
 *fill*         0x00000000c00215af        0x1 
 .text          0x00000000c00215b0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00215d5        0x0 crtn.32
 *fill*         0x00000000c00215d5        0x3 
 .text          0x00000000c00215d8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00215d8                __divdi3
 *fill*         0x00000000c0021723        0x1 
 .text          0x00000000c0021724      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021724                __moddi3
 *fill*         0x00000000c00218a2        0x2 
 .text          0x00000000c00218a4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00218a4                __udivdi3
 *fill*         0x00000000c00219a3        0x1 
 .text          0x00000000c00219a4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00219a4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021ac0        0x0
 .iplt          0x00000000c0021ac0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021abe        0xf
 .init          0x00000000c0021abe        0x3 crti.32
                0x00000000c0021abe                _init
 .init          0x00000000c0021ac1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021ac6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021acb        0x2 crtn.32

.fini           0x00000000c0021acd        0xa
 .fini          0x00000000c0021acd        0x3 crti.32
                0x00000000c0021acd                _fini
 .fini          0x00000000c0021ad0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ad5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ad8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ad8       0x1a hal/device.32
                0x00000000c0021ad8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ad8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021af2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021af2       0x2a hal/device.32
                0x00000000c0021af2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b1c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b1c       0xdc hal/device.32
                0x00000000c0021b1c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021bf8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021bf8       0x42 hal/device.32
                0x00000000c0021bf8                LinkedList<Device>::LinkedList()
                0x00000000c0021bf8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c3c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c3c       0x1c hal/timer.32
                0x00000000c0021c3c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c58        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c58        0x7 hal/timer.32
                0x00000000c0021c58                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c60       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c60       0xbc hal/timer.32
                0x00000000c0021c60                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d1c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d1c       0xda hal/timer.32
                0x00000000c0021d1c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021df8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021df8       0x23 hw/acpi.32
                0x00000000c0021df8                ACPI::~ACPI()
                0x00000000c0021df8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021e1c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021e1c       0x2a hw/acpi.32
                0x00000000c0021e1c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e48        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e48        0x2 hw/acpi.32
                0x00000000c0021e48                LinkedList<Device>::~LinkedList()
                0x00000000c0021e48                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e4c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e4c       0x1c hw/acpi.32
                0x00000000c0021e4c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e68        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e68        0x7 hw/acpi.32
                0x00000000c0021e68                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e70       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e70       0xb8 hw/acpi.32
                0x00000000c0021e70                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021f28       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021f28       0x23 krnl/computer.32
                0x00000000c0021f28                Computer::~Computer()
                0x00000000c0021f28                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021f4c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021f4c       0x2a krnl/computer.32
                0x00000000c0021f4c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021f76       0x24
 .text._Z10idleCommonv
                0x00000000c0021f76       0x24 krnl/idle.32
                0x00000000c0021f76                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f9a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f9a        0x2 krnl/unixfile.32
                0x00000000c0021f9a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021f9a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f9c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f9c       0x42 krnl/unixfile.32
                0x00000000c0021f9c                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021f9c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fde       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fde       0xd3 krnl/unixfile.32
                0x00000000c0021fde                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220b2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220b2        0x7 krnl/unixfile.32
                0x00000000c00220b2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220ba       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220ba       0xa1 krnl/unixfile.32
                0x00000000c00220ba                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002215c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002215c        0x8 krnl/unixfile.32
                0x00000000c002215c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022164        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022164        0x8 sys/kill.32
                0x00000000c0022164                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002216c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002216c        0x2 thr/prcssthr.32
                0x00000000c002216c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002216c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022170       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022170       0x49 thr/prcssthr.32
                0x00000000c0022170                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022170                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221bc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221bc       0x42 thr/prcssthr.32
                0x00000000c00221bc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00221bc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c00221fe       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00221fe       0x23 arch/i386/apic.32
                0x00000000c00221fe                IOAPIC::~IOAPIC()
                0x00000000c00221fe                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022222       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022222       0x2a arch/i386/apic.32
                0x00000000c0022222                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002224c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002224c       0x23 arch/i386/hal.32
                0x00000000c002224c                CPU::~CPU()
                0x00000000c002224c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022270       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022270       0x2a arch/i386/hal.32
                0x00000000c0022270                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002229a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002229a       0x23 hw/bus/pci.32
                0x00000000c002229a                PCI::~PCI()
                0x00000000c002229a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00222be       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00222be       0x2a hw/bus/pci.32
                0x00000000c00222be                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00222e8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00222e8       0x23 hw/diskctrl/ide.32
                0x00000000c00222e8                IDE::~IDE()
                0x00000000c00222e8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002230c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002230c       0x2a hw/diskctrl/ide.32
                0x00000000c002230c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022336       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022336       0x23 hw/diskctrl/satabus.32
                0x00000000c0022336                SATABus::~SATABus()
                0x00000000c0022336                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002235a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002235a       0x2a hw/diskctrl/satabus.32
                0x00000000c002235a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022384       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022384       0x23 hw/diskphys/ata.32
                0x00000000c0022384                ATA::~ATA()
                0x00000000c0022384                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00223a8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00223a8       0x2a hw/diskphys/ata.32
                0x00000000c00223a8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00223d2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00223d2       0x23 hw/diskphys/atapi.32
                0x00000000c00223d2                ATAPI::~ATAPI()
                0x00000000c00223d2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00223f6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00223f6       0x2a hw/diskphys/atapi.32
                0x00000000c00223f6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022420       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022420       0x23 hw/diskphys/sata.32
                0x00000000c0022420                SATA::~SATA()
                0x00000000c0022420                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022444       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022444       0x2a hw/diskphys/sata.32
                0x00000000c0022444                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002246e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002246e       0x23 hw/diskphys/satapi.32
                0x00000000c002246e                SATAPI::~SATAPI()
                0x00000000c002246e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022492       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022492       0x2a hw/diskphys/satapi.32
                0x00000000c0022492                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00224bc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00224bc       0x23 hw/timer/apictimer.32
                0x00000000c00224bc                APICTimer::~APICTimer()
                0x00000000c00224bc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00224e0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00224e0       0x2a hw/timer/apictimer.32
                0x00000000c00224e0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002250c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002250c       0x23 hw/timer/pit.32
                0x00000000c002250c                PIT::~PIT()
                0x00000000c002250c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022530       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022530       0x2a hw/timer/pit.32
                0x00000000c0022530                PIT::~PIT()

.rodata         0x00000000c002255a     0x3b46
                0x00000000c002255a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002255a        0x2 
 .ctors         0x00000000c002255c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022560        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022564        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022568        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002256c                end_ctors = .
                0x00000000c002256c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002256c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022570        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022570                __DTOR_END__
                0x00000000c0022574                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022574        0xc 
 .rodata        0x00000000c0022580      0x101 acpica/utclib.32
                0x00000000c0022580                AcpiGbl_Ctypes
 *fill*         0x00000000c0022681        0x3 
 .rodata        0x00000000c0022684       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002269c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00226e6       0x1a 
 .rodata        0x00000000c0022700       0xed fs/fat/ff.32
 *fill*         0x00000000c00227ed       0x13 
 .rodata        0x00000000c0022800      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022c00       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022c6f        0x1 
 .rodata.str1.4
                0x00000000c0022c70       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022ca8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022df8      0x169 dbg/usban.32
 *fill*         0x00000000c0022f61        0x3 
 .rodata.str1.4
                0x00000000c0022f64      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002309b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00231be       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023217        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023218       0x6c fs/vfs.32
                0x00000000c0023218                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023284       0x1c fs/vfs.32
                0x00000000c0023284                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00232a0       0x1c fs/vfs.32
                0x00000000c00232a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00232bc       0x2c hal/bus.32
                0x00000000c00232bc                vtable for Bus
 *fill*         0x00000000c00232e8       0x18 
 .rodata        0x00000000c0023300      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023450       0x3c hal/clock.32
                0x00000000c0023450                vtable for Clock
 .rodata.str1.1
                0x00000000c002348c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00234f0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023512       0x15 hal/device.32
 *fill*         0x00000000c0023527        0x1 
 .rodata._ZTV6Device
                0x00000000c0023528       0x2c hal/device.32
                0x00000000c0023528                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023554       0x2c hal/device.32
                0x00000000c0023554                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023580       0x2c hal/diskctrl.32
                0x00000000c0023580                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00235ac       0x38 hal/diskphys.32
                0x00000000c00235ac                vtable for PhysicalDisk
 .rodata        0x00000000c00235e4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023637        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023638       0x34 hal/keybrd.32
                0x00000000c0023638                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002366c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00236b0       0x2c hal/logidisk.32
                0x00000000c00236b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00236dc       0x2c hal/mouse.32
                0x00000000c00236dc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023708       0x34 hal/nic.32
                0x00000000c0023708                vtable for NIC
 .rodata.str1.1
                0x00000000c002373c        0xb hal/partition.32
 *fill*         0x00000000c0023747        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023748       0x44 hal/serial.32
                0x00000000c0023748                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002378c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00237d7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00237df       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00237df       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00237df       0x47 hal/timer.32
 *fill*         0x00000000c0023826        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023828       0x30 hal/timer.32
                0x00000000c0023828                vtable for Timer
 .rodata.str1.1
                0x00000000c0023858       0x3e hal/vcache.32
 *fill*         0x00000000c0023896        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023898       0x10 hal/vcache.32
                0x00000000c0023898                vtable for VCache
 .rodata.str1.1
                0x00000000c00238a8       0xba hal/video.32
 *fill*         0x00000000c0023962        0x2 
 .rodata._ZTV5Video
                0x00000000c0023964       0x4c hal/video.32
                0x00000000c0023964                vtable for Video
 .rodata.str1.1
                0x00000000c00239b0      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023b67        0x1 
 .rodata.str1.4
                0x00000000c0023b68       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023c03       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023c03        0x8 hw/acpi.32
 *fill*         0x00000000c0023c03        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023c04       0x2c hw/acpi.32
                0x00000000c0023c04                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023c30       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023c43       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0023c5c       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023c6f       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023ca2        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023ca5       0x87 krnl/cm.32
                                         0x89 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023d2c       0x21 krnl/computer.32
 *fill*         0x00000000c0023d4d        0x3 
 .rodata.str1.4
                0x00000000c0023d50       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023d7c       0x2c krnl/computer.32
                0x00000000c0023d7c                vtable for Computer
 .rodata.str1.1
                0x00000000c0023da8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0023de4       0x3e krnl/fault.32
 *fill*         0x00000000c0023e22        0x2 
 .rodata.str1.4
                0x00000000c0023e24       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023e4c        0x4 krnl/intlformat.32
 .rodata.str1.4
                0x00000000c0023e50       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023e80        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023e8f       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0023f2e        0x2 
 .rodata.str1.4
                0x00000000c0023f30       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c0023f78      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002407d       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00240d5       0x39 krnl/pipe.32
 *fill*         0x00000000c002410e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024110       0x1c krnl/pipe.32
                0x00000000c0024110                vtable for Pipe
 .rodata.str1.1
                0x00000000c002412c       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0024180       0xd9 krnl/resolve.32
 *fill*         0x00000000c0024259        0x3 
 .rodata.str1.4
                0x00000000c002425c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002427b      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024383       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c00243e6       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c0024444       0x1c krnl/terminal.32
                0x00000000c0024444                vtable for VgaText
 .rodata        0x00000000c0024460       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002449b       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002449b       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002449b       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002449b        0x8 krnl/unixfile.32
 *fill*         0x00000000c002449b        0x1 
 .rodata.str1.4
                0x00000000c002449c       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00244bc       0x1c krnl/unixfile.32
                0x00000000c00244bc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00244d8       0x1c krnl/unixfile.32
                0x00000000c00244d8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00244f4      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024807      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024961       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024976        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024985        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002498f       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00249b0       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c00249f4       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024a09       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024a35       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024a46      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024c5f       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024cb6        0x2 
 .rodata.str1.4
                0x00000000c0024cb8       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024db0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024db0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024db0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024db0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024db0       0x61 vm86/vm8086.32
 *fill*         0x00000000c0024e11        0x3 
 .rodata.str1.4
                0x00000000c0024e14       0x81 vm86/vm8086.32
 *fill*         0x00000000c0024e95        0x3 
 .rodata        0x00000000c0024e98      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025228       0x17 arch/i386/apic.32
 *fill*         0x00000000c002523f        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025240       0x2c arch/i386/apic.32
                0x00000000c0025240                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c002526c      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c002558e        0x2 
 .rodata.str1.4
                0x00000000c0025590       0x23 arch/i386/hal.32
 *fill*         0x00000000c00255b3        0x1 
 .rodata._ZTV3CPU
                0x00000000c00255b4       0x2c arch/i386/hal.32
                0x00000000c00255b4                vtable for CPU
 .rodata.str1.4
                0x00000000c00255e0       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025641       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002567f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025694       0x3c arch/i386/rtc.32
                0x00000000c0025694                vtable for RTC
 .rodata.str1.1
                0x00000000c00256d0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025711        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025714       0x6c fs/fat/vfslink.32
                0x00000000c0025714                vtable for FAT
 .rodata.str1.1
                0x00000000c0025780       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025780      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00258b8       0x6c fs/iso9660/vfslink.32
                0x00000000c00258b8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025924       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025968       0x34 hal/sound/sndcard.32
                0x00000000c0025968                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002599c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00259db       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025a13       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025ab4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025b18       0x2c hw/bus/pci.32
                0x00000000c0025b18                vtable for PCI
 .rodata.str1.1
                0x00000000c0025b44      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025c68       0x2c hw/diskctrl/ide.32
                0x00000000c0025c68                vtable for IDE
 .rodata.str1.4
                0x00000000c0025c94       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025cb8       0x2c hw/diskctrl/satabus.32
                0x00000000c0025cb8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025ce4       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025d9f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025da0       0x38 hw/diskphys/ata.32
                0x00000000c0025da0                vtable for ATA
 .rodata.str1.1
                0x00000000c0025dd8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025de5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025de8       0x38 hw/diskphys/atapi.32
                0x00000000c0025de8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025e20       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025ea8       0x38 hw/diskphys/sata.32
                0x00000000c0025ea8                vtable for SATA
 .rodata.str1.1
                0x00000000c0025ee0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025fca        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025fcc       0x38 hw/diskphys/satapi.32
                0x00000000c0025fcc                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026004       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002601f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026020       0x30 hw/timer/apictimer.32
                0x00000000c0026020                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026050       0x1d hw/timer/pit.32
 *fill*         0x00000000c002606d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0026070       0x30 hw/timer/pit.32
                0x00000000c0026070                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00260a0      0xa85
 *(.data)
 .data          0x00000000c00260a0        0x0 crti.32
 .data          0x00000000c00260a0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00260a0                __dso_handle
 .data          0x00000000c00260a4        0x0 acpica/utclib.32
 .data          0x00000000c00260a4        0x0 krnl/malloc.32
 .data          0x00000000c00260a4        0x0 libk/ctype.32
 .data          0x00000000c00260a4        0x0 libk/string.32
 .data          0x00000000c00260a4        0x0 arch/i386/cc.32
 .data          0x00000000c00260a4        0x0 fs/fat/diskio.32
 .data          0x00000000c00260a4        0x0 fs/fat/ff.32
 .data          0x00000000c00260a4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00260a4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00260a4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00260a4        0x0 dbg/kconsole.32
 *fill*         0x00000000c00260a4       0x1c 
 .data          0x00000000c00260c0       0x28 dbg/usban.32
                0x00000000c00260c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00260e8        0x0 fs/symlink.32
 .data          0x00000000c00260e8        0x0 fs/vfs.32
 .data          0x00000000c00260e8        0x0 hal/bus.32
 .data          0x00000000c00260e8        0x0 hal/buzzer.32
 .data          0x00000000c00260e8        0x0 hal/clock.32
 .data          0x00000000c00260e8        0x0 hal/device.32
 .data          0x00000000c00260e8        0x0 hal/diskctrl.32
 .data          0x00000000c00260e8        0x0 hal/diskphys.32
 .data          0x00000000c00260e8        0x0 hal/fpu.32
 .data          0x00000000c00260e8        0x0 hal/keybrd.32
 .data          0x00000000c00260e8        0x0 hal/logidisk.32
 .data          0x00000000c00260e8        0x0 hal/mouse.32
 .data          0x00000000c00260e8        0x0 hal/nic.32
 .data          0x00000000c00260e8        0x0 hal/partition.32
 .data          0x00000000c00260e8        0x0 hal/serial.32
 .data          0x00000000c00260e8        0x0 hal/timer.32
 .data          0x00000000c00260e8        0x0 hal/vcache.32
 .data          0x00000000c00260e8        0x0 hal/video.32
 .data          0x00000000c00260e8       0x10 hw/acpi.32
                0x00000000c00260e8                legacyIRQRemaps
 .data          0x00000000c00260f8        0x0 krnl/assert.32
 .data          0x00000000c00260f8        0x0 krnl/atexit.32
 .data          0x00000000c00260f8        0x0 krnl/bootflags.32
 .data          0x00000000c00260f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00260f8        0x4 krnl/c++.32
                0x00000000c00260f8                __stack_chk_guard
 .data          0x00000000c00260fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00260fc        0x4 
 .data          0x00000000c0026100      0x100 krnl/cm.32
                0x00000000c0026100                CmComponents
 .data          0x00000000c0026200        0x0 krnl/computer.32
 .data          0x00000000c0026200      0x400 krnl/crc32.32
                0x00000000c0026200                KiPolyLookupCRC32
 .data          0x00000000c0026600       0x4d krnl/env.32
                0x00000000c0026600                defaultSysEnv
 .data          0x00000000c002664d        0x0 krnl/fault.32
 .data          0x00000000c002664d        0x0 krnl/gdt.32
 .data          0x00000000c002664d        0x0 krnl/idle.32
 .data          0x00000000c002664d        0x0 krnl/idt.32
 .data          0x00000000c002664d        0x0 krnl/inlines.32
 .data          0x00000000c002664d        0x0 krnl/intlformat.32
 .data          0x00000000c002664d        0x0 krnl/intops.32
 *fill*         0x00000000c002664d        0x3 
 .data          0x00000000c0026650        0x4 krnl/kheap.32
 .data          0x00000000c0026654        0x0 krnl/mailbox.32
 .data          0x00000000c0026654        0x0 krnl/main.32
 .data          0x00000000c0026654        0x0 krnl/mutex.32
 .data          0x00000000c0026654        0x0 krnl/panic.32
 .data          0x00000000c0026654        0x4 krnl/physmgr.32
                0x00000000c0026654                Phys::bitmap
 .data          0x00000000c0026658        0x0 krnl/pipe.32
 .data          0x00000000c0026658        0x0 krnl/powctrl.32
 .data          0x00000000c0026658        0x0 krnl/random.32
 .data          0x00000000c0026658        0x0 krnl/resolve.32
 .data          0x00000000c0026658        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026658        0x8 
 .data          0x00000000c0026660       0x4c krnl/signal.32
                0x00000000c0026660                KiDefaultSignalHandlers
 *fill*         0x00000000c00266ac       0x14 
 .data          0x00000000c00266c0      0x124 krnl/syscalls.32
                0x00000000c00266c0                systemCallHandlers
 *fill*         0x00000000c00267e4       0x1c 
 .data          0x00000000c0026800       0x60 krnl/terminal.32
                0x00000000c0026800                VgaText::hiddenOut
                0x00000000c0026820                ansiToVGAMappings
 .data          0x00000000c0026860        0x0 krnl/tss.32
 .data          0x00000000c0026860        0x4 krnl/unixfile.32
                0x00000000c0026860                UnixFile::nextFd
 .data          0x00000000c0026864       0x15 krnl/virtmgr.32
                0x00000000c0026864                Virt::pageAllocPtr
                0x00000000c0026868                Virt::bitmap
                0x00000000c002686c                Virt::swapfileSectorsPerPage
                0x00000000c0026870                Virt::swapfileLength
                0x00000000c0026874                Virt::swapfileSector
                0x00000000c0026878                Virt::swapfileDrive
 .data          0x00000000c0026879        0x0 sys/alarm.32
 .data          0x00000000c0026879        0x0 sys/eject.32
 .data          0x00000000c0026879        0x0 sys/exit.32
 .data          0x00000000c0026879        0x0 sys/getcwd.32
 .data          0x00000000c0026879        0x0 sys/getpid.32
 .data          0x00000000c0026879        0x0 sys/getramdata.32
 .data          0x00000000c0026879        0x0 sys/getvgaptr.32
 .data          0x00000000c0026879        0x0 sys/kill.32
 .data          0x00000000c0026879        0x0 sys/loaddll.32
 .data          0x00000000c0026879        0x0 sys/pause.32
 .data          0x00000000c0026879        0x0 sys/pthread.32
 .data          0x00000000c0026879        0x0 sys/read.32
 .data          0x00000000c0026879        0x0 sys/registersignal.32
 .data          0x00000000c0026879        0x0 sys/registry.32
 .data          0x00000000c0026879        0x0 sys/sbrk.32
 .data          0x00000000c0026879        0x0 sys/setcwd.32
 .data          0x00000000c0026879        0x0 sys/settime.32
 .data          0x00000000c0026879        0x0 sys/symlink.32
 .data          0x00000000c0026879        0x0 sys/timezone.32
 .data          0x00000000c0026879        0x0 sys/truncate.32
 .data          0x00000000c0026879        0x0 sys/write.32
 .data          0x00000000c0026879        0x0 sys/wsbe.32
 .data          0x00000000c0026879        0x0 sys/yield.32
 .data          0x00000000c0026879        0x0 thr/alarm.32
 .data          0x00000000c0026879        0x0 thr/elf.32
 .data          0x00000000c0026879        0x0 thr/exec.32
 *fill*         0x00000000c0026879        0x3 
 .data          0x00000000c002687c        0x4 thr/prcssthr.32
                0x00000000c002687c                keNextPID
 .data          0x00000000c0026880        0x0 vm86/vm8086.32
 .data          0x00000000c0026880        0x0 arch/i386/apic.32
 .data          0x00000000c0026880      0x2a4 arch/i386/hal.32
                0x00000000c0026880                exceptionNames
                0x00000000c0026b20                lastCode
 .data          0x00000000c0026b24        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026b24        0x0 arch/i386/pic.32
 .data          0x00000000c0026b24        0x0 arch/i386/rtc.32
 .data          0x00000000c0026b24        0x0 arch/i386/vga.32
 .data          0x00000000c0026b24        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026b24        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026b24        0x1 fs/iso9660/vfslink.32
                0x00000000c0026b24                recentDriveletter
 .data          0x00000000c0026b25        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026b25        0x0 hal/sound/sndport.32
 .data          0x00000000c0026b25        0x0 hw/bus/pci.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026b25        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026b25        0x0 hw/timer/pit.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026b25        0x0 crtn.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026b28        0x0
 .got           0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026b28        0x0
 .got.plt       0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026b28        0x0
 .igot.plt      0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026b28        0x0
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026b25      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026b25        0x3 
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026b28       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026b80       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026bc0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026c2c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74fb
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0      0x120 krnl/atexit.32
                0x00000000c002bfe0                kiNextAtexitHandler
                0x00000000c002c000                kiAtexitContexts
                0x00000000c002c080                kiAtexitHandlers
 .bss           0x00000000c002c100        0x4 krnl/bootflags.32
                0x00000000c002c100                keBootSettings
 .bss           0x00000000c002c104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c104        0x0 krnl/c++.32
 .bss           0x00000000c002c104        0x0 krnl/cdefs.32
 .bss           0x00000000c002c104        0x4 krnl/cm.32
 .bss           0x00000000c002c108        0x6 krnl/computer.32
                0x00000000c002c108                computer
                0x00000000c002c10c                keIsPreemptionOn
                0x00000000c002c10d                keIsSchedulingOn
 .bss           0x00000000c002c10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002c10e        0x2 
 .bss           0x00000000c002c110        0x8 krnl/env.32
                0x00000000c002c110                KeUserEnv
                0x00000000c002c114                KeSystemEnv
 .bss           0x00000000c002c118        0x0 krnl/fault.32
 .bss           0x00000000c002c118        0x6 krnl/gdt.32
                0x00000000c002c118                gdtDescr
 .bss           0x00000000c002c11e        0x0 krnl/idle.32
 *fill*         0x00000000c002c11e        0x2 
 .bss           0x00000000c002c120        0x6 krnl/idt.32
                0x00000000c002c120                idtDescr
 .bss           0x00000000c002c126        0x0 krnl/inlines.32
 *fill*         0x00000000c002c126       0x1a 
 .bss           0x00000000c002c140       0x24 krnl/intlformat.32
                0x00000000c002c140                keLocale
 .bss           0x00000000c002c164        0x0 krnl/intops.32
 .bss           0x00000000c002c164        0x0 krnl/kheap.32
 .bss           0x00000000c002c164        0x0 krnl/mailbox.32
 .bss           0x00000000c002c164        0x0 krnl/main.32
 .bss           0x00000000c002c164        0x0 krnl/mutex.32
 .bss           0x00000000c002c164        0x1 krnl/panic.32
                0x00000000c002c164                keKernelPanicHappening
 *fill*         0x00000000c002c165        0x3 
 .bss           0x00000000c002c168       0x29 krnl/physmgr.32
                0x00000000c002c168                Phys::forbidEvictions
                0x00000000c002c16c                Phys::currentPagePointer
                0x00000000c002c170                Phys::highestMem
                0x00000000c002c174                Phys::oldPercent
                0x00000000c002c178                Phys::usedPages
                0x00000000c002c17c                Phys::usablePages
                0x00000000c002c180                Phys::dmaUsage
 .bss           0x00000000c002c191        0x0 krnl/pipe.32
 *fill*         0x00000000c002c191        0xf 
 .bss           0x00000000c002c1a0       0x48 krnl/powctrl.32
                0x00000000c002c1a0                keSleepFunction
                0x00000000c002c1a4                keRestartFunction
                0x00000000c002c1a8                keShutdownFunction
                0x00000000c002c1ac                powCtrlOnBattery
                0x00000000c002c1c0                currentPowerSettings
                0x00000000c002c1e4                secondsSinceLastUserIO
 .bss           0x00000000c002c1e8        0x8 krnl/random.32
                0x00000000c002c1e8                kiRandSeed
 .bss           0x00000000c002c1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002c1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002c1f0        0x0 krnl/signal.32
 .bss           0x00000000c002c1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002c1f0        0x9 krnl/terminal.32
                0x00000000c002c1f0                terminalCycle
                0x00000000c002c1f4                activeTerminal
                0x00000000c002c1f8                VgaText::graphicMode
 *fill*         0x00000000c002c1f9        0x1 
 .bss           0x00000000c002c1fa        0x2 krnl/tss.32
                0x00000000c002c1fa                doubleFaultSelector
 *fill*         0x00000000c002c1fc        0x4 
 .bss           0x00000000c002c200       0x84 krnl/unixfile.32
                0x00000000c002c200                sfileLpt
                0x00000000c002c240                sfileCom
                0x00000000c002c264                sfileNul
                0x00000000c002c268                sfilePnt
                0x00000000c002c26c                sfileAux
                0x00000000c002c270                sfileCon
                0x00000000c002c274                initialFilesAdded
                0x00000000c002c278                unixFileLinkedList
 .bss           0x00000000c002c284       0x10 krnl/virtmgr.32
                0x00000000c002c284                twswaps
                0x00000000c002c288                swapBalance
                0x00000000c002c28c                Virt::swapfileBitmap
                0x00000000c002c290                keFirstVAS
 .bss           0x00000000c002c294        0x0 sys/alarm.32
 .bss           0x00000000c002c294        0x0 sys/eject.32
 .bss           0x00000000c002c294        0x0 sys/exit.32
 .bss           0x00000000c002c294        0x0 sys/getcwd.32
 .bss           0x00000000c002c294        0x0 sys/getpid.32
 .bss           0x00000000c002c294        0x0 sys/getramdata.32
 .bss           0x00000000c002c294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002c294        0x0 sys/kill.32
 .bss           0x00000000c002c294        0x0 sys/loaddll.32
 .bss           0x00000000c002c294        0x0 sys/pause.32
 .bss           0x00000000c002c294        0x0 sys/pthread.32
 .bss           0x00000000c002c294        0x0 sys/read.32
 .bss           0x00000000c002c294        0x0 sys/registersignal.32
 .bss           0x00000000c002c294        0x0 sys/registry.32
 .bss           0x00000000c002c294        0x0 sys/sbrk.32
 .bss           0x00000000c002c294        0x0 sys/setcwd.32
 .bss           0x00000000c002c294        0x0 sys/settime.32
 .bss           0x00000000c002c294        0x0 sys/symlink.32
 .bss           0x00000000c002c294        0x0 sys/timezone.32
 .bss           0x00000000c002c294        0x0 sys/truncate.32
 .bss           0x00000000c002c294        0x0 sys/write.32
 .bss           0x00000000c002c294        0x0 sys/wsbe.32
 .bss           0x00000000c002c294        0x0 sys/yield.32
 .bss           0x00000000c002c294        0x0 thr/alarm.32
 *fill*         0x00000000c002c294        0xc 
 .bss           0x00000000c002c2a0      0x7a4 thr/elf.32
                0x00000000c002c2a0                Thr::driverLookupNext
                0x00000000c002c2c0                Thr::driverLookupLen
                0x00000000c002c4c0                Thr::driverLookupAddr
                0x00000000c002c6c0                Thr::driverNameLookup
                0x00000000c002c8c0                Thr::kernelSymbols
                0x00000000c002c940                Thr::kernelStringTable
                0x00000000c002c9c0                Thr::kernelSymbolTable
                0x00000000c002ca40                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ca44        0x0 thr/exec.32
 *fill*         0x00000000c002ca44        0x4 
 .bss           0x00000000c002ca48       0x70 thr/prcssthr.32
                0x00000000c002ca48                keRestorePreemptionValue
                0x00000000c002ca4c                kePreemptionDisableCounter
                0x00000000c002ca50                cleanerThread
                0x00000000c002ca54                weNeedTheCleanerToNotBlock
                0x00000000c002ca58                retValLockStuff
                0x00000000c002ca5c                retValSchedLock
                0x00000000c002ca60                lockStuffLock
                0x00000000c002ca64                schedulerLock
                0x00000000c002ca68                taskSwitchesPostponedFlag
                0x00000000c002ca6c                postponeTaskSwitchesCounter
                0x00000000c002ca70                irqDisableCounter
                0x00000000c002ca74                terminatedTaskList
                0x00000000c002ca80                sleepingTaskList
                0x00000000c002ca8c                taskList
                0x00000000c002ca98                kernelProcess
 *fill*         0x00000000c002cab8        0x8 
 .bss           0x00000000c002cac0       0x40 vm86/vm8086.32
                0x00000000c002cac0                Vm::started8086Yet
                0x00000000c002cac4                Vm::vmRetV
                0x00000000c002cac8                Vm::vmDone
                0x00000000c002cac9                Vm::vmReady
                0x00000000c002cacc                Vm::vm86Thread
                0x00000000c002cad0                Vm::vmToHostCommsPtr
                0x00000000c002cae0                Vm::vmToHostComms
 .bss           0x00000000c002cb00       0x41 arch/i386/apic.32
                0x00000000c002cb00                noOfIOAPICs
                0x00000000c002cb20                ioapics
                0x00000000c002cb40                IOAPICsSetupYet
 *fill*         0x00000000c002cb41        0x3 
 .bss           0x00000000c002cb44       0x50 arch/i386/hal.32
                0x00000000c002cb44                guiPanicHandler
                0x00000000c002cb48                fpuOwner
                0x00000000c002cb4c                coproLoadFunc
                0x00000000c002cb50                coproSaveFunc
                0x00000000c002cb54                lastD
                0x00000000c002cb58                lastC
                0x00000000c002cb5c                lastB
                0x00000000c002cb60                lastA
                0x00000000c002cb64                HalPageWriteCombiningFlag
                0x00000000c002cb68                HalPageGlobalFlag
                0x00000000c002cb6c                keNMIEnabled
                0x00000000c002cb70                vendorIDString
                0x00000000c002cb7d                familyID
                0x00000000c002cb7e                model
                0x00000000c002cb7f                processorType
                0x00000000c002cb80                steppingID
                0x00000000c002cb84                vendor
                0x00000000c002cb88                opcodeDetectionMode
                0x00000000c002cb8c                features
 *fill*         0x00000000c002cb94        0xc 
 .bss           0x00000000c002cba0     0x2000 arch/i386/intctrl.32
                0x00000000c002cba0                keInterruptContexts
                0x00000000c002dba0                keInterruptHandlers
 .bss           0x00000000c002eba0        0x0 arch/i386/pic.32
 .bss           0x00000000c002eba0        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eba2        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eba2       0x1e 
 .bss           0x00000000c002ebc0       0xf0 fs/fat/vfslink.32
                0x00000000c002ebc0                FAT::fats
                0x00000000c002ebe0                FAT::vfsToFatRemaps
                0x00000000c002ec60                fatToVFSRemaps
 .bss           0x00000000c002ecb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ecb0       0x10 
 .bss           0x00000000c002ecc0      0x820 fs/iso9660/vfslink.32
                0x00000000c002ecc0                iso9660Owner
                0x00000000c002ecc4                recentSector
                0x00000000c002ece0                recentBuffer
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f4e0        0xd hw/bus/pci.32
                0x00000000c002f4e0                thePCI
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f4ed        0x3 
 .bss           0x00000000c002f4f0        0x8 hw/diskphys/ata.32
                0x00000000c002f4f0                ataSectorsWritten
                0x00000000c002f4f4                ataSectorsRead
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f4f8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f4f8        0x4 hw/timer/pit.32
                0x00000000c002f4f8                pitFreq
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4fc        0x0 crtn.32
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4fc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00369f7                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
