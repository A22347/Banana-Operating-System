Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2042e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd7c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000810c                File::File(char const*, Process*)
                0x00000000c000812a                File::open(FileOpenMode)
                0x00000000c0008188                File::close()
                0x00000000c00081e8                File::seek(unsigned long long)
                0x00000000c000823e                File::truncate(unsigned long long)
                0x00000000c0008294                File::tell(unsigned long long*)
                0x00000000c00082e4                File::rewind()
                0x00000000c00082f8                File::unlink()
                0x00000000c0008344                File::rename(char const*)
                0x00000000c0008392                File::chfatattr(unsigned char, unsigned char)
                0x00000000c00083ee                File::exists()
                0x00000000c000842c                File::stat(unsigned long long*, bool*)
                0x00000000c000848d                Fs::setcwd(Process*, char*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00085ec                Directory::Directory(char const*, Process*)
                0x00000000c00086b4                Directory::open()
                0x00000000c0008710                Directory::close()
                0x00000000c0008770                Directory::unlink()
                0x00000000c00087bc                Directory::rename(char const*)
                0x00000000c000880a                Directory::exists()
                0x00000000c0008848                Directory::read(dirent*)
                0x00000000c0008894                Directory::create()
                0x00000000c00088e0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c00088e6        0x2 
 .text          0x00000000c00088e8       0x86 hal/bus.32
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c00088e8                Bus::Bus(char const*)
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008920                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
 .text          0x00000000c000896e       0x96 hal/buzzer.32
                0x00000000c000896e                KeBeepThread(void*)
                0x00000000c00089ab                KeBeep(int, int, bool)
 .text          0x00000000c0008a04      0x51b hal/clock.32
                0x00000000c0008a04                User::loadClockSettings()
                0x00000000c0008b0c                Clock::Clock(char const*)
                0x00000000c0008b0c                Clock::Clock(char const*)
                0x00000000c0008b42                Clock::~Clock()
                0x00000000c0008b42                Clock::~Clock()
                0x00000000c0008b66                Clock::~Clock()
                0x00000000c0008b90                Clock::timeInSecondsLocal()
                0x00000000c0008bd8                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c31                datetimeToSeconds(datetime_t)
                0x00000000c0008d56                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008db6                secondsToDatetime(unsigned long long)
                0x00000000c0008efa                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f1f        0x1 
 .text          0x00000000c0008f20      0x47a hal/device.32
                0x00000000c0008f20                Device::hibernate()
                0x00000000c0008f22                Device::wake()
                0x00000000c0008f24                Device::detect()
                0x00000000c0008f26                Device::disableLegacy()
                0x00000000c0008f28                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f2a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f2e                DriverlessDevice::detect()
                0x00000000c0008f30                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f44                Device::~Device()
                0x00000000c0008f44                Device::~Device()
                0x00000000c0008f52                Device::~Device()
                0x00000000c0008f7a                Device::findAndLoadDriver()
                0x00000000c0008f88                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fae                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0008fee                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009018                Device::getParent()
                0x00000000c0009024                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009042                Device::addChild(Device*)
                0x00000000c0009086                Device::removeAllChildren()
                0x00000000c00090cc                Device::hibernateAll()
                0x00000000c00090fc                Device::wakeAll()
                0x00000000c000912c                Device::detectAll()
                0x00000000c000915c                Device::disableLegacyAll()
                0x00000000c000915e                Device::loadDriversForAll()
                0x00000000c0009160                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009196                Device::setName(char const*)
                0x00000000c00091a4                Device::Device(char const*)
                0x00000000c00091a4                Device::Device(char const*)
                0x00000000c00092a0                Device::getName()
                0x00000000c00092aa                Device::closeAll()
                0x00000000c00092f6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00092f6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000932c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009370                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000939a        0x2 
 .text          0x00000000c000939c       0x86 hal/diskctrl.32
                0x00000000c000939c                HardDiskController::HardDiskController(char const*)
                0x00000000c000939c                HardDiskController::HardDiskController(char const*)
                0x00000000c00093d4                HardDiskController::~HardDiskController()
                0x00000000c00093d4                HardDiskController::~HardDiskController()
                0x00000000c00093f8                HardDiskController::~HardDiskController()
 .text          0x00000000c0009422       0xe2 hal/diskphys.32
                0x00000000c0009422                PhysicalDisk::eject()
                0x00000000c0009426                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009426                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000948e                PhysicalDisk::startCache()
                0x00000000c00094b6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094b6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094da                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009504        0x0 hal/fpu.32
 .text          0x00000000c0009504        0x0 hal/intctrl.32
 .text          0x00000000c0009504      0x8bc hal/keybrd.32
                0x00000000c0009504                startGUI(void*)
                0x00000000c000956e                startGUIVESA(void*)
                0x00000000c00095d8                sendKeyToTerminal(unsigned char)
                0x00000000c00096b3                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b6f                clearInternalKeybuffer(VgaText*)
                0x00000000c0009ba4                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d36                Keyboard::Keyboard(char const*)
                0x00000000c0009d36                Keyboard::Keyboard(char const*)
                0x00000000c0009d72                Keyboard::~Keyboard()
                0x00000000c0009d72                Keyboard::~Keyboard()
                0x00000000c0009d96                Keyboard::~Keyboard()
 .text          0x00000000c0009dc0      0x3f8 hal/logidisk.32
                0x00000000c0009dc0                LogicalDisk::close(int, int, void*)
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc4                LogicalDisk::~LogicalDisk()
                0x00000000c0009de8                LogicalDisk::~LogicalDisk()
                0x00000000c0009e12                LogicalDisk::open(int, int, void*)
                0x00000000c0009e26                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e5e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009ea4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009ea4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f64                LogicalDisk::assignDriveLetter()
                0x00000000c000a01e                LogicalDisk::mount()
                0x00000000c000a066                LogicalDisk::unmount()
                0x00000000c000a076                LogicalDisk::eject()
                0x00000000c000a08a                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0e0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a14c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1b8       0x86 hal/mouse.32
                0x00000000c000a1b8                Mouse::Mouse(char const*)
                0x00000000c000a1b8                Mouse::Mouse(char const*)
                0x00000000c000a1f0                Mouse::~Mouse()
                0x00000000c000a1f0                Mouse::~Mouse()
                0x00000000c000a214                Mouse::~Mouse()
 .text          0x00000000c000a23e       0x90 hal/nic.32
                0x00000000c000a23e                NIC::getMAC()
                0x00000000c000a244                NIC::write(int, unsigned char*, int*)
                0x00000000c000a24a                NIC::NIC(char const*)
                0x00000000c000a24a                NIC::NIC(char const*)
                0x00000000c000a280                NIC::~NIC()
                0x00000000c000a280                NIC::~NIC()
                0x00000000c000a2a4                NIC::~NIC()
 .text          0x00000000c000a2ce      0x33b hal/partition.32
                0x00000000c000a2ce                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a376                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a609        0x3 
 .text          0x00000000c000a60c       0x86 hal/serial.32
                0x00000000c000a60c                Serial::Serial(char const*)
                0x00000000c000a60c                Serial::Serial(char const*)
                0x00000000c000a644                Serial::~Serial()
                0x00000000c000a644                Serial::~Serial()
                0x00000000c000a668                Serial::~Serial()
 *fill*         0x00000000c000a692        0x2 
 .text          0x00000000c000a694      0x230 hal/timer.32
                0x00000000c000a694                Timer::Timer(char const*)
                0x00000000c000a694                Timer::Timer(char const*)
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6cc                Timer::~Timer()
                0x00000000c000a6f0                Timer::~Timer()
                0x00000000c000a71a                Timer::read()
                0x00000000c000a725                setupTimer(int)
                0x00000000c000a760                timerHandler(unsigned int)
 .text          0x00000000c000a8c4      0x444 hal/vcache.32
                0x00000000c000a8c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8c4                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa34                VCache::invalidateReadBuffer()
                0x00000000c000aa44                VCache::writeWriteBuffer()
                0x00000000c000aa90                VCache::~VCache()
                0x00000000c000aa90                VCache::~VCache()
                0x00000000c000aae8                VCache::~VCache()
                0x00000000c000ab10                VCache::write(unsigned long long, int, void*)
                0x00000000c000ac00                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ad08      0x71d hal/video.32
                0x00000000c000ad08                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad54                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000adc4                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae54                Video::clearScreen(unsigned int)
                0x00000000c000ae88                Video::putpixel(int, int, unsigned int)
                0x00000000c000ae96                Video::readPixelApprox(int, int)
                0x00000000c000aeaa                Video::Video(char const*)
                0x00000000c000aeaa                Video::Video(char const*)
                0x00000000c000aee0                Video::~Video()
                0x00000000c000aee0                Video::~Video()
                0x00000000c000af04                Video::~Video()
                0x00000000c000af2e                Video::isMonochrome()
                0x00000000c000af3a                Video::getWidth()
                0x00000000c000af46                Video::getHeight()
                0x00000000c000af52                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b00e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b3b4                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b425        0x3 
 .text          0x00000000c000b428     0x1096 hw/acpi.32
                0x00000000c000b428                ACPI::close(int, int, void*)
                0x00000000c000b430                loadACPITables(unsigned char*)
                0x00000000c000b690                findRSDT(unsigned char*)
                0x00000000c000b7dc                findDataTable(unsigned char*, char*)
                0x00000000c000b850                scanMADT()
                0x00000000c000bca8                ACPI::ACPI()
                0x00000000c000bca8                ACPI::ACPI()
                0x00000000c000bcfc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bdf8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000bec4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000becc                ACPI::detectPCI()
                0x00000000c000c0d8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c0f0                ACPI::open(int, int, void*)
 .text          0x00000000c000c4be       0xb6 krnl/atexit.32
                0x00000000c000c4be                KeInitialiseAtexit()
                0x00000000c000c4dd                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c511                KeExecuteAtexit()
 .text          0x00000000c000c574       0x9f krnl/bootmsg.32
                0x00000000c000c574                KeDisplaySplashScreen()
                0x00000000c000c5a3                KeSetBootMessage(char const*)
 .text          0x00000000c000c613       0x5f krnl/c++.32
                0x00000000c000c613                __cxa_atexit
                0x00000000c000c616                __cxa_finalize
                0x00000000c000c617                __stack_chk_fail
                0x00000000c000c64d                __cxa_pure_virtual
                0x00000000c000c65e                operator new[](unsigned long)
                0x00000000c000c663                operator delete(void*, unsigned long)
                0x00000000c000c668                operator delete[](void*)
                0x00000000c000c66d                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c672        0x2 
 .text          0x00000000c000c674       0x48 krnl/cdefs.32
                0x00000000c000c674                CUnlockScheduler
                0x00000000c000c690                CLockScheduler
                0x00000000c000c6a0                CPrintf
 .text          0x00000000c000c6bc      0xd51 krnl/cm.32
                0x00000000c000c6bc                CmOpen(char const*)
                0x00000000c000c7da                CmClose(Reghive_Tag*)
                0x00000000c000c7f0                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c82c                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c8a3                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c8e2                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c914                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c950                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c978                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c999                CmExpand(Reghive_Tag*, int)
                0x00000000c000ca14                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000ca9a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cb8e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000ccc6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cd27                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cd57                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cd8e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cdb8                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000cdf8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000ce9c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000ceca                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d067                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d0b4                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d12e                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d181                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d245                zStrtok(char*, char const*)
                0x00000000c000d2b7                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d338                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d3db                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d40d        0x3 
 .text          0x00000000c000d410       0x1d krnl/compat.32
                0x00000000c000d410                Krnl::handlePowerButton()
                0x00000000c000d420                Krnl::handleSleepButton()
 *fill*         0x00000000c000d42d        0x1 
 .text          0x00000000c000d42e      0x2c3 krnl/computer.32
                0x00000000c000d42e                Computer::close(int, int, void*)
                0x00000000c000d434                Computer::open(int, int, void*)
                0x00000000c000d51a                KeFirstTask()
                0x00000000c000d63c                Computer::Computer()
                0x00000000c000d63c                Computer::Computer()
                0x00000000c000d680                KePrepareShutdown()
                0x00000000c000d6a0                KeShutdown()
                0x00000000c000d6c4                KeSleep()
                0x00000000c000d6d0                KeRestart()
 .text          0x00000000c000d6f1       0x2b krnl/crc32.32
                0x00000000c000d6f1                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d71c      0x5bf krnl/env.32
                0x00000000c000d71c                EnvVarContainer::getEnv(char const*)
                0x00000000c000d75a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d81c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d81e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000da42                EnvVarContainer::__loadSystem()
                0x00000000c000da5c                EnvVarContainer::__loadUser()
                0x00000000c000da5e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da5e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000da80                EnvVarContainer::~EnvVarContainer()
                0x00000000c000da80                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dab0                KeGetEnv(Process*, char const*)
                0x00000000c000db15                KeSetEnvSystem(char const*, char const*)
                0x00000000c000db2f                KeSetEnvUser(char const*, char const*)
                0x00000000c000db4e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000db61                KeDeleteEnvSystem(char const*)
                0x00000000c000db62                KeDeleteEnvUser(char const*)
                0x00000000c000db63                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000db64                KeNewProcessEnv(Process*)
                0x00000000c000db86                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dbd2                KeLoadSystemEnv()
                0x00000000c000dc00                KeLoadUserEnv()
                0x00000000c000dc26                KeFlushEnv()
                0x00000000c000dc27                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dc47                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dcdb        0x1 
 .text          0x00000000c000dcdc      0x351 krnl/fault.32
                0x00000000c000dcdc                KeSetupInterrupts()
                0x00000000c000dd54                int_handler
                0x00000000c000de84                KeDisplayProgramFault(char const*)
                0x00000000c000ded4                KeGeneralProtectionFault(void*, void*)
                0x00000000c000df28                KePageFault(void*, void*)
                0x00000000c000df7c                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000df8c                KeOtherFault(void*, void*)
                0x00000000c000dfc0                KeOpcodeFault(void*, void*)
                0x00000000c000e014                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e02d        0x1 
 .text          0x00000000c000e02e      0x1db krnl/gdt.32
                0x00000000c000e02e                GDTEntry::setBase(unsigned int)
                0x00000000c000e04a                GDTEntry::setLimit(unsigned int)
                0x00000000c000e068                GDT::GDT()
                0x00000000c000e068                GDT::GDT()
                0x00000000c000e07e                GDT::addEntry(GDTEntry)
                0x00000000c000e0a0                GDT::getNumberOfEntries()
                0x00000000c000e0a8                GDT::flush()
                0x00000000c000e0ca                GDT::setup()
 .text          0x00000000c000e209       0x1d krnl/idle.32
                0x00000000c000e209                idleFunction(void*)
 *fill*         0x00000000c000e226        0x2 
 .text          0x00000000c000e228      0x46c krnl/idt.32
                0x00000000c000e228                IDTEntry::IDTEntry(bool)
                0x00000000c000e228                IDTEntry::IDTEntry(bool)
                0x00000000c000e2a2                IDTEntry::setOffset(unsigned int)
                0x00000000c000e2b8                IDT::IDT()
                0x00000000c000e2b8                IDT::IDT()
                0x00000000c000e2ba                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e2c2                IDT::addEntry(IDTEntry, int)
                0x00000000c000e2dc                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e314                IDT::flush()
                0x00000000c000e32e                IDT::setup()
 .text          0x00000000c000e694       0xaa krnl/inlines.32
                0x00000000c000e694                CPU::current()
                0x00000000c000e6b6                operator new(unsigned long)
                0x00000000c000e6bb                operator delete(void*)
                0x00000000c000e6c0                disableIRQs()
                0x00000000c000e6c2                enableIRQs()
                0x00000000c000e6c4                lockScheduler()
                0x00000000c000e6cc                unlockScheduler()
                0x00000000c000e6db                lockStuff()
                0x00000000c000e6e9                unlockStuff()
                0x00000000c000e723                Virt::getAKernelVAS()
                0x00000000c000e729                __not_memcpy
 .text          0x00000000c000e73e      0x202 krnl/kheap.32
                0x00000000c000e73e                sbrk
                0x00000000c000e7d2                sbrk_thunk
                0x00000000c000e808                mmap
                0x00000000c000e866                munmap
                0x00000000c000e87b                liballoc_lock()
                0x00000000c000e889                liballoc_unlock()
                0x00000000c000e89f                liballoc_alloc(int)
                0x00000000c000e8b7                liballoc_free(void*, int)
                0x00000000c000e8d2                realloc
                0x00000000c000e8e6                malloc
                0x00000000c000e8f6                free
                0x00000000c000e906                rfree
                0x00000000c000e916                calloc
 .text          0x00000000c000e940      0x1e3 krnl/mailbox.32
                0x00000000c000e940                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000e9a4                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000ea08                KeMailboxCreate()
                0x00000000c000ea3c                KeMailboxPost(Mailbox*, void*)
                0x00000000c000eaa4                KeMailboxGet(Mailbox*, void**)
                0x00000000c000eb0c                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000eb23       0xfd krnl/main.32
                0x00000000c000eb23                KeEntryPoint
 .text          0x00000000c000ec20       0x1a krnl/mutex.32
                0x00000000c000ec20                Mutex::Mutex()
                0x00000000c000ec20                Mutex::Mutex()
 .text          0x00000000c000ec3a        0xc krnl/panic.32
                0x00000000c000ec3a                KePanic(char const*)
 .text          0x00000000c000ec46      0x643 krnl/physmgr.32
                0x00000000c000ec46                Phys::allocateDMA(unsigned long)
                0x00000000c000ed34                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ed6f                Phys::setPageState(unsigned long, bool)
                0x00000000c000edaf                Phys::getPageState(unsigned long)
                0x00000000c000edcb                Phys::freePage(unsigned long)
                0x00000000c000ee34                Phys::allocatePage()
                0x00000000c000ef03                Phys::allocateContiguousPages(int)
                0x00000000c000ef6a                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000efa2                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f289        0x1 
 .text          0x00000000c000f28a      0x26d krnl/pipe.32
                0x00000000c000f28a                Pipe::isAtty()
                0x00000000c000f28e                Pipe::~Pipe()
                0x00000000c000f28e                Pipe::~Pipe()
                0x00000000c000f2b2                Pipe::~Pipe()
                0x00000000c000f2da                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f39e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f490                Pipe::Pipe(int)
                0x00000000c000f490                Pipe::Pipe(int)
 .text          0x00000000c000f4f7      0x108 krnl/powctrl.32
                0x00000000c000f4f7                KePowerThread(void*)
                0x00000000c000f525                KeChangePowerSettings(PowerSettings)
                0x00000000c000f53b                KeUserIOReceived()
                0x00000000c000f546                KeHandlePowerButton()
                0x00000000c000f55e                KeHandleSleepButton()
                0x00000000c000f576                KeSetupPowerManager()
 .text          0x00000000c000f5ff       0x9b krnl/random.32
                0x00000000c000f5ff                KeRand()
                0x00000000c000f63f                KeSeedRand(unsigned int)
                0x00000000c000f668                KeInitRand()
 *fill*         0x00000000c000f69a        0x2 
 .text          0x00000000c000f69c      0x1bc krnl/resolve.32
                0x00000000c000f69c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f858      0x415 krnl/semaphore.32
                0x00000000c000f858                Semaphore::Semaphore(int)
                0x00000000c000f858                Semaphore::Semaphore(int)
                0x00000000c000f888                Semaphore::tryAcquire()
                0x00000000c000f964                Semaphore::assertLocked(char const*)
                0x00000000c000f9f4                Semaphore::acquire(int)
                0x00000000c000fb9c                Semaphore::acquire()
                0x00000000c000fbb8                Semaphore::release()
 .text          0x00000000c000fc6d      0x31f krnl/signal.32
                0x00000000c000fc6d                KiSigKill(int)
                0x00000000c000fc81                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fc82                KiDefaultSignalHandlerPause(int)
                0x00000000c000fcae                KiDefaultSignalHandlerResume(int)
                0x00000000c000fcda                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fcdf                KeInitSignals()
                0x00000000c000fd2e                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fd64                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fde1                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000fed8                KiCheckSignalZ
                0x00000000c000ff1a                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c000ff55                KiFinishSignalZ
 .text          0x00000000c000ff8c      0xe3f krnl/syscalls.32
                0x00000000c000ff8c                SysSeekDir(regs*)
                0x00000000c000ff91                SysTellDir(regs*)
                0x00000000c000ff96                SysVerify(regs*)
                0x00000000c000ffa0                SysGetArgc(regs*)
                0x00000000c000ffb4                SysTTYName(regs*)
                0x00000000c000ffbc                SysFormatDisk(regs*)
                0x00000000c0010023                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010077                SysGetDiskVolumeLabel(regs*)
                0x00000000c00100d0                SysShutdown(regs*)
                0x00000000c001015d                SysRealpath(regs*)
                0x00000000c00101ab                SysReadDir(regs*)
                0x00000000c001022b                SysIsATTY(regs*)
                0x00000000c0010285                SysSeek(regs*)
                0x00000000c00102df                SysTell(regs*)
                0x00000000c001034c                SysSize(regs*)
                0x00000000c00103bf                SysSizeFromFilename(regs*)
                0x00000000c00104f3                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010627                SysClose(regs*)
                0x00000000c0010687                SysOpenDir(regs*)
                0x00000000c0010704                SysMakeDir(regs*)
                0x00000000c0010772                SysCloseDir(regs*)
                0x00000000c00107c1                SysWait(regs*)
                0x00000000c00107e2                SysNotImpl(regs*)
                0x00000000c00107fd                SysPanic(regs*)
                0x00000000c0010818                SysRmdir(regs*)
                0x00000000c0010876                SysUnlink(regs*)
                0x00000000c00108d4                SysGetArgv(regs*)
                0x00000000c0010921                SysUSleep(regs*)
                0x00000000c001094a                SysSpawn(regs*)
                0x00000000c00109bb                SysGetEnv(regs*)
                0x00000000c0010a70                SysSetFatAttrib(regs*)
                0x00000000c0010ad9                SysPipe(regs*)
                0x00000000c0010b1e                SysGetUnixTime(regs*)
                0x00000000c0010b32                string_ends_with(char const*, char const*)
                0x00000000c0010b7d                SysOpen(regs*)
                0x00000000c0010d7c                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0010dcb        0x1 
 .text          0x00000000c0010dcc      0xa85 krnl/terminal.32
                0x00000000c0010dcc                VgaText::isAtty()
                0x00000000c0010dd0                VgaText::~VgaText()
                0x00000000c0010dd0                VgaText::~VgaText()
                0x00000000c0010df4                VgaText::~VgaText()
                0x00000000c0010e1e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010e3e                setTerminalScrollLock(bool)
                0x00000000c0010e3f                doTerminalCycle()
                0x00000000c0010e40                addToTerminalCycle(VgaText*)
                0x00000000c0010e41                scrollTerminalScrollLock(int)
                0x00000000c0010e42                VgaText::updateTitle()
                0x00000000c0010e44                VgaText::load()
                0x00000000c0010e46                VgaText::updateCursor()
                0x00000000c0010e5c                VgaText::doANSI_SGR(int)
                0x00000000c0010ed0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010ee0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010ef0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010f10                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010f1c                VgaText::setTitleColour(VgaColour)
                0x00000000c0010f28                VgaText::setTitle(char*)
                0x00000000c0010f2a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010f3c                VgaText::scrollScreen()
                0x00000000c0010fce                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010fde                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001106e                VgaText::getCursorX()
                0x00000000c0011076                VgaText::getCursorY()
                0x00000000c001107e                VgaText::setCursor(int, int)
                0x00000000c0011095                setActiveTerminal(VgaText*)
                0x00000000c00110e0                VgaText::clearScreen()
                0x00000000c001112e                VgaText::setCursorX(int)
                0x00000000c0011146                VgaText::setCursorY(int)
                0x00000000c001115e                VgaText::incrementCursor(bool)
                0x00000000c00111b2                VgaText::decrementCursor(bool)
                0x00000000c00111d4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00112a4                VgaText::putchar(char)
                0x00000000c001138c                VgaText::putx(unsigned int)
                0x00000000c00113d2                VgaText::puts(char const*)
                0x00000000c00113f8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011444                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011592                VgaText::VgaText(char const*)
                0x00000000c0011592                VgaText::VgaText(char const*)
                0x00000000c00116e2                VgaText::receiveKey(unsigned char)
                0x00000000c0011850                VgaText::doUpdate()
 *fill*         0x00000000c0011851        0x3 
 .text          0x00000000c0011854      0x266 krnl/tss.32
                0x00000000c0011854                TSS::TSS()
                0x00000000c0011854                TSS::TSS()
                0x00000000c0011864                TSS::setESP(unsigned long)
                0x00000000c0011878                TSS::flush()
                0x00000000c0011898                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011aba      0x4ca krnl/unixfile.32
                0x00000000c0011aba                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011b10                ReservedFilename::isAtty()
                0x00000000c0011b2c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011b8a                UnixFile::getFileDescriptor()
                0x00000000c0011b92                UnixFile::UnixFile(int)
                0x00000000c0011b92                UnixFile::UnixFile(int)
                0x00000000c0011d46                ReservedFilename::ReservedFilename(int)
                0x00000000c0011d46                ReservedFilename::ReservedFilename(int)
                0x00000000c0011d78                UnixFile::~UnixFile()
                0x00000000c0011d78                UnixFile::~UnixFile()
                0x00000000c0011e14                UnixFile::~UnixFile()
                0x00000000c0011e3c                ReservedFilename::~ReservedFilename()
                0x00000000c0011e3c                ReservedFilename::~ReservedFilename()
                0x00000000c0011e60                ReservedFilename::~ReservedFilename()
                0x00000000c0011e87                KeGetFileFromDescriptor(int)
 .text          0x00000000c0011f84     0x1212 krnl/virtmgr.32
                0x00000000c0011f84                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011fbe                Virt::getPageState(unsigned long)
                0x00000000c0011fe1                Virt::allocateKernelVirtualPages(int)
                0x00000000c00120fd                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012120                Virt::swapIDToSector(unsigned long)
                0x00000000c0012136                Virt::allocateSwapfilePage()
                0x00000000c00121b5                Virt::virtualMemorySetup()
                0x00000000c0012206                Virt::setupPageSwapping(int)
                0x00000000c0012278                VAS::setCPUSpecific(unsigned long)
                0x00000000c001227a                VAS::VAS(VAS*)
                0x00000000c001227a                VAS::VAS(VAS*)
                0x00000000c0012292                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00122c0                VAS::getPageTableEntry(unsigned long)
                0x00000000c00122df                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001241c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012440                VAS::virtualToPhysical(unsigned long)
                0x00000000c001245a                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001249c                VAS::VAS()
                0x00000000c001249c                VAS::VAS()
                0x00000000c0012506                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012526                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012552                VAS::~VAS()
                0x00000000c0012552                VAS::~VAS()
                0x00000000c00126c0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00127e2                VAS::allocatePages(int, int)
                0x00000000c00128d4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c001292e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012a1e                VAS::VAS(bool)
                0x00000000c0012a1e                VAS::VAS(bool)
                0x00000000c0012c62                VAS::evict(unsigned long)
                0x00000000c0012d40                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012ef8                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0012f6c                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0012f98                VAS::scanForEviction()
                0x00000000c001309b                mapVASFirstTime
 .text          0x00000000c0013196       0x36 sys/eject.32
                0x00000000c0013196                SysEject(regs*)
 .text          0x00000000c00131cc       0x18 sys/exit.32
                0x00000000c00131cc                SysExit(regs*)
 .text          0x00000000c00131e4       0x1f sys/getcwd.32
                0x00000000c00131e4                SysGetCwd(regs*)
 .text          0x00000000c0013203        0xc sys/getpid.32
                0x00000000c0013203                SysGetPID(regs*)
 .text          0x00000000c001320f       0x1a sys/getramdata.32
                0x00000000c001320f                SysGetRAMData(regs*)
 .text          0x00000000c0013229       0x82 sys/getvgaptr.32
                0x00000000c0013229                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00132ab        0x1 
 .text          0x00000000c00132ac       0xb9 sys/kill.32
                0x00000000c00132ac                SysKill(regs*)
 .text          0x00000000c0013365       0xa8 sys/loaddll.32
                0x00000000c0013365                SysLoadDLL(regs*)
 .text          0x00000000c001340d       0x68 sys/read.32
                0x00000000c001340d                SysRead(regs*)
 .text          0x00000000c0013475       0x29 sys/registersignal.32
                0x00000000c0013475                SysRegisterSignal(regs*)
 .text          0x00000000c001349e      0x1cc sys/registry.32
                0x00000000c001349e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00134e2                SysRegistryReadExtent(regs*)
                0x00000000c001352a                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013541                SysRegistryEnterDirectory(regs*)
                0x00000000c0013558                SysRegistryGetNext(regs*)
                0x00000000c001356f                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00135a9                SysRegistryOpen(regs*)
                0x00000000c00135bd                SysRegistryClose(regs*)
                0x00000000c00135d4                SysRegistryEasyReadString(regs*)
                0x00000000c0013620                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c001366a       0x55 sys/sbrk.32
                0x00000000c001366a                SysSbrk(regs*)
 .text          0x00000000c00136bf       0x1c sys/setcwd.32
                0x00000000c00136bf                SysSetCwd(regs*)
 .text          0x00000000c00136db       0x96 sys/settime.32
                0x00000000c00136db                SysSetTime(regs*)
 .text          0x00000000c0013771       0x73 sys/symlink.32
                0x00000000c0013771                SysSymlink(regs*)
 .text          0x00000000c00137e4       0x3f sys/timezone.32
                0x00000000c00137e4                SysTimezone(regs*)
 .text          0x00000000c0013823       0xfc sys/truncate.32
                0x00000000c0013823                SysTruncate(regs*)
 .text          0x00000000c001391f       0x68 sys/write.32
                0x00000000c001391f                SysWrite(regs*)
 .text          0x00000000c0013987       0x9d sys/wsbe.32
                0x00000000c0013987                SysWsbe(regs*)
 .text          0x00000000c0013a24       0x25 sys/yield.32
                0x00000000c0013a24                SysYield(regs*)
 .text          0x00000000c0013a49     0x1224 thr/elf.32
                0x00000000c0013a49                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013cd0                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013eef                Thr::runtimeReferenceHelper()
                0x00000000c0013f02                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013f51                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001420f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014950                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014982                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00149b9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00149d3                Thr::loadDLL(char const*, bool)
                0x00000000c0014c34                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014c6d       0x5a thr/exec.32
                0x00000000c0014c6d                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014cc7        0x1 
 .text          0x00000000c0014cc8     0x1135 thr/prcssthr.32
                0x00000000c0014cc8                userModeEntryPoint(void*)
                0x00000000c0014cf0                changeTSS
                0x00000000c0014d34                switchToThread(ThreadControlBlock*)
                0x00000000c0014de4                Process::addArgs(char**)
                0x00000000c0014e50                Process::Process(char const*, Process*, char**)
                0x00000000c0014e50                Process::Process(char const*, Process*, char**)
                0x00000000c001505c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001505c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015230                taskStartupFunction
                0x00000000c001523c                KeDisablePreemption()
                0x00000000c0015264                KeRestorePreemption()
                0x00000000c0015284                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001538c                Process::createUserThread()
                0x00000000c00153ac                setupMultitasking(void (*)())
                0x00000000c00154d0                schedule()
                0x00000000c0015564                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001558c                blockTask(TaskState)
                0x00000000c00155c4                waitTask(int, int*, int)
                0x00000000c0015608                milliTenthSleepUntil(unsigned int)
                0x00000000c00156a8                milliTenthSleep(unsigned int)
                0x00000000c00156bc                sleep(unsigned int)
                0x00000000c00156cc                taskReturned
                0x00000000c0015710                Thr::processFromPID(int)
                0x00000000c00157bc                unblockTask(ThreadControlBlock*)
                0x00000000c0015868                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015b3c                cleanerTaskFunction(void*)
                0x00000000c0015c44                terminateTask(int)
                0x00000000c0015d30                Thr::terminateFromIRQ(int)
 .text          0x00000000c0015dfd      0xd08 vm86/vm8086.32
                0x00000000c0015dfd                Vm::inbv(unsigned short)
                0x00000000c0015e10                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015e46                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015e56                Vm::getSegment(unsigned int)
                0x00000000c0015e5e                Vm::getOffset(unsigned int)
                0x00000000c0015e63                Vm::mainloop2()
                0x00000000c0015e9d                Vm::mainVm8086Loop(void*)
                0x00000000c0015ead                Vm::mainloop3(unsigned long)
                0x00000000c0015ed3                Vm::initialise8086()
                0x00000000c0015f16                Vm::resetConventionalMemory8086()
                0x00000000c0015f17                Vm::finish8086()
                0x00000000c0015f78                Vm::getOutput8086(unsigned char*)
                0x00000000c0015f9d                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00160c4                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00162ca                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016367                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016378                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001638a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001639b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00163b0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00163c6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00163db                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016b05        0x1 
 .text          0x00000000c0016b06     0x1e73 arch/i386/hal.32
                0x00000000c0016b06                noCopro(unsigned long)
                0x00000000c0016b08                CPU::close(int, int, void*)
                0x00000000c0016b0b                x86ReadCMOS(unsigned char)
                0x00000000c0016b5f                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016bc1                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016be0                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016bfd                AMD_K6_writeback(int, int, int)
                0x00000000c0016cbd                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016d5b                cpuidCheckEDX(unsigned int)
                0x00000000c0016d88                cpuidCheckECX(unsigned int)
                0x00000000c0016db6                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016de4                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0016e12                HalDetectFeatures()
                0x00000000c0017bc0                HalEnableNMI()
                0x00000000c0017bd3                HalDisableNMI()
                0x00000000c0017be6                HalGetNMIState()
                0x00000000c0017bec                x86rdmsr(unsigned int)
                0x00000000c0017c2a                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017c6f                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017c85                HalFindRSDP()
                0x00000000c0017d1a                HalHandlePageFault(void*, void*)
                0x00000000c0017d49                HalHandleOpcodeFault(void*, void*)
                0x00000000c0017d8b                HalDisplayDebugInfo(void*)
                0x00000000c0018119                HalReceivedNMI()
                0x00000000c00181b4                HalSystemIdle()
                0x00000000c0018213                i386SaveCoprocessor(void*)
                0x00000000c0018227                i386LoadCoprocessor(void*)
                0x00000000c001823b                x87EmulHandler(regs*, void*)
                0x00000000c00182d8                HalInitialiseCoprocessor()
                0x00000000c0018380                HalPanic(char const*)
                0x00000000c0018494                HalQueryPerformanceCounter()
                0x00000000c00184a4                HalInitialise()
                0x00000000c0018636                HalMakeBeep(int)
                0x00000000c0018670                HalGetRand()
                0x00000000c0018673                HalEndOfInterrupt(int)
                0x00000000c001869e                HalRestart()
                0x00000000c001869f                HalShutdown()
                0x00000000c00186a0                HalSleep()
                0x00000000c00186a2                CPU::CPU()
                0x00000000c00186a2                CPU::CPU()
                0x00000000c0018726                CPU::setupSMEP()
                0x00000000c0018732                CPU::setupUMIP()
                0x00000000c001873c                CPU::setupTSC()
                0x00000000c0018746                CPU::setupLargePages()
                0x00000000c0018750                CPU::setupPAT()
                0x00000000c0018782                CPU::setupMTRR()
                0x00000000c0018784                CPU::setupGlobalPages()
                0x00000000c001878e                CPU::allowUsermodeDataAccess()
                0x00000000c001879c                CPU::prohibitUsermodeDataAccess()
                0x00000000c00187aa                CPU::setupSMAP()
                0x00000000c00187b8                CPU::setupFeatures()
                0x00000000c0018884                CPU::open(int, int, void*)
 .text          0x00000000c0018979      0x268 arch/i386/intctrl.32
                0x00000000c0018979                convertLegacyIRQNumber(int)
                0x00000000c00189b5                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c00189ff                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018b3c                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018b70                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018be1        0x3 
 .text          0x00000000c0018be4      0x2dc arch/i386/pic.32
                0x00000000c0018be4                picIoWait()
                0x00000000c0018bec                picDisable()
                0x00000000c0018c20                picGetIRQReg(int)
                0x00000000c0018c9c                picOpen()
                0x00000000c0018e20                picEOI(int)
 .text          0x00000000c0018ec0      0x5f2 arch/i386/rtc.32
                0x00000000c0018ec0                RTC::open(int, int, void*)
                0x00000000c0018ec4                RTC::close(int, int, void*)
                0x00000000c0018ec8                RTC::timeInSecondsUTC()
                0x00000000c0018eda                RTC::timeInDatetimeUTC()
                0x00000000c0018f00                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018f3e                RTC::~RTC()
                0x00000000c0018f3e                RTC::~RTC()
                0x00000000c0018f62                RTC::~RTC()
                0x00000000c0018f8c                RTC::get_update_in_progress_flag()
                0x00000000c0018fa0                RTC::completeRTCRefresh()
                0x00000000c001924e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00193c4                rtcIRQHandler(regs*, void*)
                0x00000000c0019404                RTC::RTC()
                0x00000000c0019404                RTC::RTC()
 *fill*         0x00000000c00194b2        0x2 
 .text          0x00000000c00194b4      0x1f4 arch/i386/vga.32
                0x00000000c00194b4                HalConsoleScroll(int, int)
                0x00000000c00195bc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019620                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00196a8     0x14f3 fs/fat/vfslink.32
                0x00000000c00196a8                FAT::getName()
                0x00000000c00196b0                FAT::tell(void*, unsigned long long*)
                0x00000000c00196ec                FAT::stat(void*, unsigned long long*)
                0x00000000c0019728                FAT::~FAT()
                0x00000000c0019728                FAT::~FAT()
                0x00000000c001974c                FAT::~FAT()
                0x00000000c0019774                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019818                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00198f8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019adc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019cf8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019eb8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a028                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a088                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a0e8                FAT::close(void*)
                0x00000000c001a13c                FAT::closeDir(void*)
                0x00000000c001a190                FAT::truncate(void*, unsigned long long)
                0x00000000c001a1fc                FAT::seek(void*, unsigned long long)
                0x00000000c001a254                fatWrapperReadDisk
                0x00000000c001a294                fatWrapperWriteDisk
                0x00000000c001a2d4                fatWrapperIoctl
                0x00000000c001a3f4                FAT::FAT()
                0x00000000c001a3f4                FAT::FAT()
                0x00000000c001a44c                FAT::fixFilepath(char*)
                0x00000000c001a48c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a600                FAT::openDir(char const*, void**)
                0x00000000c001a6b0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a7a8                FAT::unlink(char const*)
                0x00000000c001a828                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a9e0                FAT::rename(char const*, char const*)
                0x00000000c001aaac                FAT::mkdir(char const*)
                0x00000000c001ab2c                FAT::exists(char const*)
 *fill*         0x00000000c001ab9b        0x1 
 .text          0x00000000c001ab9c       0x94 fs/iso9660/helper.32
                0x00000000c001ab9c                isoReadDiscSectorHelper
                0x00000000c001abf8                iso_kprintf
                0x00000000c001ac14                iso_kprintfd
 .text          0x00000000c001ac30      0x71a fs/iso9660/vfslink.32
                0x00000000c001ac30                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ac36                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ac3c                ISO9660::getName()
                0x00000000c001ac42                ISO9660::closeDir(void*)
                0x00000000c001ac4c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ac52                ISO9660::unlink(char const*)
                0x00000000c001ac58                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ac5e                ISO9660::rename(char const*, char const*)
                0x00000000c001ac64                ISO9660::mkdir(char const*)
                0x00000000c001ac6a                ISO9660::~ISO9660()
                0x00000000c001ac6a                ISO9660::~ISO9660()
                0x00000000c001ac8e                ISO9660::~ISO9660()
                0x00000000c001acb6                ISO9660::exists(char const*)
                0x00000000c001acca                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001adb0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001adf8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001ae3a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ae78                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001aeca                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b00c                ISO9660::close(void*)
                0x00000000c001b03c                ISO9660::openDir(char const*, void**)
                0x00000000c001b116                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b231                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b2b0                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b322                ISO9660::ISO9660()
                0x00000000c001b322                ISO9660::ISO9660()
 .text          0x00000000c001b34a      0x26c hal/sound/sndcard.32
                0x00000000c001b34a                SoundCard::beginPlayback()
                0x00000000c001b358                SoundCard::stopPlayback()
                0x00000000c001b366                SoundCard::SoundCard(char const*)
                0x00000000c001b366                SoundCard::SoundCard(char const*)
                0x00000000c001b404                SoundCard::~SoundCard()
                0x00000000c001b404                SoundCard::~SoundCard()
                0x00000000c001b428                SoundCard::~SoundCard()
                0x00000000c001b452                SoundCard::configureRates(int, int, int)
                0x00000000c001b482                SoundCard::getSamples16(int, short*)
                0x00000000c001b4de                SoundCard::getSamples32(int, int*)
                0x00000000c001b564                SoundCard::addChannel(SoundPort*)
                0x00000000c001b5a2                SoundCard::removeChannel(int)
 *fill*         0x00000000c001b5b6        0x2 
 .text          0x00000000c001b5b8      0x393 hal/sound/sndport.32
                0x00000000c001b5b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b5b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b644                SoundPort::~SoundPort()
                0x00000000c001b644                SoundPort::~SoundPort()
                0x00000000c001b678                SoundPort::unpause()
                0x00000000c001b684                SoundPort::pause()
                0x00000000c001b690                SoundPort::getBufferUsed()
                0x00000000c001b698                SoundPort::getBufferSize()
                0x00000000c001b6a0                SoundPort::buffer16(short*, int)
                0x00000000c001b72c                SoundPort::buffer32(int*, int)
                0x00000000c001b7b8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b888                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b94b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b94b        0x1 
 .text          0x00000000c001b94c      0xc25 hw/bus/pci.32
                0x00000000c001b94c                PCI::open(int, int, void*)
                0x00000000c001b96a                PCI::close(int, int, void*)
                0x00000000c001b96e                PCI::PCI()
                0x00000000c001b96e                PCI::PCI()
                0x00000000c001ba06                PCI::readBAR8(unsigned int, int)
                0x00000000c001ba22                PCI::readBAR16(unsigned int, int)
                0x00000000c001ba40                PCI::readBAR32(unsigned int, int)
                0x00000000c001ba5c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ba7c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ba9e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001babe                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bb34                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bbde                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc02                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc2a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc74                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc9c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bcc0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001bce4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd0c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bd70                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001be56                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c120                PCI::checkBus(unsigned char)
                0x00000000c001c144                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c32a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4a6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c518                PCI::detect()
 *fill*         0x00000000c001c571        0x1 
 .text          0x00000000c001c572      0xdb8 hw/diskctrl/ide.32
                0x00000000c001c572                IDE::close(int, int, void*)
                0x00000000c001c576                IDE::IDE()
                0x00000000c001c576                IDE::IDE()
                0x00000000c001c5aa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c5bc                selectDrive(unsigned char, unsigned char)
                0x00000000c001c5be                IDE::getBase(unsigned char)
                0x00000000c001c5d0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c690                IDE::read(unsigned char, unsigned char)
                0x00000000c001c744                IDE::waitInterrupt(unsigned char)
                0x00000000c001c7a6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c7c2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c7de                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c828                IDE::open(int, int, void*)
                0x00000000c001cd12                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cde2                IDE::detect()
                0x00000000c001d21c                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d2d6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d32a      0x33f hw/diskctrl/satabus.32
                0x00000000c001d32a                SATABus::close(int, int, void*)
                0x00000000c001d32e                SATABus::detect()
                0x00000000c001d330                SATABus::SATABus()
                0x00000000c001d330                SATABus::SATABus()
                0x00000000c001d3b6                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d3e8                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d430                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d450                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d47a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d58c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d636                SATABus::open(int, int, void*)
 *fill*         0x00000000c001d669        0x1 
 .text          0x00000000c001d66a      0x9b5 hw/diskphys/ata.32
                0x00000000c001d66a                ATA::close(int, int, void*)
                0x00000000c001d68e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d690                ATA::ATA()
                0x00000000c001d690                ATA::ATA()
                0x00000000c001d6be                ATA::flush(bool)
                0x00000000c001d70c                ATA::readyForCommand()
                0x00000000c001d758                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001db64                ATA::detectCHS()
                0x00000000c001db8e                ATA::open(int, int, void*)
                0x00000000c001dc5a                combineCharAndColour(char, unsigned char)
                0x00000000c001dc6b                combineColours(unsigned char, unsigned char)
                0x00000000c001dc78                ATA::read(unsigned long long, int, void*)
                0x00000000c001de4e                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e01f        0x1 
 .text          0x00000000c001e020      0x612 hw/diskphys/atapi.32
                0x00000000c001e020                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e026                ATAPI::close(int, int, void*)
                0x00000000c001e04a                ATAPI::ATAPI()
                0x00000000c001e04a                ATAPI::ATAPI()
                0x00000000c001e078                ATAPI::readyForCommand()
                0x00000000c001e0ca                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e38a                ATAPI::diskRemoved()
                0x00000000c001e3c4                ATAPI::eject()
                0x00000000c001e40c                ATAPI::diskInserted()
                0x00000000c001e418                ATAPI::detectMedia()
                0x00000000c001e4d8                ATAPI::open(int, int, void*)
                0x00000000c001e5b8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e632      0x841 hw/diskphys/sata.32
                0x00000000c001e632                SATA::close(int, int, void*)
                0x00000000c001e656                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e658                SATA::open(int, int, void*)
                0x00000000c001e710                SATA::SATA()
                0x00000000c001e710                SATA::SATA()
                0x00000000c001e73e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e9c4                SATA::read(unsigned long long, int, void*)
                0x00000000c001ec14                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001ee73        0x1 
 .text          0x00000000c001ee74      0x5d8 hw/diskphys/satapi.32
                0x00000000c001ee74                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ee7a                SATAPI::close(int, int, void*)
                0x00000000c001ee9e                SATAPI::SATAPI()
                0x00000000c001ee9e                SATAPI::SATAPI()
                0x00000000c001eecc                SATAPI::diskRemoved()
                0x00000000c001eece                SATAPI::diskInserted()
                0x00000000c001eeea                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f1d0                SATAPI::eject()
                0x00000000c001f20c                SATAPI::detectMedia()
                0x00000000c001f262                SATAPI::open(int, int, void*)
                0x00000000c001f362                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f44c      0x433 hw/intctrl/apic.32
                0x00000000c001f44c                IOAPIC::close(int, int, void*)
                0x00000000c001f452                apicGetBase()
                0x00000000c001f470                IOAPIC::IOAPIC()
                0x00000000c001f470                IOAPIC::IOAPIC()
                0x00000000c001f498                apicOpen()
                0x00000000c001f614                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f646                IOAPIC::read(int)
                0x00000000c001f66e                IOAPIC::open(int, int, void*)
                0x00000000c001f754                IOAPIC::write(int, int)
                0x00000000c001f780                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f87f        0x1 
 .text          0x00000000c001f880       0xf0 hw/timer/apictimer.32
                0x00000000c001f880                APICTimer::close(int, int, void*)
                0x00000000c001f888                apicTimerHandler(regs*, void*)
                0x00000000c001f8b0                APICTimer::open(int, int, void*)
                0x00000000c001f920                APICTimer::write(int)
                0x00000000c001f948                APICTimer::APICTimer()
                0x00000000c001f948                APICTimer::APICTimer()
 .text          0x00000000c001f970      0x1ad hw/timer/pit.32
                0x00000000c001f970                PIT::write(int)
                0x00000000c001f9f4                pitHandler(regs*, void*)
                0x00000000c001fa1c                PIT::open(int, int, void*)
                0x00000000c001fa6c                PIT::close(int, int, void*)
                0x00000000c001fa9c                PIT::PIT()
                0x00000000c001fa9c                PIT::PIT()
 *fill*         0x00000000c001fb1d        0x3 
 .text          0x00000000c001fb20       0x6f arch/i386/avx.32
                0x00000000c001fb20                avxDetect
                0x00000000c001fb4a                avxSave
                0x00000000c001fb5b                avxLoad
                0x00000000c001fb6c                avxInit
                0x00000000c001fb8e                avxClose
 *fill*         0x00000000c001fb8f        0x1 
 .text          0x00000000c001fb90      0x2ec arch/i386/interrupt.32
                0x00000000c001fb90                isr0
                0x00000000c001fba0                isr1
                0x00000000c001fbaa                isr2
                0x00000000c001fbb4                isr3
                0x00000000c001fbbe                isr4
                0x00000000c001fbc8                isr5
                0x00000000c001fbd2                isr6
                0x00000000c001fbdc                isr7
                0x00000000c001fbe6                isr8
                0x00000000c001fbee                isr9
                0x00000000c001fbf8                isr10
                0x00000000c001fc00                isr11
                0x00000000c001fc08                isr12
                0x00000000c001fc10                isr13
                0x00000000c001fc2a                isr14
                0x00000000c001fc32                isr15
                0x00000000c001fc3c                isr16
                0x00000000c001fc46                isr17
                0x00000000c001fc50                isr18
                0x00000000c001fc5a                irq3
                0x00000000c001fc64                irq4
                0x00000000c001fc6e                irq5
                0x00000000c001fc78                irq6
                0x00000000c001fc82                irq7
                0x00000000c001fc8c                irq8
                0x00000000c001fc96                irq9
                0x00000000c001fca0                irq10
                0x00000000c001fcaa                irq11
                0x00000000c001fcb4                irq12
                0x00000000c001fcbe                irq13
                0x00000000c001fcc8                irq14
                0x00000000c001fcd2                irq15
                0x00000000c001fcdc                irq1
                0x00000000c001fce3                irq2
                0x00000000c001fcea                isr96
                0x00000000c001fcf1                irq0
                0x00000000c001fcf6                int_common_stub
                0x00000000c001fd28                syscall_common_stub
                0x00000000c001fe2c                irq16
                0x00000000c001fe36                irq17
                0x00000000c001fe40                irq18
                0x00000000c001fe4a                irq19
                0x00000000c001fe54                irq20
                0x00000000c001fe5e                irq21
                0x00000000c001fe68                irq22
                0x00000000c001fe72                irq23
 *fill*         0x00000000c001fe7c        0x4 
 .text          0x00000000c001fe80       0x10 arch/i386/rdrand.32
                0x00000000c001fe80                i386GetRDRAND
 .text          0x00000000c001fe90       0x39 arch/i386/sse.32
                0x00000000c001fe90                sseDetect
                0x00000000c001fea8                sseSave
                0x00000000c001feb0                sseLoad
                0x00000000c001feb8                sseInit
                0x00000000c001fec8                sseClose
 *fill*         0x00000000c001fec9        0x7 
 .text          0x00000000c001fed0       0x4f arch/i386/x87.32
                0x00000000c001fed6                x87Detect
                0x00000000c001fef7                x87Save
                0x00000000c001fefe                x87Load
                0x00000000c001ff05                x87Init
                0x00000000c001ff1e                x87Close
 *fill*         0x00000000c001ff1f        0x1 
 .text          0x00000000c001ff20       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ff45        0x0 crtn.32
 *fill*         0x00000000c001ff45        0x3 
 .text          0x00000000c001ff48      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ff48                __divdi3
 *fill*         0x00000000c0020093        0x1 
 .text          0x00000000c0020094      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020094                __moddi3
 *fill*         0x00000000c0020212        0x2 
 .text          0x00000000c0020214       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020214                __udivdi3
 *fill*         0x00000000c0020313        0x1 
 .text          0x00000000c0020314      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020314                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020430        0x0
 .iplt          0x00000000c0020430        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002042e        0xf
 .init          0x00000000c002042e        0x3 crti.32
                0x00000000c002042e                _init
 .init          0x00000000c0020431        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020436        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002043b        0x2 crtn.32

.fini           0x00000000c002043d        0xa
 .fini          0x00000000c002043d        0x3 crti.32
                0x00000000c002043d                _fini
 .fini          0x00000000c0020440        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020445        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020448       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020448       0x1a hal/device.32
                0x00000000c0020448                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020448                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020462       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020462       0x2a hal/device.32
                0x00000000c0020462                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002048c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002048c       0xdc hal/device.32
                0x00000000c002048c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020568       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020568       0x42 hal/device.32
                0x00000000c0020568                LinkedList<Device>::LinkedList()
                0x00000000c0020568                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00205ac       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00205ac       0x1c hal/timer.32
                0x00000000c00205ac                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00205c8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00205c8        0x7 hal/timer.32
                0x00000000c00205c8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00205d0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00205d0       0xbc hal/timer.32
                0x00000000c00205d0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002068c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002068c       0xda hal/timer.32
                0x00000000c002068c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020768       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020768       0x23 hw/acpi.32
                0x00000000c0020768                ACPI::~ACPI()
                0x00000000c0020768                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002078c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002078c       0x2a hw/acpi.32
                0x00000000c002078c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00207b8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00207b8        0x2 hw/acpi.32
                0x00000000c00207b8                LinkedList<Device>::~LinkedList()
                0x00000000c00207b8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00207bc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00207bc       0x1c hw/acpi.32
                0x00000000c00207bc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00207d8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00207d8        0x7 hw/acpi.32
                0x00000000c00207d8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00207e0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00207e0       0xb8 hw/acpi.32
                0x00000000c00207e0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020898       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020898       0x23 krnl/computer.32
                0x00000000c0020898                Computer::~Computer()
                0x00000000c0020898                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00208bc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00208bc       0x2a krnl/computer.32
                0x00000000c00208bc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00208e6       0x21
 .text._Z10idleCommonv
                0x00000000c00208e6       0x21 krnl/idle.32
                0x00000000c00208e6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020908        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020908        0x2 krnl/unixfile.32
                0x00000000c0020908                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0020908                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002090a       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002090a       0x42 krnl/unixfile.32
                0x00000000c002090a                LinkedList<UnixFile>::LinkedList()
                0x00000000c002090a                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002094c       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002094c       0xd3 krnl/unixfile.32
                0x00000000c002094c                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020a20        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020a20        0x7 krnl/unixfile.32
                0x00000000c0020a20                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020a28       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020a28       0xa1 krnl/unixfile.32
                0x00000000c0020a28                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020aca        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020aca        0x8 krnl/unixfile.32
                0x00000000c0020aca                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020ad4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020ad4        0x8 sys/kill.32
                0x00000000c0020ad4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020adc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020adc        0x2 thr/prcssthr.32
                0x00000000c0020adc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020adc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020ae0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020ae0       0x49 thr/prcssthr.32
                0x00000000c0020ae0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020ae0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020b2c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020b2c       0x42 thr/prcssthr.32
                0x00000000c0020b2c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020b2c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0020b6e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020b6e       0x23 arch/i386/hal.32
                0x00000000c0020b6e                CPU::~CPU()
                0x00000000c0020b6e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020b92       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020b92       0x2a arch/i386/hal.32
                0x00000000c0020b92                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020bbc       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020bbc       0x23 hw/bus/pci.32
                0x00000000c0020bbc                PCI::~PCI()
                0x00000000c0020bbc                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020be0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020be0       0x2a hw/bus/pci.32
                0x00000000c0020be0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020c0a       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020c0a       0x23 hw/diskctrl/ide.32
                0x00000000c0020c0a                IDE::~IDE()
                0x00000000c0020c0a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020c2e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020c2e       0x2a hw/diskctrl/ide.32
                0x00000000c0020c2e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020c58       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020c58       0x23 hw/diskctrl/satabus.32
                0x00000000c0020c58                SATABus::~SATABus()
                0x00000000c0020c58                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020c7c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020c7c       0x2a hw/diskctrl/satabus.32
                0x00000000c0020c7c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020ca6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020ca6       0x23 hw/diskphys/ata.32
                0x00000000c0020ca6                ATA::~ATA()
                0x00000000c0020ca6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020cca       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020cca       0x2a hw/diskphys/ata.32
                0x00000000c0020cca                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020cf4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020cf4       0x23 hw/diskphys/atapi.32
                0x00000000c0020cf4                ATAPI::~ATAPI()
                0x00000000c0020cf4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020d18       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020d18       0x2a hw/diskphys/atapi.32
                0x00000000c0020d18                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020d42       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020d42       0x23 hw/diskphys/sata.32
                0x00000000c0020d42                SATA::~SATA()
                0x00000000c0020d42                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020d66       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020d66       0x2a hw/diskphys/sata.32
                0x00000000c0020d66                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020d90       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020d90       0x23 hw/diskphys/satapi.32
                0x00000000c0020d90                SATAPI::~SATAPI()
                0x00000000c0020d90                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020db4       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020db4       0x2a hw/diskphys/satapi.32
                0x00000000c0020db4                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020dde       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020dde       0x23 hw/intctrl/apic.32
                0x00000000c0020dde                IOAPIC::~IOAPIC()
                0x00000000c0020dde                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020e02       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020e02       0x2a hw/intctrl/apic.32
                0x00000000c0020e02                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020e2c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020e2c       0x23 hw/timer/apictimer.32
                0x00000000c0020e2c                APICTimer::~APICTimer()
                0x00000000c0020e2c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020e50       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020e50       0x2a hw/timer/apictimer.32
                0x00000000c0020e50                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020e7c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020e7c       0x23 hw/timer/pit.32
                0x00000000c0020e7c                PIT::~PIT()
                0x00000000c0020e7c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020ea0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020ea0       0x2a hw/timer/pit.32
                0x00000000c0020ea0                PIT::~PIT()

.rodata         0x00000000c0020eca     0x3322
                0x00000000c0020eca                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020eca        0x2 
 .ctors         0x00000000c0020ecc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020ed0        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020ed4        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020ed8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020edc                end_ctors = .
                0x00000000c0020edc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020edc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020ee0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020ee0                __DTOR_END__
                0x00000000c0020ee4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020ee4       0x1c 
 .rodata        0x00000000c0020f00      0x101 acpica/utclib.32
                0x00000000c0020f00                AcpiGbl_Ctypes
 *fill*         0x00000000c0021001        0x3 
 .rodata        0x00000000c0021004       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002101c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021066       0x1a 
 .rodata        0x00000000c0021080       0xed fs/fat/ff.32
 *fill*         0x00000000c002116d       0x13 
 .rodata        0x00000000c0021180      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021580       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c00215ef        0x1 
 .rodata        0x00000000c00215f0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021740      0x169 dbg/usban.32
 *fill*         0x00000000c00218a9        0x3 
 .rodata.str1.4
                0x00000000c00218ac      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00219e3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021b06       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021b47        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021b48       0x6c fs/vfs.32
                0x00000000c0021b48                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021bb4       0x1c fs/vfs.32
                0x00000000c0021bb4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021bd0       0x1c fs/vfs.32
                0x00000000c0021bd0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021bec       0x2c hal/bus.32
                0x00000000c0021bec                vtable for Bus
 .rodata.str1.1
                0x00000000c0021c18       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021c88       0x3c hal/clock.32
                0x00000000c0021c88                vtable for Clock
 *fill*         0x00000000c0021cc4       0x1c 
 .rodata        0x00000000c0021ce0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021d10       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021d74       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021d96       0x15 hal/device.32
 *fill*         0x00000000c0021dab        0x1 
 .rodata._ZTV6Device
                0x00000000c0021dac       0x2c hal/device.32
                0x00000000c0021dac                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021dd8       0x2c hal/device.32
                0x00000000c0021dd8                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021e04       0x2c hal/diskctrl.32
                0x00000000c0021e04                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021e30       0x38 hal/diskphys.32
                0x00000000c0021e30                vtable for PhysicalDisk
 .rodata        0x00000000c0021e68       0x53 hal/keybrd.32
 *fill*         0x00000000c0021ebb        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021ebc       0x34 hal/keybrd.32
                0x00000000c0021ebc                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021ef0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021f34       0x2c hal/logidisk.32
                0x00000000c0021f34                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021f60       0x2c hal/mouse.32
                0x00000000c0021f60                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021f8c       0x34 hal/nic.32
                0x00000000c0021f8c                vtable for NIC
 .rodata.str1.1
                0x00000000c0021fc0        0xb hal/partition.32
 *fill*         0x00000000c0021fcb        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021fcc       0x44 hal/serial.32
                0x00000000c0021fcc                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022010       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002205b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022063       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022063       0x15 hal/timer.32
 *fill*         0x00000000c0022063        0x1 
 .rodata._ZTV5Timer
                0x00000000c0022064       0x30 hal/timer.32
                0x00000000c0022064                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0022094       0x10 hal/vcache.32
                0x00000000c0022094                vtable for VCache
 .rodata.str1.1
                0x00000000c00220a4       0xba hal/video.32
 *fill*         0x00000000c002215e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022160       0x4c hal/video.32
                0x00000000c0022160                vtable for Video
 .rodata.str1.1
                0x00000000c00221ac      0x17e hw/acpi.32
 *fill*         0x00000000c002232a        0x2 
 .rodata.str1.4
                0x00000000c002232c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00223a3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00223a3        0x8 hw/acpi.32
 *fill*         0x00000000c00223a3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00223a4       0x2c hw/acpi.32
                0x00000000c00223a4                vtable for ACPI
 .rodata.str1.1
                0x00000000c00223d0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022410       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022431       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022464        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022467       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00224dd        0x3 
 .rodata.str1.4
                0x00000000c00224e0       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022598       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022641        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022644       0x2c krnl/computer.32
                0x00000000c0022644                vtable for Computer
 .rodata.str1.1
                0x00000000c0022670       0x3c krnl/env.32
 .rodata        0x00000000c00226ac       0x66 krnl/fault.32
 .rodata.str1.1
                0x00000000c0022712       0x11 krnl/inlines.32
 *fill*         0x00000000c0022723        0x1 
 .rodata.str1.4
                0x00000000c0022724       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022754        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022763       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00227c4       0xa5 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022869       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00228c1       0x39 krnl/pipe.32
 *fill*         0x00000000c00228fa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00228fc       0x1c krnl/pipe.32
                0x00000000c00228fc                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022918       0x91 krnl/resolve.32
 *fill*         0x00000000c00229a9        0x3 
 .rodata.str1.4
                0x00000000c00229ac       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00229cb       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022a94       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022adc       0x2b krnl/terminal.32
 *fill*         0x00000000c0022b07        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0022b08       0x1c krnl/terminal.32
                0x00000000c0022b08                vtable for VgaText
 .rodata        0x00000000c0022b24       0x4c krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022b70       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022b70       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022b70       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022b70        0x8 krnl/unixfile.32
 .rodata.str1.4
                0x00000000c0022b70       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022b90       0x1c krnl/unixfile.32
                0x00000000c0022b90                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022bac       0x1c krnl/unixfile.32
                0x00000000c0022bac                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022bc8      0x270 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0022e38      0x126 krnl/virtmgr.32
                                        0x137 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022f5e        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0022f68       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0022f89       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022fdd       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023009      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023213       0x57 thr/prcssthr.32
                                         0x68 (size before relaxing)
 *fill*         0x00000000c002326a        0x2 
 .rodata.str1.4
                0x00000000c002326c       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002335c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002335c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002335c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002335c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002335c       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023439        0x3 
 .rodata        0x00000000c002343c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002346c      0x2e9 arch/i386/hal.32
                                        0x30d (size before relaxing)
 *fill*         0x00000000c0023755        0x3 
 .rodata.str1.4
                0x00000000c0023758       0x23 arch/i386/hal.32
 *fill*         0x00000000c002377b        0x1 
 .rodata._ZTV3CPU
                0x00000000c002377c       0x2c arch/i386/hal.32
                0x00000000c002377c                vtable for CPU
 .rodata.str1.4
                0x00000000c00237a8       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023809       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023847       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002385c       0x3c arch/i386/rtc.32
                0x00000000c002385c                vtable for RTC
 .rodata.str1.1
                0x00000000c0023898       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00238d9        0x3 
 .rodata._ZTV3FAT
                0x00000000c00238dc       0x6c fs/fat/vfslink.32
                0x00000000c00238dc                vtable for FAT
 .rodata.str1.1
                0x00000000c0023948       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023948      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023a80       0x6c fs/iso9660/vfslink.32
                0x00000000c0023a80                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023aec       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023b30       0x34 hal/sound/sndcard.32
                0x00000000c0023b30                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023b64       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023ba3       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023bdb       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0023c7c       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023ce0       0x2c hw/bus/pci.32
                0x00000000c0023ce0                vtable for PCI
 .rodata.str1.1
                0x00000000c0023d0c      0x10c hw/diskctrl/ide.32
                                        0x120 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0023e18       0x2c hw/diskctrl/ide.32
                0x00000000c0023e18                vtable for IDE
 .rodata.str1.4
                0x00000000c0023e44       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023e68       0x2c hw/diskctrl/satabus.32
                0x00000000c0023e68                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023e94       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023ea6        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023ea8       0x38 hw/diskphys/ata.32
                0x00000000c0023ea8                vtable for ATA
 .rodata.str1.1
                0x00000000c0023ee0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023eed        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023ef0       0x38 hw/diskphys/atapi.32
                0x00000000c0023ef0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023f28       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023fb0       0x38 hw/diskphys/sata.32
                0x00000000c0023fb0                vtable for SATA
 .rodata.str1.1
                0x00000000c0023fe8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00240d2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00240d4       0x38 hw/diskphys/satapi.32
                0x00000000c00240d4                vtable for SATAPI
 .rodata        0x00000000c002410c       0x17 hw/intctrl/apic.32
 *fill*         0x00000000c0024123        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0024124       0x2c hw/intctrl/apic.32
                0x00000000c0024124                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024150       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002416b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002416c       0x30 hw/timer/apictimer.32
                0x00000000c002416c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002419c       0x1d hw/timer/pit.32
 *fill*         0x00000000c00241b9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00241bc       0x30 hw/timer/pit.32
                0x00000000c00241bc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00241ec      0xa59
 *(.data)
 .data          0x00000000c00241ec        0x0 crti.32
 .data          0x00000000c00241ec        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00241ec                __dso_handle
 .data          0x00000000c00241f0        0x0 acpica/utclib.32
 .data          0x00000000c00241f0        0x0 krnl/malloc.32
 .data          0x00000000c00241f0        0x0 libk/ctype.32
 .data          0x00000000c00241f0        0x0 libk/string.32
 .data          0x00000000c00241f0        0x0 arch/i386/cc.32
 .data          0x00000000c00241f0        0x0 fs/fat/diskio.32
 .data          0x00000000c00241f0        0x0 fs/fat/ff.32
 .data          0x00000000c00241f0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00241f0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00241f0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00241f0        0x0 dbg/kconsole.32
 *fill*         0x00000000c00241f0       0x10 
 .data          0x00000000c0024200       0x28 dbg/usban.32
                0x00000000c0024200                KiUsbanTypeMismatchTypes
 .data          0x00000000c0024228        0x0 fs/symlink.32
 .data          0x00000000c0024228        0x0 fs/vfs.32
 .data          0x00000000c0024228        0x0 hal/bus.32
 .data          0x00000000c0024228        0x0 hal/buzzer.32
 .data          0x00000000c0024228        0x0 hal/clock.32
 .data          0x00000000c0024228        0x0 hal/device.32
 .data          0x00000000c0024228        0x0 hal/diskctrl.32
 .data          0x00000000c0024228        0x0 hal/diskphys.32
 .data          0x00000000c0024228        0x0 hal/fpu.32
 .data          0x00000000c0024228        0x0 hal/intctrl.32
 .data          0x00000000c0024228        0x0 hal/keybrd.32
 .data          0x00000000c0024228        0x0 hal/logidisk.32
 .data          0x00000000c0024228        0x0 hal/mouse.32
 .data          0x00000000c0024228        0x0 hal/nic.32
 .data          0x00000000c0024228        0x0 hal/partition.32
 .data          0x00000000c0024228        0x0 hal/serial.32
 .data          0x00000000c0024228        0x0 hal/timer.32
 .data          0x00000000c0024228        0x0 hal/vcache.32
 .data          0x00000000c0024228        0x0 hal/video.32
 .data          0x00000000c0024228       0x10 hw/acpi.32
                0x00000000c0024228                legacyIRQRemaps
 .data          0x00000000c0024238        0x0 krnl/atexit.32
 .data          0x00000000c0024238        0x0 krnl/bootmsg.32
 .data          0x00000000c0024238        0x4 krnl/c++.32
                0x00000000c0024238                __stack_chk_guard
 .data          0x00000000c002423c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002423c        0x4 
 .data          0x00000000c0024240      0x100 krnl/cm.32
                0x00000000c0024240                CmComponents
 .data          0x00000000c0024340        0x0 krnl/compat.32
 .data          0x00000000c0024340        0x0 krnl/computer.32
 .data          0x00000000c0024340      0x400 krnl/crc32.32
                0x00000000c0024340                KiPolyLookupCRC32
 .data          0x00000000c0024740       0x4d krnl/env.32
                0x00000000c0024740                defaultSysEnv
 .data          0x00000000c002478d        0x0 krnl/fault.32
 .data          0x00000000c002478d        0x0 krnl/gdt.32
 .data          0x00000000c002478d        0x0 krnl/idle.32
 .data          0x00000000c002478d        0x0 krnl/idt.32
 .data          0x00000000c002478d        0x0 krnl/inlines.32
 *fill*         0x00000000c002478d        0x3 
 .data          0x00000000c0024790        0x4 krnl/kheap.32
 .data          0x00000000c0024794        0x0 krnl/mailbox.32
 .data          0x00000000c0024794        0x0 krnl/main.32
 .data          0x00000000c0024794        0x0 krnl/mutex.32
 .data          0x00000000c0024794        0x0 krnl/panic.32
 .data          0x00000000c0024794        0x4 krnl/physmgr.32
                0x00000000c0024794                Phys::bitmap
 .data          0x00000000c0024798        0x0 krnl/pipe.32
 .data          0x00000000c0024798        0x0 krnl/powctrl.32
 .data          0x00000000c0024798        0x0 krnl/random.32
 .data          0x00000000c0024798        0x0 krnl/resolve.32
 .data          0x00000000c0024798        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024798        0x8 
 .data          0x00000000c00247a0       0x4c krnl/signal.32
                0x00000000c00247a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00247ec       0x14 
 .data          0x00000000c0024800      0x104 krnl/syscalls.32
                0x00000000c0024800                systemCallHandlers
 *fill*         0x00000000c0024904       0x1c 
 .data          0x00000000c0024920       0x60 krnl/terminal.32
                0x00000000c0024920                VgaText::hiddenOut
                0x00000000c0024940                ansiToVGAMappings
 .data          0x00000000c0024980        0x0 krnl/tss.32
 .data          0x00000000c0024980        0x4 krnl/unixfile.32
                0x00000000c0024980                UnixFile::nextFd
 .data          0x00000000c0024984       0x15 krnl/virtmgr.32
                0x00000000c0024984                Virt::pageAllocPtr
                0x00000000c0024988                Virt::bitmap
                0x00000000c002498c                Virt::swapfileSectorsPerPage
                0x00000000c0024990                Virt::swapfileLength
                0x00000000c0024994                Virt::swapfileSector
                0x00000000c0024998                Virt::swapfileDrive
 .data          0x00000000c0024999        0x0 sys/eject.32
 .data          0x00000000c0024999        0x0 sys/exit.32
 .data          0x00000000c0024999        0x0 sys/getcwd.32
 .data          0x00000000c0024999        0x0 sys/getpid.32
 .data          0x00000000c0024999        0x0 sys/getramdata.32
 .data          0x00000000c0024999        0x0 sys/getvgaptr.32
 .data          0x00000000c0024999        0x0 sys/kill.32
 .data          0x00000000c0024999        0x0 sys/loaddll.32
 .data          0x00000000c0024999        0x0 sys/read.32
 .data          0x00000000c0024999        0x0 sys/registersignal.32
 .data          0x00000000c0024999        0x0 sys/registry.32
 .data          0x00000000c0024999        0x0 sys/sbrk.32
 .data          0x00000000c0024999        0x0 sys/setcwd.32
 .data          0x00000000c0024999        0x0 sys/settime.32
 .data          0x00000000c0024999        0x0 sys/symlink.32
 .data          0x00000000c0024999        0x0 sys/timezone.32
 .data          0x00000000c0024999        0x0 sys/truncate.32
 .data          0x00000000c0024999        0x0 sys/write.32
 .data          0x00000000c0024999        0x0 sys/wsbe.32
 .data          0x00000000c0024999        0x0 sys/yield.32
 .data          0x00000000c0024999        0x0 thr/elf.32
 .data          0x00000000c0024999        0x0 thr/exec.32
 *fill*         0x00000000c0024999        0x3 
 .data          0x00000000c002499c        0x4 thr/prcssthr.32
                0x00000000c002499c                Thr::nextPID
 .data          0x00000000c00249a0        0x0 vm86/vm8086.32
 .data          0x00000000c00249a0      0x2a4 arch/i386/hal.32
                0x00000000c00249a0                exceptionNames
                0x00000000c0024c40                lastCode
 .data          0x00000000c0024c44        0x0 arch/i386/intctrl.32
 .data          0x00000000c0024c44        0x0 arch/i386/pic.32
 .data          0x00000000c0024c44        0x0 arch/i386/rtc.32
 .data          0x00000000c0024c44        0x0 arch/i386/vga.32
 .data          0x00000000c0024c44        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024c44        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024c44        0x1 fs/iso9660/vfslink.32
                0x00000000c0024c44                recentDriveletter
 .data          0x00000000c0024c45        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024c45        0x0 hal/sound/sndport.32
 .data          0x00000000c0024c45        0x0 hw/bus/isa.32
 .data          0x00000000c0024c45        0x0 hw/bus/pci.32
 .data          0x00000000c0024c45        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024c45        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024c45        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024c45        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024c45        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024c45        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024c45        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024c45        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024c45        0x0 hw/timer/pit.32
 .data          0x00000000c0024c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024c45        0x0 crtn.32
 .data          0x00000000c0024c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024c48        0x0
 .got           0x00000000c0024c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024c48        0x0
 .got.plt       0x00000000c0024c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024c48        0x0
 .igot.plt      0x00000000c0024c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024c48        0x0
 .tm_clone_table
                0x00000000c0024c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024c45      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024c45        0x3 
 .eh_frame      0x00000000c0024c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024c48       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024ca0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0024ce0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024d4c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7127
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 krnl/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 arch/i386/cc.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0026eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0026eb8        0x8 
 .bss           0x00000000c0026ec0     0x2444 fs/symlink.32
                0x00000000c0026ec0                kiNumWaitingRoomSymlinks
                0x00000000c0026ee0                kiNewlyCreatedIDs
                0x00000000c0026f00                kiNewlyCreatedSymlinks
                0x00000000c0027300                kiSymlinkHashTable
                0x00000000c0029300                kiBaseSymlinkID
 .bss           0x00000000c0029304        0x4 fs/vfs.32
                0x00000000c0029304                installedFilesystems
 .bss           0x00000000c0029308        0x0 hal/bus.32
 .bss           0x00000000c0029308        0x0 hal/buzzer.32
 .bss           0x00000000c0029308        0x8 hal/clock.32
                0x00000000c0029308                User::dstOn
                0x00000000c0029309                User::timezoneHalfHourOffset
                0x00000000c002930c                User::timezoneHourOffset
 .bss           0x00000000c0029310        0x0 hal/device.32
 .bss           0x00000000c0029310        0x0 hal/diskctrl.32
 .bss           0x00000000c0029310        0x0 hal/diskphys.32
 .bss           0x00000000c0029310        0x0 hal/fpu.32
 .bss           0x00000000c0029310        0x0 hal/intctrl.32
 *fill*         0x00000000c0029310       0x10 
 .bss           0x00000000c0029320      0x428 hal/keybrd.32
                0x00000000c0029320                keyboardWaitingTaskList
                0x00000000c0029324                keyboardSetupYet
                0x00000000c0029328                guiKeyboardHandler
                0x00000000c002932c                kiKeyboardGUILock
                0x00000000c002932d                kiKeyboardGUILatch
                0x00000000c0029340                keystates
 *fill*         0x00000000c0029748       0x18 
 .bss           0x00000000c0029760       0x88 hal/logidisk.32
                0x00000000c0029760                diskAssignments
                0x00000000c0029780                disks
 .bss           0x00000000c00297e8        0x4 hal/mouse.32
                0x00000000c00297e8                guiMouseHandler
 .bss           0x00000000c00297ec        0x0 hal/nic.32
 .bss           0x00000000c00297ec        0x0 hal/partition.32
 .bss           0x00000000c00297ec        0x0 hal/serial.32
 .bss           0x00000000c00297ec        0x4 hal/timer.32
                0x00000000c00297ec                milliTenthsSinceBoot
 .bss           0x00000000c00297f0        0x0 hal/vcache.32
 .bss           0x00000000c00297f0        0x4 hal/video.32
                0x00000000c00297f0                screen
 *fill*         0x00000000c00297f4        0xc 
 .bss           0x00000000c0029800      0x480 hw/acpi.32
                0x00000000c0029800                nextACPITable
                0x00000000c0029820                acpiTables
                0x00000000c0029a20                usingXSDT
                0x00000000c0029a24                RSDTpointer
                0x00000000c0029a28                RSDPpointer
                0x00000000c0029a2c                nextAPICNMI
                0x00000000c0029a40                apicNMIInfo
                0x00000000c0029ac0                legacyIRQFlags
                0x00000000c0029ae0                ioapicDiscoveryNumber
                0x00000000c0029b00                ioapicFoundInMADT
                0x00000000c0029b20                ioapicAddresses
                0x00000000c0029ba0                ioapicGSIBase
                0x00000000c0029c20                processorDiscoveryNumber
                0x00000000c0029c40                matchingAPICID
                0x00000000c0029c60                processorID
 .bss           0x00000000c0029c80       0xe0 krnl/atexit.32
                0x00000000c0029c80                KiNextAtexitHandler
                0x00000000c0029ca0                KiAtexitContexts
                0x00000000c0029d00                KiAtexitHandlers
 .bss           0x00000000c0029d60        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029d60        0x0 krnl/c++.32
 .bss           0x00000000c0029d60        0x0 krnl/cdefs.32
 .bss           0x00000000c0029d60        0x4 krnl/cm.32
 .bss           0x00000000c0029d64        0x0 krnl/compat.32
 .bss           0x00000000c0029d64       0x12 krnl/computer.32
                0x00000000c0029d64                systemSleepFunction
                0x00000000c0029d68                systemResetFunction
                0x00000000c0029d6c                systemShutdownFunction
                0x00000000c0029d70                Krnl::computer
                0x00000000c0029d74                KeIsPreemptionOn
                0x00000000c0029d75                KeIsSchedulingOn
 .bss           0x00000000c0029d76        0x0 krnl/crc32.32
 *fill*         0x00000000c0029d76        0x2 
 .bss           0x00000000c0029d78        0x8 krnl/env.32
                0x00000000c0029d78                KeUserEnv
                0x00000000c0029d7c                KeSystemEnv
 .bss           0x00000000c0029d80     0x2000 krnl/fault.32
                0x00000000c0029d80                keInterruptContexts
                0x00000000c002ad80                keInterruptHandlers
 .bss           0x00000000c002bd80        0x6 krnl/gdt.32
                0x00000000c002bd80                gdtDescr
 .bss           0x00000000c002bd86        0x0 krnl/idle.32
 *fill*         0x00000000c002bd86        0x2 
 .bss           0x00000000c002bd88        0x6 krnl/idt.32
                0x00000000c002bd88                idtDescr
 .bss           0x00000000c002bd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002bd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002bd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002bd8e        0x2 
 .bss           0x00000000c002bd90        0x4 krnl/main.32
                0x00000000c002bd90                keBootSettings
 .bss           0x00000000c002bd94        0x0 krnl/mutex.32
 .bss           0x00000000c002bd94        0x1 krnl/panic.32
                0x00000000c002bd94                KeIsKernelInPanic
 *fill*         0x00000000c002bd95        0x3 
 .bss           0x00000000c002bd98       0x29 krnl/physmgr.32
                0x00000000c002bd98                Phys::forbidEvictions
                0x00000000c002bd9c                Phys::currentPagePointer
                0x00000000c002bda0                Phys::highestMem
                0x00000000c002bda4                Phys::oldPercent
                0x00000000c002bda8                Phys::usedPages
                0x00000000c002bdac                Phys::usablePages
                0x00000000c002bdb0                Phys::dmaUsage
 .bss           0x00000000c002bdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002bdc1       0x1f 
 .bss           0x00000000c002bde0       0x48 krnl/powctrl.32
                0x00000000c002bde0                powCtrlOnBattery
                0x00000000c002be00                currentPowerSettings
                0x00000000c002be24                secondsSinceLastUserIO
 .bss           0x00000000c002be28        0x8 krnl/random.32
                0x00000000c002be28                kiRandSeed
 .bss           0x00000000c002be30        0x0 krnl/resolve.32
 .bss           0x00000000c002be30        0x0 krnl/semaphore.32
 .bss           0x00000000c002be30        0x0 krnl/signal.32
 .bss           0x00000000c002be30        0x0 krnl/syscalls.32
 .bss           0x00000000c002be30        0x9 krnl/terminal.32
                0x00000000c002be30                terminalCycle
                0x00000000c002be34                activeTerminal
                0x00000000c002be38                VgaText::graphicMode
 *fill*         0x00000000c002be39        0x1 
 .bss           0x00000000c002be3a        0x2 krnl/tss.32
                0x00000000c002be3a                doubleFaultSelector
 *fill*         0x00000000c002be3c        0x4 
 .bss           0x00000000c002be40       0x84 krnl/unixfile.32
                0x00000000c002be40                sfileLpt
                0x00000000c002be80                sfileCom
                0x00000000c002bea4                sfileNul
                0x00000000c002bea8                sfilePnt
                0x00000000c002beac                sfileAux
                0x00000000c002beb0                sfileCon
                0x00000000c002beb4                initialFilesAdded
                0x00000000c002beb8                unixFileLinkedList
 .bss           0x00000000c002bec4       0x10 krnl/virtmgr.32
                0x00000000c002bec4                twswaps
                0x00000000c002bec8                swapBalance
                0x00000000c002becc                Virt::swapfileBitmap
                0x00000000c002bed0                keFirstVAS
 .bss           0x00000000c002bed4        0x0 sys/eject.32
 .bss           0x00000000c002bed4        0x0 sys/exit.32
 .bss           0x00000000c002bed4        0x0 sys/getcwd.32
 .bss           0x00000000c002bed4        0x0 sys/getpid.32
 .bss           0x00000000c002bed4        0x0 sys/getramdata.32
 .bss           0x00000000c002bed4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bed4        0x0 sys/kill.32
 .bss           0x00000000c002bed4        0x0 sys/loaddll.32
 .bss           0x00000000c002bed4        0x0 sys/read.32
 .bss           0x00000000c002bed4        0x0 sys/registersignal.32
 .bss           0x00000000c002bed4        0x0 sys/registry.32
 .bss           0x00000000c002bed4        0x0 sys/sbrk.32
 .bss           0x00000000c002bed4        0x0 sys/setcwd.32
 .bss           0x00000000c002bed4        0x0 sys/settime.32
 .bss           0x00000000c002bed4        0x0 sys/symlink.32
 .bss           0x00000000c002bed4        0x0 sys/timezone.32
 .bss           0x00000000c002bed4        0x0 sys/truncate.32
 .bss           0x00000000c002bed4        0x0 sys/write.32
 .bss           0x00000000c002bed4        0x0 sys/wsbe.32
 .bss           0x00000000c002bed4        0x0 sys/yield.32
 *fill*         0x00000000c002bed4        0xc 
 .bss           0x00000000c002bee0      0x7a4 thr/elf.32
                0x00000000c002bee0                Thr::driverLookupNext
                0x00000000c002bf00                Thr::driverLookupLen
                0x00000000c002c100                Thr::driverLookupAddr
                0x00000000c002c300                Thr::driverNameLookup
                0x00000000c002c500                Thr::kernelSymbols
                0x00000000c002c580                Thr::kernelStringTable
                0x00000000c002c600                Thr::kernelSymbolTable
                0x00000000c002c680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002c684        0x0 thr/exec.32
 *fill*         0x00000000c002c684        0x4 
 .bss           0x00000000c002c688       0x70 thr/prcssthr.32
                0x00000000c002c688                KiRestorePreemptionValue
                0x00000000c002c68c                KiPreemptionDisableCounter
                0x00000000c002c690                cleanerThread
                0x00000000c002c694                weNeedTheCleanerToNotBlock
                0x00000000c002c698                retValLockStuff
                0x00000000c002c69c                retValSchedLock
                0x00000000c002c6a0                lockStuffLock
                0x00000000c002c6a4                schedulerLock
                0x00000000c002c6a8                taskSwitchesPostponedFlag
                0x00000000c002c6ac                postponeTaskSwitchesCounter
                0x00000000c002c6b0                irqDisableCounter
                0x00000000c002c6b4                terminatedTaskList
                0x00000000c002c6c0                sleepingTaskList
                0x00000000c002c6cc                taskList
                0x00000000c002c6d8                kernelProcess
 *fill*         0x00000000c002c6f8        0x8 
 .bss           0x00000000c002c700       0x40 vm86/vm8086.32
                0x00000000c002c700                Vm::started8086Yet
                0x00000000c002c704                Vm::vmRetV
                0x00000000c002c708                Vm::vmDone
                0x00000000c002c709                Vm::vmReady
                0x00000000c002c70c                Vm::vm86Thread
                0x00000000c002c710                Vm::vmToHostCommsPtr
                0x00000000c002c720                Vm::vmToHostComms
 .bss           0x00000000c002c740       0x54 arch/i386/hal.32
                0x00000000c002c740                apic
                0x00000000c002c744                guiPanicHandler
                0x00000000c002c748                fpuOwner
                0x00000000c002c74c                coproLoadFunc
                0x00000000c002c750                coproSaveFunc
                0x00000000c002c754                lastD
                0x00000000c002c758                lastC
                0x00000000c002c75c                lastB
                0x00000000c002c760                lastA
                0x00000000c002c764                HalPageWriteCombiningFlag
                0x00000000c002c768                HalPageGlobalFlag
                0x00000000c002c76c                nmi
                0x00000000c002c770                vendorIDString
                0x00000000c002c77d                familyID
                0x00000000c002c77e                model
                0x00000000c002c77f                processorType
                0x00000000c002c780                steppingID
                0x00000000c002c784                vendor
                0x00000000c002c788                opcodeDetectionMode
                0x00000000c002c78c                features
 .bss           0x00000000c002c794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002c794        0x0 arch/i386/pic.32
 .bss           0x00000000c002c794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c796        0xa 
 .bss           0x00000000c002c7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002c7a0                FAT::fats
                0x00000000c002c7c0                FAT::vfsToFatRemaps
                0x00000000c002c840                fatToVFSRemaps
 .bss           0x00000000c002c890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c890       0x10 
 .bss           0x00000000c002c8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002c8a0                iso9660Owner
                0x00000000c002c8a4                recentSector
                0x00000000c002c8c0                recentBuffer
 .bss           0x00000000c002d0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0c0        0xd hw/bus/pci.32
                0x00000000c002d0c0                thePCI
 .bss           0x00000000c002d0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0cd        0x3 
 .bss           0x00000000c002d0d0        0x8 hw/diskphys/ata.32
                0x00000000c002d0d0                ataSectorsWritten
                0x00000000c002d0d4                ataSectorsRead
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0d8        0x8 
 .bss           0x00000000c002d0e0       0x41 hw/intctrl/apic.32
                0x00000000c002d0e0                noOfIOAPICs
                0x00000000c002d100                ioapics
                0x00000000c002d120                IOAPICsSetupYet
 .bss           0x00000000c002d121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d121        0x3 
 .bss           0x00000000c002d124        0x4 hw/timer/pit.32
                0x00000000c002d124                pitFreq
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d128        0x0 crtn.32
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003424f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
