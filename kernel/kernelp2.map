Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2194e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b     0x113c krnl/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c0001248                dlmalloc
                0x00000000c0001785                dlrealloc
                0x00000000c0001963                dlmemalign
                0x00000000c0001a86                dlcalloc
                0x00000000c0001b17                dlcfree
                0x00000000c0001b1c                dlindependent_calloc
                0x00000000c0001b41                dlindependent_comalloc
                0x00000000c0001b58                dlvalloc
                0x00000000c0001b83                dlpvalloc
                0x00000000c0001bb9                dlmalloc_trim
                0x00000000c0001bc6                dlmalloc_usable_size
                0x00000000c0001bf7                dlmallinfo
                0x00000000c0001cc6                dlmalloc_stats
                0x00000000c0001cd7                dlmallopt
 *fill*         0x00000000c0001d57        0x1 
 .text          0x00000000c0001d58      0x1f2 libk/ctype.32
                0x00000000c0001d58                isblank
                0x00000000c0001d78                iscntrl
                0x00000000c0001d98                isdigit
                0x00000000c0001db4                islower
                0x00000000c0001dd0                isspace
                0x00000000c0001df8                isupper
                0x00000000c0001e14                isalpha
                0x00000000c0001e44                isalnum
                0x00000000c0001e74                ispunct
                0x00000000c0001eb4                isgraph
                0x00000000c0001ee4                isprint
                0x00000000c0001f0c                isxdigit
 .text          0x00000000c0001f4a        0x0 libk/string.32
 *fill*         0x00000000c0001f4a        0x2 
 .text          0x00000000c0001f4c       0x53 arch/i386/cc.32
                0x00000000c0001f4c                LWIP_PLATFORM_HTONS
                0x00000000c0001f70                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f9f       0x51 fs/fat/diskio.32
                0x00000000c0001f9f                disk_status
                0x00000000c0001fa2                disk_initialize
                0x00000000c0001fa5                disk_read
                0x00000000c0001fbb                disk_write
                0x00000000c0001fd1                disk_ioctl
 .text          0x00000000c0001ff0     0x3e44 fs/fat/ff.32
                0x00000000c0003e1f                f_mount
                0x00000000c0003e81                f_open
                0x00000000c0004144                f_read
                0x00000000c0004325                f_write
                0x00000000c000456c                f_sync
                0x00000000c0004631                f_close
                0x00000000c0004660                f_lseek
                0x00000000c0004810                f_opendir
                0x00000000c00048db                f_closedir
                0x00000000c00048fd                f_readdir
                0x00000000c000498f                f_stat
                0x00000000c0004a0e                f_getfree
                0x00000000c0004b17                f_truncate
                0x00000000c0004c01                f_unlink
                0x00000000c0004d21                f_mkdir
                0x00000000c0004ebc                f_rename
                0x00000000c0005074                f_chmod
                0x00000000c0005124                f_utime
                0x00000000c00051d4                f_getlabel
                0x00000000c0005328                f_setlabel
                0x00000000c00054b8                f_expand
                0x00000000c0005625                f_mkfs
 .text          0x00000000c0005e34       0x2f fs/fat/ffsystem.32
                0x00000000c0005e34                ff_memalloc
                0x00000000c0005e4c                ff_memfree
 *fill*         0x00000000c0005e63        0x1 
 .text          0x00000000c0005e64      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005e64                ff_uni2oem
                0x00000000c0005f00                ff_oem2uni
                0x00000000c0005f78                ff_wtoupper
 .text          0x00000000c0006138      0xd27 fs/iso9660/iso9660.32
                0x00000000c0006383                isoReadDiscSector
                0x00000000c000641e                strnicmp
                0x00000000c00066be                stricmp
                0x00000000c000670a                iso_open
                0x00000000c0006794                iso_close
                0x00000000c00067b2                iso_read
                0x00000000c00068c8                iso_seek
                0x00000000c000694c                iso_tell
                0x00000000c000697d                iso_total
                0x00000000c00069a8                fn_postprocess
                0x00000000c00069cf                iso_readdir
                0x00000000c0006c2a                iso_reset
                0x00000000c0006c47                init_percd
                0x00000000c0006d41                iso_ioctl
                0x00000000c0006d59                fs_iso9660_init
                0x00000000c0006def                fs_iso9660_shutdown
 .text          0x00000000c0006e5f      0x225 dbg/kconsole.32
                0x00000000c0006e5f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ed0                Dbg::logc(char)
                0x00000000c0006ef0                Dbg::logs(char*)
                0x00000000c0006f0f                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f2d                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f4e                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0007084      0x2d4 dbg/usban.32
                0x00000000c0007084                KiUbsanPrintDetails(char const*, void*)
                0x00000000c00070f0                __ubsan_handle_type_mismatch_v1
                0x00000000c00071cc                __ubsan_handle_pointer_overflow
                0x00000000c00071f8                __ubsan_handle_out_of_bounds
                0x00000000c0007224                __ubsan_handle_add_overflow
                0x00000000c0007250                __ubsan_handle_load_invalid_value
                0x00000000c000727c                __ubsan_handle_divrem_overflow
                0x00000000c00072a8                __ubsan_handle_mul_overflow
                0x00000000c00072d4                __ubsan_handle_sub_overflow
                0x00000000c0007300                __ubsan_handle_shift_out_of_bounds
                0x00000000c000732c                __ubsan_handle_negate_overflow
 .text          0x00000000c0007358      0x812 fs/symlink.32
                0x00000000c00074a7                KiDeinitialiseSymlinks(void*)
                0x00000000c0007538                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075bb                KeInitialiseSymlinks()
                0x00000000c000771d                KiIsSymlinkRegistered(char const*)
                0x00000000c0007887                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a2e                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b6a      0xd9c fs/vfs.32
                0x00000000c0007b6a                File::read(unsigned long long, void*, int*)
                0x00000000c0007bc2                File::write(unsigned long long, void*, int*)
                0x00000000c0007c1a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c72                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007ca0                File::isAtty()
                0x00000000c0007ca4                Directory::isAtty()
                0x00000000c0007ca8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cae                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cb4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cba                File::~File()
                0x00000000c0007cba                File::~File()
                0x00000000c0007cde                File::~File()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d08                Directory::~Directory()
                0x00000000c0007d2c                Directory::~Directory()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d56                Filesystem::Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d7a                Filesystem::~Filesystem()
                0x00000000c0007d88                Filesystem::~Filesystem()
                0x00000000c0007dac                Fs::getcwd(Process*, char*, int)
                0x00000000c0007dd6                Fs::initVFS()
                0x00000000c0007e00                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000802e                File::File(char const*, Process*, bool)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000812c                File::File(char const*, Process*)
                0x00000000c000814a                File::open(FileOpenMode)
                0x00000000c00081a8                File::close()
                0x00000000c0008208                File::seek(unsigned long long)
                0x00000000c000825e                File::truncate(unsigned long long)
                0x00000000c00082b4                File::tell(unsigned long long*)
                0x00000000c0008304                File::rewind()
                0x00000000c0008318                File::unlink()
                0x00000000c0008364                File::rename(char const*)
                0x00000000c00083b2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000840e                File::exists()
                0x00000000c000844c                File::stat(unsigned long long*, bool*)
                0x00000000c00084ad                Fs::setcwd(Process*, char*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c000860c                Directory::Directory(char const*, Process*)
                0x00000000c00086d4                Directory::open()
                0x00000000c0008730                Directory::close()
                0x00000000c0008790                Directory::unlink()
                0x00000000c00087dc                Directory::rename(char const*)
                0x00000000c000882a                Directory::exists()
                0x00000000c0008868                Directory::read(dirent*)
                0x00000000c00088b4                Directory::create()
                0x00000000c0008900                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c0008906        0x2 
 .text          0x00000000c0008908       0x86 hal/bus.32
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008908                Bus::Bus(char const*)
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008940                Bus::~Bus()
                0x00000000c0008964                Bus::~Bus()
 .text          0x00000000c000898e       0x9b hal/buzzer.32
                0x00000000c000898e                KeBeepThread(void*)
                0x00000000c00089cf                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a29        0x1 
 .text          0x00000000c0008a2a      0xe4e hal/clock.32
                0x00000000c0008a2a                KeLoadTimezoneStrings()
                0x00000000c0008db9                KeGetTimezoneStringFromID(int)
                0x00000000c0008e56                KeUpdateTimezone(char const*)
                0x00000000c0008f50                KeSetTimezone(char const*)
                0x00000000c0008fad                KeSetTimezone(int)
                0x00000000c0008fe0                KeLoadTimezone()
                0x00000000c000905a                Clock::Clock(char const*)
                0x00000000c000905a                Clock::Clock(char const*)
                0x00000000c0009090                Clock::~Clock()
                0x00000000c0009090                Clock::~Clock()
                0x00000000c00090b4                Clock::~Clock()
                0x00000000c00090de                Clock::timeInSecondsLocal()
                0x00000000c0009148                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091c8                KeDatetimeToSeconds(datetime_t)
                0x00000000c00094f6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095b8                KeSecondsToDatetime(unsigned long long)
                0x00000000c000984c                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009878      0x47a hal/device.32
                0x00000000c0009878                Device::hibernate()
                0x00000000c000987a                Device::wake()
                0x00000000c000987c                Device::detect()
                0x00000000c000987e                Device::disableLegacy()
                0x00000000c0009880                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009882                DriverlessDevice::close(int, int, void*)
                0x00000000c0009886                DriverlessDevice::detect()
                0x00000000c0009888                DriverlessDevice::open(int, int, void*)
                0x00000000c000989c                Device::~Device()
                0x00000000c000989c                Device::~Device()
                0x00000000c00098aa                Device::~Device()
                0x00000000c00098d2                Device::findAndLoadDriver()
                0x00000000c00098e0                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009906                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009946                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009970                Device::getParent()
                0x00000000c000997c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000999a                Device::addChild(Device*)
                0x00000000c00099de                Device::removeAllChildren()
                0x00000000c0009a24                Device::hibernateAll()
                0x00000000c0009a54                Device::wakeAll()
                0x00000000c0009a84                Device::detectAll()
                0x00000000c0009ab4                Device::disableLegacyAll()
                0x00000000c0009ab6                Device::loadDriversForAll()
                0x00000000c0009ab8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009aee                Device::setName(char const*)
                0x00000000c0009afc                Device::Device(char const*)
                0x00000000c0009afc                Device::Device(char const*)
                0x00000000c0009bf8                Device::getName()
                0x00000000c0009c02                Device::closeAll()
                0x00000000c0009c4e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c4e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009c84                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009cc8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009cf2        0x2 
 .text          0x00000000c0009cf4       0x86 hal/diskctrl.32
                0x00000000c0009cf4                HardDiskController::HardDiskController(char const*)
                0x00000000c0009cf4                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d2c                HardDiskController::~HardDiskController()
                0x00000000c0009d2c                HardDiskController::~HardDiskController()
                0x00000000c0009d50                HardDiskController::~HardDiskController()
 .text          0x00000000c0009d7a       0xe2 hal/diskphys.32
                0x00000000c0009d7a                PhysicalDisk::eject()
                0x00000000c0009d7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009d7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009de6                PhysicalDisk::startCache()
                0x00000000c0009e0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e32                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009e5c        0x0 hal/fpu.32
 .text          0x00000000c0009e5c        0x0 hal/intctrl.32
 .text          0x00000000c0009e5c      0x874 hal/keybrd.32
                0x00000000c0009e5c                startGUI(void*)
                0x00000000c0009ec1                startGUIVESA(void*)
                0x00000000c0009f26                sendKeyToTerminal(unsigned char)
                0x00000000c0009ffc                sendKeyboardToken(KeyboardToken)
                0x00000000c000a4b8                clearInternalKeybuffer(VgaText*)
                0x00000000c000a4ed                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a646                Keyboard::Keyboard(char const*)
                0x00000000c000a646                Keyboard::Keyboard(char const*)
                0x00000000c000a682                Keyboard::~Keyboard()
                0x00000000c000a682                Keyboard::~Keyboard()
                0x00000000c000a6a6                Keyboard::~Keyboard()
 .text          0x00000000c000a6d0      0x3f8 hal/logidisk.32
                0x00000000c000a6d0                LogicalDisk::close(int, int, void*)
                0x00000000c000a6d4                LogicalDisk::~LogicalDisk()
                0x00000000c000a6d4                LogicalDisk::~LogicalDisk()
                0x00000000c000a6f8                LogicalDisk::~LogicalDisk()
                0x00000000c000a722                LogicalDisk::open(int, int, void*)
                0x00000000c000a736                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a76e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a7b4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a7b4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a874                LogicalDisk::assignDriveLetter()
                0x00000000c000a92e                LogicalDisk::mount()
                0x00000000c000a976                LogicalDisk::unmount()
                0x00000000c000a986                LogicalDisk::eject()
                0x00000000c000a99a                LogicalDisk::unassignDriveLetter()
                0x00000000c000a9f0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aa5c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000aac8       0x86 hal/mouse.32
                0x00000000c000aac8                Mouse::Mouse(char const*)
                0x00000000c000aac8                Mouse::Mouse(char const*)
                0x00000000c000ab00                Mouse::~Mouse()
                0x00000000c000ab00                Mouse::~Mouse()
                0x00000000c000ab24                Mouse::~Mouse()
 .text          0x00000000c000ab4e       0x90 hal/nic.32
                0x00000000c000ab4e                NIC::getMAC()
                0x00000000c000ab54                NIC::write(int, unsigned char*, int*)
                0x00000000c000ab5a                NIC::NIC(char const*)
                0x00000000c000ab5a                NIC::NIC(char const*)
                0x00000000c000ab90                NIC::~NIC()
                0x00000000c000ab90                NIC::~NIC()
                0x00000000c000abb4                NIC::~NIC()
 .text          0x00000000c000abde      0x33b hal/partition.32
                0x00000000c000abde                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ac86                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af19        0x3 
 .text          0x00000000c000af1c       0x86 hal/serial.32
                0x00000000c000af1c                Serial::Serial(char const*)
                0x00000000c000af1c                Serial::Serial(char const*)
                0x00000000c000af54                Serial::~Serial()
                0x00000000c000af54                Serial::~Serial()
                0x00000000c000af78                Serial::~Serial()
 *fill*         0x00000000c000afa2        0x2 
 .text          0x00000000c000afa4      0x264 hal/timer.32
                0x00000000c000afa4                Timer::Timer(char const*)
                0x00000000c000afa4                Timer::Timer(char const*)
                0x00000000c000afdc                Timer::~Timer()
                0x00000000c000afdc                Timer::~Timer()
                0x00000000c000b000                Timer::~Timer()
                0x00000000c000b02a                Timer::read()
                0x00000000c000b035                setupTimer(int)
                0x00000000c000b070                timerHandler(unsigned int)
 .text          0x00000000c000b208      0x60e hal/vcache.32
                0x00000000c000b208                VCache::VCache(PhysicalDisk*)
                0x00000000c000b208                VCache::VCache(PhysicalDisk*)
                0x00000000c000b378                VCache::invalidateReadBuffer()
                0x00000000c000b388                VCache::writeWriteBuffer()
                0x00000000c000b3d4                VCache::~VCache()
                0x00000000c000b3d4                VCache::~VCache()
                0x00000000c000b42c                VCache::~VCache()
                0x00000000c000b454                VCache::write(unsigned long long, int, void*)
                0x00000000c000b622                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b816      0x71d hal/video.32
                0x00000000c000b816                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b862                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8d2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b962                Video::clearScreen(unsigned int)
                0x00000000c000b996                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9a4                Video::readPixelApprox(int, int)
                0x00000000c000b9b8                Video::Video(char const*)
                0x00000000c000b9b8                Video::Video(char const*)
                0x00000000c000b9ee                Video::~Video()
                0x00000000c000b9ee                Video::~Video()
                0x00000000c000ba12                Video::~Video()
                0x00000000c000ba3c                Video::isMonochrome()
                0x00000000c000ba48                Video::getWidth()
                0x00000000c000ba54                Video::getHeight()
                0x00000000c000ba60                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb1c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bec2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf33        0x1 
 .text          0x00000000c000bf34     0x1096 hw/acpi.32
                0x00000000c000bf34                ACPI::close(int, int, void*)
                0x00000000c000bf3c                loadACPITables(unsigned char*)
                0x00000000c000c19c                findRSDT(unsigned char*)
                0x00000000c000c2e8                findDataTable(unsigned char*, char*)
                0x00000000c000c35c                scanMADT()
                0x00000000c000c7b4                ACPI::ACPI()
                0x00000000c000c7b4                ACPI::ACPI()
                0x00000000c000c808                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c904                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c9d0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c9d8                ACPI::detectPCI()
                0x00000000c000cbe4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cbfc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cfca        0x2 
 .text          0x00000000c000cfcc       0xea krnl/assert.32
                0x00000000c000cfcc                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d0b6       0xb6 krnl/atexit.32
                0x00000000c000d0b6                KeInitialiseAtexit()
                0x00000000c000d0d5                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d109                KeExecuteAtexit()
 .text          0x00000000c000d16c       0x9f krnl/bootmsg.32
                0x00000000c000d16c                KeDisplaySplashScreen()
                0x00000000c000d19b                KeSetBootMessage(char const*)
 .text          0x00000000c000d20b       0x5f krnl/c++.32
                0x00000000c000d20b                __cxa_atexit
                0x00000000c000d20e                __cxa_finalize
                0x00000000c000d20f                __stack_chk_fail
                0x00000000c000d245                __cxa_pure_virtual
                0x00000000c000d256                operator new[](unsigned long)
                0x00000000c000d25b                operator delete(void*, unsigned long)
                0x00000000c000d260                operator delete[](void*)
                0x00000000c000d265                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d26a        0x2 
 .text          0x00000000c000d26c       0x44 krnl/cdefs.32
                0x00000000c000d26c                CUnlockScheduler
                0x00000000c000d284                CLockScheduler
                0x00000000c000d294                CPrintf
 .text          0x00000000c000d2b0      0xd51 krnl/cm.32
                0x00000000c000d2b0                CmOpen(char const*)
                0x00000000c000d3ce                CmClose(Reghive_Tag*)
                0x00000000c000d3e4                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d420                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d497                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d4d6                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d508                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d544                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d56c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d58d                CmExpand(Reghive_Tag*, int)
                0x00000000c000d608                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d68e                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d782                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d8ba                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d91b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d94b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d982                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d9ac                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d9ec                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000da90                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dabe                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dc5b                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dca8                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dd22                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dd75                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de39                zStrtok(char*, char const*)
                0x00000000c000deab                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000df2c                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000dfcf                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e001        0x3 
 .text          0x00000000c000e004       0x1d krnl/compat.32
                0x00000000c000e004                Krnl::handlePowerButton()
                0x00000000c000e014                Krnl::handleSleepButton()
 *fill*         0x00000000c000e021        0x1 
 .text          0x00000000c000e022      0x2c3 krnl/computer.32
                0x00000000c000e022                Computer::close(int, int, void*)
                0x00000000c000e028                Computer::open(int, int, void*)
                0x00000000c000e10e                KeFirstTask()
                0x00000000c000e230                Computer::Computer()
                0x00000000c000e230                Computer::Computer()
                0x00000000c000e274                KePrepareShutdown()
                0x00000000c000e294                KeShutdown()
                0x00000000c000e2b8                KeSleep()
                0x00000000c000e2c4                KeRestart()
 .text          0x00000000c000e2e5       0x2b krnl/crc32.32
                0x00000000c000e2e5                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e310      0x5bf krnl/env.32
                0x00000000c000e310                EnvVarContainer::getEnv(char const*)
                0x00000000c000e34e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e410                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e412                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e636                EnvVarContainer::__loadSystem()
                0x00000000c000e650                EnvVarContainer::__loadUser()
                0x00000000c000e652                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e652                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e674                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e674                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e6a4                KeGetEnv(Process*, char const*)
                0x00000000c000e709                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e723                KeSetEnvUser(char const*, char const*)
                0x00000000c000e742                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e755                KeDeleteEnvSystem(char const*)
                0x00000000c000e756                KeDeleteEnvUser(char const*)
                0x00000000c000e757                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e758                KeNewProcessEnv(Process*)
                0x00000000c000e77a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e7c6                KeLoadSystemEnv()
                0x00000000c000e7f4                KeLoadUserEnv()
                0x00000000c000e81a                KeFlushEnv()
                0x00000000c000e81b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e83b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e8cf        0x1 
 .text          0x00000000c000e8d0      0x361 krnl/fault.32
                0x00000000c000e8d0                KeSetupInterrupts()
                0x00000000c000e948                int_handler
                0x00000000c000ea78                KeDisplayProgramFault(char const*)
                0x00000000c000eac8                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eb1c                KePageFault(void*, void*)
                0x00000000c000eb80                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eb90                KeOtherFault(void*, void*)
                0x00000000c000ebc4                KeOpcodeFault(void*, void*)
                0x00000000c000ec18                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ec31        0x1 
 .text          0x00000000c000ec32      0x1db krnl/gdt.32
                0x00000000c000ec32                GDTEntry::setBase(unsigned int)
                0x00000000c000ec4e                GDTEntry::setLimit(unsigned int)
                0x00000000c000ec6c                GDT::GDT()
                0x00000000c000ec6c                GDT::GDT()
                0x00000000c000ec82                GDT::addEntry(GDTEntry)
                0x00000000c000eca4                GDT::getNumberOfEntries()
                0x00000000c000ecac                GDT::flush()
                0x00000000c000ecce                GDT::setup()
 .text          0x00000000c000ee0d       0x20 krnl/idle.32
                0x00000000c000ee0d                idleFunction(void*)
 *fill*         0x00000000c000ee2d        0x3 
 .text          0x00000000c000ee30      0x46c krnl/idt.32
                0x00000000c000ee30                IDTEntry::IDTEntry(bool)
                0x00000000c000ee30                IDTEntry::IDTEntry(bool)
                0x00000000c000eeaa                IDTEntry::setOffset(unsigned int)
                0x00000000c000eec0                IDT::IDT()
                0x00000000c000eec0                IDT::IDT()
                0x00000000c000eec2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000eeca                IDT::addEntry(IDTEntry, int)
                0x00000000c000eee4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ef1c                IDT::flush()
                0x00000000c000ef36                IDT::setup()
 .text          0x00000000c000f29c       0x9a krnl/inlines.32
                0x00000000c000f29c                CPU::current()
                0x00000000c000f2a8                operator new(unsigned long)
                0x00000000c000f2ad                operator delete(void*)
                0x00000000c000f2b2                disableIRQs()
                0x00000000c000f2b4                enableIRQs()
                0x00000000c000f2b6                lockScheduler()
                0x00000000c000f2be                unlockScheduler()
                0x00000000c000f2d0                lockStuff()
                0x00000000c000f2de                unlockStuff()
                0x00000000c000f31b                Virt::getAKernelVAS()
                0x00000000c000f321                __not_memcpy
 .text          0x00000000c000f336      0x2ae krnl/intlformat.32
                0x00000000c000f336                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f518                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f53a                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f55c                KeSetLocale(klocale_t)
                0x00000000c000f572                KeInitialiseLocale()
                0x00000000c000f5e0                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f5e1                KeFormatCurrency(char*, int, double)
                0x00000000c000f5e2                KeFormatNumber(char*, long long, long long)
                0x00000000c000f5e3                KeFormatNumber(char*, double)
 .text          0x00000000c000f5e4      0x356 krnl/intops.32
                0x00000000c000f5e4                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f700                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f840                KeGetDigitsInNumber(long long)
                0x00000000c000f8ac                KeItoa(unsigned long long, char*)
                0x00000000c000f8dc                KeItoa(long long, char*)
                0x00000000c000f90c                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f93a      0x204 krnl/kheap.32
                0x00000000c000f93a                sbrk
                0x00000000c000f9ce                sbrk_thunk
                0x00000000c000fa04                mmap
                0x00000000c000fa62                munmap
                0x00000000c000fa77                liballoc_lock()
                0x00000000c000fa85                liballoc_unlock()
                0x00000000c000fa9d                liballoc_alloc(int)
                0x00000000c000fab5                liballoc_free(void*, int)
                0x00000000c000fad0                realloc
                0x00000000c000fae4                malloc
                0x00000000c000faf4                free
                0x00000000c000fb04                rfree
                0x00000000c000fb14                calloc
 *fill*         0x00000000c000fb3e        0x2 
 .text          0x00000000c000fb40      0x1d3 krnl/mailbox.32
                0x00000000c000fb40                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fba0                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fc00                KeMailboxCreate()
                0x00000000c000fc34                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fc98                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fcfc                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fd13       0xfd krnl/main.32
                0x00000000c000fd13                KeEntryPoint
 .text          0x00000000c000fe10       0x1a krnl/mutex.32
                0x00000000c000fe10                Mutex::Mutex()
                0x00000000c000fe10                Mutex::Mutex()
 .text          0x00000000c000fe2a        0xc krnl/panic.32
                0x00000000c000fe2a                KePanic(char const*)
 .text          0x00000000c000fe36      0x666 krnl/physmgr.32
                0x00000000c000fe36                Phys::allocateDMA(unsigned long)
                0x00000000c000ff24                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000ff5f                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff9f                Phys::getPageState(unsigned long)
                0x00000000c000ffbb                Phys::freePage(unsigned long)
                0x00000000c0010024                Phys::allocatePage()
                0x00000000c0010102                Phys::allocateContiguousPages(int)
                0x00000000c001017d                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00101b5                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c001049c      0x271 krnl/pipe.32
                0x00000000c001049c                Pipe::isAtty()
                0x00000000c00104a0                Pipe::~Pipe()
                0x00000000c00104a0                Pipe::~Pipe()
                0x00000000c00104c4                Pipe::~Pipe()
                0x00000000c00104ec                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00105b0                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00106a6                Pipe::Pipe(int)
                0x00000000c00106a6                Pipe::Pipe(int)
 .text          0x00000000c001070d      0x10c krnl/powctrl.32
                0x00000000c001070d                KePowerThread(void*)
                0x00000000c001073f                KeChangePowerSettings(PowerSettings)
                0x00000000c0010755                KeUserIOReceived()
                0x00000000c0010760                KeHandlePowerButton()
                0x00000000c0010778                KeHandleSleepButton()
                0x00000000c0010790                KeSetupPowerManager()
 .text          0x00000000c0010819       0x9b krnl/random.32
                0x00000000c0010819                KeRand()
                0x00000000c0010859                KeSeedRand(unsigned int)
                0x00000000c0010882                KeInitRand()
 .text          0x00000000c00108b4      0x1bc krnl/resolve.32
                0x00000000c00108b4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010a70      0x415 krnl/semaphore.32
                0x00000000c0010a70                Semaphore::Semaphore(int)
                0x00000000c0010a70                Semaphore::Semaphore(int)
                0x00000000c0010aa0                Semaphore::tryAcquire()
                0x00000000c0010b74                Semaphore::assertLocked(char const*)
                0x00000000c0010c00                Semaphore::acquire(int)
                0x00000000c0010db8                Semaphore::acquire()
                0x00000000c0010dd4                Semaphore::release()
 .text          0x00000000c0010e85      0x404 krnl/signal.32
                0x00000000c0010e85                KiSigKill(int)
                0x00000000c0010e99                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010e9a                KiDefaultSignalHandlerPause(int)
                0x00000000c0010ec6                KiDefaultSignalHandlerResume(int)
                0x00000000c0010ef2                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010ef7                KeInitSignals()
                0x00000000c0010f59                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010f8f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011010                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00111a6                KiCheckSignalZ
                0x00000000c00111fc                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011237                KiFinishSignalZ
 .text          0x00000000c0011289      0xe1e krnl/syscalls.32
                0x00000000c0011289                SysSeekDir(regs*)
                0x00000000c001128e                SysTellDir(regs*)
                0x00000000c0011293                SysVerify(regs*)
                0x00000000c001129d                SysGetArgc(regs*)
                0x00000000c00112b1                SysTTYName(regs*)
                0x00000000c00112b9                SysFormatDisk(regs*)
                0x00000000c0011320                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011374                SysGetDiskVolumeLabel(regs*)
                0x00000000c00113cd                SysRealpath(regs*)
                0x00000000c001141b                SysReadDir(regs*)
                0x00000000c001149b                SysIsATTY(regs*)
                0x00000000c00114f5                SysSeek(regs*)
                0x00000000c0011553                SysTell(regs*)
                0x00000000c00115c8                SysSize(regs*)
                0x00000000c0011642                SysSizeFromFilename(regs*)
                0x00000000c0011775                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00118a8                SysClose(regs*)
                0x00000000c001190d                SysOpenDir(regs*)
                0x00000000c001198a                SysMakeDir(regs*)
                0x00000000c00119f8                SysCloseDir(regs*)
                0x00000000c0011a4c                SysWait(regs*)
                0x00000000c0011a6d                SysNotImpl(regs*)
                0x00000000c0011a88                SysPanic(regs*)
                0x00000000c0011aa3                SysRmdir(regs*)
                0x00000000c0011b01                SysUnlink(regs*)
                0x00000000c0011b5f                SysGetArgv(regs*)
                0x00000000c0011bac                SysUSleep(regs*)
                0x00000000c0011bd6                SysSpawn(regs*)
                0x00000000c0011c47                SysGetEnv(regs*)
                0x00000000c0011cfc                SysSetFatAttrib(regs*)
                0x00000000c0011d65                SysShutdown(regs*)
                0x00000000c0011dc2                SysPipe(regs*)
                0x00000000c0011e07                SysGetUnixTime(regs*)
                0x00000000c0011e1b                string_ends_with(char const*, char const*)
                0x00000000c0011e66                SysOpen(regs*)
                0x00000000c0012065                KeSystemCall(regs*, void*)
 *fill*         0x00000000c00120a7        0x1 
 .text          0x00000000c00120a8      0xadd krnl/terminal.32
                0x00000000c00120a8                VgaText::isAtty()
                0x00000000c00120ac                VgaText::~VgaText()
                0x00000000c00120ac                VgaText::~VgaText()
                0x00000000c00120d0                VgaText::~VgaText()
                0x00000000c00120fa                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001211a                setTerminalScrollLock(bool)
                0x00000000c001211b                doTerminalCycle()
                0x00000000c001211c                addToTerminalCycle(VgaText*)
                0x00000000c001211d                scrollTerminalScrollLock(int)
                0x00000000c001211e                VgaText::updateTitle()
                0x00000000c0012120                VgaText::load()
                0x00000000c0012122                VgaText::updateCursor()
                0x00000000c0012138                VgaText::doANSI_SGR(int)
                0x00000000c00121ac                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00121bc                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00121cc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00121ec                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00121f8                VgaText::setTitleColour(VgaColour)
                0x00000000c0012204                VgaText::setTitle(char*)
                0x00000000c0012206                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0012218                VgaText::scrollScreen()
                0x00000000c00122aa                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00122ba                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012366                VgaText::getCursorX()
                0x00000000c001236e                VgaText::getCursorY()
                0x00000000c0012376                VgaText::setCursor(int, int)
                0x00000000c001238d                setActiveTerminal(VgaText*)
                0x00000000c00123d8                VgaText::clearScreen()
                0x00000000c0012426                VgaText::setCursorX(int)
                0x00000000c001243e                VgaText::setCursorY(int)
                0x00000000c0012456                VgaText::incrementCursor(bool)
                0x00000000c00124aa                VgaText::decrementCursor(bool)
                0x00000000c00124cc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001259c                VgaText::putchar(char)
                0x00000000c0012684                VgaText::putx(unsigned int)
                0x00000000c00126ca                VgaText::puts(char const*)
                0x00000000c00126f0                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001273c                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00128b6                VgaText::VgaText(char const*)
                0x00000000c00128b6                VgaText::VgaText(char const*)
                0x00000000c0012a16                VgaText::receiveKey(unsigned char)
                0x00000000c0012b84                VgaText::doUpdate()
 *fill*         0x00000000c0012b85        0x3 
 .text          0x00000000c0012b88      0x224 krnl/tss.32
                0x00000000c0012b88                TSS::TSS()
                0x00000000c0012b88                TSS::TSS()
                0x00000000c0012b98                TSS::setESP(unsigned long)
                0x00000000c0012bac                TSS::flush()
                0x00000000c0012bcc                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012dac      0x4dc krnl/unixfile.32
                0x00000000c0012dac                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012e02                ReservedFilename::isAtty()
                0x00000000c0012e1e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012e7c                UnixFile::getFileDescriptor()
                0x00000000c0012e84                UnixFile::UnixFile(int)
                0x00000000c0012e84                UnixFile::UnixFile(int)
                0x00000000c0013038                ReservedFilename::ReservedFilename(int)
                0x00000000c0013038                ReservedFilename::ReservedFilename(int)
                0x00000000c001306a                UnixFile::~UnixFile()
                0x00000000c001306a                UnixFile::~UnixFile()
                0x00000000c0013106                UnixFile::~UnixFile()
                0x00000000c001312e                ReservedFilename::~ReservedFilename()
                0x00000000c001312e                ReservedFilename::~ReservedFilename()
                0x00000000c0013152                ReservedFilename::~ReservedFilename()
                0x00000000c0013179                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013288     0x14be krnl/virtmgr.32
                0x00000000c0013288                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00132c2                Virt::getPageState(unsigned long)
                0x00000000c00132e5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013401                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013424                Virt::swapIDToSector(unsigned long)
                0x00000000c001343a                Virt::allocateSwapfilePage()
                0x00000000c00134b9                Virt::virtualMemorySetup()
                0x00000000c001350a                Virt::setupPageSwapping(int)
                0x00000000c001357c                VAS::setCPUSpecific(unsigned long)
                0x00000000c001357e                VAS::VAS(VAS*)
                0x00000000c001357e                VAS::VAS(VAS*)
                0x00000000c0013596                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00135c4                VAS::getPageTableEntry(unsigned long)
                0x00000000c00135e3                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013720                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013744                VAS::virtualToPhysical(unsigned long)
                0x00000000c001375e                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00137a0                VAS::VAS()
                0x00000000c00137a0                VAS::VAS()
                0x00000000c001380a                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c001382a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013856                VAS::~VAS()
                0x00000000c0013856                VAS::~VAS()
                0x00000000c00139be                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013ac6                VAS::allocatePages(int, int)
                0x00000000c0013bb8                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013c12                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013d02                VAS::VAS(bool)
                0x00000000c0013d02                VAS::VAS(bool)
                0x00000000c0013eea                VAS::evict(unsigned long)
                0x00000000c0013fee                VAS::canLockPage(unsigned long)
                0x00000000c0014008                VAS::unlockPage(unsigned long)
                0x00000000c001403c                VAS::canLockPages(unsigned long, int)
                0x00000000c0014078                VAS::unlockPages(unsigned long, int)
                0x00000000c00140b4                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00143c4                VAS::lockPage(unsigned long)
                0x00000000c0014436                VAS::lockPages(unsigned long, int)
                0x00000000c0014472                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00144e6                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0014512                VAS::scanForEviction()
                0x00000000c001464b                mapVASFirstTime
 .text          0x00000000c0014746       0x2f sys/alarm.32
                0x00000000c0014746                SysAlarm(regs*)
 .text          0x00000000c0014775       0x36 sys/eject.32
                0x00000000c0014775                SysEject(regs*)
 .text          0x00000000c00147ab       0x18 sys/exit.32
                0x00000000c00147ab                SysExit(regs*)
 .text          0x00000000c00147c3       0x1f sys/getcwd.32
                0x00000000c00147c3                SysGetCwd(regs*)
 .text          0x00000000c00147e2       0x26 sys/getpid.32
                0x00000000c00147e2                SysGetPID(regs*)
 .text          0x00000000c0014808       0x21 sys/getramdata.32
                0x00000000c0014808                SysGetRAMData(regs*)
 .text          0x00000000c0014829       0x97 sys/getvgaptr.32
                0x00000000c0014829                SysGetVGAPtr(regs*)
 .text          0x00000000c00148c0       0xb9 sys/kill.32
                0x00000000c00148c0                SysKill(regs*)
 .text          0x00000000c0014979       0xa8 sys/loaddll.32
                0x00000000c0014979                SysLoadDLL(regs*)
 .text          0x00000000c0014a21       0x12 sys/pause.32
                0x00000000c0014a21                SysPause(regs*)
 .text          0x00000000c0014a33       0x68 sys/read.32
                0x00000000c0014a33                SysRead(regs*)
 .text          0x00000000c0014a9b       0x29 sys/registersignal.32
                0x00000000c0014a9b                SysRegisterSignal(regs*)
 .text          0x00000000c0014ac4      0x1cc sys/registry.32
                0x00000000c0014ac4                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014b08                SysRegistryReadExtent(regs*)
                0x00000000c0014b50                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014b67                SysRegistryEnterDirectory(regs*)
                0x00000000c0014b7e                SysRegistryGetNext(regs*)
                0x00000000c0014b95                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014bcf                SysRegistryOpen(regs*)
                0x00000000c0014be3                SysRegistryClose(regs*)
                0x00000000c0014bfa                SysRegistryEasyReadString(regs*)
                0x00000000c0014c46                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014c90       0x55 sys/sbrk.32
                0x00000000c0014c90                SysSbrk(regs*)
 .text          0x00000000c0014ce5       0x1c sys/setcwd.32
                0x00000000c0014ce5                SysSetCwd(regs*)
 .text          0x00000000c0014d01       0xf1 sys/settime.32
                0x00000000c0014d01                SysSetTime(regs*)
 .text          0x00000000c0014df2       0x73 sys/symlink.32
                0x00000000c0014df2                SysSymlink(regs*)
 .text          0x00000000c0014e65       0x3e sys/timezone.32
                0x00000000c0014e65                SysTimezone(regs*)
 .text          0x00000000c0014ea3       0xfc sys/truncate.32
                0x00000000c0014ea3                SysTruncate(regs*)
 .text          0x00000000c0014f9f       0x68 sys/write.32
                0x00000000c0014f9f                SysWrite(regs*)
 .text          0x00000000c0015007       0x9d sys/wsbe.32
                0x00000000c0015007                SysWsbe(regs*)
 .text          0x00000000c00150a4       0x28 sys/yield.32
                0x00000000c00150a4                SysYield(regs*)
 .text          0x00000000c00150cc      0x1a7 thr/alarm.32
                0x00000000c00150cc                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c00151c4                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015273     0x1228 thr/elf.32
                0x00000000c0015273                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00154fe                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001571d                Thr::runtimeReferenceHelper()
                0x00000000c0015730                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001577f                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015a3d                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001617e                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00161b0                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00161e7                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0016201                Thr::loadDLL(char const*, bool)
                0x00000000c0016462                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001649b       0x5a thr/exec.32
                0x00000000c001649b                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c00164f5        0x3 
 .text          0x00000000c00164f8     0x1269 thr/prcssthr.32
                0x00000000c00164f8                userModeEntryPoint(void*)
                0x00000000c0016524                changeTSS
                0x00000000c0016554                switchToThread(ThreadControlBlock*)
                0x00000000c001663c                Process::addArgs(char**)
                0x00000000c00166a8                Process::Process(char const*, Process*, char**)
                0x00000000c00166a8                Process::Process(char const*, Process*, char**)
                0x00000000c00168d0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00168d0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016abc                taskStartupFunction
                0x00000000c0016ac8                KeDisablePreemption()
                0x00000000c0016af0                KeRestorePreemption()
                0x00000000c0016b10                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016c38                Process::createUserThread()
                0x00000000c0016c58                setupMultitasking(void (*)())
                0x00000000c0016d90                schedule()
                0x00000000c0016e24                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016e50                blockTask(TaskState)
                0x00000000c0016e8c                waitTask(int, int*, int)
                0x00000000c0016ed0                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016f84                milliTenthSleep(unsigned long long)
                0x00000000c0016f9c                sleep(unsigned long long)
                0x00000000c0016fbc                sleep(unsigned int)
                0x00000000c0016fd4                milliTenthSleep(unsigned int)
                0x00000000c0016ff4                taskReturned
                0x00000000c001703c                Thr::processFromPID(int)
                0x00000000c00170e8                unblockTask(ThreadControlBlock*)
                0x00000000c001719c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001746c                cleanerTaskFunction(void*)
                0x00000000c0017584                terminateTask(int)
                0x00000000c0017694                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017761      0xd18 vm86/vm8086.32
                0x00000000c0017761                Vm::inbv(unsigned short)
                0x00000000c0017774                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00177aa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00177ba                Vm::getSegment(unsigned int)
                0x00000000c00177c2                Vm::getOffset(unsigned int)
                0x00000000c00177c7                Vm::mainloop2()
                0x00000000c0017801                Vm::mainVm8086Loop(void*)
                0x00000000c0017814                Vm::mainloop3(unsigned long)
                0x00000000c001783a                Vm::initialise8086()
                0x00000000c001787d                Vm::resetConventionalMemory8086()
                0x00000000c001787e                Vm::finish8086()
                0x00000000c00178e0                Vm::getOutput8086(unsigned char*)
                0x00000000c0017905                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017a32                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017c3e                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017cdb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017cec                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017cfe                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017d0f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017d24                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017d3a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017d4f                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018479        0x1 
 .text          0x00000000c001847a     0x1ee9 arch/i386/hal.32
                0x00000000c001847a                noCopro(unsigned long)
                0x00000000c001847c                CPU::close(int, int, void*)
                0x00000000c001847f                x86ReadCMOS(unsigned char)
                0x00000000c00184d3                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018535                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018554                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018571                AMD_K6_writeback(int, int, int)
                0x00000000c0018631                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00186cf                cpuidCheckEDX(unsigned int)
                0x00000000c00186fc                cpuidCheckECX(unsigned int)
                0x00000000c001872a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018758                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018786                HalDetectFeatures()
                0x00000000c0019551                HalEnableNMI()
                0x00000000c0019564                HalDisableNMI()
                0x00000000c0019577                HalGetNMIState()
                0x00000000c001957d                x86rdmsr(unsigned int)
                0x00000000c00195bb                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019600                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019616                HalFindRSDP()
                0x00000000c00196ab                HalHandlePageFault(void*, void*)
                0x00000000c0019758                HalHandleOpcodeFault(void*, void*)
                0x00000000c001979a                HalDisplayDebugInfo(void*)
                0x00000000c0019b28                HalReceivedNMI()
                0x00000000c0019bc3                HalSystemIdle()
                0x00000000c0019c22                i386SaveCoprocessor(void*)
                0x00000000c0019c36                i386LoadCoprocessor(void*)
                0x00000000c0019c4a                x87EmulHandler(regs*, void*)
                0x00000000c0019ce7                HalInitialiseCoprocessor()
                0x00000000c0019d6b                HalPanic(char const*)
                0x00000000c0019e7f                HalQueryPerformanceCounter()
                0x00000000c0019e8f                HalInitialise()
                0x00000000c001a021                HalMakeBeep(int)
                0x00000000c001a05b                HalGetRand()
                0x00000000c001a05e                HalEndOfInterrupt(int)
                0x00000000c001a089                HalRestart()
                0x00000000c001a08a                HalShutdown()
                0x00000000c001a08b                HalSleep()
                0x00000000c001a08c                CPU::CPU()
                0x00000000c001a08c                CPU::CPU()
                0x00000000c001a110                CPU::setupSMEP()
                0x00000000c001a11c                CPU::setupUMIP()
                0x00000000c001a126                CPU::setupTSC()
                0x00000000c001a130                CPU::setupLargePages()
                0x00000000c001a13a                CPU::setupPAT()
                0x00000000c001a16c                CPU::setupMTRR()
                0x00000000c001a16e                CPU::setupGlobalPages()
                0x00000000c001a178                CPU::allowUsermodeDataAccess()
                0x00000000c001a186                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a194                CPU::setupSMAP()
                0x00000000c001a1a2                CPU::setupFeatures()
                0x00000000c001a26e                CPU::open(int, int, void*)
 .text          0x00000000c001a363      0x268 arch/i386/intctrl.32
                0x00000000c001a363                convertLegacyIRQNumber(int)
                0x00000000c001a39f                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a3e9                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a526                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a55a                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a5cb        0x1 
 .text          0x00000000c001a5cc      0x2dc arch/i386/pic.32
                0x00000000c001a5cc                picIoWait()
                0x00000000c001a5d4                picDisable()
                0x00000000c001a608                picGetIRQReg(int)
                0x00000000c001a684                picOpen()
                0x00000000c001a808                picEOI(int)
 .text          0x00000000c001a8a8      0x5ed arch/i386/rtc.32
                0x00000000c001a8a8                RTC::open(int, int, void*)
                0x00000000c001a8ac                RTC::close(int, int, void*)
                0x00000000c001a8b0                RTC::timeInSecondsUTC()
                0x00000000c001a8c2                RTC::timeInDatetimeUTC()
                0x00000000c001a8e8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001a926                RTC::~RTC()
                0x00000000c001a926                RTC::~RTC()
                0x00000000c001a94a                RTC::~RTC()
                0x00000000c001a974                RTC::get_update_in_progress_flag()
                0x00000000c001a988                RTC::completeRTCRefresh()
                0x00000000c001ac36                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001adac                rtcIRQHandler(regs*, void*)
                0x00000000c001adec                RTC::RTC()
                0x00000000c001adec                RTC::RTC()
 *fill*         0x00000000c001ae95        0x3 
 .text          0x00000000c001ae98      0x1f4 arch/i386/vga.32
                0x00000000c001ae98                HalConsoleScroll(int, int)
                0x00000000c001afa0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b004                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b08c     0x14f3 fs/fat/vfslink.32
                0x00000000c001b08c                FAT::getName()
                0x00000000c001b094                FAT::tell(void*, unsigned long long*)
                0x00000000c001b0d0                FAT::stat(void*, unsigned long long*)
                0x00000000c001b10c                FAT::~FAT()
                0x00000000c001b10c                FAT::~FAT()
                0x00000000c001b130                FAT::~FAT()
                0x00000000c001b158                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b1fc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b2dc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b4c0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b6dc                FAT::allocateSwapfile(char const*, int)
                0x00000000c001b89c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ba0c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001ba6c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001bacc                FAT::close(void*)
                0x00000000c001bb20                FAT::closeDir(void*)
                0x00000000c001bb74                FAT::truncate(void*, unsigned long long)
                0x00000000c001bbe0                FAT::seek(void*, unsigned long long)
                0x00000000c001bc38                fatWrapperReadDisk
                0x00000000c001bc78                fatWrapperWriteDisk
                0x00000000c001bcb8                fatWrapperIoctl
                0x00000000c001bdd8                FAT::FAT()
                0x00000000c001bdd8                FAT::FAT()
                0x00000000c001be30                FAT::fixFilepath(char*)
                0x00000000c001be70                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001bfe4                FAT::openDir(char const*, void**)
                0x00000000c001c094                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c18c                FAT::unlink(char const*)
                0x00000000c001c20c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c3c4                FAT::rename(char const*, char const*)
                0x00000000c001c490                FAT::mkdir(char const*)
                0x00000000c001c510                FAT::exists(char const*)
 *fill*         0x00000000c001c57f        0x1 
 .text          0x00000000c001c580       0x94 fs/iso9660/helper.32
                0x00000000c001c580                isoReadDiscSectorHelper
                0x00000000c001c5dc                iso_kprintf
                0x00000000c001c5f8                iso_kprintfd
 .text          0x00000000c001c614      0x71a fs/iso9660/vfslink.32
                0x00000000c001c614                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c61a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c620                ISO9660::getName()
                0x00000000c001c626                ISO9660::closeDir(void*)
                0x00000000c001c630                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c636                ISO9660::unlink(char const*)
                0x00000000c001c63c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c642                ISO9660::rename(char const*, char const*)
                0x00000000c001c648                ISO9660::mkdir(char const*)
                0x00000000c001c64e                ISO9660::~ISO9660()
                0x00000000c001c64e                ISO9660::~ISO9660()
                0x00000000c001c672                ISO9660::~ISO9660()
                0x00000000c001c69a                ISO9660::exists(char const*)
                0x00000000c001c6ae                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c794                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c7dc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c81e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c85c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c8ae                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c9f0                ISO9660::close(void*)
                0x00000000c001ca20                ISO9660::openDir(char const*, void**)
                0x00000000c001cafa                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cc15                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001cc94                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cd06                ISO9660::ISO9660()
                0x00000000c001cd06                ISO9660::ISO9660()
 .text          0x00000000c001cd2e      0x26c hal/sound/sndcard.32
                0x00000000c001cd2e                SoundCard::beginPlayback()
                0x00000000c001cd3c                SoundCard::stopPlayback()
                0x00000000c001cd4a                SoundCard::SoundCard(char const*)
                0x00000000c001cd4a                SoundCard::SoundCard(char const*)
                0x00000000c001cde8                SoundCard::~SoundCard()
                0x00000000c001cde8                SoundCard::~SoundCard()
                0x00000000c001ce0c                SoundCard::~SoundCard()
                0x00000000c001ce36                SoundCard::configureRates(int, int, int)
                0x00000000c001ce66                SoundCard::getSamples16(int, short*)
                0x00000000c001cec2                SoundCard::getSamples32(int, int*)
                0x00000000c001cf48                SoundCard::addChannel(SoundPort*)
                0x00000000c001cf86                SoundCard::removeChannel(int)
 *fill*         0x00000000c001cf9a        0x2 
 .text          0x00000000c001cf9c      0x42f hal/sound/sndport.32
                0x00000000c001cf9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cf9c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d028                SoundPort::~SoundPort()
                0x00000000c001d028                SoundPort::~SoundPort()
                0x00000000c001d05c                SoundPort::unpause()
                0x00000000c001d068                SoundPort::pause()
                0x00000000c001d074                SoundPort::getBufferUsed()
                0x00000000c001d07c                SoundPort::getBufferSize()
                0x00000000c001d084                SoundPort::buffer8(signed char*, int)
                0x00000000c001d118                SoundPort::buffer16(short*, int)
                0x00000000c001d1ac                SoundPort::buffer32(int*, int)
                0x00000000c001d238                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d308                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d3cb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001d3cb        0x1 
 .text          0x00000000c001d3cc      0xc25 hw/bus/pci.32
                0x00000000c001d3cc                PCI::open(int, int, void*)
                0x00000000c001d3ea                PCI::close(int, int, void*)
                0x00000000c001d3ee                PCI::PCI()
                0x00000000c001d3ee                PCI::PCI()
                0x00000000c001d486                PCI::readBAR8(unsigned int, int)
                0x00000000c001d4a2                PCI::readBAR16(unsigned int, int)
                0x00000000c001d4c0                PCI::readBAR32(unsigned int, int)
                0x00000000c001d4dc                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d4fc                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d51e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d53e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d5b4                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d65e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d682                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d6aa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d6f4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d71c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d740                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d764                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d78c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d7f0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d8d6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001dba0                PCI::checkBus(unsigned char)
                0x00000000c001dbc4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ddaa                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001df26                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001df98                PCI::detect()
 *fill*         0x00000000c001dff1        0x1 
 .text          0x00000000c001dff2      0xe52 hw/diskctrl/ide.32
                0x00000000c001dff2                IDE::close(int, int, void*)
                0x00000000c001dff6                IDE::IDE()
                0x00000000c001dff6                IDE::IDE()
                0x00000000c001e02a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e03c                selectDrive(unsigned char, unsigned char)
                0x00000000c001e03e                IDE::getBase(unsigned char)
                0x00000000c001e050                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e110                IDE::read(unsigned char, unsigned char)
                0x00000000c001e1c4                IDE::waitInterrupt(unsigned char)
                0x00000000c001e227                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e243                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e260                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e2aa                IDE::open(int, int, void*)
                0x00000000c001e802                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e8d2                IDE::detect()
                0x00000000c001ed36                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001edf0                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001ee44      0x33f hw/diskctrl/satabus.32
                0x00000000c001ee44                SATABus::close(int, int, void*)
                0x00000000c001ee48                SATABus::detect()
                0x00000000c001ee4a                SATABus::SATABus()
                0x00000000c001ee4a                SATABus::SATABus()
                0x00000000c001eed0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ef02                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ef4a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ef6a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ef94                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f0a6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f150                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f183        0x1 
 .text          0x00000000c001f184      0x7c1 hw/diskphys/ata.32
                0x00000000c001f184                ATA::close(int, int, void*)
                0x00000000c001f1a8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f1aa                ATA::ATA()
                0x00000000c001f1aa                ATA::ATA()
                0x00000000c001f1d8                ATA::flush(bool)
                0x00000000c001f226                ATA::readyForCommand()
                0x00000000c001f272                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f67a                ATA::read(unsigned long long, int, void*)
                0x00000000c001f6c6                ATA::write(unsigned long long, int, void*)
                0x00000000c001f712                ATA::detectCHS()
                0x00000000c001f73c                ATA::open(int, int, void*)
                0x00000000c001f927                combineCharAndColour(char, unsigned char)
                0x00000000c001f938                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001f945        0x1 
 .text          0x00000000c001f946      0x612 hw/diskphys/atapi.32
                0x00000000c001f946                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f94c                ATAPI::close(int, int, void*)
                0x00000000c001f970                ATAPI::ATAPI()
                0x00000000c001f970                ATAPI::ATAPI()
                0x00000000c001f99e                ATAPI::readyForCommand()
                0x00000000c001f9f0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001fcb0                ATAPI::diskRemoved()
                0x00000000c001fcea                ATAPI::eject()
                0x00000000c001fd32                ATAPI::diskInserted()
                0x00000000c001fd3e                ATAPI::detectMedia()
                0x00000000c001fdfe                ATAPI::open(int, int, void*)
                0x00000000c001fede                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ff58      0x44a hw/diskphys/sata.32
                0x00000000c001ff58                SATA::close(int, int, void*)
                0x00000000c001ff7c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ff7e                SATA::open(int, int, void*)
                0x00000000c0020036                SATA::SATA()
                0x00000000c0020036                SATA::SATA()
                0x00000000c0020064                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00202ea                SATA::read(unsigned long long, int, void*)
                0x00000000c0020336                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c00203a2      0x5dc hw/diskphys/satapi.32
                0x00000000c00203a2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c00203a8                SATAPI::close(int, int, void*)
                0x00000000c00203cc                SATAPI::SATAPI()
                0x00000000c00203cc                SATAPI::SATAPI()
                0x00000000c00203fa                SATAPI::diskRemoved()
                0x00000000c00203fc                SATAPI::diskInserted()
                0x00000000c0020418                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020702                SATAPI::eject()
                0x00000000c002073e                SATAPI::detectMedia()
                0x00000000c0020794                SATAPI::open(int, int, void*)
                0x00000000c0020894                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c002097e      0x443 hw/intctrl/apic.32
                0x00000000c002097e                IOAPIC::close(int, int, void*)
                0x00000000c0020984                apicGetBase()
                0x00000000c00209a2                IOAPIC::IOAPIC()
                0x00000000c00209a2                IOAPIC::IOAPIC()
                0x00000000c00209ca                apicOpen()
                0x00000000c0020b56                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020b88                IOAPIC::read(int)
                0x00000000c0020bb0                IOAPIC::open(int, int, void*)
                0x00000000c0020c96                IOAPIC::write(int, int)
                0x00000000c0020cc2                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020dc1        0x3 
 .text          0x00000000c0020dc4       0xf0 hw/timer/apictimer.32
                0x00000000c0020dc4                APICTimer::close(int, int, void*)
                0x00000000c0020dcc                apicTimerHandler(regs*, void*)
                0x00000000c0020df4                APICTimer::open(int, int, void*)
                0x00000000c0020e64                APICTimer::write(int)
                0x00000000c0020e8c                APICTimer::APICTimer()
                0x00000000c0020e8c                APICTimer::APICTimer()
 .text          0x00000000c0020eb4      0x1ad hw/timer/pit.32
                0x00000000c0020eb4                PIT::write(int)
                0x00000000c0020f38                pitHandler(regs*, void*)
                0x00000000c0020f60                PIT::open(int, int, void*)
                0x00000000c0020fb0                PIT::close(int, int, void*)
                0x00000000c0020fe0                PIT::PIT()
                0x00000000c0020fe0                PIT::PIT()
 *fill*         0x00000000c0021061        0xf 
 .text          0x00000000c0021070       0x6f arch/i386/avx.32
                0x00000000c0021070                avxDetect
                0x00000000c002109a                avxSave
                0x00000000c00210ab                avxLoad
                0x00000000c00210bc                avxInit
                0x00000000c00210de                avxClose
 *fill*         0x00000000c00210df        0x1 
 .text          0x00000000c00210e0      0x2b4 arch/i386/interrupt.32
                0x00000000c00210e0                isr0
                0x00000000c00210f0                isr1
                0x00000000c00210fa                isr2
                0x00000000c0021104                isr3
                0x00000000c002110e                isr4
                0x00000000c0021118                isr5
                0x00000000c0021122                isr6
                0x00000000c002112c                isr7
                0x00000000c0021136                isr8
                0x00000000c002113e                isr9
                0x00000000c0021148                isr10
                0x00000000c0021150                isr11
                0x00000000c0021158                isr12
                0x00000000c0021160                isr13
                0x00000000c002117a                isr14
                0x00000000c0021182                isr15
                0x00000000c002118c                isr16
                0x00000000c0021196                isr17
                0x00000000c00211a0                isr18
                0x00000000c00211aa                irq3
                0x00000000c00211b4                irq4
                0x00000000c00211be                irq5
                0x00000000c00211c8                irq6
                0x00000000c00211d2                irq7
                0x00000000c00211dc                irq8
                0x00000000c00211e6                irq9
                0x00000000c00211f0                irq10
                0x00000000c00211fa                irq11
                0x00000000c0021204                irq12
                0x00000000c002120e                irq13
                0x00000000c0021218                irq14
                0x00000000c0021222                irq15
                0x00000000c002122c                irq1
                0x00000000c0021233                irq2
                0x00000000c002123a                isr96
                0x00000000c0021241                irq0
                0x00000000c0021246                int_common_stub
                0x00000000c0021246                syscall_common_stub
                0x00000000c0021344                irq16
                0x00000000c002134e                irq17
                0x00000000c0021358                irq18
                0x00000000c0021362                irq19
                0x00000000c002136c                irq20
                0x00000000c0021376                irq21
                0x00000000c0021380                irq22
                0x00000000c002138a                irq23
 *fill*         0x00000000c0021394        0xc 
 .text          0x00000000c00213a0       0x10 arch/i386/rdrand.32
                0x00000000c00213a0                i386GetRDRAND
 .text          0x00000000c00213b0       0x39 arch/i386/sse.32
                0x00000000c00213b0                sseDetect
                0x00000000c00213c8                sseSave
                0x00000000c00213d0                sseLoad
                0x00000000c00213d8                sseInit
                0x00000000c00213e8                sseClose
 *fill*         0x00000000c00213e9        0x7 
 .text          0x00000000c00213f0       0x4f arch/i386/x87.32
                0x00000000c00213f6                x87Detect
                0x00000000c0021417                x87Save
                0x00000000c002141e                x87Load
                0x00000000c0021425                x87Init
                0x00000000c002143e                x87Close
 *fill*         0x00000000c002143f        0x1 
 .text          0x00000000c0021440       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021465        0x0 crtn.32
 *fill*         0x00000000c0021465        0x3 
 .text          0x00000000c0021468      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021468                __divdi3
 *fill*         0x00000000c00215b3        0x1 
 .text          0x00000000c00215b4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00215b4                __moddi3
 *fill*         0x00000000c0021732        0x2 
 .text          0x00000000c0021734       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021734                __udivdi3
 *fill*         0x00000000c0021833        0x1 
 .text          0x00000000c0021834      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021834                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021950        0x0
 .iplt          0x00000000c0021950        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002194e        0xf
 .init          0x00000000c002194e        0x3 crti.32
                0x00000000c002194e                _init
 .init          0x00000000c0021951        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021956        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002195b        0x2 crtn.32

.fini           0x00000000c002195d        0xa
 .fini          0x00000000c002195d        0x3 crti.32
                0x00000000c002195d                _fini
 .fini          0x00000000c0021960        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021965        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021968       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021968       0x1a hal/device.32
                0x00000000c0021968                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021968                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021982       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021982       0x2a hal/device.32
                0x00000000c0021982                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00219ac       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00219ac       0xdc hal/device.32
                0x00000000c00219ac                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a88       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a88       0x42 hal/device.32
                0x00000000c0021a88                LinkedList<Device>::LinkedList()
                0x00000000c0021a88                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021acc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021acc       0x1c hal/timer.32
                0x00000000c0021acc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021ae8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021ae8        0x7 hal/timer.32
                0x00000000c0021ae8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021af0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021af0       0xbc hal/timer.32
                0x00000000c0021af0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021bac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021bac       0xda hal/timer.32
                0x00000000c0021bac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021c88       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021c88       0x23 hw/acpi.32
                0x00000000c0021c88                ACPI::~ACPI()
                0x00000000c0021c88                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021cac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021cac       0x2a hw/acpi.32
                0x00000000c0021cac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021cd8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021cd8        0x2 hw/acpi.32
                0x00000000c0021cd8                LinkedList<Device>::~LinkedList()
                0x00000000c0021cd8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021cdc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021cdc       0x1c hw/acpi.32
                0x00000000c0021cdc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021cf8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021cf8        0x7 hw/acpi.32
                0x00000000c0021cf8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021d00       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021d00       0xb8 hw/acpi.32
                0x00000000c0021d00                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021db8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021db8       0x23 krnl/computer.32
                0x00000000c0021db8                Computer::~Computer()
                0x00000000c0021db8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021ddc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021ddc       0x2a krnl/computer.32
                0x00000000c0021ddc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021e06       0x24
 .text._Z10idleCommonv
                0x00000000c0021e06       0x24 krnl/idle.32
                0x00000000c0021e06                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021e2a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021e2a        0x2 krnl/unixfile.32
                0x00000000c0021e2a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021e2a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021e2c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021e2c       0x42 krnl/unixfile.32
                0x00000000c0021e2c                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021e2c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021e6e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021e6e       0xd3 krnl/unixfile.32
                0x00000000c0021e6e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021f42        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021f42        0x7 krnl/unixfile.32
                0x00000000c0021f42                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021f4a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021f4a       0xa1 krnl/unixfile.32
                0x00000000c0021f4a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021fec        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021fec        0x8 krnl/unixfile.32
                0x00000000c0021fec                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021ff4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021ff4        0x8 sys/kill.32
                0x00000000c0021ff4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ffc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ffc        0x2 thr/prcssthr.32
                0x00000000c0021ffc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021ffc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022000       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022000       0x49 thr/prcssthr.32
                0x00000000c0022000                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022000                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002204c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002204c       0x42 thr/prcssthr.32
                0x00000000c002204c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002204c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002208e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002208e       0x23 arch/i386/hal.32
                0x00000000c002208e                CPU::~CPU()
                0x00000000c002208e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00220b2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00220b2       0x2a arch/i386/hal.32
                0x00000000c00220b2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00220dc       0x23
 .text._ZN3PCID2Ev
                0x00000000c00220dc       0x23 hw/bus/pci.32
                0x00000000c00220dc                PCI::~PCI()
                0x00000000c00220dc                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0022100       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0022100       0x2a hw/bus/pci.32
                0x00000000c0022100                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002212a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002212a       0x23 hw/diskctrl/ide.32
                0x00000000c002212a                IDE::~IDE()
                0x00000000c002212a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002214e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002214e       0x2a hw/diskctrl/ide.32
                0x00000000c002214e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022178       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022178       0x23 hw/diskctrl/satabus.32
                0x00000000c0022178                SATABus::~SATABus()
                0x00000000c0022178                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002219c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002219c       0x2a hw/diskctrl/satabus.32
                0x00000000c002219c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00221c6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00221c6       0x23 hw/diskphys/ata.32
                0x00000000c00221c6                ATA::~ATA()
                0x00000000c00221c6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00221ea       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00221ea       0x2a hw/diskphys/ata.32
                0x00000000c00221ea                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022214       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022214       0x23 hw/diskphys/atapi.32
                0x00000000c0022214                ATAPI::~ATAPI()
                0x00000000c0022214                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022238       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022238       0x2a hw/diskphys/atapi.32
                0x00000000c0022238                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022262       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022262       0x23 hw/diskphys/sata.32
                0x00000000c0022262                SATA::~SATA()
                0x00000000c0022262                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022286       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022286       0x2a hw/diskphys/sata.32
                0x00000000c0022286                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00222b0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00222b0       0x23 hw/diskphys/satapi.32
                0x00000000c00222b0                SATAPI::~SATAPI()
                0x00000000c00222b0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00222d4       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00222d4       0x2a hw/diskphys/satapi.32
                0x00000000c00222d4                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00222fe       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00222fe       0x23 hw/intctrl/apic.32
                0x00000000c00222fe                IOAPIC::~IOAPIC()
                0x00000000c00222fe                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022322       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022322       0x2a hw/intctrl/apic.32
                0x00000000c0022322                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002234c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002234c       0x23 hw/timer/apictimer.32
                0x00000000c002234c                APICTimer::~APICTimer()
                0x00000000c002234c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022370       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022370       0x2a hw/timer/apictimer.32
                0x00000000c0022370                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002239c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002239c       0x23 hw/timer/pit.32
                0x00000000c002239c                PIT::~PIT()
                0x00000000c002239c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00223c0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00223c0       0x2a hw/timer/pit.32
                0x00000000c00223c0                PIT::~PIT()

.rodata         0x00000000c00223ea     0x3b5e
                0x00000000c00223ea                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00223ea        0x2 
 .ctors         0x00000000c00223ec        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00223f0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00223f4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00223f8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00223fc                end_ctors = .
                0x00000000c00223fc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00223fc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022400        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022400                __DTOR_END__
                0x00000000c0022404                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022404       0x1c 
 .rodata        0x00000000c0022420      0x101 acpica/utclib.32
                0x00000000c0022420                AcpiGbl_Ctypes
 *fill*         0x00000000c0022521        0x3 
 .rodata        0x00000000c0022524       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002253c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022586       0x1a 
 .rodata        0x00000000c00225a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002268d       0x13 
 .rodata        0x00000000c00226a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022aa0       0x6f fs/iso9660/iso9660.32
 *fill*         0x00000000c0022b0f        0x1 
 .rodata        0x00000000c0022b10      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022c60      0x169 dbg/usban.32
 *fill*         0x00000000c0022dc9        0x3 
 .rodata.str1.4
                0x00000000c0022dcc      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022f03      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0023026       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002307f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023080       0x6c fs/vfs.32
                0x00000000c0023080                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00230ec       0x1c fs/vfs.32
                0x00000000c00230ec                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023108       0x1c fs/vfs.32
                0x00000000c0023108                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0023124       0x2c hal/bus.32
                0x00000000c0023124                vtable for Bus
 *fill*         0x00000000c0023150       0x10 
 .rodata        0x00000000c0023160      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00232b0       0x3c hal/clock.32
                0x00000000c00232b0                vtable for Clock
 .rodata.str1.1
                0x00000000c00232ec       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023350       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023372       0x15 hal/device.32
 *fill*         0x00000000c0023387        0x1 
 .rodata._ZTV6Device
                0x00000000c0023388       0x2c hal/device.32
                0x00000000c0023388                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00233b4       0x2c hal/device.32
                0x00000000c00233b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00233e0       0x2c hal/diskctrl.32
                0x00000000c00233e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002340c       0x38 hal/diskphys.32
                0x00000000c002340c                vtable for PhysicalDisk
 .rodata        0x00000000c0023444       0x53 hal/keybrd.32
 *fill*         0x00000000c0023497        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023498       0x34 hal/keybrd.32
                0x00000000c0023498                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00234cc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023510       0x2c hal/logidisk.32
                0x00000000c0023510                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002353c       0x2c hal/mouse.32
                0x00000000c002353c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023568       0x34 hal/nic.32
                0x00000000c0023568                vtable for NIC
 .rodata.str1.1
                0x00000000c002359c        0xb hal/partition.32
 *fill*         0x00000000c00235a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00235a8       0x44 hal/serial.32
                0x00000000c00235a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00235ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023637        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002363f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002363f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c002363f       0x6d hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00236ac       0x30 hal/timer.32
                0x00000000c00236ac                vtable for Timer
 .rodata.str1.1
                0x00000000c00236dc       0x3e hal/vcache.32
 *fill*         0x00000000c002371a        0x2 
 .rodata._ZTV6VCache
                0x00000000c002371c       0x10 hal/vcache.32
                0x00000000c002371c                vtable for VCache
 .rodata.str1.1
                0x00000000c002372c       0xba hal/video.32
 *fill*         0x00000000c00237e6        0x2 
 .rodata._ZTV5Video
                0x00000000c00237e8       0x4c hal/video.32
                0x00000000c00237e8                vtable for Video
 .rodata.str1.1
                0x00000000c0023834      0x17e hw/acpi.32
 *fill*         0x00000000c00239b2        0x2 
 .rodata.str1.4
                0x00000000c00239b4       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023a2b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023a2b        0x8 hw/acpi.32
 *fill*         0x00000000c0023a2b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023a2c       0x2c hw/acpi.32
                0x00000000c0023a2c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023a58       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023a6b       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023aab       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023acc       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023aff        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023b02       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023b78       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0023c30       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023cd9        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023cdc       0x2c krnl/computer.32
                0x00000000c0023cdc                vtable for Computer
 .rodata.str1.1
                0x00000000c0023d08       0x3c krnl/env.32
 .rodata        0x00000000c0023d44       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023dba        0x4 krnl/intlformat.32
 *fill*         0x00000000c0023dbe        0x2 
 .rodata.str1.4
                0x00000000c0023dc0       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023df0        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023dff       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023e60      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023f65       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023fbd       0x39 krnl/pipe.32
 *fill*         0x00000000c0023ff6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023ff8       0x1c krnl/pipe.32
                0x00000000c0023ff8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024014       0x91 krnl/resolve.32
 *fill*         0x00000000c00240a5        0x3 
 .rodata.str1.4
                0x00000000c00240a8       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00240c7      0x19b krnl/signal.32
 .rodata.str1.1
                0x00000000c0024262       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00242aa       0x5e krnl/terminal.32
 .rodata._ZTV7VgaText
                0x00000000c0024308       0x1c krnl/terminal.32
                0x00000000c0024308                vtable for VgaText
 .rodata        0x00000000c0024324       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002435f       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002435f       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002435f       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002435f        0x8 krnl/unixfile.32
 *fill*         0x00000000c002435f        0x1 
 .rodata.str1.4
                0x00000000c0024360       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024380       0x22 krnl/unixfile.32
 *fill*         0x00000000c00243a2        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c00243a4       0x1c krnl/unixfile.32
                0x00000000c00243a4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00243c0       0x1c krnl/unixfile.32
                0x00000000c00243c0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00243dc      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002495f      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024ac0       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024ad5        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024ae4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024aee       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024b0f       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024b53       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024b68       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024b94       0x4d thr/alarm.32
 .rodata.str1.1
                0x00000000c0024be1      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024deb       0x6e thr/prcssthr.32
 *fill*         0x00000000c0024e59        0x3 
 .rodata.str1.4
                0x00000000c0024e5c       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024f54       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024f54       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024f54       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024f54        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024f54       0xdd vm86/vm8086.32
 *fill*         0x00000000c0025031        0x3 
 .rodata        0x00000000c0025034       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0025064      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c00253af        0x1 
 .rodata.str1.4
                0x00000000c00253b0       0x57 arch/i386/hal.32
 *fill*         0x00000000c0025407        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025408       0x2c arch/i386/hal.32
                0x00000000c0025408                vtable for CPU
 .rodata.str1.4
                0x00000000c0025434       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025495       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00254d3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00254e8       0x3c arch/i386/rtc.32
                0x00000000c00254e8                vtable for RTC
 .rodata.str1.1
                0x00000000c0025524       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025565        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025568       0x6c fs/fat/vfslink.32
                0x00000000c0025568                vtable for FAT
 .rodata.str1.1
                0x00000000c00255d4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00255d4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002570c       0x6c fs/iso9660/vfslink.32
                0x00000000c002570c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025778       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00257bc       0x34 hal/sound/sndcard.32
                0x00000000c00257bc                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00257f0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002582f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025867       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025908       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002596c       0x2c hw/bus/pci.32
                0x00000000c002596c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025998      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025abc       0x2c hw/diskctrl/ide.32
                0x00000000c0025abc                vtable for IDE
 .rodata.str1.4
                0x00000000c0025ae8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025b0c       0x2c hw/diskctrl/satabus.32
                0x00000000c0025b0c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025b38       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025bf3        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025bf4       0x38 hw/diskphys/ata.32
                0x00000000c0025bf4                vtable for ATA
 .rodata.str1.1
                0x00000000c0025c2c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025c39        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025c3c       0x38 hw/diskphys/atapi.32
                0x00000000c0025c3c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025c74       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025cfc       0x38 hw/diskphys/sata.32
                0x00000000c0025cfc                vtable for SATA
 .rodata.str1.1
                0x00000000c0025d34       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025e1e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025e20       0x38 hw/diskphys/satapi.32
                0x00000000c0025e20                vtable for SATAPI
 .rodata        0x00000000c0025e58       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0025e7e        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0025e80       0x2c hw/intctrl/apic.32
                0x00000000c0025e80                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025eac       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025ec7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025ec8       0x30 hw/timer/apictimer.32
                0x00000000c0025ec8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025ef8       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025f15        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025f18       0x30 hw/timer/pit.32
                0x00000000c0025f18                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025f48      0xa5d
 *(.data)
 .data          0x00000000c0025f48        0x0 crti.32
 .data          0x00000000c0025f48        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025f48                __dso_handle
 .data          0x00000000c0025f4c        0x0 acpica/utclib.32
 .data          0x00000000c0025f4c        0x0 krnl/malloc.32
 .data          0x00000000c0025f4c        0x0 libk/ctype.32
 .data          0x00000000c0025f4c        0x0 libk/string.32
 .data          0x00000000c0025f4c        0x0 arch/i386/cc.32
 .data          0x00000000c0025f4c        0x0 fs/fat/diskio.32
 .data          0x00000000c0025f4c        0x0 fs/fat/ff.32
 .data          0x00000000c0025f4c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025f4c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025f4c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0025f4c        0x0 dbg/kconsole.32
 *fill*         0x00000000c0025f4c       0x14 
 .data          0x00000000c0025f60       0x28 dbg/usban.32
                0x00000000c0025f60                KiUsbanTypeMismatchTypes
 .data          0x00000000c0025f88        0x0 fs/symlink.32
 .data          0x00000000c0025f88        0x0 fs/vfs.32
 .data          0x00000000c0025f88        0x0 hal/bus.32
 .data          0x00000000c0025f88        0x0 hal/buzzer.32
 .data          0x00000000c0025f88        0x0 hal/clock.32
 .data          0x00000000c0025f88        0x0 hal/device.32
 .data          0x00000000c0025f88        0x0 hal/diskctrl.32
 .data          0x00000000c0025f88        0x0 hal/diskphys.32
 .data          0x00000000c0025f88        0x0 hal/fpu.32
 .data          0x00000000c0025f88        0x0 hal/intctrl.32
 .data          0x00000000c0025f88        0x0 hal/keybrd.32
 .data          0x00000000c0025f88        0x0 hal/logidisk.32
 .data          0x00000000c0025f88        0x0 hal/mouse.32
 .data          0x00000000c0025f88        0x0 hal/nic.32
 .data          0x00000000c0025f88        0x0 hal/partition.32
 .data          0x00000000c0025f88        0x0 hal/serial.32
 .data          0x00000000c0025f88        0x0 hal/timer.32
 .data          0x00000000c0025f88        0x0 hal/vcache.32
 .data          0x00000000c0025f88        0x0 hal/video.32
 .data          0x00000000c0025f88       0x10 hw/acpi.32
                0x00000000c0025f88                legacyIRQRemaps
 .data          0x00000000c0025f98        0x0 krnl/assert.32
 .data          0x00000000c0025f98        0x0 krnl/atexit.32
 .data          0x00000000c0025f98        0x0 krnl/bootmsg.32
 .data          0x00000000c0025f98        0x4 krnl/c++.32
                0x00000000c0025f98                __stack_chk_guard
 .data          0x00000000c0025f9c        0x0 krnl/cdefs.32
 *fill*         0x00000000c0025f9c        0x4 
 .data          0x00000000c0025fa0      0x100 krnl/cm.32
                0x00000000c0025fa0                CmComponents
 .data          0x00000000c00260a0        0x0 krnl/compat.32
 .data          0x00000000c00260a0        0x0 krnl/computer.32
 .data          0x00000000c00260a0      0x400 krnl/crc32.32
                0x00000000c00260a0                KiPolyLookupCRC32
 .data          0x00000000c00264a0       0x4d krnl/env.32
                0x00000000c00264a0                defaultSysEnv
 .data          0x00000000c00264ed        0x0 krnl/fault.32
 .data          0x00000000c00264ed        0x0 krnl/gdt.32
 .data          0x00000000c00264ed        0x0 krnl/idle.32
 .data          0x00000000c00264ed        0x0 krnl/idt.32
 .data          0x00000000c00264ed        0x0 krnl/inlines.32
 .data          0x00000000c00264ed        0x0 krnl/intlformat.32
 .data          0x00000000c00264ed        0x0 krnl/intops.32
 *fill*         0x00000000c00264ed        0x3 
 .data          0x00000000c00264f0        0x4 krnl/kheap.32
 .data          0x00000000c00264f4        0x0 krnl/mailbox.32
 .data          0x00000000c00264f4        0x0 krnl/main.32
 .data          0x00000000c00264f4        0x0 krnl/mutex.32
 .data          0x00000000c00264f4        0x0 krnl/panic.32
 .data          0x00000000c00264f4        0x4 krnl/physmgr.32
                0x00000000c00264f4                Phys::bitmap
 .data          0x00000000c00264f8        0x0 krnl/pipe.32
 .data          0x00000000c00264f8        0x0 krnl/powctrl.32
 .data          0x00000000c00264f8        0x0 krnl/random.32
 .data          0x00000000c00264f8        0x0 krnl/resolve.32
 .data          0x00000000c00264f8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00264f8        0x8 
 .data          0x00000000c0026500       0x4c krnl/signal.32
                0x00000000c0026500                KiDefaultSignalHandlers
 *fill*         0x00000000c002654c       0x14 
 .data          0x00000000c0026560      0x10c krnl/syscalls.32
                0x00000000c0026560                systemCallHandlers
 *fill*         0x00000000c002666c       0x14 
 .data          0x00000000c0026680       0x60 krnl/terminal.32
                0x00000000c0026680                VgaText::hiddenOut
                0x00000000c00266a0                ansiToVGAMappings
 .data          0x00000000c00266e0        0x0 krnl/tss.32
 .data          0x00000000c00266e0        0x4 krnl/unixfile.32
                0x00000000c00266e0                UnixFile::nextFd
 .data          0x00000000c00266e4       0x15 krnl/virtmgr.32
                0x00000000c00266e4                Virt::pageAllocPtr
                0x00000000c00266e8                Virt::bitmap
                0x00000000c00266ec                Virt::swapfileSectorsPerPage
                0x00000000c00266f0                Virt::swapfileLength
                0x00000000c00266f4                Virt::swapfileSector
                0x00000000c00266f8                Virt::swapfileDrive
 .data          0x00000000c00266f9        0x0 sys/alarm.32
 .data          0x00000000c00266f9        0x0 sys/eject.32
 .data          0x00000000c00266f9        0x0 sys/exit.32
 .data          0x00000000c00266f9        0x0 sys/getcwd.32
 .data          0x00000000c00266f9        0x0 sys/getpid.32
 .data          0x00000000c00266f9        0x0 sys/getramdata.32
 .data          0x00000000c00266f9        0x0 sys/getvgaptr.32
 .data          0x00000000c00266f9        0x0 sys/kill.32
 .data          0x00000000c00266f9        0x0 sys/loaddll.32
 .data          0x00000000c00266f9        0x0 sys/pause.32
 .data          0x00000000c00266f9        0x0 sys/read.32
 .data          0x00000000c00266f9        0x0 sys/registersignal.32
 .data          0x00000000c00266f9        0x0 sys/registry.32
 .data          0x00000000c00266f9        0x0 sys/sbrk.32
 .data          0x00000000c00266f9        0x0 sys/setcwd.32
 .data          0x00000000c00266f9        0x0 sys/settime.32
 .data          0x00000000c00266f9        0x0 sys/symlink.32
 .data          0x00000000c00266f9        0x0 sys/timezone.32
 .data          0x00000000c00266f9        0x0 sys/truncate.32
 .data          0x00000000c00266f9        0x0 sys/write.32
 .data          0x00000000c00266f9        0x0 sys/wsbe.32
 .data          0x00000000c00266f9        0x0 sys/yield.32
 .data          0x00000000c00266f9        0x0 thr/alarm.32
 .data          0x00000000c00266f9        0x0 thr/elf.32
 .data          0x00000000c00266f9        0x0 thr/exec.32
 *fill*         0x00000000c00266f9        0x3 
 .data          0x00000000c00266fc        0x4 thr/prcssthr.32
                0x00000000c00266fc                Thr::nextPID
 .data          0x00000000c0026700        0x0 vm86/vm8086.32
 .data          0x00000000c0026700      0x2a4 arch/i386/hal.32
                0x00000000c0026700                exceptionNames
                0x00000000c00269a0                lastCode
 .data          0x00000000c00269a4        0x0 arch/i386/intctrl.32
 .data          0x00000000c00269a4        0x0 arch/i386/pic.32
 .data          0x00000000c00269a4        0x0 arch/i386/rtc.32
 .data          0x00000000c00269a4        0x0 arch/i386/vga.32
 .data          0x00000000c00269a4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00269a4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00269a4        0x1 fs/iso9660/vfslink.32
                0x00000000c00269a4                recentDriveletter
 .data          0x00000000c00269a5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00269a5        0x0 hal/sound/sndport.32
 .data          0x00000000c00269a5        0x0 hw/bus/isa.32
 .data          0x00000000c00269a5        0x0 hw/bus/pci.32
 .data          0x00000000c00269a5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00269a5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00269a5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00269a5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00269a5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00269a5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00269a5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00269a5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00269a5        0x0 hw/timer/pit.32
 .data          0x00000000c00269a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00269a5        0x0 crtn.32
 .data          0x00000000c00269a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00269a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00269a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00269a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00269a8        0x0
 .got           0x00000000c00269a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00269a8        0x0
 .got.plt       0x00000000c00269a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00269a8        0x0
 .igot.plt      0x00000000c00269a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00269a8        0x0
 .tm_clone_table
                0x00000000c00269a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00269a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00269a5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00269a5        0x3 
 .eh_frame      0x00000000c00269a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00269a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00269a8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026a00       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026a40       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026aac       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/alarm.32
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/pause.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 .bss           0x00000000c002e254        0x0 thr/alarm.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
