Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f42a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6c1 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cca                Krnl::firstTask()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006e08                Computer::Computer()
                0x00000000c0006eb8                Computer::setBootMessage(char const*)
                0x00000000c0006eba                Computer::detectFeatures()
                0x00000000c00070e0                Computer::displayFeatures()
                0x00000000c00070e2                Computer::rdmsr(unsigned int)
                0x00000000c000710e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000714a                Computer::shutdown()
                0x00000000c0007162                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071ce                Computer::open(int, int, void*)
                0x00000000c00072a2                Computer::disableNMI()
                0x00000000c00072b2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072d6                Computer::handleNMI()
 *fill*         0x00000000c0007341        0x1 
 .text          0x00000000c0007342      0x1db core/gdt.32
                0x00000000c0007342                GDTEntry::setBase(unsigned int)
                0x00000000c000735e                GDTEntry::setLimit(unsigned int)
                0x00000000c000737c                GDT::GDT()
                0x00000000c000737c                GDT::GDT()
                0x00000000c0007392                GDT::addEntry(GDTEntry)
                0x00000000c00073b4                GDT::getNumberOfEntries()
                0x00000000c00073bc                GDT::flush()
                0x00000000c00073de                GDT::setup()
 .text          0x00000000c000751d       0x1d core/idle.32
                0x00000000c000751d                idleFunction(void*)
 *fill*         0x00000000c000753a        0x2 
 .text          0x00000000c000753c      0x46c core/idt.32
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c000753c                IDTEntry::IDTEntry(bool)
                0x00000000c00075b6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075f0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007628                IDT::flush()
                0x00000000c0007642                IDT::setup()
 .text          0x00000000c00079a8      0x185 core/kheap.32
                0x00000000c00079a8                sbrk
                0x00000000c0007a3c                mmap
                0x00000000c0007a52                munmap
                0x00000000c0007a68                liballoc_lock()
                0x00000000c0007a76                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007aa4                liballoc_free(void*, int)
                0x00000000c0007abf                realloc
                0x00000000c0007ad3                malloc
                0x00000000c0007ae3                free
                0x00000000c0007af3                rfree
                0x00000000c0007b03                calloc
 .text          0x00000000c0007b2d       0xc7 core/main.32
                0x00000000c0007b2d                KeEntryPoint
 .text          0x00000000c0007bf4      0x643 core/physmgr.32
                0x00000000c0007bf4                Phys::allocateDMA(unsigned long)
                0x00000000c0007ce2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d1d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d5d                Phys::getPageState(unsigned long)
                0x00000000c0007d79                Phys::freePage(unsigned long)
                0x00000000c0007de2                Phys::allocatePage()
                0x00000000c0007eb1                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f50                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008237        0x1 
 .text          0x00000000c0008238      0x26d core/pipe.32
                0x00000000c0008238                Pipe::isAtty()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c000823c                Pipe::~Pipe()
                0x00000000c0008260                Pipe::~Pipe()
                0x00000000c0008288                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000834c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000843e                Pipe::Pipe(int)
                0x00000000c000843e                Pipe::Pipe(int)
 *fill*         0x00000000c00084a5        0x1 
 .text          0x00000000c00084a6      0xa85 core/terminal.32
                0x00000000c00084a6                VgaText::isAtty()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008518                setTerminalScrollLock(bool)
                0x00000000c0008519                doTerminalCycle()
                0x00000000c000851a                addToTerminalCycle(VgaText*)
                0x00000000c000851b                scrollTerminalScrollLock(int)
                0x00000000c000851c                VgaText::updateTitle()
                0x00000000c000851e                VgaText::load()
                0x00000000c0008520                VgaText::updateCursor()
                0x00000000c0008536                VgaText::doANSI_SGR(int)
                0x00000000c00085aa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ba                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ca                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ea                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f6                VgaText::setTitleColour(VgaColour)
                0x00000000c0008602                VgaText::setTitle(char*)
                0x00000000c0008604                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008616                VgaText::scrollScreen()
                0x00000000c00086a8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008748                VgaText::getCursorX()
                0x00000000c0008750                VgaText::getCursorY()
                0x00000000c0008758                VgaText::setCursor(int, int)
                0x00000000c000876f                setActiveTerminal(VgaText*)
                0x00000000c00087ba                VgaText::clearScreen()
                0x00000000c0008808                VgaText::setCursorX(int)
                0x00000000c0008820                VgaText::setCursorY(int)
                0x00000000c0008838                VgaText::incrementCursor(bool)
                0x00000000c000888c                VgaText::decrementCursor(bool)
                0x00000000c00088ae                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000897e                VgaText::putchar(char)
                0x00000000c0008a66                VgaText::putx(unsigned int)
                0x00000000c0008aac                VgaText::puts(char const*)
                0x00000000c0008ad2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008c6c                VgaText::VgaText(char const*)
                0x00000000c0008dbc                VgaText::receiveKey(unsigned char)
                0x00000000c0008f2a                VgaText::doUpdate()
 *fill*         0x00000000c0008f2b        0x1 
 .text          0x00000000c0008f2c      0x1a1 core/tss.32
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f2c                TSS::TSS()
                0x00000000c0008f3c                TSS::setESP(unsigned long)
                0x00000000c0008f50                TSS::flush()
                0x00000000c0008f70                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090cd        0x1 
 .text          0x00000000c00090ce      0x4ca core/unixfile.32
                0x00000000c00090ce                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009124                ReservedFilename::isAtty()
                0x00000000c0009140                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919e                UnixFile::getFileDescriptor()
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c00091a6                UnixFile::UnixFile(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000935a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c000938c                UnixFile::~UnixFile()
                0x00000000c0009428                UnixFile::~UnixFile()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009450                ReservedFilename::~ReservedFilename()
                0x00000000c0009474                ReservedFilename::~ReservedFilename()
                0x00000000c000949b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0009598     0x1224 core/virtmgr.32
                0x00000000c0009598                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095d2                Virt::getPageState(unsigned long)
                0x00000000c00095f5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009711                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009734                Virt::swapIDToSector(unsigned long)
                0x00000000c000974a                Virt::allocateSwapfilePage()
                0x00000000c00097c9                Virt::virtualMemorySetup()
                0x00000000c000981a                Virt::setupPageSwapping(int)
                0x00000000c000988c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c000988e                VAS::VAS(VAS*)
                0x00000000c00098bc                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009909                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a46                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a6a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a84                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009ac6                VAS::VAS()
                0x00000000c0009b30                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b64                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009b90                VAS::~VAS()
                0x00000000c0009cfe                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::allocatePages(int, int)
                0x00000000c0009f08                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f62                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a052                VAS::VAS(bool)
                0x00000000c000a29c                VAS::evict(unsigned long)
                0x00000000c000a37a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x225 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a88c                Dbg::logc(char)
                0x00000000c000a8ac                Dbg::logs(char*)
                0x00000000c000a8cb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a8e9                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a90a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa40      0x2d4 dbg/usban.32
                0x00000000c000aa40                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaac                __ubsan_handle_type_mismatch_v1
                0x00000000c000ab88                __ubsan_handle_pointer_overflow
                0x00000000c000abb4                __ubsan_handle_out_of_bounds
                0x00000000c000abe0                __ubsan_handle_add_overflow
                0x00000000c000ac0c                __ubsan_handle_load_invalid_value
                0x00000000c000ac38                __ubsan_handle_divrem_overflow
                0x00000000c000ac64                __ubsan_handle_mul_overflow
                0x00000000c000ac90                __ubsan_handle_sub_overflow
                0x00000000c000acbc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ace8                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad14      0x601 fs/symlink.32
                0x00000000c000ad14                KiCreateSymlinkID()
                0x00000000c000ad7f                KiFlushSymlinkChanges()
                0x00000000c000ae52                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae57                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aec6                KiIsSymlinkRegistered(char const*)
                0x00000000c000af0d                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b122                KeCreateSymlink(char const*, char const*)
                0x00000000c000b25f                KeInitialiseSymlinks()
 *fill*         0x00000000c000b315        0x1 
 .text          0x00000000c000b316      0xcf4 fs/vfs.32
                0x00000000c000b316                File::read(unsigned long long, void*, int*)
                0x00000000c000b36e                File::write(unsigned long long, void*, int*)
                0x00000000c000b3c6                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b41e                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b44c                File::isAtty()
                0x00000000c000b450                Directory::isAtty()
                0x00000000c000b454                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b45a                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b460                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b466                File::~File()
                0x00000000c000b466                File::~File()
                0x00000000c000b48a                File::~File()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4b4                Directory::~Directory()
                0x00000000c000b4d8                Directory::~Directory()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b502                Filesystem::Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b526                Filesystem::~Filesystem()
                0x00000000c000b534                Filesystem::~Filesystem()
                0x00000000c000b558                Fs::getcwd(Process*, char*, int)
                0x00000000c000b582                Fs::initVFS()
                0x00000000c000b5ac                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b7a0                File::File(char const*, Process*)
                0x00000000c000b7a0                File::File(char const*, Process*)
                0x00000000c000b85c                File::open(FileOpenMode)
                0x00000000c000b8ba                File::close()
                0x00000000c000b91a                File::seek(unsigned long long)
                0x00000000c000b970                File::truncate(unsigned long long)
                0x00000000c000b9c6                File::tell(unsigned long long*)
                0x00000000c000ba16                File::rewind()
                0x00000000c000ba2a                File::unlink()
                0x00000000c000ba76                File::rename(char const*)
                0x00000000c000bac4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bb20                File::exists()
                0x00000000c000bb5e                File::stat(unsigned long long*, bool*)
                0x00000000c000bbbf                Fs::setcwd(Process*, char*)
                0x00000000c000bd1c                Directory::Directory(char const*, Process*)
                0x00000000c000bd1c                Directory::Directory(char const*, Process*)
                0x00000000c000bdd8                Directory::open()
                0x00000000c000be34                Directory::close()
                0x00000000c000be94                Directory::unlink()
                0x00000000c000bee0                Directory::rename(char const*)
                0x00000000c000bf2e                Directory::exists()
                0x00000000c000bf6c                Directory::read(dirent*)
                0x00000000c000bfb8                Directory::create()
                0x00000000c000c004                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c00a        0x2 
 .text          0x00000000c000c00c       0x86 hal/bus.32
                0x00000000c000c00c                Bus::Bus(char const*)
                0x00000000c000c00c                Bus::Bus(char const*)
                0x00000000c000c044                Bus::~Bus()
                0x00000000c000c044                Bus::~Bus()
                0x00000000c000c068                Bus::~Bus()
 .text          0x00000000c000c092       0x96 hal/buzzer.32
                0x00000000c000c092                beepThread(void*)
                0x00000000c000c0cf                Krnl::beep(int, int, bool)
 .text          0x00000000c000c128      0x465 hal/clock.32
                0x00000000c000c128                User::loadClockSettings(int)
                0x00000000c000c17a                Clock::Clock(char const*)
                0x00000000c000c17a                Clock::Clock(char const*)
                0x00000000c000c1b0                Clock::~Clock()
                0x00000000c000c1b0                Clock::~Clock()
                0x00000000c000c1d4                Clock::~Clock()
                0x00000000c000c1fe                Clock::timeInSecondsLocal()
                0x00000000c000c246                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c29f                datetimeToSeconds(datetime_t)
                0x00000000c000c3c4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c424                secondsToDatetime(unsigned long long)
                0x00000000c000c568                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c58d        0x1 
 .text          0x00000000c000c58e      0x464 hal/device.32
                0x00000000c000c58e                Device::hibernate()
                0x00000000c000c590                Device::wake()
                0x00000000c000c592                Device::detect()
                0x00000000c000c594                Device::disableLegacy()
                0x00000000c000c596                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c598                DriverlessDevice::close(int, int, void*)
                0x00000000c000c59c                DriverlessDevice::detect()
                0x00000000c000c59e                DriverlessDevice::open(int, int, void*)
                0x00000000c000c5b2                Device::~Device()
                0x00000000c000c5b2                Device::~Device()
                0x00000000c000c5c0                Device::~Device()
                0x00000000c000c5e8                Device::findAndLoadDriver()
                0x00000000c000c5f6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c61c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c65c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c686                Device::getParent()
                0x00000000c000c692                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c6b0                Device::addChild(Device*)
                0x00000000c000c6f4                Device::removeAllChildren()
                0x00000000c000c73a                Device::hibernateAll()
                0x00000000c000c76a                Device::wakeAll()
                0x00000000c000c79a                Device::detectAll()
                0x00000000c000c7ca                Device::disableLegacyAll()
                0x00000000c000c7cc                Device::loadDriversForAll()
                0x00000000c000c7ce                Device::closeAll()
                0x00000000c000c804                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c83a                Device::setName(char const*)
                0x00000000c000c848                Device::Device(char const*)
                0x00000000c000c848                Device::Device(char const*)
                0x00000000c000c944                Device::getName()
                0x00000000c000c94e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c94e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c984                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c9c8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c9f2        0x2 
 .text          0x00000000c000c9f4       0x86 hal/diskctrl.32
                0x00000000c000c9f4                HardDiskController::HardDiskController(char const*)
                0x00000000c000c9f4                HardDiskController::HardDiskController(char const*)
                0x00000000c000ca2c                HardDiskController::~HardDiskController()
                0x00000000c000ca2c                HardDiskController::~HardDiskController()
                0x00000000c000ca50                HardDiskController::~HardDiskController()
 .text          0x00000000c000ca7a       0xe2 hal/diskphys.32
                0x00000000c000ca7a                PhysicalDisk::eject()
                0x00000000c000ca7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cae6                PhysicalDisk::startCache()
                0x00000000c000cb0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cb32                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cb5c        0x0 hal/fpu.32
 .text          0x00000000c000cb5c      0x360 hal/intctrl.32
                0x00000000c000cb5c                int_handler
                0x00000000c000cbe6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cc30                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cd73                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cda7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce1d                setupINTS()
                0x00000000c000ce7a                convertLegacyIRQNumber(int)
 .text          0x00000000c000cebc      0x8be hal/keybrd.32
                0x00000000c000cebc                startGUI(void*)
                0x00000000c000cf2a                startGUIVESA(void*)
                0x00000000c000cf98                sendKeyToTerminal(unsigned char)
                0x00000000c000d073                sendKeyboardToken(KeyboardToken)
                0x00000000c000d55d                clearInternalKeybuffer(VgaText*)
                0x00000000c000d592                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d6f0                Keyboard::Keyboard(char const*)
                0x00000000c000d6f0                Keyboard::Keyboard(char const*)
                0x00000000c000d72c                Keyboard::~Keyboard()
                0x00000000c000d72c                Keyboard::~Keyboard()
                0x00000000c000d750                Keyboard::~Keyboard()
 .text          0x00000000c000d77a      0x3f8 hal/logidisk.32
                0x00000000c000d77a                LogicalDisk::close(int, int, void*)
                0x00000000c000d77e                LogicalDisk::~LogicalDisk()
                0x00000000c000d77e                LogicalDisk::~LogicalDisk()
                0x00000000c000d7a2                LogicalDisk::~LogicalDisk()
                0x00000000c000d7cc                LogicalDisk::open(int, int, void*)
                0x00000000c000d7e0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d818                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d85e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d85e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d91e                LogicalDisk::assignDriveLetter()
                0x00000000c000d9d8                LogicalDisk::mount()
                0x00000000c000da20                LogicalDisk::unmount()
                0x00000000c000da30                LogicalDisk::eject()
                0x00000000c000da44                LogicalDisk::unassignDriveLetter()
                0x00000000c000da9a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000db06                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000db72        0x2 
 .text          0x00000000c000db74       0x86 hal/mouse.32
                0x00000000c000db74                Mouse::Mouse(char const*)
                0x00000000c000db74                Mouse::Mouse(char const*)
                0x00000000c000dbac                Mouse::~Mouse()
                0x00000000c000dbac                Mouse::~Mouse()
                0x00000000c000dbd0                Mouse::~Mouse()
 .text          0x00000000c000dbfa       0x90 hal/nic.32
                0x00000000c000dbfa                NIC::getMAC()
                0x00000000c000dc00                NIC::write(int, unsigned char*, int*)
                0x00000000c000dc06                NIC::NIC(char const*)
                0x00000000c000dc06                NIC::NIC(char const*)
                0x00000000c000dc3c                NIC::~NIC()
                0x00000000c000dc3c                NIC::~NIC()
                0x00000000c000dc60                NIC::~NIC()
 .text          0x00000000c000dc8a      0x33b hal/partition.32
                0x00000000c000dc8a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dd32                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000dfc5        0x3 
 .text          0x00000000c000dfc8       0x86 hal/serial.32
                0x00000000c000dfc8                Serial::Serial(char const*)
                0x00000000c000dfc8                Serial::Serial(char const*)
                0x00000000c000e000                Serial::~Serial()
                0x00000000c000e000                Serial::~Serial()
                0x00000000c000e024                Serial::~Serial()
 *fill*         0x00000000c000e04e        0x2 
 .text          0x00000000c000e050      0x234 hal/timer.32
                0x00000000c000e050                Timer::Timer(char const*)
                0x00000000c000e050                Timer::Timer(char const*)
                0x00000000c000e088                Timer::~Timer()
                0x00000000c000e088                Timer::~Timer()
                0x00000000c000e0ac                Timer::~Timer()
                0x00000000c000e0d6                Timer::read()
                0x00000000c000e0e1                setupTimer(int)
                0x00000000c000e11c                timerHandler(unsigned int)
 .text          0x00000000c000e284      0x450 hal/vcache.32
                0x00000000c000e284                VCache::VCache(PhysicalDisk*)
                0x00000000c000e284                VCache::VCache(PhysicalDisk*)
                0x00000000c000e3f4                VCache::invalidateReadBuffer()
                0x00000000c000e404                VCache::writeWriteBuffer()
                0x00000000c000e450                VCache::~VCache()
                0x00000000c000e450                VCache::~VCache()
                0x00000000c000e4a8                VCache::~VCache()
                0x00000000c000e4d0                VCache::write(unsigned long long, int, void*)
                0x00000000c000e5ca                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e6d4      0x4d9 hal/video.32
                0x00000000c000e6d4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e720                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e790                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e820                Video::clearScreen(unsigned int)
                0x00000000c000e854                Video::putpixel(int, int, unsigned int)
                0x00000000c000e862                Video::readPixelApprox(int, int)
                0x00000000c000e876                Video::Video(char const*)
                0x00000000c000e876                Video::Video(char const*)
                0x00000000c000e8ac                Video::~Video()
                0x00000000c000e8ac                Video::~Video()
                0x00000000c000e8d0                Video::~Video()
                0x00000000c000e8fa                Video::isMonochrome()
                0x00000000c000e906                Video::getWidth()
                0x00000000c000e912                Video::getHeight()
                0x00000000c000e91e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e9da                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eb42                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ebad        0x3 
 .text          0x00000000c000ebb0     0x12d2 hw/acpi.32
                0x00000000c000ebb0                ACPI::close(int, int, void*)
                0x00000000c000ec64                findRSDP()
                0x00000000c000ecfc                loadACPITables(unsigned char*)
                0x00000000c000ef68                findRSDT(unsigned char*)
                0x00000000c000f0c0                findDataTable(unsigned char*, char*)
                0x00000000c000f140                scanMADT()
                0x00000000c000f5f8                ACPI::ACPI()
                0x00000000c000f5f8                ACPI::ACPI()
                0x00000000c000f64c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f748                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f814                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f81c                ACPI::detectPCI()
                0x00000000c000fa3c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fa84                ACPI::sleep()
                0x00000000c000faa0                ACPI::open(int, int, void*)
 .text          0x00000000c000fe82      0xbc5 hw/cpu.32
                0x00000000c000fe82                CPU::close(int, int, void*)
                0x00000000c000fe86                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fea2                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000feba                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ff2e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ffb2                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ffe0                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001000e                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001003c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001006a                CPU::CPU()
                0x00000000c001006a                CPU::CPU()
                0x00000000c00100f8                CPU::displayFeatures()
                0x00000000c00100fa                CPU::detectFeatures()
                0x00000000c00107ce                CPU::setupSMEP()
                0x00000000c00107da                CPU::setupUMIP()
                0x00000000c00107e4                CPU::setupTSC()
                0x00000000c00107ee                CPU::setupLargePages()
                0x00000000c00107f8                CPU::setupPAT()
                0x00000000c0010834                CPU::setupMTRR()
                0x00000000c0010836                CPU::setupGlobalPages()
                0x00000000c0010840                CPU::allowUsermodeDataAccess()
                0x00000000c0010852                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010864                CPU::setupSMAP()
                0x00000000c0010872                CPU::setupFeatures()
                0x00000000c001093e                CPU::open(int, int, void*)
 .text          0x00000000c0010a47       0xb6 krnl/atexit.32
                0x00000000c0010a47                KeInitialiseAtexit()
                0x00000000c0010a66                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010a9a                KeExecuteAtexit()
 .text          0x00000000c0010afd       0xdf krnl/bootmsg.32
                0x00000000c0010afd                KeDisplaySplashScreen()
                0x00000000c0010b79                KeSetBootMessage(char const*)
 .text          0x00000000c0010bdc       0x1d krnl/compat.32
                0x00000000c0010bdc                Krnl::handlePowerButton()
                0x00000000c0010bec                Krnl::handleSleepButton()
 *fill*         0x00000000c0010bf9        0x1 
 .text          0x00000000c0010bfa      0x5bf krnl/env.32
                0x00000000c0010bfa                EnvVarContainer::getEnv(char const*)
                0x00000000c0010c38                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010cfa                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010cfc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010f20                EnvVarContainer::__loadSystem()
                0x00000000c0010f3a                EnvVarContainer::__loadUser()
                0x00000000c0010f3c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f3c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f5e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f5e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f8e                KeGetEnv(Process*, char const*)
                0x00000000c0010ff3                KeSetEnvSystem(char const*, char const*)
                0x00000000c001100d                KeSetEnvUser(char const*, char const*)
                0x00000000c001102c                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001103f                KeDeleteEnvSystem(char const*)
                0x00000000c0011040                KeDeleteEnvUser(char const*)
                0x00000000c0011041                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011042                KeNewProcessEnv(Process*)
                0x00000000c0011064                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00110b0                KeLoadSystemEnv()
                0x00000000c00110de                KeLoadUserEnv()
                0x00000000c0011104                KeFlushEnv()
                0x00000000c0011105                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011125                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00111b9       0x94 krnl/inlines.32
                0x00000000c00111b9                CPU::current()
                0x00000000c00111c5                operator new(unsigned long)
                0x00000000c00111ca                operator delete(void*)
                0x00000000c00111cf                disableIRQs()
                0x00000000c00111d1                enableIRQs()
                0x00000000c00111d3                lockScheduler()
                0x00000000c00111db                unlockScheduler()
                0x00000000c00111ea                lockStuff()
                0x00000000c00111f8                unlockStuff()
                0x00000000c0011232                Virt::getAKernelVAS()
                0x00000000c0011238                __not_memcpy
 .text          0x00000000c001124d        0xc krnl/panic.32
                0x00000000c001124d                KePanic(char const*)
 .text          0x00000000c0011259      0x142 krnl/powctrl.32
                0x00000000c0011259                KePowerThread(void*)
                0x00000000c0011287                KeChangePowerSettings(PowerSettings)
                0x00000000c001129d                KeUserIOReceived()
                0x00000000c00112a8                KeHandlePowerButton()
                0x00000000c00112dd                KeHandleSleepButton()
                0x00000000c0011312                KeSetupPowerManager()
 .text          0x00000000c001139b       0x9b krnl/random.32
                0x00000000c001139b                KeRand()
                0x00000000c00113db                KeSeedRand(unsigned int)
                0x00000000c0011404                KeInitRand()
 *fill*         0x00000000c0011436        0x2 
 .text          0x00000000c0011438      0x1bc krnl/resolve.32
                0x00000000c0011438                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00115f4      0x31f krnl/signal.32
                0x00000000c00115f4                KiSigKill(int)
                0x00000000c0011608                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011609                KiDefaultSignalHandlerPause(int)
                0x00000000c0011635                KiDefaultSignalHandlerResume(int)
                0x00000000c0011661                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011666                KeInitSignals()
                0x00000000c00116b5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00116eb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011768                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001185f                KiCheckSignalZ
                0x00000000c00118a1                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00118dc                KiFinishSignalZ
 .text          0x00000000c0011913      0xc76 krnl/syscalls.32
                0x00000000c0011913                SysSeekDir(regs*)
                0x00000000c0011918                SysTellDir(regs*)
                0x00000000c001191d                SysVerify(regs*)
                0x00000000c0011927                SysGetArgc(regs*)
                0x00000000c001193b                SysTTYName(regs*)
                0x00000000c0011943                SysFormatDisk(regs*)
                0x00000000c00119aa                SysSetDiskVolumeLabel(regs*)
                0x00000000c00119fe                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011a57                SysShutdown(regs*)
                0x00000000c0011ae4                SysRealpath(regs*)
                0x00000000c0011b33                SysReadDir(regs*)
                0x00000000c0011bb3                SysIsATTY(regs*)
                0x00000000c0011c0d                SysSeek(regs*)
                0x00000000c0011c67                SysTell(regs*)
                0x00000000c0011cd4                SysSize(regs*)
                0x00000000c0011d47                SysSizeFromFilename(regs*)
                0x00000000c0011df1                SysClose(regs*)
                0x00000000c0011e51                SysOpenDir(regs*)
                0x00000000c0011ece                SysMakeDir(regs*)
                0x00000000c0011f3c                SysCloseDir(regs*)
                0x00000000c0011f8b                SysWait(regs*)
                0x00000000c0011fac                SysNotImpl(regs*)
                0x00000000c0011fc7                SysPanic(regs*)
                0x00000000c0011fe2                SysRmdir(regs*)
                0x00000000c0012040                SysUnlink(regs*)
                0x00000000c001209e                SysGetArgv(regs*)
                0x00000000c00120eb                SysUSleep(regs*)
                0x00000000c0012114                SysSpawn(regs*)
                0x00000000c0012185                SysGetEnv(regs*)
                0x00000000c001223a                SysSetFatAttrib(regs*)
                0x00000000c00122a3                SysPipe(regs*)
                0x00000000c00122e8                SysGetUnixTime(regs*)
                0x00000000c00122fc                string_ends_with(char const*, char const*)
                0x00000000c0012347                SysOpen(regs*)
                0x00000000c0012547                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012589        0x3 
 .text          0x00000000c001258c      0x159 net/ethernet.32
                0x00000000c001258c                KeSwitchEndian16(unsigned short)
                0x00000000c00125b0                KeSwitchEndian32(unsigned int)
                0x00000000c00125e0                EthernetCRC32(unsigned char*, int)
                0x00000000c0012684                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00126e5      0xd51 reg/cm.32
                0x00000000c00126e5                CmOpen(char const*)
                0x00000000c0012803                CmClose(Reghive_Tag*)
                0x00000000c0012819                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012855                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00128cc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c001290b                CmGetNext(Reghive_Tag*, int)
                0x00000000c001293d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012979                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c00129a1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00129c2                CmExpand(Reghive_Tag*, int)
                0x00000000c0012a3d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012ac3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012bb7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012cef                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012d50                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012d80                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012db7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012de1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012e21                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012ec5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012ef3                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013090                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00130dd                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013157                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00131aa                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001326e                zStrtok(char*, char const*)
                0x00000000c00132e0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013361                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013404                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013436      0x545 reg/registry.32
                0x00000000c0013436                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00135c2                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013717                Reg::getLine(char*, char*, char*)
                0x00000000c001374e                Reg::readInt(char*, char*, int*)
                0x00000000c001383c                Reg::readString(char*, char*, char*, int)
                0x00000000c00138bd                Reg::readBool(char*, char*, bool*)
                0x00000000c00138e2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001390e                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001393a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001397b       0x36 sys/eject.32
                0x00000000c001397b                SysEject(regs*)
 .text          0x00000000c00139b1       0x18 sys/exit.32
                0x00000000c00139b1                SysExit(regs*)
 .text          0x00000000c00139c9       0x1f sys/getcwd.32
                0x00000000c00139c9                SysGetCwd(regs*)
 .text          0x00000000c00139e8        0xc sys/getpid.32
                0x00000000c00139e8                SysGetPID(regs*)
 .text          0x00000000c00139f4       0x1a sys/getramdata.32
                0x00000000c00139f4                SysGetRAMData(regs*)
 .text          0x00000000c0013a0e       0x82 sys/getvgaptr.32
                0x00000000c0013a0e                SysGetVGAPtr(regs*)
 .text          0x00000000c0013a90       0xb9 sys/kill.32
                0x00000000c0013a90                SysKill(regs*)
 .text          0x00000000c0013b49       0xa8 sys/loaddll.32
                0x00000000c0013b49                SysLoadDLL(regs*)
 .text          0x00000000c0013bf1       0x68 sys/read.32
                0x00000000c0013bf1                SysRead(regs*)
 .text          0x00000000c0013c59       0x29 sys/registersignal.32
                0x00000000c0013c59                SysRegisterSignal(regs*)
 .text          0x00000000c0013c82      0x19c sys/registry.32
                0x00000000c0013c82                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013cf9                SysRegistryReadExtent(regs*)
                0x00000000c0013d41                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013d69                SysRegistryEnterDirectory(regs*)
                0x00000000c0013d91                SysRegistryGetNext(regs*)
                0x00000000c0013db9                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013df3                SysRegistryOpen(regs*)
                0x00000000c0013e07                SysRegistryClose(regs*)
 .text          0x00000000c0013e1e       0x55 sys/sbrk.32
                0x00000000c0013e1e                SysSbrk(regs*)
 .text          0x00000000c0013e73       0x1c sys/setcwd.32
                0x00000000c0013e73                SysSetCwd(regs*)
 .text          0x00000000c0013e8f       0x96 sys/settime.32
                0x00000000c0013e8f                SysSetTime(regs*)
 .text          0x00000000c0013f25       0x4a sys/timezone.32
                0x00000000c0013f25                SysTimezone(regs*)
 .text          0x00000000c0013f6f       0xfc sys/truncate.32
                0x00000000c0013f6f                SysTruncate(regs*)
 .text          0x00000000c001406b       0x68 sys/write.32
                0x00000000c001406b                SysWrite(regs*)
 .text          0x00000000c00140d3       0x62 sys/wsbe.32
                0x00000000c00140d3                SysWsbe(regs*)
 .text          0x00000000c0014135       0x25 sys/yield.32
                0x00000000c0014135                SysYield(regs*)
 .text          0x00000000c001415a     0x1203 thr/elf.32
                0x00000000c001415a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00143e1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014600                Thr::runtimeReferenceHelper()
                0x00000000c0014613                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014662                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014920                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015061                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015093                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00150ca                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00150e4                Thr::loadDLL(char const*, bool)
                0x00000000c0015324                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001535d        0x3 
 .text          0x00000000c0015360     0x13b5 thr/prcssthr.32
                0x00000000c0015360                userModeEntryPoint(void*)
                0x00000000c0015388                changeTSS
                0x00000000c00153b8                switchToThread(ThreadControlBlock*)
                0x00000000c0015468                Process::addArgs(char**)
                0x00000000c00154d4                Process::Process(char const*, Process*, char**)
                0x00000000c00154d4                Process::Process(char const*, Process*, char**)
                0x00000000c00156e0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00156e0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00158b4                taskStartupFunction
                0x00000000c00158c0                Semaphore::Semaphore(int)
                0x00000000c00158c0                Semaphore::Semaphore(int)
                0x00000000c00158f0                Mutex::Mutex()
                0x00000000c00158f0                Mutex::Mutex()
                0x00000000c0015904                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015a0c                Process::createUserThread()
                0x00000000c0015a2c                setupMultitasking(void (*)())
                0x00000000c0015b50                schedule()
                0x00000000c0015be4                Semaphore::tryAcquire()
                0x00000000c0015ca4                Semaphore::assertLocked(char const*)
                0x00000000c0015d28                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015d50                blockTask(TaskState)
                0x00000000c0015d88                waitTask(int, int*, int)
                0x00000000c0015dcc                milliTenthSleepUntil(unsigned int)
                0x00000000c0015e6c                milliTenthSleep(unsigned int)
                0x00000000c0015e80                sleep(unsigned int)
                0x00000000c0015e90                Semaphore::acquire()
                0x00000000c0015f58                taskReturned
                0x00000000c0015f9c                Thr::processFromPID(int)
                0x00000000c0016048                unblockTask(ThreadControlBlock*)
                0x00000000c00160f4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00163c8                cleanerTaskFunction(void*)
                0x00000000c00164d0                terminateTask(int)
                0x00000000c00165bc                Thr::terminateFromIRQ(int)
                0x00000000c00165cc                Semaphore::release()
 .text          0x00000000c0016715      0xc31 vm86/vm8086.32
                0x00000000c0016715                Vm::inbv(unsigned short)
                0x00000000c0016728                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001675e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001676e                Vm::getSegment(unsigned int)
                0x00000000c0016776                Vm::getOffset(unsigned int)
                0x00000000c001677b                Vm::mainloop2()
                0x00000000c00167b5                Vm::mainVm8086Loop(void*)
                0x00000000c00167c5                Vm::mainloop3(unsigned long)
                0x00000000c00167eb                Vm::initialise8086()
                0x00000000c001682e                Vm::finish8086()
                0x00000000c001688f                Vm::getOutput8086(unsigned char*)
                0x00000000c00168b4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001696d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016b0b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016ba8                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016bb9                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016bcb                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016bdc                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016bf1                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016c07                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016c1c                Vm::faultHandler(regs*)
 .text          0x00000000c0017346      0xaf0 arch/i386/hal.32
                0x00000000c0017346                noCopro(unsigned long)
                0x00000000c0017347                nmiHandler(regs*, void*)
                0x00000000c0017360                doubleFault(regs*, void*)
                0x00000000c0017379                displayDebugInfo(regs*)
                0x00000000c00176fe                HalSystemIdle()
                0x00000000c001777a                displayProgramFault(char const*)
                0x00000000c00177c6                gpFault(regs*, void*)
                0x00000000c001782d                pgFault(regs*, void*)
                0x00000000c00178b6                otherISRHandler(regs*, void*)
                0x00000000c00178ea                opcodeFault(regs*, void*)
                0x00000000c001796d                i386SaveCoprocessor(void*)
                0x00000000c0017981                i386LoadCoprocessor(void*)
                0x00000000c0017995                x87EmulHandler(regs*, void*)
                0x00000000c0017a32                HalInitialiseCoprocessor()
                0x00000000c0017ae0                HalPanic(char const*)
                0x00000000c0017bf4                HalQueryPerformanceCounter()
                0x00000000c0017c0f                HalInitialise()
                0x00000000c0017dc5                HalMakeBeep(int)
                0x00000000c0017dff                HalGetRand()
                0x00000000c0017e02                HalEndOfInterrupt(int)
                0x00000000c0017e33                HalRestart()
                0x00000000c0017e34                HalShutdown()
                0x00000000c0017e35                HalSleep()
 *fill*         0x00000000c0017e36        0x2 
 .text          0x00000000c0017e38      0x2dc arch/i386/pic.32
                0x00000000c0017e38                picIoWait()
                0x00000000c0017e40                picDisable()
                0x00000000c0017e74                picGetIRQReg(int)
                0x00000000c0017ef0                picOpen()
                0x00000000c0018074                picEOI(int)
 .text          0x00000000c0018114      0x66e arch/i386/rtc.32
                0x00000000c0018114                RTC::open(int, int, void*)
                0x00000000c0018118                RTC::close(int, int, void*)
                0x00000000c001811c                RTC::timeInSecondsUTC()
                0x00000000c001812e                RTC::timeInDatetimeUTC()
                0x00000000c0018154                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018192                RTC::~RTC()
                0x00000000c0018192                RTC::~RTC()
                0x00000000c00181b6                RTC::~RTC()
                0x00000000c00181e0                RTC::get_update_in_progress_flag()
                0x00000000c00181fa                RTC::completeRTCRefresh()
                0x00000000c00184d4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018682                rtcIRQHandler(regs*, void*)
                0x00000000c00186c8                RTC::RTC()
                0x00000000c00186c8                RTC::RTC()
 *fill*         0x00000000c0018782        0x2 
 .text          0x00000000c0018784      0x1f4 arch/i386/vga.32
                0x00000000c0018784                HalConsoleScroll(int, int)
                0x00000000c001888c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00188f0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018978     0x14f3 fs/fat/vfslink.32
                0x00000000c0018978                FAT::getName()
                0x00000000c0018980                FAT::tell(void*, unsigned long long*)
                0x00000000c00189bc                FAT::stat(void*, unsigned long long*)
                0x00000000c00189f8                FAT::~FAT()
                0x00000000c00189f8                FAT::~FAT()
                0x00000000c0018a1c                FAT::~FAT()
                0x00000000c0018a44                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ae8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018bc8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018dac                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018fc8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019188                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00192f8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019358                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00193b8                FAT::close(void*)
                0x00000000c001940c                FAT::closeDir(void*)
                0x00000000c0019460                FAT::truncate(void*, unsigned long long)
                0x00000000c00194cc                FAT::seek(void*, unsigned long long)
                0x00000000c0019524                fatWrapperReadDisk
                0x00000000c0019564                fatWrapperWriteDisk
                0x00000000c00195a4                fatWrapperIoctl
                0x00000000c00196c4                FAT::FAT()
                0x00000000c00196c4                FAT::FAT()
                0x00000000c001971c                FAT::fixFilepath(char*)
                0x00000000c001975c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00198d0                FAT::openDir(char const*, void**)
                0x00000000c0019980                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019a78                FAT::unlink(char const*)
                0x00000000c0019af8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019cb0                FAT::rename(char const*, char const*)
                0x00000000c0019d7c                FAT::mkdir(char const*)
                0x00000000c0019dfc                FAT::exists(char const*)
 *fill*         0x00000000c0019e6b        0x1 
 .text          0x00000000c0019e6c       0x94 fs/iso9660/helper.32
                0x00000000c0019e6c                isoReadDiscSectorHelper
                0x00000000c0019ec8                iso_kprintf
                0x00000000c0019ee4                iso_kprintfd
 .text          0x00000000c0019f00      0x71a fs/iso9660/vfslink.32
                0x00000000c0019f00                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f06                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019f0c                ISO9660::getName()
                0x00000000c0019f12                ISO9660::closeDir(void*)
                0x00000000c0019f1c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019f22                ISO9660::unlink(char const*)
                0x00000000c0019f28                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019f2e                ISO9660::rename(char const*, char const*)
                0x00000000c0019f34                ISO9660::mkdir(char const*)
                0x00000000c0019f3a                ISO9660::~ISO9660()
                0x00000000c0019f3a                ISO9660::~ISO9660()
                0x00000000c0019f5e                ISO9660::~ISO9660()
                0x00000000c0019f86                ISO9660::exists(char const*)
                0x00000000c0019f9a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a080                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a0c8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a10a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a148                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a19a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a2dc                ISO9660::close(void*)
                0x00000000c001a30c                ISO9660::openDir(char const*, void**)
                0x00000000c001a3e6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a501                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a580                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a5f2                ISO9660::ISO9660()
                0x00000000c001a5f2                ISO9660::ISO9660()
 .text          0x00000000c001a61a      0x26c hal/sound/sndcard.32
                0x00000000c001a61a                SoundCard::beginPlayback()
                0x00000000c001a628                SoundCard::stopPlayback()
                0x00000000c001a636                SoundCard::SoundCard(char const*)
                0x00000000c001a636                SoundCard::SoundCard(char const*)
                0x00000000c001a6d4                SoundCard::~SoundCard()
                0x00000000c001a6d4                SoundCard::~SoundCard()
                0x00000000c001a6f8                SoundCard::~SoundCard()
                0x00000000c001a722                SoundCard::configureRates(int, int, int)
                0x00000000c001a752                SoundCard::getSamples16(int, short*)
                0x00000000c001a7ae                SoundCard::getSamples32(int, int*)
                0x00000000c001a834                SoundCard::addChannel(SoundPort*)
                0x00000000c001a872                SoundCard::removeChannel(int)
 *fill*         0x00000000c001a886        0x2 
 .text          0x00000000c001a888      0x393 hal/sound/sndport.32
                0x00000000c001a888                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a888                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a914                SoundPort::~SoundPort()
                0x00000000c001a914                SoundPort::~SoundPort()
                0x00000000c001a948                SoundPort::unpause()
                0x00000000c001a954                SoundPort::pause()
                0x00000000c001a960                SoundPort::getBufferUsed()
                0x00000000c001a968                SoundPort::getBufferSize()
                0x00000000c001a970                SoundPort::buffer16(short*, int)
                0x00000000c001a9fc                SoundPort::buffer32(int*, int)
                0x00000000c001aa88                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ab58                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ac1b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ac1b        0x1 
 .text          0x00000000c001ac1c      0xbc5 hw/bus/pci.32
                0x00000000c001ac1c                PCI::open(int, int, void*)
                0x00000000c001ac3a                PCI::close(int, int, void*)
                0x00000000c001ac3e                PCI::PCI()
                0x00000000c001ac3e                PCI::PCI()
                0x00000000c001acd6                PCI::readBAR8(unsigned int, int)
                0x00000000c001acf2                PCI::readBAR16(unsigned int, int)
                0x00000000c001ad10                PCI::readBAR32(unsigned int, int)
                0x00000000c001ad2c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ad4c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ad6e                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ad8e                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae04                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001aeae                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001aed2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001aefa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001af44                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001af6c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af90                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001afb4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001afdc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b040                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b126                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b3f0                PCI::checkBus(unsigned char)
                0x00000000c001b414                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b59a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b716                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b788                PCI::detect()
 *fill*         0x00000000c001b7e1        0x1 
 .text          0x00000000c001b7e2      0xb96 hw/diskctrl/ide.32
                0x00000000c001b7e2                IDE::close(int, int, void*)
                0x00000000c001b7e6                IDE::IDE()
                0x00000000c001b7e6                IDE::IDE()
                0x00000000c001b81a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b82c                selectDrive(unsigned char, unsigned char)
                0x00000000c001b82e                IDE::getBase(unsigned char)
                0x00000000c001b840                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b900                IDE::read(unsigned char, unsigned char)
                0x00000000c001b9b4                IDE::waitInterrupt(unsigned char)
                0x00000000c001ba16                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ba32                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ba4e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ba98                IDE::open(int, int, void*)
                0x00000000c001bed2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bfa2                IDE::detect()
                0x00000000c001c26a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c324                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c378      0x32c hw/diskctrl/satabus.32
                0x00000000c001c378                SATABus::close(int, int, void*)
                0x00000000c001c37c                SATABus::detect()
                0x00000000c001c37e                SATABus::SATABus()
                0x00000000c001c37e                SATABus::SATABus()
                0x00000000c001c404                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c436                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c47e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c49e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c4c8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c5da                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c684                SATABus::open(int, int, void*)
 .text          0x00000000c001c6a4      0x96d hw/diskphys/ata.32
                0x00000000c001c6a4                ATA::close(int, int, void*)
                0x00000000c001c6c8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c6ca                ATA::ATA()
                0x00000000c001c6ca                ATA::ATA()
                0x00000000c001c6f8                ATA::flush(bool)
                0x00000000c001c746                ATA::readyForCommand()
                0x00000000c001c792                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cb56                ATA::detectCHS()
                0x00000000c001cb80                ATA::open(int, int, void*)
                0x00000000c001cc4c                combineCharAndColour(char, unsigned char)
                0x00000000c001cc5d                combineColours(unsigned char, unsigned char)
                0x00000000c001cc6a                ATA::read(unsigned long long, int, void*)
                0x00000000c001ce40                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d011        0x1 
 .text          0x00000000c001d012      0x612 hw/diskphys/atapi.32
                0x00000000c001d012                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d018                ATAPI::close(int, int, void*)
                0x00000000c001d03c                ATAPI::ATAPI()
                0x00000000c001d03c                ATAPI::ATAPI()
                0x00000000c001d06a                ATAPI::readyForCommand()
                0x00000000c001d0bc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d37c                ATAPI::diskRemoved()
                0x00000000c001d3b6                ATAPI::eject()
                0x00000000c001d3fe                ATAPI::diskInserted()
                0x00000000c001d40a                ATAPI::detectMedia()
                0x00000000c001d4ca                ATAPI::open(int, int, void*)
                0x00000000c001d5aa                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d624      0x7ff hw/diskphys/sata.32
                0x00000000c001d624                SATA::close(int, int, void*)
                0x00000000c001d648                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d64a                SATA::open(int, int, void*)
                0x00000000c001d6f4                SATA::SATA()
                0x00000000c001d6f4                SATA::SATA()
                0x00000000c001d722                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d974                SATA::read(unsigned long long, int, void*)
                0x00000000c001dbc4                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001de23        0x1 
 .text          0x00000000c001de24      0x5d8 hw/diskphys/satapi.32
                0x00000000c001de24                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001de2a                SATAPI::close(int, int, void*)
                0x00000000c001de4e                SATAPI::SATAPI()
                0x00000000c001de4e                SATAPI::SATAPI()
                0x00000000c001de7c                SATAPI::diskRemoved()
                0x00000000c001de7e                SATAPI::diskInserted()
                0x00000000c001de9a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e180                SATAPI::eject()
                0x00000000c001e1bc                SATAPI::detectMedia()
                0x00000000c001e212                SATAPI::open(int, int, void*)
                0x00000000c001e312                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e3fc      0x45b hw/intctrl/apic.32
                0x00000000c001e3fc                IOAPIC::close(int, int, void*)
                0x00000000c001e402                apicGetBase()
                0x00000000c001e448                IOAPIC::IOAPIC()
                0x00000000c001e448                IOAPIC::IOAPIC()
                0x00000000c001e470                apicOpen()
                0x00000000c001e5ec                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e61e                IOAPIC::read(int)
                0x00000000c001e646                IOAPIC::open(int, int, void*)
                0x00000000c001e72c                IOAPIC::write(int, int)
                0x00000000c001e758                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e857        0x1 
 .text          0x00000000c001e858       0xf0 hw/timer/apictimer.32
                0x00000000c001e858                APICTimer::close(int, int, void*)
                0x00000000c001e860                apicTimerHandler(regs*, void*)
                0x00000000c001e888                APICTimer::open(int, int, void*)
                0x00000000c001e8f8                APICTimer::write(int)
                0x00000000c001e920                APICTimer::APICTimer()
                0x00000000c001e920                APICTimer::APICTimer()
 .text          0x00000000c001e948      0x1ad hw/timer/pit.32
                0x00000000c001e948                PIT::write(int)
                0x00000000c001e9cc                pitHandler(regs*, void*)
                0x00000000c001e9f4                PIT::open(int, int, void*)
                0x00000000c001ea44                PIT::close(int, int, void*)
                0x00000000c001ea74                PIT::PIT()
                0x00000000c001ea74                PIT::PIT()
 *fill*         0x00000000c001eaf5        0xb 
 .text          0x00000000c001eb00       0x83 arch/i386/avx.32
                0x00000000c001eb00                avxDetect
                0x00000000c001eb2a                avxSave
                0x00000000c001eb3b                avxLoad
                0x00000000c001eb4c                avxInit
                0x00000000c001eb6e                avxClose
                0x00000000c001eb6f                wouldSheSayYes
 *fill*         0x00000000c001eb83        0xd 
 .text          0x00000000c001eb90      0x2ec arch/i386/interrupt.32
                0x00000000c001eb90                isr0
                0x00000000c001eba0                isr1
                0x00000000c001ebaa                isr2
                0x00000000c001ebb4                isr3
                0x00000000c001ebbe                isr4
                0x00000000c001ebc8                isr5
                0x00000000c001ebd2                isr6
                0x00000000c001ebdc                isr7
                0x00000000c001ebe6                isr8
                0x00000000c001ebee                isr9
                0x00000000c001ebf8                isr10
                0x00000000c001ec00                isr11
                0x00000000c001ec08                isr12
                0x00000000c001ec10                isr13
                0x00000000c001ec2a                isr14
                0x00000000c001ec32                isr15
                0x00000000c001ec3c                isr16
                0x00000000c001ec46                isr17
                0x00000000c001ec50                isr18
                0x00000000c001ec5a                irq3
                0x00000000c001ec64                irq4
                0x00000000c001ec6e                irq5
                0x00000000c001ec78                irq6
                0x00000000c001ec82                irq7
                0x00000000c001ec8c                irq8
                0x00000000c001ec96                irq9
                0x00000000c001eca0                irq10
                0x00000000c001ecaa                irq11
                0x00000000c001ecb4                irq12
                0x00000000c001ecbe                irq13
                0x00000000c001ecc8                irq14
                0x00000000c001ecd2                irq15
                0x00000000c001ecdc                irq1
                0x00000000c001ece3                irq2
                0x00000000c001ecea                isr96
                0x00000000c001ecf1                irq0
                0x00000000c001ecf6                int_common_stub
                0x00000000c001ed28                syscall_common_stub
                0x00000000c001ee2c                irq16
                0x00000000c001ee36                irq17
                0x00000000c001ee40                irq18
                0x00000000c001ee4a                irq19
                0x00000000c001ee54                irq20
                0x00000000c001ee5e                irq21
                0x00000000c001ee68                irq22
                0x00000000c001ee72                irq23
 *fill*         0x00000000c001ee7c        0x4 
 .text          0x00000000c001ee80       0x10 arch/i386/rdrand.32
                0x00000000c001ee80                i386GetRDRAND
 .text          0x00000000c001ee90       0x39 arch/i386/sse.32
                0x00000000c001ee90                absolutelyNoChanceInHell
                0x00000000c001ee90                sseDetect
                0x00000000c001eea8                sseSave
                0x00000000c001eeb0                sseLoad
                0x00000000c001eeb8                sseInit
                0x00000000c001eec8                sseClose
 *fill*         0x00000000c001eec9        0x7 
 .text          0x00000000c001eed0       0x49 arch/i386/x87.32
                0x00000000c001eed6                x87Detect
                0x00000000c001eef1                x87Save
                0x00000000c001eef8                x87Load
                0x00000000c001eeff                x87Init
                0x00000000c001ef18                x87Close
 *fill*         0x00000000c001ef19        0x3 
 .text          0x00000000c001ef1c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ef41        0x0 crtn.32
 *fill*         0x00000000c001ef41        0x3 
 .text          0x00000000c001ef44      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ef44                __divdi3
 *fill*         0x00000000c001f08f        0x1 
 .text          0x00000000c001f090      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f090                __moddi3
 *fill*         0x00000000c001f20e        0x2 
 .text          0x00000000c001f210       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f210                __udivdi3
 *fill*         0x00000000c001f30f        0x1 
 .text          0x00000000c001f310      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f310                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f430        0x0
 .iplt          0x00000000c001f430        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f42a        0xf
 .init          0x00000000c001f42a        0x3 crti.32
                0x00000000c001f42a                _init
 .init          0x00000000c001f42d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f432        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f437        0x2 crtn.32

.fini           0x00000000c001f439        0xa
 .fini          0x00000000c001f439        0x3 crti.32
                0x00000000c001f439                _fini
 .fini          0x00000000c001f43c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f441        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f444       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f444       0x23 core/computer.32
                0x00000000c001f444                Computer::~Computer()
                0x00000000c001f444                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f468       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f468       0x2a core/computer.32
                0x00000000c001f468                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f492       0x21
 .text._Z10idleCommonv
                0x00000000c001f492       0x21 core/idle.32
                0x00000000c001f492                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4b4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f4b4        0x2 core/unixfile.32
                0x00000000c001f4b4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f4b4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4b6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f4b6       0x42 core/unixfile.32
                0x00000000c001f4b6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f4b6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f4f8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f4f8       0xd3 core/unixfile.32
                0x00000000c001f4f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f5cc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f5cc        0x7 core/unixfile.32
                0x00000000c001f5cc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f5d4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f5d4       0xa1 core/unixfile.32
                0x00000000c001f5d4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f676        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f676        0x8 core/unixfile.32
                0x00000000c001f676                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f67e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f67e       0x1a hal/device.32
                0x00000000c001f67e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f67e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f698       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f698       0x2a hal/device.32
                0x00000000c001f698                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f6c2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f6c2       0xdc hal/device.32
                0x00000000c001f6c2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f79e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f79e       0x42 hal/device.32
                0x00000000c001f79e                LinkedList<Device>::LinkedList()
                0x00000000c001f79e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f7e0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f7e0       0x1c hal/timer.32
                0x00000000c001f7e0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f7fc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f7fc        0x7 hal/timer.32
                0x00000000c001f7fc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f804       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f804       0xbc hal/timer.32
                0x00000000c001f804                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f8c0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f8c0       0xda hal/timer.32
                0x00000000c001f8c0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f99c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f99c       0x23 hw/acpi.32
                0x00000000c001f99c                ACPI::~ACPI()
                0x00000000c001f99c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f9c0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f9c0       0x2a hw/acpi.32
                0x00000000c001f9c0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f9ec        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f9ec        0x2 hw/acpi.32
                0x00000000c001f9ec                LinkedList<Device>::~LinkedList()
                0x00000000c001f9ec                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f9f0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f9f0       0x1c hw/acpi.32
                0x00000000c001f9f0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa0c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fa0c        0x7 hw/acpi.32
                0x00000000c001fa0c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa14       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fa14       0xb8 hw/acpi.32
                0x00000000c001fa14                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001facc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001facc       0x23 hw/cpu.32
                0x00000000c001facc                CPU::~CPU()
                0x00000000c001facc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001faf0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001faf0       0x2a hw/cpu.32
                0x00000000c001faf0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb1c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb1c        0x8 sys/kill.32
                0x00000000c001fb1c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb24        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fb24        0x2 thr/prcssthr.32
                0x00000000c001fb24                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fb24                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb28       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fb28       0x49 thr/prcssthr.32
                0x00000000c001fb28                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fb28                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb74       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fb74       0x42 thr/prcssthr.32
                0x00000000c001fb74                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fb74                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fbb6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fbb6       0x23 hw/bus/pci.32
                0x00000000c001fbb6                PCI::~PCI()
                0x00000000c001fbb6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fbda       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fbda       0x2a hw/bus/pci.32
                0x00000000c001fbda                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fc04       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fc04       0x23 hw/diskctrl/ide.32
                0x00000000c001fc04                IDE::~IDE()
                0x00000000c001fc04                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fc28       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fc28       0x2a hw/diskctrl/ide.32
                0x00000000c001fc28                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fc52       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fc52       0x23 hw/diskctrl/satabus.32
                0x00000000c001fc52                SATABus::~SATABus()
                0x00000000c001fc52                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fc76       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fc76       0x2a hw/diskctrl/satabus.32
                0x00000000c001fc76                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fca0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fca0       0x23 hw/diskphys/ata.32
                0x00000000c001fca0                ATA::~ATA()
                0x00000000c001fca0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fcc4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fcc4       0x2a hw/diskphys/ata.32
                0x00000000c001fcc4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fcee       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fcee       0x23 hw/diskphys/atapi.32
                0x00000000c001fcee                ATAPI::~ATAPI()
                0x00000000c001fcee                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fd12       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fd12       0x2a hw/diskphys/atapi.32
                0x00000000c001fd12                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fd3c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fd3c       0x23 hw/diskphys/sata.32
                0x00000000c001fd3c                SATA::~SATA()
                0x00000000c001fd3c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fd60       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fd60       0x2a hw/diskphys/sata.32
                0x00000000c001fd60                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fd8a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fd8a       0x23 hw/diskphys/satapi.32
                0x00000000c001fd8a                SATAPI::~SATAPI()
                0x00000000c001fd8a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fdae       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fdae       0x2a hw/diskphys/satapi.32
                0x00000000c001fdae                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fdd8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fdd8       0x23 hw/intctrl/apic.32
                0x00000000c001fdd8                IOAPIC::~IOAPIC()
                0x00000000c001fdd8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fdfc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fdfc       0x2a hw/intctrl/apic.32
                0x00000000c001fdfc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fe28       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fe28       0x23 hw/timer/apictimer.32
                0x00000000c001fe28                APICTimer::~APICTimer()
                0x00000000c001fe28                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fe4c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fe4c       0x2a hw/timer/apictimer.32
                0x00000000c001fe4c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fe78       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fe78       0x23 hw/timer/pit.32
                0x00000000c001fe78                PIT::~PIT()
                0x00000000c001fe78                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fe9c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fe9c       0x2a hw/timer/pit.32
                0x00000000c001fe9c                PIT::~PIT()

.rodata         0x00000000c001fec6     0x314a
                0x00000000c001fec6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fec6        0x2 
 .ctors         0x00000000c001fec8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fecc        0x4 core/unixfile.32
 .ctors         0x00000000c001fed0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fed4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fed8                end_ctors = .
                0x00000000c001fed8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fed8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fedc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fedc                __DTOR_END__
                0x00000000c001fee0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fee0        0x0 
 .rodata        0x00000000c001fee0      0x101 acpica/utclib.32
                0x00000000c001fee0                AcpiGbl_Ctypes
 *fill*         0x00000000c001ffe1        0x3 
 .rodata        0x00000000c001ffe4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001fffc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020046       0x1a 
 .rodata        0x00000000c0020060       0xed fs/fat/ff.32
 *fill*         0x00000000c002014d       0x13 
 .rodata        0x00000000c0020160      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020560       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00205cf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c00206e4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002074c       0x2c core/computer.32
                0x00000000c002074c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020778       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00207a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00207b4       0x17 core/main.32
 *fill*         0x00000000c00207cb        0x1 
 .rodata.str1.4
                0x00000000c00207cc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020871       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00208c9       0x39 core/pipe.32
 *fill*         0x00000000c0020902        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020904       0x1c core/pipe.32
                0x00000000c0020904                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020920       0x2b core/terminal.32
 *fill*         0x00000000c002094b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002094c       0x1c core/terminal.32
                0x00000000c002094c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020968       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002098a       0x15 core/unixfile.32
 *fill*         0x00000000c002099f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00209a0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00209eb        0x8 core/unixfile.32
 *fill*         0x00000000c00209f3        0x1 
 .rodata.str1.4
                0x00000000c00209f4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020a14       0x1c core/unixfile.32
                0x00000000c0020a14                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020a30       0x1c core/unixfile.32
                0x00000000c0020a30                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020a4c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020ce0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e06       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020e39        0x3 
 .rodata        0x00000000c0020e3c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020f8c      0x169 dbg/usban.32
 *fill*         0x00000000c00210f5        0x3 
 .rodata.str1.4
                0x00000000c00210f8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002122f      0x120 fs/symlink.32
                                        0x12c (size before relaxing)
 .rodata.str1.1
                0x00000000c002134f      0x120 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c002134f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021350       0x6c fs/vfs.32
                0x00000000c0021350                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00213bc       0x1c fs/vfs.32
                0x00000000c00213bc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00213d8       0x1c fs/vfs.32
                0x00000000c00213d8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00213f4       0x2c hal/bus.32
                0x00000000c00213f4                vtable for Bus
 .rodata.str1.1
                0x00000000c0021420       0x1e hal/clock.32
 *fill*         0x00000000c002143e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021440       0x3c hal/clock.32
                0x00000000c0021440                vtable for Clock
 *fill*         0x00000000c002147c        0x4 
 .rodata        0x00000000c0021480       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00214b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021508       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021508       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021508       0x2c hal/device.32
                0x00000000c0021508                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021534       0x2c hal/device.32
                0x00000000c0021534                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021560       0x2c hal/diskctrl.32
                0x00000000c0021560                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002158c       0x38 hal/diskphys.32
                0x00000000c002158c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00215c4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021602        0x2 
 .rodata.str1.4
                0x00000000c0021604       0x5d hal/intctrl.32
 .rodata        0x00000000c0021661       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00216b4       0x34 hal/keybrd.32
                0x00000000c00216b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00216e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002172c       0x2c hal/logidisk.32
                0x00000000c002172c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021758       0x2c hal/mouse.32
                0x00000000c0021758                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021784       0x34 hal/nic.32
                0x00000000c0021784                vtable for NIC
 .rodata.str1.1
                0x00000000c00217b8        0xb hal/partition.32
 *fill*         0x00000000c00217c3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00217c4       0x44 hal/serial.32
                0x00000000c00217c4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021808       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021808        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021808       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021808       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021808       0x30 hal/timer.32
                0x00000000c0021808                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021838       0x10 hal/vcache.32
                0x00000000c0021838                vtable for VCache
 .rodata.str1.1
                0x00000000c0021848       0x93 hal/video.32
 *fill*         0x00000000c00218db        0x1 
 .rodata._ZTV5Video
                0x00000000c00218dc       0x4c hal/video.32
                0x00000000c00218dc                vtable for Video
 .rodata.str1.4
                0x00000000c0021928       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00219c3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021b19       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021b19        0x8 hw/acpi.32
 *fill*         0x00000000c0021b19        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021b1c       0x2c hw/acpi.32
                0x00000000c0021b1c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021b48      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021cc3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021cc4       0x2c hw/cpu.32
                0x00000000c0021cc4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021cf0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021d30       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021d6c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021dfd       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021ec6       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f0e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021f39       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021faf       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ff4        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021ffe       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002201f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00220b5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022109       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022135      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022301       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022358      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022468       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022468       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022468       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022468        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022468       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002252a        0x2 
 .rodata        0x00000000c002252c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002255c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00226fb        0x1 
 .rodata.str1.4
                0x00000000c00226fc       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002276f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022784       0x3c arch/i386/rtc.32
                0x00000000c0022784                vtable for RTC
 .rodata.str1.1
                0x00000000c00227c0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022801        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022804       0x6c fs/fat/vfslink.32
                0x00000000c0022804                vtable for FAT
 .rodata.str1.1
                0x00000000c0022870       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022870      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00229a8       0x6c fs/iso9660/vfslink.32
                0x00000000c00229a8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022a14       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022a58       0x34 hal/sound/sndcard.32
                0x00000000c0022a58                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022a8c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022acb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022b03       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022ba4       0x2c hw/bus/pci.32
                0x00000000c0022ba4                vtable for PCI
 .rodata.str1.1
                0x00000000c0022bd0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022c57        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022c58       0x2c hw/diskctrl/ide.32
                0x00000000c0022c58                vtable for IDE
 .rodata.str1.4
                0x00000000c0022c84       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022ca8       0x2c hw/diskctrl/satabus.32
                0x00000000c0022ca8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022cd4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022ce6        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022ce8       0x38 hw/diskphys/ata.32
                0x00000000c0022ce8                vtable for ATA
 .rodata.str1.1
                0x00000000c0022d20        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022d2d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022d30       0x38 hw/diskphys/atapi.32
                0x00000000c0022d30                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022d68       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022de4       0x38 hw/diskphys/sata.32
                0x00000000c0022de4                vtable for SATA
 .rodata.str1.1
                0x00000000c0022e1c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022f06        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022f08       0x38 hw/diskphys/satapi.32
                0x00000000c0022f08                vtable for SATAPI
 .rodata        0x00000000c0022f40        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022f48       0x2c hw/intctrl/apic.32
                0x00000000c0022f48                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022f74       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022f8f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022f90       0x30 hw/timer/apictimer.32
                0x00000000c0022f90                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022fc0       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022fdd        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022fe0       0x30 hw/timer/pit.32
                0x00000000c0022fe0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023010      0x7b1
 *(.data)
 .data          0x00000000c0023010        0x0 crti.32
 .data          0x00000000c0023010        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023010                __dso_handle
 .data          0x00000000c0023014        0x0 acpica/utclib.32
 .data          0x00000000c0023014        0x0 core/malloc.32
 .data          0x00000000c0023014        0x0 libk/ctype.32
 .data          0x00000000c0023014        0x0 libk/string.32
 .data          0x00000000c0023014        0x0 fs/fat/diskio.32
 .data          0x00000000c0023014        0x0 fs/fat/ff.32
 .data          0x00000000c0023014        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023014        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023014        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023014        0x0 core/computer.32
 .data          0x00000000c0023014        0x0 core/gdt.32
 .data          0x00000000c0023014        0x0 core/idle.32
 .data          0x00000000c0023014        0x0 core/idt.32
 .data          0x00000000c0023014        0x4 core/kheap.32
 .data          0x00000000c0023018        0x0 core/main.32
 .data          0x00000000c0023018        0x4 core/physmgr.32
                0x00000000c0023018                Phys::bitmap
 .data          0x00000000c002301c        0x0 core/pipe.32
 *fill*         0x00000000c002301c        0x4 
 .data          0x00000000c0023020       0x60 core/terminal.32
                0x00000000c0023020                VgaText::hiddenOut
                0x00000000c0023040                ansiToVGAMappings
 .data          0x00000000c0023080        0x0 core/tss.32
 .data          0x00000000c0023080        0x4 core/unixfile.32
                0x00000000c0023080                UnixFile::nextFd
 .data          0x00000000c0023084       0x15 core/virtmgr.32
                0x00000000c0023084                Virt::pageAllocPtr
                0x00000000c0023088                Virt::bitmap
                0x00000000c002308c                Virt::swapfileSectorsPerPage
                0x00000000c0023090                Virt::swapfileLength
                0x00000000c0023094                Virt::swapfileSector
                0x00000000c0023098                Virt::swapfileDrive
 *fill*         0x00000000c0023099        0x3 
 .data          0x00000000c002309c        0x4 coreobjs/c++.32
                0x00000000c002309c                __stack_chk_guard
 .data          0x00000000c00230a0        0x0 dbg/kconsole.32
 .data          0x00000000c00230a0       0x28 dbg/usban.32
                0x00000000c00230a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00230c8        0x0 fs/symlink.32
 .data          0x00000000c00230c8        0x0 fs/vfs.32
 .data          0x00000000c00230c8        0x0 hal/bus.32
 .data          0x00000000c00230c8        0x0 hal/buzzer.32
 .data          0x00000000c00230c8        0x0 hal/clock.32
 .data          0x00000000c00230c8        0x0 hal/device.32
 .data          0x00000000c00230c8        0x0 hal/diskctrl.32
 .data          0x00000000c00230c8        0x0 hal/diskphys.32
 .data          0x00000000c00230c8        0x0 hal/fpu.32
 .data          0x00000000c00230c8        0x0 hal/intctrl.32
 .data          0x00000000c00230c8        0x0 hal/keybrd.32
 .data          0x00000000c00230c8        0x0 hal/logidisk.32
 .data          0x00000000c00230c8        0x0 hal/mouse.32
 .data          0x00000000c00230c8        0x0 hal/nic.32
 .data          0x00000000c00230c8        0x0 hal/partition.32
 .data          0x00000000c00230c8        0x0 hal/serial.32
 .data          0x00000000c00230c8        0x0 hal/timer.32
 .data          0x00000000c00230c8        0x0 hal/vcache.32
 .data          0x00000000c00230c8        0x0 hal/video.32
 .data          0x00000000c00230c8       0x10 hw/acpi.32
                0x00000000c00230c8                legacyIRQRemaps
 .data          0x00000000c00230d8        0x4 hw/cpu.32
                0x00000000c00230d8                lastCode
 .data          0x00000000c00230dc        0x0 krnl/atexit.32
 *fill*         0x00000000c00230dc        0x4 
 .data          0x00000000c00230e0      0x142 krnl/bootmsg.32
                0x00000000c00230e0                KiSplashScreen
 .data          0x00000000c0023222        0x0 krnl/compat.32
 *fill*         0x00000000c0023222       0x1e 
 .data          0x00000000c0023240       0x4d krnl/env.32
                0x00000000c0023240                defaultSysEnv
 .data          0x00000000c002328d        0x0 krnl/inlines.32
 .data          0x00000000c002328d        0x0 krnl/panic.32
 .data          0x00000000c002328d        0x0 krnl/powctrl.32
 .data          0x00000000c002328d        0x0 krnl/random.32
 .data          0x00000000c002328d        0x0 krnl/resolve.32
 *fill*         0x00000000c002328d       0x13 
 .data          0x00000000c00232a0       0x4c krnl/signal.32
                0x00000000c00232a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00232ec       0x14 
 .data          0x00000000c0023300       0xf0 krnl/syscalls.32
                0x00000000c0023300                systemCallHandlers
 .data          0x00000000c00233f0        0x0 net/ethernet.32
 *fill*         0x00000000c00233f0       0x10 
 .data          0x00000000c0023400      0x100 reg/cm.32
                0x00000000c0023400                CmComponents
 .data          0x00000000c0023500        0x0 reg/registry.32
 .data          0x00000000c0023500        0x0 sys/eject.32
 .data          0x00000000c0023500        0x0 sys/exit.32
 .data          0x00000000c0023500        0x0 sys/getcwd.32
 .data          0x00000000c0023500        0x0 sys/getpid.32
 .data          0x00000000c0023500        0x0 sys/getramdata.32
 .data          0x00000000c0023500        0x0 sys/getvgaptr.32
 .data          0x00000000c0023500        0x0 sys/kill.32
 .data          0x00000000c0023500        0x0 sys/loaddll.32
 .data          0x00000000c0023500        0x0 sys/read.32
 .data          0x00000000c0023500        0x0 sys/registersignal.32
 .data          0x00000000c0023500        0x0 sys/registry.32
 .data          0x00000000c0023500        0x0 sys/sbrk.32
 .data          0x00000000c0023500        0x0 sys/setcwd.32
 .data          0x00000000c0023500        0x0 sys/settime.32
 .data          0x00000000c0023500        0x0 sys/timezone.32
 .data          0x00000000c0023500        0x0 sys/truncate.32
 .data          0x00000000c0023500        0x0 sys/write.32
 .data          0x00000000c0023500        0x0 sys/wsbe.32
 .data          0x00000000c0023500        0x0 sys/yield.32
 .data          0x00000000c0023500        0x0 thr/elf.32
 .data          0x00000000c0023500        0x4 thr/prcssthr.32
                0x00000000c0023500                Thr::nextPID
 .data          0x00000000c0023504        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023504       0x1c 
 .data          0x00000000c0023520      0x2a0 arch/i386/hal.32
                0x00000000c0023520                exceptionNames
 .data          0x00000000c00237c0        0x0 arch/i386/pic.32
 .data          0x00000000c00237c0        0x0 arch/i386/rtc.32
 .data          0x00000000c00237c0        0x0 arch/i386/vga.32
 .data          0x00000000c00237c0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00237c0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00237c0        0x1 fs/iso9660/vfslink.32
                0x00000000c00237c0                recentDriveletter
 .data          0x00000000c00237c1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00237c1        0x0 hal/sound/sndport.32
 .data          0x00000000c00237c1        0x0 hw/bus/isa.32
 .data          0x00000000c00237c1        0x0 hw/bus/pci.32
 .data          0x00000000c00237c1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00237c1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00237c1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00237c1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00237c1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00237c1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00237c1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00237c1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00237c1        0x0 hw/timer/pit.32
 .data          0x00000000c00237c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00237c1        0x0 crtn.32
 .data          0x00000000c00237c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00237c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00237c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00237c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00237c4        0x0
 .got           0x00000000c00237c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00237c4        0x0
 .got.plt       0x00000000c00237c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00237c4        0x0
 .igot.plt      0x00000000c00237c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00237c4        0x0
 .tm_clone_table
                0x00000000c00237c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00237c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00237c1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00237c1        0x3 
 .eh_frame      0x00000000c00237c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00237c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00237c4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002381c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002385c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00238c8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
