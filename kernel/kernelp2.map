Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa1a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6f3 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cfd                Krnl::firstTask()
                0x00000000c0006e3a                Computer::Computer()
                0x00000000c0006e3a                Computer::Computer()
                0x00000000c0006eea                Computer::setBootMessage(char const*)
                0x00000000c0006eec                Computer::detectFeatures()
                0x00000000c0007112                Computer::displayFeatures()
                0x00000000c0007114                Computer::rdmsr(unsigned int)
                0x00000000c0007140                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000717c                Computer::shutdown()
                0x00000000c0007194                Computer::restart()
                0x00000000c00071ac                Computer::sleep()
                0x00000000c00071c0                Computer::nmiEnabled()
                0x00000000c00071cc                Computer::readCMOS(unsigned char)
                0x00000000c00071e8                Computer::enableNMI(bool)
                0x00000000c0007200                Computer::open(int, int, void*)
                0x00000000c00072d4                Computer::disableNMI()
                0x00000000c00072e4                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007308                Computer::handleNMI()
 *fill*         0x00000000c0007373        0x1 
 .text          0x00000000c0007374      0x1db core/gdt.32
                0x00000000c0007374                GDTEntry::setBase(unsigned int)
                0x00000000c0007390                GDTEntry::setLimit(unsigned int)
                0x00000000c00073ae                GDT::GDT()
                0x00000000c00073ae                GDT::GDT()
                0x00000000c00073c4                GDT::addEntry(GDTEntry)
                0x00000000c00073e6                GDT::getNumberOfEntries()
                0x00000000c00073ee                GDT::flush()
                0x00000000c0007410                GDT::setup()
 .text          0x00000000c000754f       0x1d core/idle.32
                0x00000000c000754f                idleFunction(void*)
 .text          0x00000000c000756c      0x46c core/idt.32
                0x00000000c000756c                IDTEntry::IDTEntry(bool)
                0x00000000c000756c                IDTEntry::IDTEntry(bool)
                0x00000000c00075e6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075fc                IDT::IDT()
                0x00000000c00075fc                IDT::IDT()
                0x00000000c00075fe                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007606                IDT::addEntry(IDTEntry, int)
                0x00000000c0007620                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007658                IDT::flush()
                0x00000000c0007672                IDT::setup()
 .text          0x00000000c00079d8      0x185 core/kheap.32
                0x00000000c00079d8                sbrk
                0x00000000c0007a6c                mmap
                0x00000000c0007a82                munmap
                0x00000000c0007a98                liballoc_lock()
                0x00000000c0007aa6                liballoc_unlock()
                0x00000000c0007abc                liballoc_alloc(int)
                0x00000000c0007ad4                liballoc_free(void*, int)
                0x00000000c0007aef                realloc
                0x00000000c0007b03                malloc
                0x00000000c0007b13                free
                0x00000000c0007b23                rfree
                0x00000000c0007b33                calloc
 .text          0x00000000c0007b5d       0xc7 core/main.32
                0x00000000c0007b5d                KeEntryPoint
 .text          0x00000000c0007c24      0x643 core/physmgr.32
                0x00000000c0007c24                Phys::allocateDMA(unsigned long)
                0x00000000c0007d12                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d4d                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d8d                Phys::getPageState(unsigned long)
                0x00000000c0007da9                Phys::freePage(unsigned long)
                0x00000000c0007e12                Phys::allocatePage()
                0x00000000c0007ee1                Phys::allocateContiguousPages(int)
                0x00000000c0007f48                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f80                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008267        0x1 
 .text          0x00000000c0008268      0x26d core/pipe.32
                0x00000000c0008268                Pipe::isAtty()
                0x00000000c000826c                Pipe::~Pipe()
                0x00000000c000826c                Pipe::~Pipe()
                0x00000000c0008290                Pipe::~Pipe()
                0x00000000c00082b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000837c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000846e                Pipe::Pipe(int)
                0x00000000c000846e                Pipe::Pipe(int)
 *fill*         0x00000000c00084d5        0x1 
 .text          0x00000000c00084d6      0xa85 core/terminal.32
                0x00000000c00084d6                VgaText::isAtty()
                0x00000000c00084da                VgaText::~VgaText()
                0x00000000c00084da                VgaText::~VgaText()
                0x00000000c00084fe                VgaText::~VgaText()
                0x00000000c0008528                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008548                setTerminalScrollLock(bool)
                0x00000000c0008549                doTerminalCycle()
                0x00000000c000854a                addToTerminalCycle(VgaText*)
                0x00000000c000854b                scrollTerminalScrollLock(int)
                0x00000000c000854c                VgaText::updateTitle()
                0x00000000c000854e                VgaText::load()
                0x00000000c0008550                VgaText::updateCursor()
                0x00000000c0008566                VgaText::doANSI_SGR(int)
                0x00000000c00085da                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085ea                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085fa                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000861a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008626                VgaText::setTitleColour(VgaColour)
                0x00000000c0008632                VgaText::setTitle(char*)
                0x00000000c0008634                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008646                VgaText::scrollScreen()
                0x00000000c00086d8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086e8                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008778                VgaText::getCursorX()
                0x00000000c0008780                VgaText::getCursorY()
                0x00000000c0008788                VgaText::setCursor(int, int)
                0x00000000c000879f                setActiveTerminal(VgaText*)
                0x00000000c00087ea                VgaText::clearScreen()
                0x00000000c0008838                VgaText::setCursorX(int)
                0x00000000c0008850                VgaText::setCursorY(int)
                0x00000000c0008868                VgaText::incrementCursor(bool)
                0x00000000c00088bc                VgaText::decrementCursor(bool)
                0x00000000c00088de                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00089ae                VgaText::putchar(char)
                0x00000000c0008a96                VgaText::putx(unsigned int)
                0x00000000c0008adc                VgaText::puts(char const*)
                0x00000000c0008b02                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b4e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c9c                VgaText::VgaText(char const*)
                0x00000000c0008c9c                VgaText::VgaText(char const*)
                0x00000000c0008dec                VgaText::receiveKey(unsigned char)
                0x00000000c0008f5a                VgaText::doUpdate()
 *fill*         0x00000000c0008f5b        0x1 
 .text          0x00000000c0008f5c      0x1a1 core/tss.32
                0x00000000c0008f5c                TSS::TSS()
                0x00000000c0008f5c                TSS::TSS()
                0x00000000c0008f6c                TSS::setESP(unsigned long)
                0x00000000c0008f80                TSS::flush()
                0x00000000c0008fa0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090fd        0x1 
 .text          0x00000000c00090fe      0x4ca core/unixfile.32
                0x00000000c00090fe                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009154                ReservedFilename::isAtty()
                0x00000000c0009170                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ce                UnixFile::getFileDescriptor()
                0x00000000c00091d6                UnixFile::UnixFile(int)
                0x00000000c00091d6                UnixFile::UnixFile(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c0009458                UnixFile::~UnixFile()
                0x00000000c0009480                ReservedFilename::~ReservedFilename()
                0x00000000c0009480                ReservedFilename::~ReservedFilename()
                0x00000000c00094a4                ReservedFilename::~ReservedFilename()
                0x00000000c00094cb                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095c8     0x1224 core/virtmgr.32
                0x00000000c00095c8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009602                Virt::getPageState(unsigned long)
                0x00000000c0009625                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009741                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009764                Virt::swapIDToSector(unsigned long)
                0x00000000c000977a                Virt::allocateSwapfilePage()
                0x00000000c00097f9                Virt::virtualMemorySetup()
                0x00000000c000984a                Virt::setupPageSwapping(int)
                0x00000000c00098bc                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098be                VAS::VAS(VAS*)
                0x00000000c00098ec                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000991a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009939                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a76                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a9a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ab4                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009af6                VAS::VAS()
                0x00000000c0009af6                VAS::VAS()
                0x00000000c0009b60                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b94                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bc0                VAS::~VAS()
                0x00000000c0009bc0                VAS::~VAS()
                0x00000000c0009d2e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e36                VAS::allocatePages(int, int)
                0x00000000c0009f38                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f92                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a082                VAS::VAS(bool)
                0x00000000c000a082                VAS::VAS(bool)
                0x00000000c000a2cc                VAS::evict(unsigned long)
                0x00000000c000a3aa                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a54e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5c2                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ee                VAS::scanForEviction()
                0x00000000c000a6f1                mapVASFirstTime
 .text          0x00000000c000a7ec       0x5f coreobjs/c++.32
                0x00000000c000a7ec                __cxa_atexit
                0x00000000c000a7ef                __cxa_finalize
                0x00000000c000a7f0                __stack_chk_fail
                0x00000000c000a826                __cxa_pure_virtual
                0x00000000c000a837                operator new[](unsigned long)
                0x00000000c000a83c                operator delete(void*, unsigned long)
                0x00000000c000a841                operator delete[](void*)
                0x00000000c000a846                operator delete[](void*, unsigned long)
 .text          0x00000000c000a84b      0x225 dbg/kconsole.32
                0x00000000c000a84b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8bc                Dbg::logc(char)
                0x00000000c000a8dc                Dbg::logs(char*)
                0x00000000c000a8fb                Dbg::logWriteInt(unsigned int)
                0x00000000c000a919                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a93a                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000aa70      0x2d4 dbg/usban.32
                0x00000000c000aa70                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aadc                __ubsan_handle_type_mismatch_v1
                0x00000000c000abb8                __ubsan_handle_pointer_overflow
                0x00000000c000abe4                __ubsan_handle_out_of_bounds
                0x00000000c000ac10                __ubsan_handle_add_overflow
                0x00000000c000ac3c                __ubsan_handle_load_invalid_value
                0x00000000c000ac68                __ubsan_handle_divrem_overflow
                0x00000000c000ac94                __ubsan_handle_mul_overflow
                0x00000000c000acc0                __ubsan_handle_sub_overflow
                0x00000000c000acec                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad18                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad44      0x86b fs/symlink.32
                0x00000000c000ae93                KiDeinitialiseSymlinks(void*)
                0x00000000c000af24                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb6                KeInitialiseSymlinks()
                0x00000000c000b12a                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2ae                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b455                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5af        0x1 
 .text          0x00000000c000b5b0      0xd7c fs/vfs.32
                0x00000000c000b5b0                File::read(unsigned long long, void*, int*)
                0x00000000c000b608                File::write(unsigned long long, void*, int*)
                0x00000000c000b660                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6b8                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6e6                File::isAtty()
                0x00000000c000b6ea                Directory::isAtty()
                0x00000000c000b6ee                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6f4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6fa                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b700                File::~File()
                0x00000000c000b700                File::~File()
                0x00000000c000b724                File::~File()
                0x00000000c000b74e                Directory::~Directory()
                0x00000000c000b74e                Directory::~Directory()
                0x00000000c000b772                Directory::~Directory()
                0x00000000c000b79c                Filesystem::Filesystem()
                0x00000000c000b79c                Filesystem::Filesystem()
                0x00000000c000b7c0                Filesystem::~Filesystem()
                0x00000000c000b7c0                Filesystem::~Filesystem()
                0x00000000c000b7ce                Filesystem::~Filesystem()
                0x00000000c000b7f2                Fs::getcwd(Process*, char*, int)
                0x00000000c000b81c                Fs::initVFS()
                0x00000000c000b846                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba74                File::File(char const*, Process*, bool)
                0x00000000c000ba74                File::File(char const*, Process*, bool)
                0x00000000c000bb52                File::File(char const*, Process*)
                0x00000000c000bb52                File::File(char const*, Process*)
                0x00000000c000bb70                File::open(FileOpenMode)
                0x00000000c000bbce                File::close()
                0x00000000c000bc2e                File::seek(unsigned long long)
                0x00000000c000bc84                File::truncate(unsigned long long)
                0x00000000c000bcda                File::tell(unsigned long long*)
                0x00000000c000bd2a                File::rewind()
                0x00000000c000bd3e                File::unlink()
                0x00000000c000bd8a                File::rename(char const*)
                0x00000000c000bdd8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be34                File::exists()
                0x00000000c000be72                File::stat(unsigned long long*, bool*)
                0x00000000c000bed3                Fs::setcwd(Process*, char*)
                0x00000000c000c032                Directory::Directory(char const*, Process*)
                0x00000000c000c032                Directory::Directory(char const*, Process*)
                0x00000000c000c0fa                Directory::open()
                0x00000000c000c156                Directory::close()
                0x00000000c000c1b6                Directory::unlink()
                0x00000000c000c202                Directory::rename(char const*)
                0x00000000c000c250                Directory::exists()
                0x00000000c000c28e                Directory::read(dirent*)
                0x00000000c000c2da                Directory::create()
                0x00000000c000c326                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c32c       0x86 hal/bus.32
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c388                Bus::~Bus()
 .text          0x00000000c000c3b2       0x96 hal/buzzer.32
                0x00000000c000c3b2                beepThread(void*)
                0x00000000c000c3ef                Krnl::beep(int, int, bool)
 .text          0x00000000c000c448      0x465 hal/clock.32
                0x00000000c000c448                User::loadClockSettings(int)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4f4                Clock::~Clock()
                0x00000000c000c51e                Clock::timeInSecondsLocal()
                0x00000000c000c566                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5bf                datetimeToSeconds(datetime_t)
                0x00000000c000c6e4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c744                secondsToDatetime(unsigned long long)
                0x00000000c000c888                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8ad        0x1 
 .text          0x00000000c000c8ae      0x464 hal/device.32
                0x00000000c000c8ae                Device::hibernate()
                0x00000000c000c8b0                Device::wake()
                0x00000000c000c8b2                Device::detect()
                0x00000000c000c8b4                Device::disableLegacy()
                0x00000000c000c8b6                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8b8                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8bc                DriverlessDevice::detect()
                0x00000000c000c8be                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8d2                Device::~Device()
                0x00000000c000c8d2                Device::~Device()
                0x00000000c000c8e0                Device::~Device()
                0x00000000c000c908                Device::findAndLoadDriver()
                0x00000000c000c916                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c93c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c97c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9a6                Device::getParent()
                0x00000000c000c9b2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9d0                Device::addChild(Device*)
                0x00000000c000ca14                Device::removeAllChildren()
                0x00000000c000ca5a                Device::hibernateAll()
                0x00000000c000ca8a                Device::wakeAll()
                0x00000000c000caba                Device::detectAll()
                0x00000000c000caea                Device::disableLegacyAll()
                0x00000000c000caec                Device::loadDriversForAll()
                0x00000000c000caee                Device::closeAll()
                0x00000000c000cb24                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb5a                Device::setName(char const*)
                0x00000000c000cb68                Device::Device(char const*)
                0x00000000c000cb68                Device::Device(char const*)
                0x00000000c000cc64                Device::getName()
                0x00000000c000cc6e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc6e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cca4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cce8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd12        0x2 
 .text          0x00000000c000cd14       0x86 hal/diskctrl.32
                0x00000000c000cd14                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd14                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd4c                HardDiskController::~HardDiskController()
                0x00000000c000cd4c                HardDiskController::~HardDiskController()
                0x00000000c000cd70                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd9a       0xe2 hal/diskphys.32
                0x00000000c000cd9a                PhysicalDisk::eject()
                0x00000000c000cd9e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd9e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce06                PhysicalDisk::startCache()
                0x00000000c000ce2e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce2e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce52                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce7c        0x0 hal/fpu.32
 .text          0x00000000c000ce7c      0x360 hal/intctrl.32
                0x00000000c000ce7c                int_handler
                0x00000000c000cf06                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf50                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d093                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0c7                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d13d                setupINTS()
                0x00000000c000d19a                convertLegacyIRQNumber(int)
 .text          0x00000000c000d1dc      0x8be hal/keybrd.32
                0x00000000c000d1dc                startGUI(void*)
                0x00000000c000d24a                startGUIVESA(void*)
                0x00000000c000d2b8                sendKeyToTerminal(unsigned char)
                0x00000000c000d393                sendKeyboardToken(KeyboardToken)
                0x00000000c000d87d                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8b2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da10                Keyboard::Keyboard(char const*)
                0x00000000c000da10                Keyboard::Keyboard(char const*)
                0x00000000c000da4c                Keyboard::~Keyboard()
                0x00000000c000da4c                Keyboard::~Keyboard()
                0x00000000c000da70                Keyboard::~Keyboard()
 .text          0x00000000c000da9a      0x3f8 hal/logidisk.32
                0x00000000c000da9a                LogicalDisk::close(int, int, void*)
                0x00000000c000da9e                LogicalDisk::~LogicalDisk()
                0x00000000c000da9e                LogicalDisk::~LogicalDisk()
                0x00000000c000dac2                LogicalDisk::~LogicalDisk()
                0x00000000c000daec                LogicalDisk::open(int, int, void*)
                0x00000000c000db00                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db38                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db7e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db7e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc3e                LogicalDisk::assignDriveLetter()
                0x00000000c000dcf8                LogicalDisk::mount()
                0x00000000c000dd40                LogicalDisk::unmount()
                0x00000000c000dd50                LogicalDisk::eject()
                0x00000000c000dd64                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddba                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de26                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000de92        0x2 
 .text          0x00000000c000de94       0x86 hal/mouse.32
                0x00000000c000de94                Mouse::Mouse(char const*)
                0x00000000c000de94                Mouse::Mouse(char const*)
                0x00000000c000decc                Mouse::~Mouse()
                0x00000000c000decc                Mouse::~Mouse()
                0x00000000c000def0                Mouse::~Mouse()
 .text          0x00000000c000df1a       0x90 hal/nic.32
                0x00000000c000df1a                NIC::getMAC()
                0x00000000c000df20                NIC::write(int, unsigned char*, int*)
                0x00000000c000df26                NIC::NIC(char const*)
                0x00000000c000df26                NIC::NIC(char const*)
                0x00000000c000df5c                NIC::~NIC()
                0x00000000c000df5c                NIC::~NIC()
                0x00000000c000df80                NIC::~NIC()
 .text          0x00000000c000dfaa      0x33b hal/partition.32
                0x00000000c000dfaa                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e052                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2e5        0x3 
 .text          0x00000000c000e2e8       0x86 hal/serial.32
                0x00000000c000e2e8                Serial::Serial(char const*)
                0x00000000c000e2e8                Serial::Serial(char const*)
                0x00000000c000e320                Serial::~Serial()
                0x00000000c000e320                Serial::~Serial()
                0x00000000c000e344                Serial::~Serial()
 *fill*         0x00000000c000e36e        0x2 
 .text          0x00000000c000e370      0x234 hal/timer.32
                0x00000000c000e370                Timer::Timer(char const*)
                0x00000000c000e370                Timer::Timer(char const*)
                0x00000000c000e3a8                Timer::~Timer()
                0x00000000c000e3a8                Timer::~Timer()
                0x00000000c000e3cc                Timer::~Timer()
                0x00000000c000e3f6                Timer::read()
                0x00000000c000e401                setupTimer(int)
                0x00000000c000e43c                timerHandler(unsigned int)
 .text          0x00000000c000e5a4      0x450 hal/vcache.32
                0x00000000c000e5a4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5a4                VCache::VCache(PhysicalDisk*)
                0x00000000c000e714                VCache::invalidateReadBuffer()
                0x00000000c000e724                VCache::writeWriteBuffer()
                0x00000000c000e770                VCache::~VCache()
                0x00000000c000e770                VCache::~VCache()
                0x00000000c000e7c8                VCache::~VCache()
                0x00000000c000e7f0                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8ea                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9f4      0x4d9 hal/video.32
                0x00000000c000e9f4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea40                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eab0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb40                Video::clearScreen(unsigned int)
                0x00000000c000eb74                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb82                Video::readPixelApprox(int, int)
                0x00000000c000eb96                Video::Video(char const*)
                0x00000000c000eb96                Video::Video(char const*)
                0x00000000c000ebcc                Video::~Video()
                0x00000000c000ebcc                Video::~Video()
                0x00000000c000ebf0                Video::~Video()
                0x00000000c000ec1a                Video::isMonochrome()
                0x00000000c000ec26                Video::getWidth()
                0x00000000c000ec32                Video::getHeight()
                0x00000000c000ec3e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecfa                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee62                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eecd        0x3 
 .text          0x00000000c000eed0     0x134a hw/acpi.32
                0x00000000c000eed0                ACPI::close(int, int, void*)
                0x00000000c000effc                findRSDP()
                0x00000000c000f094                loadACPITables(unsigned char*)
                0x00000000c000f300                findRSDT(unsigned char*)
                0x00000000c000f458                findDataTable(unsigned char*, char*)
                0x00000000c000f4d8                scanMADT()
                0x00000000c000f990                ACPI::ACPI()
                0x00000000c000f990                ACPI::ACPI()
                0x00000000c000f9e4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fae0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fbac                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbb4                ACPI::detectPCI()
                0x00000000c000fdd4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe1c                ACPI::sleep()
                0x00000000c000fe38                ACPI::open(int, int, void*)
 .text          0x00000000c001021a      0xbc5 hw/cpu.32
                0x00000000c001021a                CPU::close(int, int, void*)
                0x00000000c001021e                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001023a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010252                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102c6                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001034a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010378                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00103a6                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103d4                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010402                CPU::CPU()
                0x00000000c0010402                CPU::CPU()
                0x00000000c0010490                CPU::displayFeatures()
                0x00000000c0010492                CPU::detectFeatures()
                0x00000000c0010b66                CPU::setupSMEP()
                0x00000000c0010b72                CPU::setupUMIP()
                0x00000000c0010b7c                CPU::setupTSC()
                0x00000000c0010b86                CPU::setupLargePages()
                0x00000000c0010b90                CPU::setupPAT()
                0x00000000c0010bcc                CPU::setupMTRR()
                0x00000000c0010bce                CPU::setupGlobalPages()
                0x00000000c0010bd8                CPU::allowUsermodeDataAccess()
                0x00000000c0010bea                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bfc                CPU::setupSMAP()
                0x00000000c0010c0a                CPU::setupFeatures()
                0x00000000c0010cd6                CPU::open(int, int, void*)
 .text          0x00000000c0010ddf       0xb6 krnl/atexit.32
                0x00000000c0010ddf                KeInitialiseAtexit()
                0x00000000c0010dfe                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e32                KeExecuteAtexit()
 .text          0x00000000c0010e95       0xdf krnl/bootmsg.32
                0x00000000c0010e95                KeDisplaySplashScreen()
                0x00000000c0010f11                KeSetBootMessage(char const*)
 .text          0x00000000c0010f74       0x1d krnl/compat.32
                0x00000000c0010f74                Krnl::handlePowerButton()
                0x00000000c0010f84                Krnl::handleSleepButton()
 .text          0x00000000c0010f91       0x2b krnl/crc32.32
                0x00000000c0010f91                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fbc      0x5bf krnl/env.32
                0x00000000c0010fbc                EnvVarContainer::getEnv(char const*)
                0x00000000c0010ffa                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110bc                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110be                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112e2                EnvVarContainer::__loadSystem()
                0x00000000c00112fc                EnvVarContainer::__loadUser()
                0x00000000c00112fe                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112fe                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011320                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011320                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011350                KeGetEnv(Process*, char const*)
                0x00000000c00113b5                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113cf                KeSetEnvUser(char const*, char const*)
                0x00000000c00113ee                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011401                KeDeleteEnvSystem(char const*)
                0x00000000c0011402                KeDeleteEnvUser(char const*)
                0x00000000c0011403                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011404                KeNewProcessEnv(Process*)
                0x00000000c0011426                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011472                KeLoadSystemEnv()
                0x00000000c00114a0                KeLoadUserEnv()
                0x00000000c00114c6                KeFlushEnv()
                0x00000000c00114c7                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114e7                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001157b       0x94 krnl/inlines.32
                0x00000000c001157b                CPU::current()
                0x00000000c0011587                operator new(unsigned long)
                0x00000000c001158c                operator delete(void*)
                0x00000000c0011591                disableIRQs()
                0x00000000c0011593                enableIRQs()
                0x00000000c0011595                lockScheduler()
                0x00000000c001159d                unlockScheduler()
                0x00000000c00115ac                lockStuff()
                0x00000000c00115ba                unlockStuff()
                0x00000000c00115f4                Virt::getAKernelVAS()
                0x00000000c00115fa                __not_memcpy
 .text          0x00000000c001160f        0xc krnl/panic.32
                0x00000000c001160f                KePanic(char const*)
 .text          0x00000000c001161b      0x142 krnl/powctrl.32
                0x00000000c001161b                KePowerThread(void*)
                0x00000000c0011649                KeChangePowerSettings(PowerSettings)
                0x00000000c001165f                KeUserIOReceived()
                0x00000000c001166a                KeHandlePowerButton()
                0x00000000c001169f                KeHandleSleepButton()
                0x00000000c00116d4                KeSetupPowerManager()
 .text          0x00000000c001175d       0x9b krnl/random.32
                0x00000000c001175d                KeRand()
                0x00000000c001179d                KeSeedRand(unsigned int)
                0x00000000c00117c6                KeInitRand()
 .text          0x00000000c00117f8      0x1bc krnl/resolve.32
                0x00000000c00117f8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119b4      0x31f krnl/signal.32
                0x00000000c00119b4                KiSigKill(int)
                0x00000000c00119c8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119c9                KiDefaultSignalHandlerPause(int)
                0x00000000c00119f5                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a21                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a26                KeInitSignals()
                0x00000000c0011a75                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011aab                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b28                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c1f                KiCheckSignalZ
                0x00000000c0011c61                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c9c                KiFinishSignalZ
 .text          0x00000000c0011cd3      0xe32 krnl/syscalls.32
                0x00000000c0011cd3                SysSeekDir(regs*)
                0x00000000c0011cd8                SysTellDir(regs*)
                0x00000000c0011cdd                SysVerify(regs*)
                0x00000000c0011ce7                SysGetArgc(regs*)
                0x00000000c0011cfb                SysTTYName(regs*)
                0x00000000c0011d03                SysFormatDisk(regs*)
                0x00000000c0011d6a                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011dbe                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e17                SysShutdown(regs*)
                0x00000000c0011ea4                SysRealpath(regs*)
                0x00000000c0011ef2                SysReadDir(regs*)
                0x00000000c0011f72                SysIsATTY(regs*)
                0x00000000c0011fcc                SysSeek(regs*)
                0x00000000c0012026                SysTell(regs*)
                0x00000000c0012093                SysSize(regs*)
                0x00000000c0012106                SysSizeFromFilename(regs*)
                0x00000000c001223a                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001236e                SysClose(regs*)
                0x00000000c00123ce                SysOpenDir(regs*)
                0x00000000c001244b                SysMakeDir(regs*)
                0x00000000c00124b9                SysCloseDir(regs*)
                0x00000000c0012508                SysWait(regs*)
                0x00000000c0012529                SysNotImpl(regs*)
                0x00000000c0012544                SysPanic(regs*)
                0x00000000c001255f                SysRmdir(regs*)
                0x00000000c00125bd                SysUnlink(regs*)
                0x00000000c001261b                SysGetArgv(regs*)
                0x00000000c0012668                SysUSleep(regs*)
                0x00000000c0012691                SysSpawn(regs*)
                0x00000000c0012702                SysGetEnv(regs*)
                0x00000000c00127b7                SysSetFatAttrib(regs*)
                0x00000000c0012820                SysPipe(regs*)
                0x00000000c0012865                SysGetUnixTime(regs*)
                0x00000000c0012879                string_ends_with(char const*, char const*)
                0x00000000c00128c4                SysOpen(regs*)
                0x00000000c0012ac3                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012b05        0x3 
 .text          0x00000000c0012b08      0x159 net/ethernet.32
                0x00000000c0012b08                KeSwitchEndian16(unsigned short)
                0x00000000c0012b2c                KeSwitchEndian32(unsigned int)
                0x00000000c0012b5c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c00                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c61      0xd51 reg/cm.32
                0x00000000c0012c61                CmOpen(char const*)
                0x00000000c0012d7f                CmClose(Reghive_Tag*)
                0x00000000c0012d95                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012dd1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e48                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e87                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012eb9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012ef5                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012f1d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f3e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012fb9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001303f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013133                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001326b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00132cc                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132fc                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013333                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c001335d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001339d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013441                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001346f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001360c                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013659                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00136d3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013726                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137ea                zStrtok(char*, char const*)
                0x00000000c001385c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138dd                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013980                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00139b2      0x545 reg/registry.32
                0x00000000c00139b2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013b3e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c93                Reg::getLine(char*, char*, char*)
                0x00000000c0013cca                Reg::readInt(char*, char*, int*)
                0x00000000c0013db8                Reg::readString(char*, char*, char*, int)
                0x00000000c0013e39                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e5e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e8a                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013eb6                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013ef7       0x36 sys/eject.32
                0x00000000c0013ef7                SysEject(regs*)
 .text          0x00000000c0013f2d       0x18 sys/exit.32
                0x00000000c0013f2d                SysExit(regs*)
 .text          0x00000000c0013f45       0x1f sys/getcwd.32
                0x00000000c0013f45                SysGetCwd(regs*)
 .text          0x00000000c0013f64        0xc sys/getpid.32
                0x00000000c0013f64                SysGetPID(regs*)
 .text          0x00000000c0013f70       0x1a sys/getramdata.32
                0x00000000c0013f70                SysGetRAMData(regs*)
 .text          0x00000000c0013f8a       0x82 sys/getvgaptr.32
                0x00000000c0013f8a                SysGetVGAPtr(regs*)
 .text          0x00000000c001400c       0xb9 sys/kill.32
                0x00000000c001400c                SysKill(regs*)
 .text          0x00000000c00140c5       0xa8 sys/loaddll.32
                0x00000000c00140c5                SysLoadDLL(regs*)
 .text          0x00000000c001416d       0x68 sys/read.32
                0x00000000c001416d                SysRead(regs*)
 .text          0x00000000c00141d5       0x29 sys/registersignal.32
                0x00000000c00141d5                SysRegisterSignal(regs*)
 .text          0x00000000c00141fe      0x19c sys/registry.32
                0x00000000c00141fe                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014275                SysRegistryReadExtent(regs*)
                0x00000000c00142bd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00142e5                SysRegistryEnterDirectory(regs*)
                0x00000000c001430d                SysRegistryGetNext(regs*)
                0x00000000c0014335                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001436f                SysRegistryOpen(regs*)
                0x00000000c0014383                SysRegistryClose(regs*)
 .text          0x00000000c001439a       0x55 sys/sbrk.32
                0x00000000c001439a                SysSbrk(regs*)
 .text          0x00000000c00143ef       0x1c sys/setcwd.32
                0x00000000c00143ef                SysSetCwd(regs*)
 .text          0x00000000c001440b       0x96 sys/settime.32
                0x00000000c001440b                SysSetTime(regs*)
 .text          0x00000000c00144a1       0x73 sys/symlink.32
                0x00000000c00144a1                SysSymlink(regs*)
 .text          0x00000000c0014514       0x4a sys/timezone.32
                0x00000000c0014514                SysTimezone(regs*)
 .text          0x00000000c001455e       0xfc sys/truncate.32
                0x00000000c001455e                SysTruncate(regs*)
 .text          0x00000000c001465a       0x68 sys/write.32
                0x00000000c001465a                SysWrite(regs*)
 .text          0x00000000c00146c2       0x62 sys/wsbe.32
                0x00000000c00146c2                SysWsbe(regs*)
 .text          0x00000000c0014724       0x25 sys/yield.32
                0x00000000c0014724                SysYield(regs*)
 .text          0x00000000c0014749     0x1203 thr/elf.32
                0x00000000c0014749                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00149d0                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014bef                Thr::runtimeReferenceHelper()
                0x00000000c0014c02                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c51                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f0f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015650                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015682                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00156b9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00156d3                Thr::loadDLL(char const*, bool)
                0x00000000c0015913                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001594c     0x13b5 thr/prcssthr.32
                0x00000000c001594c                userModeEntryPoint(void*)
                0x00000000c0015974                changeTSS
                0x00000000c00159a4                switchToThread(ThreadControlBlock*)
                0x00000000c0015a54                Process::addArgs(char**)
                0x00000000c0015ac0                Process::Process(char const*, Process*, char**)
                0x00000000c0015ac0                Process::Process(char const*, Process*, char**)
                0x00000000c0015ccc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015ccc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015ea0                taskStartupFunction
                0x00000000c0015eac                Semaphore::Semaphore(int)
                0x00000000c0015eac                Semaphore::Semaphore(int)
                0x00000000c0015edc                Mutex::Mutex()
                0x00000000c0015edc                Mutex::Mutex()
                0x00000000c0015ef0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015ff8                Process::createUserThread()
                0x00000000c0016018                setupMultitasking(void (*)())
                0x00000000c001613c                schedule()
                0x00000000c00161d0                Semaphore::tryAcquire()
                0x00000000c0016290                Semaphore::assertLocked(char const*)
                0x00000000c0016314                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001633c                blockTask(TaskState)
                0x00000000c0016374                waitTask(int, int*, int)
                0x00000000c00163b8                milliTenthSleepUntil(unsigned int)
                0x00000000c0016458                milliTenthSleep(unsigned int)
                0x00000000c001646c                sleep(unsigned int)
                0x00000000c001647c                Semaphore::acquire()
                0x00000000c0016544                taskReturned
                0x00000000c0016588                Thr::processFromPID(int)
                0x00000000c0016634                unblockTask(ThreadControlBlock*)
                0x00000000c00166e0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00169b4                cleanerTaskFunction(void*)
                0x00000000c0016abc                terminateTask(int)
                0x00000000c0016ba8                Thr::terminateFromIRQ(int)
                0x00000000c0016bb8                Semaphore::release()
 .text          0x00000000c0016d01      0xc31 vm86/vm8086.32
                0x00000000c0016d01                Vm::inbv(unsigned short)
                0x00000000c0016d14                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d4a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016d5a                Vm::getSegment(unsigned int)
                0x00000000c0016d62                Vm::getOffset(unsigned int)
                0x00000000c0016d67                Vm::mainloop2()
                0x00000000c0016da1                Vm::mainVm8086Loop(void*)
                0x00000000c0016db1                Vm::mainloop3(unsigned long)
                0x00000000c0016dd7                Vm::initialise8086()
                0x00000000c0016e1a                Vm::finish8086()
                0x00000000c0016e7b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016ea0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f59                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170f7                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017194                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00171a5                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171b7                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00171c8                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00171dd                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00171f3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017208                Vm::faultHandler(regs*)
 .text          0x00000000c0017932      0xaf0 arch/i386/hal.32
                0x00000000c0017932                noCopro(unsigned long)
                0x00000000c0017933                nmiHandler(regs*, void*)
                0x00000000c001794c                doubleFault(regs*, void*)
                0x00000000c0017965                displayDebugInfo(regs*)
                0x00000000c0017cea                HalSystemIdle()
                0x00000000c0017d66                displayProgramFault(char const*)
                0x00000000c0017db2                gpFault(regs*, void*)
                0x00000000c0017e19                pgFault(regs*, void*)
                0x00000000c0017ea2                otherISRHandler(regs*, void*)
                0x00000000c0017ed6                opcodeFault(regs*, void*)
                0x00000000c0017f59                i386SaveCoprocessor(void*)
                0x00000000c0017f6d                i386LoadCoprocessor(void*)
                0x00000000c0017f81                x87EmulHandler(regs*, void*)
                0x00000000c001801e                HalInitialiseCoprocessor()
                0x00000000c00180cc                HalPanic(char const*)
                0x00000000c00181e0                HalQueryPerformanceCounter()
                0x00000000c00181fb                HalInitialise()
                0x00000000c00183b1                HalMakeBeep(int)
                0x00000000c00183eb                HalGetRand()
                0x00000000c00183ee                HalEndOfInterrupt(int)
                0x00000000c001841f                HalRestart()
                0x00000000c0018420                HalShutdown()
                0x00000000c0018421                HalSleep()
 *fill*         0x00000000c0018422        0x2 
 .text          0x00000000c0018424      0x2dc arch/i386/pic.32
                0x00000000c0018424                picIoWait()
                0x00000000c001842c                picDisable()
                0x00000000c0018460                picGetIRQReg(int)
                0x00000000c00184dc                picOpen()
                0x00000000c0018660                picEOI(int)
 .text          0x00000000c0018700      0x66e arch/i386/rtc.32
                0x00000000c0018700                RTC::open(int, int, void*)
                0x00000000c0018704                RTC::close(int, int, void*)
                0x00000000c0018708                RTC::timeInSecondsUTC()
                0x00000000c001871a                RTC::timeInDatetimeUTC()
                0x00000000c0018740                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001877e                RTC::~RTC()
                0x00000000c001877e                RTC::~RTC()
                0x00000000c00187a2                RTC::~RTC()
                0x00000000c00187cc                RTC::get_update_in_progress_flag()
                0x00000000c00187e6                RTC::completeRTCRefresh()
                0x00000000c0018ac0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c6e                rtcIRQHandler(regs*, void*)
                0x00000000c0018cb4                RTC::RTC()
                0x00000000c0018cb4                RTC::RTC()
 *fill*         0x00000000c0018d6e        0x2 
 .text          0x00000000c0018d70      0x1f4 arch/i386/vga.32
                0x00000000c0018d70                HalConsoleScroll(int, int)
                0x00000000c0018e78                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018edc                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f64     0x14f3 fs/fat/vfslink.32
                0x00000000c0018f64                FAT::getName()
                0x00000000c0018f6c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018fa8                FAT::stat(void*, unsigned long long*)
                0x00000000c0018fe4                FAT::~FAT()
                0x00000000c0018fe4                FAT::~FAT()
                0x00000000c0019008                FAT::~FAT()
                0x00000000c0019030                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00190d4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00191b4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019398                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00195b4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019774                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198e4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019944                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00199a4                FAT::close(void*)
                0x00000000c00199f8                FAT::closeDir(void*)
                0x00000000c0019a4c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019ab8                FAT::seek(void*, unsigned long long)
                0x00000000c0019b10                fatWrapperReadDisk
                0x00000000c0019b50                fatWrapperWriteDisk
                0x00000000c0019b90                fatWrapperIoctl
                0x00000000c0019cb0                FAT::FAT()
                0x00000000c0019cb0                FAT::FAT()
                0x00000000c0019d08                FAT::fixFilepath(char*)
                0x00000000c0019d48                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ebc                FAT::openDir(char const*, void**)
                0x00000000c0019f6c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a064                FAT::unlink(char const*)
                0x00000000c001a0e4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a29c                FAT::rename(char const*, char const*)
                0x00000000c001a368                FAT::mkdir(char const*)
                0x00000000c001a3e8                FAT::exists(char const*)
 *fill*         0x00000000c001a457        0x1 
 .text          0x00000000c001a458       0x94 fs/iso9660/helper.32
                0x00000000c001a458                isoReadDiscSectorHelper
                0x00000000c001a4b4                iso_kprintf
                0x00000000c001a4d0                iso_kprintfd
 .text          0x00000000c001a4ec      0x71a fs/iso9660/vfslink.32
                0x00000000c001a4ec                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a4f2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a4f8                ISO9660::getName()
                0x00000000c001a4fe                ISO9660::closeDir(void*)
                0x00000000c001a508                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a50e                ISO9660::unlink(char const*)
                0x00000000c001a514                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a51a                ISO9660::rename(char const*, char const*)
                0x00000000c001a520                ISO9660::mkdir(char const*)
                0x00000000c001a526                ISO9660::~ISO9660()
                0x00000000c001a526                ISO9660::~ISO9660()
                0x00000000c001a54a                ISO9660::~ISO9660()
                0x00000000c001a572                ISO9660::exists(char const*)
                0x00000000c001a586                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a66c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a6b4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a6f6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a734                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a786                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8c8                ISO9660::close(void*)
                0x00000000c001a8f8                ISO9660::openDir(char const*, void**)
                0x00000000c001a9d2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aaed                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab6c                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001abde                ISO9660::ISO9660()
                0x00000000c001abde                ISO9660::ISO9660()
 .text          0x00000000c001ac06      0x26c hal/sound/sndcard.32
                0x00000000c001ac06                SoundCard::beginPlayback()
                0x00000000c001ac14                SoundCard::stopPlayback()
                0x00000000c001ac22                SoundCard::SoundCard(char const*)
                0x00000000c001ac22                SoundCard::SoundCard(char const*)
                0x00000000c001acc0                SoundCard::~SoundCard()
                0x00000000c001acc0                SoundCard::~SoundCard()
                0x00000000c001ace4                SoundCard::~SoundCard()
                0x00000000c001ad0e                SoundCard::configureRates(int, int, int)
                0x00000000c001ad3e                SoundCard::getSamples16(int, short*)
                0x00000000c001ad9a                SoundCard::getSamples32(int, int*)
                0x00000000c001ae20                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae5e                SoundCard::removeChannel(int)
 *fill*         0x00000000c001ae72        0x2 
 .text          0x00000000c001ae74      0x393 hal/sound/sndport.32
                0x00000000c001ae74                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae74                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af00                SoundPort::~SoundPort()
                0x00000000c001af00                SoundPort::~SoundPort()
                0x00000000c001af34                SoundPort::unpause()
                0x00000000c001af40                SoundPort::pause()
                0x00000000c001af4c                SoundPort::getBufferUsed()
                0x00000000c001af54                SoundPort::getBufferSize()
                0x00000000c001af5c                SoundPort::buffer16(short*, int)
                0x00000000c001afe8                SoundPort::buffer32(int*, int)
                0x00000000c001b074                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b144                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b207        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b207        0x1 
 .text          0x00000000c001b208      0xbc5 hw/bus/pci.32
                0x00000000c001b208                PCI::open(int, int, void*)
                0x00000000c001b226                PCI::close(int, int, void*)
                0x00000000c001b22a                PCI::PCI()
                0x00000000c001b22a                PCI::PCI()
                0x00000000c001b2c2                PCI::readBAR8(unsigned int, int)
                0x00000000c001b2de                PCI::readBAR16(unsigned int, int)
                0x00000000c001b2fc                PCI::readBAR32(unsigned int, int)
                0x00000000c001b318                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b338                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b35a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b37a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3f0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b49a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4be                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b530                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b558                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b57c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5a0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5c8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b62c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b712                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b9dc                PCI::checkBus(unsigned char)
                0x00000000c001ba00                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bb86                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd02                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bd74                PCI::detect()
 *fill*         0x00000000c001bdcd        0x1 
 .text          0x00000000c001bdce      0xb96 hw/diskctrl/ide.32
                0x00000000c001bdce                IDE::close(int, int, void*)
                0x00000000c001bdd2                IDE::IDE()
                0x00000000c001bdd2                IDE::IDE()
                0x00000000c001be06                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be18                selectDrive(unsigned char, unsigned char)
                0x00000000c001be1a                IDE::getBase(unsigned char)
                0x00000000c001be2c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001beec                IDE::read(unsigned char, unsigned char)
                0x00000000c001bfa0                IDE::waitInterrupt(unsigned char)
                0x00000000c001c002                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c01e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c03a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c084                IDE::open(int, int, void*)
                0x00000000c001c4be                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c58e                IDE::detect()
                0x00000000c001c856                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c910                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c964      0x32c hw/diskctrl/satabus.32
                0x00000000c001c964                SATABus::close(int, int, void*)
                0x00000000c001c968                SATABus::detect()
                0x00000000c001c96a                SATABus::SATABus()
                0x00000000c001c96a                SATABus::SATABus()
                0x00000000c001c9f0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca22                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca6a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca8a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cab4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cbc6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cc70                SATABus::open(int, int, void*)
 .text          0x00000000c001cc90      0x96d hw/diskphys/ata.32
                0x00000000c001cc90                ATA::close(int, int, void*)
                0x00000000c001ccb4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ccb6                ATA::ATA()
                0x00000000c001ccb6                ATA::ATA()
                0x00000000c001cce4                ATA::flush(bool)
                0x00000000c001cd32                ATA::readyForCommand()
                0x00000000c001cd7e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d142                ATA::detectCHS()
                0x00000000c001d16c                ATA::open(int, int, void*)
                0x00000000c001d238                combineCharAndColour(char, unsigned char)
                0x00000000c001d249                combineColours(unsigned char, unsigned char)
                0x00000000c001d256                ATA::read(unsigned long long, int, void*)
                0x00000000c001d42c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d5fd        0x1 
 .text          0x00000000c001d5fe      0x612 hw/diskphys/atapi.32
                0x00000000c001d5fe                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d604                ATAPI::close(int, int, void*)
                0x00000000c001d628                ATAPI::ATAPI()
                0x00000000c001d628                ATAPI::ATAPI()
                0x00000000c001d656                ATAPI::readyForCommand()
                0x00000000c001d6a8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d968                ATAPI::diskRemoved()
                0x00000000c001d9a2                ATAPI::eject()
                0x00000000c001d9ea                ATAPI::diskInserted()
                0x00000000c001d9f6                ATAPI::detectMedia()
                0x00000000c001dab6                ATAPI::open(int, int, void*)
                0x00000000c001db96                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc10      0x7ff hw/diskphys/sata.32
                0x00000000c001dc10                SATA::close(int, int, void*)
                0x00000000c001dc34                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc36                SATA::open(int, int, void*)
                0x00000000c001dce0                SATA::SATA()
                0x00000000c001dce0                SATA::SATA()
                0x00000000c001dd0e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df60                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1b0                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e40f        0x1 
 .text          0x00000000c001e410      0x5d8 hw/diskphys/satapi.32
                0x00000000c001e410                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e416                SATAPI::close(int, int, void*)
                0x00000000c001e43a                SATAPI::SATAPI()
                0x00000000c001e43a                SATAPI::SATAPI()
                0x00000000c001e468                SATAPI::diskRemoved()
                0x00000000c001e46a                SATAPI::diskInserted()
                0x00000000c001e486                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e76c                SATAPI::eject()
                0x00000000c001e7a8                SATAPI::detectMedia()
                0x00000000c001e7fe                SATAPI::open(int, int, void*)
                0x00000000c001e8fe                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e9e8      0x45b hw/intctrl/apic.32
                0x00000000c001e9e8                IOAPIC::close(int, int, void*)
                0x00000000c001e9ee                apicGetBase()
                0x00000000c001ea34                IOAPIC::IOAPIC()
                0x00000000c001ea34                IOAPIC::IOAPIC()
                0x00000000c001ea5c                apicOpen()
                0x00000000c001ebd8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec0a                IOAPIC::read(int)
                0x00000000c001ec32                IOAPIC::open(int, int, void*)
                0x00000000c001ed18                IOAPIC::write(int, int)
                0x00000000c001ed44                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee43        0x1 
 .text          0x00000000c001ee44       0xf0 hw/timer/apictimer.32
                0x00000000c001ee44                APICTimer::close(int, int, void*)
                0x00000000c001ee4c                apicTimerHandler(regs*, void*)
                0x00000000c001ee74                APICTimer::open(int, int, void*)
                0x00000000c001eee4                APICTimer::write(int)
                0x00000000c001ef0c                APICTimer::APICTimer()
                0x00000000c001ef0c                APICTimer::APICTimer()
 .text          0x00000000c001ef34      0x1ad hw/timer/pit.32
                0x00000000c001ef34                PIT::write(int)
                0x00000000c001efb8                pitHandler(regs*, void*)
                0x00000000c001efe0                PIT::open(int, int, void*)
                0x00000000c001f030                PIT::close(int, int, void*)
                0x00000000c001f060                PIT::PIT()
                0x00000000c001f060                PIT::PIT()
 *fill*         0x00000000c001f0e1        0xf 
 .text          0x00000000c001f0f0       0x83 arch/i386/avx.32
                0x00000000c001f0f0                avxDetect
                0x00000000c001f11a                avxSave
                0x00000000c001f12b                avxLoad
                0x00000000c001f13c                avxInit
                0x00000000c001f15e                avxClose
                0x00000000c001f15f                wouldSheSayYes
 *fill*         0x00000000c001f173        0xd 
 .text          0x00000000c001f180      0x2ec arch/i386/interrupt.32
                0x00000000c001f180                isr0
                0x00000000c001f190                isr1
                0x00000000c001f19a                isr2
                0x00000000c001f1a4                isr3
                0x00000000c001f1ae                isr4
                0x00000000c001f1b8                isr5
                0x00000000c001f1c2                isr6
                0x00000000c001f1cc                isr7
                0x00000000c001f1d6                isr8
                0x00000000c001f1de                isr9
                0x00000000c001f1e8                isr10
                0x00000000c001f1f0                isr11
                0x00000000c001f1f8                isr12
                0x00000000c001f200                isr13
                0x00000000c001f21a                isr14
                0x00000000c001f222                isr15
                0x00000000c001f22c                isr16
                0x00000000c001f236                isr17
                0x00000000c001f240                isr18
                0x00000000c001f24a                irq3
                0x00000000c001f254                irq4
                0x00000000c001f25e                irq5
                0x00000000c001f268                irq6
                0x00000000c001f272                irq7
                0x00000000c001f27c                irq8
                0x00000000c001f286                irq9
                0x00000000c001f290                irq10
                0x00000000c001f29a                irq11
                0x00000000c001f2a4                irq12
                0x00000000c001f2ae                irq13
                0x00000000c001f2b8                irq14
                0x00000000c001f2c2                irq15
                0x00000000c001f2cc                irq1
                0x00000000c001f2d3                irq2
                0x00000000c001f2da                isr96
                0x00000000c001f2e1                irq0
                0x00000000c001f2e6                int_common_stub
                0x00000000c001f318                syscall_common_stub
                0x00000000c001f41c                irq16
                0x00000000c001f426                irq17
                0x00000000c001f430                irq18
                0x00000000c001f43a                irq19
                0x00000000c001f444                irq20
                0x00000000c001f44e                irq21
                0x00000000c001f458                irq22
                0x00000000c001f462                irq23
 *fill*         0x00000000c001f46c        0x4 
 .text          0x00000000c001f470       0x10 arch/i386/rdrand.32
                0x00000000c001f470                i386GetRDRAND
 .text          0x00000000c001f480       0x39 arch/i386/sse.32
                0x00000000c001f480                absolutelyNoChanceInHell
                0x00000000c001f480                sseDetect
                0x00000000c001f498                sseSave
                0x00000000c001f4a0                sseLoad
                0x00000000c001f4a8                sseInit
                0x00000000c001f4b8                sseClose
 *fill*         0x00000000c001f4b9        0x7 
 .text          0x00000000c001f4c0       0x49 arch/i386/x87.32
                0x00000000c001f4c6                x87Detect
                0x00000000c001f4e1                x87Save
                0x00000000c001f4e8                x87Load
                0x00000000c001f4ef                x87Init
                0x00000000c001f508                x87Close
 *fill*         0x00000000c001f509        0x3 
 .text          0x00000000c001f50c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f531        0x0 crtn.32
 *fill*         0x00000000c001f531        0x3 
 .text          0x00000000c001f534      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f534                __divdi3
 *fill*         0x00000000c001f67f        0x1 
 .text          0x00000000c001f680      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f680                __moddi3
 *fill*         0x00000000c001f7fe        0x2 
 .text          0x00000000c001f800       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f800                __udivdi3
 *fill*         0x00000000c001f8ff        0x1 
 .text          0x00000000c001f900      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f900                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa20        0x0
 .iplt          0x00000000c001fa20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa1a        0xf
 .init          0x00000000c001fa1a        0x3 crti.32
                0x00000000c001fa1a                _init
 .init          0x00000000c001fa1d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa22        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa27        0x2 crtn.32

.fini           0x00000000c001fa29        0xa
 .fini          0x00000000c001fa29        0x3 crti.32
                0x00000000c001fa29                _fini
 .fini          0x00000000c001fa2c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa31        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa34       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa34       0x23 core/computer.32
                0x00000000c001fa34                Computer::~Computer()
                0x00000000c001fa34                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa58       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa58       0x2a core/computer.32
                0x00000000c001fa58                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fa82       0x21
 .text._Z10idleCommonv
                0x00000000c001fa82       0x21 core/idle.32
                0x00000000c001fa82                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001faa4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001faa4        0x2 core/unixfile.32
                0x00000000c001faa4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001faa4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001faa6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001faa6       0x42 core/unixfile.32
                0x00000000c001faa6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001faa6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fae8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fae8       0xd3 core/unixfile.32
                0x00000000c001fae8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbbc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbbc        0x7 core/unixfile.32
                0x00000000c001fbbc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbc4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbc4       0xa1 core/unixfile.32
                0x00000000c001fbc4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc66        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc66        0x8 core/unixfile.32
                0x00000000c001fc66                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc6e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc6e       0x1a hal/device.32
                0x00000000c001fc6e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc6e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc88       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc88       0x2a hal/device.32
                0x00000000c001fc88                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcb2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcb2       0xdc hal/device.32
                0x00000000c001fcb2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd8e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd8e       0x42 hal/device.32
                0x00000000c001fd8e                LinkedList<Device>::LinkedList()
                0x00000000c001fd8e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdd0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdd0       0x1c hal/timer.32
                0x00000000c001fdd0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdec        0x7 hal/timer.32
                0x00000000c001fdec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdf4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdf4       0xbc hal/timer.32
                0x00000000c001fdf4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001feb0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001feb0       0xda hal/timer.32
                0x00000000c001feb0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ff8c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ff8c       0x23 hw/acpi.32
                0x00000000c001ff8c                ACPI::~ACPI()
                0x00000000c001ff8c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ffb0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ffb0       0x2a hw/acpi.32
                0x00000000c001ffb0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffdc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ffdc        0x2 hw/acpi.32
                0x00000000c001ffdc                LinkedList<Device>::~LinkedList()
                0x00000000c001ffdc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffe0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffe0       0x1c hw/acpi.32
                0x00000000c001ffe0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fffc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fffc        0x7 hw/acpi.32
                0x00000000c001fffc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020004       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020004       0xb8 hw/acpi.32
                0x00000000c0020004                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200bc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200bc       0x23 hw/cpu.32
                0x00000000c00200bc                CPU::~CPU()
                0x00000000c00200bc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00200e0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00200e0       0x2a hw/cpu.32
                0x00000000c00200e0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002010c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002010c        0x8 sys/kill.32
                0x00000000c002010c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020114        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020114        0x2 thr/prcssthr.32
                0x00000000c0020114                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020114                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020118       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020118       0x49 thr/prcssthr.32
                0x00000000c0020118                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020118                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020164       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020164       0x42 thr/prcssthr.32
                0x00000000c0020164                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020164                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00201a6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00201a6       0x23 hw/bus/pci.32
                0x00000000c00201a6                PCI::~PCI()
                0x00000000c00201a6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00201ca       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00201ca       0x2a hw/bus/pci.32
                0x00000000c00201ca                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00201f4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00201f4       0x23 hw/diskctrl/ide.32
                0x00000000c00201f4                IDE::~IDE()
                0x00000000c00201f4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020218       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020218       0x2a hw/diskctrl/ide.32
                0x00000000c0020218                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020242       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020242       0x23 hw/diskctrl/satabus.32
                0x00000000c0020242                SATABus::~SATABus()
                0x00000000c0020242                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020266       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020266       0x2a hw/diskctrl/satabus.32
                0x00000000c0020266                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020290       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020290       0x23 hw/diskphys/ata.32
                0x00000000c0020290                ATA::~ATA()
                0x00000000c0020290                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202b4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202b4       0x2a hw/diskphys/ata.32
                0x00000000c00202b4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00202de       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00202de       0x23 hw/diskphys/atapi.32
                0x00000000c00202de                ATAPI::~ATAPI()
                0x00000000c00202de                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020302       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020302       0x2a hw/diskphys/atapi.32
                0x00000000c0020302                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002032c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002032c       0x23 hw/diskphys/sata.32
                0x00000000c002032c                SATA::~SATA()
                0x00000000c002032c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020350       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020350       0x2a hw/diskphys/sata.32
                0x00000000c0020350                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002037a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002037a       0x23 hw/diskphys/satapi.32
                0x00000000c002037a                SATAPI::~SATAPI()
                0x00000000c002037a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002039e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002039e       0x2a hw/diskphys/satapi.32
                0x00000000c002039e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00203c8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00203c8       0x23 hw/intctrl/apic.32
                0x00000000c00203c8                IOAPIC::~IOAPIC()
                0x00000000c00203c8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00203ec       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00203ec       0x2a hw/intctrl/apic.32
                0x00000000c00203ec                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020418       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020418       0x23 hw/timer/apictimer.32
                0x00000000c0020418                APICTimer::~APICTimer()
                0x00000000c0020418                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002043c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002043c       0x2a hw/timer/apictimer.32
                0x00000000c002043c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020468       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020468       0x23 hw/timer/pit.32
                0x00000000c0020468                PIT::~PIT()
                0x00000000c0020468                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002048c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002048c       0x2a hw/timer/pit.32
                0x00000000c002048c                PIT::~PIT()

.rodata         0x00000000c00204b6     0x330e
                0x00000000c00204b6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204b6        0x2 
 .ctors         0x00000000c00204b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204bc        0x4 core/unixfile.32
 .ctors         0x00000000c00204c0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00204c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204c8                end_ctors = .
                0x00000000c00204c8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00204c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00204cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204cc                __DTOR_END__
                0x00000000c00204d0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00204d0       0x10 
 .rodata        0x00000000c00204e0      0x101 acpica/utclib.32
                0x00000000c00204e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00205e1        0x3 
 .rodata        0x00000000c00205e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00205fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020646       0x1a 
 .rodata        0x00000000c0020660       0xed fs/fat/ff.32
 *fill*         0x00000000c002074d       0x13 
 .rodata        0x00000000c0020760      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b60       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020bcf      0x13f core/computer.32
 *fill*         0x00000000c0020d0e        0x2 
 .rodata.str1.4
                0x00000000c0020d10       0x90 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020da0       0x2c core/computer.32
                0x00000000c0020da0                vtable for Computer
 .rodata.str1.4
                0x00000000c0020dcc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020dfc        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020e08       0x17 core/main.32
 *fill*         0x00000000c0020e1f        0x1 
 .rodata.str1.4
                0x00000000c0020e20       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020ec5       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f1d       0x39 core/pipe.32
 *fill*         0x00000000c0020f56        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020f58       0x1c core/pipe.32
                0x00000000c0020f58                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020f74       0x2b core/terminal.32
 *fill*         0x00000000c0020f9f        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020fa0       0x1c core/terminal.32
                0x00000000c0020fa0                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020fbc       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020fde       0x15 core/unixfile.32
 *fill*         0x00000000c0020ff3        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ff4       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002103f        0x8 core/unixfile.32
 *fill*         0x00000000c0021047        0x1 
 .rodata.str1.4
                0x00000000c0021048       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021068       0x1c core/unixfile.32
                0x00000000c0021068                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021084       0x1c core/unixfile.32
                0x00000000c0021084                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00210a0      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021334      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002145a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002148d        0x3 
 .rodata        0x00000000c0021490      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00215e0      0x169 dbg/usban.32
 *fill*         0x00000000c0021749        0x3 
 .rodata.str1.4
                0x00000000c002174c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021883      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a1e       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021a5f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a60       0x6c fs/vfs.32
                0x00000000c0021a60                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021acc       0x1c fs/vfs.32
                0x00000000c0021acc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021ae8       0x1c fs/vfs.32
                0x00000000c0021ae8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b04       0x2c hal/bus.32
                0x00000000c0021b04                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b30       0x1e hal/clock.32
 *fill*         0x00000000c0021b4e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021b50       0x3c hal/clock.32
                0x00000000c0021b50                vtable for Clock
 *fill*         0x00000000c0021b8c       0x14 
 .rodata        0x00000000c0021ba0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021bd0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021c28       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021c28       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021c28       0x2c hal/device.32
                0x00000000c0021c28                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c54       0x2c hal/device.32
                0x00000000c0021c54                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c80       0x2c hal/diskctrl.32
                0x00000000c0021c80                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021cac       0x38 hal/diskphys.32
                0x00000000c0021cac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021ce4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021d22        0x2 
 .rodata.str1.4
                0x00000000c0021d24       0x5d hal/intctrl.32
 .rodata        0x00000000c0021d81       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021dd4       0x34 hal/keybrd.32
                0x00000000c0021dd4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021e08       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021e4c       0x2c hal/logidisk.32
                0x00000000c0021e4c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e78       0x2c hal/mouse.32
                0x00000000c0021e78                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ea4       0x34 hal/nic.32
                0x00000000c0021ea4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021ed8        0xb hal/partition.32
 *fill*         0x00000000c0021ee3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021ee4       0x44 hal/serial.32
                0x00000000c0021ee4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f28       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f28        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f28       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f28       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021f28       0x30 hal/timer.32
                0x00000000c0021f28                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021f58       0x10 hal/vcache.32
                0x00000000c0021f58                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f68       0x93 hal/video.32
 *fill*         0x00000000c0021ffb        0x1 
 .rodata._ZTV5Video
                0x00000000c0021ffc       0x4c hal/video.32
                0x00000000c0021ffc                vtable for Video
 .rodata.str1.1
                0x00000000c0022048      0x1ec hw/acpi.32
                                        0x206 (size before relaxing)
 .rodata.str1.4
                0x00000000c0022234       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00222cf       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00222cf        0x8 hw/acpi.32
 *fill*         0x00000000c00222cf        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00222d0       0x2c hw/acpi.32
                0x00000000c00222d0                vtable for ACPI
 .rodata.str1.1
                0x00000000c00222fc      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022477        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022478       0x2c hw/cpu.32
                0x00000000c0022478                vtable for CPU
 .rodata.str1.1
                0x00000000c00224a4       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224e4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022520       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00225b1       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002267a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00226c2       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00226ed       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0022763       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00227a8        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00227b2       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00227d3       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022869       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00228bd       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00228e9      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ab5       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022b0c      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022c1c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022c1c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022c1c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022c1c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022c1c       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022cde        0x2 
 .rodata        0x00000000c0022ce0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022d10      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022eaf        0x1 
 .rodata.str1.4
                0x00000000c0022eb0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022f23       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022f38       0x3c arch/i386/rtc.32
                0x00000000c0022f38                vtable for RTC
 .rodata.str1.1
                0x00000000c0022f74       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022fb5        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022fb8       0x6c fs/fat/vfslink.32
                0x00000000c0022fb8                vtable for FAT
 .rodata.str1.1
                0x00000000c0023024       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023024      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002315c       0x6c fs/iso9660/vfslink.32
                0x00000000c002315c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00231c8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002320c       0x34 hal/sound/sndcard.32
                0x00000000c002320c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023240       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002327f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00232b7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023358       0x2c hw/bus/pci.32
                0x00000000c0023358                vtable for PCI
 .rodata.str1.1
                0x00000000c0023384       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002340b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002340c       0x2c hw/diskctrl/ide.32
                0x00000000c002340c                vtable for IDE
 .rodata.str1.4
                0x00000000c0023438       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002345c       0x2c hw/diskctrl/satabus.32
                0x00000000c002345c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023488       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002349a        0x2 
 .rodata._ZTV3ATA
                0x00000000c002349c       0x38 hw/diskphys/ata.32
                0x00000000c002349c                vtable for ATA
 .rodata.str1.1
                0x00000000c00234d4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00234e1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00234e4       0x38 hw/diskphys/atapi.32
                0x00000000c00234e4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002351c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023598       0x38 hw/diskphys/sata.32
                0x00000000c0023598                vtable for SATA
 .rodata.str1.1
                0x00000000c00235d0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00236ba        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00236bc       0x38 hw/diskphys/satapi.32
                0x00000000c00236bc                vtable for SATAPI
 .rodata        0x00000000c00236f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00236fc       0x2c hw/intctrl/apic.32
                0x00000000c00236fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023728       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023743        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023744       0x30 hw/timer/apictimer.32
                0x00000000c0023744                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023774       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023791        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023794       0x30 hw/timer/pit.32
                0x00000000c0023794                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00237c4      0xbbd
 *(.data)
 .data          0x00000000c00237c4        0x0 crti.32
 .data          0x00000000c00237c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00237c4                __dso_handle
 .data          0x00000000c00237c8        0x0 acpica/utclib.32
 .data          0x00000000c00237c8        0x0 core/malloc.32
 .data          0x00000000c00237c8        0x0 libk/ctype.32
 .data          0x00000000c00237c8        0x0 libk/string.32
 .data          0x00000000c00237c8        0x0 fs/fat/diskio.32
 .data          0x00000000c00237c8        0x0 fs/fat/ff.32
 .data          0x00000000c00237c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00237c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00237c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00237c8        0x0 core/computer.32
 .data          0x00000000c00237c8        0x0 core/gdt.32
 .data          0x00000000c00237c8        0x0 core/idle.32
 .data          0x00000000c00237c8        0x0 core/idt.32
 .data          0x00000000c00237c8        0x4 core/kheap.32
 .data          0x00000000c00237cc        0x0 core/main.32
 .data          0x00000000c00237cc        0x4 core/physmgr.32
                0x00000000c00237cc                Phys::bitmap
 .data          0x00000000c00237d0        0x0 core/pipe.32
 *fill*         0x00000000c00237d0       0x10 
 .data          0x00000000c00237e0       0x60 core/terminal.32
                0x00000000c00237e0                VgaText::hiddenOut
                0x00000000c0023800                ansiToVGAMappings
 .data          0x00000000c0023840        0x0 core/tss.32
 .data          0x00000000c0023840        0x4 core/unixfile.32
                0x00000000c0023840                UnixFile::nextFd
 .data          0x00000000c0023844       0x15 core/virtmgr.32
                0x00000000c0023844                Virt::pageAllocPtr
                0x00000000c0023848                Virt::bitmap
                0x00000000c002384c                Virt::swapfileSectorsPerPage
                0x00000000c0023850                Virt::swapfileLength
                0x00000000c0023854                Virt::swapfileSector
                0x00000000c0023858                Virt::swapfileDrive
 *fill*         0x00000000c0023859        0x3 
 .data          0x00000000c002385c        0x4 coreobjs/c++.32
                0x00000000c002385c                __stack_chk_guard
 .data          0x00000000c0023860        0x0 dbg/kconsole.32
 .data          0x00000000c0023860       0x28 dbg/usban.32
                0x00000000c0023860                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023888        0x0 fs/symlink.32
 .data          0x00000000c0023888        0x0 fs/vfs.32
 .data          0x00000000c0023888        0x0 hal/bus.32
 .data          0x00000000c0023888        0x0 hal/buzzer.32
 .data          0x00000000c0023888        0x0 hal/clock.32
 .data          0x00000000c0023888        0x0 hal/device.32
 .data          0x00000000c0023888        0x0 hal/diskctrl.32
 .data          0x00000000c0023888        0x0 hal/diskphys.32
 .data          0x00000000c0023888        0x0 hal/fpu.32
 .data          0x00000000c0023888        0x0 hal/intctrl.32
 .data          0x00000000c0023888        0x0 hal/keybrd.32
 .data          0x00000000c0023888        0x0 hal/logidisk.32
 .data          0x00000000c0023888        0x0 hal/mouse.32
 .data          0x00000000c0023888        0x0 hal/nic.32
 .data          0x00000000c0023888        0x0 hal/partition.32
 .data          0x00000000c0023888        0x0 hal/serial.32
 .data          0x00000000c0023888        0x0 hal/timer.32
 .data          0x00000000c0023888        0x0 hal/vcache.32
 .data          0x00000000c0023888        0x0 hal/video.32
 .data          0x00000000c0023888       0x10 hw/acpi.32
                0x00000000c0023888                legacyIRQRemaps
 .data          0x00000000c0023898        0x4 hw/cpu.32
                0x00000000c0023898                lastCode
 .data          0x00000000c002389c        0x0 krnl/atexit.32
 *fill*         0x00000000c002389c        0x4 
 .data          0x00000000c00238a0      0x142 krnl/bootmsg.32
                0x00000000c00238a0                KiSplashScreen
 .data          0x00000000c00239e2        0x0 krnl/compat.32
 *fill*         0x00000000c00239e2       0x1e 
 .data          0x00000000c0023a00      0x400 krnl/crc32.32
                0x00000000c0023a00                KiPolyLookupCRC32
 .data          0x00000000c0023e00       0x4d krnl/env.32
                0x00000000c0023e00                defaultSysEnv
 .data          0x00000000c0023e4d        0x0 krnl/inlines.32
 .data          0x00000000c0023e4d        0x0 krnl/panic.32
 .data          0x00000000c0023e4d        0x0 krnl/powctrl.32
 .data          0x00000000c0023e4d        0x0 krnl/random.32
 .data          0x00000000c0023e4d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023e4d       0x13 
 .data          0x00000000c0023e60       0x4c krnl/signal.32
                0x00000000c0023e60                KiDefaultSignalHandlers
 *fill*         0x00000000c0023eac       0x14 
 .data          0x00000000c0023ec0       0xfc krnl/syscalls.32
                0x00000000c0023ec0                systemCallHandlers
 .data          0x00000000c0023fbc        0x0 net/ethernet.32
 *fill*         0x00000000c0023fbc        0x4 
 .data          0x00000000c0023fc0      0x100 reg/cm.32
                0x00000000c0023fc0                CmComponents
 .data          0x00000000c00240c0        0x0 reg/registry.32
 .data          0x00000000c00240c0        0x0 sys/eject.32
 .data          0x00000000c00240c0        0x0 sys/exit.32
 .data          0x00000000c00240c0        0x0 sys/getcwd.32
 .data          0x00000000c00240c0        0x0 sys/getpid.32
 .data          0x00000000c00240c0        0x0 sys/getramdata.32
 .data          0x00000000c00240c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00240c0        0x0 sys/kill.32
 .data          0x00000000c00240c0        0x0 sys/loaddll.32
 .data          0x00000000c00240c0        0x0 sys/read.32
 .data          0x00000000c00240c0        0x0 sys/registersignal.32
 .data          0x00000000c00240c0        0x0 sys/registry.32
 .data          0x00000000c00240c0        0x0 sys/sbrk.32
 .data          0x00000000c00240c0        0x0 sys/setcwd.32
 .data          0x00000000c00240c0        0x0 sys/settime.32
 .data          0x00000000c00240c0        0x0 sys/symlink.32
 .data          0x00000000c00240c0        0x0 sys/timezone.32
 .data          0x00000000c00240c0        0x0 sys/truncate.32
 .data          0x00000000c00240c0        0x0 sys/write.32
 .data          0x00000000c00240c0        0x0 sys/wsbe.32
 .data          0x00000000c00240c0        0x0 sys/yield.32
 .data          0x00000000c00240c0        0x0 thr/elf.32
 .data          0x00000000c00240c0        0x4 thr/prcssthr.32
                0x00000000c00240c0                Thr::nextPID
 .data          0x00000000c00240c4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00240c4       0x1c 
 .data          0x00000000c00240e0      0x2a0 arch/i386/hal.32
                0x00000000c00240e0                exceptionNames
 .data          0x00000000c0024380        0x0 arch/i386/pic.32
 .data          0x00000000c0024380        0x0 arch/i386/rtc.32
 .data          0x00000000c0024380        0x0 arch/i386/vga.32
 .data          0x00000000c0024380        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024380        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024380        0x1 fs/iso9660/vfslink.32
                0x00000000c0024380                recentDriveletter
 .data          0x00000000c0024381        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024381        0x0 hal/sound/sndport.32
 .data          0x00000000c0024381        0x0 hw/bus/isa.32
 .data          0x00000000c0024381        0x0 hw/bus/pci.32
 .data          0x00000000c0024381        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024381        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024381        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024381        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024381        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024381        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024381        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024381        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024381        0x0 hw/timer/pit.32
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024381        0x0 crtn.32
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024384        0x0
 .got           0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024384        0x0
 .got.plt       0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024384        0x0
 .igot.plt      0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024384        0x0
 .tm_clone_table
                0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024381      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024381        0x3 
 .eh_frame      0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024384       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00243dc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002441c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024488       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KRNLP2.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
